(this["webpackJsonp"] = this["webpackJsonp"] || []).push([
    ["app-service"], {
        "mainLayoutComponent": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default,
                    uniPopup: r("762b").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("view", [n("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [n("navigation-bar", {
                        attrs: {
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            title: e.ntitle,
                            _i: 2
                        }
                    })], 1), n("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [n("view", [n("view", [n("view", [n("view", {
                        staticClass: e._$s(7, "sc", "display-color-group"),
                        attrs: {
                            _i: 7
                        }
                    }, [n("view", [n("view", e._l(2, (function(t, r, h, a) {
                        return n("view", {
                            key: r,
                            staticClass: e._$s("10-" + a, "sc", "btn-color-group"),
                            attrs: {
                                _i: "10-" + a
                            }
                        }, e._l(5, (function(t, h, i, c) {
                            return n("view", {
                                key: h
                            }, [n("view", {
                                staticClass: e._$s("12-" + a + "-" + c, "sc", "btn-view-style"),
                                attrs: {
                                    "data-tag": e._$s("12-" + a + "-" + c, "a-data-tag", e.colorDisplayOrder[5 * r + h].idx),
                                    _i: "12-" + a + "-" + c
                                },
                                on: {
                                    click: e.btnColorChange
                                }
                            }, [n("view", {
                                staticClass: e._$s("13-" + a + "-" + c, "sc", "btn-view-sub"),
                                attrs: {
                                    _i: "13-" + a + "-" + c
                                }
                            }, [e._$s("14-" + a + "-" + c, "i", 5 * r + h < 7) ? n("view", {
                                staticClass: e._$s("14-" + a + "-" + c, "sc", "btn-view-color"),
                                style: e._$s("14-" + a + "-" + c, "s", "background-color: " + e.colorDisplayOrder[5 * r + h].color + ";"),
                                attrs: {
                                    _i: "14-" + a + "-" + c
                                }
                            }) : e._e(), n("label", {
                                staticClass: e._$s("15-" + a + "-" + c, "sc", "btn-color-text"),
                                attrs: {
                                    _i: "15-" + a + "-" + c
                                }
                            }, [e._v(e._$s("15-" + a + "-" + c, "t0-0", e._s(e.$t(e.colorDisplayOrder[5 * r + h].name))))])])]), n("view", {
                                directives: [{
                                    name: "show",
                                    rawName: "v-show",
                                    value: e._$s("16-" + a + "-" + c, "v-show", e.lineColor == e.colorDisplayOrder[5 * r + h].idx),
                                    expression: "_$s((\"16-\"+$30+'-'+$31),'v-show',lineColor == colorDisplayOrder[i * 5 + n].idx)"
                                }],
                                staticClass: e._$s("16-" + a + "-" + c, "sc", "btn-color-title"),
                                attrs: {
                                    _i: "16-" + a + "-" + c
                                }
                            })])
                        })), 0)
                    })), 0), n("view", e._l(2, (function(t, r, h, a) {
                        return n("view", {
                            key: r,
                            staticClass: e._$s("18-" + a, "sc", "btn-color-group"),
                            attrs: {
                                _i: "18-" + a
                            }
                        }, e._l(5, (function(t, h, i, c) {
                            return n("view", {
                                key: h
                            }, [n("view", {
                                staticClass: e._$s("20-" + a + "-" + c, "sc", "btn-view-style"),
                                attrs: {
                                    "data-tag": e._$s("20-" + a + "-" + c, "a-data-tag", e.segDisplayOrder[5 * r + h].idx),
                                    _i: "20-" + a + "-" + c
                                },
                                on: {
                                    click: e.btnColorChange
                                }
                            }, [n("view", {
                                class: e._$s("21-" + a + "-" + c, "c", "btn-view-sub " + e.segDisplayOrder[5 * r + h].color),
                                attrs: {
                                    _i: "21-" + a + "-" + c
                                }
                            })]), n("view", {
                                directives: [{
                                    name: "show",
                                    rawName: "v-show",
                                    value: e._$s("22-" + a + "-" + c, "v-show", e.lineColor == e.segDisplayOrder[5 * r + h].idx),
                                    expression: "_$s((\"22-\"+$32+'-'+$33),'v-show',lineColor == segDisplayOrder[i2 * 5 + n2].idx)"
                                }],
                                staticClass: e._$s("22-" + a + "-" + c, "sc", "btn-color-title"),
                                attrs: {
                                    _i: "22-" + a + "-" + c
                                }
                            })])
                        })), 0)
                    })), 0)])]), n("view", {
                        attrs: {
                            id: "drawCanvasContainer1",
                            _i: 23
                        }
                    }, [n("view", [n("view", {
                        staticClass: e._$s(25, "sc", "display-btn-group"),
                        attrs: {
                            _i: 25
                        }
                    }, [n("view", {
                        attrs: {
                            _i: 26
                        },
                        on: {
                            click: e.fontSelect
                        }
                    }, [n("view", {
                        staticClass: e._$s(27, "sc", "fun-radio"),
                        style: e._$s(27, "s", e.rtl ? "justify-content: right;margin-right: 20rem;" : ""),
                        attrs: {
                            _i: 27
                        }
                    }, [n("image", {
                        staticClass: e._$s(28, "sc", "font-input-img"),
                        attrs: {
                            _i: 28
                        }
                    }), n("text", {
                        staticClass: e._$s(29, "sc", "font-input-font"),
                        style: e._$s(29, "s", e.rtl ? "margin-right: 10rem; " : "margin-left: 10rem; "),
                        attrs: {
                            _i: 29
                        }
                    }, [e._v(e._$s(29, "t0-0", e._s(e.fontNameList[e.fontIdex] ? e.$t(e.fontNameList[e.fontIdex].name) : "")))])])]), n("image", {
                        staticClass: e._$s(30, "sc", "draw-img-select"),
                        attrs: {
                            _i: 30
                        },
                        on: {
                            click: e.drawAddClick
                        }
                    }), n("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.inputTextX,
                            expression: "inputTextX"
                        }],
                        staticClass: e._$s(31, "sc", "text-input"),
                        style: e._$s(31, "s", e.rtl ? "text-align: right;" : ""),
                        attrs: {
                            placeholder: e._$s(31, "a-placeholder", e.inputNote),
                            _i: 31
                        },
                        domProps: {
                            value: e._$s(31, "v-model", e.inputTextX)
                        },
                        on: {
                            blur: e.inputBlur,
                            input: function(t) {
                                t.target.composing || (e.inputTextX = t.target.value)
                            }
                        }
                    }), n("image", {
                        staticClass: e._$s(32, "sc", "draw-img-select"),
                        style: e._$s(32, "s", e.rtl ? "margin-left: 20rem;" : "margin-right: 20rem;"),
                        attrs: {
                            _i: 32
                        },
                        on: {
                            click: e.chooseImag
                        }
                    })]), e._$s(33, "i", e.features.textStopTime) ? n("view", {
                        staticClass: e._$s(33, "sc", "display-btn-group"),
                        attrs: {
                            _i: 33
                        }
                    }, [n("label", {
                        staticClass: e._$s(34, "sc", "display-btn-lable2"),
                        attrs: {
                            _i: 34
                        }
                    }, [e._v(e._$s(34, "t0-0", e._s(e.$t("\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6"))))]), n("slider", {
                        staticClass: e._$s(35, "sc", "fun-slider"),
                        attrs: {
                            value: e._$s(35, "a-value", e.pisObj.txPointTime),
                            _i: 35
                        },
                        on: {
                            change: e.slPointTimeChange
                        }
                    })]) : e._e(), n("view", {
                        staticClass: e._$s(36, "sc", "drawCanvasContainer0"),
                        attrs: {
                            id: "drawCanvasContainer0",
                            _i: 36
                        }
                    }, [n("view", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e._$s(37, "v-show", e.showCanvas),
                            expression: "_$s(37,'v-show',showCanvas)"
                        }],
                        staticClass: e._$s(37, "sc", "draw-Canvas-Container"),
                        style: e._$s(37, "s", "width: " + e.drawCanvas.w + "px;direction: ltr;"),
                        attrs: {
                            _i: 37
                        }
                    }, [n("canvas", {
                        style: e._$s(38, "s", "height: " + e.drawCanvas.h + "px; width:100%; background-color: #0D1B22; border-radius: 4rem;"),
                        attrs: {
                            id: "imgCanvas",
                            _i: 38
                        }
                    }), n("canvas", {
                        staticClass: e._$s(39, "sc", "draw-Canvas-Sub0"),
                        style: e._$s(39, "s", "height: " + e.drawCanvas.h + "px; width:100%; border-radius: 4rem;"),
                        attrs: {
                            id: "drawCanvas",
                            _i: 39
                        }
                    }), n("canvas", {
                        staticClass: e._$s(40, "sc", "draw-Canvas-Sub"),
                        style: e._$s(40, "s", "height: " + e.drawCanvas.h + "px; width: " + e.drawCanvas.w + "px;"),
                        attrs: {
                            id: "drawCanvasSub",
                            _i: 40
                        },
                        on: {
                            touchcancel: e.touchEndSub,
                            touchend: e.touchEndSub,
                            touchmove: e.touchMoveSub,
                            touchstart: e.touchStartSub
                        }
                    })])]), n("view", {
                        attrs: {
                            id: "btn_draw_group",
                            _i: 41
                        }
                    }, [n("view", {
                        staticClass: e._$s(42, "sc", "btn-draw-group"),
                        style: e._$s(42, "s", "flex-wrap: " + e.btnDrawGroup.wrap + "; overflow-x: " + e.btnDrawGroup.x + ";overflow-y: " + e.btnDrawGroup.y + " width: " + e.btnDrawGroup.w + "px; height: " + e.btnDrawGroup.h + "px;"),
                        attrs: {
                            _i: 42
                        }
                    }, [n("view", {
                        staticClass: e._$s(43, "sc", "button-container"),
                        attrs: {
                            _i: 43
                        }
                    }, [n("button", {
                        staticClass: e._$s(44, "sc", "btn-draw-item"),
                        style: e._$s(44, "s", "padding: 10rem; " + (-1 == e.drawMode ? "border-color: #CCEEFA; background-color: #4FB8EF;" : "border-color: transparent;")),
                        attrs: {
                            _i: 44
                        },
                        on: {
                            click: e.btnDrawChange
                        }
                    }, [n("image", {
                        attrs: {
                            _i: 45
                        }
                    })])]), n("view", {
                        staticClass: e._$s(46, "sc", "button-container"),
                        attrs: {
                            _i: 46
                        }
                    }, [n("button", {
                        staticClass: e._$s(47, "sc", "btn-draw-item"),
                        style: e._$s(47, "s", "padding: 2rem; " + (9999 == e.drawMode && e.textToLeft ? "border-color: #CCEEFA; background-color: #4FB8EF;" : "border-color: transparent;")),
                        attrs: {
                            _i: 47
                        },
                        on: {
                            click: e.btnDrawChange
                        }
                    }, [n("image", {
                        attrs: {
                            _i: 48
                        }
                    })])]), n("view", {
                        staticClass: e._$s(49, "sc", "button-container"),
                        attrs: {
                            _i: 49
                        }
                    }, [n("button", {
                        staticClass: e._$s(50, "sc", "btn-draw-item"),
                        style: e._$s(50, "s", "padding: 2rem; " + (9999 != e.drawMode || e.textToLeft ? "border-color: transparent;" : "border-color: #CCEEFA; background-color: #4FB8EF;")),
                        attrs: {
                            _i: 50
                        },
                        on: {
                            click: e.btnDrawChange
                        }
                    }, [n("image", {
                        attrs: {
                            _i: 51
                        }
                    })])]), e._l(e._$s(52, "f", {
                        forItems: e.objCount
                    }), (function(t, r, h, a) {
                        return n("view", {
                            key: e._$s(52, "f", {
                                forIndex: h,
                                key: r
                            }),
                            staticClass: e._$s("52-" + a, "sc", "button-container"),
                            attrs: {
                                _i: "52-" + a
                            }
                        }, [n("button", {
                            staticClass: e._$s("53-" + a, "sc", "btn-draw-item"),
                            style: e._$s("53-" + a, "s", e.drawMode == r ? "border-color: #CCEEFA; background-color: #4FB8EF;" : "border-color: transparent;"),
                            attrs: {
                                "data-tag": e._$s("53-" + a, "a-data-tag", r),
                                _i: "53-" + a
                            },
                            on: {
                                click: e.btnDrawChange
                            }
                        }, [n("image", {
                            attrs: {
                                src: e._$s("54-" + a, "a-src", "/static/imgs/drawMode" + r + ".png"),
                                _i: "54-" + a
                            }
                        })])])
                    }))], 2)])])]), n("view", [n("view", [n("view", {
                        staticClass: e._$s(57, "sc", "opr-btn"),
                        style: e._$s(57, "s", (e.rtl ? "border-bottom-right-radius: 40rem; border-top-right-radius: 40rem; " : "border-bottom-left-radius: 40rem; border-top-left-radius: 40rem;") + "color: red; background-color: #51D1EA;"),
                        attrs: {
                            _i: 57
                        },
                        on: {
                            click: e.operateAciton
                        }
                    }, [e._v(e._$s(57, "t0-0", e._s(e.$t(e.selectLines.length > 0 ? "\u5220\u9664" : "\u6e05\u7a7a"))))]), n("view", {
                        staticClass: e._$s(58, "sc", "opr-btn btn-linear btn-back"),
                        style: e._$s(58, "s", e.rtl ? "border-bottom-left-radius: 40rem; border-top-left-radius: 40rem; " : "border-bottom-right-radius: 40rem; border-top-right-radius: 40rem;"),
                        attrs: {
                            _i: 58
                        },
                        on: {
                            click: e.backDraw
                        }
                    }, [e._v(e._$s(58, "t0-0", e._s(e.$t("\u56de\u9000"))))])]), n("view", [n("view", {
                        staticClass: e._$s(60, "sc", "opr-btn"),
                        style: e._$s(60, "s", (e.rtl ? "border-bottom-right-radius: 40rem; border-top-right-radius: 40rem; " : "border-bottom-left-radius: 40rem; border-top-left-radius: 40rem;") + "color: blue; background-color: #51D1EA;"),
                        attrs: {
                            _i: 60
                        },
                        on: {
                            click: e.parmSet
                        }
                    }, [e._v(e._$s(60, "t0-0", e._s(e.$t("\u914d\u7f6e"))))]), n("view", {
                        staticClass: e._$s(61, "sc", "opr-btn btn-linear"),
                        style: e._$s(61, "s", e.rtl ? "border-bottom-left-radius: 40rem; border-top-left-radius: 40rem;" : "border-bottom-right-radius: 40rem; border-top-right-radius: 40rem; color: white;"),
                        attrs: {
                            _i: 61
                        },
                        on: {
                            click: e.drawDone
                        }
                    }, [e._v(e._$s(61, "t0-0", e._s(e.$t("\u53d1\u9001"))))])])]), e._$s(62, "i", e.showSending) ? [n("view"), n("canvas", {
                        attrs: {
                            id: "progressCanvas",
                            _i: 64
                        }
                    })] : e._e(), n("uni-popup", {
                        ref: "tips",
                        attrs: {
                            "mask-click": !1,
                            animation: !1,
                            _i: 65
                        }
                    }, [n("view", [n("image", {
                        attrs: {
                            src: e._$s(67, "a-src", r("ffb9")),
                            _i: 67
                        }
                    }), n("view", [n("text", [e._v(e._$s(69, "t0-0", e._s(e.$t("hand_draw_tips"))))])]), n("view", [n("checkbox-group", {
                        staticClass: e._$s(71, "sc", "view-gen-line"),
                        attrs: {
                            _i: 71
                        },
                        on: {
                            change: e.tipsCheckboxChange
                        }
                    }, [n("label", {
                        staticClass: e._$s(72, "sc", "label-parm"),
                        attrs: {
                            _i: 72
                        }
                    }, [n("checkbox", {
                        attrs: {
                            _i: 73
                        }
                    }), e._v(e._$s(72, "t1-0", e._s(e.$t("\u4e0d\u518d\u63d0\u793a"))))])]), n("view", {
                        staticClass: e._$s(74, "sc", "opr-btn btn-linear"),
                        attrs: {
                            _i: 74
                        },
                        on: {
                            click: e.tipsClose
                        }
                    }, [e._v(e._$s(74, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])])]), n("uni-popup", {
                        ref: "popup",
                        attrs: {
                            "mask-click": !1,
                            animation: !1,
                            _i: 75
                        }
                    }, [n("view", [n("view", {
                        attrs: {
                            id: "parent-component",
                            _i: 77
                        }
                    }, [n("view", [n("view", [e._l(e._$s(80, "f", {
                        forItems: e.cnfList,
                        fill: !0
                    }), (function(t, r, h, a) {
                        return [e._$s("81-" + a, "i", t.idx <= 11) ? [n("view", {
                            key: e._$s("82-" + a, "a-key", r + "_0_0"),
                            staticClass: e._$s("82-" + a, "sc", "display-ch-lable"),
                            style: e._$s("82-" + a, "s", (e.cnfIdx == t.idx ? "background-color: #25333D;" : "background-color: #1C2B39;") + "; " + (4 == t.idx ? "height: 60rem; border-top-left-radius: 40rem; border-top-right-radius: 40rem;" : "flex: 1;") + (11 == t.idx ? "height: 60rem; border-bottom-left-radius: 40rem; border-bottom-right-radius: 40rem;" : "flex: 1;")),
                            attrs: {
                                _i: "82-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.chClick(t.idx)
                                }
                            }
                        }, [n("label", {
                            style: e._$s("83-" + a, "s", (e.cnfIdx == t.idx ? "color: #59E2FF;" : "color: #687C8E;") + (e.rtl ? "text-align: right;" : "text-align: left;") + " flex: 1; font-size: 28rem;"),
                            attrs: {
                                _i: "83-" + a
                            }
                        }, [e._v(e._$s("83-" + a, "t0-0", e._s(t.name)))]), n("text", {
                            style: e._$s("84-" + a, "s", (e.cnfIdx == t.idx ? "color: #59E2FF;" : "color: #687C8E;") + (e.rtl ? "text-align: left;" : "text-align: right;") + " width: 50rem; font-size: 22rem; padding-left: 10rem;"),
                            attrs: {
                                _i: "84-" + a
                            }
                        }, [e._v(e._$s("84-" + a, "t0-0", e._s(e.pisObj.cnfValus[t.idx])))])])] : e._e()]
                    }))], 2), n("view", {
                        style: e._$s(85, "s", (e.rtl ? "margin-right: 20rem; " : "margin-left: 20rem; ") + "flex: 1; background-color: #1C2B39; border-radius: 40rem; direction: ltr;"),
                        attrs: {
                            _i: 85
                        }
                    }, [n("canvas", {
                        attrs: {
                            id: "chCanvas",
                            _i: 86
                        },
                        on: {
                            touchstart: e.chTouchstart,
                            touchmove: e.chTouchmove,
                            touchend: e.chTouchend,
                            touchcancel: e.chTouchend
                        }
                    })])])]), n("view", [n("view", {
                        staticClass: e._$s(88, "sc", "opr-btn"),
                        attrs: {
                            _i: 88
                        },
                        on: {
                            click: e.parmReset
                        }
                    }, [e._v(e._$s(88, "t0-0", e._s(e.$t("\u91cd\u7f6e"))))]), n("view", {
                        staticClass: e._$s(89, "sc", "opr-btn btn-linear"),
                        attrs: {
                            _i: 89
                        },
                        on: {
                            click: e.parmClose
                        }
                    }, [e._v(e._$s(89, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])])]), n("uni-popup", {
                        ref: "classNamePopup",
                        attrs: {
                            "mask-click": !1,
                            animation: !1,
                            _i: 90
                        }
                    }, [n("view", [n("view", [n("view"), n("view", [e._v(e._$s(94, "t0-0", e._s(e.$t("\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939"))))]), n("picker", {
                        attrs: {
                            value: e._$s(95, "a-value", e.handDrawClassIdx),
                            range: e._$s(95, "a-range", e.handDrawClassName),
                            _i: 95
                        },
                        on: {
                            change: e.handDrawClassPickerChange
                        }
                    }, [n("view", [e._v(e._$s(96, "t0-0", e._s(e.handDrawClassName[e.handDrawClassIdx])))])]), n("view", [e._v(e._$s(97, "t0-0", e._s(e.$t("\u8bf7\u8f93\u5165\u6587\u4ef6\u540d"))))]), n("input", {
                        attrs: {
                            value: e._$s(98, "a-value", e.drawAddFileName),
                            _i: 98
                        },
                        on: {
                            input: e.picNameNewInput
                        }
                    }), n("view", [n("view", {
                        attrs: {
                            _i: 100
                        },
                        on: {
                            click: e.picNameInputCancelClick
                        }
                    }, [e._v(e._$s(100, "t0-0", e._s(e.$t("\u53d6\u6d88"))))]), n("view"), n("view", {
                        attrs: {
                            _i: 102
                        },
                        on: {
                            click: e.picNameInputOkClick
                        }
                    }, [e._v(e._$s(102, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])]), n("view", {
                        attrs: {
                            _i: 103
                        },
                        on: {
                            click: e.picNameInputCancelClick
                        }
                    })])])], 2)])]), e._$s(104, "i", e.features.xyCnf) ? n("button", {
                        staticClass: e._$s(104, "sc", "floating-button"),
                        style: e._$s(104, "s", {
                            left: e.position.x + "px",
                            top: e.position.y + "px"
                        }),
                        attrs: {
                            _i: 104
                        },
                        on: {
                            touchstart: e.onBtnSetTouchStart,
                            touchmove: e.onBtnSetTouchMove,
                            touchend: e.onBtnSetTouchEnd,
                            click: e.onBtnSetClick
                        }
                    }, [n("image", {
                        attrs: {
                            src: e._$s(105, "a-src", r("18cf")),
                            _i: 105
                        }
                    })]) : e._e()])], 1)
                },
                a = []
        },
        "interopExportModule": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("24c1"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "fontRegistryModule ": function(e, t, r) {
            var n = r("4e7c"),
                h = [{
                    name: "Single Line Font",
                    file: n.DrawFonts,
                    mode: 2,
                    sn: 1004,
                    note: "font_note_1004",
                    msg: "Minimal strokes, no flicker, recommended for use"
                }, {
                    name: "SimSun",
                    file: "simsun_0.woff",
                    mode: 1,
                    sn: 1003,
                    note: "font_note_1003"
                }, {
                    name: "Source Han Sans 1",
                    file: "latin.woff",
                    mode: 1,
                    sn: 1002,
                    note: "font_note_1002"
                }, {
                    name: "Source Han Sans 2",
                    file: "china.woff",
                    mode: 1,
                    sn: 1005,
                    note: "font_note_1005"
                }, {
                    name: "Source Han Sans 3",
                    file: "japan_korea.woff",
                    mode: 1,
                    sn: 1006,
                    note: "font_note_1006"
                }, {
                    name: "Source Han Sans 4",
                    file: "arabic.woff",
                    mode: 1,
                    sn: 1007,
                    note: "font_note_1007"
                }];
            e.exports = {
                getFontNameList: function(e) {
                    for (var t = [], r = 0; r < h.length; r++) {
                        var n = h[r].name,
                            a = h[r].sn;
                        t.push({
                            name: n,
                            sn: a
                        })
                    }
                    return t
                },
                getFontList: function(e) {
                    return h
                }
            }
        },
        "deviceConfigPageComponent ": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [r("navigation-bar", {
                        attrs: {
                            title: e.ntitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), r("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [r("view", [r("view", [r("view", [e._$s(7, "i", -1 != e.dmx) ? r("view", {
                        staticClass: e._$s(7, "sc", "display-btn-group"),
                        attrs: {
                            _i: 7
                        }
                    }, [r("view", [r("image", {
                        staticClass: e._$s(9, "sc", "ico-size"),
                        attrs: {
                            _i: 9
                        }
                    }), r("label", {
                        staticClass: e._$s(10, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 10
                        }
                    }, [e._v(e._$s(10, "t0-0", e._s(e.$t("DMX\u5730\u5740\u7801"))))])]), r("view", [r("view", {
                        staticClass: e._$s(12, "sc", "btn-view-style2"),
                        attrs: {
                            _i: 12
                        },
                        on: {
                            longpress: e.subNumPress,
                            touchend: e.subNumPressEnd,
                            click: e.subNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(13, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 13
                        }
                    }, [r("label", {
                        staticClass: e._$s(14, "sc", "btn-color-text"),
                        attrs: {
                            _i: 14
                        }
                    })])]), r("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.valArr[0],
                            expression: "valArr[0]"
                        }],
                        staticClass: e._$s(15, "sc", "display-input-num"),
                        attrs: {
                            _i: 15
                        },
                        domProps: {
                            value: e._$s(15, "v-model", e.valArr[0])
                        },
                        on: {
                            input: [function(t) {
                                t.target.composing || e.$set(e.valArr, 0, t.target.value)
                            }, e.inputEvent],
                            blur: e.onInputBlur
                        }
                    }), r("view", {
                        staticClass: e._$s(16, "sc", "btn-view-style2"),
                        attrs: {
                            _i: 16
                        },
                        on: {
                            longpress: e.addNumPress,
                            touchend: e.addNumPressEnd,
                            click: e.addNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(17, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 17
                        }
                    }, [r("label", {
                        staticClass: e._$s(18, "sc", "btn-color-text"),
                        attrs: {
                            _i: 18
                        }
                    })])])])]) : e._e(), e._$s(19, "i", -1 == e.dmx) ? r("view", {
                        attrs: {
                            _i: 19
                        }
                    }, [r("view", {
                        staticClass: e._$s(20, "sc", "display-btn-group"),
                        attrs: {
                            _i: 20
                        }
                    }, [r("view", {
                        staticClass: e._$s(21, "sc", "view-row-class"),
                        attrs: {
                            _i: 21
                        }
                    }, [r("label", {
                        staticClass: e._$s(22, "sc", "btn-color-text2"),
                        attrs: {
                            _i: 22
                        }
                    }, [e._v(e._$s(22, "t0-0", e._s(e.$t("\u5730\u5740\u7801"))))]), r("view", {
                        staticClass: e._$s(23, "sc", "btn-view-style"),
                        attrs: {
                            _i: 23
                        },
                        on: {
                            longpress: e.subNumPress,
                            touchend: e.subNumPressEnd,
                            click: e.subNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(24, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 24
                        }
                    }, [r("label", {
                        staticClass: e._$s(25, "sc", "btn-color-text"),
                        attrs: {
                            _i: 25
                        }
                    })])]), r("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.valArr[0],
                            expression: "valArr[0]"
                        }],
                        staticClass: e._$s(26, "sc", "display-input-num"),
                        attrs: {
                            _i: 26
                        },
                        domProps: {
                            value: e._$s(26, "v-model", e.valArr[0])
                        },
                        on: {
                            input: [function(t) {
                                t.target.composing || e.$set(e.valArr, 0, t.target.value)
                            }, e.inputEvent],
                            blur: e.onInputBlur
                        }
                    }), r("view", {
                        staticClass: e._$s(27, "sc", "btn-view-style"),
                        attrs: {
                            _i: 27
                        },
                        on: {
                            longpress: e.addNumPress,
                            touchend: e.addNumPressEnd,
                            click: e.addNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(28, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 28
                        }
                    }, [r("label", {
                        staticClass: e._$s(29, "sc", "btn-color-text"),
                        attrs: {
                            _i: 29
                        }
                    })])])]), r("view", {
                        staticClass: e._$s(30, "sc", "view-row-class"),
                        attrs: {
                            _i: 30
                        }
                    }, [r("label", {
                        staticClass: e._$s(31, "sc", "btn-color-text2"),
                        attrs: {
                            _i: 31
                        }
                    }, [e._v(e._$s(31, "t0-0", e._s(e.$t("\u663e\u793a\u8303\u56f4"))))]), r("view", {
                        staticClass: e._$s(32, "sc", "btn-view-style"),
                        attrs: {
                            _i: 32
                        },
                        on: {
                            longpress: e.subNumPress,
                            touchend: e.subNumPressEnd,
                            click: e.subNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(33, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 33
                        }
                    }, [r("label", {
                        staticClass: e._$s(34, "sc", "btn-color-text"),
                        attrs: {
                            _i: 34
                        }
                    })])]), r("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.valArr1,
                            expression: "valArr1"
                        }],
                        staticClass: e._$s(35, "sc", "display-input-num"),
                        attrs: {
                            _i: 35
                        },
                        domProps: {
                            value: e._$s(35, "v-model", e.valArr1)
                        },
                        on: {
                            input: [function(t) {
                                t.target.composing || (e.valArr1 = t.target.value)
                            }, e.inputEvent],
                            blur: e.onInputBlur
                        }
                    }), r("view", {
                        staticClass: e._$s(36, "sc", "btn-view-style"),
                        attrs: {
                            _i: 36
                        },
                        on: {
                            longpress: e.addNumPress,
                            touchend: e.addNumPressEnd,
                            click: e.addNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(37, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 37
                        }
                    }, [r("label", {
                        staticClass: e._$s(38, "sc", "btn-color-text"),
                        attrs: {
                            _i: 38
                        }
                    })])])])]), r("view", [r("radio-group", {
                        attrs: {
                            _i: 40
                        },
                        on: {
                            change: e.radioChange
                        }
                    }, [r("view", {
                        staticClass: e._$s(41, "sc", "display-xy-group"),
                        attrs: {
                            _i: 41
                        }
                    }, [r("view", {
                        staticClass: e._$s(42, "sc", "display-xy-border"),
                        style: e._$s(42, "s", e.rtl ? "margin-left: 20rem;" : "margin-right: 20rem;"),
                        attrs: {
                            _i: 42
                        }
                    }, [r("label", [e._v(e._$s(43, "t0-0", e._s(e.$t("\u6b63\u5e38\u663e\u793a"))))]), r("view", [r("view", {
                        staticClass: e._$s(45, "sc", "display-xy-radio"),
                        style: e._$s(45, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 45
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(46, "a-checked", 0 == e.xy),
                            _i: 46
                        }
                    }), r("text", {
                        staticClass: e._$s(47, "sc", "text-xy-class"),
                        style: e._$s(47, "s", 0 == e.xy ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 47
                        }
                    })]), r("view", {
                        staticClass: e._$s(48, "sc", "display-xy-radio"),
                        style: e._$s(48, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 48
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(49, "a-checked", 1 == e.xy),
                            _i: 49
                        }
                    }), r("text", {
                        staticClass: e._$s(50, "sc", "text-xy-class"),
                        style: e._$s(50, "s", 1 == e.xy ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 50
                        }
                    })]), r("view", {
                        staticClass: e._$s(51, "sc", "display-xy-radio"),
                        style: e._$s(51, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 51
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(52, "a-checked", 2 == e.xy),
                            _i: 52
                        }
                    }), r("text", {
                        staticClass: e._$s(53, "sc", "text-xy-class"),
                        style: e._$s(53, "s", 2 == e.xy ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 53
                        }
                    })]), r("view", {
                        staticClass: e._$s(54, "sc", "display-xy-radio"),
                        style: e._$s(54, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 54
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(55, "a-checked", 3 == e.xy),
                            _i: 55
                        }
                    }), r("text", {
                        staticClass: e._$s(56, "sc", "text-xy-class"),
                        style: e._$s(56, "s", 3 == e.xy ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 56
                        }
                    })])])]), r("view", {
                        staticClass: e._$s(57, "sc", "display-xy-border"),
                        style: e._$s(57, "s", e.rtl ? "margin-right: 20rem;" : "margin-left: 20rem;"),
                        attrs: {
                            _i: 57
                        }
                    }, [r("label", [e._v(e._$s(58, "t0-0", e._s(e.$t("XY\u4e92\u6362"))))]), r("view", [r("view", {
                        staticClass: e._$s(60, "sc", "display-xy-radio"),
                        style: e._$s(60, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 60
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(61, "a-checked", 4 == e.xy),
                            _i: 61
                        }
                    }), r("text", {
                        staticClass: e._$s(62, "sc", "text-xy-class"),
                        style: e._$s(62, "s", 4 == e.xy ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 62
                        }
                    })]), r("view", {
                        staticClass: e._$s(63, "sc", "display-xy-radio"),
                        style: e._$s(63, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 63
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(64, "a-checked", 5 == e.xy),
                            _i: 64
                        }
                    }), r("text", {
                        staticClass: e._$s(65, "sc", "text-xy-class"),
                        style: e._$s(65, "s", 5 == e.xy ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 65
                        }
                    })]), r("view", {
                        staticClass: e._$s(66, "sc", "display-xy-radio"),
                        style: e._$s(66, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 66
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(67, "a-checked", 6 == e.xy),
                            _i: 67
                        }
                    }), r("text", {
                        staticClass: e._$s(68, "sc", "text-xy-class"),
                        style: e._$s(68, "s", 6 == e.xy ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 68
                        }
                    })]), r("view", {
                        staticClass: e._$s(69, "sc", "display-xy-radio"),
                        style: e._$s(69, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 69
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(70, "a-checked", 7 == e.xy),
                            _i: 70
                        }
                    }), r("text", {
                        staticClass: e._$s(71, "sc", "text-xy-class"),
                        style: e._$s(71, "s", 7 == e.xy ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 71
                        }
                    })])])])])])]), r("view", {
                        staticClass: e._$s(72, "sc", "view-rgb-class"),
                        attrs: {
                            _i: 72
                        }
                    }, [r("view", {
                        staticClass: e._$s(73, "sc", "view-row-class"),
                        attrs: {
                            _i: 73
                        }
                    }, [r("view", {
                        staticClass: e._$s(74, "sc", "btn-view-color-class"),
                        attrs: {
                            _i: 74
                        }
                    }, [r("view"), r("label", {
                        staticClass: e._$s(76, "sc", "btn-view-text"),
                        attrs: {
                            _i: 76
                        }
                    }, [e._v(e._$s(76, "t0-0", e._s(e.$t("\u7ea2\u5149\u8c03\u5149"))))])]), r("view", {
                        staticClass: e._$s(77, "sc", "view-rgb-inut"),
                        style: e._$s(77, "s", "opacity: " + (0 != e.cfg ? "1;" : "0.5; pointer-events: none;")),
                        attrs: {
                            _i: 77
                        }
                    }, [r("view", {
                        staticClass: e._$s(78, "sc", "btn-view-style"),
                        attrs: {
                            _i: 78
                        },
                        on: {
                            longpress: e.subNumPress,
                            touchend: e.subNumPressEnd,
                            click: e.subNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(79, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 79
                        }
                    }, [r("label", {
                        staticClass: e._$s(80, "sc", "btn-color-text"),
                        attrs: {
                            _i: 80
                        }
                    })])]), r("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.valArr2,
                            expression: "valArr2"
                        }],
                        staticClass: e._$s(81, "sc", "display-input-num"),
                        attrs: {
                            _i: 81
                        },
                        domProps: {
                            value: e._$s(81, "v-model", e.valArr2)
                        },
                        on: {
                            input: function(t) {
                                t.target.composing || (e.valArr2 = t.target.value)
                            }
                        }
                    }), r("view", {
                        staticClass: e._$s(82, "sc", "btn-view-style"),
                        attrs: {
                            _i: 82
                        },
                        on: {
                            longpress: e.addNumPress,
                            touchend: e.addNumPressEnd,
                            click: e.addNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(83, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 83
                        }
                    }, [r("label", {
                        staticClass: e._$s(84, "sc", "btn-color-text"),
                        attrs: {
                            _i: 84
                        }
                    })])])])]), r("view", {
                        staticClass: e._$s(85, "sc", "view-row-class"),
                        attrs: {
                            _i: 85
                        }
                    }, [r("view", {
                        staticClass: e._$s(86, "sc", "btn-view-color-class"),
                        attrs: {
                            _i: 86
                        }
                    }, [r("view"), r("label", {
                        staticClass: e._$s(88, "sc", "btn-view-text"),
                        attrs: {
                            _i: 88
                        }
                    }, [e._v(e._$s(88, "t0-0", e._s(e.$t("\u7eff\u5149\u8c03\u5149"))))])]), r("view", {
                        staticClass: e._$s(89, "sc", "view-rgb-inut"),
                        style: e._$s(89, "s", "opacity: " + (0 != e.cfg ? "1;" : "0.5; pointer-events: none;")),
                        attrs: {
                            _i: 89
                        }
                    }, [r("view", {
                        staticClass: e._$s(90, "sc", "btn-view-style"),
                        attrs: {
                            _i: 90
                        },
                        on: {
                            longpress: e.subNumPress,
                            touchend: e.subNumPressEnd,
                            click: e.subNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(91, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 91
                        }
                    }, [r("label", {
                        staticClass: e._$s(92, "sc", "btn-color-text"),
                        attrs: {
                            _i: 92
                        }
                    })])]), r("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.valArr3,
                            expression: "valArr3"
                        }],
                        staticClass: e._$s(93, "sc", "display-input-num"),
                        attrs: {
                            _i: 93
                        },
                        domProps: {
                            value: e._$s(93, "v-model", e.valArr3)
                        },
                        on: {
                            input: function(t) {
                                t.target.composing || (e.valArr3 = t.target.value)
                            }
                        }
                    }), r("view", {
                        staticClass: e._$s(94, "sc", "btn-view-style"),
                        attrs: {
                            _i: 94
                        },
                        on: {
                            longpress: e.addNumPress,
                            touchend: e.addNumPressEnd,
                            click: e.addNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(95, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 95
                        }
                    }, [r("label", {
                        staticClass: e._$s(96, "sc", "btn-color-text"),
                        attrs: {
                            _i: 96
                        }
                    })])])])]), r("view", {
                        staticClass: e._$s(97, "sc", "view-row-class"),
                        attrs: {
                            _i: 97
                        }
                    }, [r("view", {
                        staticClass: e._$s(98, "sc", "btn-view-color-class"),
                        attrs: {
                            _i: 98
                        }
                    }, [r("view"), r("label", {
                        staticClass: e._$s(100, "sc", "btn-view-text"),
                        attrs: {
                            _i: 100
                        }
                    }, [e._v(e._$s(100, "t0-0", e._s(e.$t("\u84dd\u5149\u8c03\u5149"))))])]), r("view", {
                        staticClass: e._$s(101, "sc", "view-rgb-inut"),
                        style: e._$s(101, "s", "opacity: " + (0 != e.cfg ? "1;" : "0.5; pointer-events: none;")),
                        attrs: {
                            _i: 101
                        }
                    }, [r("view", {
                        staticClass: e._$s(102, "sc", "btn-view-style"),
                        attrs: {
                            _i: 102
                        },
                        on: {
                            longpress: e.subNumPress,
                            touchend: e.subNumPressEnd,
                            click: e.subNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(103, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 103
                        }
                    }, [r("label", {
                        staticClass: e._$s(104, "sc", "btn-color-text"),
                        attrs: {
                            _i: 104
                        }
                    })])]), r("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.valArr4,
                            expression: "valArr4"
                        }],
                        staticClass: e._$s(105, "sc", "display-input-num"),
                        attrs: {
                            _i: 105
                        },
                        domProps: {
                            value: e._$s(105, "v-model", e.valArr4)
                        },
                        on: {
                            input: function(t) {
                                t.target.composing || (e.valArr4 = t.target.value)
                            }
                        }
                    }), r("view", {
                        staticClass: e._$s(106, "sc", "btn-view-style"),
                        attrs: {
                            _i: 106
                        },
                        on: {
                            longpress: e.addNumPress,
                            touchend: e.addNumPressEnd,
                            click: e.addNum
                        }
                    }, [r("view", {
                        staticClass: e._$s(107, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 107
                        }
                    }, [r("label", {
                        staticClass: e._$s(108, "sc", "btn-color-text"),
                        attrs: {
                            _i: 108
                        }
                    })])])])])]), r("view", [r("radio-group", {
                        staticClass: e._$s(110, "sc", "radio-group-class"),
                        attrs: {
                            _i: 110
                        },
                        on: {
                            change: e.radioChange
                        }
                    }, [r("label", {
                        staticClass: e._$s(111, "sc", "btn-color-text2"),
                        style: e._$s(111, "s", e.rtl ? "margin-left: 20rem;width: 140rem;" : "margin-right: 20rem;"),
                        attrs: {
                            _i: 111
                        }
                    }, [e._v(e._$s(111, "t0-0", e._s(e.$t("\u6fc0\u5149\u5149\u6e90"))))]), r("view", [r("label", {
                        staticClass: e._$s(113, "sc", "fun-radio"),
                        style: e._$s(113, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 113
                        }
                    }, [r("radio", {
                        attrs: {
                            disabled: e._$s(114, "a-disabled", e.showCtr.light1),
                            checked: e._$s(114, "a-checked", 1 == e.light),
                            _i: 114
                        }
                    }), r("text", {
                        staticClass: e._$s(115, "sc", "text-xy-class"),
                        style: e._$s(115, "s", 1 == e.light ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 115
                        }
                    }, [e._v(e._$s(115, "t0-0", e._s(e.$t("\u5355\u8272"))))])]), e._$s(116, "i", e.showCtr.light2) ? r("label", {
                        staticClass: e._$s(116, "sc", "fun-radio"),
                        style: e._$s(116, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 116
                        }
                    }, [r("radio", {
                        attrs: {
                            disabled: e._$s(117, "a-disabled", e.rdDisabled),
                            checked: e._$s(117, "a-checked", 2 == e.light),
                            _i: 117
                        }
                    }), r("text", {
                        staticClass: e._$s(118, "sc", "text-xy-class"),
                        style: e._$s(118, "s", 2 == e.light ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 118
                        }
                    }, [e._v(e._$s(118, "t0-0", e._s(e.$t("\u53cc\u8272"))))])]) : e._e(), r("label", {
                        staticClass: e._$s(119, "sc", "fun-radio"),
                        style: e._$s(119, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 119
                        }
                    }, [r("radio", {
                        attrs: {
                            disabled: e._$s(120, "a-disabled", e.showCtr.light3),
                            checked: e._$s(120, "a-checked", 3 == e.light),
                            _i: 120
                        }
                    }), r("text", {
                        staticClass: e._$s(121, "sc", "text-xy-class"),
                        style: e._$s(121, "s", 3 == e.light ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 121
                        }
                    }, [e._v(e._$s(121, "t0-0", e._s(e.$t("\u5168\u5f69"))))])]), e._$s(122, "i", e.showCtr.lightExt) ? r("label", {
                        staticClass: e._$s(122, "sc", "fun-radio"),
                        attrs: {
                            _i: 122
                        }
                    }) : e._e()])]), r("radio-group", {
                        staticClass: e._$s(123, "sc", "radio-group-class"),
                        attrs: {
                            _i: 123
                        },
                        on: {
                            change: e.radioChange
                        }
                    }, [r("label", {
                        staticClass: e._$s(124, "sc", "btn-color-text2"),
                        style: e._$s(124, "s", e.rtl ? "margin-left: 20rem;width: 140rem;" : "margin-right: 20rem;"),
                        attrs: {
                            _i: 124
                        }
                    }, [e._v(e._$s(124, "t0-0", e._s(e.$t("\u8c03\u5236\u6a21\u5f0f"))))]), r("view", [r("label", {
                        staticClass: e._$s(126, "sc", "fun-radio"),
                        style: e._$s(126, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 126
                        }
                    }, [r("radio", {
                        attrs: {
                            disabled: e._$s(127, "a-disabled", !e.features.ttlAn),
                            checked: e._$s(127, "a-checked", 0 == e.cfg),
                            _i: 127
                        }
                    }), r("text", {
                        staticClass: e._$s(128, "sc", "text-xy-class"),
                        style: e._$s(128, "s", 0 == e.cfg ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 128
                        }
                    })]), r("label", {
                        staticClass: e._$s(129, "sc", "fun-radio"),
                        style: e._$s(129, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 129
                        }
                    }, [r("radio", {
                        attrs: {
                            disabled: e._$s(130, "a-disabled", !e.features.ttlAn),
                            checked: e._$s(130, "a-checked", 255 == e.cfg),
                            _i: 130
                        }
                    }), r("text", {
                        staticClass: e._$s(131, "sc", "text-xy-class"),
                        style: e._$s(131, "s", 255 == e.cfg ? "color: #76CEE7;" : ""),
                        attrs: {
                            _i: 131
                        }
                    })]), r("label", {
                        staticClass: e._$s(132, "sc", "fun-radio"),
                        attrs: {
                            _i: 132
                        }
                    })])]), r("radio-group", {
                        staticClass: e._$s(133, "sc", "radio-group-class"),
                        attrs: {
                            _i: 133
                        },
                        on: {
                            change: e.radioChange
                        }
                    }, [r("label", {
                        staticClass: e._$s(134, "sc", "btn-color-text2"),
                        style: e._$s(134, "s", e.rtl ? "margin-left: 20rem;width: 140rem;" : "margin-right: 20rem;"),
                        attrs: {
                            _i: 134
                        }
                    }, [e._v(e._$s(134, "t0-0", e._s(e.$t("\u7cfb\u7edf\u8bed\u8a00"))))]), r("label", {
                        staticClass: e._$s(135, "sc", "fun-radio"),
                        style: e._$s(135, "s", "flex: 1; " + (e.rtl ? "justify-content: right;" : "")),
                        attrs: {
                            _i: 135
                        },
                        on: {
                            click: e.selectLang
                        }
                    }, [r("text", {
                        staticClass: e._$s(136, "sc", "text-xy-class"),
                        style: e._$s(136, "s", (e.rtl ? "padding-right: 36rem;" : "padding-left: 36rem;") + " color: #76CEE7; text-decoration: underline; text-underline-offset: 12rem;"),
                        attrs: {
                            _i: 136
                        }
                    }, [e._v(e._$s(136, "t0-0", e._s(e.langName)))])])]), r("view", {
                        staticClass: e._$s(137, "sc", "radio-group-class"),
                        attrs: {
                            _i: 137
                        }
                    }, [r("label", {
                        staticClass: e._$s(138, "sc", "btn-color-text2"),
                        style: e._$s(138, "s", e.rtl ? "margin-left: 20rem;width: 140rem;" : "margin-right: 20rem;"),
                        attrs: {
                            _i: 138
                        }
                    }, [e._v(e._$s(138, "t0-0", e._s(e.$t("\u8f6f\u4ef6\u7248\u672c"))))]), r("label", {
                        staticClass: e._$s(139, "sc", "fun-radio"),
                        style: e._$s(139, "s", "flex: 1; " + (e.rtl ? "justify-content: right;" : "")),
                        attrs: {
                            _i: 139
                        }
                    }, [r("text", {
                        staticClass: e._$s(140, "sc", "text-xy-class"),
                        style: e._$s(140, "s", (e.rtl ? "padding-right: 36rem;" : "padding-left: 36rem;") + " color: #76CEE7;"),
                        attrs: {
                            _i: 140
                        }
                    }, [e._v(e._$s(140, "t0-0", e._s(e.version ? e.version : "1.1.1")))])])]), r("view", {
                        staticClass: e._$s(141, "sc", "radio-group-class"),
                        attrs: {
                            _i: 141
                        }
                    }, [r("label", {
                        staticClass: e._$s(142, "sc", "btn-color-text2"),
                        style: e._$s(142, "s", e.rtl ? "margin-left: 20rem;width: 140rem;" : "margin-right: 20rem;"),
                        attrs: {
                            _i: 142
                        }
                    }, [e._v(e._$s(142, "t0-0", e._s(e.$t("\u5f53\u524d\u673a\u578b"))))]), r("label", {
                        staticClass: e._$s(143, "sc", "fun-radio"),
                        style: e._$s(143, "s", "flex: 1; align-content: center; " + (e.rtl ? "justify-content: right;" : "")),
                        attrs: {
                            _i: 143
                        }
                    }, [r("text", {
                        staticClass: e._$s(144, "sc", "text-xy-class"),
                        style: e._$s(144, "s", (e.rtl ? "padding-right: 36rem;" : "padding-left: 36rem;") + " color: #76CEE7;"),
                        attrs: {
                            _i: 144
                        }
                    }, [e._v(e._$s(144, "t0-0", e._s(e.machine)))])])])])]) : e._e()])])])])], 1)
                },
                a = []
        },
        "fontGeometryUtils ": function(e, t) {
            function r(e, t, r) {
                var n = {
                        x: e[0] - t[0],
                        y: e[1] - t[1]
                    },
                    h = {
                        x: r[0] - t[0],
                        y: r[1] - t[1]
                    },
                    a = n.x * h.x + n.y * h.y,
                    i = Math.sqrt(Math.pow(n.x, 2) + Math.pow(n.y, 2)),
                    c = Math.sqrt(Math.pow(h.x, 2) + Math.pow(h.y, 2));
                if (0 == i || 0 == c) return 0;
                var o = Math.acos(a / (i * c)),
                    s = 180 * o / Math.PI;
                return s
            }

            function n(e, t, r) {
                var n = {
                        w: r.w,
                        h: -r.h
                    },
                    h = (e[1] - t[1]) / (t[0] - e[0]),
                    a = -t[1] - h * t[0],
                    i = [];
                a <= 0 && a >= n.h && (t[0] < 0 || e[0] < 0) && (i = [0, -a]);
                var c = h * n.w + a;
                if (c <= 0 && c >= n.h && (t[0] > n.w || e[0] > n.w) && (i = [n.w, -c]), 0 != h) {
                    var o = -a / h;
                    o >= 0 && o <= n.w && (t[1] < 0 || e[1] < 0) && (i = [o, 0]);
                    var s = (n.h - a) / h;
                    s >= 0 && s <= n.w && (t[1] > -n.h || e[1] > -n.h) && (i = [s, -n.h])
                }
                return i.length > 0 && i.push(1), i
            }

            function h(e) {
                return /[\u4E00-\u9FA5]/.test(e)
            }
            e.exports = {
                fontData: null,
                ifHasChinese: function(e) {
                    if (null == e) return !1;
                    for (var t = 0; t < e.length; t++)
                        if (h(e[t])) return !0;
                    return !1
                },
                parseLines: function(e) {
                    for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                            w: 800,
                            h: 800
                        }, r = [], h = [], a = 0; a < e.length; a++) {
                        var i = e[a];
                        if (i[0] < 0 || i[0] > t.w || i[1] < 0 || i[1] > t.h) {
                            if (0 != h.length) {
                                var c = n(h[h.length - 1], i, t);
                                c.length > 0 && h.push(c), r.push(h), h = []
                            }
                        } else {
                            if (a > 0 && 0 == h.length) {
                                var o = e[a - 1];
                                if (o[0] < 0 || o[0] > t.w || o[1] < 0 || o[1] > t.h) {
                                    var s = n(o, i, t);
                                    s.length > 0 && h.push(s)
                                }
                            }
                            h.push(i)
                        }
                    }
                    return h.length > 0 && r.push(h), r
                },
                readTTF: function(e, t, r) {
                    2 != t ? plus.io.resolveLocalFileSystemURL("_www/static/app-plus/font/" + e, (function(e) {
                        e.file((function(e) {
                            var n = new plus.io.FileReader;
                            n.onloadend = function(e) {
                                var n = e.target.result,
                                    h = n.split(",")[1];
                                r(h, t)
                            }, n.onerror = function() {
                                uni.hideLoading(), uni.showToast({
                                    title: "\u8bfb\u53d6\u5b57\u4f53\u5931\u8d25",
                                    icon: "none"
                                })
                            }, n.readAsDataURL(e)
                        }))
                    }), (function(e) {
                        uni.hideLoading(), uni.showToast({
                            title: "\u5b57\u4f53\u6587\u4ef6\u89e3\u6790\u5931\u8d25\uff1a" + JSON.stringify(e),
                            icon: "none"
                        })
                    })) : r(e, t)
                },
                dealLine: function(e) {
                    var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                        n = [],
                        h = e[0];
                    n.push([h[0], h[1], 0, 1]);
                    for (var a = 1; a < e.length - 1; a++) {
                        var i = e[a],
                            c = e[a + 1],
                            o = r(h, i, c);
                        if (0 != o && 180 != o) {
                            var s = o <= 135 ? 1 : 0;
                            t || (s = 0), n.push([i[0], i[1], 1, s]), h = i
                        }
                    }
                    var l = e[e.length - 1];
                    return n.push([l[0], l[1], 1, 1]), n
                }
            }
        },
        "textLineVectorizer ": function(e, t, r) {
            (function(t) {
                var n = r("34cf"),
                    h = r("af34"),
                    a = r("35ce");

                function i(e, t, r, n) {
                    for (var h = [], a = 0; a <= 1; a += 1 / n) {
                        var i = Math.pow(1 - a, 2) * e.x + 2 * (1 - a) * a * t.x + Math.pow(a, 2) * r.x,
                            c = Math.pow(1 - a, 2) * e.y + 2 * (1 - a) * a * t.y + Math.pow(a, 2) * r.y;
                        h.push({
                            x: i,
                            y: c,
                            z: 0
                        })
                    }
                    return h
                }

                function c(e, t) {
                    return e.length, e.push(t), !0
                }

                function o(e) {
                    for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5, r = [], n = [], h = 0, a = 0; a < e.length; a++) {
                        var o = e[a];
                        if ("M" == o.type) {
                            var s = {
                                x: o.x,
                                y: o.y,
                                z: 1
                            };
                            h = c(n, s) ? h : h + 1
                        }
                        if ("L" == o.type) {
                            var l = {
                                x: o.x,
                                y: o.y,
                                z: 1
                            };
                            h = c(n, l) ? h : h + 1
                        }
                        if ("Q" == o.type)
                            for (var p = i(n[n.length - 1], {
                                    x: o.x1,
                                    y: o.y1
                                }, {
                                    x: o.x,
                                    y: o.y
                                }, t), d = 0; d < p.length; d++) h = c(n, p[d]) ? h : h + 1;
                        if ("Z" == o.type) {
                            var b = n[0],
                                g = n[n.length - 1];
                            b.z = 0, 999 == g.z && n.pop(), n.length - h > 2 && n.push(b), r.push(n), n = [], h = 0
                        }
                    }
                    return r
                }

                function s(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 145,
                        r = arguments.length > 2 ? arguments[2] : void 0;
                    point1 = {
                        x: e[0].x,
                        y: e[0].y,
                        z: 1
                    };
                    for (var n = 1; n < e.length - 1; n++) {
                        var h = {
                                x: e[n].x,
                                y: e[n].y,
                                z: e[n].z
                            },
                            a = {
                                x: e[n + 1].x,
                                y: e[n + 1].y,
                                z: e[n + 1].z
                            },
                            i = j([point1.x, point1.y], [h.x, h.y], [a.x, a.y]);
                        (r || 1 == e[n].z) && (e[n].z = i <= t && i > 0 ? 1 : 0), point1 = h
                    }
                    return e
                }

                function l(e, t, r) {
                    var n = e.lines,
                        h = e.w,
                        a = e.h,
                        i = {
                            left: 99999,
                            top: 99999,
                            right: -99999,
                            bottom: -99999,
                            width: 0,
                            height: 0,
                            x0: 0,
                            y0: 0
                        };
                    if (0 == n.length) i = {
                        left: 0,
                        top: 0,
                        right: 0,
                        bottom: 0,
                        width: 200,
                        height: 200,
                        x0: 0,
                        y0: 0
                    };
                    else {
                        for (var c = 0; c < n.length; c++)
                            for (var o = n[c], s = 0; s < o.length; s++) {
                                var l = [o[s].x, o[s].y];
                                i.left = Math.min(i.left, l[0]), i.top = Math.min(i.top, l[1]), i.right = Math.max(i.right, l[0]), i.bottom = Math.max(i.bottom, l[1])
                            }
                        i.width = i.right - i.left, i.height = i.bottom - i.top, i.x0 = i.left + i.width / 2, i.y0 = i.top + i.height / 2
                    }
                    for (var p = [], d = 0; d < n.length; d++) {
                        for (var b = n[d], g = [], j = 0; j < b.length; j++) {
                            var x = {
                                x: b[j].x,
                                y: b[j].y,
                                z: b[j].z
                            };
                            t ? x.x = r ? -x.x + 2 * i.x0 - i.left + 20 : x.x - i.left + 20 : x.y = x.y - i.top + 20, g.push(x)
                        }
                        p.push(g)
                    }
                    t ? h = i.width + 40 : a = i.height + 40;
                    var V = {
                        lines: p,
                        w: h,
                        h: a
                    };
                    return V
                }

                function p(e, t, r, n, h) {
                    for (var a = 0, i = 0, c = 0; c < e.length; c++) {
                        e[c] = l(e[c], r, h);
                        var o = e[c];
                        r ? (a += o.w, i = o.h) : (a = o.w, i += o.h)
                    }
                    for (var p = [], b = -a / 2, g = i / 2, x = 0, V = 0, f = 0; f < e.length; f++) {
                        var F = e[f],
                            k = F.lines;
                        r || (x = -F.w / 2, b = 0);
                        for (var m = 0; m < k.length; m++) {
                            var P = k[m],
                                u = [],
                                X = {
                                    x: b + P[0].x + x,
                                    y: g - P[0].y + V,
                                    z: 1
                                };
                            if (n)
                                if (t) P = s(P, 135, !1);
                                else {
                                    var N = 1;
                                    while (N < P.length) {
                                        var H = {
                                            x: b + P[N].x + x,
                                            y: g - P[N].y + V,
                                            z: P[N].z
                                        };
                                        d(X, H) < 2 ? P.splice(N, 1) : (N++, X = H)
                                    }
                                    P = s(P, 145, !0)
                                } X = {
                                x: b + P[0].x + x,
                                y: g - P[0].y + V,
                                z: 1
                            }, u.push(X);
                            var z = 1;
                            while (z < P.length - 1) {
                                var Q = {
                                        x: b + P[z].x + x,
                                        y: g - P[z].y + V,
                                        z: P[z].z
                                    },
                                    R = {
                                        x: b + P[z + 1].x + x,
                                        y: g - P[z + 1].y + V,
                                        z: P[z + 1].z
                                    };
                                if (n) {
                                    var v = j([X.x, X.y], [Q.x, Q.y], [R.x, R.y]);
                                    if ((0 == v || v > 174) && 0 == Q.z) {
                                        P.splice(z, 1), z > 1 && (z--, u.pop(), X = u[u.length - 1]);
                                        continue
                                    }
                                    if (0 == Q.z && d(u[u.length - 1], Q) < 20) {
                                        P.splice(z, 1), z > 1 && (z--, u.pop(), X = u[u.length - 1]);
                                        continue
                                    }
                                }
                                u.push(Q), X = Q, z++
                            }
                            var I = {
                                x: b + P[P.length - 1].x + x,
                                y: g - P[P.length - 1].y + V,
                                z: 1
                            };
                            u.push(I), p.push([f, u, F.w, F.h])
                        }
                        if (0 == k.length) {
                            var w = [{
                                x: b + F.w / 2 + x,
                                y: 0,
                                z: 0
                            }];
                            p.push([f, w, F.w, F.h])
                        }
                        r ? x += F.w : V -= F.h
                    }
                    return n && !t && (p = function(e) {
                        for (var t = 0; t < e.length; t++) {
                            var r = e[t][1];
                            if (!(r.length < 4)) {
                                var n = j([r[r.length - 2].x, r[r.length - 2].y], [r[0].x, r[0].y], [r[1].x, r[1].y]);
                                if (n > 145 || 0 == n)
                                    for (var h = 1; h < r.length - 1; h++) {
                                        var a = [];
                                        if (1 == r[h].z) {
                                            for (var i = h; i < r.length - 1; i++) a.push(r[i]);
                                            for (var c = 0; c <= h; c++) 0 == c && (r[c].z = 0), a.push(r[c]);
                                            0 != a.length && (e[t][1] = a);
                                            break
                                        }
                                    }
                            }
                        }
                        return e
                    }(p)), p
                }

                function d(e, t) {
                    var r = Math.pow(e.x - t.x, 2),
                        n = Math.pow(e.y - t.y, 2),
                        h = Math.sqrt(r + n);
                    return h
                }

                function b(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 145,
                        r = arguments.length > 2 ? arguments[2] : void 0;
                    point1 = {
                        x: e[0][0],
                        y: e[0][1],
                        z: 1
                    };
                    for (var n = 1; n < e.length - 1; n++) {
                        var h = {
                                x: e[n][0],
                                y: e[n][1],
                                z: e[n][3]
                            },
                            a = {
                                x: e[n + 1][0],
                                y: e[n + 1][1],
                                z: e[n + 1][3]
                            },
                            i = j([point1.x, point1.y], [h.x, h.y], [a.x, a.y]);
                        (r || 1 == e[n][3]) && (e[n][3] = i <= t && i > 0 ? 1 : 0), point1 = h
                    }
                    return e
                }

                function g(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 145;
                    if (e.length < 4) return e;
                    if (e[0][0] != e[e.length - 1][0] || e[0][1] != e[e.length - 1][1]) return e;
                    var r = j([e[e.length - 2][0], e[e.length - 2][1]], [e[0][0], e[0][1]], [e[1][0], e[1][1]]);
                    if (r > t || 0 == r)
                        for (var n = 1; n < e.length - 1; n++) {
                            var h = [];
                            if (1 == e[n][3]) {
                                for (var a = n; a < e.length - 1; a++) a == n ? h.push([e[a][0], e[a][1], 0, e[a][3]]) : h.push(e[a]);
                                for (var i = 0; i <= n; i++) 0 == i && (e[i][3] = 0, e[i][2] = e[i + 1][2]), h.push(e[i]);
                                if (0 != h.length) return h;
                                break
                            }
                        }
                    return e
                }

                function j(e, t, r) {
                    var n = {
                            x: e[0] - t[0],
                            y: e[1] - t[1]
                        },
                        h = {
                            x: r[0] - t[0],
                            y: r[1] - t[1]
                        },
                        a = n.x * h.x + n.y * h.y,
                        i = Math.sqrt(Math.pow(n.x, 2) + Math.pow(n.y, 2)),
                        c = Math.sqrt(Math.pow(h.x, 2) + Math.pow(h.y, 2));
                    if (0 == i || 0 == c) return 0;
                    var o = Math.acos(a / (i * c)),
                        s = 180 * o / Math.PI;
                    return s
                }

                function x(e) {
                    return /[\u0600-\u06FF\uFE80-\uFEFF]/.test(e)
                }

                function V(e) {
                    if ("" == e) return !1;
                    for (var t = 0; t < e.length; t++)
                        if (x(e[t])) return !0;
                    return !1
                }

                function f(e) {
                    for (var t = "", r = "", n = 0, h = 0; h < e.length; h++) {
                        var a = e[h];
                        x(a) ? (0 == n && (t = r + t, r = ""), n = 1, r += a) : " " == a ? (t = t + r + a, r = "", n = 0) : (1 == n && (t = r + t, r = ""), n = 0, r = a + r)
                    }
                    return "" != r && (t += r), t = t.split("").reverse().join(""), t
                }

                function F(e, t, r, n) {
                    for (var h = [], a = [], i = 0; i < e.length; i++) {
                        for (var c = [], o = [], s = 0; s < e[i].length; s++) {
                            var l = e[i][s];
                            c.push({
                                x: l.y,
                                y: -l.x + r / 2 + .4 * n,
                                z: l.z
                            }), o.push({
                                x: -l.y,
                                y: -l.x + r / 2 + .4 * n,
                                z: l.z
                            })
                        }
                        h.push(c), a.push(o)
                    }
                    return {
                        newLinesUp: h,
                        newLinesDown: a
                    }
                }

                function k(e, r, n) {
                    var h = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 5,
                        i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                    try {
                        var c = 400,
                            s = n,
                            l = V(s);
                        l && (s = a.convertArabic(s), s = f(s));
                        var p = new Uint8Array(uni.base64ToArrayBuffer(r)),
                            d = [],
                            b = [],
                            g = [],
                            j = "";
                        return e.load(p, (function(e, r) {
                            if (e) t("log", "\u52a0\u8f7d\u5b57\u4f53\u5f02\u5e38: " + e, " at utils/TextLine.js:496");
                            else
                                for (var n = 0; n < s.length; n++) {
                                    var a = s[n],
                                        l = r.charToGlyph(a),
                                        p = c * r.ascender / (r.ascender - r.descender),
                                        x = l.getPath(0, p, c),
                                        V = x.getBoundingBox(),
                                        f = Math.abs(V.y1) + Math.abs(V.y2),
                                        k = Math.abs(V.x1) + Math.abs(V.x2);
                                    k = 0 == k ? c / 2 : k, f = 0 == f ? c : 1.1 * f;
                                    var m = [];
                                    if (" " != a && (0 != l.index || 0 != l.unicodes.length)) {
                                        var P = x.commands;
                                        m = o(P, h)
                                    }
                                    if (0 == m.length && (j += a), i) {
                                        var u = F(m, 0, k, c);
                                        b.push({
                                            lines: u.newLinesUp,
                                            w: k,
                                            h: f
                                        }), g.push({
                                            lines: u.newLinesDown,
                                            w: k,
                                            h: f
                                        })
                                    }
                                    d.push({
                                        lines: m,
                                        w: k,
                                        h: f
                                    })
                                }
                        }), {
                            isUrl: !1
                        }), {
                            linesArr: d,
                            linesArrUp: b,
                            linesArrDown: g,
                            notRec: j,
                            hasArb: l
                        }
                    } catch (x) {
                        t("log", "\u5f02\u5e38:" + x.message, " at utils/TextLine.js:528")
                    }
                }

                function m(e, t, r) {
                    for (var n = t / 800, h = [], a = [], i = 0, c = 0, o = 99999, s = 99999, l = 0; l < e.length; l++) {
                        var p = e[l],
                            d = [p[0] * n, p[1] * n, p[2], p[3]];
                        i < d[0] && (i = d[0]), c < d[1] && (c = d[1]), o > d[0] && (o = d[0]), s > d[1] && (s = d[1])
                    }
                    var b = -o,
                        g = i - o + .1 * t,
                        j = t;
                    r || (g = t, b = t / 2 - ((i - o) / 2 + o), j = c - s + .1 * t);
                    for (var x = 0; x < e.length; x++) {
                        var V = e[x],
                            f = [V[0] * n, V[1] * n, V[2], V[3]];
                        0 == f[2] && a.length > 0 && (h.push(a), a = []), a.push({
                            x: f[0] + b,
                            y: j / 2 - f[1],
                            z: f[3]
                        })
                    }
                    return a.length > 0 && h.push(a), {
                        lines: h,
                        w: g,
                        h: j
                    }
                }

                function P(e) {
                    var t = e[0],
                        r = t.charCodeAt(0),
                        n = r.toString(16);
                    return n.toLowerCase()
                }

                function u(e) {
                    var t = e % 10,
                        r = function(e) {
                            var t, r, n;
                            return e < 4 ? (t = e, r = 0, n = 1) : e < 7 ? (t = e - 3, r = 1, n = 0) : (t = e - 6, r = 1, n = 1), [t, r, n]
                        }(t),
                        h = n(r, 3),
                        a = h[0],
                        i = h[1],
                        c = h[2],
                        o = Math.pow(10, a + 1),
                        s = e % o,
                        l = Math.floor((e - s) / o - 400);
                    return s = Math.floor((s - t) / 10 - 400), [s, l, i, c]
                }
                var X = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/";

                function N(e) {
                    for (var t = 0, r = 0; r < e.length; r++) t = 64 * t + X.indexOf(e.charAt(r));
                    return t
                }

                function H(e) {
                    for (var t = [], r = function(e) {
                            for (var t = e.split(","), r = [], n = 0; n < t.length; n++) {
                                var h = N(t[n]);
                                r.push(h)
                            }
                            return r
                        }(e), n = 0; n < r.length; n++) {
                        var h = u(r[n]);
                        t.push(h)
                    }
                    return t
                }

                function z(e) {
                    for (var t = [], r = [], h = 0; h < e.length; h++) {
                        var a = n(e[h], 4),
                            i = a[0],
                            c = a[1],
                            o = a[2],
                            s = a[3];
                        t.push([-c, i, o, s]), r.push([c, i, o, s])
                    }
                    return {
                        xysUp: t,
                        xysDown: r
                    }
                }

                function Q(e, r) {
                    for (var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], h = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], a = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], i = 400, c = [], o = [], s = [], l = "", p = 0; p < r.length; p++) {
                        var d = P(r[p]),
                            b = [],
                            g = [],
                            j = [],
                            x = i / 3,
                            V = i,
                            f = i,
                            F = i / 3;
                        if (d in e) {
                            var k = e[d];
                            if (n && (k = H(k)), a) {
                                t("log", "xysVer", JSON.stringify(k), " at utils/TextLine.js:680");
                                var u = JSON.parse(JSON.stringify(k));
                                u = z(u);
                                var X = m(u.xysUp, i, h);
                                g = X.lines, f = X.w, F = X.h;
                                var N = m(u.xysDown, i, h);
                                j = N.lines
                            }
                            var Q = m(k, i, h);
                            b = Q.lines, x = Q.w, V = Q.h
                        } else l += r[p];
                        c.push({
                            lines: b,
                            w: x,
                            h: V
                        }), o.push({
                            lines: g,
                            w: f,
                            h: F
                        }), s.push({
                            lines: j,
                            w: f,
                            h: F
                        })
                    }
                    return {
                        linesArr: c,
                        linesArrUp: o,
                        linesArrDown: s,
                        notRec: l
                    }
                }
                e.exports = {
                    getTextLines: k,
                    getXXYY: function(e, t, r, n) {
                        var h = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
                            a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 5,
                            i = {},
                            c = [],
                            o = [],
                            s = [],
                            l = [],
                            d = [];
                        if (1 == t.mode) i = k(e, t.data, r, a, n), c = p(i.linesArr, !1, h, !0, !1), s = p(i.linesArrUp, !1, h, !0, !1), l = p(i.linesArrDown, !1, h, !0, !1), d = JSON.parse(JSON.stringify(i.linesArr)), d.reverse(), o = p(d, !1, h, !0, !0);
                        else {
                            if (2 != t.mode) return {
                                xxyy: [],
                                notRec: "",
                                XxyyRight: [],
                                xxyyUp: [],
                                xxyyDown: l
                            };
                            i = Q(t.data, r, !0, h, n), c = p(i.linesArr, !0, h, !0, !1), s = p(i.linesArrUp, !0, h, !0, !1), l = p(i.linesArrDown, !0, h, !0, !1), d = JSON.parse(JSON.stringify(i.linesArr)), d.reverse(), o = p(d, !0, h, !0, !0)
                        }
                        return {
                            xxyy: c,
                            notRec: i.notRec,
                            xxyyRight: o,
                            xxyyUp: s,
                            xxyyDown: l
                        }
                    },
                    dealObjLines: function(e) {
                        for (var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], r = 20, n = [], h = [], a = {
                                left: 99999,
                                top: -99999,
                                right: -99999,
                                bottom: 99999
                            }, i = e, c = 0; c < i.length; c++) {
                            var o = [i[c][0], i[c][1]];
                            a.left = Math.min(a.left, o[0]), a.top = Math.max(a.top, o[1]), a.right = Math.max(a.right, o[0]), a.bottom = Math.min(a.bottom, o[1])
                        }
                        for (var s = (a.right - a.left) / 2 + a.left, l = (a.top - a.bottom) / 2 - a.top, p = 0; p < e.length; p++) {
                            var d = e[p],
                                b = d[3];
                            if (t && 0 != h.length && 0 != d[2] && p < e.length - 1) {
                                var g = e[p + 1];
                                if (0 != g[2]) {
                                    var x = j(h, d, g);
                                    if (0 == x || x >= 166) continue;
                                    if (b = x <= 145 ? 1 : 0, 0 == b && Math.abs(d[d.length - 1][0] - d[0]) + Math.abs(d[d.length - 1][1] - d[1]) < r) continue
                                }
                            }
                            n.push([d[0] + s, d[1] + l, d[2], b]), h = d
                        }
                        return n
                    },
                    dealImgLines: function(e) {
                        for (var t = [], r = 0; r < e.length; r++) {
                            var n = b(e[r], 135, !1);
                            n = g(n, 135), t.push.apply(t, h(n))
                        }
                        return t
                    },
                    printXXYY: function(e, r) {
                        for (var n = "", h = -1, a = 0; a < e.length; a++) {
                            var i = e[a][1];
                            h != e[a][0] && ("" != n && t("log", h, "printXXYY", n, " at utils/TextLine.js:713"), h = e[a][0], n = "");
                            for (var c = 0; c < i.length; c++) {
                                var o = i[c],
                                    s = (2 * o.x).toFixed(0) + " * 1",
                                    l = (2 * o.y).toFixed(0) + " * 1",
                                    p = r,
                                    d = o.z;
                                0 == c && (p = 0, d = 1), n = n + "\n{" + s.padStart(8, " ") + "," + l.padStart(8, " ") + ", " + p + ", " + d + "},"
                            }
                        }
                        t("log", h, "printXXYY", n, " at utils/TextLine.js:731")
                    }
                }
            }).call(this, r("f3b9")["default"])
        },
        "i18nStrings ": function(e) {
            e.exports = JSON.parse('{"\u8fde\u63a5\u84dd\u7259":"Conectar Bluetooth","\u968f\u673a\u64ad\u653e":"Aleatorio","\u5df2\u8fde\u63a5":"Conectado","\u672a\u8fde\u63a5":"No Conectado","\u6237\u5916\u64ad\u653e":"Exterior","\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570...":"Leyendo par\xe1metros del dispositivo","\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25":"Error al leer par\xe1metros del dispositivo","\u91cd\u65b0\u5237\u65b0\u5217\u8868":"Refrescar lista nuevamente","\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62":"Buscando / Detener","\u641c\u7d22\u84dd\u7259\u8bbe\u5907":"Buscar","\u5df2\u53d1\u73b0":"Descubierto","\u7ea2":"Rojo","\u7eff":"Verde","\u84dd":"Azul","\u9ec4":"Amar.","\u9752":"Cian","\u7d2b":"Mora.","\u767d":"Blanco","\u8df3\u53d8":"Salto","\u5168\u5f69":"RGB","\u64ad\u653e\u6a21\u5f0f":"Modo","\u81ea\u8d70":"Autom\xe1tico","\u58f0\u63a7":"M\xfasica","\u81ea\u8d70\u901f\u5ea6":"Velocidad","\u58f0\u63a7\u7075\u654f\u5ea6":"Sensibilidad","\u56fe\u6848\u989c\u8272":"Patr\xf3n","\u5f53\u524d\u989c\u8272":"Actual","\u5faa\u73af\u64ad\u653e":"Ciclo","\u52fe\u9009\u64ad\u653e":"Selecci\xf3n","\u5730\u5740\u7801":"Direcci\xf3n","\u663e\u793a\u8303\u56f4":"Alcance","\u56fe\u6848\u76f8\u4f4d":"Fase","\u6b63\u5e38\u663e\u793a":"Normal","XY\u4e92\u6362":"Intercambio XY","\u8c03\u5149\u8bbe\u7f6e":"Configuraci\xf3n de atenuaci\xf3n","\u7ea2\u5149\u8c03\u5149":"Rojo","\u7eff\u5149\u8c03\u5149":"Verde","\u84dd\u5149\u8c03\u5149":"Azul","\u6fc0\u5149\u5149\u6e90":"L\xe1ser","\u5355\u8272":"Mono.","\u53cc\u8272":"Bico.","\u8c03\u5236\u6a21\u5f0f":"Modulaci\xf3n","\u7cfb\u7edf\u8bed\u8a00":"Idioma","\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...":"Leyendo fuentes","\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9...":"Generando...","\u6587\u672c\u989c\u8272":"Color de texto","\u6587\u5b57\u5927\u5c0f":"Tama\xf1o","\u663e\u793a\u89c6\u8ddd":"Distancia","\u6d41\u6c34\u901f\u5ea6":"Velocidad","\u6295\u5c04\u65b9\u5411":"Direcci\xf3n","\u6c34\u5e73\u6295\u5c04":"Horizontal","\u5782\u76f4\u6295\u5c04":"Vertical","\u8d85\u51fa\u6700\u5927\u70b9\u6570":"Puntos m\xe1ximos","\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931":"Las partes excedentes se perder\xe1n","\u7ebf\u6761\u989c\u8272":"Color de l\xednea","\u6e05\u7a7a":"Vaciar","\u56de\u9000":"Volver","\u53d1\u9001":"Enviar","\u6700\u591a20\u4e2a\u573a\u666f":"Hasta 20 escenarios","\u63d0\u793a":"Aviso","\u662f\u5426\u5220\u9664\u573a\u666f":"Si eliminar la escena ","\u7528\u6237\u70b9\u51fb\u53d6\u6d88":"El usuario hizo clic en cancelar","-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"--La lista de escenas est\xe1 vac\xeda--","\u573a\u666f":"Esce.","\u79d2":"Seg","\u5220\u9664":"Eliminar","\u7f16\u8f91":"Editar","\u65b0\u589e\u573a\u666f":"Crear un nuevo escenario","\u56fe\u6848\u9009\u62e9":"Patr\xf3n","\u76f4\u7ebf\u7c7b\u56fe\u6848":"L\xednea","\u5706\u5f27\u7c7b\u56fe\u6848":"Arco circular","\u4eae\u70b9\u56fe\u6848":"Destello","\u6253\u70b9\u56fe\u6848":"Punto","\u5723\u8bde\u56fe\u6848":"Navidad","\u52a8\u753b\u7ec4\u522b1":"Animaci\xf3n 1","\u52a8\u753b\u7ec4\u522b2":"Animaci\xf3n 2","\u52a8\u753b\u7ec4\u522b3":"Animaci\xf3n 3","\u52a8\u753b\u7ec4\u522b4":"Animaci\xf3n 4","\u52a8\u753b\u7ec4\u522b5":"Animaci\xf3n 5","\u767d\u8272":"Blanco","\u7ea2\u8272":"Rojo","\u84dd\u8272":"Azul","\u7c89\u8272":"Rosa","\u9752\u8272":"Cian","\u9ec4\u8272":"Amarillo","\u7eff\u8272":"Verde","\u6574\u4f53\u989c\u8272\u6362\u8272":"General","\u4e03\u5f69\u8679\u989c\u8272":"Colores del arco iris","2\u5206\u6bb5\u989c\u8272":"2 segmentos","3\u5206\u6bb5\u989c\u8272":"3 segmentos","4\u5206\u6bb5\u989c\u8272":"4 segmentos","8\u5206\u6bb5\u989c\u8272":"8 segmentos","16\u5206\u6bb5\u989c\u8272":"16 segmentos","32\u5206\u6bb5\u989c\u8272":"32 segmentos","\u989c\u8272\u6e10\u7ed8":"Degradado","\u4e0d\u6d41\u6c34":"Sin flujo","\u6b63\u5411\u6d41\u6c34":"Positivo","\u53cd\u5411\u6d41\u6c34":"Inversi\xf3n","\u56fe\u6848\u5927\u5c0f":"Tama\xf1o","\u7f29\u653e\u624b\u52a8\u9009\u62e9":"Zoom manual","\u7531\u5c0f\u5230\u5927\u7f29\u653e":"Ampliaci\xf3n","\u7531\u5927\u5230\u5c0f\u7f29\u653e":"Reducir","\u5927\u5c0f\u5faa\u73af\u7f29\u653e":"Zoom circular","\u4e0d\u89c4\u5219\u7f29\u653e\u4e00":"Irregular 1","\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c":"Irregular 2","\u4e0d\u89c4\u5219\u7f29\u653e\u4e09":"Irregular 3","\u65cb\u8f6c\u89d2\u5ea6":"\xc1ngulo","\u6b63\u65cb\u8f6c\u901f\u5ea6":"Positiva","\u53cd\u65cb\u8f6c\u901f\u5ea6":"Inversa","\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e":"Posici\xf3n H","\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6":"Velocidad H","\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e":"Posici\xf3n V","\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6":"Velocidad V","\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c":"Rotaci\xf3n H","\u6c34\u5e73\u79fb\u52a8":"Movi. H","\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c":"Rotaci\xf3n V","\u5782\u76f4\u79fb\u52a8":"Movi. V","\u65e0\u6ce2\u6d6a":"Sin olas","\u6ce2\u6d6a\u5e45\u5ea61":"Ola 1","\u6ce2\u6d6a\u5e45\u5ea62":"Ola 2","\u6ce2\u6d6a\u5e45\u5ea63":"Ola 3","\u6ce2\u6d6a\u5e45\u5ea64":"Ola 4","\u6ce2\u6d6a\u5e45\u5ea65":"Ola 5","\u6ce2\u6d6a\u5e45\u5ea66":"Ola 6","\u6ce2\u6d6a\u5e45\u5ea67":"Ola 7","\u6ce2\u6d6a\u5e45\u5ea68":"Ola 8","\u65e0\u6e10\u7ed8":"Sin degradado","\u624b\u52a8\u6e10\u7ed81":"Manual 1","\u624b\u52a8\u6e10\u7ed82":"Manual 2","\u81ea\u52a8\u6e10\u7ed81":"Autom\xe1tico 1","\u81ea\u52a8\u6e10\u7ed82":"Autom\xe1tico 2","\u81ea\u52a8\u6e10\u7ed83":"Autom\xe1tico 3","\u81ea\u52a8\u6e10\u7ed84":"Autom\xe1tico 4","\u56fe\u5f62\u5206\u7ec4":"Agrupaci\xf3n","\u56fe\u5f62":"Gr\xe1fico","\u989c\u8272":"Color","\u989c\u8272\u6d41\u6c34":"Movilidad","\u56fe\u5f62\u5927\u5c0f":"Tama\xf1o","\u56fe\u5f62\u7f29\u653e":"Zoom","\u56fe\u5f62\u65cb\u8f6c":"Rotaci\xf3n","\u6c34\u5e73\u7ffb\u8f6c":"Volt. H","\u5782\u76f4\u7ffb\u8f6c":"Volt. V","\u6ce2\u6d6a":"Ola","\u6e10\u7ed8":"Gradual","\u64ad\u653e\u65f6\u957f":"Duraci\xf3n","\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62...":"Cargando...","\u53d6\u6d88":"Canc.","\u786e\u5b9a":"Confirmar","\u9009\u62e9\u56fe\u5f62":"Seleccionar","\u901a\u9053\u590d\u4f4d":"Restablecer","\u5b8b\u4f53":"Songti","\u76f4\u7ebf":"L\xednea","\u5706\u5f27":"Arco","\u4eae\u70b9":"Punto","\u6253\u70b9":"Gestionar","\u5723\u8bde":"Navidad","\u52a8\u753bA":"AnimA","\u52a8\u753bB":"AnimB","\u5f69\u8679":"Arco\xedris","\u9ed8\u8ba4":"Pred.","\u8f6f\u4ef6\u7248\u672c":"Versi\xf3n","\u8fde\u63a5":"Conectar","\u8bbe\u7f6e":"Configuraci\xf3n","\u624b\u7ed8\u6d82\u9e26":"Dibujado","\u6587\u672c\u64ad\u653e":"Texto","\u4e2a\u6027\u7f16\u7a0b":"Programaci\xf3n","\u52a8\u753b\u64ad\u653e":"Animaci\xf3n","\u7ebf\u6761\u64ad\u653e":"L\xednea","\u5723\u8bde\u64ad\u653e":"Navidad","DMX":"DMX","\u914d\u7f6e":"Config","\u8fd4\u56de":"Volver","\u70b9\u6211\u8fde\u63a5":"Iniciar conexi\xf3n","\u84dd\u7259\u672a\u8fde\u63a5":"No conectado","\u8bbe\u5907":"Estado","\u8bf7\u8f93\u5165\u6587\u5b57":"Entrada de texto","\u9884\u7559\u65e0\u529f\u80fd":"Reservado","\u91cd\u7f6e":"Restablecer","\u84dd\u7259\u8fde\u63a5":"Conexi\xf3n Bluetooth","\u5168\u9009":"Todo","\u53cd\u9009":"Anti","\u6e05\u9664":"Borrar","\u5b57\u6570":"Texto","\u70b9\u6570":"Puntos","\u9884\u89c8":"Previsualizar","\u573a\u666f\u7ba1\u7406":"Gesti\xf3n de escenas","\u52a0\u8f7d\u4e2d":"Cargando","\u573a\u666f\u7f16\u8f91":"Editar escena","\u8bf7\u5148\u8fde\u63a5\u84dd\u7259":"Por favor conecta el Bluetooth primero","\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b":"El dispositivo actual no est\xe1 reconocido","DMX\u5730\u5740\u7801":"Direcci\xf3n DMX","\u8bf7\u5148\u6253\u5f00\u8bbe\u5907":"Por favor enciende el dispositivo primero","\u5355\u7ebf\u5b57\u4f53":"Simple","\u6b63\u5728\u53d1\u9001":"Enviando","\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528":"Por favor verifica si el Bluetooth est\xe1 habilitado en tu tel\xe9fono","\u8be5\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587\u663e\u793a":"Esta fuente no soporta la visualizaci\xf3n en chino","\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c":"Debido a limitaciones de capacidad, algunos caracteres chinos no est\xe1n incluidos en la biblioteca de fuentes. Para la biblioteca completa, por favor dir\xedgete a la versi\xf3n de la aplicaci\xf3n","\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650":"Por favor configura los permisos de ubicaci\xf3n de la aplicaci\xf3n","\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650":"Por favor configura los permisos de Bluetooth para el mini programa","\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38":"Lectura de par\xe1metros del dispositivo an\xf3mala","\u9009\u62e9":"Sele.","\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247":"Configurar imagen de fondo","\u53d1\u9001\u5931\u8d25":"Error al enviar","\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165":"La longitud del texto ha superado los 100 caracteres, por favor ingresa nuevamente","\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165":"El n\xfamero de puntos de coordenadas del texto ha superado los 2048, por favor ingresa nuevamente","\u7b2c":"No.","\u7ec4\u6587\u5b57":"Grupo","\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5":"Por favor modifica la fuente o el texto e intenta nuevamente","\u4e0d\u652f\u6301\u6587\u672c":"No soportado","\u7ec4\u5b57\u4f53":"Fuente de texto","\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u53d1\u9001":"El grupo no tiene texto, por favor ingresa antes de enviar","\u662f\u5426\u5220\u9664\u7b2c":"Eliminar o No.","\u7ec4":"Grupo","\u6700\u591a4\u4e2a\u5206\u7ec4":"Hasta 4 grupos","\u6b63\u5728\u8fde\u63a5...":"Conectando...","\u8fde\u63a5\u5931\u8d25":"Conexi\xf3n fallida","\u5b57\u4f53\u9009\u62e9":"Seleccionar fuente","\u601d\u6e90\u9ed1\u4f53":"NotoSans","\u601d\u6e90\u9ed1\u4f531":"NotoSans1","\u601d\u6e90\u9ed1\u4f532":"NotoSans2","\u601d\u6e90\u9ed1\u4f533":"NotoSans3","\u601d\u6e90\u9ed1\u4f534":"NotoSans4","\u601d\u6e90\u9ed1\u4f535":"NotoSans5","\u601d\u6e90\u9ed1\u4f536":"NotoSans6","\u601d\u6e90\u9ed1\u4f537":"NotoSans7","font_note_1001":"Chino, Ingl\xe9s, Espa\xf1ol, Portugu\xe9s, Alem\xe1n, Franc\xe9s","font_note_1002":"Ingl\xe9s, Espa\xf1ol, Ruso, Portugu\xe9s, Alem\xe1n, Franc\xe9s, Vietnamita, Hindi, Bengal\xed","font_note_1003":"Ingl\xe9s, Chino, Espa\xf1ol, Ruso, Portugu\xe9s, Japon\xe9s, Alem\xe1n","font_note_1004":"Chino, Ingl\xe9s, Espa\xf1ol, Portugu\xe9s, Alem\xe1n, Franc\xe9s","font_note_1005":"Ingl\xe9s, Chino","font_note_1006":"Ingl\xe9s, Japon\xe9s, Coreano","font_note_1007":"\xc1rabe","\u4fdd\u7559":"Reservado","\u56fe\u6848\u521d\u59cb\u989c\u8272":"Color inicial","\u6df7\u8272":"Mezcla","\u7b14\u753b\u5c11\uff0c\u65e0\u95ea\u70c1\uff0c\u63a8\u8350\u4f7f\u7528":"Recomendado, mejor rendimiento","\u5df2\u65ad\u5f00\u8fde\u63a5":"Desconectado","\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c":"Por favor ingresa un valor en el rango de 1 a 255","\u6587\u5b57\u7cbe\u5ea6":"Precisi\xf3n","\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6":"Efectos","\u7cbe\u5ea6":"Efectos","\u9009\u62e9\u56fe\u7247":"Selecci\xf3n","\u8bbe\u4e3a\u80cc\u666f":"Antec.","\u8bc6\u522b\u56fe\u6848":"Identi.","\u63cf\u8fb9":"Contorno","\u6b63\u5728\u5904\u7406\u4e2d":"Procesando","\u5f53\u524d\u673a\u578b":"Modelo","hand_draw_tips":" ** Desliza desde el \xe1rea en blanco hacia el patr\xf3n objetivo para seleccionarlo.\\n ** Puedes realizar operaciones como acercar, alejar, mover, cambiar colores y eliminar en el patr\xf3n seleccionado.","\u4e0d\u518d\u63d0\u793a":"No mostrar m\xe1s","out_door_tips1":"1-30 Punto de referencia","out_door_tips2":"31-40 Auroras Boreales","out_door_tips3":"41-50 T\xfanel del tiempo","\u6587\u4ef6\u540d":"Nombre del archivo","\u4fdd\u5b58\u6587\u4ef6":"Guardar archivo","\u9009\u62e9\u6587\u4ef6":"Seleccionar archivo","\u8bf7\u8f93\u5165\u6587\u4ef6\u540d":"Nombre de archivo","\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d":"Nuevo nombre de archivo","\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a":"El nombre del archivo no puede estar vac\xedo","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165":"El archivo ya existe, por favor ingrese nuevamente","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed":"El archivo ya existe, \xbfcontinuar?","\u4fdd\u5b58\u6210\u529f":"Guardado exitoso","\u4fdd\u5b58\u5931\u8d25":"Error al guardar","\u4fee\u6539\u6210\u529f":"Modificaci\xf3n exitosa","\u4fee\u6539\u5931\u8d25":"Error en la modificaci\xf3n","\u5220\u9664\u6210\u529f":"Eliminaci\xf3n exitosa","\u5220\u9664\u5931\u8d25":"Error al eliminar","\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301":"El modelo actual no lo soporta","text_time_range":"Rango 1-25.5","\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848":"Reconocimiento fallido","\u8bf7\u9009\u62e9\u6587\u4ef6":"Por favor seleccione un archivo","\u6587\u4ef6\u6570":"Archivos","\u53e6\u5b58\u6587\u4ef6":"Guardar como","\u5220\u9664\u6240\u9009\u6587\u4ef6":"Eliminar archivos seleccionados","Select-File":"Selec.","\u6447\u5934\u8bbe\u7f6e":"Configuraci\xf3n de movimiento","\u6447\u5934\u6a21\u5f0f":"Modo","\u6447\u5934\u76f8\u4f4d":"Fase","\u81ea\u52a8":"Autom\xe1tico","\u624b\u52a8":"Manual","X\u7c97\u8c03":"Grueso X","X\u7ec6\u8c03":"Fino X","Y\u7c97\u8c03":"Grueso Y","Y\u7ec6\u8c03":"Fino Y","\u6c34\u5e73\u7535\u673a":"Motor H","\u6c34\u5e73\u5fae\u8c03":"Ajuste H","\u5782\u76f4\u7535\u673a":"Motor V","\u5782\u76f4\u5fae\u8c03":"Ajuste V","\u7535\u673a\u901f\u5ea6":"Velocidad","\u6d41\u6c34\u65b9\u5411":"Direcci\xf3n","\u963f\u62c9\u4f2f\u8bed\u65b9\u5411":"\xc1rabe","\u9ed8\u8ba4\u65b9\u5411":"Normal","\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939":"Guardar en carpeta","\u9009\u62e9\u5217\u8868":"Sele. lista","\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0":"Nombre del grupo","\u64ad\u653e\u5217\u8868":"Lista","\u4fdd\u5b58":"Guardar","\u6dfb\u52a0":"A\xf1adir","\u6279\u91cf\u8bbe\u7f6e":"En lote","\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0":"Nombre de la lista","ALL":"Todo","\u5217\u8868\u7f16\u8f91":"Editar lista","\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57":"Por favor ingrese un n\xfamero entre 0.1 y 25.5","\u6dfb\u52a0\u81f3\u65b0\u5217\u8868":"A\xf1adir a nueva lista","\u7acb\u5373\u64ad\u653e":"Reproducir ahora","\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed":"La lista de reproducci\xf3n correspondiente ser\xe1 eliminada, continuar","-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- Lista vac\xeda --"}')
        },
        "appStateManager": function(e, t, r) {
            "use strict";
            (function(e) {
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var r = {
                    globalData: {
                        $i18n: {
                            locale: "en-US"
                        },
                        $t: {},
                        MaxSaveFileCount: 50,
                        MaxListCount: 200,
                        mainPage: null,
                        cloudApi: null,
                        appHide: !1,
                        mserviceuuids: [],
                        mtxduuids: [],
                        mrxduuids: [],
                        muuidSel: 0,
                        platform: {
                            system: "",
                            app: !1
                        },
                        img_selecting: !1,
                        bleOpenCloseCount: 0,
                        bleConnectCount: 0,
                        bleManualDisCnn: !1,
                        BLEConnectionStateChangeSet: !1,
                        BluetoothAdapterOpen: !1,
                        ble_device: null,
                        blu_cnn_from_page: !1,
                        blu_state: 0,
                        blu_connect_stop: !1,
                        blu_connected: 0,
                        blu_readyRec: !1,
                        blu_cnn_call_back: null,
                        blu_rec_call_back: null,
                        blu_rec_content: null,
                        blu_cnn_from_test: !1,
                        screen_width_str: "0px",
                        screen_width_float: 0,
                        screen_width_page: 0,
                        screen_height_page: 0,
                        blu_data_canSend: !1,
                        blu_data_cmdSending: !1,
                        blu_data_lastShowTime: 0,
                        blu_Discovery_lastTime: 0,
                        blu_data_send_interval: 100,
                        deviceInfo: {},
                        rtl: !1,
                        langs: {
                            "zh-Hans": "\u4e2d\u6587",
                            en: "English",
                            fr: "Fran\xe7ais",
                            ru: "\u0420\u0443\u0441\u0441\u043a\u0438\u0439",
                            vi: "Ti\u1ebfng Vi\u1ec7t",
                            ar: "\u0627\u0644\u0639\u0631\u0628\u064a\u0629",
                            de: "Deutsch",
                            it: "Italiano",
                            es: "Espa\xf1ol"
                        },
                        cmd: {
                            curMode: 0,
                            settingData: {
                                dmx: 0,
                                ch: 0,
                                xy: 0,
                                light: 1,
                                cfg: 0,
                                lang: 0,
                                valArr: [1, 10, 10, 10, 10]
                            },
                            prjData: {
                                prjIndex: 0,
                                public: {
                                    rdMode: 0,
                                    runSpeed: 50,
                                    txColor: 9,
                                    soundVal: 20
                                },
                                prjItem: {
                                    2: {
                                        pyMode: 0,
                                        prjSelected: [0, 0, 0, 0],
                                        ckValues: []
                                    },
                                    3: {
                                        pyMode: 0,
                                        prjSelected: [0, 0, 0, 0],
                                        ckValues: []
                                    },
                                    5: {
                                        pyMode: 0,
                                        prjSelected: [0, 0, 0, 0],
                                        ckValues: []
                                    },
                                    6: {
                                        pyMode: 0,
                                        prjSelected: [0, 0, 0, 0],
                                        ckValues: []
                                    }
                                }
                            },
                            textData: {
                                refresh: !1,
                                verTag: 0,
                                runDir: 0,
                                arrColor: ["red", "green", "blue", "yellow", "#00FFFF", "purple", "white"],
                                txPointTime: 50,
                                txColor: 9,
                                txSize: 50,
                                txDist: 50,
                                runSpeed: 50,
                                groupIdex: 0,
                                groupList: [{
                                    text: "",
                                    update: 0,
                                    color: 9,
                                    fontIdex: null,
                                    time: 5,
                                    xys: [],
                                    XysRight: [],
                                    XysUp: [],
                                    XysDown: []
                                }]
                            },
                            drawData: {
                                pisObj: {
                                    txPointTime: 50,
                                    cnfValus: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                                }
                            },
                            pgsData: {
                                pisList: []
                            },
                            subsetData: {
                                xyCnf: {
                                    auto: !0,
                                    autoValue: 0,
                                    phase: 0,
                                    xy: [{
                                        title: "X\u7c97\u8c03",
                                        name: "xBig",
                                        value: 0
                                    }, {
                                        title: "X\u7ec6\u8c03",
                                        name: "xSmall",
                                        value: 0
                                    }, {
                                        title: "Y\u7c97\u8c03",
                                        name: "yBig",
                                        value: 0
                                    }, {
                                        title: "Y\u7ec6\u8c03",
                                        name: "ySmall",
                                        value: 0
                                    }]
                                }
                            }
                        },
                        setbluDataSendInterval: function(e) {
                            this.blu_data_send_interval = e
                        },
                        setRecCallBack: function(e) {
                            var t = this.blu_rec_call_back;
                            null != t && t(e)
                        },
                        setBluCnnState: function(e, t) {
                            this.blu_connected = e, 2 == this.blu_connected && this.saveDevice();
                            var r = this.blu_cnn_call_back;
                            null != r && r(e, t)
                        },
                        showModalTips: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                            t ? uni.showModal({
                                content: e,
                                showCancel: !1
                            }) : uni.showToast({
                                title: e,
                                icon: "none",
                                duration: 1e3
                            })
                        },
                        setCmdMode: function(e) {
                            this.cmd["curMode"] = e, this.cmd["prjData"].prjIndex = e
                        },
                        getCmdData: function(e) {
                            return this.cmd[e]
                        },
                        setCmdData: function(e, t) {
                            if ("prjData" == e) return this.cmd[e].public = t.public, 1 != t.prjIndex && (this.cmd[e].prjItem[t.prjIndex + ""] = t.item), this.cmd.textData.runSpeed = t.public.runSpeed, void(this.cmd.textData.txColor = t.public.txColor);
                            this.cmd[e] = t, "textData" == e && (this.cmd.prjData.public.runSpeed = t.runSpeed, this.cmd.prjData.public.txColor = t.txColor)
                        },
                        readSetting: function() {
                            switch (this.muuidSel = this.readData("lastsel") || 0, this.muuidSel) {
                                case 0:
                                    this.mserviceuuids = ["0000FF00-0000-1000-8000-00805F9B34FB"], this.mtxduuids = ["0000FF02-0000-1000-8000-00805F9B34FB"], this.mrxduuids = "0000FF01-0000-1000-8000-00805F9B34FB";
                                    break;
                                case 1:
                                    this.mserviceuuids = ["0000FFE0-0000-1000-8000-00805F9B34FB"], this.mtxduuids = ["0000FFE1-0000-1000-8000-00805F9B34FB"], this.mrxduuids = ["0000FFE1-0000-1000-8000-00805F9B34FB"];
                                    break;
                                case 2:
                                    this.mserviceuuids = ["0000FF00-0000-1000-8000-00805F9B34FB"], this.mtxduuids = ["0000FF02-0000-1000-8000-00805F9B34FB"], this.mrxduuids = "0000FF01-0000-1000-8000-00805F9B34FB";
                                    break
                            }
                        },
                        saveSetting: function(e, t) {
                            this.saveData("autoSendInv", e), this.saveData("sendText", t)
                        },
                        saveTipsParm: function(e) {
                            var t = e ? "0" : "1";
                            this.saveData("tips", t)
                        },
                        getTipsParm: function() {
                            var e = this.readData("tips");
                            return "1" != e
                        },
                        setDeviceInfo: function(e, t, r) {
                            this.saveData("deviceType", e), this.saveData("version", t), this.saveData("userType", r), this.deviceInfo["deviceType"] = e, this.deviceInfo["version"] = t, this.deviceInfo["userType"] = r
                        },
                        getDeviceInfo: function() {
                            var e = this.readData("deviceType");
                            "" == e && (e = 0);
                            var t = this.readData("version");
                            "" == t && (t = 0);
                            var r = this.readData("userType");
                            return "" == r && (r = 0), {
                                deviceType: parseInt(e),
                                version: parseInt(t),
                                userType: parseInt(r)
                            }
                        },
                        getDeviceFeatures: function() {
                            var e = {
                                    textStopTime: !1,
                                    textDecimalTime: !1,
                                    displayType: 0,
                                    showOutDoorTips: !1,
                                    xyCnf: !1,
                                    arbPlay: !1,
                                    ilda: !1,
                                    ttlAn: !1,
                                    picsPlay: !1,
                                    textUpDown: !1,
                                    animationFix: !1
                                },
                                t = this.deviceInfo["deviceType"],
                                r = this.deviceInfo["version"];
                            return (1 == t && r >= 1 || 0 == t && r >= 2 || t >= 2) && (e.textStopTime = !0, e.textDecimalTime = !0), (1 == t && r >= 2 || t > 1) && (e.showOutDoorTips = !0), 1 == t && 1 == r && (e.textModeFix01 = !0), 2 == t && (e.xyCnf = !0), 1 != t && 2 != t || (e.ilda = !0), 1 != t && 2 != t || (e.ttlAn = !0), (t >= 2 || r >= 3) && (e.arbPlay = !0), (t >= 3 || r >= 4) && (e.textUpDown = !0), (t >= 3 || r >= 5) && (e.picsPlay = !0), 1 == t && (e.animationFix = !0), e.displayType = t, e
                        },
                        saveData: function(e, t) {
                            uni.setStorageSync(e, t)
                        },
                        readData: function(e) {
                            var t = uni.getStorageSync(e);
                            return t
                        },
                        deleteData: function(e) {
                            uni.removeStorageSync(e)
                        },
                        getLang: function() {
                            var e = this.readData("lang");
                            if (!(e in this.langs)) {
                                var t = uni.getLocale();
                                e = t in this.langs ? t : "en"
                            }
                            return this.rtl = -1 != ["ar"].indexOf(e), e
                        },
                        setLang: function(e) {
                            var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                            t && this.saveData("lang", e), this.$i18n.locale = e, uni.setLocale(e)
                        },
                        savelastsel: function(t) {
                            this.saveData("lastsel", t), e("log", "Writelastsel ", t, " at App.vue:328")
                        },
                        readDevice: function() {
                            this.ble_device = this.readData("device")
                        },
                        saveDevice: function() {
                            this.saveData("device", this.ble_device)
                        },
                        clearDevice: function() {
                            this.ble_device = null, this.saveDevice()
                        },
                        setMainPage: function(e) {
                            this.mainPage = e
                        },
                        createBLEConnection: function(t) {
                            var r = this,
                                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                            e("log", "this.bleConnectCount", this.bleConnectCount, " at App.vue:349"), this.bleConnectCount++, this.blu_connected = -1, uni.createBLEConnection({
                                deviceId: t,
                                timeout: 6e3,
                                success: function(e) {
                                    n && n(!0)
                                },
                                fail: function(h) {
                                    e("log", "createBLEConnection fail:", h, r.bleManualDisCnn, " at App.vue:359"), r.bleManualDisCnn ? n && n(!1) : r.doCloseBLEConnection(t, (function(e) {
                                        n && n(!1)
                                    }))
                                }
                            })
                        },
                        doCloseBLEConnection: function(t) {
                            var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                            e("log", "doCloseBLEConnection", t, " at App.vue:371"), this.bleManualDisCnn = !0, this.bleConnectCount--;
                            var n = this,
                                h = setTimeout((function() {
                                    h = null, n.bleManualDisCnn = !1, r && r(!0)
                                }), 200);
                            uni.closeBLEConnection({
                                deviceId: t,
                                success: function(t) {
                                    e("log", "doCloseBLEConnection success", t, " at App.vue:384"), h && r && r(!0)
                                },
                                fail: function(t) {
                                    e("log", "doCloseBLEConnection fail", t, " at App.vue:389"), h && r && r(!1)
                                },
                                complete: function() {
                                    e("log", "doCloseBLEConnection complete", " at App.vue:394"), h && clearTimeout(h), this.bleManualDisCnn = !1
                                }
                            })
                        },
                        closeBLEConnection: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                            e("log", "closeBLEConnection", this.blu_connected, this.ble_device, " at App.vue:403");
                            if (this.blu_connected) {
                                var r = this.ble_device;
                                r ? this.doCloseBLEConnection(r.deviceId, (function(r) {
                                    e("log", "do callback", " at App.vue:409"), t && t(r)
                                })) : t && t(!0)
                            } else t && t(!0)
                        },
                        doCloseBluetoothAdapter: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                            this.bleOpenCloseCount--, this.BluetoothAdapterOpen = !1, uni.closeBluetoothAdapter({
                                success: function(e) {
                                    t && t(!0)
                                },
                                fail: function(r) {
                                    e("log", "closeBluetoothAdapter fail", r, " at App.vue:424"), t && t(!1)
                                }
                            })
                        },
                        closeBluetoothAdapter: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                            this.BluetoothAdapterOpen ? this.doCloseBluetoothAdapter(e) : e && e(!0)
                        },
                        openBluetoothAdapter: function() {
                            var t = this,
                                r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                            if (this.BluetoothAdapterOpen) r && r(!0);
                            else {
                                e("log", "this.bleOpenCloseCount", this.bleOpenCloseCount, " at App.vue:440"), this.bleOpenCloseCount++;
                                var n = this;
                                uni.openBluetoothAdapter({
                                    success: function(e) {
                                        t.BluetoothAdapterOpen = !0, t.setBLEConnectionStateChange(), r && r(!0)
                                    },
                                    fail: function(h) {
                                        e("log", "openBluetoothAdapter2", h, " at App.vue:450"), t.doCloseBluetoothAdapter(), 10001 === h.errCode && t.showModalTips(n.$t("\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528"), !0), 103 == h.errno ? t.showModalTips(n.$t("\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650"), !0) : t.showModalTips("Open Bluetooth Adapter Fail"), r && r(!1)
                                    }
                                })
                            }
                        },
                        setBLEConnectionStateChange: function() {
                            if (!this.BLEConnectionStateChangeSet) {
                                this.BLEConnectionStateChangeSet = !0;
                                var t = this;
                                uni.onBLEConnectionStateChange((function(r) {
                                    t.blu_data_cmdSending = !1, r.connected || (e("log", "setBLEConnectionStateChange", t.bleManualDisCnn, " at App.vue:471"), t.bleManualDisCnn || t.doCloseBLEConnection(r.deviceId), t.ble_device && t.ble_device.deviceId != r.deviceId || (t.blu_data_canSend = !1, t.setBluCnnState(0, !0)))
                                }))
                            }
                        },
                        getSysinfo: function() {
                            var e = uni.getSystemInfoSync();
                            this.platform.system = e.platform, this.platform.app = !0;
                            var t = plus.runtime.version,
                                r = this.readData("appVersion");
                            t != r && (this.saveData("appVersion", t), plus.runtime.restart()), this.screen_width_page = e.screenWidth;
                            var n = Math.min(9 * e.screenHeight / 16, e.screenWidth);
                            e.devicePixelRatio;
                            this.screen_width_float = n / 750, this.screen_width_str = this.screen_width_float + "px", this.screen_height_page = e.safeArea.height
                        },
                        t: function(t) {
                            return e("log", "app vue $t", t, this.$t(t), " at App.vue:505"), this.$t(t)
                        }
                    },
                    onLaunch: function() {
                        var e = this;
                        this.globalData.$t = function(t) {
                            return e.$t(t)
                        }, this.globalData.$i18n = this.$i18n, this.globalData.deviceInfo = this.globalData.getDeviceInfo(), this.globalData.getSysinfo();
                        var t = this.globalData.getLang();
                        this.globalData.setLang(t, !1)
                    },
                    onShow: function() {
                        this.globalData.appHide = !1, this.globalData.blu_connected || null != this.globalData.mainPage && this.globalData.mainPage.gotoMain(!0)
                    },
                    onHide: function() {
                        var e = this;
                        this.globalData.appHide = !0, this.globalData.img_selecting || this.globalData.closeBLEConnection((function(t) {
                            e.globalData.blu_state = 0, e.globalData.setBluCnnState(0, !1), e.globalData.closeBluetoothAdapter()
                        }))
                    }
                };
                t.default = r
            }).call(this, r("f3b9")["default"])
        },
        "placeholderComponent": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return n
            })), r.d(t, "c", (function() {
                return h
            })), r.d(t, "a", (function() {}));
            var n = function() {
                    var e = this.$createElement,
                        t = this._self._c || e;
                    return t("view")
                },
                h = []
        },
        "defineClassHelper ": function(e, t, r) {
            var n = r("d551");

            function h(e, t) {
                for (var r = 0; r < t.length; r++) {
                    var h = t[r];
                    h.enumerable = h.enumerable || !1, h.configurable = !0, "value" in h && (h.writable = !0), Object.defineProperty(e, n(h.key), h)
                }
            }
            e.exports = function(e, t, r) {
                return t && h(e.prototype, t), r && h(e, r), Object.defineProperty(e, "prototype", {
                    writable: !1
                }), e
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        "mainAppEntry": function(e, t, r) {
            "use strict";
            var n = r("47a9"),
                h = n(r("7ca3"));
            r("ff59");
            var a = n(r("eeae")),
                i = n(r("3c74")),
                c = n(r("951c")),
                o = n(r("4d79"));

            function s(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), r.push.apply(r, n)
                }
                return r
            }
            var l = {
                locale: uni.getLocale(),
                messages: i.default
            };
            c.default.use(o.default);
            var p = new o.default(l);
            c.default.config.productionTip = !1, a.default.mpType = "app";
            var d = new c.default(function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? s(Object(r), !0).forEach((function(t) {
                        (0, h.default)(e, t, r[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : s(Object(r)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                    }))
                }
                return e
            }({
                i18n: p
            }, a.default));
            d.$mount()
        },
        "textPlaybackPageComponent ": function(e, t, r) {
            "use strict";
            (function(e) {
                var n = r("47a9");
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var h = n(r("762b")),
                    a = getApp(),
                    i = r("3b77"),
                    c = r("c4ce"),
                    o = r("2344"),
                    s = r("720d"),
                    l = r("3315"),
                    p = r("textLineVectorizer "),
                    d = r("fontGeometryUtils "),
                    b = {
                        data: function() {
                            var e = 0 | a.globalData.readData("text_fontIdex"),
                                t = a.globalData.getDeviceFeatures(),
                                r = 650 * a.globalData.screen_width_float,
                                n = [{
                                    text: "",
                                    update: 0,
                                    color: 9,
                                    fontIdex: e,
                                    time: 5,
                                    xys: [],
                                    XysRight: [],
                                    XysUp: [],
                                    XysDown: []
                                }];
                            return {
                                screen_width: a.globalData.screen_width_str,
                                scUnit: a.globalData.screen_width_float,
                                pageWidth: a.globalData.screen_width_page,
                                rtl: a.globalData.rtl,
                                ntitle: this.$t("\u6587\u672c\u64ad\u653e"),
                                inputNote: this.$t("\u8bf7\u8f93\u5165\u6587\u5b57"),
                                fontIdex: e,
                                fontNameList: [],
                                fontLoadIdex: -1,
                                showChineseWarn: !1,
                                canvasShow: !0,
                                sendColorTag: !0,
                                lastSendTxtCmdTime: 0,
                                lastSendTxtCmdComplete: !0,
                                popupTimeIndex: 0,
                                showSending: !1,
                                needRefresh: !0,
                                firstShow: !0,
                                textRv: !0,
                                textInput: !1,
                                timeInput0: !1,
                                timeInput1: !1,
                                timeInput2: !1,
                                timeInput3: !1,
                                inputCursor0: !1,
                                inputCursor1: !1,
                                inputCursor2: !1,
                                inputCursor3: !1,
                                maxStrCount: 0,
                                features: t,
                                currSelectedFile: "",
                                colorDisplayOrder: [{
                                    name: "\u7ea2",
                                    color: "red",
                                    order: 0,
                                    idx: 1
                                }, {
                                    name: "\u9ec4",
                                    color: "yellow",
                                    order: 1,
                                    idx: 4
                                }, {
                                    name: "\u7eff",
                                    color: "green",
                                    order: 2,
                                    idx: 2
                                }, {
                                    name: "\u9752",
                                    color: "#00FFFF",
                                    order: 3,
                                    idx: 5
                                }, {
                                    name: "\u84dd",
                                    color: "blue",
                                    order: 4,
                                    idx: 3
                                }, {
                                    name: "\u7d2b",
                                    color: "purple",
                                    order: 5,
                                    idx: 6
                                }, {
                                    name: "\u767d",
                                    color: "white",
                                    order: 6,
                                    idx: 7
                                }, {
                                    name: "\u8df3\u53d8",
                                    color: "transparent",
                                    order: 7,
                                    idx: 8
                                }, {
                                    name: "\u5168\u5f69",
                                    color: "transparent",
                                    order: 8,
                                    idx: 9
                                }],
                                defGroupList: n,
                                maxChar: 100,
                                maxPoints: 2048,
                                textData: {
                                    verTag: 0,
                                    runDir: 0,
                                    arrColor: ["red", "green", "blue", "yellow", "#00FFFF", "purple", "white"],
                                    txPointTime: 50,
                                    txColor: 9,
                                    txSize: 50,
                                    txDist: 50,
                                    runSpeed: 50,
                                    groupIdex: 0,
                                    groupList: n
                                },
                                position: {
                                    x: r,
                                    y: r
                                },
                                startPosition: {
                                    x: 0,
                                    y: 0
                                }
                            }
                        },
                        onLoad: function() {
                            var e = r("fontRegistryModule ");
                            this.fontNameList = e.getFontNameList();
                            var t = a.globalData.getCmdData("textData");
                            this.textData = t;
                            for (var n = 0; n < this.textData.groupList.length; n++) null == this.textData.groupList[n].fontIdex && (this.textData.groupList[n].fontIdex = this.fontIdex)
                        },
                        onUnload: function() {
                            this.saveDeskTop()
                        },
                        onReady: function() {},
                        onHide: function() {
                            this.saveDeskTop()
                        },
                        onShow: function() {
                            var t = this;
                            this.maxStrCount = .26 * this.pageWidth / (26 * this.scUnit), e("log", "this.firstShow", this.firstShow, " at sub/pages/text/text.js:124"), this.firstShow && (this.firstShow = !1, this.restoreDeskTop()), this.needRefresh && (e("log", "needRefresh", " at sub/pages/text/text.js:131"), this.needRefresh = !1, setTimeout((function() {
                                o.onReady(t)
                            }), 200))
                        },
                        computed: {
                            textTime: {
                                get: function() {
                                    for (var e = [], t = 0; t < this.textData.groupList.length; t++) {
                                        var r = parseFloat(this.textData.groupList[t].time);
                                        this.features.textDecimalTime ? e.push(r.toFixed(1)) : e.push(r.toFixed(0))
                                    }
                                    return e
                                }
                            }
                        },
                        components: {
                            uniPopup: h.default
                        },
                        methods: {
                            sendTxtCmd: function() {
                                var e = this;
                                a.globalData.setCmdData("textData", this.textData);
                                var t = this.textData.runDir,
                                    r = i.getXysCmdArr(this.textData.groupList, this.features, t, this.textData.verTag),
                                    n = this;
                                c.gosend(!0, r, (function(t, r) {
                                    if (0 == t) {
                                        e.showSending = !0;
                                        var h = uni.createCanvasContext("progressCanvas", e);
                                        c.drawProgress(h, 300 * e.scUnit, r)
                                    } else e.showSending = !1, n.lastSendTxtCmdComplete || setTimeout((function() {
                                        n.lastSendTxtCmdComplete = !0
                                    }), 2e3)
                                })) && (this.lastSendTxtCmdTime = (new Date).getTime())
                            },
                            sendTextCmdMustOk: function(e) {
                                var t = this;
                                e < this.lastSendTxtCmdTime || (this.sendTxtCmd(), setTimeout((function() {
                                    t.sendTextCmdMustOk(e)
                                }), 400))
                            },
                            sendCmd: function() {
                                a.globalData.setCmdData("textData", this.textData);
                                var e = i.getCmdStr(a.globalData.cmd, {
                                    features: this.features,
                                    groupList: this.textData.groupList
                                });
                                c.gosend(!1, e) && (this.sendColorTag = !1)
                            },
                            sendRvXysCmd: function() {
                                var e = a.globalData.cmd.settingData;
                                0 == this.textData.runDir ? e.xy = 0 : e.xy = 3;
                                var t = i.getSettingCmd(a.globalData.cmd.settingData);
                                c.gosend(!1, t) && this.sendCmdBtn(null)
                            },
                            readFontBase64: function(e) {
                                var t = this,
                                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                                if (this.fontLoadIdex != e) {
                                    var h = r("fontRegistryModule "),
                                        a = h.getFontList(this),
                                        i = a[e].file,
                                        c = a[e].mode,
                                        o = a[e].sn;
                                    d.readTTF(i, c, (function(r, h) {
                                        d.fontData = {
                                            data: r,
                                            mode: h,
                                            sn: o
                                        }, t.fontLoadIdex = e, n && n()
                                    }))
                                } else n && n()
                            },
                            setFontIdex: function(e) {
                                this.fontIdex != e && (this.fontIdex = e, a.globalData.saveData("text_fontIdex", this.fontIdex))
                            },
                            onFontChange: function(e) {
                                var t = e.detail.value;
                                this.setFontIdex(t), this.textData.groupList[this.textData.groupIdex].fontIdex = t, this.textData.groupList[this.textData.groupIdex].update = 1
                            },
                            fontSelect: function(t) {
                                var r = this;
                                uni.navigateTo({
                                    url: "/sub/pages/font/font?fontIdex=" + this.fontIdex,
                                    events: {
                                        acceptDataFromOpenedPage: function(t) {
                                            e("log", "acceptDataFromOpenedPage", t, " at sub/pages/text/text.js:242");
                                            var n = t.fontIdex;
                                            r.setFontIdex(n), r.textData.groupList[r.textData.groupIdex].fontIdex = n, r.textData.groupList[r.textData.groupIdex].update = 1
                                        }
                                    }
                                })
                            },
                            slPointTimeChange: function(e) {
                                var t = e.detail.value;
                                this.textData.txPointTime = t, this.sendCmd()
                            },
                            slTxSizeChange: function(e) {
                                var t = e.detail.value;
                                this.textData.txSize = t, o.doDrawPicEx(this), this.sendCmd()
                            },
                            btnColorChange: function(e) {
                                var t = parseInt(e.currentTarget.dataset.tag);
                                this.textData.groupList[this.textData.groupIdex].color = t, this.$set(this.textData, "txColor", t), o.doDrawPicEx(this), this.sendCmd()
                            },
                            slTxDistChange: function(e) {
                                var t = e.detail.value;
                                this.textData.txDist = t, this.sendCmd()
                            },
                            slRunSpeedChange: function(e) {
                                var t = e.detail.value;
                                this.textData.runSpeed = t, this.sendCmd()
                            },
                            radioRunDirectionChange: function(e) {
                                var t = e.detail.value;
                                "textUp" == t ? this.$set(this.textData, "runDir", 127) : "textDown" == t ? this.$set(this.textData, "runDir", 128) : "right" == t ? this.$set(this.textData, "runDir", 255) : this.$set(this.textData, "runDir", 0), this.sendColorTag = !0, this.sendCmdBtn(null)
                            },
                            radioDisplayChange: function(e) {
                                var t = e.detail.value;
                                "h" == t ? this.$set(this.textData, "verTag", 0) : this.$set(this.textData, "verTag", 255)
                            },
                            createXys: function(e) {
                                var t = this,
                                    r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                                    n = [
                                        [0, [{
                                            x: -194,
                                            y: 129,
                                            z: 1
                                        }, {
                                            x: -119,
                                            y: 153,
                                            z: 0
                                        }, {
                                            x: -100,
                                            y: 174,
                                            z: 1
                                        }], 234, 234],
                                        [0, [{
                                            x: -111,
                                            y: -105,
                                            z: 1
                                        }, {
                                            x: -42,
                                            y: -105,
                                            z: 1
                                        }], 234, 234],
                                        [0, [{
                                            x: -114,
                                            y: 153,
                                            z: 1
                                        }, {
                                            x: -114,
                                            y: -105,
                                            z: 1
                                        }, {
                                            x: -186,
                                            y: -108,
                                            z: 1
                                        }], 234, 234],
                                        [1, [{
                                            x: 189,
                                            y: -105,
                                            z: 1
                                        }, {
                                            x: 50,
                                            y: -102,
                                            z: 1
                                        }, {
                                            x: 58,
                                            y: -76,
                                            z: 0
                                        }, {
                                            x: 170,
                                            y: 44,
                                            z: 0
                                        }, {
                                            x: 186,
                                            y: 89,
                                            z: 0
                                        }, {
                                            x: 176,
                                            y: 142,
                                            z: 0
                                        }, {
                                            x: 149,
                                            y: 164,
                                            z: 0
                                        }, {
                                            x: 90,
                                            y: 166,
                                            z: 0
                                        }, {
                                            x: 53,
                                            y: 150,
                                            z: 0
                                        }, {
                                            x: 37,
                                            y: 121,
                                            z: 1
                                        }], 234, 234]
                                    ];
                                n = [
                                    [0, [{
                                        x: -216,
                                        y: 174,
                                        z: 1
                                    }, {
                                        x: -219,
                                        y: 88,
                                        z: 1
                                    }, {
                                        x: -366,
                                        y: 88,
                                        z: 1
                                    }, {
                                        x: -366,
                                        y: -88,
                                        z: 1
                                    }, {
                                        x: -339,
                                        y: -88,
                                        z: 1
                                    }, {
                                        x: -336,
                                        y: -66,
                                        z: 1
                                    }, {
                                        x: -219,
                                        y: -66,
                                        z: 1
                                    }, {
                                        x: -216,
                                        y: -210,
                                        z: 1
                                    }, {
                                        x: -187,
                                        y: -210,
                                        z: 1
                                    }, {
                                        x: -184,
                                        y: -66,
                                        z: 1
                                    }, {
                                        x: -64,
                                        y: -66,
                                        z: 1
                                    }, {
                                        x: -62,
                                        y: -88,
                                        z: 1
                                    }, {
                                        x: -35,
                                        y: -88,
                                        z: 1
                                    }, {
                                        x: -35,
                                        y: 88,
                                        z: 1
                                    }, {
                                        x: -184,
                                        y: 88,
                                        z: 1
                                    }, {
                                        x: -187,
                                        y: 174,
                                        z: 1
                                    }, {
                                        x: -216,
                                        y: 174,
                                        z: 0
                                    }], 400, 400],
                                    [0, [{
                                        x: -187,
                                        y: 59,
                                        z: 1
                                    }, {
                                        x: -64,
                                        y: 62,
                                        z: 1
                                    }, {
                                        x: -62,
                                        y: -37,
                                        z: 1
                                    }, {
                                        x: -184,
                                        y: -40,
                                        z: 1
                                    }, {
                                        x: -187,
                                        y: 59,
                                        z: 0
                                    }], 400, 400],
                                    [0, [{
                                        x: -339,
                                        y: 59,
                                        z: 1
                                    }, {
                                        x: -219,
                                        y: 62,
                                        z: 1
                                    }, {
                                        x: -216,
                                        y: -37,
                                        z: 1
                                    }, {
                                        x: -336,
                                        y: -40,
                                        z: 1
                                    }, {
                                        x: -339,
                                        y: 59,
                                        z: 0
                                    }], 400, 400],
                                    [1, [{
                                        x: 29,
                                        y: 152,
                                        z: 1
                                    }, {
                                        x: 29,
                                        y: -208,
                                        z: 1
                                    }, {
                                        x: 56,
                                        y: -208,
                                        z: 1
                                    }, {
                                        x: 58,
                                        y: -189,
                                        z: 1
                                    }, {
                                        x: 338,
                                        y: -189,
                                        z: 1
                                    }, {
                                        x: 341,
                                        y: -208,
                                        z: 1
                                    }, {
                                        x: 368,
                                        y: -208,
                                        z: 1
                                    }, {
                                        x: 368,
                                        y: 152,
                                        z: 1
                                    }, {
                                        x: 29,
                                        y: 152,
                                        z: 0
                                    }], 400, 400],
                                    [1, [{
                                        x: 58,
                                        y: 128,
                                        z: 1
                                    }, {
                                        x: 341,
                                        y: 126,
                                        z: 1
                                    }, {
                                        x: 338,
                                        y: -165,
                                        z: 1
                                    }, {
                                        x: 56,
                                        y: -162,
                                        z: 1
                                    }, {
                                        x: 58,
                                        y: 128,
                                        z: 0
                                    }], 400, 400],
                                    [1, [{
                                        x: 253,
                                        y: -32,
                                        z: 1
                                    }, {
                                        x: 237,
                                        y: -45,
                                        z: 1
                                    }, {
                                        x: 272,
                                        y: -82,
                                        z: 1
                                    }, {
                                        x: 288,
                                        y: -66,
                                        z: 1
                                    }, {
                                        x: 253,
                                        y: -32,
                                        z: 0
                                    }], 400, 400],
                                    [1, [{
                                        x: 85,
                                        y: 86,
                                        z: 1
                                    }, {
                                        x: 85,
                                        y: 62,
                                        z: 1
                                    }, {
                                        x: 186,
                                        y: 59,
                                        z: 1
                                    }, {
                                        x: 184,
                                        y: 6,
                                        z: 1
                                    }, {
                                        x: 90,
                                        y: 6,
                                        z: 1
                                    }, {
                                        x: 90,
                                        y: -18,
                                        z: 1
                                    }, {
                                        x: 186,
                                        y: -21,
                                        z: 1
                                    }, {
                                        x: 186,
                                        y: -93,
                                        z: 1
                                    }, {
                                        x: 77,
                                        y: -96,
                                        z: 1
                                    }, {
                                        x: 77,
                                        y: -120,
                                        z: 1
                                    }, {
                                        x: 320,
                                        y: -120,
                                        z: 1
                                    }, {
                                        x: 320,
                                        y: -96,
                                        z: 1
                                    }, {
                                        x: 210,
                                        y: -93,
                                        z: 1
                                    }, {
                                        x: 213,
                                        y: -18,
                                        z: 1
                                    }, {
                                        x: 304,
                                        y: -18,
                                        z: 1
                                    }, {
                                        x: 304,
                                        y: 6,
                                        z: 1
                                    }, {
                                        x: 213,
                                        y: 6,
                                        z: 1
                                    }, {
                                        x: 210,
                                        y: 59,
                                        z: 1
                                    }, {
                                        x: 312,
                                        y: 62,
                                        z: 1
                                    }, {
                                        x: 312,
                                        y: 86,
                                        z: 1
                                    }, {
                                        x: 85,
                                        y: 86,
                                        z: 0
                                    }], 400, 400]
                                ], n = [
                                    [0, [{
                                        x: 170,
                                        y: 112,
                                        z: 1
                                    }, {
                                        x: 141,
                                        y: 142,
                                        z: 1
                                    }, {
                                        x: 117,
                                        y: 118,
                                        z: 0
                                    }, {
                                        x: -112,
                                        y: 118,
                                        z: 0
                                    }, {
                                        x: -136,
                                        y: 131,
                                        z: 1
                                    }, {
                                        x: -136,
                                        y: -42,
                                        z: 0
                                    }, {
                                        x: -155,
                                        y: -120,
                                        z: 0
                                    }, {
                                        x: -184,
                                        y: -176,
                                        z: 1
                                    }, {
                                        x: -152,
                                        y: -136,
                                        z: 0
                                    }, {
                                        x: -126,
                                        y: -72,
                                        z: 0
                                    }, {
                                        x: -115,
                                        y: 112,
                                        z: 1
                                    }, {
                                        x: 170,
                                        y: 112,
                                        z: 0
                                    }], 400, 400],
                                    [0, [{
                                        x: -16,
                                        y: 182,
                                        z: 1
                                    }, {
                                        x: 16,
                                        y: 126,
                                        z: 1
                                    }, {
                                        x: 24,
                                        y: 158,
                                        z: 1
                                    }, {
                                        x: -16,
                                        y: 182,
                                        z: 0
                                    }], 400, 400]
                                ];
                                var h = e.replace("\n", "");
                                "" != h ? (uni.showLoading({
                                    title: this.$t("\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9..."),
                                    mask: !0
                                }), this.readFontBase64(this.fontIdex, (function() {
                                    var e = p.getXXYY(l, d.fontData, h, t.textRv);
                                    uni.hideLoading(), n = e.xxyy, d.ifHasChinese(e.notRec) && 1001 == d.fontData.sn && a.globalData.showModalTips(t.$t("\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c"), !0);
                                    var i = t.getSumSizeExclude(t.textData.groupIdex),
                                        c = o.getTxXySize(n);
                                    c.chCount + i.chCount > t.maxChar ? a.globalData.showModalTips(t.$t("\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165"), !0) : c.ptCount + i.ptCount > t.maxPoints ? a.globalData.showModalTips(t.$t("\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165"), !0) : r && r(n, e.xxyyRight, e.xxyyUp, e.xxyyDown)
                                }))) : r && r([])
                            },
                            getSumSizeExclude: function() {
                                for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, t = 0, r = 0, n = 0; n < this.textData.groupList.length; n++)
                                    if (null == e || n != e) {
                                        var h = o.getTxXySize(this.textData.groupList[n].xys);
                                        t += h.chCount, r += h.ptCount
                                    } return {
                                    chCount: t,
                                    ptCount: r
                                }
                            },
                            inputEvent: function(e) {
                                var t = e.detail.value;
                                this.textData.groupList[this.textData.groupIdex].update = 1, this.$set(this.textData.groupList[this.textData.groupIdex], "text", t)
                            },
                            onTimeBlur: function(t) {
                                var r = this.textData.groupList[t].time;
                                e("log", "time", r, " at sub/pages/text/text.js:973"), this.features.textDecimalTime ? r < 1 || r > 25.5 ? (a.globalData.showModalTips(this.$t("text_time_range"), !0), this.$set(this.textData.groupList[t], "time", 5)) : this.$set(this.textData.groupList[t], "time", Math.floor(10 * r) / 10) : r < 1 || r > 255 ? (a.globalData.showModalTips(this.$t("\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c"), !0), this.$set(this.textData.groupList[t], "time", 5)) : this.$set(this.textData.groupList[t], "time", Math.floor(r))
                            },
                            onGroupChange: function(e) {
                                this.textData.groupIdex != e.detail.value && (this.$set(this.textData, "groupIdex", e.detail.value), o.doDrawPicEx(this))
                            },
                            refreshCanvasDraw: function() {
                                var e = this;
                                this.$nextTick((function() {
                                    var t = uni.createSelectorQuery().in(e);
                                    t.select("#myCanvas").boundingClientRect((function(t) {
                                        e.cvWH = {
                                            w: t.width,
                                            h: t.height
                                        }, setTimeout((function() {
                                            o.doDrawPicEx(e)
                                        }), 100)
                                    })).exec()
                                }))
                            },
                            createXyByIdex: function(e) {
                                var t = this,
                                    r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                                if (0 != this.textData.groupList[e].update) {
                                    var n = this.textData.groupList[e].text;
                                    this.createXys(n, (function(n, h, i, c) {
                                        if (0 == n.length) return a.globalData.showModalTips(t.inputNote, !0), void(r && r());
                                        t.textData.groupList[e].xys = n, t.textData.groupList[e].XysRight = h, t.textData.groupList[e].XysUp = i, t.textData.groupList[e].XysDown = c, t.textData.groupList[e].update = 0, r && r()
                                    }))
                                } else r && r()
                            },
                            checkCurrentGroupOk: function() {
                                var e = this.textData.groupList[this.textData.groupIdex].xys,
                                    t = this.textData.groupList[this.textData.groupIdex].text,
                                    r = this.textData.groupList[this.textData.groupIdex].fontIdex,
                                    n = !0,
                                    h = "";
                                if (1007 == this.fontNameList[r].sn) return !0;
                                for (var i = 0; i < e.length; i++) {
                                    var c = e[i][0];
                                    if (e[i][1].length <= 1 && " " != t[c]) {
                                        for (var o = !0, s = 0; s < h.length; s++)
                                            if (h[s] == t[c]) {
                                                o = !1;
                                                break
                                            } o && (h += t[c]), n = !1
                                    }
                                }
                                if (!n) {
                                    var l = this.fontNameList[r].name;
                                    return h.length > 4 && (h = h.substring(0, 3) + "..."), a.globalData.showModalTips(this.$t("\u7b2c") + (this.textData.groupIdex + 1) + this.$t("\u7ec4\u5b57\u4f53") + this.$t(l) + this.$t("\u4e0d\u652f\u6301\u6587\u672c") + '"' + h + '",' + this.$t("\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5"), !0), !1
                                }
                                return !0
                            },
                            addGroup: function(e) {
                                var t = this;
                                if (this.textData.groupList.length >= 4) a.globalData.showModalTips(this.$t("\u6700\u591a4\u4e2a\u5206\u7ec4"), !0);
                                else if ("" != this.textData.groupList[this.textData.groupIdex].text.trim()) {
                                    var r = this;
                                    this.createXyByIdex(this.textData.groupIdex, (function() {
                                        "" != t.textData.groupList[t.textData.groupIdex].text.trim() ? r.checkCurrentGroupOk() && (r.textData.groupList.push({
                                            text: "",
                                            time: 5,
                                            color: 9,
                                            update: 0,
                                            fontIdex: r.fontIdex,
                                            xys: []
                                        }), r.$set(r.textData, "groupIdex", r.textData.groupList.length - 1), r.$set(t.textData, "txColor", r.textData.groupList[r.textData.groupIdex].color), r.refreshCanvasDraw(), r.sendColorTag = !0, r.textInput = !1, setTimeout((function() {
                                            r.textInput = !0
                                        }), 100)) : a.globalData.showModalTips(t.inputNote, !0)
                                    }))
                                } else a.globalData.showModalTips(this.inputNote, !0)
                            },
                            oprEdit: function(e) {
                                var t = this;
                                this.textData.groupIdex !== e && ("" != this.textData.groupList[this.textData.groupIdex].text.trim() ? this.createXyByIdex(this.textData.groupIdex, (function() {
                                    t.checkCurrentGroupOk() && (t.$set(t.textData, "groupIdex", e), t.setFontIdex(t.textData.groupList[t.textData.groupIdex].fontIdex), t.$set(t.textData, "txColor", t.textData.groupList[t.textData.groupIdex].color), t.refreshCanvasDraw())
                                })) : a.globalData.showModalTips(this.inputNote, !0))
                            },
                            changeTimeClick: function(e, t) {
                                var r = 0;
                                this.features.textDecimalTime ? (r = parseFloat(this.textData.groupList[t].time), r += .1 * e, r < 1 && (r = 1), r > 25.5 && (r = 25.5), r = Math.round(10 * r) / 10) : (r = parseInt(this.textData.groupList[t].time), r += e, r < 1 && (r = 1), r > 255 && (r = 255)), this.$set(this.textData.groupList[t], "time", r)
                            },
                            deleteGroup: function(t) {
                                if (this.textData.groupIdex === t && !(this.textData.groupList.length <= 1)) {
                                    var r = this;
                                    uni.showModal({
                                        title: this.$t("\u63d0\u793a"),
                                        confirmText: this.$t("\u786e\u5b9a"),
                                        cancelText: this.$t("\u53d6\u6d88"),
                                        content: this.$t("\u662f\u5426\u5220\u9664\u7b2c") + (t + 1) + this.$t("\u7ec4") + "?",
                                        success: function(n) {
                                            n.confirm ? (r.textData.groupList.splice(t, 1), r.textData.groupIdex > r.textData.groupList.length - 1 ? r.$set(r.textData, "groupIdex", r.textData.groupList.length - 1) : r.$set(r.textData, "groupIdex", r.textData.groupIdex), r.popupTimeIndex = r.textData.groupIdex, r.sendColorTag = !0, r.setFontIdex(r.textData.groupList[r.textData.groupIdex].fontIdex), r.$set(r.textData, "txColor", r.textData.groupList[r.textData.groupIdex].color), setTimeout((function() {
                                                r.refreshCanvasDraw()
                                            }), 100)) : n.cancel && e("log", "\u7528\u6237\u70b9\u51fb\u53d6\u6d88", " at sub/pages/text/text.js:1159")
                                        }
                                    })
                                }
                            },
                            setTimeInput: function(e) {
                                this.popupTimeIndex = e, this.$refs.popupTime.open("bottom")
                            },
                            previwBtn: function(e) {
                                var t = this;
                                this.createXyByIdex(this.textData.groupIdex, (function() {
                                    o.doDrawPicEx(t)
                                }))
                            },
                            sendCmdBtn: function(e) {
                                var t = this;
                                this.lastSendTxtCmdComplete && this.createXyByIdex(this.textData.groupIdex, (function() {
                                    "" != t.textData.groupList[t.textData.groupIdex].text.trim() ? t.checkCurrentGroupOk() && (t.sendColorTag && t.sendCmd(), t.lastSendTxtCmdComplete = !1, t.sendTextCmdMustOk((new Date).getTime()), o.doDrawPicEx(t)) : a.globalData.showModalTips(t.inputNote, !0)
                                }))
                            },
                            saveDeskTop: function() {
                                var e = this.getSumSizeExclude(),
                                    t = {
                                        features: this.features,
                                        textData: this.textData
                                    };
                                s.saveTextFileData("saveDeskTopFile_002", t, e, !0)
                            },
                            restoreDeskTop: function() {
                                var t = s.getTextFileData("saveDeskTopFile_002", !0);
                                if (t) {
                                    var r = t.data.features,
                                        n = this.features;
                                    if (r.textDecimalTime != n.textDecimalTime || r.textModeFix01 != n.textModeFix01 || !(n.textUpDown && r.hasOwnProperty("textUpDown") && r.textUpDown) && n.textUpDown) return e("log", "\u5f53\u524d\u4fdd\u5b58\u7684\u6587\u672c\u683c\u5f0f\u4e0d\u652f\u6301", " at sub/pages/text/text.js:1211"), this.textData.groupList = this.defGroupList, void(this.textData.groupIdex = 0);
                                    a.globalData.cmd.textData.refresh ? (a.globalData.cmd.textData.refresh = !1, this.textData.groupIdex = t.data.textData.groupIdex, this.textData.groupList = t.data.textData.groupList) : this.textData = t.data.textData;
                                    for (var h = 0; h < this.textData.groupList.length; h++) null == this.textData.groupList[h].fontIdex && (this.textData.groupList[h].fontIdex = this.fontIdex);
                                    this.textData.groupList.length > 0 && this.setFontIdex(this.textData.groupList[this.textData.groupIdex].fontIdex), this.sendColorTag = !0, this.needRefresh = !0
                                }
                            },
                            saveTextFileData: function(e) {
                                var t = this;
                                this.createXyByIdex(this.textData.groupIdex, (function() {
                                    if ("" == t.textData.groupList[t.textData.groupIdex].text.trim()) return a.globalData.showModalTips(t.$t("\u7b2c") + (t.textData.groupIdex + 1) + t.$t("\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u4fdd\u5b58"), !0), !1;
                                    if (t.checkCurrentGroupOk()) {
                                        o.doDrawPicEx(t);
                                        var r = t.getSumSizeExclude(),
                                            n = {
                                                features: t.features,
                                                textData: t.textData
                                            };
                                        s.saveTextFileData(e, n, r), t.currSelectedFile = e, a.globalData.showModalTips(t.$t("\u4fdd\u5b58\u6210\u529f"))
                                    }
                                }))
                            },
                            getFileDataByName: function(e) {
                                var t = s.getTextFileData(e);
                                if (t) {
                                    this.textData = t.data.textData;
                                    var r = !1;
                                    this.textData.hasOwnProperty("runDir") || (this.textData["runDir"] = 0, r = this.features.arbPlay);
                                    for (var n = 0; n < this.textData.groupList.length; n++) null == this.textData.groupList[n].fontIdex && (this.textData.groupList[n].fontIdex = this.fontIdex), r && (this.textData.groupList[n].update = 1);
                                    this.textData.groupList.length > 0 && this.setFontIdex(this.textData.groupList[this.textData.groupIdex].fontIdex), this.sendColorTag = !0, this.needRefresh = !0, this.currSelectedFile = e
                                }
                            },
                            checkAndAddTextFile: function(t) {
                                var r = this;
                                uni.showModal({
                                    title: this.$t("\u8bf7\u8f93\u5165\u6587\u4ef6\u540d"),
                                    placeholderText: t,
                                    editable: !0,
                                    success: function(n) {
                                        if (n.confirm) {
                                            var h = "" == n.content ? t : n.content;
                                            if ("" == h) uni.showModal({
                                                content: r.$t("\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a"),
                                                showCancel: !1,
                                                success: function(e) {},
                                                fail: function(e) {},
                                                complete: function() {
                                                    r.checkAndAddTextFile(t)
                                                }
                                            });
                                            else {
                                                var a = s.getTextFileData(h);
                                                a ? uni.showModal({
                                                    content: r.$t("\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed"),
                                                    showCancel: !0,
                                                    success: function(e) {
                                                        e.confirm ? r.saveTextFileData(h) : r.checkAndAddTextFile(t)
                                                    },
                                                    fail: function(e) {}
                                                }) : r.saveTextFileData(h)
                                            }
                                        } else n.cancel && e("log", "\u7528\u6237\u70b9\u51fb\u53d6\u6d88", " at sub/pages/text/text.js:1319")
                                    }
                                })
                            },
                            fileAddAddClick: function() {
                                if ("" != this.textData.groupList[this.textData.groupIdex].text) {
                                    var e = s.getTextFileNames();
                                    if (e.count >= 50) a.globalData.showModalTips(this.$t("\u5df2\u8d85\u8fc7\u6700\u5927\u6587\u4ef6\u6570\u91cf ") + 50, !0);
                                    else if (e.noSpace) a.globalData.showModalTips(this.$t("\u5b58\u50a8\u7a7a\u95f4\u4e0d\u8db3"), !0);
                                    else {
                                        var t = s.getNewFileName(!1);
                                        this.checkAndAddTextFile(t)
                                    }
                                } else a.globalData.showModalTips(this.inputNote)
                            },
                            fileAddSaveClick: function() {
                                if ("" != this.textData.groupList[this.textData.groupIdex].text) {
                                    var e = this;
                                    uni.showModal({
                                        content: e.$t("\u4fdd\u5b58\u6587\u4ef6") + this.currSelectedFile + "?",
                                        showCancel: !0,
                                        success: function(t) {
                                            t.confirm && e.saveTextFileData(e.currSelectedFile)
                                        },
                                        fail: function(e) {}
                                    })
                                } else a.globalData.showModalTips(this.inputNote)
                            },
                            fileAddSelectClick: function() {
                                var t = this;
                                uni.navigateTo({
                                    url: "/sub/pages/files/files",
                                    events: {
                                        acceptDataFromOpenedPage: function(r) {
                                            e("log", "acceptDataFromOpenedPage", r, " at sub/pages/text/text.js:1365"), t.getFileDataByName(r.fileName)
                                        }
                                    },
                                    success: function(e) {
                                        e.eventChannel.emit("acceptDataFromOpenerPage", {
                                            callFrom: "text"
                                        })
                                    },
                                    fail: function(t) {
                                        e("log", t, " at sub/pages/text/text.js:1373")
                                    }
                                })
                            },
                            onBtnSetTouchStart: function(e) {
                                this.startPosition.x = e.touches[0].clientX - this.position.x, this.startPosition.y = e.touches[0].clientY - this.position.y
                            },
                            onBtnSetTouchMove: function(e) {
                                this.position.x = e.touches[0].clientX - this.startPosition.x, this.position.y = e.touches[0].clientY - this.startPosition.y
                            },
                            onBtnSetTouchEnd: function() {},
                            onBtnSetClick: function(e) {
                                uni.navigateTo({
                                    url: "/pages/subset/subset"
                                })
                            },
                            fileAddClick: function(t) {
                                var r = this,
                                    n = [this.$t("\u53e6\u5b58\u6587\u4ef6"), this.$t("\u9009\u62e9\u6587\u4ef6")];
                                this.currSelectedFile && n.push(this.$t("\u4fdd\u5b58\u6587\u4ef6")), uni.showActionSheet({
                                    itemList: n,
                                    success: function(e) {
                                        0 == e.tapIndex && r.fileAddAddClick(), 1 == e.tapIndex && r.fileAddSelectClick(), 2 == e.tapIndex && r.fileAddSaveClick()
                                    },
                                    fail: function(t) {
                                        e("log", t.errMsg, " at sub/pages/text/text.js:1410")
                                    }
                                })
                            }
                        }
                    };
                t.default = b
            }).call(this, r("f3b9")["default"])
        },
        "getGlobalObject": function(t, r) {
            var n;
            n = function() {
                return this
            }();
            try {
                n = n || new Function("return this")()
            } catch (e) {
                "object" === typeof window && (n = window)
            }
            t.exports = n
        },
        "base64js": function(e, t, r) {
            "use strict";
            t.byteLength = function(e) {
                var t = s(e),
                    r = t[0],
                    n = t[1];
                return 3 * (r + n) / 4 - n
            }, t.toByteArray = function(e) {
                var t, r, n = s(e),
                    i = n[0],
                    c = n[1],
                    o = new a(function(e, t, r) {
                        return 3 * (t + r) / 4 - r
                    }(0, i, c)),
                    l = 0,
                    p = c > 0 ? i - 4 : i;
                for (r = 0; r < p; r += 4) t = h[e.charCodeAt(r)] << 18 | h[e.charCodeAt(r + 1)] << 12 | h[e.charCodeAt(r + 2)] << 6 | h[e.charCodeAt(r + 3)], o[l++] = t >> 16 & 255, o[l++] = t >> 8 & 255, o[l++] = 255 & t;
                2 === c && (t = h[e.charCodeAt(r)] << 2 | h[e.charCodeAt(r + 1)] >> 4, o[l++] = 255 & t);
                1 === c && (t = h[e.charCodeAt(r)] << 10 | h[e.charCodeAt(r + 1)] << 4 | h[e.charCodeAt(r + 2)] >> 2, o[l++] = t >> 8 & 255, o[l++] = 255 & t);
                return o
            }, t.fromByteArray = function(e) {
                for (var t, r = e.length, h = r % 3, a = [], i = 0, c = r - h; i < c; i += 16383) a.push(p(e, i, i + 16383 > c ? c : i + 16383));
                1 === h ? (t = e[r - 1], a.push(n[t >> 2] + n[t << 4 & 63] + "==")) : 2 === h && (t = (e[r - 2] << 8) + e[r - 1], a.push(n[t >> 10] + n[t >> 4 & 63] + n[t << 2 & 63] + "="));
                return a.join("")
            };
            for (var n = [], h = [], a = "undefined" !== typeof Uint8Array ? Uint8Array : Array, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", c = 0, o = i.length; c < o; ++c) n[c] = i[c], h[i.charCodeAt(c)] = c;

            function s(e) {
                var t = e.length;
                if (t % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                var r = e.indexOf("="); - 1 === r && (r = t);
                var n = r === t ? 0 : 4 - r % 4;
                return [r, n]
            }

            function l(e) {
                return n[e >> 18 & 63] + n[e >> 12 & 63] + n[e >> 6 & 63] + n[63 & e]
            }

            function p(e, t, r) {
                for (var n, h = [], a = t; a < r; a += 3) n = (e[a] << 16 & 16711680) + (e[a + 1] << 8 & 65280) + (255 & e[a + 2]), h.push(l(n));
                return h.join("")
            }
            h["-".charCodeAt(0)] = 62, h["_".charCodeAt(0)] = 63
        },
        "playListManagerComponent ": function(e, t, r) {
            "use strict";
            (function(e) {
                var n = r("47a9");
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var h = n(r("762b")),
                    a = getApp(),
                    i = r("720d"),
                    c = r("3b77"),
                    o = r("c4ce"),
                    s = r("bbc7"),
                    l = a.globalData.MaxSaveFileCount,
                    p = a.globalData.MaxListCount,
                    d = {
                        data: function() {
                            var e = a.globalData.getDeviceFeatures(),
                                t = s.colorSeg;
                            return {
                                screen_width: a.globalData.screen_width_str,
                                scUnit: a.globalData.screen_width_float,
                                rtl: a.globalData.rtl,
                                ntitle: this.$t("\u64ad\u653e\u5217\u8868"),
                                playListName: "",
                                playListNamesAll: [],
                                playListNewName: "",
                                selectFiles: [],
                                drawCanvas: {
                                    w: s.defaultWith,
                                    h: s.defaultHeight
                                },
                                features: e,
                                colorSeg: t,
                                viewImgIdx: 0,
                                viewImgPath: "",
                                viewImgState: "play",
                                currFileData: [],
                                slviewImgTime: 5,
                                renamePlayFile: !1,
                                drawCanvasShow: !0
                            }
                        },
                        onShow: function() {
                            var e = i.getPlayListFileNames();
                            this.playListNamesAll = e.fileNames
                        },
                        components: {
                            uniPopup: h.default
                        },
                        methods: {
                            playListFileClick: function(e) {
                                var t = this,
                                    r = i.getPlayListFileData(e);
                                if (r) {
                                    var n = r.data;
                                    if (0 == n.length) return;
                                    uni.showLoading({
                                        mask: !0
                                    }), setTimeout((function() {
                                        for (var e = "", r = 0; r < n.length; r++) {
                                            "" != e && (e += "zz");
                                            var h = t.playDrawFile(n[r].fileName, n[r].playTime);
                                            e += c.drawPointStrToCmd(h, t.features, r)
                                        }
                                        uni.hideLoading(), e && o.gosend(!0, e, t.sendComplete)
                                    }), 100)
                                }
                            },
                            playDrawFile: function(e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1,
                                    r = "",
                                    n = i.getHandDrawImg(e);
                                if (n) {
                                    var h = uni.createCanvasContext("drawCanvas", this);
                                    h.setLineWidth(4);
                                    var a = {
                                            ctx: h,
                                            w: this.drawCanvas.w,
                                            h: this.drawCanvas.h,
                                            draw_line_type: [],
                                            colorSeg: this.colorSeg
                                        },
                                        o = s.drawPs(n.drawPoints, a, null);
                                    r = c.getDrawPointStr(o, n.pisObj, this.features, t)
                                }
                                return r
                            },
                            deleteListFileClick: function(t) {
                                var r = this;
                                uni.showModal({
                                    content: this.$t("\u5220\u9664") + " " + t + "?",
                                    success: function(n) {
                                        if (n.confirm) {
                                            var h = i.deletePlayList(t);
                                            if (h) {
                                                var c = r.playListNamesAll.indexOf(t); - 1 !== c && r.playListNamesAll.splice(c, 1), a.globalData.showModalTips(r.$t("\u5220\u9664\u6210\u529f"))
                                            } else a.globalData.showModalTips(r.$t("\u5220\u9664\u5931\u8d25"))
                                        } else n.cancel && e("log", "\u7528\u6237\u70b9\u51fb\u53d6\u6d88", " at sub/pages/listMaster/listMaster.js:103")
                                    }
                                })
                            },
                            listNameInputOkClick: function(e) {
                                this.$refs.listNameInput.close();
                                var t = this.playListNewName,
                                    r = this.playListName;
                                this.savePlayListName(t, r, this.renamePlayFile)
                            },
                            savePlayListName: function(e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                                    n = this;
                                if ("" == e) uni.showModal({
                                    content: n.$t("\u5217\u8868\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a"),
                                    showCancel: !1,
                                    success: function(e) {},
                                    fail: function(e) {},
                                    complete: function() {
                                        n.$refs.listNameInput.open("center")
                                    }
                                });
                                else {
                                    var h = n.playListNamesAll.indexOf(e);
                                    if (-1 != h) r && t == e || uni.showModal({
                                        content: n.$t("\u5217\u8868\u540d\u79f0\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165"),
                                        showCancel: !1,
                                        success: function(e) {
                                            n.$refs.listNameInput.open("center")
                                        },
                                        fail: function(e) {}
                                    });
                                    else {
                                        var c = i.savePlayListFileData(e, n.selectFiles);
                                        if (c) {
                                            if (r) {
                                                if (i.deletePlayList(t)) {
                                                    var o = n.playListNamesAll.indexOf(t);
                                                    n.playListNamesAll.splice(o, 1)
                                                }
                                                a.globalData.showModalTips(n.$t("\u4fee\u6539\u6210\u529f"))
                                            } else a.globalData.showModalTips(n.$t("\u6dfb\u52a0\u6210\u529f"));
                                            n.playListNamesAll.unshift(e), n.playListName = e
                                        } else r ? a.globalData.showModalTips(n.$t("\u4fee\u6539\u5931\u8d25")) : a.globalData.showModalTips(n.$t("\u6dfb\u52a0\u5931\u8d25"))
                                    }
                                }
                            },
                            listNameNewInput: function(e) {
                                this.playListNewName = e.detail.value
                            },
                            listNameInputCancelClick: function(e) {
                                this.$refs.listNameInput.close()
                            },
                            playListEdit: function(e) {
                                "" != e && uni.navigateTo({
                                    url: "/sub/pages/playList/playList?playListName=" + e
                                })
                            },
                            playListAdd: function(t) {
                                var r = this,
                                    n = [];
                                uni.navigateTo({
                                    url: "/sub/pages/files/files",
                                    events: {
                                        acceptDataFromOpenedPage: function(t) {
                                            e("log", "acceptDataFromOpenedPage", JSON.stringify(t.selectFiles), " at sub/pages/listMaster/listMaster.js:219"), r.saveNewPlayList(t.selectFiles)
                                        }
                                    },
                                    success: function(e) {
                                        e.eventChannel.emit("acceptDataFromOpenerPage", {
                                            callFrom: "draw",
                                            mode: "add",
                                            listCount: n.length
                                        })
                                    },
                                    fail: function(t) {
                                        e("log", t, " at sub/pages/listMaster/listMaster.js:227")
                                    }
                                })
                            },
                            saveNewPlayList: function(e) {
                                if (!(e.length <= 0))
                                    if (e.length > p) a.globalData.showModalTips(this.$t("\u5df2\u8d85\u8fc7\u6700\u5927\u6587\u4ef6\u6570\u91cf ") + p, !0);
                                    else {
                                        var t = i.getNewPlayListName();
                                        t.count >= l ? a.globalData.showModalTips(this.$t("\u5df2\u8d85\u8fc7\u6700\u5927\u6587\u4ef6\u6570\u91cf ") + l, !0) : t.noSpace ? a.globalData.showModalTips(this.$t("\u5b58\u50a8\u7a7a\u95f4\u4e0d\u8db3"), !0) : (this.renamePlayFile = !1, this.playListNewName = i.getNewPlayListName(), this.$refs.listNameInput.open("center"), this.selectFiles = e)
                                    }
                            },
                            editListFileClick: function(t) {
                                this.renamePlayFile = !0, this.playListName = t, this.playListNewName = t;
                                var r = i.getPlayListFileData(t);
                                e("log", "editListFileClick", JSON.stringify(r), " at sub/pages/listMaster/listMaster.js:257"), this.selectFiles = r.data, this.$refs.listNameInput.open("center")
                            },
                            playListFileSelectClick: function(e) {
                                this.playListName = e
                            },
                            playListViewClick: function(e) {
                                this.viewImgIdx = 0;
                                var t = i.getPlayListFileData(e);
                                this.currFileData = t.data, this.$refs.playListView.open("bottom"), this.viewImgState = "play", this.autoView(0)
                            },
                            playListViewChange: function(e) {
                                e.show || (this.viewImgState = "stop")
                            },
                            playListViewImgClick: function(e) {
                                "stop2" == this.viewImgState ? (this.viewImgState = "play", this.autoView(0)) : "play" == this.viewImgState && (this.viewImgState = "stop")
                            },
                            autoView: function(t) {
                                if (e("log", "autoView ", this.viewImgState, " at sub/pages/listMaster/listMaster.js:288"), "stop" != this.viewImgState) {
                                    this.viewImgIdx >= this.currFileData.length - 1 && (this.viewImgIdx = 0, t = 0);
                                    var r = this;
                                    this.getPlayListItemImg(t, (function(e, t) {
                                        r.viewImgPath = t, r.currFileData.length > 1 ? setTimeout((function() {
                                            r.autoView(1)
                                        }), 150 * r.slviewImgTime) : r.viewImgState = "stop2"
                                    }))
                                } else this.viewImgState = "stop2"
                            },
                            getPlayListItemImg: function(e, t) {
                                var r = this.viewImgIdx + e;
                                if (!(r < 0 || r >= this.currFileData.length)) {
                                    this.viewImgIdx = r;
                                    var n = this.currFileData[r],
                                        h = i.getHandDrawImg(n.fileName);
                                    h && i.isImgFileExist(h.picPath, (function(e) {
                                        e ? t(n, h.picPath) : that.createImg(fileName, h, (function(e, r) {
                                            e && t(n, r)
                                        }))
                                    }))
                                }
                            },
                            createImg: function(e, t, r) {
                                var n = uni.createCanvasContext("drawCanvas", this);
                                n.setLineWidth(4);
                                var h = {
                                    ctx: n,
                                    w: this.drawCanvas.w,
                                    h: this.drawCanvas.h,
                                    draw_line_type: [],
                                    colorSeg: this.colorSeg
                                };
                                s.drawPs(t.drawPoints, h, null);
                                n.draw(!1, (function(n) {
                                    uni.canvasToTempFilePath({
                                        canvasId: "drawCanvas",
                                        destWidth: 100,
                                        destHeight: 100,
                                        success: function(n) {
                                            i.saveHandDrawImg(e, n.tempFilePath, t.drawPoints, t.pointCnt, t.pisObj, t.features), r(!0, n.tempFilePath)
                                        },
                                        fail: function(e) {
                                            r(!1, "")
                                        }
                                    })
                                }))
                            },
                            slViewTimeChange: function(e) {
                                var t = e.detail.value;
                                this.slviewImgTime = t
                            },
                            playListViewItemClick: function(e) {
                                var t = this;
                                "play" == this.viewImgState && (this.viewImgState = "stop"), this.getPlayListItemImg(e, (function(e, r) {
                                    t.viewImgPath = r
                                }))
                            }
                        }
                    };
                t.default = d
            }).call(this, r("f3b9")["default"])
        },
        "buffer": function(t, r, n) {
            "use strict";
            (function(t) {
                /*!
                 * The buffer module from node.js, for the browser.
                 *
                 * @author   Feross Aboukhadijeh <http://feross.org>
                 * @license  MIT
                 */
                var h = n("base64js"),
                    a = n("ba37"),
                    i = n("b0e4");

                function c() {
                    return s.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
                }

                function o(e, t) {
                    if (c() < t) throw new RangeError("Invalid typed array length");
                    return s.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t), e.__proto__ = s.prototype) : (null === e && (e = new s(t)), e.length = t), e
                }

                function s(e, t, r) {
                    if (!s.TYPED_ARRAY_SUPPORT && !(this instanceof s)) return new s(e, t, r);
                    if ("number" === typeof e) {
                        if ("string" === typeof t) throw new Error("If encoding is specified then the first argument must be a string");
                        return d(this, e)
                    }
                    return l(this, e, t, r)
                }

                function l(e, t, r, n) {
                    if ("number" === typeof t) throw new TypeError('"value" argument must not be a number');
                    return "undefined" !== typeof ArrayBuffer && t instanceof ArrayBuffer ? function(e, t, r, n) {
                        if (t.byteLength, r < 0 || t.byteLength < r) throw new RangeError("'offset' is out of bounds");
                        if (t.byteLength < r + (n || 0)) throw new RangeError("'length' is out of bounds");
                        t = void 0 === r && void 0 === n ? new Uint8Array(t) : void 0 === n ? new Uint8Array(t, r) : new Uint8Array(t, r, n);
                        s.TYPED_ARRAY_SUPPORT ? (e = t, e.__proto__ = s.prototype) : e = b(e, t);
                        return e
                    }(e, t, r, n) : "string" === typeof t ? function(e, t, r) {
                        "string" === typeof r && "" !== r || (r = "utf8");
                        if (!s.isEncoding(r)) throw new TypeError('"encoding" must be a valid string encoding');
                        var n = 0 | j(t, r);
                        e = o(e, n);
                        var h = e.write(t, r);
                        h !== n && (e = e.slice(0, h));
                        return e
                    }(e, t, r) : function(e, t) {
                        if (s.isBuffer(t)) {
                            var r = 0 | g(t.length);
                            return e = o(e, r), 0 === e.length ? e : (t.copy(e, 0, 0, r), e)
                        }
                        if (t) {
                            if ("undefined" !== typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || "length" in t) return "number" !== typeof t.length || function(e) {
                                return e !== e
                            }(t.length) ? o(e, 0) : b(e, t);
                            if ("Buffer" === t.type && i(t.data)) return b(e, t.data)
                        }
                        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
                    }(e, t)
                }

                function p(e) {
                    if ("number" !== typeof e) throw new TypeError('"size" argument must be a number');
                    if (e < 0) throw new RangeError('"size" argument must not be negative')
                }

                function d(e, t) {
                    if (p(t), e = o(e, t < 0 ? 0 : 0 | g(t)), !s.TYPED_ARRAY_SUPPORT)
                        for (var r = 0; r < t; ++r) e[r] = 0;
                    return e
                }

                function b(e, t) {
                    var r = t.length < 0 ? 0 : 0 | g(t.length);
                    e = o(e, r);
                    for (var n = 0; n < r; n += 1) e[n] = 255 & t[n];
                    return e
                }

                function g(e) {
                    if (e >= c()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + c().toString(16) + " bytes");
                    return 0 | e
                }

                function j(e, t) {
                    if (s.isBuffer(e)) return e.length;
                    if ("undefined" !== typeof ArrayBuffer && "function" === typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)) return e.byteLength;
                    "string" !== typeof e && (e = "" + e);
                    var r = e.length;
                    if (0 === r) return 0;
                    for (var n = !1;;) switch (t) {
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return r;
                        case "utf8":
                        case "utf-8":
                        case void 0:
                            return L(e).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * r;
                        case "hex":
                            return r >>> 1;
                        case "base64":
                            return M(e).length;
                        default:
                            if (n) return L(e).length;
                            t = ("" + t).toLowerCase(), n = !0
                    }
                }

                function x(e, t, r) {
                    var n = !1;
                    if ((void 0 === t || t < 0) && (t = 0), t > this.length) return "";
                    if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
                    if (r >>>= 0, t >>>= 0, r <= t) return "";
                    e || (e = "utf8");
                    while (1) switch (e) {
                        case "hex":
                            return v(this, t, r);
                        case "utf8":
                        case "utf-8":
                            return z(this, t, r);
                        case "ascii":
                            return Q(this, t, r);
                        case "latin1":
                        case "binary":
                            return R(this, t, r);
                        case "base64":
                            return H(this, t, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return I(this, t, r);
                        default:
                            if (n) throw new TypeError("Unknown encoding: " + e);
                            e = (e + "").toLowerCase(), n = !0
                    }
                }

                function V(e, t, r) {
                    var n = e[t];
                    e[t] = e[r], e[r] = n
                }

                function f(e, t, r, n, h) {
                    if (0 === e.length) return -1;
                    if ("string" === typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, isNaN(r) && (r = h ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
                        if (h) return -1;
                        r = e.length - 1
                    } else if (r < 0) {
                        if (!h) return -1;
                        r = 0
                    }
                    if ("string" === typeof t && (t = s.from(t, n)), s.isBuffer(t)) return 0 === t.length ? -1 : F(e, t, r, n, h);
                    if ("number" === typeof t) return t &= 255, s.TYPED_ARRAY_SUPPORT && "function" === typeof Uint8Array.prototype.indexOf ? h ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : F(e, [t], r, n, h);
                    throw new TypeError("val must be string, number or Buffer")
                }

                function F(e, t, r, n, h) {
                    var a, i = 1,
                        c = e.length,
                        o = t.length;
                    if (void 0 !== n && (n = String(n).toLowerCase(), "ucs2" === n || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                        if (e.length < 2 || t.length < 2) return -1;
                        i = 2, c /= 2, o /= 2, r /= 2
                    }

                    function s(e, t) {
                        return 1 === i ? e[t] : e.readUInt16BE(t * i)
                    }
                    if (h) {
                        var l = -1;
                        for (a = r; a < c; a++)
                            if (s(e, a) === s(t, -1 === l ? 0 : a - l)) {
                                if (-1 === l && (l = a), a - l + 1 === o) return l * i
                            } else - 1 !== l && (a -= a - l), l = -1
                    } else
                        for (r + o > c && (r = c - o), a = r; a >= 0; a--) {
                            for (var p = !0, d = 0; d < o; d++)
                                if (s(e, a + d) !== s(t, d)) {
                                    p = !1;
                                    break
                                } if (p) return a
                        }
                    return -1
                }

                function k(e, t, r, n) {
                    r = Number(r) || 0;
                    var h = e.length - r;
                    n ? (n = Number(n), n > h && (n = h)) : n = h;
                    var a = t.length;
                    if (a % 2 !== 0) throw new TypeError("Invalid hex string");
                    n > a / 2 && (n = a / 2);
                    for (var i = 0; i < n; ++i) {
                        var c = parseInt(t.substr(2 * i, 2), 16);
                        if (isNaN(c)) return i;
                        e[r + i] = c
                    }
                    return i
                }

                function m(e, t, r, n) {
                    return q(L(t, e.length - r), e, r, n)
                }

                function P(e, t, r, n) {
                    return q(function(e) {
                        for (var t = [], r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r));
                        return t
                    }(t), e, r, n)
                }

                function u(e, t, r, n) {
                    return P(e, t, r, n)
                }

                function X(e, t, r, n) {
                    return q(M(t), e, r, n)
                }

                function N(e, t, r, n) {
                    return q(function(e, t) {
                        for (var r, n, h, a = [], i = 0; i < e.length; ++i) {
                            if ((t -= 2) < 0) break;
                            r = e.charCodeAt(i), n = r >> 8, h = r % 256, a.push(h), a.push(n)
                        }
                        return a
                    }(t, e.length - r), e, r, n)
                }

                function H(e, t, r) {
                    return 0 === t && r === e.length ? h.fromByteArray(e) : h.fromByteArray(e.slice(t, r))
                }

                function z(e, t, r) {
                    r = Math.min(e.length, r);
                    var n = [],
                        h = t;
                    while (h < r) {
                        var a, i, c, o, s = e[h],
                            l = null,
                            p = s > 239 ? 4 : s > 223 ? 3 : s > 191 ? 2 : 1;
                        if (h + p <= r) switch (p) {
                            case 1:
                                s < 128 && (l = s);
                                break;
                            case 2:
                                a = e[h + 1], 128 === (192 & a) && (o = (31 & s) << 6 | 63 & a, o > 127 && (l = o));
                                break;
                            case 3:
                                a = e[h + 1], i = e[h + 2], 128 === (192 & a) && 128 === (192 & i) && (o = (15 & s) << 12 | (63 & a) << 6 | 63 & i, o > 2047 && (o < 55296 || o > 57343) && (l = o));
                                break;
                            case 4:
                                a = e[h + 1], i = e[h + 2], c = e[h + 3], 128 === (192 & a) && 128 === (192 & i) && 128 === (192 & c) && (o = (15 & s) << 18 | (63 & a) << 12 | (63 & i) << 6 | 63 & c, o > 65535 && o < 1114112 && (l = o))
                        }
                        null === l ? (l = 65533, p = 1) : l > 65535 && (l -= 65536, n.push(l >>> 10 & 1023 | 55296), l = 56320 | 1023 & l), n.push(l), h += p
                    }
                    return function(e) {
                        var t = e.length;
                        if (t <= 4096) return String.fromCharCode.apply(String, e);
                        var r = "",
                            n = 0;
                        while (n < t) r += String.fromCharCode.apply(String, e.slice(n, n += 4096));
                        return r
                    }(n)
                }
                r.Buffer = s, r.SlowBuffer = function(e) {
                    +e != e && (e = 0);
                    return s.alloc(+e)
                }, r.INSPECT_MAX_BYTES = 50, s.TYPED_ARRAY_SUPPORT = void 0 !== t.TYPED_ARRAY_SUPPORT ? t.TYPED_ARRAY_SUPPORT : function() {
                    try {
                        var t = new Uint8Array(1);
                        return t.__proto__ = {
                            __proto__: Uint8Array.prototype,
                            foo: function() {
                                return 42
                            }
                        }, 42 === t.foo() && "function" === typeof t.subarray && 0 === t.subarray(1, 1).byteLength
                    } catch (e) {
                        return !1
                    }
                }(), r.kMaxLength = c(), s.poolSize = 8192, s._augment = function(e) {
                    return e.__proto__ = s.prototype, e
                }, s.from = function(e, t, r) {
                    return l(null, e, t, r)
                }, s.TYPED_ARRAY_SUPPORT && (s.prototype.__proto__ = Uint8Array.prototype, s.__proto__ = Uint8Array, "undefined" !== typeof Symbol && Symbol.species && s[Symbol.species] === s && Object.defineProperty(s, Symbol.species, {
                    value: null,
                    configurable: !0
                })), s.alloc = function(e, t, r) {
                    return function(e, t, r, n) {
                        return p(t), t <= 0 ? o(e, t) : void 0 !== r ? "string" === typeof n ? o(e, t).fill(r, n) : o(e, t).fill(r) : o(e, t)
                    }(null, e, t, r)
                }, s.allocUnsafe = function(e) {
                    return d(null, e)
                }, s.allocUnsafeSlow = function(e) {
                    return d(null, e)
                }, s.isBuffer = function(e) {
                    return !(null == e || !e._isBuffer)
                }, s.compare = function(e, t) {
                    if (!s.isBuffer(e) || !s.isBuffer(t)) throw new TypeError("Arguments must be Buffers");
                    if (e === t) return 0;
                    for (var r = e.length, n = t.length, h = 0, a = Math.min(r, n); h < a; ++h)
                        if (e[h] !== t[h]) {
                            r = e[h], n = t[h];
                            break
                        } return r < n ? -1 : n < r ? 1 : 0
                }, s.isEncoding = function(e) {
                    switch (String(e).toLowerCase()) {
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return !0;
                        default:
                            return !1
                    }
                }, s.concat = function(e, t) {
                    if (!i(e)) throw new TypeError('"list" argument must be an Array of Buffers');
                    if (0 === e.length) return s.alloc(0);
                    var r;
                    if (void 0 === t)
                        for (t = 0, r = 0; r < e.length; ++r) t += e[r].length;
                    var n = s.allocUnsafe(t),
                        h = 0;
                    for (r = 0; r < e.length; ++r) {
                        var a = e[r];
                        if (!s.isBuffer(a)) throw new TypeError('"list" argument must be an Array of Buffers');
                        a.copy(n, h), h += a.length
                    }
                    return n
                }, s.byteLength = j, s.prototype._isBuffer = !0, s.prototype.swap16 = function() {
                    var e = this.length;
                    if (e % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                    for (var t = 0; t < e; t += 2) V(this, t, t + 1);
                    return this
                }, s.prototype.swap32 = function() {
                    var e = this.length;
                    if (e % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                    for (var t = 0; t < e; t += 4) V(this, t, t + 3), V(this, t + 1, t + 2);
                    return this
                }, s.prototype.swap64 = function() {
                    var e = this.length;
                    if (e % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                    for (var t = 0; t < e; t += 8) V(this, t, t + 7), V(this, t + 1, t + 6), V(this, t + 2, t + 5), V(this, t + 3, t + 4);
                    return this
                }, s.prototype.toString = function() {
                    var e = 0 | this.length;
                    return 0 === e ? "" : 0 === arguments.length ? z(this, 0, e) : x.apply(this, arguments)
                }, s.prototype.equals = function(e) {
                    if (!s.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
                    return this === e || 0 === s.compare(this, e)
                }, s.prototype.inspect = function() {
                    var e = "",
                        t = r.INSPECT_MAX_BYTES;
                    return this.length > 0 && (e = this.toString("hex", 0, t).match(/.{2}/g).join(" "), this.length > t && (e += " ... ")), "<Buffer " + e + ">"
                }, s.prototype.compare = function(e, t, r, n, h) {
                    if (!s.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
                    if (void 0 === t && (t = 0), void 0 === r && (r = e ? e.length : 0), void 0 === n && (n = 0), void 0 === h && (h = this.length), t < 0 || r > e.length || n < 0 || h > this.length) throw new RangeError("out of range index");
                    if (n >= h && t >= r) return 0;
                    if (n >= h) return -1;
                    if (t >= r) return 1;
                    if (t >>>= 0, r >>>= 0, n >>>= 0, h >>>= 0, this === e) return 0;
                    for (var a = h - n, i = r - t, c = Math.min(a, i), o = this.slice(n, h), l = e.slice(t, r), p = 0; p < c; ++p)
                        if (o[p] !== l[p]) {
                            a = o[p], i = l[p];
                            break
                        } return a < i ? -1 : i < a ? 1 : 0
                }, s.prototype.includes = function(e, t, r) {
                    return -1 !== this.indexOf(e, t, r)
                }, s.prototype.indexOf = function(e, t, r) {
                    return f(this, e, t, r, !0)
                }, s.prototype.lastIndexOf = function(e, t, r) {
                    return f(this, e, t, r, !1)
                }, s.prototype.write = function(e, t, r, n) {
                    if (void 0 === t) n = "utf8", r = this.length, t = 0;
                    else if (void 0 === r && "string" === typeof t) n = t, r = this.length, t = 0;
                    else {
                        if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        t |= 0, isFinite(r) ? (r |= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0)
                    }
                    var h = this.length - t;
                    if ((void 0 === r || r > h) && (r = h), e.length > 0 && (r < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                    n || (n = "utf8");
                    for (var a = !1;;) switch (n) {
                        case "hex":
                            return k(this, e, t, r);
                        case "utf8":
                        case "utf-8":
                            return m(this, e, t, r);
                        case "ascii":
                            return P(this, e, t, r);
                        case "latin1":
                        case "binary":
                            return u(this, e, t, r);
                        case "base64":
                            return X(this, e, t, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return N(this, e, t, r);
                        default:
                            if (a) throw new TypeError("Unknown encoding: " + n);
                            n = ("" + n).toLowerCase(), a = !0
                    }
                }, s.prototype.toJSON = function() {
                    return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0)
                    }
                };

                function Q(e, t, r) {
                    var n = "";
                    r = Math.min(e.length, r);
                    for (var h = t; h < r; ++h) n += String.fromCharCode(127 & e[h]);
                    return n
                }

                function R(e, t, r) {
                    var n = "";
                    r = Math.min(e.length, r);
                    for (var h = t; h < r; ++h) n += String.fromCharCode(e[h]);
                    return n
                }

                function v(e, t, r) {
                    var n = e.length;
                    (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
                    for (var h = "", a = t; a < r; ++a) h += T(e[a]);
                    return h
                }

                function I(e, t, r) {
                    for (var n = e.slice(t, r), h = "", a = 0; a < n.length; a += 2) h += String.fromCharCode(n[a] + 256 * n[a + 1]);
                    return h
                }

                function w(e, t, r) {
                    if (e % 1 !== 0 || e < 0) throw new RangeError("offset is not uint");
                    if (e + t > r) throw new RangeError("Trying to access beyond buffer length")
                }

                function y(e, t, r, n, h, a) {
                    if (!s.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
                    if (t > h || t < a) throw new RangeError('"value" argument is out of bounds');
                    if (r + n > e.length) throw new RangeError("Index out of range")
                }

                function C(e, t, r, n) {
                    t < 0 && (t = 65535 + t + 1);
                    for (var h = 0, a = Math.min(e.length - r, 2); h < a; ++h) e[r + h] = (t & 255 << 8 * (n ? h : 1 - h)) >>> 8 * (n ? h : 1 - h)
                }

                function A(e, t, r, n) {
                    t < 0 && (t = 4294967295 + t + 1);
                    for (var h = 0, a = Math.min(e.length - r, 4); h < a; ++h) e[r + h] = t >>> 8 * (n ? h : 3 - h) & 255
                }

                function D(e, t, r, n, h, a) {
                    if (r + n > e.length) throw new RangeError("Index out of range");
                    if (r < 0) throw new RangeError("Index out of range")
                }

                function S(e, t, r, n, h) {
                    return h || D(e, 0, r, 4), a.write(e, t, r, n, 23, 4), r + 4
                }

                function Y(e, t, r, n, h) {
                    return h || D(e, 0, r, 8), a.write(e, t, r, n, 52, 8), r + 8
                }
                s.prototype.slice = function(e, t) {
                    var r, n = this.length;
                    if (e = ~~e, t = void 0 === t ? n : ~~t, e < 0 ? (e += n, e < 0 && (e = 0)) : e > n && (e = n), t < 0 ? (t += n, t < 0 && (t = 0)) : t > n && (t = n), t < e && (t = e), s.TYPED_ARRAY_SUPPORT) r = this.subarray(e, t), r.__proto__ = s.prototype;
                    else {
                        var h = t - e;
                        r = new s(h, void 0);
                        for (var a = 0; a < h; ++a) r[a] = this[a + e]
                    }
                    return r
                }, s.prototype.readUIntLE = function(e, t, r) {
                    e |= 0, t |= 0, r || w(e, t, this.length);
                    var n = this[e],
                        h = 1,
                        a = 0;
                    while (++a < t && (h *= 256)) n += this[e + a] * h;
                    return n
                }, s.prototype.readUIntBE = function(e, t, r) {
                    e |= 0, t |= 0, r || w(e, t, this.length);
                    var n = this[e + --t],
                        h = 1;
                    while (t > 0 && (h *= 256)) n += this[e + --t] * h;
                    return n
                }, s.prototype.readUInt8 = function(e, t) {
                    return t || w(e, 1, this.length), this[e]
                }, s.prototype.readUInt16LE = function(e, t) {
                    return t || w(e, 2, this.length), this[e] | this[e + 1] << 8
                }, s.prototype.readUInt16BE = function(e, t) {
                    return t || w(e, 2, this.length), this[e] << 8 | this[e + 1]
                }, s.prototype.readUInt32LE = function(e, t) {
                    return t || w(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
                }, s.prototype.readUInt32BE = function(e, t) {
                    return t || w(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
                }, s.prototype.readIntLE = function(e, t, r) {
                    e |= 0, t |= 0, r || w(e, t, this.length);
                    var n = this[e],
                        h = 1,
                        a = 0;
                    while (++a < t && (h *= 256)) n += this[e + a] * h;
                    return h *= 128, n >= h && (n -= Math.pow(2, 8 * t)), n
                }, s.prototype.readIntBE = function(e, t, r) {
                    e |= 0, t |= 0, r || w(e, t, this.length);
                    var n = t,
                        h = 1,
                        a = this[e + --n];
                    while (n > 0 && (h *= 256)) a += this[e + --n] * h;
                    return h *= 128, a >= h && (a -= Math.pow(2, 8 * t)), a
                }, s.prototype.readInt8 = function(e, t) {
                    return t || w(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
                }, s.prototype.readInt16LE = function(e, t) {
                    t || w(e, 2, this.length);
                    var r = this[e] | this[e + 1] << 8;
                    return 32768 & r ? 4294901760 | r : r
                }, s.prototype.readInt16BE = function(e, t) {
                    t || w(e, 2, this.length);
                    var r = this[e + 1] | this[e] << 8;
                    return 32768 & r ? 4294901760 | r : r
                }, s.prototype.readInt32LE = function(e, t) {
                    return t || w(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
                }, s.prototype.readInt32BE = function(e, t) {
                    return t || w(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
                }, s.prototype.readFloatLE = function(e, t) {
                    return t || w(e, 4, this.length), a.read(this, e, !0, 23, 4)
                }, s.prototype.readFloatBE = function(e, t) {
                    return t || w(e, 4, this.length), a.read(this, e, !1, 23, 4)
                }, s.prototype.readDoubleLE = function(e, t) {
                    return t || w(e, 8, this.length), a.read(this, e, !0, 52, 8)
                }, s.prototype.readDoubleBE = function(e, t) {
                    return t || w(e, 8, this.length), a.read(this, e, !1, 52, 8)
                }, s.prototype.writeUIntLE = function(e, t, r, n) {
                    if (e = +e, t |= 0, r |= 0, !n) {
                        var h = Math.pow(2, 8 * r) - 1;
                        y(this, e, t, r, h, 0)
                    }
                    var a = 1,
                        i = 0;
                    this[t] = 255 & e;
                    while (++i < r && (a *= 256)) this[t + i] = e / a & 255;
                    return t + r
                }, s.prototype.writeUIntBE = function(e, t, r, n) {
                    if (e = +e, t |= 0, r |= 0, !n) {
                        var h = Math.pow(2, 8 * r) - 1;
                        y(this, e, t, r, h, 0)
                    }
                    var a = r - 1,
                        i = 1;
                    this[t + a] = 255 & e;
                    while (--a >= 0 && (i *= 256)) this[t + a] = e / i & 255;
                    return t + r
                }, s.prototype.writeUInt8 = function(e, t, r) {
                    return e = +e, t |= 0, r || y(this, e, t, 1, 255, 0), s.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), this[t] = 255 & e, t + 1
                }, s.prototype.writeUInt16LE = function(e, t, r) {
                    return e = +e, t |= 0, r || y(this, e, t, 2, 65535, 0), s.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : C(this, e, t, !0), t + 2
                }, s.prototype.writeUInt16BE = function(e, t, r) {
                    return e = +e, t |= 0, r || y(this, e, t, 2, 65535, 0), s.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : C(this, e, t, !1), t + 2
                }, s.prototype.writeUInt32LE = function(e, t, r) {
                    return e = +e, t |= 0, r || y(this, e, t, 4, 4294967295, 0), s.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e) : A(this, e, t, !0), t + 4
                }, s.prototype.writeUInt32BE = function(e, t, r) {
                    return e = +e, t |= 0, r || y(this, e, t, 4, 4294967295, 0), s.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : A(this, e, t, !1), t + 4
                }, s.prototype.writeIntLE = function(e, t, r, n) {
                    if (e = +e, t |= 0, !n) {
                        var h = Math.pow(2, 8 * r - 1);
                        y(this, e, t, r, h - 1, -h)
                    }
                    var a = 0,
                        i = 1,
                        c = 0;
                    this[t] = 255 & e;
                    while (++a < r && (i *= 256)) e < 0 && 0 === c && 0 !== this[t + a - 1] && (c = 1), this[t + a] = (e / i >> 0) - c & 255;
                    return t + r
                }, s.prototype.writeIntBE = function(e, t, r, n) {
                    if (e = +e, t |= 0, !n) {
                        var h = Math.pow(2, 8 * r - 1);
                        y(this, e, t, r, h - 1, -h)
                    }
                    var a = r - 1,
                        i = 1,
                        c = 0;
                    this[t + a] = 255 & e;
                    while (--a >= 0 && (i *= 256)) e < 0 && 0 === c && 0 !== this[t + a + 1] && (c = 1), this[t + a] = (e / i >> 0) - c & 255;
                    return t + r
                }, s.prototype.writeInt8 = function(e, t, r) {
                    return e = +e, t |= 0, r || y(this, e, t, 1, 127, -128), s.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1
                }, s.prototype.writeInt16LE = function(e, t, r) {
                    return e = +e, t |= 0, r || y(this, e, t, 2, 32767, -32768), s.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : C(this, e, t, !0), t + 2
                }, s.prototype.writeInt16BE = function(e, t, r) {
                    return e = +e, t |= 0, r || y(this, e, t, 2, 32767, -32768), s.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : C(this, e, t, !1), t + 2
                }, s.prototype.writeInt32LE = function(e, t, r) {
                    return e = +e, t |= 0, r || y(this, e, t, 4, 2147483647, -2147483648), s.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24) : A(this, e, t, !0), t + 4
                }, s.prototype.writeInt32BE = function(e, t, r) {
                    return e = +e, t |= 0, r || y(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), s.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : A(this, e, t, !1), t + 4
                }, s.prototype.writeFloatLE = function(e, t, r) {
                    return S(this, e, t, !0, r)
                }, s.prototype.writeFloatBE = function(e, t, r) {
                    return S(this, e, t, !1, r)
                }, s.prototype.writeDoubleLE = function(e, t, r) {
                    return Y(this, e, t, !0, r)
                }, s.prototype.writeDoubleBE = function(e, t, r) {
                    return Y(this, e, t, !1, r)
                }, s.prototype.copy = function(e, t, r, n) {
                    if (r || (r = 0), n || 0 === n || (n = this.length), t >= e.length && (t = e.length), t || (t = 0), n > 0 && n < r && (n = r), n === r) return 0;
                    if (0 === e.length || 0 === this.length) return 0;
                    if (t < 0) throw new RangeError("targetStart out of bounds");
                    if (r < 0 || r >= this.length) throw new RangeError("sourceStart out of bounds");
                    if (n < 0) throw new RangeError("sourceEnd out of bounds");
                    n > this.length && (n = this.length), e.length - t < n - r && (n = e.length - t + r);
                    var h, a = n - r;
                    if (this === e && r < t && t < n)
                        for (h = a - 1; h >= 0; --h) e[h + t] = this[h + r];
                    else if (a < 1e3 || !s.TYPED_ARRAY_SUPPORT)
                        for (h = 0; h < a; ++h) e[h + t] = this[h + r];
                    else Uint8Array.prototype.set.call(e, this.subarray(r, r + a), t);
                    return a
                }, s.prototype.fill = function(e, t, r, n) {
                    if ("string" === typeof e) {
                        if ("string" === typeof t ? (n = t, t = 0, r = this.length) : "string" === typeof r && (n = r, r = this.length), 1 === e.length) {
                            var h = e.charCodeAt(0);
                            h < 256 && (e = h)
                        }
                        if (void 0 !== n && "string" !== typeof n) throw new TypeError("encoding must be a string");
                        if ("string" === typeof n && !s.isEncoding(n)) throw new TypeError("Unknown encoding: " + n)
                    } else "number" === typeof e && (e &= 255);
                    if (t < 0 || this.length < t || this.length < r) throw new RangeError("Out of range index");
                    if (r <= t) return this;
                    var a;
                    if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, e || (e = 0), "number" === typeof e)
                        for (a = t; a < r; ++a) this[a] = e;
                    else {
                        var i = s.isBuffer(e) ? e : L(new s(e, n).toString()),
                            c = i.length;
                        for (a = 0; a < r - t; ++a) this[a + t] = i[a % c]
                    }
                    return this
                };
                var B = /[^+\/0-9A-Za-z-_]/g;

                function T(e) {
                    return e < 16 ? "0" + e.toString(16) : e.toString(16)
                }

                function L(e, t) {
                    var r;
                    t = t || 1 / 0;
                    for (var n = e.length, h = null, a = [], i = 0; i < n; ++i) {
                        if (r = e.charCodeAt(i), r > 55295 && r < 57344) {
                            if (!h) {
                                if (r > 56319) {
                                    (t -= 3) > -1 && a.push(239, 191, 189);
                                    continue
                                }
                                if (i + 1 === n) {
                                    (t -= 3) > -1 && a.push(239, 191, 189);
                                    continue
                                }
                                h = r;
                                continue
                            }
                            if (r < 56320) {
                                (t -= 3) > -1 && a.push(239, 191, 189), h = r;
                                continue
                            }
                            r = 65536 + (h - 55296 << 10 | r - 56320)
                        } else h && (t -= 3) > -1 && a.push(239, 191, 189);
                        if (h = null, r < 128) {
                            if ((t -= 1) < 0) break;
                            a.push(r)
                        } else if (r < 2048) {
                            if ((t -= 2) < 0) break;
                            a.push(r >> 6 | 192, 63 & r | 128)
                        } else if (r < 65536) {
                            if ((t -= 3) < 0) break;
                            a.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
                        } else {
                            if (!(r < 1114112)) throw new Error("Invalid code point");
                            if ((t -= 4) < 0) break;
                            a.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
                        }
                    }
                    return a
                }

                function M(e) {
                    return h.toByteArray(function(e) {
                        if (e = function(e) {
                                return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "")
                            }(e).replace(B, ""), e.length < 2) return "";
                        while (e.length % 4 !== 0) e += "=";
                        return e
                    }(e))
                }

                function q(e, t, r, n) {
                    for (var h = 0; h < n; ++h) {
                        if (h + r >= t.length || h >= e.length) break;
                        t[h + r] = e[h]
                    }
                    return h
                }
            }).call(this, n("getGlobalObject"))
        },
        "179d": function(e, t, r) {
            e.exports = r.p + "static/imgs/text/arrow-down.png"
        },
        "17d8": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("ab96"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "18cf": function(e, t, r) {
            e.exports = r.p + "static/imgs/bars.png"
        },
        1951: function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("view", [n("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [n("navigation-bar", {
                        attrs: {
                            title: e.ntitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), n("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [n("view", [n("view", [n("view", {
                        staticClass: e._$s(6, "sc", "display-color-group"),
                        attrs: {
                            _i: 6
                        }
                    }, [n("view", e._l(3, (function(t, r, h, a) {
                        return n("view", {
                            key: r,
                            staticClass: e._$s("8-" + a, "sc", "btn-color-group"),
                            attrs: {
                                _i: "8-" + a
                            }
                        }, e._l(3, (function(t, h, i, c) {
                            return n("view", {
                                key: h
                            }, [e._$s("10-" + a + "-" + c, "i", 3 * r + h <= 8) ? [n("view", {
                                staticClass: e._$s("11-" + a + "-" + c, "sc", "btn-view-style"),
                                attrs: {
                                    "data-tag": e._$s("11-" + a + "-" + c, "a-data-tag", e.colorDisplayOrder[3 * r + h].idx),
                                    _i: "11-" + a + "-" + c
                                },
                                on: {
                                    click: e.btnColorChange
                                }
                            }, [n("view", {
                                staticClass: e._$s("12-" + a + "-" + c, "sc", "btn-view-sub"),
                                attrs: {
                                    _i: "12-" + a + "-" + c
                                }
                            }, [e._$s("13-" + a + "-" + c, "i", 3 * r + h < 7) ? n("view", {
                                staticClass: e._$s("13-" + a + "-" + c, "sc", "btn-view-color"),
                                style: e._$s("13-" + a + "-" + c, "s", "background-color: " + e.colorDisplayOrder[3 * r + h].color + ";"),
                                attrs: {
                                    _i: "13-" + a + "-" + c
                                }
                            }) : e._e(), n("label", {
                                staticClass: e._$s("14-" + a + "-" + c, "sc", "btn-color-text"),
                                attrs: {
                                    _i: "14-" + a + "-" + c
                                }
                            }, [e._v(e._$s("14-" + a + "-" + c, "t0-0", e._s(e.$t(e.colorDisplayOrder[3 * r + h].name))))])])]), n("view", {
                                directives: [{
                                    name: "show",
                                    rawName: "v-show",
                                    value: e._$s("15-" + a + "-" + c, "v-show", e.public.txColor == e.colorDisplayOrder[3 * r + h].idx),
                                    expression: "_$s((\"15-\"+$30+'-'+$31),'v-show',public.txColor == colorDisplayOrder[i * 3 + n].idx)"
                                }],
                                staticClass: e._$s("15-" + a + "-" + c, "sc", "btn-color-title"),
                                attrs: {
                                    _i: "15-" + a + "-" + c
                                }
                            })] : e._e()], 2)
                        })), 0)
                    })), 0)]), e._$s(16, "i", 1 != e.prjIndex) ? n("view", {
                        attrs: {
                            _i: 16
                        }
                    }, [n("radio-group", {
                        attrs: {
                            _i: 17
                        },
                        on: {
                            change: e.radioChange
                        }
                    }, [n("view", {
                        staticClass: e._$s(18, "sc", "radio-play-mode"),
                        attrs: {
                            _i: 18
                        }
                    }, [n("label", {
                        staticClass: e._$s(19, "sc", "radio-play-label"),
                        attrs: {
                            _i: 19
                        }
                    }, [n("radio", {
                        attrs: {
                            checked: e._$s(20, "a-checked", 0 == e.item.pyMode),
                            _i: 20
                        }
                    }), n("text", {
                        style: e._$s(21, "s", "color: " + (0 == e.item.pyMode ? "#51D1EA" : "#687C8E") + "; font-size: 30rem;"),
                        attrs: {
                            _i: 21
                        }
                    }, [e._v(e._$s(21, "t0-0", e._s(e.$t("\u5faa\u73af\u64ad\u653e"))))])])]), n("view", {
                        staticClass: e._$s(22, "sc", "radio-play-mode"),
                        attrs: {
                            _i: 22
                        }
                    }, [n("label", {
                        staticClass: e._$s(23, "sc", "radio-play-label"),
                        attrs: {
                            _i: 23
                        }
                    }, [n("radio", {
                        attrs: {
                            checked: e._$s(24, "a-checked", 0 != e.item.pyMode),
                            _i: 24
                        }
                    }), n("text", {
                        style: e._$s(25, "s", "color: " + (0 != e.item.pyMode ? "#51D1EA" : "#687C8E") + "; font-size: 30rem;"),
                        attrs: {
                            _i: 25
                        }
                    }, [e._v(e._$s(25, "t0-0", e._s(e.$t("\u52fe\u9009\u64ad\u653e"))))])]), n("view", {
                        staticClass: e._$s(26, "sc", "btn-view-style2"),
                        style: e._$s(26, "s", 0 == e.item.pyMode ? "pointer-events: none; opacity: 0.3" : ""),
                        attrs: {
                            _i: 26
                        },
                        on: {
                            click: function(t) {
                                return e.selectAutoBtnClick(1)
                            }
                        }
                    }, [n("view", {
                        staticClass: e._$s(27, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 27
                        }
                    }, [n("label", {
                        staticClass: e._$s(28, "sc", "btn-color-text"),
                        attrs: {
                            _i: 28
                        }
                    }, [e._v(e._$s(28, "t0-0", e._s(e.$t("\u5168\u9009"))))])])]), n("view", {
                        staticClass: e._$s(29, "sc", "btn-view-style2"),
                        style: e._$s(29, "s", 0 == e.item.pyMode ? "pointer-events: none; opacity: 0.3" : ""),
                        attrs: {
                            _i: 29
                        },
                        on: {
                            click: function(t) {
                                return e.selectAutoBtnClick(2)
                            }
                        }
                    }, [n("view", {
                        staticClass: e._$s(30, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 30
                        }
                    }, [n("label", {
                        staticClass: e._$s(31, "sc", "btn-color-text"),
                        attrs: {
                            _i: 31
                        }
                    }, [e._v(e._$s(31, "t0-0", e._s(e.$t("\u53cd\u9009"))))])])]), n("view", {
                        staticClass: e._$s(32, "sc", "btn-view-style2"),
                        style: e._$s(32, "s", 0 == e.item.pyMode ? "pointer-events: none; opacity: 0.3" : ""),
                        attrs: {
                            _i: 32
                        },
                        on: {
                            click: function(t) {
                                return e.selectAutoBtnClick(3)
                            }
                        }
                    }, [n("view", {
                        staticClass: e._$s(33, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 33
                        }
                    }, [n("label", {
                        staticClass: e._$s(34, "sc", "btn-color-text"),
                        attrs: {
                            _i: 34
                        }
                    }, [e._v(e._$s(34, "t0-0", e._s(e.$t("\u6e05\u9664"))))])])])])]), n("view", {
                        staticClass: e._$s(35, "sc", "buttons-views"),
                        style: e._$s(35, "s", "opacity: " + (0 != e.item.pyMode ? "1" : "0.3") + ";"),
                        attrs: {
                            _i: 35
                        }
                    }, [e._l(e._$s(36, "f", {
                        forItems: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                    }), (function(t, r, h, a) {
                        return [e._$s("37-" + a, "i", 1 == t && e.showOutDoorTips) ? n("label", {
                            key: e._$s(36, "f", {
                                forIndex: h,
                                keyIndex: 0,
                                key: r + "_0"
                            })
                        }, [e._v(e._$s("37-" + a, "t0-0", e._s(e.$t("out_door_tips1"))))]) : e._e(), e._$s("38-" + a, "i", 7 == t && e.showOutDoorTips) ? n("label", {
                            key: e._$s(36, "f", {
                                forIndex: h,
                                keyIndex: 1,
                                key: r + "_1"
                            })
                        }, [e._v(e._$s("38-" + a, "t0-0", e._s(e.$t("out_door_tips2"))))]) : e._e(), e._$s("39-" + a, "i", 9 == t && e.showOutDoorTips) ? n("label", {
                            key: e._$s(36, "f", {
                                forIndex: h,
                                keyIndex: 2,
                                key: r + "_2"
                            })
                        }, [e._v(e._$s("39-" + a, "t0-0", e._s(e.$t("out_door_tips3"))))]) : e._e(), n("view", {
                            key: e._$s(36, "f", {
                                forIndex: h,
                                keyIndex: 3,
                                key: r + "_3"
                            }),
                            staticClass: e._$s("40-" + a, "sc", "num-container2"),
                            attrs: {
                                _i: "40-" + a
                            }
                        }, [e._l(e._$s("41-" + a, "f", {
                            forItems: [1, 2, 3, 4, 5]
                        }), (function(t, h, i, c) {
                            return [n("view", {
                                key: e._$s("41-" + a, "f", {
                                    forIndex: i,
                                    keyIndex: 0,
                                    key: h + "_0"
                                }),
                                staticClass: e._$s("42-" + a + "-" + c, "sc", "btn-select-item"),
                                style: e._$s("42-" + a + "-" + c, "s", (1 == e.item.ckValues[5 * r + h] ? "background: #51D1EA; color: #222222" : "") + ";"),
                                attrs: {
                                    disabled: e._$s("42-" + a + "-" + c, "a-disabled", 0 == e.item.pyMode),
                                    "data-tag": e._$s("42-" + a + "-" + c, "a-data-tag", 5 * r + h + 1),
                                    _i: "42-" + a + "-" + c
                                },
                                on: {
                                    click: e.btnSelectClick
                                }
                            }, [e._v(e._$s("42-" + a + "-" + c, "t0-0", e._s(5 * r + h + 1)))])]
                        }))], 2)]
                    }))], 2)]) : e._e(), n("view", {
                        staticClass: e._$s(43, "sc", "parm-view-bottom"),
                        attrs: {
                            _i: 43
                        }
                    }, [n("radio-group", {
                        staticClass: e._$s(44, "sc", "display-btn-group"),
                        attrs: {
                            _i: 44
                        },
                        on: {
                            change: e.radioChange
                        }
                    }, [n("label", {
                        staticClass: e._$s(45, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 45
                        }
                    }, [e._v(e._$s(45, "t0-0", e._s(e.$t("\u64ad\u653e\u6a21\u5f0f"))))]), n("view", [n("label", {
                        staticClass: e._$s(47, "sc", "fun-radio"),
                        attrs: {
                            _i: 47
                        }
                    }, [n("radio", {
                        attrs: {
                            checked: e._$s(48, "a-checked", 0 == e.public.rdMode),
                            _i: 48
                        }
                    }), n("text", {
                        style: e._$s(49, "s", "font-size: 30rem;" + (0 == e.public.rdMode ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 49
                        }
                    }, [e._v(e._$s(49, "t0-0", e._s(e.$t("\u81ea\u8d70"))))])]), n("label", {
                        staticClass: e._$s(50, "sc", "fun-radio"),
                        attrs: {
                            _i: 50
                        }
                    }, [n("radio", {
                        attrs: {
                            checked: e._$s(51, "a-checked", 255 == e.public.rdMode),
                            _i: 51
                        }
                    }), n("text", {
                        style: e._$s(52, "s", "font-size: 30rem;" + (255 == e.public.rdMode ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 52
                        }
                    }, [e._v(e._$s(52, "t0-0", e._s(e.$t("\u58f0\u63a7"))))])])])]), n("view", {
                        staticClass: e._$s(53, "sc", "display-btn-group"),
                        style: e._$s(53, "s", "opacity: " + (0 == e.public.rdMode ? "1" : "0.5") + ";"),
                        attrs: {
                            _i: 53
                        }
                    }, [n("label", {
                        staticClass: e._$s(54, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 54
                        }
                    }, [e._v(e._$s(54, "t0-0", e._s(e.$t("\u81ea\u8d70\u901f\u5ea6"))))]), n("slider", {
                        staticClass: e._$s(55, "sc", "fun-slider"),
                        attrs: {
                            disabled: e._$s(55, "a-disabled", 0 != e.public.rdMode),
                            value: e._$s(55, "a-value", e.public.runSpeed),
                            _i: 55
                        },
                        on: {
                            change: e.slRunChange
                        }
                    })]), n("view", {
                        staticClass: e._$s(56, "sc", "display-btn-group"),
                        style: e._$s(56, "s", "opacity: " + (255 == e.public.rdMode ? "1" : "0.5") + ";"),
                        attrs: {
                            _i: 56
                        }
                    }, [n("label", {
                        staticClass: e._$s(57, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 57
                        }
                    }, [e._v(e._$s(57, "t0-0", e._s(e.$t("\u58f0\u63a7\u7075\u654f\u5ea6"))))]), n("slider", {
                        staticClass: e._$s(58, "sc", "fun-slider"),
                        attrs: {
                            disabled: e._$s(58, "a-disabled", 255 != e.public.rdMode),
                            value: e._$s(58, "a-value", e.public.soundVal),
                            _i: 58
                        },
                        on: {
                            change: e.slSoundChange
                        }
                    })])])])]), e._$s(59, "i", e.features.xyCnf) ? n("button", {
                        staticClass: e._$s(59, "sc", "floating-button"),
                        style: e._$s(59, "s", {
                            left: e.position.x + "px",
                            top: e.position.y + "px"
                        }),
                        attrs: {
                            _i: 59
                        },
                        on: {
                            touchstart: e.onBtnSetTouchStart,
                            touchmove: e.onBtnSetTouchMove,
                            touchend: e.onBtnSetTouchEnd,
                            click: e.onBtnSetClick
                        }
                    }, [n("image", {
                        attrs: {
                            src: e._$s(60, "a-src", r("18cf")),
                            _i: 60
                        }
                    })]) : e._e()])], 1)
                },
                a = []
        },
        "1b20": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("c125"),
                h = r("e0f0");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = r("4306"),
                o = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, "153c9572", null, !1, n["a"], void 0);
            "function" === typeof c["a"] && Object(c["a"])(o), t["default"] = o.exports
        },
        "1c8d": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("e745"),
                h = r("9d65");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        2029: function(e) {
            e.exports = JSON.parse('{"\u8fde\u63a5\u84dd\u7259":"\u8fde\u63a5\u84dd\u7259","\u968f\u673a\u64ad\u653e":"\u968f\u673a\u64ad\u653e","\u5df2\u8fde\u63a5":"\u5df2\u8fde\u63a5","\u672a\u8fde\u63a5":"\u672a\u8fde\u63a5","\u6237\u5916\u64ad\u653e":"\u6237\u5916\u64ad\u653e","\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570...":"\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570...","\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25":"\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25","\u91cd\u65b0\u5237\u65b0\u5217\u8868":"\u91cd\u65b0\u5237\u65b0\u5217\u8868","\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62":"\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62","\u641c\u7d22\u84dd\u7259\u8bbe\u5907":"\u641c\u7d22\u84dd\u7259\u8bbe\u5907","\u5df2\u53d1\u73b0":"\u5df2\u53d1\u73b0\u8bbe\u5907","\u7ea2":"\u7ea2","\u7eff":"\u7eff","\u84dd":"\u84dd","\u9ec4":"\u9ec4","\u9752":"\u9752","\u7d2b":"\u7d2b","\u767d":"\u767d","\u8df3\u53d8":"\u8df3\u53d8","\u5168\u5f69":"\u5168\u5f69","\u64ad\u653e\u6a21\u5f0f":"\u64ad\u653e\u6a21\u5f0f","\u81ea\u8d70":"\u81ea\u8d70","\u58f0\u63a7":"\u58f0\u63a7","\u81ea\u8d70\u901f\u5ea6":"\u81ea\u8d70\u901f\u5ea6","\u58f0\u63a7\u7075\u654f\u5ea6":"\u58f0\u63a7\u7075\u654f\u5ea6","\u56fe\u6848\u989c\u8272":"\u56fe\u6848\u989c\u8272","\u5f53\u524d\u989c\u8272":"\u5f53\u524d\u989c\u8272","\u5faa\u73af\u64ad\u653e":"\u5faa\u73af\u64ad\u653e","\u52fe\u9009\u64ad\u653e":"\u52fe\u9009\u64ad\u653e","\u5730\u5740\u7801":"\u5730\u5740\u7801","\u663e\u793a\u8303\u56f4":"\u663e\u793a\u8303\u56f4","\u56fe\u6848\u76f8\u4f4d":"\u56fe\u6848\u76f8\u4f4d","\u6b63\u5e38\u663e\u793a":"\u6b63\u5e38\u663e\u793a","XY\u4e92\u6362":"XY\u4e92\u6362","\u8c03\u5149\u8bbe\u7f6e":"\u8c03\u5149\u8bbe\u7f6e","\u7ea2\u5149\u8c03\u5149":"\u7ea2\u5149\u8c03\u5149","\u7eff\u5149\u8c03\u5149":"\u7eff\u5149\u8c03\u5149","\u84dd\u5149\u8c03\u5149":"\u84dd\u5149\u8c03\u5149","\u6fc0\u5149\u5149\u6e90":"\u6fc0\u5149\u5149\u6e90","\u5355\u8272":"\u5355\u8272","\u53cc\u8272":"\u53cc\u8272","\u8c03\u5236\u6a21\u5f0f":"\u8c03\u5236\u6a21\u5f0f","\u7cfb\u7edf\u8bed\u8a00":"\u7cfb\u7edf\u8bed\u8a00","\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...":"\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...","\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9...":"\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9...","\u6587\u672c\u989c\u8272":"\u6587\u672c\u989c\u8272","\u6587\u5b57\u5927\u5c0f":"\u6587\u5b57\u5927\u5c0f","\u663e\u793a\u89c6\u8ddd":"\u663e\u793a\u89c6\u8ddd","\u6d41\u6c34\u901f\u5ea6":"\u6d41\u6c34\u901f\u5ea6","\u6295\u5c04\u65b9\u5411":"\u6295\u5c04\u65b9\u5411","\u6c34\u5e73\u6295\u5c04":"\u6c34\u5e73\u6295\u5c04","\u5782\u76f4\u6295\u5c04":"\u5782\u76f4\u6295\u5c04","\u8d85\u51fa\u6700\u5927\u70b9\u6570":"\u8d85\u51fa\u6700\u5927\u70b9\u6570","\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931":"\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931","\u7ebf\u6761\u989c\u8272":"\u7ebf\u6761\u989c\u8272","\u6e05\u7a7a":"\u6e05\u7a7a","\u56de\u9000":"\u56de\u9000","\u53d1\u9001":"\u53d1\u9001","\u6700\u591a20\u4e2a\u573a\u666f":"\u6700\u591a20\u4e2a\u573a\u666f","\u63d0\u793a":"\u63d0\u793a","\u662f\u5426\u5220\u9664\u573a\u666f":"\u662f\u5426\u5220\u9664\u573a\u666f","\u7528\u6237\u70b9\u51fb\u53d6\u6d88":"\u7528\u6237\u70b9\u51fb\u53d6\u6d88","-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --","\u573a\u666f":"\u573a\u666f","\u79d2":"\u79d2","\u5220\u9664":"\u5220\u9664","\u7f16\u8f91":"\u7f16\u8f91","\u65b0\u589e\u573a\u666f":"\u65b0\u589e\u573a\u666f","\u56fe\u6848\u9009\u62e9":"\u56fe\u6848\u9009\u62e9","\u76f4\u7ebf\u7c7b\u56fe\u6848":"\u76f4\u7ebf\u7c7b\u56fe\u6848","\u5706\u5f27\u7c7b\u56fe\u6848":"\u5706\u5f27\u7c7b\u56fe\u6848","\u4eae\u70b9\u56fe\u6848":"\u4eae\u70b9\u56fe\u6848","\u6253\u70b9\u56fe\u6848":"\u6253\u70b9\u56fe\u6848","\u5723\u8bde\u56fe\u6848":"\u5723\u8bde\u56fe\u6848","\u52a8\u753b\u7ec4\u522b1":"\u52a8\u753b\u7ec4\u522b1","\u52a8\u753b\u7ec4\u522b2":"\u52a8\u753b\u7ec4\u522b2","\u52a8\u753b\u7ec4\u522b3":"\u52a8\u753b\u7ec4\u522b3","\u52a8\u753b\u7ec4\u522b4":"\u52a8\u753b\u7ec4\u522b4","\u52a8\u753b\u7ec4\u522b5":"\u52a8\u753b\u7ec4\u522b5","\u767d\u8272":"\u767d\u8272","\u7ea2\u8272":"\u7ea2\u8272","\u84dd\u8272":"\u84dd\u8272","\u7c89\u8272":"\u7c89\u8272","\u9752\u8272":"\u9752\u8272","\u9ec4\u8272":"\u9ec4\u8272","\u7eff\u8272":"\u7eff\u8272","\u6574\u4f53\u989c\u8272\u6362\u8272":"\u6574\u4f53\u989c\u8272\u6362\u8272","\u4e03\u5f69\u8679\u989c\u8272":"\u4e03\u5f69\u8679\u989c\u8272","2\u5206\u6bb5\u989c\u8272":"2\u5206\u6bb5\u989c\u8272","3\u5206\u6bb5\u989c\u8272":"3\u5206\u6bb5\u989c\u8272","4\u5206\u6bb5\u989c\u8272":"4\u5206\u6bb5\u989c\u8272","8\u5206\u6bb5\u989c\u8272":"8\u5206\u6bb5\u989c\u8272","16\u5206\u6bb5\u989c\u8272":"16\u5206\u6bb5\u989c\u8272","32\u5206\u6bb5\u989c\u8272":"32\u5206\u6bb5\u989c\u8272","\u989c\u8272\u6e10\u7ed8":"\u989c\u8272\u6e10\u7ed8","\u4e0d\u6d41\u6c34":"\u4e0d\u6d41\u6c34","\u6b63\u5411\u6d41\u6c34":"\u6b63\u5411\u6d41\u6c34","\u53cd\u5411\u6d41\u6c34":"\u53cd\u5411\u6d41\u6c34","\u56fe\u6848\u5927\u5c0f":"\u56fe\u6848\u5927\u5c0f","\u7f29\u653e\u624b\u52a8\u9009\u62e9":"\u7f29\u653e\u624b\u52a8\u9009\u62e9","\u7531\u5c0f\u5230\u5927\u7f29\u653e":"\u7531\u5c0f\u5230\u5927\u7f29\u653e","\u7531\u5927\u5230\u5c0f\u7f29\u653e":"\u7531\u5927\u5230\u5c0f\u7f29\u653e","\u5927\u5c0f\u5faa\u73af\u7f29\u653e":"\u5927\u5c0f\u5faa\u73af\u7f29\u653e","\u4e0d\u89c4\u5219\u7f29\u653e\u4e00":"\u4e0d\u89c4\u5219\u7f29\u653e\u4e00","\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c":"\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c","\u4e0d\u89c4\u5219\u7f29\u653e\u4e09":"\u4e0d\u89c4\u5219\u7f29\u653e\u4e09","\u65cb\u8f6c\u89d2\u5ea6":"\u65cb\u8f6c\u89d2\u5ea6","\u6b63\u65cb\u8f6c\u901f\u5ea6":"\u6b63\u65cb\u8f6c\u901f\u5ea6","\u53cd\u65cb\u8f6c\u901f\u5ea6":"\u53cd\u65cb\u8f6c\u901f\u5ea6","\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e":"\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e","\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6":"\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6","\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e":"\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e","\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6":"\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6","\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c":"\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c","\u6c34\u5e73\u79fb\u52a8":"\u6c34\u5e73\u79fb\u52a8","\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c":"\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c","\u5782\u76f4\u79fb\u52a8":"\u5782\u76f4\u79fb\u52a8","\u65e0\u6ce2\u6d6a":"\u65e0\u6ce2\u6d6a","\u6ce2\u6d6a\u5e45\u5ea61":"\u6ce2\u6d6a\u5e45\u5ea61","\u6ce2\u6d6a\u5e45\u5ea62":"\u6ce2\u6d6a\u5e45\u5ea62","\u6ce2\u6d6a\u5e45\u5ea63":"\u6ce2\u6d6a\u5e45\u5ea63","\u6ce2\u6d6a\u5e45\u5ea64":"\u6ce2\u6d6a\u5e45\u5ea64","\u6ce2\u6d6a\u5e45\u5ea65":"\u6ce2\u6d6a\u5e45\u5ea65","\u6ce2\u6d6a\u5e45\u5ea66":"\u6ce2\u6d6a\u5e45\u5ea66","\u6ce2\u6d6a\u5e45\u5ea67":"\u6ce2\u6d6a\u5e45\u5ea67","\u6ce2\u6d6a\u5e45\u5ea68":"\u6ce2\u6d6a\u5e45\u5ea68","\u65e0\u6e10\u7ed8":"\u65e0\u6e10\u7ed8","\u624b\u52a8\u6e10\u7ed81":"\u624b\u52a8\u6e10\u7ed81","\u624b\u52a8\u6e10\u7ed82":"\u624b\u52a8\u6e10\u7ed82","\u81ea\u52a8\u6e10\u7ed81":"\u81ea\u52a8\u6e10\u7ed81","\u81ea\u52a8\u6e10\u7ed82":"\u81ea\u52a8\u6e10\u7ed82","\u81ea\u52a8\u6e10\u7ed83":"\u81ea\u52a8\u6e10\u7ed83","\u81ea\u52a8\u6e10\u7ed84":"\u81ea\u52a8\u6e10\u7ed84","\u56fe\u5f62\u5206\u7ec4":"\u56fe\u5f62\u5206\u7ec4","\u56fe\u5f62":"\u56fe\u5f62","\u989c\u8272":"\u989c\u8272","\u989c\u8272\u6d41\u6c34":"\u989c\u8272\u6d41\u6c34","\u56fe\u5f62\u5927\u5c0f":"\u56fe\u5f62\u5927\u5c0f","\u56fe\u5f62\u7f29\u653e":"\u56fe\u5f62\u7f29\u653e","\u56fe\u5f62\u65cb\u8f6c":"\u56fe\u5f62\u65cb\u8f6c","\u6c34\u5e73\u7ffb\u8f6c":"\u6c34\u5e73\u7ffb\u8f6c","\u5782\u76f4\u7ffb\u8f6c":"\u5782\u76f4\u7ffb\u8f6c","\u6ce2\u6d6a":"\u6ce2\u6d6a","\u6e10\u7ed8":"\u6e10\u7ed8","\u64ad\u653e\u65f6\u957f":"\u64ad\u653e\u65f6\u957f","\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62...":"\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62...","\u53d6\u6d88":"\u53d6\u6d88","\u786e\u5b9a":"\u786e\u5b9a","\u9009\u62e9\u56fe\u5f62":"\u9009\u62e9\u56fe\u5f62","\u901a\u9053\u590d\u4f4d":"\u901a\u9053\u590d\u4f4d","\u5b8b\u4f53":"\u5b8b\u4f53","\u76f4\u7ebf":"\u76f4\u7ebf","\u5706\u5f27":"\u5706\u5f27","\u4eae\u70b9":"\u4eae\u70b9","\u6253\u70b9":"\u6253\u70b9","\u5723\u8bde":"\u5723\u8bde","\u52a8\u753bA":"\u52a8\u753bA","\u52a8\u753bB":"\u52a8\u753bB","\u5f69\u8679":"\u5f69\u8679","\u9ed8\u8ba4":"\u9ed8\u8ba4","\u8f6f\u4ef6\u7248\u672c":"\u8f6f\u4ef6\u7248\u672c","\u8fde\u63a5":"\u8fde\u63a5","\u8bbe\u7f6e":"\u8bbe\u7f6e","\u624b\u7ed8\u6d82\u9e26":"\u624b\u7ed8\u6d82\u9e26","\u6587\u672c\u64ad\u653e":"\u6587\u672c\u64ad\u653e","\u4e2a\u6027\u7f16\u7a0b":"\u4e2a\u6027\u7f16\u7a0b","\u52a8\u753b\u64ad\u653e":"\u52a8\u753b\u64ad\u653e","\u7ebf\u6761\u64ad\u653e":"\u7ebf\u6761\u64ad\u653e","\u5723\u8bde\u64ad\u653e":"\u5723\u8bde\u64ad\u653e","DMX":"DMX","\u914d\u7f6e":"\u914d\u7f6e","\u8fd4\u56de":"\u8fd4\u56de","\u70b9\u6211\u8fde\u63a5":"\u70b9\u6211\u8fde\u63a5","\u84dd\u7259\u672a\u8fde\u63a5":"\u84dd\u7259\u672a\u8fde\u63a5","\u8bbe\u5907":"\u8bbe\u5907","\u8bf7\u8f93\u5165\u6587\u5b57":"\u8bf7\u8f93\u5165\u6587\u5b57","\u9884\u7559\u65e0\u529f\u80fd":"\u9884\u7559\u65e0\u529f\u80fd","\u91cd\u7f6e":"\u91cd\u7f6e","\u84dd\u7259\u8fde\u63a5":"\u84dd\u7259\u8fde\u63a5","\u5168\u9009":"\u5168\u9009","\u53cd\u9009":"\u53cd\u9009","\u6e05\u9664":"\u6e05\u9664","\u5b57\u6570":"\u5b57\u6570","\u70b9\u6570":"\u70b9\u6570","\u9884\u89c8":"\u9884\u89c8","\u573a\u666f\u7ba1\u7406":"\u573a\u666f\u7ba1\u7406","\u52a0\u8f7d\u4e2d":"\u52a0\u8f7d\u4e2d","\u573a\u666f\u7f16\u8f91":"\u573a\u666f\u7f16\u8f91","\u8bf7\u5148\u8fde\u63a5\u84dd\u7259":"\u8bf7\u5148\u8fde\u63a5\u84dd\u7259","\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b":"\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b","DMX\u5730\u5740\u7801":"\u5730\u5740\u7801","\u8bf7\u5148\u6253\u5f00\u8bbe\u5907":"\u8bf7\u5148\u6253\u5f00\u8bbe\u5907","\u5355\u7ebf\u5b57\u4f53":"\u5355\u7ebf\u5b57\u4f53","\u6b63\u5728\u53d1\u9001":"\u6b63\u5728\u53d1\u9001","\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528":"\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528","\u8be5\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587\u663e\u793a":"\u8be5\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587\u663e\u793a","\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c":"\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c","\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650":"\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650","\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650":"\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650","\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38":"\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38","\u9009\u62e9":"\u9009\u62e9","\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247":"\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247","\u53d1\u9001\u5931\u8d25":"\u53d1\u9001\u5931\u8d25","\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165":"\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165","\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165":"\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165","\u7b2c":"\u7b2c","\u7ec4\u6587\u5b57":"\u7ec4\u6587\u5b57","\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5":"\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5","\u4e0d\u652f\u6301\u6587\u672c":"\u4e0d\u652f\u6301\u6587\u672c","\u7ec4\u5b57\u4f53":"\u7ec4\u5b57\u4f53","\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u53d1\u9001":"\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u53d1\u9001","\u662f\u5426\u5220\u9664\u7b2c":"\u662f\u5426\u5220\u9664\u7b2c","\u7ec4":"\u7ec4","\u6700\u591a4\u4e2a\u5206\u7ec4":"\u6700\u591a4\u4e2a\u5206\u7ec4","\u6b63\u5728\u8fde\u63a5...":"\u6b63\u5728\u8fde\u63a5...","\u8fde\u63a5\u5931\u8d25":"\u8fde\u63a5\u5931\u8d25","\u5b57\u4f53\u9009\u62e9":"\u5b57\u4f53\u9009\u62e9","\u601d\u6e90\u9ed1\u4f53":"\u601d\u6e90\u9ed1\u4f53","\u601d\u6e90\u9ed1\u4f531":"\u601d\u6e90\u9ed1\u4f531","\u601d\u6e90\u9ed1\u4f532":"\u601d\u6e90\u9ed1\u4f532","\u601d\u6e90\u9ed1\u4f533":"\u601d\u6e90\u9ed1\u4f533","\u601d\u6e90\u9ed1\u4f534":"\u601d\u6e90\u9ed1\u4f534","\u601d\u6e90\u9ed1\u4f535":"\u601d\u6e90\u9ed1\u4f535","\u601d\u6e90\u9ed1\u4f536":"\u601d\u6e90\u9ed1\u4f536","\u601d\u6e90\u9ed1\u4f537":"\u601d\u6e90\u9ed1\u4f537","font_note_1001":"\u4e2d\u6587\uff0c\u82f1\u6587\uff0c\u897f\u73ed\u7259\u6587\uff0c\u8461\u8404\u7259\u6587\uff0c\u5fb7\u6587\uff0c\u6cd5\u6587","font_note_1002":"\u82f1\u6587\uff0c\u897f\u73ed\u7259\u6587\uff0c\u4fc4\u6587\uff0c\u8461\u8404\u7259\u6587\uff0c\u5fb7\u6587\uff0c\u6cd5\u6587\uff0c\u8d8a\u5357\u6587\uff0c\u5370\u5730\u6587\uff0c\u5b5f\u52a0\u62c9\u6587","font_note_1003":"\u82f1\u6587\uff0c\u4e2d\u6587\uff0c\u897f\u73ed\u7259\u6587\uff0c\u4fc4\u6587\uff0c\u8461\u8404\u7259\u6587\uff0c\u65e5\u6587\uff0c\u5fb7\u6587","font_note_1004":"\u4e2d\u6587\uff0c\u82f1\u6587\uff0c\u897f\u73ed\u7259\u6587\uff0c\u8461\u8404\u7259\u6587\uff0c\u5fb7\u6587\uff0c\u6cd5\u6587","font_note_1005":"\u82f1\u6587\uff0c\u4e2d\u6587","font_note_1006":"\u82f1\u6587\uff0c\u65e5\u6587\uff0c\u97e9\u6587","font_note_1007":"\u963f\u62c9\u4f2f\u6587","\u4fdd\u7559":"\u4fdd\u7559","\u56fe\u6848\u521d\u59cb\u989c\u8272":"\u56fe\u6848\u521d\u59cb\u989c\u8272","\u6df7\u8272":"\u6df7\u8272","\u7b14\u753b\u5c11\uff0c\u65e0\u95ea\u70c1\uff0c\u63a8\u8350\u4f7f\u7528":"\u7b14\u753b\u5c11\uff0c\u65e0\u95ea\u70c1\uff0c\u63a8\u8350\u4f7f\u7528","\u5df2\u65ad\u5f00\u8fde\u63a5":"\u5df2\u65ad\u5f00\u8fde\u63a5","\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c":"\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c","\u6587\u5b57\u7cbe\u5ea6":"\u6587\u5b57\u7cbe\u5ea6","\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6":"\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6","\u7cbe\u5ea6":"\u7cbe\u5ea6","\u9009\u62e9\u56fe\u7247":"\u9009\u62e9\u56fe\u7247","\u8bbe\u4e3a\u80cc\u666f":"\u8bbe\u4e3a\u80cc\u666f","\u8bc6\u522b\u56fe\u6848":"\u8bc6\u522b\u56fe\u6848","\u63cf\u8fb9":"\u63cf\u8fb9","\u6b63\u5728\u5904\u7406\u4e2d":"\u6b63\u5728\u5904\u7406\u4e2d","\u5f53\u524d\u673a\u578b":"\u5f53\u524d\u673a\u578b","hand_draw_tips":" ** \u8bf7\u7528\u624b\u6307\u4ece\u7a7a\u767d\u533a\u57df\u6ed1\u5411\u76ee\u6807\u56fe\u6848\u6765\u9009\u4e2d\\n ** \u53ef\u5bf9\u9009\u4e2d\u56fe\u6848\u653e\u5927\u3001\u7f29\u5c0f\u3001\u79fb\u52a8\u3001\u4fee\u6539\u989c\u8272\u3001\u5220\u9664\u7b49\u64cd\u4f5c","\u4e0d\u518d\u63d0\u793a":"\u4e0d\u518d\u63d0\u793a","out_door_tips1":"1-30 \u5730\u6807","out_door_tips2":"31-40 \u5317\u6781\u5149","out_door_tips3":"41-50 \u65f6\u7a7a\u96a7\u9053","\u6587\u4ef6\u540d":"\u6587\u4ef6\u540d","\u4fdd\u5b58\u6587\u4ef6":"\u4fdd\u5b58\u6587\u4ef6","\u9009\u62e9\u6587\u4ef6":"\u9009\u62e9\u6587\u4ef6","\u8bf7\u8f93\u5165\u6587\u4ef6\u540d":"\u8bf7\u8f93\u5165\u6587\u4ef6\u540d","\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d":"\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d","\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a":"\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165":"\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed":"\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed","\u4fdd\u5b58\u6210\u529f":"\u4fdd\u5b58\u6210\u529f","\u4fdd\u5b58\u5931\u8d25":"\u4fdd\u5b58\u5931\u8d25","\u4fee\u6539\u6210\u529f":"\u4fee\u6539\u6210\u529f","\u4fee\u6539\u5931\u8d25":"\u4fee\u6539\u5931\u8d25","\u5220\u9664\u6210\u529f":"\u5220\u9664\u6210\u529f","\u5220\u9664\u5931\u8d25":"\u5220\u9664\u5931\u8d25","\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301":"\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301","text_time_range":"\u8303\u56f41-25.5","\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848":"\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848","\u8bf7\u9009\u62e9\u6587\u4ef6":"\u8bf7\u9009\u62e9\u6587\u4ef6","\u6587\u4ef6\u6570":"\u6587\u4ef6\u6570","\u53e6\u5b58\u6587\u4ef6":"\u53e6\u5b58\u6587\u4ef6","\u5220\u9664\u6240\u9009\u6587\u4ef6":"\u5220\u9664\u6240\u9009\u6587\u4ef6","Select-File":"\u9009\u62e9","\u6447\u5934\u8bbe\u7f6e":"\u6447\u5934\u8bbe\u7f6e","\u6447\u5934\u6a21\u5f0f":"\u6447\u5934\u6a21\u5f0f","\u6447\u5934\u76f8\u4f4d":"\u6447\u5934\u76f8\u4f4d","\u81ea\u52a8":"\u81ea\u52a8","\u624b\u52a8":"\u624b\u52a8","X\u7c97\u8c03":"X\u7c97\u8c03","X\u7ec6\u8c03":"X\u7ec6\u8c03","Y\u7c97\u8c03":"Y\u7c97\u8c03","Y\u7ec6\u8c03":"Y\u7ec6\u8c03","\u6c34\u5e73\u7535\u673a":"\u6c34\u5e73\u7535\u673a","\u6c34\u5e73\u5fae\u8c03":"\u6c34\u5e73\u5fae\u8c03","\u5782\u76f4\u7535\u673a":"\u5782\u76f4\u7535\u673a","\u5782\u76f4\u5fae\u8c03":"\u5782\u76f4\u5fae\u8c03","\u7535\u673a\u901f\u5ea6":"\u7535\u673a\u901f\u5ea6","\u6d41\u6c34\u65b9\u5411":"\u6d41\u6c34\u65b9\u5411","\u963f\u62c9\u4f2f\u8bed\u65b9\u5411":"\u963f\u62c9\u4f2f\u8bed\u65b9\u5411","\u9ed8\u8ba4\u65b9\u5411":"\u9ed8\u8ba4\u65b9\u5411","\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939":"\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939","\u9009\u62e9\u5217\u8868":"\u9009\u62e9\u5217\u8868","\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0":"\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0","\u64ad\u653e\u5217\u8868":"\u64ad\u653e\u5217\u8868","\u4fdd\u5b58":"\u4fdd\u5b58","\u6dfb\u52a0":"\u6dfb\u52a0","\u6279\u91cf\u8bbe\u7f6e":"\u6279\u91cf\u8bbe\u7f6e","\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0":"\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0","ALL":"\u5168\u90e8","\u5217\u8868\u7f16\u8f91":"\u5217\u8868\u7f16\u8f91","\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57":"\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57","\u6dfb\u52a0\u81f3\u65b0\u5217\u8868":"\u6dfb\u52a0\u81f3\u65b0\u5217\u8868","\u7acb\u5373\u64ad\u653e":"\u7acb\u5373\u64ad\u653e","\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed":"\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed","-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --","\u641c\u7d22\u4e0d\u5230\u8bbe\u5907?":"\u641c\u7d22\u4e0d\u5230\u8bbe\u5907?","Ins_title":"\u65e0\u6cd5\u8fde\u63a5\u84dd\u7259\u6392\u67e5\u6307\u5357","Ins_OpenBlu_Title":"\u5f00\u542f\u84dd\u7259","Ins_OpenBlu_Text":"\u8bbe\u7f6e \u2192 \u84dd\u7259 \u2192 \u5f00\u542f","Ins_PerBlu_Title":"\u6388\u4e88\u84dd\u7259\u6743\u9650","Ins_PerBlu_Text_android":"\u8bbe\u7f6e \u2192 \u5e94\u7528\u7ba1\u7406 \u2192Light Elf \u2192 \u6743\u9650\u7ba1\u7406 \u2192 \u5f00\u542f\u300c\u84dd\u7259&\u9644\u8fd1\u8bbe\u5907\u300d","Ins_PerBlu_Text_IOS":"\u8bbe\u7f6e \u2192 \u5e94\u7528\u5217\u8868 \u2192Light Elf \u2192  \u5f00\u542f\u300c\u84dd\u7259\u300d","Ins_PerBlu_Text_WX":"\u4e3b\u754c\u9762 \u2192 \u5de6\u4e0a\u89d2\u300c...\u300d \u2192 \u8bbe\u7f6e \u2192\u84dd\u7259 \u2192 \u9009\u62e9\u300c\u4f7f\u7528\u5c0f\u7a0b\u5e8f\u65f6\u5141\u8bb8\u300d","Ins_OpenLoc_Title":"\u5f00\u542f\u5b9a\u4f4d","Ins_OpenLoc_Text":"\u8bbe\u7f6e \u2192 \u4f4d\u7f6e\u4fe1\u606f \u2192 \u5f00\u542f","Ins_PerLoc_Title":"\u6388\u4e88\u5b9a\u4f4d\u6743\u9650","Ins_PerLoc_Text":"\u8bbe\u7f6e \u2192 \u5e94\u7528\u7ba1\u7406 \u2192Light Elf \u2192 \u6743\u9650\u7ba1\u7406 \u2192 \u5f00\u542f\u300c\u4f4d\u7f6e\u300d","Ins_Distance_Title":"\u63a7\u5236\u8bbe\u5907\u8ddd\u79bb","Ins_Distance_Text":"\u84dd\u7259\u8fde\u63a5\u8303\u56f4\u6709\u9650\uff0c\u5c06\u624b\u673a\u9760\u8fd1\u8bbe\u5907\uff0c\u907f\u514d\u5899\u58c1\u3001\u91d1\u5c5e\u7b49\u963b\u9694\u4fe1\u53f7","Ins_Reroot_Title":"\u91cd\u542f\u8bbe\u5907","Ins_Reroot_Text":"\u5173\u95ed\u624b\u673a\u548c\u84dd\u7259\u8bbe\u5907\u540e\u91cd\u65b0\u5f00\u542f\uff0c\u6216\u53ef\u89e3\u51b3\u8fde\u63a5\u95ee\u9898","\u989c\u8272\u8bbe\u7f6e":"Color"}')
        },
        "21af": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("811d"),
                h = r("85c1");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        2332: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = {
                    type: "scrolldone",
                    target: {
                        id: "",
                        offsetLeft: 0,
                        offsetTop: 0,
                        dataset: {}
                    },
                    currentTarget: {
                        id: "",
                        offsetLeft: 0,
                        offsetTop: 0,
                        dataset: {}
                    },
                    detail: {}
                },
                h = {
                    props: {
                        backgroundTextStyle: {
                            type: String,
                            default: "dark",
                            validator: function(e) {
                                return -1 !== ["dark", "light"].indexOf(e)
                            }
                        },
                        backgroundColor: {
                            type: String,
                            default: "#ffffff"
                        },
                        backgroundColorTop: {
                            type: String,
                            default: "#ffffff"
                        },
                        backgroundColorBottom: {
                            type: String,
                            default: "#ffffff"
                        },
                        scrollTop: {
                            type: String,
                            default: ""
                        },
                        scrollDuration: {
                            type: Number,
                            default: 300
                        },
                        pageStyle: {
                            type: String,
                            default: ""
                        },
                        enablePullDownRefresh: {
                            type: [Boolean, String],
                            default: !1
                        },
                        rootFontSize: {
                            type: String,
                            default: ""
                        }
                    },
                    created: function() {
                        var e = this,
                            t = getCurrentPages()[0];
                        this.$pageVm = t.$vm || t, this.$pageVm.$on("hook:onResize", (function(t) {
                            e.$emit("resize", t)
                        })), this.$pageVm.$on("hook:onPageScroll", (function(t) {
                            e.$emit("scroll", t)
                        })), this._currentWebview = t.$getAppWebview(), this.enablePullDownRefresh && this.setPullDownRefresh(this._currentWebview, !0), this.$watch("enablePullDownRefresh", (function(t) {
                            e.setPullDownRefresh(e._currentWebview, t)
                        })), this.$watch("backgroundTextStyle", (function() {
                            e.setBackgroundTextStyle()
                        })), this.$watch((function() {
                            return [e.rootFontSize, e.pageStyle]
                        }), (function() {
                            e.setPageMeta()
                        })), this.$watch((function() {
                            return [e.backgroundColor, e.backgroundColorTop, e.backgroundColorBottom]
                        }), (function() {
                            e.setBackgroundColor()
                        })), this.$watch((function() {
                            return [e.scrollTop, e.scrollDuration]
                        }), (function() {
                            e.pageScrollTo()
                        }))
                    },
                    beforeMount: function() {
                        this.setBackgroundColor(), (this.rootFontSize || this.pageStyle) && this.setPageMeta(), this.backgroundTextStyle && this.setBackgroundTextStyle()
                    },
                    mounted: function() {
                        this.scrollTop && this.pageScrollTo()
                    },
                    methods: {
                        setPullDownRefresh: function(e, t) {
                            e.setStyle({
                                pullToRefresh: {
                                    support: t,
                                    style: "Android" === plus.os.name ? "circle" : "default"
                                }
                            })
                        },
                        setPageMeta: function() {
                            uni.setPageMeta({
                                pageStyle: this.pageStyle,
                                rootFontSize: this.rootFontSize
                            })
                        },
                        setBackgroundTextStyle: function() {},
                        setBackgroundColor: function() {},
                        pageScrollTo: function() {
                            var e = this,
                                t = String(this.scrollTop);
                            if (-1 !== t.indexOf("rpx") && (t = uni.upx2px(t.replace("rpx", ""))), t = parseFloat(t), !isNaN(t)) {
                                var r = function r(h) {
                                    h.scrollTop === t && (e.$pageVm.$off("hook:onPageScroll", r), e.$emit("scrolldone", n))
                                };
                                uni.pageScrollTo({
                                    scrollTop: t,
                                    duration: this.scrollDuration,
                                    success: function() {
                                        e.$pageVm.$on("hook:onPageScroll", r)
                                    }
                                })
                            }
                        }
                    }
                };
            t.default = h
        },
        2344: function(e, t) {
            function r(e) {
                for (var t = -1, r = 0, n = 0, h = 0; h < e.length; h++) {
                    var a = e[h];
                    t != a[0] && (t = a[0], n++), r += a[1].length
                }
                return {
                    chCount: n,
                    ptCount: r
                }
            }

            function n(e) {
                var t = e;
                (function(e) {
                    var t = e,
                        n = t.textData,
                        h = 0 == n.groupList.length ? null : n.groupList[n.groupIdex].xys;
                    if (null != h) {
                        for (var a = n.txColor, i = n.arrColor, c = t.cvWH.w / 2, o = t.cvWH.h / 2, s = t.ctx, l = n.txSize / 100, p = t.cvWH.h / 800 * l, d = "red", b = -1, g = -1, j = r(h), x = 0; x < h.length; x++)
                            if (!(h[x][1].length < 2)) {
                                b != h[x][0] && (g++, s.beginPath(), b = h[x][0], d = a <= 7 ? i[a - 1] : i[g % 7], s.strokeStyle = d);
                                for (var V = h[x][1], f = 0; f < V.length; f++) {
                                    var F = V[f],
                                        k = F.x * p + c,
                                        m = o - F.y * p;
                                    0 == f ? s.moveTo(k.toFixed(), m.toFixed()) : Math.abs(F.x - V[f - 1].x) < 1 && Math.abs(F.y - V[f - 1].y) < 1 ? (s.arc(k, m, 1, 0, 2 * Math.PI), s.moveTo(k.toFixed(), m.toFixed())) : s.lineTo(k.toFixed(), m.toFixed())
                                }
                                s.stroke()
                            } s.beginPath(), s.setFillStyle("white"), s.setFontSize(10);
                        var P = t.getSumSizeExclude(n.groupIdex),
                            u = t.$t("\u5b57\u6570") + ": " + (j.chCount + P.chCount) + "/" + t.maxChar + "  " + t.$t("\u70b9\u6570") + ": " + (j.ptCount + P.ptCount) + "/" + t.maxPoints;
                        s.fillText(u, 4, t.cvWH.h - 4), s.draw()
                    }
                })(t)
            }
            e.exports = {
                getTxXySize: r,
                doDrawPicEx: n,
                onReady: function(e) {
                    var t = e,
                        r = uni.createSelectorQuery();
                    r.select("#myCanvas").fields({
                        node: !0,
                        size: !0
                    }).exec((function(e) {
                        e[0].node;
                        var r = uni.createCanvasContext("myCanvas", t);
                        t.ctx = r;
                        var h = uni.getSystemInfoSync(),
                            a = h.pixelRatio;
                        t.cvRatio = {
                            w: e[0].width * a,
                            h: e[0].height * a
                        }, t.cvWH = {
                            w: e[0].width,
                            h: e[0].height
                        }, t.$nextTick((function() {
                            n(t)
                        }))
                    }))
                }
            }
        },
        "24c1": function(t, r, n) {
            "use strict";
            (function(t) {
                var h = n("47a9");
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = h(n("af34")),
                    i = h(n("3b2d")),
                    c = h(n("7ca3")),
                    o = n("37a7");

                function s(e, t) {
                    var r = Object.keys(e);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(e);
                        t && (n = n.filter((function(t) {
                            return Object.getOwnPropertyDescriptor(e, t).enumerable
                        }))), r.push.apply(r, n)
                    }
                    return r
                }

                function l(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var r = null != arguments[t] ? arguments[t] : {};
                        t % 2 ? s(Object(r), !0).forEach((function(t) {
                            (0, c.default)(e, t, r[t])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : s(Object(r)).forEach((function(t) {
                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                        }))
                    }
                    return e
                }
                var p = {
                    name: "uniTransition",
                    emits: ["click", "change"],
                    props: {
                        show: {
                            type: Boolean,
                            default: !1
                        },
                        modeClass: {
                            type: [Array, String],
                            default: function() {
                                return "fade"
                            }
                        },
                        duration: {
                            type: Number,
                            default: 300
                        },
                        styles: {
                            type: Object,
                            default: function() {
                                return {}
                            }
                        },
                        customClass: {
                            type: String,
                            default: ""
                        },
                        onceRender: {
                            type: Boolean,
                            default: !1
                        }
                    },
                    data: function() {
                        return {
                            isShow: !1,
                            transform: "",
                            opacity: 1,
                            animationData: {},
                            durationTime: 300,
                            config: {}
                        }
                    },
                    watch: {
                        show: {
                            handler: function(e) {
                                e ? this.open() : this.isShow && this.close()
                            },
                            immediate: !0
                        }
                    },
                    computed: {
                        stylesObject: function() {
                            var e = l(l({}, this.styles), {}, {
                                    "transition-duration": this.duration / 1e3 + "s"
                                }),
                                t = "";
                            for (var r in e) {
                                var n = this.toLine(r);
                                t += n + ":" + e[r] + ";"
                            }
                            return t
                        },
                        transformStyles: function() {
                            return "transform:" + this.transform + ";opacity:" + this.opacity + ";" + this.stylesObject
                        }
                    },
                    created: function() {
                        this.config = {
                            duration: this.duration,
                            timingFunction: "ease",
                            transformOrigin: "50% 50%",
                            delay: 0
                        }, this.durationTime = this.duration
                    },
                    methods: {
                        init: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            e.duration && (this.durationTime = e.duration), this.animation = (0, o.createAnimation)(Object.assign(this.config, e), this)
                        },
                        onClick: function() {
                            this.$emit("click", {
                                detail: this.isShow
                            })
                        },
                        step: function(r) {
                            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            if (this.animation) {
                                for (var h in r) try {
                                    var c;
                                    if ("object" === (0, i.default)(r[h]))(c = this.animation)[h].apply(c, (0, a.default)(r[h]));
                                    else this.animation[h](r[h])
                                } catch (e) {
                                    t("error", "\u65b9\u6cd5 ".concat(h, " \u4e0d\u5b58\u5728"), " at components/uni-transition/uni-transition.vue:143")
                                }
                                return this.animation.step(n), this
                            }
                        },
                        run: function(e) {
                            this.animation && this.animation.run(e)
                        },
                        open: function() {
                            var e = this;
                            clearTimeout(this.timer), this.transform = "", this.isShow = !0;
                            var t = this.styleInit(!1),
                                r = t.opacity,
                                n = t.transform;
                            "undefined" !== typeof r && (this.opacity = r), this.transform = n, this.$nextTick((function() {
                                e.timer = setTimeout((function() {
                                    e.animation = (0, o.createAnimation)(e.config, e), e.tranfromInit(!1).step(), e.animation.run(), e.$emit("change", {
                                        detail: e.isShow
                                    })
                                }), 20)
                            }))
                        },
                        close: function(e) {
                            var t = this;
                            this.animation && this.tranfromInit(!0).step().run((function() {
                                t.isShow = !1, t.animationData = null, t.animation = null;
                                var e = t.styleInit(!1),
                                    r = e.opacity,
                                    n = e.transform;
                                t.opacity = r || 1, t.transform = n, t.$emit("change", {
                                    detail: t.isShow
                                })
                            }))
                        },
                        styleInit: function(e) {
                            var t = this,
                                r = {
                                    transform: ""
                                },
                                n = function(e, n) {
                                    "fade" === n ? r.opacity = t.animationType(e)[n] : r.transform += t.animationType(e)[n] + " "
                                };
                            return "string" === typeof this.modeClass ? n(e, this.modeClass) : this.modeClass.forEach((function(t) {
                                n(e, t)
                            })), r
                        },
                        tranfromInit: function(e) {
                            var t = this,
                                r = function(e, r) {
                                    var n = null;
                                    "fade" === r ? n = e ? 0 : 1 : (n = e ? "-100%" : "0", "zoom-in" === r && (n = e ? .8 : 1), "zoom-out" === r && (n = e ? 1.2 : 1), "slide-right" === r && (n = e ? "100%" : "0"), "slide-bottom" === r && (n = e ? "100%" : "0")), t.animation[t.animationMode()[r]](n)
                                };
                            return "string" === typeof this.modeClass ? r(e, this.modeClass) : this.modeClass.forEach((function(t) {
                                r(e, t)
                            })), this.animation
                        },
                        animationType: function(e) {
                            return {
                                fade: e ? 1 : 0,
                                "slide-top": "translateY(".concat(e ? "0" : "-100%", ")"),
                                "slide-right": "translateX(".concat(e ? "0" : "100%", ")"),
                                "slide-bottom": "translateY(".concat(e ? "0" : "100%", ")"),
                                "slide-left": "translateX(".concat(e ? "0" : "-100%", ")"),
                                "zoom-in": "scaleX(".concat(e ? 1 : .8, ") scaleY(").concat(e ? 1 : .8, ")"),
                                "zoom-out": "scaleX(".concat(e ? 1 : 1.2, ") scaleY(").concat(e ? 1 : 1.2, ")")
                            }
                        },
                        animationMode: function() {
                            return {
                                fade: "opacity",
                                "slide-top": "translateY",
                                "slide-right": "translateX",
                                "slide-bottom": "translateY",
                                "slide-left": "translateX",
                                "zoom-in": "scale",
                                "zoom-out": "scale"
                            }
                        },
                        toLine: function(e) {
                            return e.replace(/([A-Z])/g, "-$1").toLowerCase()
                        }
                    }
                };
                r.default = p
            }).call(this, n("f3b9")["default"])
        },
        "27de": function(e, t) {
            e.exports = {
                DrawFonts: {
                    "878d": "mV8P,mVNx,kCPb,kDch,gP3h,gOGh,kCPh,3Qy3,ew89,ewDp,5mHp,3QU1,c+Aj,aIbF,c+T3,9XpN,9Xdb,9Xz9,9XpH,5mrN,9XOH,jSzN,jS/V,ceJV,cehN,pcCj,67Vp,5mNz,6U+1,9YbH,4CBh",
                    "54e8": "7EDX,m8n1,m8FN,aIeN,aHY1,nGt3,jSwF,pcsX,hAb1,jSSr,nHc1,3Q+b,hzUh,hAwV,5ngV,3Rqp,dLLb,dMnV,9aNb,9bpV",
                    6388: "jRQP,jSh1,bsJP,fhfV,pbTr,5mlx,3Qy9,mVE3,orZV,lo1b,j5HF,m95P,j5Xh,hAkj,loFV,dLI3,hzR9,hAD9,dMu9,c+Zp,c/yV,9Y5x,6UB1,5mNF,3QX9,c/0r,9b0V,6UHh,5naF,3RJ9",
                    "7c9f": "nFZP,nHf9,nGt3,gP09,nGOX,gPm1,kCPb,kDNN,gPEN,gOGh,kCPh,fh6r,cd/1,cenX,ex3x,bsJP,bt/9,gP9r,3R4x,5m8X,7EWN,btmx,8qf1,6UNx,5nn9",
                    "817e": "4BgP,aI2h,nG7h,nGmV,5muV,3QHx,ikkb,ikzV,ikkb,ikzV,dLmb,dLBV,nGCr,lodN,lotj,nH5N,lo1b,loJ1,hzR3,hAD9,pczb,kDv1,ikYV,fhyF,ce29,hAkj,g2MF,excV,dMu9,ewJz,ex6F,9Y5x,cehH,9XON,9Yl9,5nk1,3Rtx,6Uib,6UQF",
                    6316: "kCFP,kD2V,bsJP,fhfV,or2r,5mlx,3Qy9,pcmH,m9c9,ikG3,m8P9,m9y1,ilp1,fhpb,j5KN,j5+j,fi51,c+Wb,c/sF,9XRV,7Fdx,67th,5mHp,4BVx,4CrV,7FS9",
                    "4e4c": "pcdj,m8M1,g2tP,hAnx,m9oF,m8zx,dLsx,dMr1,6891,3Rnh,8psX,9bgx",
                    9985: "hzlP,or2x,lnEb,ln+9,hzHN,gOJj,4Btp,7F11,gP3b,jSwF,orE1,m95P,m9y1,gPyx,fhHX,ewDp,3R1p,9XFj,9XV1,ex0j,exg1,3RG1,9Y2j,9Yi1,5mHj,5nk1",
                    "6c79": "pbQj,m8IV,j52X,g1Xx,4BgP,c+GF,j5v3,5mB9,5nk1,j6dX,3RG1,mVKj,g2A9,9bjF,8p/j,ewT1,orTF",
                    "63a9": "jRQP,jSh1,pbQj,5mip,3QrV,cdvH,ewqV,lnWX,loJ1,pcsX,kDoN,ikMp,g24V,lon3,ilfF,g2Z9,6Uf3,fhm9,fh+N,9bmN,9aK9,ce23,ceGN,ikYP,5mTV,4C61,4CrV,6V19",
                    "4ebf": "fgSP,jS4x,pc0V,jS4r,3QHx,m8P3,m9rN,hAb1,cebx,8pV9,6Uc1,5mB9,4BPh,4CrV,5nk1,7FS9",
                    "4e8e": "nG7b,nH8V,fgSP,fi89,nGFz,5mNF,3QU1",
                    5728: "lnxX,loJ1,pcgr,j5v9,fh9F,bsJV,g1Xr,3QHx,dLEX,dMkN,5muP,5nn9,ikYP,5mTV",
                    "906e": "m8mX,jS4x,fgPH,fh3p,6TYp,5m91,6TYj,4BM9,4Cy9,oruz,m991,8pIz,cd/1,lnX1,loJ1,gOYX,gPL1,jSwz,c/3F,c/px,jSSx,6Uf3,9XFp,9XOH,6UxV,9XY3,6UNx,aIZz,7FP1",
                    "4f17": "g1O3,hzEF,jSk9,lo4p,pcjF,lo7r,j5Xh,g2SV,4BgP,674h,8pIF,aIeN,fhfV,aIeH,6Uox,3R1j,6UxV,9b79,fhOh,9X/b,6UQF,3RJ9",
                    "5b97": "orlb,m8/F,hzs3,lnB9,loJ1,hAA1,hzEz,hAnx,c+qX,c/C1,5m8X,aIhV,c/3z,5mNF,3QX9,aIQb,6891",
                    "7ff1": "pbWz,m8wp,m8q9,gOD9,gP3h,m8Sh,m8wp,jRX3,jSnh,dLcP,dLOp,g1+z,8ppV,c+MP,8q2x,bt3H,3QNN,8pzb,8pYh,mVNr,mW19,67P9,4BYF,aIxr,dM59,fhEP,ikPx,mW7j,mWn1,5nk1,3Rtx,aITj,dMr1,fh+H,il9p",
                    "7b28": "ikdX,lnKx,or8N,lnKr,lo7x,lnQH,j5v9,j5Hz,orH9,logP,loM9,loqb,ilfF,g1KX,g2W1,jStr,3R4x,6TOX,aIeN,g2kx,ceuh,9Y8F,7FS9,8pIz,8qrx",
                    "90e8": "pbWz,mVB1,m8jP,m92N,jR+b,hzEF,kDfj,g24V,g1EH,g2qN,4Bqb,c+xh,c/0x,6Uox,6TVh,3Rk3,nGS9,nHc1,gPyx,excV,9Yl9,8qE1,6UQF",
                    6668: "j5fr,or2x,orTF,j64F,j5fx,m8zr,m9oF,5m2H,8pzh,bsWp,gOJp,gPO9,dLyH,dMhF,bsWj,btY1,bt6P,3QQV,67zx,btpz,6UHh,4Cv1,7Fwb,9Y8F",
                    "7eaf": "pbWz,hzlV,hzHN,lnWX,cdC1,c+Q1,5m5P,7F49,kDcb,kDX9,gP6j,btjp,btRN,hAtH,9YbN,pcw3,5m+9,4Cch,4CrV,68c9",
                    "60bc": "fgSP,jRX9,pbQj,3QEp,kCYz,gOZ1,pcsX,jSG1,mVZX,mWn1,jSnb,jSYN,ceGN,ce5h,jSnh,g2eb,g2PN,9aAH,9bzh,cenX,3Rh1",
                    "728a": "m8q3,g1EN,j52X,j5s1,bsGH,ewu1,pbTr,3QHx,m8Yr,m9uV,pcw3,il39,ikJb,ils9,fh+N,gP6j,ewPV,dLLb,btsN,aIhP,aJdh,gPsb,btC9,7FmV,3QQV,8qoj,3RJ9",
                    "623f": "pcab,mVTN,4BdH,9Xa9,mVf9,mWgN,j67N,j569,hzXj,fhI1,ewej,exmh,ewGr,9aNh,3QEp,btjj,btOF,5naF,3Rh1",
                    "7f1a": "5m8X,7F49,bt9X,aHY1,jSh1,gOSH,g1HV,or5F,m8P3,m9B9,mWgH,orQx,orH3,btC9,btjj,j5Bp,j6aV,btUV,dMnP,dLOp,gP6j,gPHV,9Xz3,9Yoh,btOz,5naF,3Rnh,9aWz,5mX1",
                    "7b8d": "j52X,or8N,m8zr,m8Yx,m8FH,j5v9,j5Er,orH9,m95P,m9B9,m9fb,j64F,g1O3,g2b9,iktz,5moF,3QBh,9ahX,c+T9,hAzX,hzXp,4BSp,4Cv1,8qbP,dL+V,dMnV,9bpV,8quF,g2Gj,6UKp",
                    "568e": "9ahX,lny1,lnNF,aIbF,aHY1,pcmH,mW4h,m8LX,m9Eh,kDcb,kDNN,hAtN,hzUh,kDch,c+PX,g281,g2Z9,c/F9,dLLb,dMnV,dM1X,9aH1,cehH,9bah,5n4p,3RaN,6UbX,aIGV,4BM3,67FN,9b79,9bab,btUV,9Y5r,6UTN,4Cy9",
                    "8c62": "or2r,m8P9,lojX,orTF,kCPb,kDU1,hzoX,hAD9,pcmH,j5yh,fhcN,cdC1,hAaX,ex3x,ceQ9,ewnH,ex0p,ewGr,aI5p,c+Wb,9XLF,7FjN,5mNF,3QU1,8pCj,aIup,5mij,9aWF,9aZH,cexp,9XRP,5ndN",
                    "4f0e": "g1EH,pbZN,kCSj,3QEp,kD2P,kD+h,pcsX,fhI1,fhfP,fh+N,9X/h,67CF,3QQV,fhsj,9XON,67Yx,3RJ9",
                    "5a07": "or5z,cdC1,9XmF,6Uf9,j4/P,j5s1,cdXV,8pFx,4BgV,nGzj,orZV,nGVb,j5U9,fhBN,c+Wh,j5yb,j6h9,j5Xb,fh+N,c/Ih,dL+P,8qbV,67CF,3QX9,dMhz,3RwF",
                    "7a76": "ikh3,lnB9,loFV,illV,pc73,m8/F,dLfX,j5v9,j5NP,exg1,cdIb,ceuh,5n1h,4Cfp,4Cv1,6V4h,g2hj,btgh,7F11,3Qv1",
                    9760: "lnEb,or8N,mVrz,mWgN,pcgr,jStx,jRQP,jT69,hzBr,hAnx,ex3x,ewhx,hzBx,ewx3,3QX9,cdBX,ce29,9Xa3,9Xz9,6Uf3,6TLV,ewMH,3RaN,cehH,ceN1,9YeP,9XON,6UuH,6V19",
                    "63fd": "jRQP,jSh1,bsJP,fhfV,pbQj,5mip,3Qv1,orlb,hzUh,pcmH,gPfN,j5QX,orQx,loqh,loM9,jSSr,hAwV,8pYb,fhph,fi1V,8qAV,c/cX,7FjN,5mHp,3QQV,9XY3,5m+9,4Cch,4Cv1,6V19",
                    "91cf": "nGdr,nH2F,j64F,j5fx,nGdx,lnKr,lozF,gOwP,gPO9,ewhr,ex6F,9Y8F,9Xjx,ewhx,cdOr,ceDF,7EKb,7FLV,4BgP,4Cy9,ewJz,4BYF",
                    "9a74": "nFZP,nGq1,ewqV,lnEb,ew89,ewAh,7F49,67n1,4Bwx,9aeP,bt6V,pcsX,mW7p,c/BX,loJ1,loaF,ceeF,6Uox,3QX9,ewJz,exg1",
                    "6bcf": "ikdX,pbZN,mVrz,mWn1,7FS3,7EQx,j5fx,j67N,5ndN,3Rnh,dLcP,dMu9,gP6j,ewPV,btgb,8q8N",
                    "76ee": "3QHr,nGdx,nH2F,3RwF,ikqr,ilfF,c+Dr,c/sF,67ar,67/F",
                    "8db4": "gOzX,mVc1,mVxV,gOVV,gOA1,gOJj,677p,cdLj,ce29,c+qX,5m91,4BdH,7F49,ikVH,aIup,5muV,mVZX,dMbp,9bmN,5nn9",
                    "74f6": "oqV3,m8CF,jSdP,orlh,jRTX,jStx,c+nP,c/3F,jS4r,c+Dx,9arp,3QrV,jSk3,3QX9,mVNr,mWn1,mVWP,4B/N,8qlh,fhHX,ceAx,ikYP,iliN,5naF,4CoN,4Cy9,68fh",
                    "5f3a": "nG0X,nGmV,ikwN,ikh9,c+r1,c+MV,6U5N,67dF,4Bn9,nGCr,nH5N,jSYN,jStx,nGCx,9XCb,gP3h,gPHV,btUV,btgh,jSJ3,67P9,5mB3,6UWV,9bmH,4Cy9",
                    "74e4": "oq/j,m8FN,m8jP,m8Yx,jRTX,jS4x,hzBx,hzp1,jRU1,jSdP,jSqp,hzXp,hzKV,jSdV,fgSP,fhvx,c+Zj,c+r1,aHRH,aIxx,hzyj,aI5p,hzNX,aIl1,aIbz,66TN,8pzb,3QBh,6U5N,9axz,67th,7F0X,9XFp,3Q+b,6UrF,9XON,mVTN,nHc1,m9fb,9X/h,4C61,67/F,7FCr,3RCV,mWdz,c/sF,9bpV,4CBh",
                    "717d": "ew1P,j569,or2r,dLsx,8pzh,4BgV,dLsr,9Xw1,pcpP,m9fh,3QNH,8pV9,aIrh,m8Sh,m9y1,ilp1,ikJh,fhvr,fhL9,5m+9,3R7F,c/0r,btsN,6Ulj,9XV1,fhOb,fi51,fi51,5nk1,3Rtx,dMbj,btOF,6UHb,9Yi1",
                    "58eb": "g1KX,g2W1,5mfb,5ngV,orrr,5mKx",
                    "4e1d": "nGmP,g1O9,g281,jSqj,9Xdh,9XCh,nGYj,g2nF,g2Gp,jS/P,9XLF,9YeV,66ZX,6891",
                    "70ad": "nGaj,jS1p,jS/V,nH8V,pcjz,jSwF,gOzX,gPO9,j5v3,fhfV,cdRF,aI5p,8ppV,9XvX,c+Wh,fhBH,btsN,8q2x,6Uih,5my1,3QEp,btsH,7Ft9,67Yx,3RJ9,aIQb,dMkN",
                    "6d82": "oqV3,lnQN,hzlP,fh6x,4BgP,bt0F,gOPz,nGIN,kDBh,ilfF,gPO9,gP03,gPBF,cdXP,ceJV,gPiP,5mTV,3R1p,5moz,9XCh,9Y2j,6891",
                    6170: "cdyP,ew89,ikkh,oqYh,orrx,lo7x,lnEh,j5fr,j5Ex,gOJj,gPcF,bsTb,ewkF,gOYX,cd/1,aIeN,ewDj,cehN,hA7P,fhOh,jSzH,jT69,orTz,c/sF,btC9,4BgP,9aoh,9aAH,5mrN,4BFV,4C61,6UHh,9XFj,7FgF,9Y5r,6891",
                    "5ce1": "jRTX,7EE1,8pS1,jSgX,67n1,or2r,8pFx,lo1b,loJ1,j5Bj,fhBN,fhRj,j6aV,pcw3,ewW9,aIGV,7FgF,5mEh,3QQV,c+Wb,c/F9,c/g3,9bdp,6UQF,3RJ9",
                    "950c": "ik7H,pbTx,lnEb,ln+9,hzoX,hzO1,c+nP,c+T9,hzBr,4Bwx,8pV9,pcsX,mW7p,m8Vj,m9y1,jSwz,gPm1,fhOb,jSYN,fhpb,fibh,9XFj,9Yl9,fhOb,3Rnh",
                    "82bd": "mV8P,mWq9,pc3X,jSh1,pcsX,jSG1,hzvb,hAwV,g21H,c+xh,c/C1,hAe3,5m+9,3R4x,5m5P,6U2F,8pV9,c/9V",
                    "94f1": "hzlP,or2x,kCPb,kD61,hzoX,hzO1,c+kH,c+T9,hzyj,3QEp,8pV9,pcmH,m9fh,kD93,kDX9,kDuX,gPfN,c+Zp,9Xw1,gPfH,3RaN,7Fwh,il33,c/mp,9bjF,5nn9,c/pr,gPL1",
                    "6d8c": "oqV3,lnQN,ikdX,g1Xx,4BjX,cdUN,nGt3,nH5N,j5R1,loaz,il39,3QX3,ikG9,ilp1,5nk1,3RwF,dLI3,dMr1,9Xz3,9Yi1,il33,5m+9",
                    "94a5": "hzlP,or5F,kCPb,kDch,gOzX,gP09,cdyP,ce5h,gOMr,4Bwx,8pV9,3QX3,7Fdx,9XLF,nGFF,nH8V,5ngV,3Rqp,ikSz,illV,c/3z,c/yV",
                    "6e5b": "nG43,lnNF,ikaP,g1Xx,4BgP,cdRF,lnTP,loM9,pcdj,ce8p,pcFr,ceAx,ikMj,ilcx,fhsj,fhUx,cdUH,ceQ9,ce23,5mB9,5nk1,6Ulj,9XRV,aITj,7FLV",
                    "631a": "m8jP,m8P9,pbWz,gOPF,fh0h,ikaP,jSk9,m8Vj,m9rN,gPBF,g2PN,gPL1,ils9,pcsX,jSCV,gP9x,fhm9,jStr,hAe9,dLmb,dMkN,bsWj,btOF,8ppP,8qH9,dLRr,5mKx,3QU1",
                    5353: "pcgr,jStx,m8Yr,m9y1,jS1j,jSVF,c/sF,c+Ap,jS1p,g1Uj,g2MF,9aeP,9bw9,c/0r,3R4x",
                    "69ad": "3QEj,pbQp,j4/P,j5oV,cdyP,iknp,hzyj,ewnN,orrr,lo1h,ikCX,ikYV,fhEP,fhj1,cdUH,cekV,5mrN,3R1j,5mTV,logV,lnX1,cd/1,il33,ilvh,pcLH,5ndN,3Rqp,btLr,fhL9",
                    2165: "nGIH,5my1,nG7h,nG0X,nGjN,nGwb,nGP1,nGVb,nHc1,nH2z,5naF,5n1b,5nk1",
                    "868c": "66WP,9aNh,btd3,67zx,8pIz,pbWF,aH/3,kCM9,kDch,c+Wh,c+u9,kDir,kDX9,g2VX,g2kx,aIuj,aJdh,pczb,3Rnh",
                    "5bbe": "pcab,mVTN,ikdX,m8n1,m9y1,ilp1,j5+j,hzHN,9XpN,9X0H,9Yoh,ewnH,ex9N,ewSX,9XV1,3QuX,8pV9,8qbP,4CrV",
                    "998b": "ik7H,oq/p,kCM3,kD61,hzHN,gOJj,4Btp,8pS1,lo1b,pcpV,mVQz,mWdF,jSG1,jSnh,g2eh,g2SV,jS/V,jSG1,fhEV,cebx,9Xz9,g2Db,btFh,aITp,aJ71,c/Ih,9XOH,8qrx,6Urz,3RwF",
                    "51fa": "mVlj,g1Up,g2MF,mWdz,ex6F,c+xb,674h,685V,c/yP,3RCV,pcgr,67zx",
                    "50a3": "g1EH,kCSp,or5F,kCSj,3QEp,m8IP,m9y1,j5oP,j6aV,g1+z,g2Z9,pcpP,kDoN,hA1F,dLLh,aIbF,fhL3,c/px,aJa9,ce23,9XIx,67gH,9b0V,dL+P,5mTV,3R1p,btLr,9b79,9b0P,5ngV",
                    9493: "ikaP,pbWF,lnEb,lo4p,hzs3,hzR9,c+nP,c+Wh,hzEz,4BzF,8p/p,fhsj,j5KN,pct1,kDrP,kDU1,6891,3Rqp,ewPP,9Y5x",
                    "997f": "hziH,or2x,kCPb,kD61,gOPF,g1Uj,4Btp,8pOV,lnWX,mV+1,m8Yr,67zx,4BJ1,aIhP,c/9V,hzNX,hAGh,mWdz,jT31,orKb,dM8h,9Y2p,67/F,3RG1,68fh,67IP,9bdp,dMnV",
                    6276: "j4YH,j5v9,bsJP,fhj1,pbQj,677p,3Qv1,jSnb,jT31,ewx3,exj9,pcw3,c/d1,8q8N,3QQV,c/g3,9bgx,4Cy9",
                    "4e2a": "fgSP,iktF,pcgx,nGCr,jSG1,gPBF,fi89,ikPr,3R4x",
                    "6eda": "oqRX,kCYF,ikaP,fh6x,4BgP,cdRF,pcjz,m9c9,lnTP,loM9,g21H,jSqp,jSPj,gPL1,ikYP,dLLh,ex3x,gPsb,c/vN,dL+P,9XCh,7ETF,9XFj,3R1p,6UB1,btyX,7FCx,4Cy9,9bdj,btY1",
                    "5ffd": "ikh3,lnQN,ori9,lnQH,loFV,dMhF,cer9,lo7r,gOZ1,dLpp,loqb,gPiV,btd9,4BjX,9Xgp,9XsP,5muV,4BJ1,4Cch,6UNx,aIxr,7FmV,9Y8z,4Cy9",
                    6328: "3QuX,5mlx,pbTx,jRQP,jSh1,cdvH,g281,pcpP,jSk9,kDNN,mW7p,j6e1,dLI3,ikPx,g2kr,g2SV,g2wX,btz1,6UrF,3QQV,aIN3,4Cy9,cd+X,ceQ9",
                    5821: "gOwP,or8N,lnKr,aI8x,j5v3,mVE9,mWgN,j67N,j5v9,gOSH,gPO9,j5NP,aIGV,bt3H,c+Wh,gPiV,g2wX,dMex,ceJV,bt/9,8pCj,8qAV,btpz,4BYF,4BjX,4Cy9",
                    "83e0": "pc3X,jSh1,jSJ3,pcw9,mV8P,mWq9,j5cj,gOVV,fgVX,c+GF,4BjX,bt0F,3QHr,6Uc1,9XCh,hzUh,hAA1,fh+N,jSJ3,c/g9,c+Wb,c/vN,8qlh,5mQN,3Q+h,btpz,8qf1,5naF,3RJ9",
                    "957f": "pbZH,3QNN,7Fdx,fgSP,fi89,hzUb,kDv1,orTF,ewGr,btsN,7Fzp,4Cy9",
                    6410: "3QuX,5mlx,pbTx,jRNH,jSk9,bsJP,ewu1,pcmH,m9fh,m8IP,m9B9,m98X,ikJh,il6h,kDKz,ewAh,fh+N,hAnr,dMr1,3Q+b,ce5h,ceJV,3RCV,8qAP,8pYh,cenX,5mX1,5mEb,5ngV",
                    "4e39": "3QrP,8pFx,cdRF,nGgF,nGYp,67Vp,3RdV,ew1P,exj9,kD93,hA4N",
                    9489: "hziH,pbTx,lnEb,ln+9,hzoX,hzR9,c+kH,c+Wh,hzBr,4Bwx,9aNh,m8Vj,m9Eh,m9lr,5n7x,3RdV",
                    "7b4f": "j4/P,pbZN,m8wj,m8Yx,m8Cz,j5v9,j5Bj,pcw9,m95P,m9Eh,m9ij,j67N,ikzP,cdyV,fh6r,3QHx,c+MP,fi89,il6b,g2PN,ceGH,8qlh,4BPh,ikSz,cekV,67Yx,3RG1,6V4h",
                    "88b1": "pbNb,m8CF,jRQP,jSdV,c+nV,g1Xr,3QHx,dLsr,aIo9,c+JH,fhj1,gOYX,pcmN,kDfj,3R1p,hA1z,hAGh,mWdz,jT31,pcCj,c/jh,8qf1,4BYF,dMbj,9Y8F,4Cy9",
                    "5de5": "lnEb,loFV,lo7r,67zx,66WP,68c9",
                    "6c26": "ikaP,or2x,m8wj,m9uV,j5fr,j64F,gOzX,gPyx,8qrx,4Cv1,6V4h,gOYX,ewAh,ewej,ewW9,ewAb,bt0F,btd9,dLOj,7ENp,cehH,5mlx,9aTr,5n1h",
                    "62a4": "jRQP,jSk9,bsJP,g2b9,pbTr,67ax,4Bk1,pcmH,m9ip,3QNH,7F7h,cebx,kDix,kDQV,ceJV,dLRr,dMnV",
                    7978: "pbQj,m8FN,jRQP,jSh1,fh6x,bsJV,fh6r,fhj1,c+Q1,fh6r,3QHx,nGCr,nH5N,j67N,j5Ex,nGCx,3Q+b,fhph,fi51,6891,3RwF,j5Xb,cer9,8q5F,ceub,9bmN",
                    "6fc0": "nG43,lnNF,ikaP,g1Up,4BgP,cdLp,oroj,m8P9,m8IV,g24V,g2qN,m92N,m8P9,j5oP,j5KN,fhpb,dLRx,dLyH,dL+V,dLI3,9Xw1,5moF,aIo3,aIDN,6UuN,5mEh,fhEP,jSMh,pcFx,jSMb,jT69,jS/P,c/sF,8qop,3RaN,fhL3,9Y5x,6UTN,4Cy9",
                    8350: "mVbX,mWn1,pc3X,jSh1,pcw3,jSJ9,ikaP,ils9,kDfj,ewnN,9abN,ewnH,3QNN,fhpb,fh+N,ceuh,5n1h,3RaN,9Xz3,9Yoh",
                    "996f": "hziH,pbTx,kCM3,kD99,hzHN,fh3j,3QEp,8pS1,ikG3,kDU1,cd+X,g2Z9,4BPb,8qlh,c/yV,orNj,mWgN,pcpP,ceo1,8qlh,3RCV,6V4h",
                    "4ec5": "fgPH,pc0V,lnKx,3QHx,mVxP,mWjV,gPBF,ceuh,3QU1,m8Sb,dLXN,7Fwh,4Cy9",
                    5162: "lnuP,lo4p,or5z,hzEF,hzs3,hzR9,ce29,cdF9,hzs9,cdOr,7ENp,3QrV,cdUH,4BCN,8p/p,lo7r,loM9,orKb,hAhh,hA4H,hAwV,ceJV,cehN,hA4N,cer3,7Fq1,5mQN,3R1p,ceAr,5n7x,4ClF,4Cv1,68fh",
                    "51b3": "mVbX,j5iF,7EAP,fh6x,kD2P,kDNN,dMex,dLyH,dMu9,pcmH,dLUF,9aQp,67n1,3QHx,dLXH,8qlh,4Cv1",
                    "90e1": "oqRX,orrx,g2kx,g1L1,jRQP,jSCV,or5z,hzBx,c+xh,9abN,5mij,c+Ap,c/3F,6UrF,6TYp,3Rk3,orH9,os49,gPvp,c/F9,9Yoh,7FCx",
                    "51b5": "mVbX,j5iF,8ppP,ewnN,nGt3,nH5N,fh+N,fhm9,nGt9,fhyz,9XIx,6Uf9,5muV,3QHx,fhL3,67P9,4Cch,4Cv1,6V4h",
                    5764: "ikaP,ikD1,pbQj,9arp,7EAP,aIl1,9aNb,lo1h,loJ1,9bt1,g2eb,g2W1,aIrb,aJ71,pczb,3Rnh",
                    "4e3d": "nFWH,nHih,3Qy3,j569,j5yh,5mEh,3QNN,fh6r,bt6V,3RaH,j5KN,j6aV,5ngV,3Rqp,fhL3,aIZF",
                    "6ca5": "nG7b,kD2V,ikdX,g1Xx,4BjX,cdRF,4Bwr,8pS1,9Xz9,m8P9,m9B9,gP9r,gPHV,685V,4Cfp,4BPb,7FjN,9XV1,kDy9",
                    7624: "pcgr,mV+1,m9B3,m8zx,c+Dx,9arp,4BgV,kCIX,hzBx,cdyP,ewhx,jSzH,j5v9,dLI9,g2qN,hA1z,fhEV,j5QX,j6aV,excV,c/px,j5+j,g2Dh,c/9V,3QTX,bta1,btUV,3RCV,8pRX,8qAV,5mxX,5ngV,btvP,5mTV",
                    9647: "3Qy3,nG49,nGt9,hzBx,c+T9,aIl1,9Xjx,j5v3,j6h9,kDQP,nGYp,orAP,g2qN,aIxx,7F7h,3QNN,gPp3,5m+9,4Cch,4CrV,6V19,67zr,9b79,ceDF,g2W1",
                    8109: "4BdH,7EE1,cdF9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,c+MP,c+u9,pcmH,m9ip,jSqj,jSMh,5n1h,3R7F,fhm3,fhBN,btpF,6Uf9,hAhb,ceDF,aJ0N,7FS9,ex3r,hAA1",
                    "76f2": "pcab,mVTN,m8jP,m9B9,m8zr,hzBx,hAtN,3QHr,fh6x,fhUx,3Rtx,cdOr,ceAx,9bgr,9aux,5mlr,5n7x",
                    "95fd": "3QBb,kCPh,oq/j,kD61,mVKj,mWjV,685V,bt0z,gOPF,gPvp,cexp,cdRF,jStr,9aTx,8pFr,9bgx,btIj,7FIN",
                    "819c": "4BdH,8pt1,cdF9,nG49,nGmV,5muV,3QEp,ikh3,ikzV,c+u3,c+MV,m8P3,m9y1,pcmH,j5KN,pcFr,j61x,j5Bj,j67N,c/vN,c+Zp,j5Bp,g2hj,g2PN,9Xz3,9Yl9,c/g3,8qf1,5mNF,3QX9,9b73,67Yx,3RJ9",
                    "556e": "8psX,m8n1,m8CF,aIbF,aHY1,mVKj,hzXp,orH3,hAe9,lon3,loFV,hzKP,hAD9,hzR3,6Uf9,6UTN,hAtH,4CoN,gPlX,c/9V,aIAF,9aQp,c/9P,8quF",
                    "626d": "jRNH,jSk9,pbTr,5mlx,3Qv1,cdyP,g281,mVHb,mWgN,5naF,ewx3,ex6F,mVWP,5mKx,5muP,5nn9",
                    "78b0": "lnuP,lnX1,c+kH,g1Rh,lnKx,6TVb,g1Rh,g24V,8pOV,8pzh,oroj,logV,kDBb,orWN,kD93,kDU1,kDoH,4B/N,g2b3,9XLF,kDEj,4Cfp,9Y5r,gPL1,4BIX,4CBh",
                    "76ae": "4BgP,8pzh,bsWp,lnHp,loFV,hAqF,pcjz,fhyF,fh3j,fhXF,9XY9,6Uox,3QEp,c+PX,8q8N,3RJ9",
                    "780c": "m8jP,m8P9,m8zr,gOGh,c+kN,674b,gOGh,gOZ1,8pS1,8pzh,ikCX,il01,orrr,9XIx,9aWF,9b0V,btz1,m98X,m9y1,6891,4Cix,m9lr,aITp,67M1,3R7F",
                    6266: "jRQP,jSnh,bsJP,fhm9,pbWz,5moF,3Qy9,m8Vj,nH8V,m9fb,3Rnh,ewDj,exj9",
                    "6cc5": "oqYb,lnQN,j4/P,g1Up,4BjX,cdOx,3QTX,nGq1,nH8V,3RCV,kDuX,gPm1,c/6N,9XFp,gPlX,aIZF,67mX,685V",
                    "8da3": "kCFP,kD99,pbTr,fh6x,fgPH,fhph,fh9z,67dF,bt0z,btd9,4BdH,c+xh,9Xdb,4BJ1,4Cy9,mVE3,mWq9,mVNr,9XIx,mVZX,67M1,ikPr,il01,ewSX,ewGx,9aK3,btLx,jSMb,jT31,8qlh,gPsb,8qH9",
                    6492: "kCFP,kD2V,cdyP,g21N,pbQj,5mip,3Qv1,mVuH,mW19,pc73,ikG9,pcmH,ikVN,ikwH,il39,4BIX,fhj1,fhBN,67FN,4BSp,c+PX,c/6N,9XvX,9XON,gPp3,pcIF,kDEj,kD+h,kDTX,dMnV,9Y8F,3RdV,g2Db,9Y5x,4Cy9",
                    "55d3": "8psX,mVc1,mVrF,9XmF,9X71,ori3,orTF,lon9,j5v9,mVNr,j67N,hzKP,hA7V,cd/1,gP03,ceeF,hAaX,hAwV,c/jh,g2Db,ceN1,aIhP,aJa9,c/cX,3Rh1,5muP,7Fdx,aIK1,6UQF,5nn9",
                    "80be": "oqV3,gOD9,pc0P,g24V,nGwb,nH5N,jSMh,gP3h,nGzj,j5U9,g2W1,3QHr,ewhx,ex0p,5n4p,3Rh1,bsZr,btIp,8pFr,8qop",
                    "80dc": "4BgP,8pw9,bsTh,mVih,mVB1,5my1,3QKF,hzvb,hzO1,c+xb,c+Q1,ewAb,ikPx,m8/F,ikPr,ils9,cebr,ceN1,4BPb,4Cy9,pczb,4Cch",
                    "8ff0": "mV8P,jS4x,g1EH,g1Up,6TYp,4BgV,6TYj,4BM9,4Cy9,ikzP,illV,lozz,nGVh,pcpP,6UxV,9XpH,dLOp,ikYV,dMex,aJ3V",
                    6454: "jRNH,jSdV,pbQj,5mip,3QrV,bsGH,fhfV,pcjz,mW19,m8LX,m9y1,lojX,gP6p,hAe9,j5+j,ce8p,c/jh,c/jh,fhOb,btLx,j5rX,gP3h,bt6P,fhsp,gPyr,jS/V,ex6z,ceN1,9aDP,9bw9,btyX,3Rh1",
                    7410: "m8jP,m8P9,g1KX,g281,m8zr,8pFx,6TOX,9Xz9,nGwb,jSzN,pcw3,hAe9,j61r,nHf9,8p/j,hzXp,hAwV,8qAV,ewW3,9b41,6UuN,3QU1,8qoj,3RJ9",
                    "8e0f": "nG0X,nGmV,hzKV,hzp1,nG11,hzBr,6T/x,c+Dr,c+Q1,dLj3,6719,5m2H,7F49,ln+3,lodN,ikPx,fhj1,pcw3,g2A9,ewMN,mW13,j61x,fi89,kDEj,mWn1,3R1j,c+Zp,c/yV,3RCV,9aQj,9bpV,5mHj,5ngV",
                    "8fe2": "nG43,jS7F,g1EH,g1Up,7ENp,5m5V,7ENj,4BM9,4Cy9,nGpX,nH5N,iliN,gPsh,fhfP,ikPx,nGLV,6Uib,ewAh,ex9N,6UTN,8pYb,8qxN",
                    "4ead": "pcdj,mVTN,mVbX,mWn1,jS4r,jSPp,gPvp,gOMx,jS4x,bsMX,ew51,exg1,btY1,aI5j,aIZF,aIAz,5mNF,3QX9",
                    "4ea1": "ori3,kDoN,j4/P,j6h9,j5fr,5mlx,5ngV",
                    "97e6": "lnB3,loFV,gOJj,gPEN,cdBX,ceN1,7FLV,67Sh,pcgr,3R4x",
                    6790: "j4YH,j5v9,pbTr,3QHx,bsGH,j5fx,hzBr,c+T9,3QNH,7F7h,btmx,mVNx,os11,gP9r,gPRh,gPyr,3Rtx",
                    6089: "nG7b,nGCx,orTF,nGCr,dLRx,m8Cz,j5s1,il33,m9lx,ikaP,ils9,c+qX,ewkF,ikMp,ikSz,fhL9,ceN1,5m5P,9Xgp,aIhP,5muV,4BJ1,4C99,6UKp,btjj,8qbV,9Y8z,68c9",
                    9704: "oqV3,orZV,orrr,gP9x,ikdX,m8n1,m9y1,ilp1,jS1j,jSk9,hzyj,hzR9,jSCP,jSVF,hA7P,hAqF,g1Uj,dLI9,g2kr,c/0x,dL+P,g2PN,3QEj,c+Ap,c/sF,5naF,3Rk9,aI5j,aIZF,7ENj,7FFF",
                    8096: "nG7b,jSdV,pcgr,hz+x,jSFX,nH2F,3QEj,hzyp,hAnx,5n7x,3Rk9,dLpj,dMex,9Xgj,9Y5x",
                    "5a7f": "pbTr,ikkh,c+nV,7F11,j4YH,j5oV,cdRF,7EKh,4BdN,nGt3,nHc1,lozF,nGS3,gPp9,jSJ3,jS/V,fhiX,lo7x,j5Bj,g2tV,g2Z9,3R1j,dLOp,dMkN,5ndN,3Rqp,aIuj,aJ0N,7Faj,7FIN",
                    "7eda": "or5z,gOwV,gOSN,kD93,aHY1,ce29,5m8X,7F49,g2b3,orxN,kDlz,kDU1,5nk1,3Rtx,7Fdr,g2kx,g2Gp,9bdp,9aTx,c/0r,c/mp",
                    "4ef0": "g1HP,kCSp,pbZN,kCSj,3QEp,nGIH,mVHh,7F7h,aIGV,3Rk3,nGS9,nHc1,9bt1,7FFF",
                    "7a91": "pcab,mVTN,j563,m8q9,m9uV,j6aV,g1KX,ikwN,kD99,kDrP,ilcx,g2W1,c+Aj,hzR9,fhfP,fhUx,bsJP,bt/9,fhvr,5mKx,9arj,4Btp,5naF,9bjz,3RwF",
                    "59fb": "jRQP,jSk9,c+MV,9axF,677p,4Bk1,pbWz,c+r1,7F49,3R1j,nGzp,nHc1,3RG1,hA1z,hAtN,loqb,fhOh,ceo1,9aWF,fhOb,aJ0N,67wj,6891",
                    "5a74": "hzyj,nGap,nGwh,hzUh,lnTP,gOSN,dLmh,g27X,ewDp,hA7P,nGLV,nH8V,hAwV,lotj,gPsh,c/6N,g2Jr,c/C1,aHXX,aJa9,c/0r,8pLN,6UuN,3RG1,3Qy3,5my1,6UrF,8qbV,aIQh",
                    9047: "nG0X,kCYF,gOtH,gOMx,7ENp,5m91,7ENj,4BVx,4Cy9,nGwb,nH5N,hAtN,hzUh,nGwh,kDcb,kDNN,nGOX,aIK1,c/mj,9Y8F,9XFj,aIWx,7F0X,fhj1,fi1V,9bpV,7FCx",
                    9884: "nFZP,nGt9,j5fx,kCM3,hzHN,g1EH,g2eh,c+Q1,g1Xr,5mlx,3Qy9,nGzj,nHf9,nGYj,j5U9,8q5z,j5HF,j6aV,8qAV,g2Db,btFh,7Fq1,67FN,3QX9,7FCr,4CBh",
                    "589e": "j4/P,j5oV,pbQj,9arp,7EAP,9XsV,pcdj,mVTN,m9ij,pcLN,lnWX,loJ1,fi51,fhj1,lnX1,j5Er,gPfN,lojX,fhI1,gPsb,jSVF,3Q+b,ce5h,ceJV,3RCV,9aNb,9bpV,5mEb,5ngV",
                    6805: "jRNH,jSdV,pbQj,3QEp,bsGH,jS1p,gOJj,dLBV,3QNH,7F49,nGt9,nGIN,67FN,4BSp,4C2P,9bah,nGVh,nH8V,5ngV,3Rtx,fhfP,fibh",
                    7741: "66ZX,mVc1,mVuN,8pLN,8pt1,dLfX,dLyN,ikwH,ike1,j5v3,pcmN,mVQz,mWdF,il01,ikMj,illV,9YeV,9Xz9,ewx3,exj9,ik/X,5mX1,3R4x",
                    "8bc1": "oqRX,kCYF,hziH,hzyp,4Btp,9Xw1,mVAX,mWn1,mW13,5m+9,fhL3,fi51,gP6j,5mHp,5mrH,5nn9",
                    5631: "8psX,nG11,nGgF,aIbF,aHY1,5mij,9aDV,dLI9,ori9,orZV,loFV,ln+9,j5Bj,j6e1,gP9r,gPHV,dMnV,dLRx,gP9x,4BPb,btgh,btY1,5nk1,3RwF,j5U3,8qi9,7Fgz,8qrx,9Y2j,6UTN",
                    "9a7b": "mV5H,mVB1,c+MV,kCPb,c+u9,c+Wh,5mB9,3QHx,8ppP,9XsV,orDX,lotp,kDfj,kDX9,dLRr,dMr1,5mHj,5nqh,kDBb,5n1h",
                    "505a": "fgPH,or5F,kCSj,3QEp,j5iz,j5NV,orlb,dLLh,67jP,dLBV,dLUF,7FgF,7EZV,g2tP,orNp,j5U3,j6h9,j67H,aIZF,6UHh,3R4x,ewW3,9bdp,682N,4Cy9",
                    "4f70": "3QEj,kCSp,g1EH,pbZN,mVxP,mWth,mW13,hA4N,3Q+b,hzUh,hAwV,3RCV,685P,67th,ce5b,ceJV",
                    "81c2": "g1EH,jR+h,oqYh,orop,kDfp,kCPh,fh3j,iknp,ikJh,fhph,fh3p,pczb,mWax,mVQz,mWq9,m95P,j5U9,j61r,m9rN,j5Er,j6kh,j5+j,dMbp,g2nz,g2W1,3QHr,c+Dx,c/sF,5naF,3Rk9,aI8r,aIZF,7FFz,7EQx",
                    "69fd": "pbQj,3QEp,jRNH,jSdV,bsGH,jS1p,hzyj,ewqV,mVuH,mWth,jSk3,jS/V,dMnV,dLI9,jSk9,gP03,gPHV,pcjz,dLUF,dM8b,pczh,3Q+b,btgh,btRN,3RzN,8pYb,8qxN,5ndH,5mEh",
                    "9a70": "mV5H,mVxV,dLyN,kCM3,dLg1,dLI9,4BJ1,3QHx,7ExH,9XpN,fhm3,jS/V,aJ0N,9bdp,pczb,8qlh,m8/z,5mNF,4B/N,4CrV,6V19",
                    "7be1": "kCIX,pbZN,mVor,mVQF,mVxP,ln+9,loaz,pczh,mVZX,mWth,mW4b,kDKF,kC/H,kDHx,dMex,dLyN,kC/N,ikwH,ilcx,g2Jr,g21N,bsMX,btY1,dLI3,9axF,6TLV,9XIr,4Bwx,5n4p,8qbP,3RwF,btC3,8quF,68c9",
                    "5e1d": "mVbX,mWn1,pcdj,mVTN,kD2P,ikG9,hA4H,loqh,dLj3,hzs9,hAwV,dMnV,6T/r,c+Dx,c/sF,7FFF,67P9,g2kr,3R4x",
                    "949d": "pbWz,hziN,kCPb,kD99,gOzX,gP09,c+nP,c+T9,gOMr,4Bwx,8pV9,kDfj,kDX9,hzXj,btjp,ceJV,hAwP,9YeV,orH3,5m+9,4Cch,4Cv1,6V4h",
                    "7c89": "mV8P,j59h,j5oP,nGwh,hzlP,hzR9,9abH,hzBx,g1Xr,ce29,pbTr,3QHx,nGLP,fhph,orNj,g30h,fhvr,fh+N,682N,4Cch,fhHX,9aZN,4BM9",
                    "6e2f": "oqRX,m8zx,ik7H,g1Up,4BgP,c+Dx,lnQH,loFV,hzEz,hAA1,pcdj,hzXp,pczb,hAhh,hz+r,bt0F,hAaX,ceN1,9Xz3,9Y2p,dMbp,dLI9,67q9,4BSp,4Cfp,7FIN",
                    "89c2": "mV5H,mVB1,g21N,bsWp,8ppV,j52X,fh6x,9Xw1,c/0r,orrx,orZV,c/yV,jSJ3,ceo1,9aZN,4BFV,c/jb,67Sh,5n4p,5nk1,7FVh",
                    "75d5": "jRQP,gOJp,cdvH,fh6x,4BgP,8pCp,cdOx,mVox,mWq9,pcgr,mV+1,7FjH,3QU1,jSh1,jSVF,c/sF,c+Q1,g27X,g2MF,cehH,8qlh,4Cv1,8qlb,btY1",
                    6167: "mVbX,mVKp,kCM3,kDfp,ikdX,ikMp,or8H,fhcN,mVQz,mWn1,kDoH,kDQV,ikSz,ilp1,orKb,fhOh,fh3j,fhXF,9Y8F,9Xdh,c+Dr,c/sF,3QrP,8pCp,8pOP,4BFV,3QU1,3Rk9,6UHh,9aQj,6UuN,9bgr,4Cv1",
                    "4ef7": "g1EH,pbZN,lnKr,3QHx,g21H,jStx,orE1,kDHx,gPRh,g2nz,9XLF,7Fdx,3QQV,g2Mz,3RwF",
                    6854: "j4/P,j5s1,pbTr,3QHx,aHRH,j5fx,gOMr,dLF1,kDcb,kD+h,g2eb,g2W1,pcw3,g2A9,3R1j,btjp,btUV,3RCV,5mHj,5ngV",
                    "805a": "oqOP,oruF,oqYb,fh0h,orlb,dLLh,lnEb,lo1h,j5yb,j59h,ew1P,gPcF,mVTH,mWn1,jSVF,hAhh,fhyF,kDoH,il9p,gPEN,exg1,cdIb,ex3x,8ppP,btgh,4BgP,8pYh,c/0r,3R4x,aIxr,8qbV,67Yx,4Cy9,8qbP,ceGN",
                    6263: "jRQP,jSqp,bsMX,fhph,pbZH,5mrN,3Qy9,5mQH,lodN,loFV,5ngV,6UuH,6UWV",
                    "7d2f": "oq/j,orWN,hAtN,hzyp,oq/p,lnHj,loCN,oruz,hA1F,hzXj,ewhx,ewJF,gPsb,aI8x,aH/3,btOF,dM53,9Yi1,4BjX,9aDV,aIAz,5mNF,3QX9,9b73,4Cy9",
                    "9cde": "jRQP,pbTx,m8tb,m8M1,j5iF,j563,j5s1,aIl1,aH/9,j569,ew83,ewu1,j5fr,aI8x,6TLP,7F49,nGzj,logV,lowr,nH8V,jSnb,jT69,pczb,fhOh,fhpb,jSMh,fi89,fhBH,9Xz9,c/0r,c/d1,8q8N,67zx,3QX9,9XFj,8q8N,c/Ib,c/jh,7Fwh,7FS9,fh+H,3RzN",
                    "8bba": "nG43,kCYF,gOtH,gOMx,4Btp,7F49,gP03,jSwF,pcw9,nGP1,j64F,gPO9,gPcz,5mNF,4B/N,4CoN,5ngV,6U+1,aIDH,ex9N",
                    "871c": "pcdj,mVTN,j563,mVf9,mWjV,j6aV,fgZ3,j5iF,jSgX,fhj1,ewx9,ex0p,gPHV,cdBX,g2kx,kDEp,lo4j,j5KN,j64z,gPL1,67dz,bt0F,btOF,7FFF,7ETF,ewJz,4BYF,3Qy3,5ngV,6UNr,3RJ9",
                    "5ae9": "ik7H,ikwN,bt0F,6TYp,3QrV,oq/j,bsN1,7EZV,lnQH,lon9,ikCX,il01,c/d1,c+Q1,ikD1,orrr,3R4x,5mrH,c/0x,cebx,9b41,gPp3,orQx,jSPj,jT9h,jS/P,c/vN,7FCx,3RaN,fhOb,9bjF,4CBh",
                    "888d": "oq/j,lnQN,jRNH,jSh1,g1Xx,cdyV,g1Xr,3QHx,ewhr,aIo9,c+JH,g2b9,ikG3,orxN,lo7r,loFV,btUV,9Y2p,cebr,cexp,hAkp,hz+x,5mKx,4BYF,4CrV,6V19",
                    "6b3a": "lnrH,loaF,pbNb,aI2h,pc73,aIo9,ewx3,ewbh,hzvb,hzR9,aHRH,aIDN,4BgP,9aux,9aGX,6Uox,g2kr,orH9,jSCP,jT69,gPHV,hAhb,ceuh,8qf1,5mNF,3Q+h,ceub,9bgx,6UTN,4CBh",
                    "82b9": "m8jP,m9B9,pc3X,ikD1,pcw3,il39,3QuX,7ENp,bsZx,hzBx,ilfF,c+Dr,c/F9,c/cX,3Rh1",
                    7194: "dL9H,jRX9,oq/j,cdLp,8pzh,4BgV,gOJj,jSh1,cdLj,7F11,pcpP,m9fh,ikG3,m8P9,m9y1,ilp1,g2b3,j5KN,j5+j,g2SV,9XvX,c/3F,gPm1,c/px,aJa9,3R1j,9XFp,9YbN,3RzN,5mHj,5ndN",
                    "90b5": "nFZP,nGCx,hz+x,g2hp,fhj1,fgSP,hzyp,j5fx,nGgF,3QBb,dLmh,dLRx,6Uox,6TVh,3RgX,nGP1,nHf9,hAnx,dMr1,bt/9,9bmN,7FCx",
                    "552e": "gOwP,or8N,pcgr,m991,lnKr,bsZx,lnKr,loJ1,ikqr,iliN,g1Xr,g2PN,c+Dr,c/C1,lodH,c/6N,3QKz,9XmF,9Y8F,3RwF,5moz,5naF",
                    "50f3": "fgPH,pbWF,lnHj,3QEp,nGmP,nHf9,nGFz,g2nF,nGVb,g2Dh,kD5X,kDQV,g2SV,g281,kD61,fhm3,ceeF,ceub,ex6F,bt3H,bu2h,fhHX,3Rh1,5mrH,8q2x,btz1,8qrx,68c9",
                    "75bc": "kCFP,gOJp,cdvH,fh6x,4BgP,9arp,cdOx,m8zx,m9B9,pcgr,mV+1,g24P,kDlF,ikMj,ilfF,fhL9,ce5h,aIeN,gP6j,dM21,aJa9,btpz,8qrx,7Faj,3RwF",
                    "54c7": "8psX,m8n1,m8zx,9Xjx,9X71,ln+3,loJ1,g24P,g2Z9,pcsX,g2x1,aIo3,aJ3V,ewSX,5mX1,5mrH,5nn9",
                    "6c61": "oqV3,lnNF,ikaP,fh6x,4BjX,cdRF,mVAX,mWjV,gOSH,gPO9,gPcz,ce8p,ceGN,67/F,3RaN",
                    "7fa1": "pbZH,mVHh,mVZX,pcCp,mVf3,mWn1,jSYH,jS1p,gOzX,gPL1,mVNr,gP9x,ew83,cdRF,66WP,9aDV,aIkX,fhyF,c+Zj,c/vN,9Y5x,cekP,7FgF,5mB9,3QKF,9XRP,6UHh,3RG1",
                    "96c4": "jRNH,jSnh,pbWz,hzyp,cdC1,aHRN,ewnH,5m91,7F49,aIhP,5mEh,g27X,jStx,orAV,jStr,3R4x,orKb,lozF,jStr,jT69,fhvr,fi51,btmr,btY1,67zr,68fh,jSPj,67Vp",
                    "773c": "5m8X,nG11,nGmV,7EZV,7EE1,ikdX,ikzV,dLfX,dLBV,fhvr,fh+N,nH5N,nGCx,3R4x,8qi9,jStr,jSYN,fhEP,aIQh,9bdp,682N,4Cy9,9bdj,c/yV",
                    "5f79": "j4/P,pbZN,cdvH,jSaN,g1Uj,3QEp,gOYX,ikMp,jStx,orrx,orQx,ilcx,hAqF,hAD9,ewx3,ex9N,9Y2p,6UxV,5mHp,4BFV,ewDj,9XLF,7Fq1,67Yx,4Cy9",
                    "76c2": "mVib,mWgN,iloX,ike1,mVNr,fhvx,c+T9,5mij,bsWp,btOF,5naF,5mB3,btd9,btvP,5mTV,5m5P,5nn9",
                    "54b1": "8pw3,lnB9,lnTV,aIhV,aH/9,pczb,lok1,3R1j,lo4p,loFV,3RCV,gP6j,gPHV,btjj,btUV,67wj,685V",
                    6298: "jRNH,jSk9,pbTr,5mlx,3Qv1,bsGH,fhm9,3QNH,9aQp,cebx,mVNx,nHc1,gP9r,gPRh,gPyr,3Rtx",
                    "821f": "m8P3,pcgx,3QrP,6TYp,bt0F,m8CF,m9lx,67Yx,5n4p,3RdV,j5yb,gPiV,ev+H,exmh,ce5b,9b0V",
                    "7efc": "or5z,hzlV,hzEF,kD2P,bsN1,cd/1,5m8X,8pS1,orAP,m9fh,hzUb,lo1h,loJ1,hAA1,gP9r,gPEN,c+Wb,c/C1,5mxX,9XLF,c/jb,5n1h,3R7F,9Y8z,68c9",
                    5739: "6TIH,9Xw1,hzNX,hziN,8pCj,oq/p,pcpP,m9lx,kDX3,kDix,dLRx,9aQp,67q9,3QKF",
                    "94b2": "pbWz,ik7N,lnB3,lo1h,hzs3,hzO1,cdyP,ce29,hzBr,3QHx,7F49,m8Vj,m9y1,m9c3,4C99,ewW3,excV,fhvr,4BVx,4BIX,4Cy9",
                    8884: "3QHr,fh6x,gP3b,dLBV,ewhr,aIup,cdvH,fh6x,kD99,kCFV,m8IP,pbTx,lo4j,m9fh,nHc1,m9fb,dM59,7FjN,3QU1,ewDj,exj9,ewZb,9bjF,4Cy9",
                    "5d29": "oq/j,lnHp,loFV,orZV,loaz,oruF,4BgP,8pzh,ikkh,ikJh,67th,4BFV,ewbb,ewAh,aIrb,aI2h,3R1j,67FN,7FmV,ikYV,illV,5ngV,3Rtx,ewPP,excV,aJ3P,aIGV",
                    6016: "ev+H,jRX9,pbQj,3QEp,kCYz,hzKV,jSdP,jT69,orDX,hA1F,c+T9,aI8x,7Faj,ewDp,ex9N,7FIN,hAe3,4C99",
                    "5ff1": "ev+H,jRX9,pbTr,3QHx,kC/H,gP09,g2hj,kDfp,kDU1,g2W1,pcw3,il39,c/9V,8q2x,4BFV,fhRj,67Vp,4Cix,4Cv1,7FVh",
                    8822: "nG0X,nHc1,lnHj,lozF,j52X,j6e1,pcgr,lo1h,hzHN,ew1V,j5QX,g2MF,exj9,c+JH,hzHN,hAhh,c/jh,c+JN,fhcH,fhOh,674b,aI2h,aIup,7Fap,7EKh,cdUH,4BCN,3QuX,5mEh,6Uf3,3R4x,67FH,aIDN,aJ3V,7FLV,7FjN,ceub,4Cch,3R7z,4CrV,7FFz,3RJ9",
                    9053: "nG0X,jS4x,g1EH,g1Up,6TYp,4BgV,6TYj,4BSp,4Cy9,orlb,lodN,lon3,pcLN,kC/H,kDX9,kDuX,hA4N,6Uf3,hzR9,hAtN,6UTN,ewx3,ex9N,btRH,btd9,8pV3,8qxN",
                    "72ec": "ori3,ik7N,nG0X,j5iF,fhcN,7EWN,5mlx,3Qv1,aHRH,g21N,9aNb,j5yh,j6aV,ceJV,ce5h,orH3,5m+9,4BIX,6891,9bjz,4CBh",
                    9632: "3QuX,nG11,nGq1,hzyp,c+MV,aIl1,8pCp,pcmH,loqh,jSgX,jT9h,jSCP,ewMN,9aTx,3QNN,ewMH,exg1,5ngV,3Rnh",
                    5490: "8psX,mVc1,mVrF,aIbF,aHY1,fhfP,j5yh,oruF,j5yb,3Q+h,ikPr,ilvh,fhBH,btFh,orTz,67/F,4C99",
                    "4f30": "g1HP,kCSp,pbZN,kCSj,3QEp,j5lH,j6kh,pcsX,c/d1,3QX3,c+T9,c/yV,3RCV,67q3,685V",
                    "8c6a": "pcgr,mVTN,mVbX,mWn1,lnNz,lowx,ilcx,iktF,lnNF,c+u3,g1O9,g2SV,c/yV,dLsr,dMhF,aI5j,dLOp,7EKb,cebx,4Bqb,aIAF,dLLb,9XON,7FmV,6UxV,5mQN,3QX9,9XOH,c/px,aIJX,5nk1",
                    7115: "ew1P,jRX9,oq/j,bsWp,7EH9,4BdN,g1Uj,jSdV,c+Aj,8pS1,jSnb,pcpV,mVTH,mWdF,il01,btgb,ikJh,iliN,btRN,bt6P,bu2h,gPlX,9XRV,6Uox,3QNN,aIJX,6UKp,3RJ9",
                    "796d": "j52X,pbZN,mVor,mVKp,jSk9,hzKV,fh9F,c+nV,kCVr,ikD1,ikkb,g1+F,j5+j,mWjV,mVTN,il6h,g2MF,dMu9,g27X,g2Gp,cdIb,ceJV,5m8X,9Xw1,ceez,5mNF,3QX9,9X/b,5nk1",
                    "56bc": "9X6X,mVc1,mVrF,cdRF,cdC1,nGmP,os11,mVE3,kDlF,nGIH,kDy9,kDBb,mWgN,jSgX,jS/V,gPHV,gOZ1,jSh1,jSwz,gPcF,jSMb,gPsh,8q5z,5mX1,6UuH,4BJ1,fhj1,fhEV,9XRV,9Xw1,cd+X,cekV,dM53,dMu9,g2SP,5ngV,3Rqp,btC3,8qrx",
                    "7ea0": "pc0P,hzlV,ikzV,lo1b,cdC1,c+Wh,66ZX,9aQp,mVTH,aIDN,dMkN,pcLH,3RzN",
                    5777: "j4YH,j5s1,oq/j,9arp,7ExH,aIl1,mVxP,mWth,9aNb,ikJh,il39,aIN9,aIrh,mWgH,5ndN,3Rnh",
                    "89c8": "oq/j,gOJp,pc3X,gOZ1,j5Bj,pct1,m92H,m9B9,jSJ3,gPHV,8pFr,fh6x,fhUx,8qrx,c/0r,8pYh,67jV,4Btp,3Qv1,btsH,5mQN,4C2V,4CrV,7FS9",
                    "667e": "7EAP,m8jV,m8FN,8pLN,8ppV,g1HP,g21N,pcjz,m9c9,lnWX,loM9,hzXj,hAtN,c/vN,c+Zp,hzXp,5mrH,aIxx,c/cX,5mX1,3R7F,9Y5r,5nn9",
                    5415: "nGdr,nG/x,hAnx,hzBx,nGdx,3QBb,dLmh,dMkN,3RzN,5mfb,5ndN",
                    "7f8e": "pbZH,m8Sh,lodH,pcCp,lnEb,loJ1,hzBr,hAtN,ew83,exg1,aHXX,aJa9,loaz,ceeF,9XIx,7F7h,5mrN,3Qy9,9XLz,6UE9,5n1h,3RJ9",
                    7766: "5m8X,mVc1,mVuN,7EWN,7EE1,hzoX,hzHN,c+qX,c+JN,m8P3,m9rN,pcsX,hAb1,hzNX,hAA1,cd+X,g2nF,g2Gj,ceN1,aIrb,aJ3V,4BFP,4Cy9,ewSX,4C61",
                    "722c": "nGCr,mVih,c+xh,9al9,5m2N,mVuH,6U5N,mVHb,dLLh,8q2x,67IV,5n1h,5nn9,excP,mWjV,mVWV,aIGV,9XV1,9YeV,ceQ9,g2tP,g2SV,mW7j,g2Gp",
                    "8bc4": "oqRX,lnNF,hziH,hzyp,4Btp,9aH1,nGt3,nHc1,jSk3,ewJF,fhUr,jT31,cdXP,ceTh,nGS3,3Rk9",
                    "62a2": "jRQP,jSnh,pbWz,5moF,3Qy9,bsJP,ewx9,g2b3,jSwF,orE1,jSSx,g2Z9,9b3X,aIZF,g2MF,g2kx,5mKx,4BYF,4CoN,6U+1",
                    "58e4": "ik7H,ikzV,pbQj,9Xgp,8ppP,9XpN,pcmH,mW19,mVxP,mWq9,kD93,kDoN,hA4N,hzR9,kD99,kDBb,kDQV,hAwV,hAhh,kDBh,g27X,g2W1,dLI3,dMnV,bt6P,bu2h,hA1z,btpF,hAkj,btIp,btvP,67gN,9aTr,3R4x,67M1,9XUX,6UNx,4Cy9,6UNr,9bpV",
                    "886b": "pbQj,kD2V,kCFP,kDch,g1+F,cdvN,g1+z,3QKF,dLvz,9XFp,cdXP,g2hp,hz+r,orTF,btpz,illV,3R1j,7Fzp,ceQ9",
                    "4e16": "hziH,hAGh,nGaj,5mip,5nk1,orlb,9XCh,9Y2p,orNp",
                    "6b7b": "mVbX,mWn1,bsJP,hzEF,mVxV,hzEz,hzXp,btd9,7ETF,4Bk1,c+Dr,aIl1,mVWP,67IV,5mX1,5ngV,8qH9,cekP,hAwV",
                    "6c64": "nG7b,kD2V,hzs3,fh9F,4Bn3,cdUN,mVHb,mWdF,g2eh,g2W1,6UWV,5naF,4Cch,8pRX,btmx,g2x1,g2Jr,aIN9,8qbV,67zx,4BM9",
                    "5c60": "5m2H,8pw9,bsTh,nG7h,nH5N,kDNN,kCPh,hzHH,hAnx,jSwz,fhyF,fh3j,fi89,aI8r,ce29,fhL9,j6aV,3QX3,ce29,ceGN,3RzN,9aK3,9bmN,67q3,682N",
                    "536b": "mVf3,mWgN,dMhF,ceAx,btsN,mVHb,67th,66WP,68c9",
                    "4fa0": "fgPH,or5F,kCSj,3QEp,lnWX,loJ1,j5rX,fhvx,fhRj,j6aV,dLyH,dMu9,pcsX,c/9V,9aWF,6Ulp,5mB9,3QKF,c/9P,9bah,67/F,3RJ9",
                    "6b23": "5m2H,9Xdh,m8th,nGzp,gOGb,gP9x,gOYX,5my1,ewGr,jSCV,orH9,jSCP,jT69,g2PN,gPsb,btC9,7FjN,5mHp,3QU1,ceub,7FFF,3RJ9",
                    7259: "nG43,nH8V,kC/H,fh0h,fi89,mW13,5m+9,3R7F,7EDX,9XpN,ce5h,fhBN",
                    "4f9d": "fgSP,pc0V,kCVr,3QHx,orxH,m9c9,kC/H,kDX9,kDrP,g2kx,9XpN,g2kr,3R4x,8qi9,gPHP,ceuh,hAaX,ceuh,7FFF,5nn9",
                    "6c38": "pc73,m991,jS4r,jSwF,5mNF,3QX9,fgVX,fhm9,bt6V,8pFx,66WV,hA1z,cer9,9Y5x,8qxN,6V19,ewSX,illV",
                    "5cb3": "orTz,mVox,c+Dx,j5fr,j6aV,j5NP,c/9V,c+kH,c/Ih,9Xgj,4Btp,5ndN,cebr,5mKx,9YbH,3RzN",
                    "7efd": "or2r,hziN,hzEF,lnWX,bsJV,cd/1,66WP,9aK9,pcpP,mW4h,j5yb,m8Sh,m9y1,j6e1,gP6j,gPL1,gPsb,4Cch,btFb,btY1,3QQP,8q2x,ceeF,8q2r,4C99,4Cy9",
                    "63b7": "jRQP,jSdV,pbTr,5mlx,3Qy9,cdyP,g281,nGpX,kDfp,j5Ex,orE1,j5oP,j5R1,dLBP,dM59,j5Er,cebx,8pYh,5muV,cebr,7Ft9,3Rqj,nGYp,nHf9,gPBF,bt/9,8quF",
                    "684c": "pcgr,kDix,mVNr,mWn1,kCVr,kDKF,ex6F,ewhx,kCVx,hzBr,hAqF,bsJP,bt/9,c/0r,3R4x,5m8X,7EWN,btmx,9b0V,6UNx,5nn9",
                    "5d02": "j4/P,7EAV,8pOV,oq/j,8pCp,jSdP,67jV,m8P3,m9B9,orxH,ikVN,orTz,ilfF,dLI3,gP09,gPO9,dMu9,ce23,ceGN,5naF,3Rk9,3QQP,6Ulp,9aWF,fhEV",
                    2166: "nFZP,nGgF,nGmP,nGFF,nGOX,nHf9,nH8P,5ngV,5nn3,5mX1,5n1b,nGVh,nGzj,5mrN,nG49",
                    9551: "7F0X,3QEp,hzyp,hzlP,hzKV,cdvH,cd/1,ik7H,oq/p,kCM3,kD99,pcpP,mW7p,m8Sb,m9B9,loaz,il01,il6b,lozF,g2eb,ikJh,ilp1,g2W1,gPlX,ewZh,c+T3,c/F9,4BM3,67zx,8q8N,9XRV,c/d1,9XRP,9YeV,5ndN,3Rnh",
                    6448: "3QrP,5mlx,pbTx,jRQP,jSdV,bsJP,fhj1,pcmH,m9fh,ikCX,lnX1,loJ1,ilp1,j64z,ikMp,9XFp,ewDj,excV,ex0j,9Y2p,9XsP,9Yoh,3QQP,8q8N,8qoj,3RJ9",
                    "8c17": "nG7b,kD2V,gOwP,gOMx,3QHx,8pV9,lo1b,pcpV,mVQz,mWdF,jSG1,jSnh,g2eh,g2SV,jS/V,jSG1,fhEV,cebx,9Xz9,g2Db,btFh,aITp,aJ71,c/Ih,9XOH,8qrx,6Urz,3RwF",
                    "6a71": "pbQj,3QEp,jRNH,jSdV,bsGH,jS1p,hzyj,ewnN,3QKz,9Xw1,mVB1,mWth,jSnb,jSJ9,gP6j,gPm1,btz1,btjp,gP6p,9XCb,6Uox,9XUX,6UuN,5mB3,7Fwh,hAhb,hAGh,loFP,5ngV,3Rtx,dM8b,9Y8F",
                    6234: "mVf3,mVTN,pc0P,kD2V,kCCH,kD+h,ikkb,ikSF,c/3F,c+xh,ikkh,g1Rb,g2nF,ikzP,c+MV,aHXX,aIDN,8ppP,8q8N,c+Gz,8pIF,8pYb,c+Wh,6U2z,3Qv1,6Uf3,4BVx,pcw3,c/jh,7FCx,3RG1,6V4h,g2SP,6UHh,3R7F,orQr,m9uV",
                    "8c03": "oqRX,lnQN,ik7H,ikqx,67ax,9XsV,3QKz,7F49,aIrh,nGwh,nHc1,6891,4CrV,3Rtx,jStr,jSVF,g2hj,g2PN,mW13,g2A9,dLUz,dMex,9bgx,9aWF,dLUF",
                    6069: "nGaj,nH5N,dMkN,dLpp,nGap,jS7z,jSPp,m8Yr,hzXp,fhcN,ikPr,fhOh,66TH,aI5p,cebr,8qf1,aIZz,68fh,bt6P,5muV,4BJ1,4C99,8qrx",
                    "62c2": "jRNH,jSh1,cdvH,fhj1,pbQj,5mip,3Qv1,ln+3,loJ1,gPL1,gP09,ce29,ceQ9,7FS9,682N,pcmH,9aWF,3QU1,pcFr,3Rtx",
                    5404: "hzvb,pc79,m8IP,m9oF,j5R1,g2b9,cdyV,jSgX,gPcF,ex0p,c/F9,3QKz,cdRF,ceAx,3Rtx,5moz,5n7x",
                    "68cd": "j4YH,j5s1,pbQj,3QEp,aHRH,j5cp,gOJj,dLF1,nGwb,nH5N,g2PN,g2eh,nGwh,jSnb,jSYN,dLLb,3Q+h,67IV,btgb,btvV,ewZb,5n1h,4Cfp,4Cv1,6V4h,9X/b,c/C1",
                    "745a": "mV8P,mVxV,gOwP,gOSN,7EAP,9XsV,mVlj,9arp,jSdP,jSCV,oroj,ewDp,6UbX,ewu1,ewMN,8q8N,8pS1,3R7z,6UB1,btC9,nGS9,nH8V,685V,4Cix,hAe3,hAwV,ceJP,cer9",
                    "54ce": "7EAP,mV8V,mVrF,bt0F,bsJV,lnTP,loJ1,pcgr,ikPx,pcCj,il9p,gPBz,aIN9,4BzF,g2eb,aIDN,4Cy9",
                    9971: "hziH,or2x,lnEb,ln+9,hzHN,gOJj,5mip,aIl1,g27X,j5Bp,orxN,loaz,loFV,aJ3V,9bgx,6V13,4CrV,4BYF,5mKx,gP9x,gPvp,btIp,btmx",
                    "64ad": "jRNH,jSdV,bsJP,g281,3QuX,5mlx,pbTx,mVE3,pcOV,nGOX,5mX1,m8Sb,j5HF,j5+j,m9uV,ikCX,ilvh,ik/X,fhvx,cdUN,ik/X,g2Gp,c/Ih,3Q+b,c+Wh,c/yV,3RCV,9aNb,9bpV,5mEb,5ngV",
                    "507f": "g1EH,or5F,lnHj,3QEp,oreX,kDix,pcpP,j5NV,lotj,orZV,fhcH,j5lN,j6e1,fi51,g2b3,g2PN,cdUH,ceTh,btsH,4BJ1,6UQF,9bdj,4CrV",
                    "89e6": "j4/P,pbWF,mVlj,mVHh,j5lN,3QrP,8pw9,j569,j5Bp,5mHp,3QU1,fgZ3,fhsp,btjj,bsQ9,j5lH,6U5N,9XRP,jSCV,jT31,ceN1,cekV,pcFr,67Yx,4BYz,6891,9bpP,4CBh",
                    5355: "pbWz,m8Sh,kDlz,pcCp,kCSj,kDKF,c/sF,c+Ap,kCSp,hzyj,hAqF,kDir,3R4x,9X3P,9Yl9",
                    9876: "mV8P,mVB1,mVor,8pFx,5mc9,nGt3,nHf9,nGS3,j5NV,9aNb,j5yh,j67N,9bmN,g2wX,btz1,9b0V,4BFV,8qlb,4Cv1",
                    "4f10": "pc0P,g1EN,jS1j,3QEp,hzHH,j6h9,nGYj,loFV,g2SP,aIK1,6Uc1,pcmH,c/9V,6UKp,3RCV,6V4h",
                    "5f17": "lnEb,loCN,gPEN,gOJp,c+Ap,c/F9,8qE1,6UNx,pcab,9Xz9,67gN,3Qy9,pcsX,3Rh1",
                    "653b": "lnuP,lo4p,lnKr,9aux,7ExH,aIup,fhm3,pct1,kDoH,kDX9,kDNH,dMex,9X/h,7FmV,3QU1,gPcz,9XY9,6UNx,3RJ9",
                    "4ea5": "orlb,m92N,lnuP,loM9,kDfj,fh6x,fhEV,il6b,dLUF,9aoh,dMhz,8q5F,3Qv1,9b0P,4Cv1",
                    "4e92": "mVf3,mWn1,mVE3,bt3N,btFh,hzNX,hAkp,67P9,66WP,68c9",
                    "51fb": "lnEb,loCN,fgSP,fi89,orrr,5mKx,c+Aj,5mip,5naF,c/sz,3RwF",
                    "8ba5": "oqV3,lnQN,hziH,hzBx,5mip,bta1,3QKz,67q9,8p/p,btmx,mVNx,mWax,67Yx,4ClF,4Cv1,6V4h",
                    "69db": "pbQj,3QEp,bsGH,jS1p,jRNH,jSh1,hzyj,ewqV,nGwb,ewAh,pcmH,c/6N,hA7P,pcFx,kDBb,kDX9,hAkj,dMnV,4BM3,ce29,ceGN,4CoN,4BCH,4CBh,4BYz,ceeF,ceub,4Cch",
                    "6e10": "oqRX,m8zx,ikaP,g1Up,4BgP,c+Dx,lnNz,logV,pcab,ewnN,ewPV,j5Bj,4BSp,9axz,btvV,4BYz,aIN9,mW19,os11,g2A3,g30h,g2PH,3RzN",
                    "8c28": "nG43,jSaN,gOtH,gOJp,3QEp,7F11,mVxP,mWq9,pcgr,j5Ex,j64F,pcIF,gP03,gPHV,dMnV,dLI9,gP09,btd3,bt/9,8pYb,8qE1,4BFP,4CBh,j5QX,4C61",
                    "830e": "m8jP,m9B9,pc3X,j5s1,pcw3,j5U9,ikkb,ilfF,ewDp,cdC1,ewJz,c/px,btY1,9Xgj,9Y8F,9XIr,4BVx,4BgP,4Cy9",
                    "8bc0": "nG7b,kCYF,gOtH,gOJp,5mip,9aH1,kD5X,kDNN,dMkN,dLBP,dMxh,pcpP,btsN,7Fdx,3QNN,dL+P,8qlh,67/F,3RJ9",
                    "9a8f": "nFWH,nGmV,dLyN,lnB3,dLg1,dLI9,5my1,3QHx,7ExH,9XpN,pcw3,jSqp,jS/V,mWar,j6h9,ewx3,ikVN,ilcr,exj9,9XCb,c/9V,g2A9,c/9P,c/yV,9bgx,67M1,3QX9,aIDH,6UHh,5naF,3RJ9",
                    "4e8f": "mVlj,mWgN,hzlP,hAD9,hzNX,cdRF,ceGN,5n4p,3R4x",
                    6606: "oqYb,orTF,gPBF,gOGh,oqYh,kCPb,kDKF,ew83,4Bn9,7F7h,bsQ3,btgh,fhBH,5mQN,4C2V,4CrV,7FS9,aIDH,c/yV",
                    5389: "4BdH,aI2h,nG7h,nHf9,iktz,ils9,ikPr,aIup,7F49,4Bwx,dLRr,dMkN,67/F,4C99",
                    "96b6": "m8wj,m9oF,fhXF,fh3p,j4/P,j6h9,pcgr,5mKx,3QX9,c+xb,aIhV,5m5P,aIxx,cebr,8qlh,5nn9,9XUX,c/vN",
                    "6d41": "nG7b,lnNF,ikaP,fh6x,4BgP,c+GF,pcjz,m9fh,lnWX,loJ1,logP,fhj1,g2MF,j5Xb,excV,3QKz,6Uih,8p/p,c+Zp,c/9P,4C2V,c/pr,5n7x,4ClF,4Cv1,6V4h",
                    "697c": "j4YH,j5oV,pbQj,3QEp,9X0H,j5cp,gOJj,dLBV,nGt3,kDlF,pcsX,dM21,kDBb,orWN,j5v3,j6e1,dLI3,j5R1,fhUx,dMr1,aIhP,aJa9,c/9P,7F49,6UuN,5n4p,3RG1,aIZz,67P9,4BYF,3QU1",
                    7792: "66ZX,nG11,nGjN,7EWN,7EE1,ikdX,ikwN,dLyH,dLg1,m8LX,m9B9,pcmH,ikVN,pcCj,il9p,ikCX,ils9,3QX3,fhm9,fi51,5nk1,3RwF,ikYP,btsN,7Fap,btsH,9b41,ilcr,btIp,6UB1,btIj,8qxN",
                    "6c13": "oqYb,lnNF,j4YH,j5v9,j59b,8pw9,8pS1,6UAX,3R1p,nGzp,nH8V,illV,ikMp,c+Zj,c/F9,il6b,aITp,6UQF,3RG1,68fh",
                    "660e": "8pw3,mVf9,mVB1,9Xw1,9Xa9,g1O3,g281,3QTX,6Ulp,aIAF,nGFF,nH8V,5ngV,3Rqp,ikSz,illV,ceez,ceJV",
                    "78e8": "4BgP,aI2h,m8th,m9B9,pcdj,mVTN,j5fr,j5Ex,ln+3,dLI9,dLsr,j5v9,ikG3,g2kx,j5KH,j6e1,loqb,c/jh,dLRr,j5Xh,exg1,cdOr,ceQ9,5mij,8pV9,cebx,3QX3,8pV9,8qxN,3RzN,5mB3,5ndN",
                    "954a": "hziH,or2x,lnEb,lnX1,hzoX,hzO1,c+nP,c+Q1,hzyj,4Btp,9aH1,nGt3,nHf9,nH2z,dMhF,nGCr,fhvx,kDir,kDKF,ilfz,ikPx,fhiX,g2Z9,c+PX,c/9V,8q5F,3QQV,aIo3,67IV,c/cX,c/yV,7FCx,3RaN,aIN3,6UNx,3RJ9",
                    "94ae": "ik7H,or2x,lnEb,ln+9,hzs3,hzO1,c+nP,c+T9,hzBr,4Bwx,9aK9,m8Vj,m9y1,4CoN,ewAb,ex9N,m98X,4BYF,4BIX,4CBh",
                    "576f": "hziH,hzO1,oq/j,7ENp,66TH,8pS1,m8LX,m9Eh,m9ij,il39,ewJF,aIhV,il33,4C99,gPyr,bt/9,4BFP,4CBh",
                    5339: "mWjP,mVc1,5m91,5nk1,mVAX,ewu1,bt3N,9Xgp,mVTH,btsN,aIGV,aJ0N",
                    5668: "oqYb,orlh,j5yh,j59h,oqYh,orxH,orWN,j67N,j5KN,orxN,g1HP,g2Z9,il33,g2Jx,ikPr,ewDp,c+MV,bsJV,fhvr,bt/9,3QBb,bsTh,btgh,3Q+h,5mfb,5mEh,3RaH,btsN,btUV,3RCV,5mQH,5ngV",
                    "948e": "ikaP,pbWF,lnHj,lo1h,hzs3,hzR9,c+nP,c+Wh,hzBr,4Bwx,9aNh,m8Yr,nHf9,m9fb,3Rnh,ewAb,exmh",
                    "8d8b": "kCIX,kDch,pbWz,g1+F,g1HP,g2hp,g21H,67gN,cdUH,ce5h,4BdH,9Xa9,c+Ap,9Xa3,5muV,4BM9,4Cy9,ikMj,orE1,lodH,loCN,hAhh,hz+r,hAwV,7FLV,dLUz,dMnV,9XIr,9YeV",
                    "53bb": "kCPb,kDNN,pcgr,dLRx,dLcP,dMu9,c+Zp,5mfh,67/F,aIGP,3RCV",
                    "6d12": "oqV3,lnNF,ikaP,fh6x,4BjX,c+GF,nGjH,nHf9,nGFF,ewJF,cebx,aIrh,nGVb,ceuh,btIp,btUV,3QTX,ikD1,illV,3RCV,67mX,685V",
                    "4e27": "m8q3,m9uV,pcgr,ewGx,jS1j,g281,gPlX,jSSx,ew1P,exj9,ewkz,3QHx,7Fap,ewDj,9b0V,6UKp,4Cv1,9b0P,c/sF",
                    "614e": "ev+H,jRU1,pbQj,3QEp,jSaH,g281,mVxP,mWn1,jSzH,pct1,9aNb,jSnh,jSVF,9bjF,hzUb,hAqF,ewAb,ex6F,ce5b,ceDF,9aAH,9bw9,3QQP,7FgF,7Fwb,3RG1",
                    5723: "mVib,mWax,jSJ9,g2eh,ewkF,dLg1,mVrz,j5v9,g2qN,ex0p,dMu9,aI8r,aIZF,5m8X,5nn9,ewJz,5mNF",
                    6811: "j4/P,j5oV,pbTr,3QHx,aHUP,hzBx,gOMr,dLF1,ln+3,logV,gPfN,cebx,7EZV,gP03,c/3F,9b41,g2wX,c/mp,jSMb,jT9h,pcOP,5ngV,3Rqp",
                    8870: "pcab,mVTN,m8jP,m9B9,j5iz,j61x,ceAx,cdRF,j5iF,g1HP,g2Z9,66WP,ce29,aIkX,3QU1,6Uox,btpz,8qi9,67/F,4Cy9,8qi3,btOF",
                    "7d22": "m8tb,m9uV,pcjz,j5HF,fgZ3,j569,j6e1,fi51,ikPr,ewkF,ewPV,gPvj,c/0x,9Xdh,btIp,c/jb,9YbN,4BjX,8pOV,aIAz,5mNF,3QX9,9b73,4Cv1",
                    "80ce": "4BdH,7EE1,9Xa9,nG49,nGmV,5muV,3QHx,ikh3,ikzV,c+u3,c+MV,orH3,gP3h,hAA1,lowr,g30h,3R4r,c/0x,c/yV,3RCV,5mKr,5ngV",
                    "773a": "5m8X,nG11,nGjN,7EWN,7EE1,ikdX,ikwN,c+qX,c+JN,kD5X,gP9x,aIkX,ewMN,orxH,btsN,9aWF,67wp,3QNN,pczb,67Sh,4Cfp,4CrV,5nk1,7FS9,hAnr,loJ1,ewZb,btY1",
                    "5ead": "pcdj,m92N,m9xX,m8th,aI2h,7EH9,4BgV,hzEz,hzXp,cdRF,ce8p,9aNh,67n1,3QEp,9Xmz,4BSp,4Cy9,hA1z,iliN,dLRr,dMr1,8q5z,8qAV,hAhb,8qlh",
                    6789: "jRNH,jSk9,pbTr,3QHx,aHRH,fh0h,jS4x,gOMr,dLI9,nGt3,nHf9,fi4X,fhph,67mX,68fh,nGS3,67P9",
                    "8fdd": "mVf3,j5iF,g1EH,g1Up,6TYp,5m5V,6TYj,4BPh,4Cy9,kD2P,kDU1,gOYX,gPEN,c+JH,c/yV,9bmN,7Fwh,orAP,67IV",
                    "897f": "nFZP,nHf9,nGwb,g2eh,dLI9,bt6V,9Xjx,nGLP,cekV,btz1,btLx,3Qy3,hzs9,hAwV,3RCV,6713,685V",
                    "819d": "4BgP,9al9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,c+u3,c+MV,m8LX,m9y1,pcsX,hAb1,hzR3,m991,ilp1,c+PX,hAb1,fhUx,dMu9,ce5b,9XON,67q3,9XV1,ewSX,5mX1,3R7F,c/vH,9XY9,7FIN,5nn9",
                    "524a": "nG0X,jS4x,pc0P,hzKV,jSnb,nGIN,3Qy3,hzs9,hA1F,5mNF,3QX9,dLj3,dLUF,9Xa3,9XLF,loqb,9X/h,orZP,5ngV,3Rtx",
                    5578: "9X6X,mVc1,mVrF,cdRF,cdC1,mVAX,mWgN,gPEN,gOZ1,jSaH,jT69,ewx3,8pS1,3QEp,8pYb,c/3F,pcpP,3RdV,c/g3,9bgx,excP,3RCV",
                    "7eea": "or2r,hzlV,hzHN,kD5X,bsN1,cd/1,4BgP,7F11,lo4j,lozF,gOYX,gPRh,pcsX,gPm1,9XvX,c/3F,gPsh,mWjV,3R7z,c/3F,c/vN,3RzN,9aWz,9bmN,67Cz,682N",
                    9774: "m8gH,m8Vp,pbNb,j59h,j5s1,pc41,g1O3,g2b9,ce29,cdF9,g1O9,9abH,9aQp,j5iz,3QKF,fhpb,orE1,j5KH,3RaN,pcCj,5n4p,4Cix,4Cv1,7FVh,aIGP,ex3x,kDU1",
                    "75d2": "jRQP,gOGh,cdvH,fh6x,3QrP,8pCp,9Xjx,m8zx,m9B9,pcdj,mVWV,kDcb,hA1F,gPlX,kDHx,gOVP,gPL1,c/yP,c+Q1,8pLH,8qH9,gPiP,3RdV",
                    "8c23": "oqYb,lnQN,hziH,hzBx,4Btp,8pOV,mVE3,orZV,kD5X,ikPx,lodH,il39,hAnr,loJ1,dLEX,hA1F,fhsj,fi1V,bt3H,bt/9,fhHX,5mX1,9XCb,4BPh,685V,9bpP,3RCV",
                    "541f": "8psX,m8n1,m8IV,aIhV,aHY1,g2b3,ikSF,kDrV,orH9,lotp,j64F,g2Z9,hAaX,dMbp,ce8j,ceJV,3RdV",
                    "9e70": "pcgr,nGLV,nHbX,nG7h,aI2h,7EH9,4BdN,iknj,m8M1,jSaH,dLyN,ikCX,m8Yx,kDfj,ewDp,mVZX,loqh,kDfj,kDQV,ikMj,illV,gP6j,gPHV,ewDj,exg1,kDy3,ewW9,ewDj,c+T9,btjj,9XON,9b73,aIWx,c/px,c+MV,8pOV,8qAV,5ngV,3Rqp,5mlr,5n4p",
                    "55bb": "8psX,m8n1,m8CF,aIbF,aHY1,hzKP,kDix,orAV,kDEp,hAD9,ikJb,ilfF,3QTX,fhj1,fhEV,5mTV,3R4x,8qbP,8pS1,cd+X,cekV,fhRj,7Fzp,g2SP,685V,3Rqp",
                    "8c6b": "mV8P,mVB1,iknp,jRTX,gOMx,g1EH,g281,c+JN,g1Uj,5mip,3Qy9,jSk3,pcpV,mVQz,mWdF,jSJ9,jSqj,jS/V,fi1V,fhsp,jSqp,jSJ3,fhI1,c/3F,aIl1,dLXH,9X/h,5n4p,3RaN,7F0X,ceo1,4BIX,6UrF,9XY9,dMnP,aIQh,btLr,7FLV,5nqh",
                    "618e": "ew1P,jRX9,pbQj,3QEp,kCYz,gOZ1,pcdj,m95V,m9ip,pcLN,m8Sb,m9y1,fi51,fhph,m8Sh,jStr,hA7V,m9c3,fhL9,hAkj,jSYN,3R1j,ce8p,ceJV,3RCV,9aQj,9bpV,5ngP,5mHp",
                    "69a8": "jRNH,jSdV,pbQj,3QEp,bsGH,jS1p,hzyj,ewqV,pcmH,mW19,ikCX,m8M1,m9y1,ilp1,gP03,jSzN,kDBb,gPHV,bt9X,hA7V,ewJz,exg1,ewPP,3RdV,btvP,btUV,7FmP,7FP1",
                    "5f81": "j52X,pbZN,cdyP,j5oV,fh3j,3QEp,mVAX,mWq9,g2hj,5mHp,mW13,5m+9,fhL3,fi51,5mrH,5nqh",
                    "829d": "m8jP,m9B9,pc0P,ikzV,pcw3,il39,j5Bj,gPfN,fh0b,fhXF,7EZV,6T/x,4Bn9,7EZP,4BM9,4Cy9",
                    "4e3b": "pc73,loaF,jRTX,jS/V,c+Aj,c/sF,5m5P,5nn9,jStr,5mKx",
                    6293: "jRQP,jSnh,pbWz,5moF,3Qy9,cdyP,g2b9,4BCH,8pYh,aIup,m8Vp,nH8V,m98X,4C61,mWar,c/sF,7FLV,5nn9",
                    "4f5c": "ew1P,jS4x,orbV,jS4r,3QHx,g2eb,jSwF,pct1,jSwz,jT9h,jSCP,3RdV,ewPP,exg1,9XRP,9Yl9",
                    6893: "3QHr,pbTx,j5v3,j4/V,bsJP,j5fx,ikqr,dLF1,pcsX,mW7p,m8Vj,m9y1,hAaX,kDlF,kDNH,g2Dh,3Rnh,aIuj,aJ71,g30b,g2eh",
                    "99a5": "nGwb,mVc1,j4/P,j5Bp,mVrz,dLvF,c+kH,g1Rh,j5iF,g281,dLOp,c+u3,5mc9,5mB9,c+T9,c+u9,9al3,9aK9,pcsX,mVTN,jSnh,mVTH,mWq9,jSzH,jS/V,dMnV,dLXN,jSzN,gPfH,gPHV,dM1X,9aQp,3R1j,5mTV,7Fzp,btY1,btsN,aIDH,7Fwh,3RJ9",
                    "916f": "3QrP,jRQV,jStx,3R4x,67zr,66WV,9X3P,9XIx,dLRr,dLI9,fhj1,nGq1,nGaj,fh3p,dLmh,cdC1,nFWH,nGCx,pcmH,hA4N,gPiV,gPL1,j6kh,mWmX,kDoN,9b0P,9bt1,4CuX,4C2V,3RdP,dL+V,dMr1,3RG1",
                    "8d25": "4BdH,8pCp,c+GF,iktF,9XpH,6Ulp,9X6X,mVc1,mVHh,aIrh,g2kr,ikVN,orH9,j5NP,j6kh,j67H,dMhF,8qlh,67IV,3QX9,fhEP,9bah,5ngV,4Cy9",
                    "907f": "nG0X,kCVx,g1EH,g1Up,7ENp,5m5V,7ENj,4BJ1,4Cy9,aI8r,ewqV,nGmV,nGFF,ikSF,ikzV,6UbX,ewu1,ewJF,9aWF,9aH1,pczb,m9lx,m92H,m9y1,kDrP,hAhh,jSYH,g2Gp,67Vp,g2qH,g2Z9,btvP,bt/9",
                    "66f9": "nFZP,nHf9,kCPb,kDNN,ex9N,ewbh,kCPh,hzvb,hAtN,pc3X,ewu1,ewPP,pcpV,3QHr,cdOx,ceDF,3RwF,8pFr,8quF,5naz,5mlx",
                    "803b": "6TLP,9aTx,mV8P,mVNx,mVib,7EKh,mVE3,3QX9,hzvb,hzR9,c+T9,c+xh,j5KH,5mQN,5n4j,orNp,hAkj,hAD9,5mHj,5nqh",
                    "7a9c": "pcdj,mVTN,j563,m8q9,m9y1,j6e1,gOGb,kD99,kDuX,gPL1,hzEz,hAqF,dMhF,dLvF,hzEF,677j,aI5p,aJ0N,682N,6TYj,6UTN,j5Hz,3R7F",
                    "5f1f": "or5z,lo1h,kDlz,pcFx,kCM3,kDNN,g2PN,g1Rh,bsTh,btY1,6UWV,5n4p,kDlz,3R7F,btjj,7EWN,4Bk1",
                    "76fe": "5m2H,9Xa9,ewep,mVlp,os11,mVWP,g2nF,j5fr,j6h9,3QQP,g24V,g2PN,3RzN,c+MP,c/vN,9YbH,9XsV,67jP,682N",
                    "594b": "kCFP,kDX9,pcgr,j5s1,g1Xx,dLcV,kDlz,gPvp,dMu9,3QEj,ewep,ex6F,3RwF,9Xgj,9Y8F,5mij,5naF,ewGr,5mKx",
                    6760: "j4YH,j5yh,pbTr,3QHx,aHRH,j5fx,hzBr,dLI9,m8Sb,m9y1,67mX,68fh,m9c3,67P9",
                    "7ba1": "kCIX,pbWF,mVlj,mVNx,mVor,kD2V,lodH,pczh,mVZX,mWq9,mW13,jSVF,lo4j,ikVN,ew83,ikh9,illV,excV,3QKz,g1+F,g2Gp,cexp,cdRF,9Xmz,9Y8F,3RwF,67dz,67/F",
                    "5f88": "j4/P,m8wp,pbZN,c+nP,gOMx,kD61,gOMr,3QHx,7FpX,3Q+h,nGwh,nH5N,ex9N,ewAh,j5yb,j67N,ewPP,9bah,67/F,3RJ9,9bdj,c/C1",
                    5349: "lnB3,loFV,pcgr,g2kx,c+nP,c/F9,ikzP,9XpN,67ax,3Qy9,il6b,3Rnh",
                    "67b6": "m8mX,m8Yx,gP6p,fhfV,pbZH,ikqx,ew51,mVZX,mWjV,gPHV,gPm1,mV+1,cdyP,ceQ9,fhvr,3R4x,5m8X,8pOV,cebx,cebr,8qi9,5nk1",
                    6770: "kCIX,kDU1,pcgr,aIxx,cdyP,ewhx,ikG9,kDix,kDlz,g2A9,dMex,btY1,3QrP,9Xjx,9aGX,4BM9,9aZH,4C2V,9Y2j,4Cv1",
                    "62d2": "jRNH,jSnh,pbTr,5mlx,3Qv1,bsJP,fhm9,nHf3,nGCx,5mKx,5nqh,ikPr,illV,btUV,btmx",
                    "5bc7": "pcab,mVTN,ikh3,m8q9,m9uV,illV,iknj,ikMp,dLj3,dLOp,3QrP,6TYp,8pFx,dLvF,dLEX,5my1,4BM9,4CrV,6V19,jSJ3,dM59,hAe3,hAtN,dLUz,dMkN,9bah,67zx,ceez,9X/h,6UTN",
                    5121: "g1HP,pbZN,kCSj,3QEp,nGt3,nH5N,gPEN,gP09,nGt9,jSk3,jSYN,nGLP,gPiV,3QNH,ewnN,ewJF,3R7F,9XpH,9XLF,ewAb,5mEh,5mrH,5mNF,3Rk3,ewW9,exg1,3RG1,9XY3,9Yi1,ex6z,5naF,5m+3,5nk1",
                    "6dcb": "oqV3,lnNF,ikaP,g1Up,4BgP,cdOx,j5oP,j5NV,pcdj,3R1p,9axz,j5Bp,hzXj,dL+V,j5QX,j6h9,pcFr,3Rtx,8q5z,c/g9,j61x,gPyr,btUV,8qKh",
                    "841d": "mV8P,mWq9,pc73,kD99,pcw3,kDy9,j5cj,j6aV,excV,ewep,j5cp,j5v3,ewx9,j5QX,ewT1,9al3,bta1,dLOp,bt9X,btRN,67CF,4BJ1,3Qy9,9aK3,6UrF",
                    "5bc6": "pcab,mVTN,ikh3,m8q9,m9uV,illV,ew83,iktF,kDfj,ikVN,j5oP,dLBV,c+Q1,ce29,ceuh,fhUx,bsMX,fhvx,jSMh,j64z,dMu9,9Xjr,4Bwx,4CoN,btpz,4BYF,btRH,3RzN",
                    "80fd": "pbZH,ikaV,j5yh,m8LX,hz+x,3Qy3,g1O9,g2eh,5mEh,3QQV,c+u3,c+Wh,aH/3,aIrh,orxH,gPfN,g2tV,g2PN,j6h9,jSzH,mWgN,ewMH,5mQN,4C2V,4CrV,6V4h,9aZH,ceJV",
                    "8dd1": "mVf3,mVE9,gP09,gOD9,mVf9,gOPz,67dF,dLj3,5mc9,4BgP,6Uih,cdRz,ce5h,hzUb,orAV,lodH,loFV,aJ3V,9bgx,cebr,cexp,hAkp,hz+x,5mKx,4BYF,4CrV,6V19",
                    6816: "jRNH,jSh1,pbQj,3QEp,bsGH,iknp,hzyj,ewqV,mVxP,mWq9,mVTH,dLXN,btpF,9XCh,mW4b,btFh,aITp,aJ3V,3QX3,hzR9,hAwV,3RCV,67q3,685V",
                    "64d2": "kCFP,kD2V,pbQj,5mip,3Qv1,cdyP,g24V,ikwH,pct1,ils9,m92H,j5U9,j5yb,j67N,il9j,ewGx,ikPr,ex0p,hzR3,dLI9,dMkN,hAtN,3QTX,aIl1,aJ3V,5ngV,3Rtx,c/cX,6Ulp,7Fzp,9bab,67/F",
                    "6eb6": "nG43,lnQN,ikaP,fh6x,4BgP,cdRF,pcjz,mW19,ikCX,lnX1,loFV,illV,fhiX,j5HF,j5Xb,g2SV,aIhP,gPm1,g2tP,bt/9,3Q+b,aIrh,aIZF,3RwF,5mEb,5naF",
                    "7ecd": "or2r,hzlV,hzHN,kD5X,bsN1,c+T9,66ZX,8pV9,nGzj,nH8V,gPHV,fhRp,fhm3,gP9x,jSCV,nGP1,3R4r,cebx,ceJV,3RCV,5mKr,5ngV",
                    "53d7": "nGaj,orZV,lnKr,ikzV,lo7r,j5KN,il6b,m9rN,dLj3,hzs9,hAA1,dMr1,dLyH,dMbp,btz1,8q2x,67n1,3Qv1,dLBP,9aQp,7FjN,5n4p,3RG1",
                    5851: "oqV3,m8zx,kCFP,kDix,kD2P,orlh,ikh3,ew89,ewDp,ikMj,c+Zp,kC/H,ewnN,bsWp,9ai1,btmr,dLXN,fhEV,mVWV,mWgN,ceGN,aIWx,j5NP,j67N,fhEP,fh+N,8pCj,8quF,4BjX,4Cv1,aIxr,4BVx",
                    "8a8a": "or2r,m8M1,m98X,orNp,lnEb,loFV,ikaP,ils9,orrr,kDch,g24V,ewhx,cdyV,ik/X,fhRp,dMkN,c/F9,hzXj,fhyF,fhcH,fhOh,c+Dr,c/px,aI8r,aIWx,3QHr,8pFx,8qrx,3Rtx,4Bwr,4Cix",
                    "86d9": "aHXX,jRU1,jSk9,c+T9,c+r1,or5z,7ETF,66WP,8pV9,9XvX,7Fap,kDir,kDU1,fhsj,fi89,orKb,fhOh,9XIr,9Yi1,4BM3,4Cy9,c/jb,4Cch",
                    "8bec": "oqRX,kCYF,hziH,hzyp,4Bqh,9aDV,nGmP,nHc1,nGLP,5mTV,jSqj,bt6V,fhm3,ceeF,j64z,btC9,fhUr,btY1,5mrH,5nn9",
                    "5baa": "pcdj,m92N,ikh3,m8q9,m9y1,ilp1,ewbb,j5oV,gOPz,gPyx,jSwz,ceeF,cdBX,ceN1,3QuX,5moF,7F11,ce5h,cekP,4C2V,3Rh1,3RCV,7FS9",
                    "718a": "pbZH,kCJ1,lo4p,nGt3,jSwF,9Xdb,ikkh,ikJh,btgh,9XsV,g1Rb,g2eh,dLmb,dLLh,pcpP,jSCV,j5R1,j67N,kDU1,logP,nH5N,hA7P,btvV,aIK1,aJ0N,c/C1,ewPP,g2SV,4BgP,8pCp,8pRX,3Q+h,8q8H,4C99,9bgr,4Cv1",
                    "884d": "j4/P,pbWF,cdyP,j5lN,g1Uj,3QEp,nGt3,lodN,ikCX,fhyF,6UbX,cehN,mW13,mWn1,gPlX,gPRh,gPBz,5naF,3Rnh",
                    "81c6": "4BgP,9Xa9,mVf9,mVuN,5mrN,3QEp,c+JH,c+u9,hzs3,hzHN,pcpP,mW4h,m8P3,m9y1,m8Yr,j5NV,j5Xb,m9oF,j5rX,j6h9,gP6j,gPEN,btRN,btjp,gP6p,dLOj,dMkN,4BIX,9aQp,9aWz,5mNF,4B/N,4Cix,67/F,9XUX,7Fzp,9bmH,68c9",
                    6986: "jRNH,jSdV,pbQj,3QEp,aHRH,jS1p,hzvb,ewqV,hzKP,kDix,orAV,m9fh,jSYN,ils9,ikMj,ilfF,3QX3,g2b9,g2tV,5mTV,3R7F,ce23,cekV,8pV3,8qbV,g2Gj,7Fzp,gPHP,5ngV,3Rtx",
                    6512: "jRQP,jSaN,pbQj,5mip,3Qv1,c+nP,gOSN,lnTP,ori9,m8LX,m95V,pcdj,jSqp,jSdP,jSCV,jSnb,g2b9,ewqV,jStr,ewGx,gPiV,lojX,orKh,m9c3,m9y1,pcFr,jSSx,jSFX,jT69,jSPj,g2Dh,ewT1,jSVz,g2MF,fh+N,fi51,gPRh,6Uib,c+Wh,c/vN,6UTN,btyX,6UuN,5mKx,3QU1,7Fwb,3RG1",
                    "54f2": "m8jP,m8Vp,pbZH,dLyN,cdF9,gOwP,j5yh,ce5b,gPcF,nGFF,orZV,j5Hz,j6e1,j61r,ceAx,3QEj,aI5p,aIZF,3RwF,5mij,5naF",
                    5468: "4BgP,8pzh,9Xgp,oq/p,orZV,5ngV,3Rqp,jSaH,jSPp,g1+z,g2Jx,mVQz,g2nF,cd+X,cer9,8qi9,8pS1,cd/1",
                    "603b": "or2r,lo1h,kDoH,orNp,jS1j,jSVF,dMhF,dLpp,jS1p,5m8X,aI5p,aIhP,5muV,4BJ1,4C99,5n1h,7Fzp,ce8j,9b0V,aIZz,68fh",
                    "50b2": "3QBb,j59h,fgPH,j59h,pbWF,m8Cz,m991,ikYP,ikwN,ewkz,ewT1,pcdj,ewDp,ewx3,8pS1,5mlx,btd3,btsN,6UrF,5mEh,pcCj,g2tV,j5Xb,j6kh,j6aP,btOF,6UHh,3R7F,g2Db,9Y5x,4Cy9",
                    "7ef7": "or5z,hzlV,hzEF,jSdP,bsJV,c+MV,66WP,9aDV,3QKz,7F11,9Xz9,nGt9,nGIN,67FN,4BSp,ikG3,ikVN,c/6H,c+T9,3RdP,8qlh,nGVh,nHc1,5nk1,3RwF,il6b,ilp1,c/BX,c/jh",
                    "64e6": "3QrP,5mip,pbQp,jRNH,jSaN,bsGH,gOSN,pcmH,mW4h,j5rX,mVB1,mWn1,j6e1,ewkz,kDfp,j5yb,j5NV,g2nF,dLOp,aIbF,hzUb,g2kx,fhiX,dLLh,fhUr,j6aV,j5U9,g2Gp,dMhF,bt/9,c+Zj,c/sF,9XsP,9Yi1,4BCH,8p/p,9XUX,5mX1,3R7F,8qoj,4Cv1",
                    "6c89": "oqV3,m8FN,j4/P,g1Xx,cdRz,4BgV,j5rX,mVB1,mWjV,j6aV,4Bzz,6Uf9,aIup,hzXp,hAkp,67Vp,5naF,5nk1,6V19",
                    6233: "nFZP,nGgF,hzEF,m8mX,kCSp,hzlP,jS4x,nGmP,nGCx,hz+x,m8IP,kD99,ikzP,jSqp,aHRH,ewbh,gOMx,ewbb,3QBh,gOVP,fhm9,ewbb,ewJF,bsTb,btpF,9aWz,9aoh,674h,67CF,ewtX,67n1,gPcz,hAA1,mWar,jS/V,pcw3,btFh,67/F,3RG1,68c9,3R4r,6UE9,9Y5x,excV",
                    "76d7": "nG7b,kC/N,ew4X,hzKV,j5rX,oruF,kDcb,kDQV,hAqF,kDuX,gPfN,ewDp,c+MV,ikYP,g2Dh,ex3x,c/C1,4Btj,aI5p,aIZF,4ClF,aIo3,4BM9,aIGP,4C2V,4BgP,4Cy9",
                    "8bfb": "oqV3,kC/N,hziH,hzyp,5mip,8pOV,mVAX,mWq9,pcw3,j5U9,j5oP,j6h9,fh+N,hzXj,ewPV,ewx3,btsN,aIhP,aJdh,hAhb,aIN9,6UrF,3QU1,9bab,4CBh",
                    "59a8": "or2r,cdC1,7F49,j4YH,j5s1,c+MV,9axF,4BgV,orAP,lotp,jSnb,jT69,jSFX,c/9V,9aZN,3QU1,fhHX,fi1V,685V,3Rqp",
                    5676: "8psX,m8n1,m8FN,aIeN,aHY1,m8IP,m9B9,pcjz,kDlF,kDEj,pcCp,jSnb,jSYN,ex9N,ewAh,jSnh,hzUb,hAtN,9aAH,ce5h,ewGx,ce5b,ceN1,5ngV,3Rqp,cenX,7Fdx,9XUX,7FCx,9Xz3,5mB9,5n4p",
                    "6cbd": "nG43,lnNF,ikaP,g1Up,5m8X,c+JN,jSdP,jT9h,pcsX,c/d1,3Q+b,c+Wh,c/yV,3RCV,67tb,685V",
                    "6beb": "pcdj,mVTN,mVbX,mWn1,lnNz,lowx,ilcx,iktF,lnNF,cdF3,g1O9,g2SV,ceJV,c+Dr,ewZh,9Xgj,btLx,7EH3,8quF,c+Zj,5mHp,4BVx,4CoN,7FP1",
                    "6da3": "4BgP,cdOx,ikaP,fh3p,oqV3,lnQN,j5rX,orxN,m8Yr,m9oF,il01,btd3,ikG9,iliN,btRN,bt3H,bu2h,g2tP,9XON,7Fdx,3QKF,aIGP,7Fwh,3RG1",
                    5242: "pbZH,m8Sh,lnxX,lok1,loaz,hzR9,fh9F,c+nV,j5fr,gOZ1,dM21,c+Gz,8pIF,3Qy9,c/0r,4BVx,loqb,9X/h,pcOP,5ngV,3Rtx",
                    6405: "pbTr,5mlx,3Qv1,j4/P,j5oV,bsJP,fhfV,ori3,lo7x,pcmH,m9c9,jSMb,orWN,g27X,jSh1,jT31,g2W1,9aQj,g2hp,g2MF,9bjF,dM1X,9b0V,67zx,3QQV,9XY3,5m+9,4Cch,4CrV,7FS9",
                    7396: "m8gH,m8Sh,g1HP,g2b9,6TIH,9XCh,m8zr,8pFx,ewAb,pct1,kDoH,kDKF,fhOh,9XRV,7FgF,3QU1,ewZb,9bjF,4Cy9",
                    "82db": "m8jP,m9B9,pc3X,j5s1,pcw3,j5U9,hziH,hAGh,8pFr,ewhx,ewJF,9aWF,9aux,hAnr,5n7x,3RdV",
                    "61d2": "ew1P,jRX9,pbQj,3QEp,kCVr,ikwN,lnQH,logV,pcab,3Q+h,hzKP,hA4N,c/6N,c+MV,hzKV,c+Wb,8pOV,6T/x,btgb,8q8N,j5NP,m9fh,orNp,m9fb,m9uV,ilcx,8qi3,il39,ilp1,8qE1,fhXz,9bgx,67Sh,3R7F,7FFz,3RJ9",
                    "4eae": "pcdj,mVWV,m8mX,m9y1,jS7z,jSSx,g2Jx,g1+F,jS7F,aH/3,dLj9,dMnV,aJ3V,3QuX,4Bwx,67jV,7F11,aIl1,aIK1,5mX1,4C99,4CrV,6V19",
                    "94dd": "ik7H,pbWF,lnHj,lo4p,hzs3,hzR9,cdyP,ce5h,hzBr,4Bwx,7F49,mVQz,mWgN,gPEN,gPcF,mVQF,3R4r,c/0x,c/C1,3RG1,5mKr,5nk1",
                    6627: "6TOX,m8n1,m8IV,9aDV,9ai1,g1KX,g24V,kD93,kDNN,fhiX,fi89,pcsX,3Rh1,5mrH,9aQp,fhI1,9Y5x,7FLV,68c9",
                    7267: "g1HP,mVih,j563,j5Bp,pbZH,3QNN,aHRH,dLOp,fhsj,pct1,jSzH,jT69,jSVz,cexp,9b79,6UuN,3QU1,fhyz,aIK1,7Fzp,3RJ9",
                    "5e15": "8psX,kCJ1,kD99,9Xz9,8pLN,pbTr,3QHx,kDuX,pcCp,3R7z,kDlF,kDU1,3RG1,dLUz,dMr1,67Cz,6891",
                    "5c4f": "66TH,cdIh,oqYh,orWN,kDNN,kCPh,j5oP,g2kx,j61r,fhI1,fh9z,fi51,aI8r,aJdh,fhpb,9XCh,7F49,3QHx,fhOb,3Rnh",
                    "6a47": "jRQP,jSdV,pbQj,3QEp,aHRH,ew89,jS1p,iknj,fhcN,mVAX,orWN,kD93,m9rN,ikCX,jS/V,nGIH,hA4N,gPiV,gPHV,ils9,fhyz,dLyN,bt3H,btsN,8pIz,9XON,ewAb,4BPh,6UxV,dL+P,fi51,btvP,ceN1,8qbP,9Yl9,ex0j,5n4p,4Cix,4Cv1,6V4h",
                    6518: "jRNH,jSdV,pbQj,5mip,3QrV,cdyP,g24V,pcpP,nGVh,mVxP,mWq9,ln+3,lodN,ikVN,ikG9,ln+9,loqb,loFV,illV,il6h,loqh,g27X,g2W1,dMnP,dLI9,bt6P,bt/9,ikSz,btpF,il9j,btIp,btvP,8q2x,67gN,8q2r,3R4x,67M1,9b73,4CBh,7FFz,9YeV",
                    "95ea": "3QBb,kCPh,pbTr,lnX1,mVKj,mWjV,5ngV,3Rtx,9aAH,ce5h,fhvx,j5HF,fhvr,c/d1,9Y5x",
                    "67ff": "jRQP,jSk9,pbWz,3QKF,bsJP,jS7F,hzEz,dLI9,pcpP,m9ip,lo1b,loPh,6Ulj,gP6p,gPL1,8qE1,6UQF,loqb,3Rnh",
                    8086: "nGwb,nG7h,c+xh,jR+b,jSk9,g1Rb,g2b9,c+kH,c+Zp,c+Dr,5m91,8pV9,aIhP,67wp,m8Vj,m9uV,fi1V,fhsp,ikJb,ilvh,cebr,ceN1,8p/j,8qH9,pcw3,3Rk9",
                    5858: "j4YH,j5lN,pbNb,aI2h,9abH,bt3N,pcpP,mW4h,mWmX,mVE9,dLI9,9Xw1,7EZV,4Bwx,j5Bj,j67N,dMkN,dLOp,gP03,gPRh,m9c3,aIN9,3R1j,aIup,aJ3V,3RCV,5mHj,5ngV",
                    "571f": "gOGb,gPEN,nGCr,5mKx,5m5P,5nn9",
                    "761f": "jRQP,gOGh,cdvH,ewep,4BgP,7EKh,bsWp,m8wp,m9B9,pcgr,mVWV,j5rX,j64F,dMhF,dLF1,j5s1,gOYX,gPBF,4CoH,aJ0N,aIhV,4BFV,4BVr,aIxx,4C93,aIN9,4Bwr,4Cy9",
                    "72ed": "hzlP,nGmV,oqRX,ikwN,gOVV,7EZV,67gN,3QBh,9X3P,g21N,ln+3,loJ1,ikJb,fhyF,fhUr,j6aV,dLI3,dMu9,pcsX,ceo1,8q8N,67wp,3QQV,cenX,8qop,682N,4Cy9",
                    "8f9b": "pc73,m92N,lnEb,loFV,jS7z,g2b9,fhyz,jSPp,fgSP,fi89,9X6X,9Yi1,fhvr,3R4x",
                    "869c": "bsMX,kCJ1,kD61,dLF1,dLg1,pbTr,8pFx,7EAP,9aK9,bt9X,7F7h,nGzj,nHf9,logP,fhsp,fi89,4BIX,7FgF,aIK1,fhRp,nH2z,67/F,3Rk9",
                    "4f0a": "fgPH,pbWF,kCSj,3QEp,mVAX,mWgN,9YbN,gOPz,gPRh,cdXP,ceGN,mVQz,dLRx,8pYh,3QKF",
                    "607f": "nG43,nH2F,kDlF,m8P3,jSwF,bsWj,jS1p,jSVF,c/sF,btC9,gOJj,gPBF,ex6z,ewep,jStr,cebx,5m5P,9ai1,9XsP,5muV,4BJ1,4C99,6UKp,aIuj,8qbV,9Y5r,68c9",
                    "7ca4": "pcdj,nGt9,nGaj,nH2F,dMhF,dLpp,nGap,m8FH,jSk9,jSCP,m9fh,j5iz,j5+p,m8Yr,fhvx,fh9z,j5Ex,g2Dh,bsJP,bt/9,bt6P,8pFx,8quF,5n7x,4Cfp,3RaN",
                    "6a1f": "jRNH,jSh1,pbTr,3QHx,aHRH,jS4x,gOMr,ewu1,pcpP,mW7p,m8Sb,m9y1,kDlz,il01,il9j,kDKF,ikG3,ilvh,g2hj,g2SV,9YeV,9XFp,g2hp,c+Zj,c/yV,7F0X,7FVh,9XY3,3Rk9",
                    "81f3": "mVbX,mWn1,mVKj,g1Up,gPvp,kDuX,fh+N,bsWj,btRN,5m5P,5nn9,g2kr,5mKx",
                    7422: "mV5H,mVB1,g1HP,g24V,mVlj,9arp,7EAP,aIl1,nGt3,nHc1,nGS3,j5HF,gOZ1,j5Hz,gPm1,dM8h,7Fzp,67Sh,5m+9,3R4x,bt6P,gPiV,7F0X,dM8h,fhpb,8qbV,ewZb,j6aV,fhUr,aJ0N,7FS9",
                    6787: "3QEj,pbQp,jRNH,jSh1,jS1j,aHRN,hzyj,dLF1,hAe3,hzXp,nGzj,4BSp,67IV,6V4b,4Cv1,4Cfp,5n1h,orKh,g2Db,j6h9",
                    2167: "nGzj,5mrN,nG49,nFZP,nGgF,nGmP,nGFF,nHf9,nH8P,5ngV,5nn3,5mNF,5n4j,nGYp,nGLP,5mTV",
                    "508d": "3QEj,kCSp,ev+N,or5F,pcmH,mW19,loIX,lnTV,kDir,hA7V,hAhb,kDKF,ewtX,hzO1,hAA1,exg1,g2tP,dM8h,cdXP,ceTh,cehH,9aWF,6Uox,3QU1,9aWz,9bpV,5ngV,3Rnh",
                    5175: "pcIz,nGgF,cdRF,iktz,illV,ik/X,ceo1,cdvH,ceTh,3QuX,67ax,7EWN,aIo9,aIGP,7FCx,5nk1",
                    "7f20": "oq/j,hziN,hzBx,kD2P,aHUV,bt6V,66TH,8pS1,3QKz,8pV9,m8P9,m9B9,pcpP,m9ip,j5Hz,j6e1,ceN1,ceeF,j5HF,g2nz,g2W1,8q2r,8qH9,4BSj,4CBh,j5+j,4Cfp",
                    "53a8": "5m2H,cdF9,nG49,nHf9,jS1j,jSzN,g1+z,g2nF,ceeF,cdRF,g1+F,9Xmz,6Uc1,aIAz,6Uih,5mij,6UxV,hA7P,hAGh,dM1X,aITp,m9oz,5naF,3Rnh",
                    "5e26": "m8jP,m9B9,pbZH,ikwN,pcgr,ikPx,il9j,pcCp,c+qX,hzp1,hAA1,c/C1,67ar,dLsx,dMhF,6UQF,5m+9,g2kr,3R4x",
                    "8dcc": "nG0X,nGq1,hzO1,hzp1,nG11,hzBr,6T/x,dLsr,dLI9,ew83,5mc9,4BdH,9aNh,gP3b,mVTN,j5Er,j6e1,dLLb,dMu9,pczb,c/g9,7FjN,5mKr,3QU1,c/g3,9bdp,6UQF,3RJ9",
                    "800c": "nFZP,nHf9,nGCr,ikD1,4Bn3,ikh9,illV,685V,4Cch,ikG3,67q9,ikYP,67IV",
                    "8f90": "lnrH,lo1h,pbWz,ew1V,fhm9,j5iz,3QKF,8pmH,aIo9,nGwb,nHih,kDir,kDQV,gPHV,gP9x,kDix,3R1j,dLOp,dMr1,3RG1,9XFj,9Yi1,67wj,6891,dM8b,67Sh",
                    "7ed9": "or5z,hzlV,hzHN,kD93,bsN1,ce29,66WP,7F7h,orH3,jSzN,fhm9,nGS3,jSSx,hAtN,fi89,g2kr,g2PN,3R4r,cebx,ceGN,3RzN,5mKr,5ndN",
                    9505: "ik7H,pbWF,lnHj,lo1h,hzs3,hzR9,c+nP,c+T9,hzBr,3QHx,8pV9,nGCr,nH8V,illV,ikPx,nGCx,3R1j,ewDp,exg1,5nk1,3RwF,il6b,btC9,7FgF,ceub,9bmN",
                    "58f6": "m8mX,m9y1,pcgr,ikPx,ikkb,iliN,cdBX,fgW1,fi51,ceN1,bsWj,7EZV,7Ft3,ceDF,fhm3,5mB9,fhBH,5mQN,5m5P,5nn9",
                    5509: "9X3P,mV8V,mVuN,cdUN,cdyV,pcw3,j5yh,kDQV,mWar,j6h9,dLI3,ikSF,g2kr,g2W1,cd+X,ceQ9,g2A3,btz1,7FjN,5mHp,3QQV,aIN3,7Fzp,67/F,3RJ9",
                    "5b9d": "orlb,m95V,gOD3,lnB9,loJ1,gPL1,gPEH,gOMx,bsZr,btOF,9XY3,67/F,4CBb,4BdN,gP9r,4BVx",
                    "62e8": "jRNH,jSdV,bsJP,g281,3QuX,5mlx,pbTx,nGCr,ikD1,ilvh,pcsX,ikVN,dLRx,7EWN,nGYj,kDQV,ewJz,ex9N,9Y2p,6UxV,3QU1,cehH,9b79,6UNx,4Cy9",
                    "80a0": "4BgP,9Xdh,nG7h,nGq1,67n1,4BzF,ikkb,ikD1,dLmb,dLF1,nGwb,nH5N,g2hp,g2W1,685V,4Cfp,9aK3,ceeF,g2x1,g2Mz,cexp,9b79,4BYF",
                    5904: "c+nP,iknp,or8N,jS4r,jSqp,c+T9,7ETF,3Qv1,ewej,8pOV,67th,4C61,4CBh,orDX,7Fq1,jSMb,ceQ9",
                    "90f8": "pbNb,mVrF,pcgr,kD2V,kCM3,kDlF,dLUF,dLj9,kCM9,hzs3,hA1F,9X3P,9XRV,kD2P,3QQV,3Rk3,nGS9,nHc1,gPyx,dMr1,aJa9,8qrx",
                    "9f0e": "g21H,or8N,orQx,g2Jx,g21N,lnQH,lowx,ilcr,ikwN,ikkb,c+xh,c+Wh,3Q+h,9X3P,9XCh,9Xjr,677p,3Qv1,illP,c/yV,c/9V,3RdV,9XRP,9YeV,4CrV",
                    "4e4f": "m8q3,mVQF,nH5N,kDcb,hA4N,g1O3,g2PN,aIrh,8pCp,66WV,9axz,5mKx,4Cy9",
                    "752b": "lnuP,loM9,orKb,m9rN,pcgr,4BVx,3QEj,hzyp,hAqF,5naF,3Rnh,dLpj,dMhF,9Y8z,9Xgp",
                    "529f": "kCFP,kDch,kCYz,9axF,7EAP,aIup,j5v3,j6e1,685V,4Cfp,pcsX,dL+V,8q5F,3QQV",
                    "5bb3": "pcab,mVTN,hzs3,m8q9,m9uV,hAwV,j5fr,j61x,g1Uj,g2MF,c+nP,c/F9,kDir,9XIx,3QHr,9Xjx,9Y5x,3Rtx,5mlr,5n7x",
                    "6caa": "nGaj,kD61,ikdX,g1+F,4Bn3,cdUN,orAP,lotp,3QNH,7F7h,cebx,kDix,kDQV,ceJV,dLRr,dMnV",
                    "573e": "j4YH,j5v9,pbQj,aI5p,8pmH,ce29,nGpX,nH5N,g2A9,g2SV,9Y5x,67IV,3Q+h,nGCr,ce8p,7F11,4Btp,dLXH,4Cy9",
                    "9e21": "m8mX,m8P9,g281,cdUN,9arp,66WV,ikkb,ewkF,9aK9,pcw3,mVTN,kDuX,j5+p,g2Db,hAwV,mWjV,mVQF,c/3F,c/F9,6891,3Rqp,9aNb,9bjF",
                    9274: "nGaj,g1Up,oreX,g281,ikMj,pcw9,lodH,loM9,jSMb,gPBF,bsGH,dLyN,gP9x,g2kr,dM8h,bt/9,cdRz,ceAx,9arj,9bjF,cebr,4BVx,7ETz,5mB9,5mTP,7Fzp,4BgP,4Cy9",
                    "6e85": "oqRX,lnKx,ik7H,g1Rh,4BgP,cdLp,aIbz,mVrF,mVQF,aIAF,j5v3,btd9,8pS1,4Bwx,9Xz3,6UuN,nG/r,loFV,hA4H,j6e1,cehH,exj9,3R7z,ceN1,pczb,9Y2p,3RCV,6V4h",
                    "8fdb": "nG0X,jS7F,g1EH,g1Up,6TYp,4BgV,6TYj,4BPh,4Cy9,jSdP,jT69,dLyH,dMxh,pcjz,dLRx,aIup,6Uc1,pcCj,6UKp",
                    "775b": "66ZX,nG11,nGmV,7EZV,7EE1,ikdX,ikzV,dLBP,dLg1,mVE3,mWn1,jSqj,jS/V,hzR3,hAGh,pcw3,hAe9,3R4r,ewGx,excV,5ngV,3Rqp,btmr,btUV,8q2r,8qAV",
                    "7edd": "pbZH,hzlV,hzHN,m8P3,bsN1,ce29,5m5P,8pV9,j5yb,pct1,m92H,m9uV,hAhh,9YhX,hAA1,hz+x,5mKx,4BYF,4CrV,6V4h,btmr,btY1,hAhb,btFh",
                    5580: "9X6X,m8n1,m8FN,bt3N,bsN1,pcmH,mW19,j5rX,m8M1,m9y1,j6e1,kDoH,ewu1,ikSz,ilfF,ewZh,btmx,9XsV,g2nz,c/g9,btOF,aJa9,3R1j,9XFp,9Y8F,3RwF,5mHj,5naF",
                    "76d4": "m8mX,m9B9,pcab,kD2V,hzBx,ew1V,ikJb,fhfV,jSzH,g2nF,c+T9,bsZx,gPfH,dM8h,ceGN,bt/9,g2Db,ilfF,4Btj,9Xgp,9Y8F,4ClF,4BM3,9Xz9,9XRP,4C2V,4BgP,4Cy9",
                    6346: "j4YH,j5oV,pbQj,5mip,3Qv1,bsJP,fhfV,3QX3,nGt9,nHc1,3RG1,hz+r,hAqF,lon3,7Ft9,aIuj,hAe9,fhL3,ceDF,5mB3,5nk1",
                    "52b1": "nGFz,nG7h,c+xh,9al9,4BdN,j59b,j5HF,j5oP,c+MV,9XpN,5mip,dLBP,dLRx,6Uox,5my1,j5NP,j6e1,5ngV,3Rqp,pcCj,dM8h,7Fq1,3R4x",
                    "529b": "j59b,j6aV,682N,3Rk9,pcgr,fhsp,aIo9,6U5N,3Qy9",
                    "67f3": "j4/P,j5v9,pbTr,3QHx,aHRH,j5fx,gOMr,dLF1,nGLP,m8Sh,aIrh,cekV,kDrP,cekV,9aZN,5mKx,3QU1,3Rtr,mWax,mWn1,9bt1,7FIN",
                    "5a04": "or2r,lnX1,pcgr,ewGx,kDy3,orTF,kCIX,kDU1,ew1P,g1+F,kDix,hAb1,g2Jx,exj9,cdyP,ceQ9,ewGr,9axF,7Fdx,67P9,3RG1,btFb,8qbV,6UrF,5mB9,3Qv1",
                    9992: "hzlP,lnEh,pbTx,lnEb,lnX1,hzHN,hzyj,4Btp,9aDV,oroj,orZV,j6aV,j5Bp,orop,lo4j,loFV,gP03,gPL1,ceN1,ce29,gP09,gPfH,cehN,cexj,gPvp,9XCb,9Y8F,6UHh,4BYF,3QU1,9XIr,67P9,4ClF,3RJ9",
                    "5fd9": "fgPH,kCM9,pbQj,3QEp,kC/H,gOZ1,orxH,loqh,jSgX,jT69,jStr,5mKx,5nn9",
                    "879f": "bsMX,kCJ1,kD61,dLF1,dLg1,pbTr,8pFx,6TLP,8pOV,bt3H,6Uf9,kDcb,nGwh,nHc1,kDU1,jStr,jSYN,dMkN,dLRx,jStx,gP9r,gPEN,c/cX,aITp,9Xz3,9Yl9,3QX3,8qbV,8qoj,4Cy9",
                    6469: "pcdj,mVTN,4BdH,9Xa9,dLmh,mVih,mWn1,jS4r,jStx,ln+3,ewx9,fh6r,jSk9,gP9x,jSzH,jT31,loqb,ewZh,ewGr,jSMh,fi51,c+Gz,dMkN,aIbz,aJ3V,7EQr,7FS9,c/6H,5mQN,3R1p",
                    "954d": "ikaP,or2x,lnEb,ln+9,hzoX,hzR9,c+nP,c+T9,hzBr,4Bwx,9aH1,mVTH,pct1,mVKj,mWjV,excV,ewDp,mVKp,jSqj,jS/V,hzXj,hAwV,aIo3,aJa9,dM53,3Rk9,4BIX,aIN9,5nn9",
                    "7ebd": "or2r,gOwV,gOPF,jSgX,aHUV,cd/1,5m5P,7F11,m8Sb,m9rN,4ClF,dLLb,dMhF,m98X,4BYF,4BIX,4CBh",
                    7812: "m8jP,m8P9,dL9H,m8CF,674b,g1Rh,g281,8pS1,8pzh,orrr,4BVx,6UB1,hz+r,hAb1,pczb,5n1h,4Cfp,4Cv1,6V4h,gPsb,j6h9",
                    "75de": "jRQP,gOGh,cdvH,dLpp,3QrP,9arp,m8wp,m9B9,pcgr,mVWV,j5lH,j6h9,j5U3,fhyF,cdUN,gPiP,9XRV,fhOb,bt/9,3QX3,9Xz9,9YbN,3RzN,5mB3,5ndN",
                    "6c14": "hzlP,pbZN,m8zr,m9y1,ikqr,iliN,ew83,ex0p,9X/h,67Yx,3RCV,6V19",
                    "94c5": "ik7H,pbTx,lnEb,ln+9,hzoX,hzO1,c+nP,c+T9,hzBr,4Bwx,8pV9,fhpb,ikSF,nGFF,nH2F,hAqF,gPEN,gPRh,3R4r,c/0x,c/vN,3RzN,67zr,682N",
                    "533a": "mWjP,mVf9,5mc9,5nn9,jS7z,fhyF,cer9,8quF,7EQr,ce8p,kDEp",
                    5708: "3Qy3,oqV9,orZV,3RCV,5mc3,5ngV,m8Cz,jSh1,jSCP,m9fh,iktz,il9p,g1Uj,g2Jx,m8Yr,gP3h,bsWp,g2qH,btOF,9XIr,btvV,c/9V,c+Q1,8pS1,7F49,7Ft9,9X/h",
                    8428: "mV5H,mWth,pc3X,kD61,pcsX,kDv1,3Qy3,j569,j5s1,dLsx,bt6V,9Xw1,8pOV,6TYp,kDoH,il6h,hzR3,hAD9,gPcz,dM21,dM8b,gPEN,3QQP,6Uih,dLLh,dMu9",
                    6414: "jRNH,jSh1,pbQj,5mip,3QrV,cdyP,g24V,m95P,kDy9,dLBP,gPfN,lowx,nH5N,nGq1,mVKj,j5KN,g2Jx,exj9,6Uib,c+Wh,c/vN,9bmN,9aNh,fhHX,5mX1,4BIX,682N,7FFz,3RG1",
                    "6e17": "nG43,kCYF,ik7H,fh3p,4BgP,cdOx,orxH,jSk9,kDKF,nGVb,jSYN,gOSH,gPL1,j5NP,fhsp,cdUN,gPlX,ex6F,c/F9,ewSX,9Xw1,cexj,6Uf9,3QQP,5mQN,6UHh,9YbN",
                    "5e08": "m8q3,aH/9,4BjX,7ENp,9XmF,c+JN,or8N,mVE3,mWn1,7F7b,hzUh,hAwV,9bpV,7FCx,mW13,3Rk9",
                    "675f": "m8jP,m9B9,j5cj,j64F,dMhF,dLpp,j5cp,pcgr,3R4x,66WP,8pIF,aIl1,dLOp,dLUz,9XY9,7FFF,68c9",
                    7529: "4BgP,8pzh,bsWp,nGap,nH5N,9YbN,8qi9,iknj,iliN,dMkH,dLpp,nGCr,67zx,5mNF,4B/N,4CrV,7FS9",
                    9501: "ikaP,or2x,lnEb,ln+9,gOzX,gP09,cdyP,ce5h,gOMr,4Bwx,8pS1,nGwb,jSzN,pczb,hAhh,jSSr,nHc1,9aTr,hz+x,hAwV,9bpV,ewZb,9b41,67CF,3QU1,8qoj,4Cy9",
                    "82d4": "m8jP,m9B9,pc0P,j5oV,pcw3,j5U9,jStr,dLmh,ex6F,hAaX,c/C1,3QHr,aI8x,aIZF,3RwF,67ar,67/F",
                    "8df3": "nG0X,nGq1,hzO1,hzp1,nG11,hzBr,6T/x,dLsr,dLI9,ew83,6719,5m5P,8pV9,kD93,gPcF,aIkX,dL+V,orAP,aIGV,7FgF,5mHp,3QQV,orNj,5n4p,4Cix,4Cv1,6V4h,hAqz,loJ1,ex0j,aJa9",
                    "633a": "j4YH,j5oV,bsGH,fhfV,pbQj,5mip,3QrV,lnWX,loaF,ewu1,ewJF,btmx,9aQp,67q9,3QKF,bt6P,5mNF,4B/N,4Cy9,m92H,mWjV,g2qH,g2W1,9aZH,9bt1,m9ij,9bdp",
                    "7f51": "4Bqb,nG7h,nH8V,685V,4Cfp,j5iz,9XIx,9aur,jSqp,jSwz,9Y5x,9XLz,jSSx",
                    6845: "j4YH,j5v9,pbTr,3QHx,9X0H,j5fx,hzBr,dLF1,jSqj,pct1,m92H,m9rN,il6h,ilvb,ikMp,aIup,7F7h,3QQV,8qoj,9YbN,ex9N,ewPV,5mTV,4C61,4Cv1,6V4h",
                    7852: "mV8P,mVE9,mVrz,hzvh,dL9N,6TVb,gOGh,gOZ1,9Xw1,9Xdh,nGt3,nHih,nGOX,ewT1,cekV,aIAF,nGYj,cexp,btLx,btY1,4BSj,ikMp,ilp1,4Cv1,6Ulj,6U+1",
                    5915: "ew83,kD61,orop,kD5X,kDQV,fhXF,aIN9,7FgF,67q9,4Bk1,fhm3,btC9",
                    "54ee": "8psX,m8n1,m8FN,aIeN,aHY1,lo1b,lotp,pcpP,hA7V,hzNX,hAA1,mWgH,gPp9,9Xw1,ewGr,ex9N,ceuh,67Sh,3R7F,9XCb,9Yl9",
                    "7b11": "j4/P,pbWF,m8wj,m8Yx,m8Cz,j5s1,j5Bj,orH9,m95P,m9B9,m9ij,j67N,g1Uj,hAqF,cdBX,ceN1,g2kr,cebx,9aNh,6U8V,5mlx,3Qv1,cebr,8qf1,67Yx,3RG1",
                    "7eed": "or2r,hziN,hzEF,kD5X,bsJV,cdXV,66WP,8pS1,mVE3,mWn1,pcsX,j5R1,j5v3,j6h9,fhXF,gP6j,ewMN,ewAb,ceeF,aIkX,aJdh,gPp3,btC9,9b41,67CF,3QU1,9bab,4Cv1",
                    "859b": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,iknj,kCYF,3Qy3,ikh9,ikG9,dLI9,dLj9,aH/3,aIo9,67q9,6719,jSFX,il9p,hzXj,hAA1,g2nz,c/d1,c/jb,g2PN,ce5b,ceQ9,8pYb,8qH9,ceub,3Rnh",
                    "517b": "pbZH,m8Sh,lodH,pcCp,lnB3,loJ1,iknj,iliN,fgVX,fi89,lo7r,g2hp,c+Q1,aI8x,9aeV,ewPP,btLx,9Yl9,ce23,6Uc1,3QEp,btFb,3Rnh",
                    "59da": "ik7H,ikD1,cdUN,8pFx,5m5V,or2r,cdC1,7F49,kD5X,gP9x,aIkX,dLUF,oruz,9XLF,6Uox,3QQV,orKb,5n1h,4Cfp,4Cv1,6V4h,hAqz,kDU1,ewZb,aJa9",
                    "94f6": "hzlP,or5F,kCSj,kDch,gOD3,gP09,cdyP,ce5h,gOPz,3QKF,7F7h,ewJz,excV,mWjV,mVQF,3R7F,6UHh,ikSz,illV,ewSX,9Y2p,7FFF,4CBh,9Y5r,ceQ9",
                    "5e94": "oroj,logV,loIX,lnHp,9Xgp,6719,4BgV,ewkz,8p/p,hzXj,btvV,gPEH,5mTV,5mlr,5nn9",
                    "5cea": "jRTX,7EE1,7EZV,jSdP,67jV,oq/j,7ENp,jSk3,orxN,orKb,kDU1,c+PX,fhyF,il01,g2Gp,c/F9,3R4r,cebx,ceGN,3RzN,5mKr,5ndN",
                    "9a6d": "nFZP,nGwh,dLI9,kCSj,dLmh,dLXN,67CF,3QX9,8psX,9aNh,lo4j,loJ1,dMhF,9X/h,67CF,3QX9,loaz,dM21,8qrx,4CBh",
                    "66fe": "or5z,ln+9,logP,orNp,lnB3,loFV,excV,ew89,lnB9,j5iz,g2b9,lo7r,ewGx,g2tP,j5+p,3QHr,bsZx,btLx,3Rtx,8pFr,8qrx,5mlr,5n7x",
                    "548b": "8psX,m8n1,m8IV,aIhV,aHY1,g27X,pcpV,jStr,jT69,jSCP,3RdV,ewPP,excV,9YhX,9XRV",
                    "72f0": "4Bn3,5moF,9XsV,gOSN,kCVx,oqOV,nGmP,hzlV,aHUP,fhcN,j5v3,pcmN,mVQz,mWdF,il01,ikMp,illV,9YeV,9Xz9,ewx3,exj9,ik/X,5mX1,3R4x",
                    "679d": "jRNH,jSh1,pbTr,3QHx,9X0H,ikqx,gOMr,dLF1,kD93,kDX9,pcw3,g2A9,g2eb,g2SV,9Y2p,67CF,3QU1,fhvr,9XV1,67/F,3RJ9",
                    8457: "mVbX,mWn1,pc3X,jSh1,pcw3,jSJ9,ikqr,il6h,ew1P,exj9,kDir,ewGx,jSYH,fhI1,c+Zp,bt6V,9aeV,3QQP,bt6V,btOF,3RwF,8pOP,8quF,5muP,5naF",
                    "722a": "5m5P,9Xgp,dLsx,m8zx,mWjV,m8Yr,4BVx,m9fb,dMbp,9bjF,5nn9",
                    5750: "c+qX,gOJp,m8FN,iktz,dLI9,dL+P,m9lx,il9j,dMr1,orrr,4BVx,aH/3,aJ3V,4BgP,4Cy9",
                    "6ed5": "4BgP,aI2h,nG7h,nGmV,5muV,3QHx,dLBP,dLmh,ikkb,ikzV,hzR3,hAD9,loIX,lo1h,nGCr,lodN,lotj,nH5N,pczb,ikYV,fhyF,ce29,hAkj,excV,c/Ih,ewW3,4C99,3RdV,67tb,9b41,9XRP,c/0x,c/vH,9Y2p,9bab,6891",
                    7985: "3QKz,g1+F,c+T9,cdyP,g1+F,jSh1,jRU1,m8IP,pbQp,pcdj,logV,pcLH,kDy9,3Rk9,9aK3,9bw9,c/yP,kDQV,kDfp,c+Zp,c/yV,gPHP,gP6p",
                    9753: "3QNH,4BM9,ewx9,ew89,3Qy9,8pw3,8pV9,btd3,bsQ9,gOwP,gP6p,mVKj,mV8V,jRX3,jSk9,gOPz,pbWF,c/6H,nGIN,nH5N,c/vN,jSMb,c/jh,8qf1,67FN,3R1p,cexj,4Cfp,3Rtx,3RCV,68c9",
                    "62dc": "3QrP,6TYp,9XmF,mVrF,m8mX,orlh,hzlP,hzUh,c+Zj,c+kN,nGzj,nHf9,j6dX,j5Bp,fhsj,fi51,aJdb,aIo9,nGVb,3Rnh",
                    "965b": "3QuX,nG11,nGq1,hzyp,ewnN,bt6V,9XpN,8pCp,orlb,dLLh,gPm1,kDcb,kDv1,pczb,fhOh,dMbp,dMnV,g2Z9,kDBb,kDX9,9Xz3,9YeV,5muP,5nn9,c/cX,5mX1",
                    8349: "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,j5fr,j61x,ceAx,cdOx,j5fx,g1Xr,g2Jx,8ppP,8qH9,ceez,3R7F",
                    "9f7f": "nGgz,hzEF,hziN,hAGh,pcjz,hA1F,m8/z,m9uV,fh3j,677p,682N,3RzH,fh+N,g2nz,btjp,8pLN,c/0r,9bdp",
                    6467: "j4/P,j5s1,bsGH,g24V,pbTr,5mlx,3Qv1,nGwb,j5yh,j6aV,nH8V,orDX,j5R1,ikPr,cdUN,fhpb,3Q+h,ikYP,g2Dh,fhsj,fi51,ce8j,ceJV,8qAP,8p/p,4BSj,4Cy9,fhL3,4C99",
                    9012: "mVbX,jS7F,g1EH,g1Xx,6T/x,4BgV,6T/r,4BPh,4Cy9,orlb,lodN,pcFr,lok1,lnTP,loCN,hAtN,hzR9,dLI9,dMnV,9YeV,8qop,logP,67IV,dL+P,8pS1",
                    9041: "nG7b,kC/N,gOtH,gOMx,7EQx,66+1,7EQr,4BSp,4Cy9,9aAH,cd/1,ewx9,mVE9,nHc1,jSqj,jT69,m9ij,gPm1,6Uor,gP9x,gPHV,6UWV,dLRr,dMnV,btUP,btmx,7Fdr,7FLV",
                    "4efd": "ev+H,jS1p,pbZN,jS1j,3QEp,ewnH,ikJh,nGFF,orNj,jSVF,hAwV,exmh,g2eb,g2PN,67/F,3Rh1,3QNH,6Ulp,9XLF,g2qN",
                    "7bd9": "kCM3,pbWF,mVor,mVQF,mVrz,jSh1,lodH,pczh,mVZX,mWq9,mW4b,jSVF,kDir,j5KN,j4/P,j6h9,gOPz,gPyx,dMex,dLvF,gOPF,3QBb,bsTh,btUV,5ngV,3Rqp,9aDP,9bah,67Sh,67jV,9aDV",
                    9986: "gOtH,or2x,kCPb,kD61,hzHN,g1Uj,4Btp,8pS1,pcpP,mW4h,ikJb,lo1h,loJ1,ilp1,3R4r,hz+x,hAtN,dMkN,dLRx,aIxr,aJ3V,3RCV,67zr,685V",
                    "72e0": "hzlP,nGq1,bsMX,fhcN,nG0X,jS7F,g24V,7EZV,5moF,3Qy9,7FpX,3Q+h,nGwh,nH5N,ex9N,ewAh,j5yb,j67N,ewPP,9bah,67/F,3RJ9,9bdj,c/C1",
                    "60e0": "mVbX,mWn1,jS4r,jSSx,ex3x,ewhx,jS4x,gOMr,gPyx,pcgr,btmx,bsQ3,ceDF,dMbj,aJ3V,4BgP,9arp,9XsP,5muV,4BJ1,4C99,6UKp,9XFj,7FjN,9bjz,5nn9",
                    "9a7e": "mVbX,mVQF,j5Ex,ikD1,pc0P,j5fx,gOA1,nGOX,nHc1,ilp1,il01,nGP1,fh3j,fhUx,aITp,dLBP,aIeN,aJ71,5ngV,3Rk9,6TOX,7FCx",
                    6377: "kCCH,kD99,cdvH,fhj1,pbTr,5mlx,3Qy9,mVE3,mWn1,jSnb,jSYN,dMkN,dLLh,gOYX,gPRh,pcsX,4C61,9XUX,9Yi1,4BCH,btjp,9aNb,4C2V,4CBh",
                    "636e": "jRNH,jSk9,pbTr,5mlx,3Qv1,bsGH,fhj1,4BCH,8pV9,aIrh,orlh,orZV,j6aV,j5yh,fhpb,fi89,j5Xb,aIQh,3R7z,aIAF,aJ3V,3RCV,5mNz,5ngV",
                    "67af": "jRNH,jSh1,aHRH,jS1p,hzyj,dLF1,pbQj,3QEp,jSk3,jT69,pcw3,c/g9,3R1j,c+Zp,c/yV,3RCV,5mHj,5ngV",
                    5792: "ori3,kCSp,lotp,nGOX,jSYN,j5iz,dLg1,fhph,hzNX,dLRx,j5Xb,dLUF,fh+N,hAnr,c/F9,9Xgj,9YbN,4BgP,4Cy9,cebr,4BVx",
                    "51db": "mVbX,ikqx,66WP,dLsx,pcjz,mV+1,mVrz,mWth,kD2P,kDQV,c/yV,dLBV,kD2V,ikMj,il9p,g2Gp,g2hp,ikMp,bt6P,btUV,9axz,9bw9,4Bwr,7Fap,9b0P,3RdV,7Fwb,3RJ9",
                    "87ba": "cdBX,lny1,lnX1,dLF1,dLg1,pbTr,8pFx,7EAP,9aH1,bt6P,7F49,nGzj,nH8V,hAwV,hzXp,nGzp,lo4j,loFV,nGVb,hAhh,hAe3,dLOp,dM8h,g2Mz,9XCh,aJ3V,c/sz,9bzh,4BM3,8q8N,9X/b,5n1h,3RaN,7FFz,5nn9",
                    "5e42": "lnxX,nG11,nHc1,loJ1,lnKr,lowx,g2Jx,g1Xx,lnKx,ikqr,ilcx,dLcP,dMu9,g2eb,c+MV,aI5p,9aeV,c/cX,9bw9,5moz,aIbF,aIWx,67Yx,4C61,dLRr,3R4x",
                    "59ae": "j4YH,j5s1,dLBV,9XmF,4BgV,or2r,cdC1,8pS1,3QNH,7F7h,9XFp,nGzp,nH8V,hAwV,hzXp,fhHX,5mX1,4C99,4CrV,6V4h,aIJX,dMr1",
                    "6ce1": "nG43,lnNF,ikaP,fh6x,3QrP,cdOx,g21H,lo1h,orrx,lo1b,loFV,aJ3V,9bdp,btgb,btFh,gPsh,gP3h,5mEh,4BSp,4CrV,6V19",
                    "621a": "4BdH,8pw9,aI2h,lnEh,loJ1,orQr,mWjV,j5rX,dLF1,gOYX,gPfN,dLpj,dL+V,8pCj,bt3N,dLI3,6Uf9,5moF,btjj,8qbV,pcw3,btFh,5naF,3RCV,68fh,5mNz,9bah,c/sF,gPHV",
                    "79bd": "ikaP,lnTV,pcgx,m9c9,jSYN,j6h9,m8Sb,jSzN,j5iz,j61x,ikCX,dM8h,ewqP,il6h,hzyj,dLpp,dMhF,hAqF,3QBb,aI2h,aJ0N,5ndN,3Rqp,c/3z,6U8V,7Fwh,9b3X,67Yx",
                    "5bb9": "pcab,mVQF,gOD3,m8q9,m9uV,gPHV,gOJj,kD99,jSCP,gPBF,bsJP,cdLp,ewu1,hA1F,gP9r,dMhF,ceJV,aJa9,3QHr,aI8x,aITp,3Rqp,67ar,67Vp",
                    5962: "m8mX,m9y1,pcjz,ln+9,iktF,g1HV,m92H,ilfF,g30h,loaz,ewJF,hzHH,hAe9,ew83,exg1,9ahX,bt6V,hAkp,3QQP,bt6V,btLx,3Rtx,9aDP,9bgx,5muP,5n7x",
                    7626: "kCFP,hzs9,cdvH,ewep,4BgP,8pzh,cdLp,mVlp,mWq9,pcgr,mVWV,jStr,jSdV,dLBV,dMnV,jS/V,jSMh,gOVP,gP9x,gPsb,gPHV,logP,btvV,bt6P,btOF,8qlh,67FN,4BPh,3QKF,aIrb,7FjN,5n1h,3RG1",
                    "6eaf": "oqV3,lnNF,ikdX,g1Up,66ZX,c+Dx,orbP,lo1h,jSqj,orAV,jS7z,jSG1,hzHH,cdUN,cekV,hA7P,aIGV,jSqj,dLOp,aIrh,6Uc1,4BzF,3RdP,7Fwh,aITp,mW7p,mWn1,5nk1,3RwF,hAkj,hAA1,cexj,ceN1",
                    "68af": "j4/P,j5s1,pbTr,3QHx,aHUP,dLmh,j5fx,gOMr,c+Q1,orrr,mVWV,pcIz,loqh,lo1b,loFV,gPHV,gP3h,ce5h,ceN1,7FP1,6UNx,lon3,3Rk9,67mX,7Fap,ceo1",
                    "6d3c": "mVf3,kCYF,hzlP,fh3p,3QrP,cdRF,kD93,kDQV,fhfP,fi89,9Xz3,9YeV,4BCH,4Cy9,orDX,fhI1,dM1X,4C61",
                    "5c4b": "66WP,aI2h,dLpp,nGap,nH5N,jSYN,jS1p,gOPz,gPL1,gP9r,cdUN,c/sF,fhRj,btUV,9aAH,9bpV,5mij,5nn9,cehH,5mQN",
                    9677: "3Qy3,nG49,nGq1,hzBx,cd/1,9Xw1,9Xjx,hzR3,loaF,pcpV,m92H,m9uV,hAkp,g2tP,ewAh,3Q+h,aIrb,aIK1,fhOb,fi51,3RG1,aITj,aJ71,67tb,6891",
                    "4f11": "fgSP,kCVx,pc0V,kCVr,3QHx,j5oP,j6h9,pcsX,3Rh1,7EWH,9Xz9,c/0x,j5R1,ex0p,aJ0N,7FVh",
                    "6f14": "nG7b,lnQN,ikdX,g1Xx,4BjX,c+GF,pcjz,mW19,ikzP,m8IV,m9y1,ilp1,j5yb,j67N,g2b3,9aK9,9bpV,g2SV,g2b9,c+T3,c/yV,j5QX,9b41,3QNH,7FgF,7Fwb,3RJ9",
                    9038: "mVbX,j5iF,g1EH,g1Up,7ENp,5m91,7ENj,4BM9,4Cy9,ikwH,oruF,m8Vj,m9lx,il01,ikG3,iliN,ex9N,ewx9,ikG9,ik/X,dL+V,aIAF,7F11,c/cX,8qi9,7Fwh,7FLV,9Yl9,c/pr,aJ3V",
                    "865e": "pcgr,lo7x,nGCr,nH5N,illP,loM9,lnEh,9Xdh,6TS9,3QrV,iktz,j61x,jStr,gP9x,g2nF,g2Jx,hAtN,ewtX,ex6F,ceDF,cd/1,ewu1,9Xmz,9YeV,7EKb,7FP1,9XLz,67wp,4BJ1,3QEp,7Fgz,5m+9,4Cix,3RJ9",
                    6682: "mVbX,mVNx,pbZH,hzs9,ikMp,dLfX,fhvx,kD2P,cdXV,c/0r,fhBN,nGIN,orZV,j5KH,j6h9,j61r,ceAx,3QHr,bsZx,btOF,3RwF,7EQr,7FFF,4Bwr,4ClF",
                    "86f0": "lnuP,lo1h,or5z,ewkF,dLmh,gOzX,j5v9,lo7r,lozF,fhUx,ex6F,exg1,gPO9,dLI3,gPfN,orE1,ikMj,fhOh,6TYj,bsWp,btOF,8quF,8pCp,ewJz,4BYF,3Qy3,5ndN,6UQz,3RG1",
                    "5dde": "c+qX,j5cp,or8H,dLyN,aIbF,8pFx,4Bk1,ikCX,fhsp,nGFz,5mNF,ik/X,dMex,orWH,3RzN",
                    "7eb5": "or8H,gOwV,gOSN,j5v3,aHUV,ce29,66WP,8pV9,oruz,ewJF,9aQp,6Uih,4BFV,ewJz,btz1,orNj,g2Gp,aIQh,67IV,3R7F,g2Gj,aIZF,6UWV,4CBh",
                    "572f": "8pmH,bta1,ikCX,ik7N,9Xgj,pbQp,g2hj,g2SV,nH8V,nGzp,5mHp,4BVx,4CrV,7FVh",
                    5965: "3QrP,5moF,btmx,9X3P,9Yl9,9aTr,67P9,3RG1,9Y8z,m9oF,m8wp,9Xgp,pcgr,m8M1,kD2P,ikG9,kDBb,ikYV,gPvj,gOPF,lo7r,cebx,cdRz,gP6p,gPcz,c/jh",
                    "752d": "oq/j,orTF,orrr,ln+9,jS7F,j569,m8Yr,hz+x,m98X,iliN,3QuX,6TYp,8pFx,g1Xx,g2MF,67/F,3Rnh,c+Gz,c/mp,9bdj,9axF,fhvr,5mKx",
                    "731c": "3QuX,67dF,9XpN,iktF,oqS1,orbP,hzlV,aHUP,g1+F,m8LX,m9B9,j6aP,j5yh,g24P,g30h,pcsX,g2x1,3Q+b,dLLh,dMkN,5ndN,3Rtx,btgb,btRN,7FIH,7F7h",
                    9648: "3QuX,oqS1,orbV,hzyp,dLBV,aIhV,9aoh,lnWX,loM9,pcpP,ewx9,exg1,il33,5m+9,3R7F,5mrH,btmx,btLr,68c9",
                    "7ef0": "pbTr,hziN,hzEF,kD5X,bsJV,cd/1,66TH,8pS1,pcsX,jSG1,mVZX,mWn1,jSnb,jSYN,c/vN,c+Wh,jSnh,gP3b,gPEN,9aK3,9bw9,c/cX,3Rh1",
                    "5fb7": "jRQP,pbZN,jSaH,c+nV,gOJj,3QEp,mVxP,mWq9,pcw3,jSzN,jSk3,fhm9,fi1V,jS/V,jSk9,jSzH,fhBN,fhRj,jSPp,cdUH,ceQ9,9Xz3,5moF,aIGP,7Fwh,9bmH,68c9,9XIr,5mKx,4BYF,4Cfp,6UQF",
                    5835: "j4YH,j5oV,oq/j,9Xgp,7ExH,bt6V,ln+3,lozF,pcpP,gPiV,gOVP,gPO9,mWmX,ilcx,ewMN,cd/1,3R1j,c+Zp,c/vN,3RzN,9XFj,9YbN,5mHj,5ndN",
                    "4eff": "fgPH,pbZN,kCSj,3QEp,pcjz,loqh,j5lH,j6kh,j5KH,9XIx,6Uih,3QKF,ewMH,excV,5ndN,3Rnh",
                    "560e": "8psX,mVc1,mVrF,aIbF,aHY1,nGjH,nHf9,nGLP,loaF,ln+3,lozF,dMhF,dLI9,ln+9,j5v3,j64F,gPBz,gP09,9Xmz,ceQ9,dM8b,btLx,4BCH,67CF,9Y8F,dLRr,aIAF,6UxV,3RzN,7FS9",
                    "5b64": "mV8P,mVB1,ikqx,67ax,4Bk1,cdvH,fhj1,5mrH,8pV9,ce8p,m8Vp,nH8V,m98X,ceo1,5mQN,6UNx,9X/b,5naF,mWar,ex6F,aJ0N,5nqh",
                    "90dd": "lnxX,lodN,pc0P,gOVV,gOwP,gPiV,9aeP,dLpp,gOSH,9axF,4Bk1,gP3b,67th,4BFV,dLRr,9b41,3Rnb,nGVh,nHf9,gPvp,ceQ9,9Yl9,7FCx",
                    "5ba6": "orlb,m92N,hzoX,lny1,loJ1,hAA1,ilfz,iknp,4Btp,4CrV,dLpj,dMex,9bgx,9arp,ikSz,dLUF,9aWz,4BYF",
                    "60b8": "fgSP,kCM9,pbQj,3QEp,kCYz,gOZ1,mVHb,mW19,nH8V,mW13,fhL9,jSk3,jT31,ewqP,gP9x,jSJ9,gPBF,exj9,dLOj,dMkN,btz1,5mX1,3R7F,9aGX,9bw9",
                    "94f0": "j4/P,pbWF,lnEb,ln+9,hzoX,hzR9,c+nP,c+T9,hzBr,4Bwx,8pV9,pcpP,m9ip,kDfj,kDX9,fhsj,ikYV,ilcr,fi51,dMkH,9bah,67FN,3QU1,dLUz,9XV1,67Yx,4Cy9",
                    "97ed": "jRTX,jSk9,fgZ3,fhm9,9X6X,9Xz9,5m2H,5nqh,nGt3,5mB9,nGLP,5mTV,jSCP,jT31,fhEP,fi1V,9XRP,9Yi1",
                    "67ef": "jRNH,jSk9,pbTr,3QHx,9X3P,dLmh,jS4x,hzBr,dLF1,nGpX,nHih,nH5H,682N,4Cch,9XFj,j5Bp,j5Xh,ceuh,ce8p",
                    "7f06": "pbWz,hzlV,hzEF,kD5X,cdC1,cdXV,6TLP,8pS1,orlb,hzUh,pcmH,gPfN,j5NP,orTF,loqb,loPh,jSSr,gPHV,8pYb,fhph,fi1V,8qAV,c/cX,7FjN,5mHp,3QNN,9XY3,5m+9,4Cch,4Cv1,6V19",
                    "8c05": "oqV3,lnQN,hziH,hzBx,4Btp,8pS1,pcmH,m9ip,lnWX,loPh,hzXj,hAwV,c/yV,c+Zp,hzXp,5mxX,9XLF,c/g3,5m+9,3R7F,9Y8z,68fh",
                    "4fa3": "fgSP,j5fx,pc0V,j5fr,3QHx,mVKj,mWjV,gPHV,gP6p,mVKp,3Q+b,c+Wh,c/C1,3RG1,5mEb,5nk1",
                    "5bd0": "ori3,m8/F,ikaP,lnuV,loJ1,ilp1,hzs3,ew89,ewqV,bt6P,bsJV,bsTb,7EH9,4BgV,j5oP,3QQV,gP6j,gPEN,ce23,ceN1,jSFX,3Rh1,67mX,ceo1,8quF,6U+1",
                    "7a46": "nG0X,orf1,nGdr,3QHx,ikaP,ikG9,aHRH,ikqx,hzBr,dLF1,nGLP,pcw9,nGzj,nH8V,hAwV,hzXp,nGzp,kDfj,kDQV,ce23,g2qN,hAe3,cer9,g2Jr,c/F9,9aNb,btC9,btOF,67tb,8qlh,aJ0N,3QX3,4C61,67/F,8qH9",
                    6015: "ev+H,jRX9,pbTr,3QHx,kD2P,gP09,pczb,kDrV,3R1j,kDfp,kDU1,3RG1,dLOj,dMr1,688X,67wp",
                    5761: "ik7H,ikzV,oq/j,9Xgp,9abH,aIl1,4Bwr,7F11,c+Wh,lo1h,loJ1,hAtN,pcw3,fhL9,fhpb,fi1V,9Y5x,67IV,3QX9,c/3z,8qi9,5naF,3RJ9",
                    9539: "ikaP,oq/p,kCM3,kD2V,gOzX,gOPF,dL9H,dLyN,gOGb,4Bqh,8p/p,m8IP,nGLV,mVKj,3R1p,hzKP,hA4N,9XpH,hzXp,fhsj,cekV,fhEP,jSJ9,orQr,c/px,aITp,7Ft9,3R7F,g2Jr,jT31,c/pr,8qxN,4Cy9",
                    "56b7": "8ppP,m8jV,m8zx,9Xjx,9X3V,pcpP,nGVh,mVxP,mWq9,ln+3,lodN,ikVN,ikG9,ln+9,loqb,loFV,illV,il6h,loqh,g27X,g2W1,dMnP,dLI9,bt6P,bt/9,ikSz,btpF,il9j,btIp,btvP,8q2x,67gN,8q2r,3R4x,67M1,9b73,4CBh,7FFz,9YeV",
                    9655: "3QuX,oqS1,orf1,hzyp,dLBV,cd/1,9XsV,8pCp,lo1b,loM9,j5yb,fhBN,fhUr,j6aV,dLI3,dMu9,pcw3,g2A9,c/d1,9aZN,67th,3QNN,c/g3,8qrx,685V,4CBh",
                    "4e8b": "mV8P,mWq9,jS1j,jSVF,hAqF,hzyp,jS1p,ewbb,ex9N,9bmN,9aoh,cdyP,ceQ9,pcgr,5mKx,3QU1",
                    "5bfa": "m8wj,m9rN,hzlP,hAD9,pcgr,hz+x,c+qX,c/C1,g2Db,5n1h,3RaN,aIeH,7F7h",
                    "642a": "jRNH,jSh1,pbTr,5mlx,3Qy9,bsJP,fhj1,pcpP,mW7p,m9B3,m8Sh,dLLh,9Xz9,5mrN,j5Hz,j67N,c/vN,c/3F,g2eb,g30h,lon3,9XY9,3R4r,9XIx,9YeV,3RCV,4BVr,4CrV",
                    5410: "66ZX,kCJ1,kD2V,9aDV,9ai1,gP03,gPL1,orH3,4C99,4BFP,4Cy9",
                    "6e29": "oqV3,lnNF,ikaP,fh6x,4BgP,cdOx,nGt3,nH2F,g2MF,g2b9,nGt9,jSk3,jSVF,5mxX,cd/1,ceGN,5ndN,ceez,5mNF,ceub,5n1h,5mij,5nqh",
                    "4e0b": "mVbX,mWn1,mVNr,4BVx,hA7P,ceJV",
                    "65b0": "pbQj,mVxV,m8jP,m8/F,jR+b,hzEF,gOVP,jSnh,gOtH,gPcF,c+nP,c/0x,gOSH,5mrN,3QEp,6TLP,aI2h,aIo3,7Fdx,3Q+b,7FjN,mVTN,os11,gPfH,gPO9,gPBz,3RwF",
                    "5d16": "oqYb,kCPh,kDQV,orZV,pcjz,kDlF,iloX,iknp,aI5p,8pzh,4BgV,fhcH,fh+N,bt0z,btY1,hA1z,btpF,8pIz,8qxN,5mij,5nn9,aIAz,5mNF",
                    8863: "ori3,lodN,kCFP,kDX9,kDfj,fhcN,aHUV,fhcH,3QNN,9aTx,ikPr,btz1,7FCx,5nn9,btyX,gPEN",
                    "52c7": "nG7b,nH5N,kDoN,m8Vj,jSG1,cdOr,jS4x,jS/V,dMnV,cexp,hzBr,hAwV,fh6r,fi1V,jSzH,c/6N,9Xa3,9YeV,682N,5naF,3Rk9,ceez,7F49,5moF,3Qv1",
                    6708: "3QuX,7EQx,9XmF,nGgF,nH2F,5naF,3Rk9,hzEz,hAqF,cdRz,ceDF",
                    "7ae0": "pcab,mVTN,m8q3,m9uV,lnQH,ikG9,ikYP,loqh,ikaP,ils9,fh6r,fhUx,9Y5x,9Xjx,fh6x,c+Dr,c/px,7EAP,7FS9,9XIr,3R4x",
                    "81f4": "mV8P,mVQF,mVuH,g1HV,gP6p,jSgX,fhyF,cdBX,cebx,4BgP,8q2x,g21H,6U5N,gPfH,orKh,j5QX,j6h9,j67H,dMhF,9bah,67FN,3Q+h,fhBH,aIN9,7FCx,4Cy9",
                    8301: "lnuP,loM9,oreX,ikD1,orH3,il39,hzBr,c+Dx,c/sF,hAqz,btOF,aI2b,5mfh,5ndN,aJ0H,3RzN,j5Er,5mKx",
                    2168: "5m8X,5mrN,5mxX,5mQN,5n1b,5nk1,5ndH,nGwh,nGaj,5mip,5mEb,nH5N,nHbX,nGVh,nGIH,nGq1,nGjH,nG11",
                    "8c24": "nG7b,lnQN,hziH,hzBx,4Btp,8pS1,pcpP,mW7p,m8Sb,m9B9,loaz,il01,il6b,lozF,g2eb,ikJh,ilp1,g2W1,gPlX,ewZh,c+T3,c/F9,4BM3,67zx,8q8N,9XRV,c/d1,9XRP,9YeV,5ndN,3Rnh",
                    "51b0": "m8mX,ikqx,7ExH,ewhx,ikwH,ikPx,ewAh,9XsV,677p,pcpP,5mTV,3R1p,kDrP,ewZh,aIZF,6V19,g2A3,kDQV",
                    "94f2": "ik7H,pbWF,lnEb,lnX1,hzoX,hzO1,c+nP,c+Wh,hzyj,4Btp,9aH1,pcmH,mW4h,lo1b,loM9,jSwz,gPm1,kDNH,g2Dh,g30b,g2hp,8p/p,3QU1",
                    "8e87": "hzoX,nG11,nGq1,hzO1,hzp1,hzBr,67ax,c+Dr,c+T9,ew83,6719,4BdH,7F49,m8P3,m9B9,pcmH,jSzN,pcFr,jSSx,hzXj,hAtN,kDy3,ewW9,ewtX,exmh,9aGX,btpF,ewZh,illV,3R7z,btpF,btUV,3RCV,8q5z,8qAV,4CrP,4BYF",
                    "6b86": "3QrP,8pIF,bt6V,dLF1,ikG9,iknp,c+nP,gOGh,mVox,dLmb,bt3N,mV8P,mVHh,orH3,gP6p,hAwV,lotj,gPO9,3R4r,c/0x,c/yV,3RCV,5ngP,5mKx",
                    7239: "lnB3,orbV,orDX,loCN,m98X,jSqp,ikzV,gOwV,m8LX,jStx,il39,gPO9,dLmb,fhfV,hz+x,g2b3,g2Dh,dLXN,bt6V,9X71,ewqP,ce29,7ENj,9aNh,cer9,aIDH,aJ0N,7Fwh,5mHp,3Qv1,7Faj,67CF",
                    "513f": "4BgP,7EQx,9aAN,bt6V,nGmV,nGOX,67M1,4C99,4CrV,7FVh",
                    "5e45": "9aeP,lnuV,lnX1,aIl1,9aAN,pbQj,3QEp,nGwb,nHih,kDir,kDQV,gPHV,gP9x,kDix,3R1j,dLOp,dMr1,3RG1,9XFj,9Yi1,67wj,6891,dM8b,67Sh",
                    6839: "j4/P,j5v9,pbTr,3QHx,bsJP,j5fx,ikqr,ewu1,7Ft3,3R1p,nGzp,nH8V,excV,ewDp,j5Bj,j6aV,c/BX,9Y2p,ewSX,9bdp,4Cv1",
                    "90ed": "pbTr,m8M1,m8jP,m92N,j59b,j5Ex,g2kx,g1Rh,j59h,dLj3,dLOp,bt6V,67jV,4Btp,9al3,aIAF,3RgX,mV+1,mWn1,g2Gp,btY1,7FP1,67Vp",
                    "846b": "mV5H,mWth,pc3X,jSh1,pcsX,jSG1,g1HP,g2kx,j5lH,c+JN,6713,c+u9,c+Wh,6Uih,6TS9,3QX3,6UrF,9XON,ikVN,illV,5ngV,5n7x,ewMH,excV,9XOH,9YeV",
                    "54c0": "pcab,mVTN,lnuP,loM9,ikqr,ilcx,dMex,dLsx,ikqx,dLI3,8ppV,aIeH,3QNN,8q2x,ceez,4Cv1,9XY3,c/yV",
                    "62b1": "3QuX,5mlx,pbTx,jRNH,jSk9,g2b3,bsJV,ikG3,kDix,pcpV,m92H,m9y1,btY1,9Y5x,7FS3,4CoN,4BYF,5mHp,hzXp,hAkp,c/mp,c+Zp",
                    "94b5": "hzlP,pbWF,lnHj,ln+9,hzoX,hzO1,cdyP,ce29,hzBr,3QHx,7F11,jSk3,jT69,pcsX,3Rh1,8pRX,btjp,ewJF,jSG1,g2Gp,ceGN,9Yl9,8p/j,8qxN",
                    5382: "5m5P,9Xgp,mVlp,mWq9",
                    "63e3": "jRQP,jSh1,pbTr,5mlx,3Qy9,cdyP,fhj1,nGwb,j5yh,j6aV,nH8V,orDX,j5R1,g2b3,g2Z9,g2A3,cekV,3QX3,ce29,ceJV,5ngV,3RwF,cehH,5mQN,cexj,5n4p",
                    "63b8": "kCFP,kD61,cdyP,g281,pbTr,5mlx,3Qv1,pcab,logV,kDy3,pcLN,kDcb,kDQV,c/yV,c+Wh,kDch,gP3b,gPHV,9aDP,9bw9,kDuX,3Rh1",
                    "952d": "hziH,pbWF,kCPb,kD99,gOzX,gP09,cdyP,ce5h,gOMr,3QHx,7F11,orDX,m9ip,ikPr,lo7x,loJ1,ilp1,gP9r,gPL1,gPsb,5n1h,btFb,btY1,c/3z,8q2x,3QU1,8q5z,4C99,4CBh",
                    9600: "oq/j,lnQN,3QBb,jR+h,mVHb,mWn1,5nk1,3RwF,kD93,c+Dx,hzO1,67n1,jSJ3,hAkp,fhm3,gPBF,jSJ3,hAkp,kDlz,ewMN,9XV1,6UNx,9bmN,ex3r,7Fap",
                    "629a": "jRQP,jSk9,aHUP,fhfV,or2r,67ax,4Bk1,m8Sb,m9y1,fhm3,fi89,m95P,cehN,8q2x,4BFV,fhOb,5n1h,4Cfp,4Cv1,7FVh",
                    "606d": "lnEb,loFV,oreX,g281,orH3,g2A9,g1HP,g2Z9,g27X,9X3V,g2wX,aJa9,aIkX,5mip,ewGr,5mKx,3QQV,aIDH,67Sh,btFb,685V",
                    "9a87": "nFZP,nGmV,dLyN,lnEb,dLj9,dLI9,67q9,3QEp,8ppP,aIhV,pcsX,mW4h,ln+3,loPh,kDBb,fhsp,fhRp,iliH,dM8h,9aQp,exfX,9Y5x,6UxV,3Q+h,9bgr,4CBh",
                    6237: "pcdj,lon9,3QrP,7ENp,bt0F,dLyN,kC/N,kDQV,ceJV,dLyH,dMnV",
                    "57fa": "m8mX,m9y1,j5lH,j5Xh,gPsb,gOSN,dLcP,dMu9,pbZH,dLyN,pczb,dM8h,c+MP,7EAV,c/cX,7FP1,8pFr,8qop,4Bqb,4CoN,cebr,4BVx",
                    "59ec": "j4YH,j5oV,c+JN,7ENp,4BdN,or2r,bsJV,67q9,mWq3,mVKp,4BSp,4CBh,mW7j,hAkp,9Y2j,4Cfp,hA7P,hAwV,9YeV,9XRV,hA7V",
                    "8df5": "nG0X,nGq1,gOZ1,gOA1,nG11,gOMr,67ax,cdOr,ce29,dLj3,5mc9,4BdH,8pYh,orKb,loJ1,ikJb,kDU1,c+Wb,gPO9,5mEb,8qlh,c/yV,pcpP,dM21,6UNx,3RG1,6V4h",
                    "6da7": "oqYb,lnQN,ikdX,g1Xx,4BjX,cdRF,3QTX,lnX1,ori3,m8Yx,mVTH,mWn1,5nk1,3RwF,ikSz,ilcx,aIWx,aIAF,ikSF,dLUz,dMex",
                    9773: "mV8P,mVQF,pbQj,j5cp,j5v9,pc79,gOD3,gP6p,ce8p,cdF9,gOD9,9abH,9aTx,j5lH,3QNN,4BSj,7FjN,9XRV,mVWV,nHc1,gPiP,gPRh,gPBz,3RwF",
                    6676: "or5z,orNp,hAkp,hzEF,or5F,lnNz,lotp,4Bn3,ew89,ewAh,4BPh,bsQ3,btgh,6713,67th,4B/H,ewMN,excV,4CrV,btUP,btsN,67FH,685V",
                    5747: "ikaP,ikG9,or2r,9aux,7EAP,aIo9,gP03,pcpV,loaz,loM9,6891,3Rqp,gPfH,ewW9,9aQj,ceDF",
                    5496: "7EDX,lny1,lnNF,9XmF,9X71,kD2P,kDrV,7FmV,5mQN,4BPh,pcdj,c+Wh,9Xz9,6U8V,3QEp,5n4j,lotp,loJ1,5nk1,6UKj,6U+1",
                    "5cbf": "oqYb,kCPh,kDQV,orZV,pcjz,kDlF,hzvb,9Xdh,j5rX,aIl1,7EWN,5mip,3Qv1,gP3b,gPHV,3RCV,ce8j,ceJV,67q3,685V",
                    "56f0": "3Qy3,nG49,nH8V,3RCV,ikqr,ilcx,m8Yr,8q2x,aI8r,dLI9,ikPx,gP9r,ewT1,btIp,5mc3,5ngV",
                    "783e": "mV8P,mVE9,mVor,hzvh,c+kN,7EKb,gOGh,gOVV,9aDV,9aoh,nH8P,mVNx,fhsp,fi89,jSMb,5n1h,3RaN,67mX,btpF,btOz,6V19",
                    7483: "mV8P,mVxV,g1HP,g24V,6TLP,9aDV,mVlj,8pCp,pcmH,mW19,m8LX,m9B9,jSnb,fhph,fi1V,jS/V,kDir,gPyx,g2kr,kDHx,3QX3,ce29,ceN1,5nk1,3Rtx,ewSX,7Fdx,8qop,aIQb,6UQF",
                    "516d": "ori3,kDoN,ikaP,ils9,4BjX,ewx9,ewPP,9Y8F,5nn9",
                    6402: "jRQP,jSh1,pbTr,5mlx,3Qv1,bsJP,fhfV,nGwb,kDoN,kDEj,orZV,pcsX,dM21,jSk3,jT69,dLI3,jSG1,gPyx,exg1,bu2b,bt6V,3QQP,4BYF,6UHh,btOF,dM1X,8q2x,6UHh,4Cy9",
                    "86ee": "pcab,mVTN,m8mX,m9y1,fgSP,j5iF,m8P3,ewx9,m95P,ewPV,j5Xb,g2W1,8pCj,dLpp,dMhF,9bjF,9arp,fhvr,5mKx,4BjX,5ndN,7FCr,3RG1",
                    "83bd": "mVbX,mWn1,pc0P,jSdV,pcw3,jSJ9,jSMb,ilfF,hAD3,hzlV,jStr,g281,dLsx,cdyV,hA7P,dMbp,bt/9,9Xa3,9YeV,dLI3,9aH1,67dF,3Qy9,dM1X,3Rh1",
                    "9e23": "9Xa3,mVf9,mVxV,bt6V,bsQ9,mVTH,pct1,g2Db,hAtN,mWgN,mVNx,c/0x,c/C1,5ngV,3Rk9,kDrP,il6h,8pRX,9bgx",
                    "9b54": "pcdj,mVTN,4BdH,8pw9,mVf9,mWn1,jS4r,jStx,ln+3,g2b9,g1Uj,jSk9,ikG3,hz+x,jSzH,jS/V,loqb,g2Dh,gPfH,jSMh,gPL1,g2nz,ewDp,8pLH,ewnN,ex6F,9Y8F,9XpN,cdUH,ceDF,ewMH,9aTx,67q9,3QEp,9XRP,5mTV,4C61,4CrV,68c9,9bgr,6UHh,6UQF,7FFz,685V",
                    "6d85": "oqV3,lnNF,ikaP,g1Up,4BjX,cdLp,nGpX,nH8V,excV,ewu1,nGq1,j5rX,j6aV,aIhP,aJ3V,5moz,5nn9,dL+P,5mTV",
                    8113: "4BgP,8pw9,aI2h,nG7h,nGq1,67n1,4Bwx,dLmb,dLF1,ikCX,ikkh,gP6j,kDix,kDU1,gPL1,pczb,j5R1,fhBN,aIo9,fhBH,3RaN,7Fwh,gPp3,btIp,9Y5x,7FIN,4Cy9,btLr,exg1",
                    9739: "oqYb,orZV,ikdX,m8n1,m9y1,ilp1,orrr,gP9x,jS1j,jSnh,hzyj,hzUh,jSCP,jSYN,hA7P,hAtN,6TLP,cdIh,fh0h,fhph,ce5h,cdLp,4Btj,9Xgp,9XCh,5mEh,5mip,gPp3,ex3x,dLUz,dMr1,c/9P,aIN9,aITj,c/sF,aIxr,aJa9,7Fgz,7FP1,aIQb,3Rnh",
                    "50fb": "fgPH,jS1p,or5F,jS1j,3QEp,9aur,c+MV,gOZ1,mVB1,mVQF,gPcF,gOZ1,5mxX,cd/1,cehN,67FN,67n1,orNj,m9oF,lojX,loM9,j5U3,g2Gp,j6aP,ex3x,ewPP,exmh,9b0P,9bw9,ex6z,3RwF",
                    "8fc4": "nG0X,jS7F,g1EH,g1Xx,6T/x,5m91,6T/r,4BPh,4Cy9,ikzP,pcgx,lo1b,loJ1,hzUb,hAqF,9Xz9,8pYh,7Fap,7FFF,aJ3V",
                    5343: "m8tb,orTF,fgSP,fi89,mVNr,3R4x",
                    "86c6": "aHUP,jRQV,jSh1,c+Q1,c+nV,or2r,6T/x,5m2H,7F11,9XsP,67th,4BVr,nGCx,nH5N,4CoN,gP9r,gPEN,btRH,btmx,4BIX,4CBh",
                    "98a7": "mV8P,mVNx,pbQj,kCSp,pc73,kD99,jRX3,jS7F,gOPF,gOD9,jRX9,jSgX,jStx,gP9x,gOZ1,jSh1,bsJP,g1Xx,dLmb,3QBh,gOSH,fhj1,ewej,ewGx,btmr,bsTh,9aob,9aTx,67Cz,674h,ewqP,67jV,nGFz,nHf9,nG/r,jSMh,9b0P,jSCV,jS/V,9bpV,g2Jr,7Fwh,3R4x,7FFz,3RJ9",
                    "816e": "4BdH,8pt1,aH/9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,dLj3,dLBV,nGzj,nH8V,fi1V,fhsp,nGzp,j5Bp,j6aV,nGS3,fhL9,67q3,btmx,aIDH,5mQN,4C2V,4Cix,6UTN,c/g3,9Y5x,btRH,7FS9",
                    "9a9a": "nFZP,nGmV,ewkF,lnB3,ew51,ewu1,67jV,4Btp,9abH,bt0F,nGt3,nH8V,jSPp,gPfN,fhm9,nGzj,j5NV,gPyx,fi89,m98X,kDBh,8p/j,dLOp,dMkN,9YbN,9XFp,g2A3,67P9,5mEb,682N,8quz,4Cv1",
                    "58f0": "mVbX,mWq9,pcjz,j5HF,j5cj,j6aV,3QrP,674h,9Xjx,g1Xx,g2PN,9bmN,bsZr,btRN,g2nz,btpF",
                    5931: "hzvb,or8N,jS4r,jSYN,dLfX,dMr1,pcjz,hA1F,dLRx,9aNh,6U8V,5mlx,3Qv1,c/3z,8qi9,67/F,3RJ9",
                    "620d": "4BdH,6TS9,9Xdh,jR+h,jT31,orNj,m9rN,ewnH,aIrh,pcjz,hA4N,aIK1,67Vp,3RCV,6V19,5mEb,8qbV,cexp,g2PN",
                    "5e05": "m8tb,aI2h,orbP,cdXV,7ETF,3Qy9,8q2r,jStx,jT31,9bt1,7FFF,pczb,3Rnh",
                    6240: "nGwb,mVf9,aH/9,7EE1,4BdN,j563,j5v9,aIo9,cdF3,ce29,4BM3,7Fdx,aIAF,mVQF,nH8V,g2nz,g2Z9,g2Jr,3Rtx",
                    "62ac": "jRNH,jSh1,bsJP,fhj1,pbTr,5mlx,3Qy9,orDX,gP09,hAA1,lowr,g30h,3R1j,c+Zp,c/yV,3RCV,67wj,685V",
                    "8d34": "9X6X,mVc1,mVE9,aIo9,iktz,bt0F,8pFx,674h,4BgV,8pOP,5mHp,pczb,dM8h,jSMb,jT69,3R7z,dLUF,dMr1,3RG1,5mNz,5nk1",
                    8247: "pbWz,m8wp,4BgP,9al9,m8q9,m8M1,5my1,3QHx,ew1P,ewx9,ikqr,g21N,cdLj,9XpN,lo1b,logV,dLLh,dL+V,9XON,67zx,3QX9,ce5b,7FgF,4Cch,4Cy9,m9c3,mWn1,g2wX,g2Z9,9b0P,9bw9,m9oz,9bjF",
                    "5f80": "j4/P,or8N,cdyP,j5oV,cdLj,3QEp,pcjz,loqh,jSgX,jT69,dLLb,dMr1,5mxX,5nqh,jSJ3,5m+9",
                    "56f4": "3Qy3,nG49,nH8V,3RCV,jS4r,jSPp,gOPz,gPvp,dLsr,dMbp,9XRV,m8Vj,7Fap,6713,685V",
                    "77fd": "mV8P,mVE9,mVrz,hzvh,dL9N,6TVb,gOGh,gOZ1,9Xw1,9Xdh,fhpb,kDoN,orE1,kDoH,kDX9,c/yV,7Fzp,4BPh,fhBH,aIZF",
                    "60dc": "ew1P,kCM9,pbTr,3QHx,lnTP,hzR9,lo1b,loM9,gOYX,gPRh,pcmH,gPfN,pcIz,gPBF,3R4r,dLRx,dMnV,3RCV,9XIr,9YeV,5mKr,5ngV",
                    "56a3": "oqYb,orlh,lo1h,lnEh,oqYh,orxH,orZV,loFV,lodN,orxN,j52X,j6h9,j5Er,g2eh,c+Aj,g1Up,g2MF,c/sF,ewGr,cd/1,9X3V,c/6H,9Yl9,3QBb,9aoh,9aNh,3Q+h,5mfb,5mEh,3RaH,9aZN,9bmN,3RzN,5mQH,5ndN",
                    6548: "or2r,lnX1,kCIX,kDix,ew4X,hzEF,ikCX,ewGx,c+xb,6Uih,4BjX,7ETF,dLI9,gPcz,orH9,j5NP,j6kh,j67H,c/sF,9bdp,5mQN,3Q+h,fhEP,aIN9,7Fzp,67/F,3RJ9",
                    "8f69": "lnuP,lo7x,pbZH,ew51,fhsp,j5oP,3QQV,9aeP,aIAF,mVQz,mWq9,dLRr,dMxh,mW7j,3Rqp",
                    "5b66": "oq/j,jSdV,pcab,kDoN,j5QX,orWN,ew4X,j531,j6e1,exg1,fh9z,fhRp,ceeF,5mNF,3QX9,9X3P,9Yl9",
                    6837: "jRNH,jSk9,pbTr,3QHx,aHRH,ikqx,hzBr,ewu1,orrr,logV,kDBb,pcLN,kDfj,kDX9,fhvr,fi1V,9Xz3,9Yoh,kDy3,3Rk9",
                    "54ac": "8psX,m8n1,m8FN,aIeN,aHY1,pcmH,m9fh,kD5X,kDX9,j5+j,fi51,j5KH,ewx9,dMer,9b79,67CF,3QNN,dLRr,9b41,67Yx,3RJ9",
                    "6deb": "nG7b,lnQN,ikaP,fh6x,4BjX,cdRF,m8LX,nH8V,jSYH,g2Dh,kDoH,hAe9,jSk3,gP9x,fhm3,fi51,aIhP,aJa9,5mB3,5nk1,fhHX,5mX1",
                    "7f28": "or2r,gOtN,hzEF,kD2P,bsJV,cdUN,66TH,8pOV,gOYX,nGq1,nGIN,gPfN,lo7r,gP6p,dLF1,g2kr,dL+V,gPsb,nGVh,nHc1,gPL1,lozz,gPyx,dM59,g2Mz,dMr1,aIhP,aJa9,c/9P,8pYh,6UE9,3RG1,aIZz,6UE9,5mQN,3QQV",
                    "5fa1": "j52X,or8N,c+nP,j5lN,fh3j,3QEp,jSdP,pcgx,m8Sb,m991,gOVP,gPp9,m8Yr,7Fdx,c/0r,c/d1,dLEX,67n1,5muV,8qi9,3Rqj,mW7p,mWn1,7FP1,67/F",
                    "9e33": "jRTX,pbZN,mVor,mVKp,j5s1,gOMx,fgW1,kCVr,j5oV,jSMb,loCN,nH5N,nGIN,ikVN,hA7V,hAwV,jT69,ikMj,fhm9,dLI3,btpF,btyX,c/mp,fhRp,fh9F,9XmF,9YeV,685V,5ndN,3Rnh,66ZX,67Vp",
                    "8d60": "bsMX,nG11,nGq1,bta1,j5fr,aI8x,6TVh,4BgV,9aAH,5mEh,pcgr,mVWV,m9fb,pcLN,m8Vj,m9y1,g2W1,g2hp,m8Vp,jSwz,hAb1,m9fb,g2Dh,hAnr,jSYN,3R7z,ceeF,ceJV,3RCV,9aWz,9bpV,5mNz,5ngV",
                    "4e4d": "ew1P,iknp,kCYF,pc41,kCYz,kDX9,kDcb,3Q+h,fhpb,fh+N,9XCb,9Yl9",
                    "4e89": "ikh3,lnNF,pc41,mVxP,mW4h,ikSF,ikqr,ilfF,9Y8F,9Xgp,ew1P,exmh,ikPr,5mKx,3QU1",
                    "652f": "lnxX,loJ1,pcgr,g2kx,g1Uj,g2Jx,aIGV,6Uf9,5mip,4BgV,fhcH,aIrh,6UE9,4Cy9",
                    "67f1": "jRQP,jSk9,pbTr,3QHx,bsJP,j5fx,hzBr,c+T9,pcmH,lotp,jSnb,jT69,c+Zj,c/C1,4BM3,4CBh,jSMb,4Cch",
                    "62fd": "j4/P,j5s1,or2r,5mlx,3Qv1,cdyP,g2b9,aIrb,kDch,kDQV,c/yV,c+Wh,hzUb,hAwV,3QTX,67IV,aJ3V,orDX,c/d1,8qlh,3RG1,68fh",
                    "5ea7": "pcdj,mVWV,m9B3,m8wp,cdLp,9Xdh,7EH9,4BdN,c+Gz,j5v9,g27X,dLRx,c/cX,j64F,g2Gj,c/C1,jSzH,5mQN,9Xmz,9YeV,5mij,5nn9",
                    "90ac": "pc0P,lnHp,fhiX,gP9x,lo7x,lnEh,dLmh,dLXN,67FN,3QX9,9aQj,9aeV,3Rk3,mW19,mWn1,gPyx,excV,9Yl9,8qE1,6UQF",
                    6021: "3QEj,pbQp,jRX3,dL9N,gOYX,kCYF,orDX,g2b9,gPL1,fibb,kDHx,5ngP,5mHp,3R1j,ce8p,ceJV,3RCV",
                    "7a17": "3QHr,mVox,m8jP,nGt9,hzR3,hziN,8pmH,hzBx,g1Xr,ce29,orH3,lodN,lo4p,c+Zp,c/yV,loFV,lodN,hzXj,hAwV,loqb,c/d1,8q2x,8pOP,8qKh,c/mj,3Rqp",
                    "97ad": "mV5H,mVHh,pbNb,j59h,j5lN,pbZN,j5fr,3QHx,bsMX,gOA1,gOZ1,bta1,bsN1,9aeP,9aK9,hzNX,orxN,lo7r,3R4x,mVTH,mWq9,mWar,ceAx,8qlh,3R7F,cekP,j5NV,j6e1,ceN1,cekV,g2tP,g2W1,btsH,8qi9,67Yx,3RJ9",
                    5395: "4BdH,8pw9,nG49,nHf9,aIeH,kC/N,kDoN,aIDN,hzUb,aIrh,7F11,4Bwx,9XFj,5mX1,kDBb,9X/h,m9uP,685V,4Cfp",
                    "4f88": "ev+H,j5cp,pbZN,j5cj,3QEp,j5oP,pcpV,mVQz,mWgN,j5+p,ewx9,kDlz,il01,9Xz3,c/d1,gPyx,dM8b,dMu9,9bmN,67P9,3QU1,aIGP,7Fzp",
                    "5d14": "nG7b,kCPh,kDQV,nH8V,pcjz,kDlF,j5iz,cdyV,g1Uj,3QEp,jSqj,hA7V,gOPz,gPHV,c/vH,c+Dx,9Xjr,9YbN,688X,67ax,gPcz,67CF",
                    "7f14": "or5z,gOwV,gOPF,kD5X,bsN1,cd/1,66WP,7F49,pcpP,m9fh,ln+3,loM9,kDir,hA7V,gPsb,kDKF,dLI3,gP09,gPL1,dMr1,5mHj,ce8p,ceJV,685V,4ClF,g2A3,3Rk9",
                    6387: "3QuX,5mip,pbQp,jRQP,jSh1,bsJP,ewqV,fhm3,nGLV,nGmV,ln+3,g2tV,g2Db,nHc1,nGS9,loqb,g2W1,4BFP,7Fap,dLXN,dLF1,bt9X,6UxV,3RdP,6UKp,9bjF,dMnV,dM21,dM53,9bdp,6UQF,4Cy9",
                    "5fff": "hzlP,jS4x,nGq1,orDX,lotp,j67N,hAA1,j5fr,j5+p,dMbp,cekV,cdIb,ewqV,j5yh,5m5P,9Xgp,9XsP,5muV,4BJ1,4C99,7Fzp,ce8j,8qbV,9Y8z,5nn9",
                    "768b": "pcab,mVxV,mVor,mWdF,gPBF,gOMx,mVox,jS4r,jSVF,gP9r,9XmF,7EAV,dLUz,9Y5x,7FS9,dLcP,dMu9,btmr,3R4x,8pFr,8quF",
                    "7f50": "ikaP,oq/p,kCM3,kD99,kCVr,6T/x,g1HP,g2b9,dLfX,6TP1,7F11,dLEX,5my1,m8P3,m9B9,pcmH,jSzN,pcFr,jSSx,jSqj,jSG1,gPm1,gP6p,jSqp,jSPj,jT31,gPL1,gPvp,jSPp,aIo3,g2qN,g2wX,dMbp,c/0r,3R4x,dLUz,dMu9,aIxr,aJ71,8q2r,8qE1,5mKr,5nn9,dM8b,5n1h",
                    6068: "ew1P,jR+h,pbTr,3QHx,kC/H,gP3h,7FpX,3Q+h,nGwh,nH5N,ex9N,ewAh,j5yb,j67N,ewPP,9bah,67/F,3RJ9,9bdj,c/C1",
                    6666: "8psX,mVc1,mVuN,9XpN,9X71,hzoX,hzHN,jSk3,pcmN,m8Yx,m9B9,7FS3,7F7h,j5Bp,j67N,682N,3Rnh,c+JH,c/Ih,hA7P,ewZh,btvP,9bah",
                    "5ac1": "j4YH,j5oV,dLyN,6TVh,4BgV,or2r,bsN1,6Uc1,pcmH,mW4h,ikG3,m8P9,m9uV,illV,j5Bj,j64F,j5U3,g2qN,c+T9,g2qH,cer9,67Sh,3RaN,9aK3,dL+V,4BIX,btC9,cer3,gPHV,dMbj,aIZF,68c9",
                    "776b": "66ZX,nG11,nGjN,7EWN,7EE1,mVAX,mWn1,jSk3,jSYN,c/vN,c+T9,gOYX,gPO9,pcsX,4C61,9b3X,9bt1,3QKz,5my1,7F7h,aIup,7F7b,4C61,4Cy9",
                    "5de8": "nH8P,nG49,5mc9,5nk1,hzs3,hAkp,btIp,bsQ9",
                    "54ed": "nG43,nGwh,ikJh,ikh9,nG49,nGIH,nH8V,illV,ikVN,nGIN,c+nP,c/F9,gPlX,ex3x,gP9r,btjp,7F11,5mlx,3Qv1,c/0r,9b41,6UKp,5ndN,3RJ9",
                    "64c2": "jRNH,jSdV,pbQj,5mip,3Qv1,bsJP,g24V,nGpX,nHc1,hzNX,lnX1,loJ1,hAA1,nGOX,ewT1,ikJb,ikVN,g2eb,g2qN,il6b,iliN,g2Db,g2PN,3QX3,c+T9,c/yV,3RCV,9Xz3,9YeV,5mB3,5ngV,c/cX,5mX1",
                    "8d41": "j4/P,pbZN,mVor,g1Xx,nGwb,nH8V,kC/H,kDX9,nGOX,gPm1,gP03,gPHV,7EQr,ewhx,ex6F,7FFF,ceez,8p/p,67n1,3Qy9,8qbP,3RG1",
                    "7f57": "oqYb,orZV,illV,ikkh,oqYh,ori3,ikG9,orH3,il39,aI2b,ewu1,hzUh,ewtX,ex9N,8qf1,6Urz,5mB9,3Qv1,btd3,8qbV",
                    "68c9": "jRQP,jSk9,pbTr,3QHx,aHRH,jS4x,hzBr,dLI9,mVTH,pcw9,mVKj,mWjV,fi1V,fhsp,mVKp,j5Bj,j6aV,5mEb,ce5h,ceN1,6891,5naF,fhL3,3Rk9",
                    9713: "oqV3,orZV,ikdX,m8n1,m9y1,ilp1,orrr,g2kx,jS1j,jSk9,hzyj,hzR9,jSCP,jSVF,hA7P,hAqF,fhpb,ewep,9Xgp,9Y8F,ex6F,ewMN,cdLj,cebx,cehH,ceDF,4BgP,5mlx,6Uc1,9XCh,9XOH,5mQN,4C2V,4CrV,7FS9",
                    5478: "9X6X,mVc1,mVuN,bt3N,bsN1,mVAX,mWn1,mW4b,j5NV,cdXV,hAhb,ceN1,j5NP,5mTV,5mrH,5nn9",
                    "59bb": "nG0X,nHc1,kCPb,kDKF,dMhF,dLmh,gOtH,gPRh,pcgr,dLRx,aHRH,aJdh,dLRr,7EQx,6UrF,5n1h,3RCV,aIQb,67zx,4BJ1,3QBh",
                    "5bdd": "pcdj,mVTN,j52X,m8n1,m9y1,j6e1,hzoX,ewep,9aeP,cdRF,kCYz,3QKF,jSk3,jSVF,ex6F,ewx9,hzUb,hAqF,9XsP,c+MV,c/yV,9YeV,3QQP,67FN,7Ft9,9Y5x,9XCh,7FgF,5n4p,3RG1",
                    "7ed2": "or5z,gOtN,gOPF,jSgX,aHUV,bt6V,66TH,7F11,jSk3,jT69,orQr,loFV,c+PX,c/9V,hz+r,9XFp,3QQV,pcsX,ewW9,9bdp,3RCV,6V4h,3R7z,gPHV",
                    "8d4a": "aHXX,nG11,nGq1,aIl1,jS4r,bsZx,9arp,4BgV,8pLH,4BPh,gP03,orH9,hAD9,hA1z,hAtN,dLLb,dMu9,7F7b,btsN,dM8b,5n1h,3R7F,btLr,6V19",
                    "517d": "pbWz,mVE9,lodH,pczh,lnKr,lozF,fhXF,fh6x,lnKx,ikqr,ilfF,lo7r,fhvx,cdyP,ceQ9,3QHr,9aux,9bjF,3RwF,5mlr,5naF",
                    "5bbf": "pcdj,mVTN,j563,mVf9,mWn1,jT31,cdyP,kD2V,gOMr,3QHx,hzKP,hAA1,hAaX,ewJF,3QX3,ewx9,ex9N,3RzN,aIo3,aJ0N,67q3,682N",
                    5254: "nG7b,nGFF,hA1F,hzvh,nG7h,kCPb,kDlF,cdyP,ewep,gOSN,ewej,ewPV,67FN,4BYF,3Q+h,8psX,aI8x,dLBV,4Bn3,7EWN,9aH1,dLOp,m9fb,9X/h,pcRX,5nk1,3Rtx",
                    "5a03": "j4YH,j5s1,dLBV,aIeN,7EQx,4BgV,or5z,cdC1,6Uf9,jSqj,jT31,fhm3,fi89,orKb,fhOh,9XFj,9Yi1,4BIX,4Cy9,dM8b,4Cch",
                    "65e0": "mVib,mWgN,g1HP,g2Z9,mVNr,gP6p,ce29,9aAN,7EQx,5m91,g2nz,5mNF,4B/N,4CoN,5ngV,8qE1",
                    9650: "3Qy3,nG49,nGt9,hzBx,dLF1,ce5h,aIl1,9arp,fhsj,fi1V,nH8V,nGzp,3R1p,6UB1,j5Bj,j6aV,fhHX,aIQh,7FCx,4Cy9,9Y2j,c/C1",
                    "4fee": "fgPH,pbWF,kCSj,3QEp,jSdP,8pOV,j5v3,pcmN,mVQz,mWgN,jSPp,g2nF,ewx9,kDlz,il01,g2MF,fibh,aIrb,ex0p,6Ulj,9b79,ceGN,3QX3,5m+9,9bt1",
                    8273: "jRQP,jSnh,g1KX,g2b9,bsGH,btgh,3QHr,pbTx,ikJb,pct1,mVTH,mWdF,il6h,aJ3P,illV,ikPx,67zx,5mNF,4B/N,4CrV,7FS9,cebr,ceJV,il6b,ceuh",
                    8084: "pbK3,jRX9,j59h,j5oV,kD61,m8q3,mVB1,dLcP,hzvh,g1Rb,g2b9,bsJP,btd9,fh9z,bsZx,7EKh,5m5V,9aur,67n1,m8Vj,m9rN,fh+N,fhsp,j5yb,j6h9,ce8j,ceN1,8pV3,8qH9,pcw3,3Rk9",
                    "611a": "nGdr,nH2F,ilfF,ikqx,nGdx,lnKr,lozF,nGCr,c/0x,cdRz,c/jh,ewW3,ceAx,aI2b,g1Rh,g2SV,ceJV,aIWx,4BjX,9aux,9XsP,5muV,4BJ1,4Cch,6UNx,aIxr,8qbV,9bmH,5nqh",
                    "8d5e": "kCIX,oq/p,m8tb,m8Vp,pc0P,j5oV,j4/P,j5Bp,dLcP,g1Up,j5lN,j5rX,ewu1,hz+x,kDir,orAV,m92H,m9y1,pczb,j5Xh,j5Er,j6kh,ewGr,g2tV,j5U9,j5+j,fhRp,ex3x,exg1,gPRh,6T/r,c+Dx,c/sF,6UQF,3Qy3,4BzF,5my1,7Fap,btpF,7FjH,3RG1",
                    "8f99": "lnrH,lnTV,pbTr,dLcV,ewqV,ikqr,3QHx,7ExH,9Xw1,pcdj,mVQF,ln+3,lon9,lo7r,gP09,hA7V,j5KH,g2x1,3QX3,ewx9,ewPV,5mTV,3R7F,btd3,btvV,8pV3,8qbV,hAe3,orWN,jSPj,jT9h,jS/P,c/vN,7FCx,3Rh1,g2Db,aIWx,685V,4Cy9",
                    "6d32": "pbNb,m8FN,j52X,g1Xx,4BjX,cdUN,dLBP,ikG9,oroj,aIup,7F49,3QNN,hA1z,ewT1,mW13,5m+9,hAkj,ex9N,orZP,3RCV",
                    "90b9": "gOwP,or8N,m8zr,m8Yx,hzO1,hzvb,hz+x,5mKx,c+xb,c/0x,7EH3,7Fdx,3Rk3,nGS9,nHf9,g2Gp,ceN1,9Yl9,8qE1,6UNx",
                    "61ca": "ev+H,jRU1,pbQj,3QEp,kCYz,hzHN,9Xz3,mVE9,mWgN,9YbN,9Yob,9XpN,pcw3,mVTN,kDir,j5KN,kDHr,il6h,lojX,ceo1,hzXj,hAqF,c+Zj,gPiV,gPlX,dMhF,3QNH,5mHp,7FjN,btz1,9b3X,5naF,3RJ9",
                    "6cf5": "nG0X,nHc1,gOwP,j5fx,nGzp,kD2P,kDKF,fhXF,fhfV,kD2V,cdBX,ce5h,7EQx,5m5V,ewJz,5mNF,3Q+h,dLUz,aIK1,6UTN,5nqh,aIJX,dMnV",
                    "88c1": "mVbX,mVQF,pbZH,j5lN,j4YH,j6kh,orNj,loCN,ikqr,fhj1,fgSP,fhBN,fhfP,7ExN,cdOr,3QHx,7F11,cdXP,7FgF,aIo3,c/0x,pcpP,g2tV,aIN9,5naF,3RG1,7FVh,g2PH,btLx,6UB1,3R4x",
                    "8d81": "kCFP,kDch,g1EH,g2hp,or5z,g1+F,g21H,67gN,bt3H,btgh,3QrP,c+xh,9aob,5mrN,4BM9,4Cy9,67zr,9bdp,ceJV,9XLz,ex6F,dLRr,hAkp,hzUb,nGS9,mW13,jSVF,hAD9",
                    "75b5": "jRTX,gOGh,cdyP,ewhx,3QrP,7ENp,aI8x,lnKx,loM9,pcgr,m991,hzNX,5my1,j5Er,67zx,dLRr,dM21,4Bzz,6UB1,jSMb,5n1h,4Cfp,4Cv1,68c9,c/jb,g2W1",
                    "5f97": "jRNH,pbWF,j5lH,cdvN,g1Uj,3QEp,orlb,orWN,hAtN,hzUh,orlh,lo1b,loCN,fhfP,fi89,bt3H,bu2h,fhUr,5n7x,3Rh1,9XFj,6UxV",
                    7779: "66ZX,mVc1,mVuN,8pLN,8pt1,dLfX,dLyN,ikwH,ike1,lo1b,lowx,pcsX,gPm1,gOYX,gPRh,mWjP,hAkp,fhI1,c/3F,aIl1,3R7z,c/3F,c/vN,3RzN,9aWz,9bmN,5mKr,5ndN",
                    "8bbf": "oqRX,kCYF,hziH,hzyp,677p,bta1,pcmH,lotp,jSdP,jT9h,jSzH,btpF,7Fap,3QNN,ewMH,excV,5ndN,3Rk9",
                    "8be5": "nG43,kCYF,gOtH,gOMx,4Btp,9aH1,pcmH,m9fh,lnWX,loM9,kDuX,fhph,fhOh,ilfz,cekV,9aNh,3QX3,67FN,8qlh,exg1,8qoj,4Cy9",
                    "59d1": "5m5P,8pFx,aIeN,ewu1,j5v9,j4/V,or2r,c+u9,8pV9,jSnb,jT9h,orKb,c/jh,3R4r,c/0x,c/yV,3RCV,67tb,685V",
                    "597d": "j4YH,j5yh,cd/1,8pIF,4BgV,pbWz,c+u9,7Fap,mVHb,mWjV,il6h,5n1h,3RaN,dLOj,dMxh",
                    "5e7b": "nGmP,fgZ9,g2b9,jStr,6719,8q2x,ce5b,5mQN,loaz,loJ1,6UWV,4C99",
                    "6d4e": "oqRX,lnNF,ikaP,fh6x,5m8X,c+GF,pcmH,m9fh,m8IP,m9Eh,m9oz,hAb1,fhvx,c+JN,jSqj,gPm1,fhUx,c/F9,c/0r,8q2x,3QQV,c/pr,3Rtx",
                    "77eb": "j4/P,pbTx,m8tb,m8Sh,g1HP,g2hp,m8Cz,bsZx,5m5V,bsZr,7F7h,nGCr,orZV,jSnb,jT69,nGS3,hAb1,c+Zp,j5Xb,dMu9,c/9P,8qbV,6UuN,3Q+h,c/sz,3RwF",
                    "4e45": "ewej,ikzV,pcdp,kD93,kDBh,ewMN,9XCh,8pS1,4Bk1,dLXH,9bah,682N,4Cy9",
                    "68f5": "jRNH,jSk9,pbTr,3QHx,aHRH,jS4x,hzBr,ewu1,oroj,orZV,g2SV,g2hp,orop,kDfj,kDQV,orH3,3Rk9,c+T3,c/F9,67mX,9aWF,c/g9,9Y5r,7FIN,68c9",
                    "70c2": "dL9H,jRU1,pbQj,bsWp,8pzh,4BgV,g1Uj,jSh1,cdLj,7F49,oroj,kDrV,j5Xb,orWN,j5v3,j6h9,c+Zj,c/yV,5mB3,5nqh",
                    "64a9": "jRQP,jSh1,pbTr,5mlx,3Qy9,bsJP,ewu1,m8P3,m9B9,pcw3,kDv1,hA1F,fhm9,jSnb,hA1F,lon3,hAqF,fibh,hAqz,jS/V,g2kr,g2PN,9YbN,9XIx,g2kx,c/0r,c/vN,4BIX,7FgF,9XY3,5m+9,3RaN,8quz,4Cy9",
                    "65c5": "oq/j,lnTV,jRQP,jSk9,jS1j,ewep,9Xdh,4BdN,fh3j,fhj1,67n1,4Bwx,hzR3,loaF,pcpV,loaz,loM9,j67H,hA1F,4BYF,6UE9,fhL3,aITp,682N,3RJ9,aITj,exg1",
                    "59b9": "j4YH,j5s1,bt3N,7ENp,4BdN,pbTr,cdC1,8pS1,lo1b,loFV,fhpb,fi89,pcsX,3Rh1,5mxX,9XLF,fhI1,9Y5x,7FLV,68c9",
                    "62ff": "j4/P,kCVx,orrx,m9c9,kDNN,jT69,jSaH,jSPp,hzEz,hAkp,ex0p,ewkF,hzEF,c+xb,c/vN,9Xgj,9Y8F,7EDX,7FP1,c/3z,5mNF,3QX9",
                    7436: "nG0X,nGzp,jRTX,jSnh,gOwP,gP6p,nGgz,gOPF,nGFz,nHc1,jSzH,jS/V,gPcz,gPL1,nGVb,gPsh,9arj,9bgx,dMex,dLpp,5mip,4Bwx,4CoN,7FP1,dLOj,9aQp",
                    "6cfc": "oqV3,lnQN,ikaP,fh6x,4BgP,cdRF,nGwb,ikzV,ils9,pcpP,gPcF,btgh,6U2F,nGYj,kDQV,ewGr,ex9N,9bdp,67IV,3QU1,ceez,8qi9,5naF,3RJ9",
                    6572: "pbTr,m8IV,m8jP,m8/F,j59b,j5yh,g2eh,g1Rh,j59h,3QuX,dLg1,dLRx,67zx,4BM9,bsWj,btd9,7F49,7ENp,bsWp,pczb,g2Dh,kDBb,kDX9,g2nz,g2SV,aIZF,6UHh,3R4x,g2tP,aIN9,67/F,3RJ9",
                    "8ba9": "nG43,kCYF,hziH,hzBx,3QHx,9Xz9,orAP,5mTV,hA7P,hAwV,5mxX,5nqh",
                    "64c5": "j4YH,j5oV,cdyP,fhcN,pbQj,5mip,3QrV,pcmH,mW19,m8FH,m9B9,jSk3,jS/V,c/yV,c+T9,jSk9,hz+r,hAnx,fhUx,fhvx,hz+x,btgb,btRN,682N,67th,btgh,9aNb,9bmN,4Bzz,4Cy9",
                    "62ed": "jRNH,jSdV,or2r,5mlx,3Qv1,bsJP,ewqV,j5v3,j6h9,loIX,nH2F,fhiX,fhI1,fhvr,6Uox,5muP,7Fq1,pczb,dM8h,8qrx,3RG1,6V4h",
                    "55e3": "nG43,nGwh,ikJh,ikh9,nG49,4BjX,fgW1,fhsp,5mHp,3QU1,aHXX,aIup,fh6r,67ax,fhfP,67jV,nGFz,nHc1,5nk1,3Rqp,j5Er,j64F,7FjH,fhBN,fhUx,9bgx,9aZN",
                    5802: "nGdr,kD61,pcgr,kDix,kDuX,nG/x,g1O3,jRX9,jT31,g2W1,gOPz,gPvp,cexp,cdRF,gOPF,8pzb,8qxN,4BgP,4Cy9,cebr,4BVx",
                    5154: "ikdX,pc41,mVuH,mW4h,ikPx,iknj,ilfF,c/sF,c+Ap,iknp,ikPr,ce8p,8pS1,67ax,4Bk1,btpz,5mNF,4B/N,4CrV,7FS9,aIQb,8quF",
                    "868a": "bsMX,jRU1,jSk9,c+T9,c+r1,pbWz,7ETF,66WP,9aNh,bt9X,6Uox,pcpP,lotp,jSqj,jT9h,jSYH,ex6F,9bdp,6UxV,5mNF,3QX9,hA1z,c/9V,9bah,6UQF,4CBh",
                    "53a6": "5m2H,9Xa9,cdIh,nG7h,nHc1,lnKr,loFV,logP,jSwF,j5oP,j64F,ceDF,cdXV,j5oV,gOVP,gPBF,ewqP,ex6F,7EQr,9XCh,cebx,9XCb,9Y5x,7Ft9,67FN,5mHp,4BM9,3QHx,8pYb,67FN,4Cfp,3RG1",
                    "5ffb": "fgPH,kCM9,pbTr,3QHx,lnQH,hzR9,3QQP,8p/p,aIxx,nGCx,os11,gP9r,gPRh,gPyr,3Rtx",
                    8859: "j4/P,or2x,cdvH,iktF,fh0b,3QBh,nGjH,nGLV,jSaH,jSCV,fhBN,nGwb,fhj1,fh9z,fhL9,5mxX,cd/1,cekV,5mTV,6UbX,6UxV,mW4b,mWn1,gPsb,gPRh,gPEH,5ndN,3Rnh",
                    9890: "nGt3,nG11,6TP1,6Uih,nGjH,ikwN,iknj,ikG9,ce29,cdLp,iknp,cdUH,6U5N,nGzj,nHf9,nGVb,j5NV,9XIr,j5Ex,j67N,9YbN,g2A3,9XV1,6UuN,3QX9,8qoj,4Cy9",
                    7528: "3QrP,9arp,nGap,nH8V,5ngV,3Rqp,hzyj,hAwV,cdLj,ceJV,nGFz,67CF",
                    "60a6": "ev+H,j531,3QEj,pbQp,jS7z,g281,pcab,lodN,jSMb,pcLN,jSqj,jSYN,c/vN,c+Zp,jSqp,3QQP,67zx,7FgF,c/6N,c/jb,5n1h,4Cfp,4Cv1,6V4h",
                    "5f70": "pbZH,mVE9,mVbX,mVTN,lnHj,j5iF,ikG3,lo7x,ikaP,ikVN,g1Rb,g2kx,aIxx,aI2h,g1Rh,c+xb,c/0x,8ppP,8qbV,aIhP,3QQV,hAaX,nH8V,btvP,ex3x,hAA1,3R7z,6UNx,bt/9",
                    "7f6e": "oqYb,orWN,jSYN,jR+h,oqYh,ori3,jSk9,orDX,jSG1,hzoX,hAA1,jSwz,fhph,4Bwr,fh6x,fhUx,4Cix,cdOr,ceAx,9Xjr,9Y5x,7EQr,7FCx,4BgP,4Cy9",
                    "914c": "mV8P,mVTN,mVrz,fh9F,cdIh,mVAX,dLF1,c/0x,9XIr,9Xa9,3Qy3,j569,j5Ex,67zx,6719,g2qH,orKh,jSFX,jT31,6891,3Rtx,ewSX,9Y8F",
                    2169: "5mfb,5my1,5mWX,5ndN,5n7r,nGdx,nG7b,nGq1,nGOX,nH5N,nG/r,5mlx",
                    "7afa": "pbNb,hziN,kDcb,kCPh,gOPF,pczb,hA4N,kD+b,kDBh,gPBF,cdIb,ceGN,4BdH,4CBh",
                    "82de": "m8jP,m9B9,pc3X,jSh1,pcsX,jSG1,j5lH,g1Up,dLcV,hzEz,hAqF,9Y8F,8qi9,7FS3,4CrV,4BFV,5mlx,ewhx,ewPV,9XRV,9Xjx",
                    "67c4": "3QHr,pbTx,j4/P,j5s1,aHRH,j5fx,hzBr,dLF1,mVE3,mWq9,mW13,hAe9,ewT1,9aTx,ewSX,9YbN,3Q+b,hzUh,hAwV,685V,3Rtx",
                    "4ea7": "orrr,m95V,lnHj,loJ1,jSgX,gP6p,g2tP,jSPp,g2Z3,g1Up,9Xgp,6TVh,3QrV",
                    9504: "hziH,or5F,kCPb,kD61,gOzX,gOZ1,cdyP,cd/1,gOMr,4Bwx,8pS1,67tb,mVHh,mVWV,7FmV,gP3b,gPiV,cekP,ce5h,4BIX,8qi9,j5U3,j6e1,5ngV,3Rtx,pcFr,dMex,7Fwh,3R7F",
                    "4ee3": "ev+H,orbV,kCVr,3QHx,dLyH,ils9,nGVb,jSYN,pcjz,gPfN,8qlh,3RCV,6V19",
                    "789f": "mV8P,mVB1,mVor,dL9N,674b,g1Rh,g24V,9aDV,9aoh,ln+3,loM9,pcsX,il01,ilfF,pcIF,pcgr,fhvx,fi51,ce23,ceQ9,fhL3,3Rk9,5mxX,cer9,68c9",
                    8033: "nFZP,nHf9,nGjH,9aAN,nGVb,4Cch,j5Xb,j5lN,ewnH,ewZh,9aeP,9Yoh",
                    "6c1f": "j52X,pbWF,mVor,mWn1,jS7z,jSYN,hzs3,hAnx,9Y5x,5nk1,7FVh,fh3j,fhOh,ceuh,cdLp,9Xgp,9X/h,7Fwh,67IV,hzKP,9aDV,5mip,hz+r,3R4x",
                    "8ddf": "nG7b,nGwh,hzUh,hzvh,nG7h,hzHH,7EWN,dLyH,dLLh,ewbb,6TVh,66WP,8p/p,7Fwb,4BYF,nGFF,nH8V,fi1V,fhyF,j5Hz,j6aV,fhL3,9Y5x,4Cy9,aIWr,dMu9",
                    "56fd": "4Bn3,nG49,nH8V,4CrV,kCVr,kDHx,g21H,g2Dh,9Xjr,9Y5x,kDir,9XIx,ewPP,btFh,6713,685V",
                    "80e1": "kCFP,kDlF,or8H,fhcN,674b,fh0h,fhph,8pYh,8pzh,3QX3,7FgF,btsN,nGIN,nH8V,5ngV,3Rtx,ikVH,illV,c/yP,c/6N",
                    7691: "5m8X,kCJ1,kD2V,8pOV,8pt1,ew4X,ewqV,or2r,kCPh,nGwb,j5yh,j6aV,nH8V,pcsX,j5R1,g2eb,g2PN,btRN,btjp,67wp,4BYF,4CrV,7FS9",
                    "62a5": "3QrP,5mlx,pbTx,jRNH,jSk9,fhm3,cdvN,3R1j,orop,orZV,j64F,hAe9,fhsj,fi1V,btOF,8qop,4B/N,dLXH,8qop,685V,4Cy9",
                    "6ce2": "oqRX,lnNF,ikaP,fh6x,cdOr,9Xgp,8pzh,4BgV,4Bwr,8pOV,cd/1,kD61,kDQV,hAnx,pcpP,fhEV,fhiX,fhXF,btIp,67CF,3QU1,c/0r,9b0V,67Vp,3RG1",
                    "655e": "mVbX,j5fx,pbZH,gOSN,j5v3,nGIN,3Qy3,gOD9,gPcF,67CF,4BM9,9aur,ewhx,ewx9,8pV9,9aux,pcCj,jSG1,gPfN,jSFX,jT69,jSYH,dMhF,9bdp,3R7F,g2wX,9Y2p,682N,3RJ9",
                    "5ddd": "5m5P,9Xgp,ewhx,nGdx,mVQz,6UrF,nH8P,4CrV",
                    "80c6": "4BdH,9Xa9,nG49,nGq1,67n1,4BzF,ikh3,ikD1,dLEX,dLj9,9aTr,nGCx,nH8V,9bpV,hz+r,hAwV,btmr,btUV,5mEb,5nqh",
                    "5b9a": "pcab,m95V,hzs3,lnB9,loJ1,hAA1,gOMr,gPBF,gP9r,5mKx,btmr,btUV,dLvz,8pFx,3QrV,8pIz,4BSp,4CBh",
                    "6cd5": "nG43,jSaN,ikaP,fh3p,cdRz,4BgV,jSgX,jT31,dLyH,dMu9,orAP,dL+V,c/9P,4BFV,682N,aIQb,3RG1",
                    "8f85": "lnrH,ln+9,pbWz,ew1V,ewx9,7EAP,9Xz9,hzEz,3QKF,lo4j,loM9,orTF,m9y1,pczb,5n1h,3R4r,hz+x,hAwV,5ngV,3Rtx,dLRr,dMnV,9XIr,9YeV",
                    "9f9a": "m8mX,m9y1,pcsX,mW7p,pcdj,kDch,hzKV,ew89,kDlz,gPcF,fhEV,fh+N,hAwV,jSSr,g2eh,cdIb,ceGN,9bw3,9aeV,ewtX,9aH1,btyX,ewT1,3Qy3,7F11,7FmP,3RzN",
                    9163: "mV8P,mVNx,mVor,g1Xx,c+u9,mVxP,dLBV,dLLh,3Qy3,j569,j5yh,5mEh,5mc9,9Xa3,9XCh,ikPr,ilvh,orAP,3RdV,orZP,3RCV,c/9P,c/yV,67IP,685V",
                    "82b1": "lnuP,loM9,pc0P,ikzV,pcpP,ikYV,9X3P,dLvF,hzR9,dLvz,3QKF,8pV3,cer9,g2PN,hA4H,67FN,5mTV,5ngV,8qH9",
                    "673a": "j4YH,j5v9,pbTr,3QHx,aHRH,j5fx,gOMr,c+Q1,3QQP,7Fap,9XIx,mVNx,mWax,5n7x,4ClF,4Cv1,8qKh",
                    "7ee9": "pbWz,hzlV,hzEF,kD61,cdyV,ce29,6TLP,8pS1,mVHb,mWq9,jT2X,jSqp,gP03,gPO9,pcw3,gPp9,7Faj,dLOp,dMnV,7FLV,cer3,8qf1,5mNF,3QQV,7Fzj,3RJ9",
                    "8d31": "aHXX,nG11,nGt9,aIo9,kCYz,aI8x,5m5V,9XpH,6Uih,ikJb,jS/V,dLLb,fi51,4BM3,6UxV,c/yV,orKb,loCN,pcsX,aIN9,5n7x,3RCV,68c9",
                    "5efa": "m8gH,m8IV,fgW1,fhfV,8pFx,4BdN,cdBX,7EQx,4BSp,4Cy9,m8P3,m9oF,g2MF,g281,j5oP,j6h9,c+PX,c/vN,9aDP,9bt1,pcpP,67IV",
                    "664b": "oqRX,os11,m8wj,j5oV,orlb,gP3h,orAP,gPiV,j5Xb,m9rN,gOwP,gPO9,3QHr,ewhx,ex6F,3RwF,aI8r,aIZF,5mlr,5naF",
                    "9cb8": "jRQP,pbTx,m8tb,m8P9,iktF,ikh3,ikG9,9Xz9,9Xa9,ikh9,ew83,ewx9,iktz,9XmF,5m5P,7F7h,pcpP,m9ip,lo1b,loPh,hA1z,hAwV,ceJV,ceeF,hA1F,4BPb,9XRV,ceub,5n1h,3RdV,9Y8z,68fh",
                    "83cc": "mV5H,mWth,pc3X,jSh1,jSFX,pct1,3Qy3,j569,j6aV,3RCV,fhcH,g2Dh,c+Dr,c/px,fhvr,6Uox,8pIz,cebx,9XV1,8qop,5mc3,5ngV",
                    5361: "g1HP,g2Z9,pcdj,3R1p,m8Vj,m9rN,c/3z,aIN9,7FFF",
                    "7aa5": "pcab,mVQF,j52X,mVc1,mWn1,j6e1,ln+3,j5cp,logP,j64F,g1KX,g2b9,cdyP,ce5h,iktz,9aux,4BgV,9Xmz,7F49,9aTr,hz+x,hAtN,9bmN,ewW3,9b41,5mNF,3QU1,aIQb,4Cch,3Rqp,3RG1,68c9",
                    "62ec": "jRNH,jSk9,bsGH,fhm9,pbTr,5mlx,3Qv1,mVHb,os11,mW13,c/g9,ikG3,ilvh,3R1j,c+Zp,c/yV,3RCV,5mHj,5ngV",
                    5386: "5m5P,aI2h,nG7h,nHf9,gOSH,gPHV,682N,4C99,4Bwr,8pV9,c/0x,lodN",
                    "54e9": "9al3,m8q9,m8IV,bt6V,bsQ9,nGwb,nH8V,excV,ewAh,nGwh,j5yb,j6aV,nGS3,4C99,9Xz3,9Yi1,4BFP,4Cy9",
                    "9f99": "jRTX,jT69,pcdj,j5yh,fhm9,bt6V,8pIF,3QrV,orDX,lozF,jSzH,67FN,4C2V,4CrV,7FS9,g2Mz,ceuh,9aZN,67q9",
                    "7bd3": "jRTX,pbWF,mVor,mVNx,mVuH,jSk9,kDlz,pczh,mVZX,mWth,mW4b,jSVF,jS7z,hzO1,gPiP,j5+p,jStr,c/0x,g1KX,g2W1,cdIb,dLBV,g2kx,dM59,btUV,9X3P,9Yl9,cebr,7EWN,67IV,3RCV,9Y2j,67CF,4BJ1,3QBh",
                    "6ee1": "oqRX,lnNF,ikaP,g1Up,5m8X,cdRF,m8IP,m9y1,pcgr,ikPx,pcCj,il9p,iktz,ils9,3QQP,fhfV,fi51,5nk1,3Rtx,gPcz,cebx,7F49,cebr,aIGV,gPvj,btFh,6UuN,btFb,8qxN",
                    "732b": "oqRX,kCVx,gOSN,cdXV,7EWN,67dF,3Qv1,hzlP,orbV,bsJP,g21N,lnWX,loPh,pcjz,hA1F,pcFr,hAnx,3Q+b,fhph,fi1V,3RCV,aIrb,aJ3V,5mEb,5ngV,fhL3,5m+9",
                    "94ed": "ik7H,pbTx,lnEb,lo1h,hzoX,hzO1,c+nP,c+T9,hzBr,4Bwx,8pV9,ikMj,pcw9,lodH,loFV,hAnx,dL+V,aIo9,ikSz,fhL9,3RaH,cehN,ceN1,3RG1,5mQH,5nk1",
                    "62b9": "jRNH,jSh1,bsGH,gOZ1,pbTr,5mlx,3Qv1,kD93,kDX9,fhm3,fi51,pcw3,3Rk9,67jP,9XIx,fhL9,9Y8F,68fh",
                    "60a8": "ikdX,or8N,m8zr,cdOx,j5rX,m8Vp,oruF,m8Vp,m9y1,j64F,dLBP,hz+x,j5QX,dM21,ceeF,hAkj,dMr1,5m8X,8pFx,9XsP,5muV,4BJ1,4Cch,7FCx,btjj,7FmV,aIWr,6V19",
                    "6d53": "oqYb,lnNF,j4/P,g1Xx,4Bn3,cdRF,hzNX,lnX1,loJ1,hAA1,orDX,ikVN,ewGx,9XpN,ewGr,3R4x,7Ft9,gPlX,ceuh,9bgx,4Cv1,btIj,fi51",
                    6279: "j4YH,j5v9,bsJP,ewu1,or2r,5mlx,3Qv1,oroj,4BSp,67IV,hzXj,hAe9,orKb,5n1h,4Cfp,4Cv1,6V4h,g2Db,j6h9",
                    "5c41": "4BgP,9Xgp,nGap,nH8V,j6aV,j5cp,hzNX,4BJ1,7FgF,c+PX,c/6N,hAaX,5mX1,4C99,4CrV,6V19,btyX,exj9",
                    "5f03": "pc73,mVTN,lnxX,loJ1,lo4j,g1Up,gPyx,j5U3,fh+N,bsJP,bt/9,ewtX,9aH1,6U5N,3Qv1,ewW3,3Rk9",
                    "8fc1": "nFZP,kCVx,g1EH,g1Up,7ENp,5m5V,7ENj,4BSp,4Cy9,m8LX,nH5N,m95P,6UxV,g24P,g2W1",
                    "66f2": "pc73,5mB9,pcsX,5mX1,3QBb,j59h,j67N,3RzN,c+xb,c/vN,5mfb,5ndN",
                    6743: "jRQP,jSnh,pbWz,3QKF,bsJP,jS7F,hzEz,dLLh,mVE3,mWn1,g2MF,btFh,6UrF,4BJ1,mVQz,ewPV,8qrx,5nn9",
                    "9cc3": "j4/P,or2x,m8tb,m8P9,iktF,9X6X,ike1,ikJh,9XCh,9X71,ew4X,ewAh,iktz,9XmF,5m5P,6Uih,nGCr,nHc1,exg1,ewGx,nGCx,j5Er,j6e1,nGVb,ewZh,c/jb,9bjF,btUP,6V4h,685P,3RwF,3Rh1,4C2V,aIGV,aIAz,5mEh",
                    "626b": "jRQP,jSnh,pbWz,5moF,3Qy9,bsJP,fhph,mVKj,mWjV,4CrV,fhvr,fi1V,6Ulj,6UWV",
                    "751f": "c+nP,lnNF,hzyj,hAwV,cdLj,ceDF,4BgP,4Cy9,orrr,4BVx",
                    "72ee": "ikaP,orbV,oqRX,lnHp,jS4x,gOPF,dLyN,7EWN,67dF,4Bn9,aHUP,g1+F,ln+3,aIo9,pcgr,9XIx,7Fap,3QQV,mVTH,mWq9,7FmP,j5NV,j6e1,9Yi1,8quF,mWar,3Rtx",
                    "7ad6": "oqYb,fh0h,pc0P,ewqV,nGwb,nH5N,kDEp,j5U9,hA4N,g2eh,nGzj,jSCV,hAkp,g2W1,fhsj,c/6N,cdF3,ceJV,aIeH,6Uih,5mNz,aIQh,5m5P,5nn9",
                    6813: "jRQP,jSh1,pbTr,3QHx,aHRH,jS4x,hzBr,dLF1,gOYX,orE1,gPO9,gP6j,gPHV,btgb,btUV,5mxX,5nn9,gPlX,5mX1",
                    "584c": "j4/P,j5s1,pbQj,9Xgp,8ppP,cd/1,nGwb,nH8V,hAwV,hzUh,nGwh,kDcb,kDQV,ewtX,ewPV,5mTV,3R1p,ce5b,aIxx,6UbX,aIGV,fhL3,fi51,5nk1,3RwF,c/jb,aIWx,6UHb,9Yi1",
                    "53f0": "pcgr,g1L1,gPEN,m98X,fi89,3QHr,c+Dx,c/sF,3RwF,5mlr,5naF",
                    "94c1": "ik7H,pbWF,lnEb,lo1h,hzs3,hzO1,cdyP,ce29,hzBr,4Bwx,8pV9,g2eb,mVQF,j5Er,j6h9,dLLb,dMu9,pczb,c/g9,9b0V,67CF,3QU1,c/g3,9Y2p,7FFF,685V,4Cy9",
                    "901a": "nG0X,jS4x,g1EH,g1Up,7ENp,5m5V,7ENj,4BPh,4Cy9,nGmP,nH2F,kDrV,lo7r,j5R1,7F0X,ikD1,iliN,9bmN,7FCx,ewtX,ex9N,bt9X,btRN,ikYP,7FmV",
                    "65fa": "5m8X,m8n1,m8IV,7EZV,7EE1,fhfP,fgW1,mVE3,mWn1,ewAb,excV,5muP,5nn9,mVZX,5mX1",
                    "552f": "8psX,lny1,lnQN,9XpN,9X71,fhiX,j5Bp,orxN,orH3,lowx,jStr,jT31,fi1P,fhsp,aIuj,aJ3V,68c3,67wp,j5Bj,3R1p,jSMb,67Sh",
                    6670: "6TOX,mVc1,mVrF,9axF,9ai1,g1KX,g1+F,j5lH,j5KN,pcab,3Q+h,aIbz,j5yh,gP3b,dLXN,3R4r,8qbV,ceo1,mV+1,nHc1,g2wX,g2Z9,g2Mz,3RwF",
                    7184: "ew1P,jRX9,oq/j,cdIh,9al9,4BgV,gOPz,jSk9,bt0z,9aH1,orH3,m95V,m8Vj,m9rN,ceGN,ce8p,m8Vp,ikMj,iliN,fhsj,fh+N,4BCH,9aNh,9aWz,4BYF,3RaN,3Rqp,67/F,aIJX,7Fzp,9bmH,68fh",
                    9500: "ikaP,pbTx,lnEb,lo1h,hzs3,hzR9,c+nP,c+Wh,hzBr,3QHx,9aK9,oroj,kDoN,pczb,hAhh,jSVz,os49,3R4r,hz+x,hAA1,5nk1,3RwF,dLRr,dMr1,9XIr,9Yi1",
                    6954: "jRQP,jSaN,pbQj,3QEp,bsGH,jS1p,iknj,fhcN,mVxP,mVWV,jSgX,jSzN,g24P,g2tV,pcdj,c+Zp,nGS3,nH8V,g2SV,ex3x,nGYj,j5+p,ewT1,aIhP,aJa9,dM1X,9b0V,67zx,3QQV,9XUX,6UKp,5ndN,3RJ9",
                    "55a7": "8psX,m8n1,m8FN,aIeN,aHY1,pcmH,m9fh,j5v3,ln+9,loJ1,j6e1,hzXj,hAtN,ewDj,ex9N,8qxN,8p/p,ewDp,btjj,btRN,4BFP,4Cy9",
                    "7a74": "pcdj,m92N,gOD3,lnB9,loFV,gPHV,4BjX,7ETF,cd/1,gP09,hA7P,btC9,6UQF,4Cy9",
                    "6f3e": "oqYb,m8CF,ikaP,g1Up,5m8X,cdOx,pcab,mVQF,m9c3,pcFx,m8IP,m9y1,j6aP,j5s1,m98X,gPm1,gPO3,gOVV,g2qH,dM59,9XsP,9XIx,5mrN,c+Wb,c/d1,5mX1,3R7F,btyX,7FCx,5nn9,aIQb,c/yV",
                    8200: "m8mX,orZV,kCSj,hzHN,lo4j,hA4N,gPp3,lozF,g2eb,fh0h,3QBh,fhBH,fh+N,3RzN,aI2b,aIrh,aIGP,aJ0N,5mfb,5ndN",
                    "5bc5": "pc73,mVQF,ikh3,m8q9,m9uV,illV,j5fr,j61x,j5Er,9aTx,g1Uj,g2MF,9bjF,9arp,g1Up,c+Aj,c/sF,3QuX,7F49,7FpX,3RG1",
                    "83b9": "m8mX,m9B9,oreX,j5s1,orH3,j5U9,ew83,ikh9,ilp1,exg1,ewhr,ex3x,9Xgj,9YbN,4BjX,4Cy9,ewGr,4BVx,8qi3,67Yx",
                    6108: "ikaP,kC/N,pcjF,nGFz,kDEp,ilvh,jSgX,jSMh,aI5j,hzyp,hzXp,btjp,aIo9,fh3j,fhsp,c+Zj,c+Ap,hAaX,ceo1,ilfz,btOF,3Rnh,4BgP,8pCp,8pOP,4BFV,3QU1,3Rk9,67Vp,9aTr,6UuN,8quz,5nn9",
                    "6e0a": "nG7b,lnNF,ikaP,fh6x,5m8X,cdRF,oreX,9Xw1,67gN,3QEp,lo4j,ikSF,hAe3,lowx,fhpb,fhXF,orAP,4C2V,7F43,fhEV,9bjF,orZP,3RCV",
                    "624e": "jRQP,jStx,pbZH,5mrN,3QBh,aHUP,fhsp,pcsX,5mX1,4C99,4CrV,5nk1,7FS9",
                    "70b8": "ev+H,kCM9,pbTr,aI8x,7EKh,4BgV,cdOr,7F7h,gOMr,kD99,fhm3,jSwF,orAV,jSwz,jT69,jSCP,3RdV,ewPP,exg1,9b0P,9bw9",
                    6014: "fgSP,kCM9,pbTr,3QHx,kC/H,gP09,nGt3,nHc1,nGS3,5m+9,fhL3,fi51,gP6j,5mHp,5muP,5nn9",
                    5431: "8psX,m8n1,m8FN,aIeN,aHY1,kD5X,kDX9,pcsX,fhI1,fhm3,fh+N,9Y2p,5mKx,3QQV,fhsj,9XRV,6UKp,3RJ9",
                    "52a9": "7EKb,nG7h,nGt9,8pV9,ikkb,ikG9,dLmb,dLI9,6TLP,9aTx,j5Bj,j6e1,6891,5ngV,3Rqp,orKb,gPp9,9XRV,67zx,3QU1",
                    "4e13": "kCPb,kDQV,gOwP,gPO9,orrr,cdUN,ceDF,67CF,8pIz,3Rnh",
                    "832d": "mV8P,mWq9,pc0P,jSdV,jSJ3,pcw9,jSnb,hA7V,gOwP,gPO9,g27X,bsQ9,g2wX,ceJV,c/jb,9XRV,7Fdx,5my1,3Qy9,c+JH,9aNh,5m+9,3RCV",
                    6591: "66TH,9Xw1,7ENj,m8wp,ew1P,ewqV,m8gH,m8IV,ori3,loaF,jSdP,jSJ9,jSzH,fhBN,aIxx,6Uf9,3QKF,hzNX,7FmV,m98X,m9Eh,m9oz,4ClF,ewSX,exj9,4BYz,4CBh",
                    "8fb9": "mVf3,jSaN,g1EH,g1Xx,6T/x,4BgV,6T/r,4BSp,4CBh,j5rX,j6aV,9bmN,7Fwh,pcpP,j5KN,ewJF,aIup,7F11",
                    "7b56": "jRQP,pbTx,mVlj,mVNx,mVrz,jSh1,lo7r,pcw9,mVWP,mWq9,mW4b,jSVF,ikaP,ils9,jStr,3R4x,9Xgj,fh3p,fhXF,9Y8F,5m5P,8pLN,fhvx,9bah,6891",
                    "5c3a": "5m5P,9Xgp,ewhx,nGdx,nH5N,hAtN,hzBx,hz+r,cekV,8qop,4Cy9",
                    "50ac": "pbZH,fgPN,jS1j,3QEp,oreX,jSh1,jS/V,orZV,pcsX,jSG1,j5Bj,cdRF,fhm3,3QX9,j5NP,gPsh,g2eb,g2W1,c+Wb,c/yV,9aNb,9bpV,5mEb,5nn9,g2wX,5mX1",
                    "98a0": "m8jP,m8Yx,pbZH,j5fx,8pw3,j569,j5yh,8pYh,gOD3,gP3h,dLLb,dLj9,bsQ3,btgh,8ppP,8q2x,3QrP,6T/x,7F0X,5mHp,mVQz,mWq9,mW7j,j5U9,8q8H,j5KN,j6aV,8qAV,g2Db,7Ft9,3Q+h,6UNr,3RJ9",
                    "54c6": "8psX,mVc1,mVuN,bt3N,bsN1,j5v3,loaF,pct1,m8/z,m9rN,hAhh,dLLh,jSzH,hAe9,9XCb,btvV,g2Jx,dM8b,dMu9,9bjF,6UHh,5mTV,3QU1,9XRP,7Fzp",
                    6124: "ew1P,jRX9,or2r,3QHx,jSaH,gOZ1,m8P3,m9y1,orDX,kDv1,ikCX,ilvh,kDir,g2kx,kDKz,g2MF,7F7b,ewAh,excV,7FLV,cenX,7FmV,5mNF,3QU1,6UKj,3RJ9",
                    "9ad8": "pcab,mVTN,m8jP,m9B9,jS7z,jSPp,g2Gp,g1+F,jS7F,4Bn3,dLj9,dMnV,5ngV,3Rnh,bt3H,btC9,7Ft9,7EWN,bt3N",
                    "60ef": "ev+H,jRX9,oq/j,3QEp,jS7z,g24V,nGwb,nH5N,gPEN,gP3h,nGwh,nGOX,gPm1,jSdP,jT9h,7F43,ewx9,excV,7FLV,cenX,6UuN,4BPh,3QQV,7Fwb,4Cy9",
                    "54fc": "9X6X,m8n1,m8CF,bt0F,bsN1,pcjz,mW19,m8IP,m9B9,j5yb,j64F,fhXF,fhph,j5yh,c+PX,c/yV,9XV1,5mX1,3R4x",
                    "8d3f": "aH/3,nG49,nGt9,aIo9,j5iz,9aux,4BgV,9aDP,5mHp,lo1b,loPh,pczb,j5NV,ewAh,3RaH,hA4N,hAwV,685V,3RwF,dLXH,dMnV,9XOH,9YeV",
                    "6b7c": "nG0X,nGzp,nGgz,j5cp,dLcV,j5cj,j5Bp,bt6V,5m91,ewhr,c+MV,mVQz,nGVh,os11,nGVb,3Rnh,fhsj,fibh",
                    "7aed": "oq/j,lnQN,jRQP,jSnh,gOD3,bsWp,hzR3,8pIF,6TLP,9aNh,nGCr,nH8V,hAwV,hz+x,nGCx,kDir,kDQV,btd3,gPiV,dLUz,dMu9,5nn9,3Rtx,c/mj,8qbV,btFb,8qxN,btmr,67zx,67/F",
                    5177: "aI8r,or2x,orQx,aIWx,lnKr,lowx,hAnr,hzBx,ewhr,ex3x,aHUP,aJa9,4BjX,9aH1,9b3X,5nk1",
                    "7a9f": "pcdj,mVTN,j52X,mVc1,mWn1,j6e1,j5cj,ln+9,m92H,j64F,5m5P,9aoh,cdLp,hzyp,hAqF,ex6F,ewep,c+JH,9XpN,9Y5x,c/px,8pIz,4BzF,5ndN,8qxH,3RzN,dLUz,5mNF",
                    "808b": "4BgP,8pw9,cdIh,nG7h,nGq1,5my1,3QKF,hzvb,hzO1,cdIb,cd/1,j5yb,j6e1,5ngV,3Rtx,pcw3,ceo1,7FjN,3Q+h",
                    "541d": "pcdj,mVTN,m8mX,m9y1,m9lr,hA7V,fhph,dLvF,c+r1,jSaH,g2nF,ewZh,c/F9,3QKz,cdRF,ceAx,3Rtx,5moz,5n7x",
                    "903b": "nG0X,j5iF,g1EH,g1Up,7ENp,4BgV,7ENj,4BPh,4Cy9,nGpX,nH5N,iliN,ikD1,nGq1,nGFz,ikSF,nGVb,il6h,bt6P,ewGx,hA7V,ewGr,excV,9X/h,7FgF,6Uf9,ceez,9XV1",
                    7720: "6TOX,nG11,nGmV,8pOV,8pt1,dLfX,dLBV,j5oP,j531,6UE3,3R1p,orop,orZV,illV,ikMp,dLOj,dMu9,il6b,9Y2p,3RCV,6V4h",
                    "502a": "ev+H,jS1p,or8N,jS1j,3QEp,orAP,mVE9,dLI9,dMnV,mWjV,mW4h,ikG3,ikYV,il6b,illV,dLXH,9aWF,67wp,3QNN,dM8b,5n1h,4Cfp,4Cv1,6V4h",
                    "80da": "4BdH,9Xa9,nG49,nGq1,67n1,4Bwx,dLj3,dLF1,ikCX,ikh9,mVHb,mWq9,mW7j,jSJ9,ce5h,jSJ3,5m+9,gPyr,ceQ9,5mEb,5nn9",
                    "4e03": "c+nP,hAA1,ori3,67q9,5mEh,4BSp,4ClF,5ndN,685V,8qE1",
                    "6c81": "nG7b,lnTV,ikdX,g1Xx,4BgP,cdOx,8pLH,g2b9,nGIH,j5+p,j5Hz,5mNF,4B/N,4Cfp,7FFF,g2Mz,9bw9",
                    5197: "hzs3,mVf9,mWjV,hAwV,4BgP,6U2F,9aDV,hzKV,hAb1,67M1,5m+9,5ngV,7FS9",
                    "86c7": "9X6X,jRU1,jSk9,ce29,cdC1,or2r,67ax,4BgP,7F49,9XvX,5mHp,orAP,lotp,hzXj,lo4p,loFV,hAwV,gPfH,5mQN,4C2V,4CrV,6V19,cehH,excV",
                    "852c": "m8jP,m9B9,pc3X,jSh1,pcw3,jSJ9,hzoX,hzR9,fh9F,6U2F,cdRz,ce29,dLmb,674h,5m5P,7F49,jSzH,il39,hzUb,hAA1,hAaX,c+Zp,dMhF,g2Gj,c/yV,3QNH,4BM9,67wp,8q2x,btmx,btyX,4C61,btLr,5n7x,4ClF,4Cv1,6V19",
                    "8bc9": "oqYb,lnTV,hziH,hzyp,5mip,9Xw1,3QQP,7F7h,9XFp,nGzp,orZV,hzXj,hAD9,hAkj,3Rqp,dM1X,9bw9",
                    "8e22": "nG43,nGq1,ikD1,ikh9,nG49,iktz,7ETF,dLvz,dLI9,ew83,6719,5m5P,8pV9,nGFz,nH8V,gPHV,gPcF,nGFF,kDlz,kDQV,btgb,dLXN,gPp9,dLUz,dMu9,5nk1,3Rtx,8q2r,dM8h,4BVr,67M1,9bdp,dMkN",
                    "74e6": "mV8P,mWn1,mVxP,4Bqh,7FgF,dLEX,aIAF,hzHH,hAe9,5mX1,4C99,4CrV,7FS9",
                    "829c": "m8jP,m9B9,pc3X,j5s1,pcsX,j5R1,hzyj,hAtN,c+qX,c/C1,hz+r,btgh,8pS1,67dF,3QrV,c/6H,5mQN,4C2V,4Cv1,7FVh",
                    "7ebf": "or2r,hzlV,hzHN,lnWX,bsN1,cd/1,5m5P,8pV9,orKb,m9rN,hzR3,jS/V,ce23,fi89,3QX3,67IV,9bgx,c/yV,pcmH,hA7V,67Vp,3RCV,6V19",
                    "7f9e": "pbTr,lnX1,lodH,pczh,lnuP,loFV,ikh3,ilfF,fgSP,fi89,lo4j,gP09,c+JN,aI5p,8pmN,cdUH,ceAx,4Cfp,8pFr,8qrx,cebr,4BPh,4BjX,4CBh",
                    5830: "ik7H,ikwN,oq/j,9arp,7ExH,9XpN,mWmX,mVE9,5mB9,5nn9,kDlz,kDNN,fh+N,fhyF,kDlF,hA1z,hAtN,ce8j,ceQ9,ewZb,9XON,6U+1,ceGH,8qlh,67CF",
                    "75ab": "kCFP,hzvh,cdvH,fh6x,4BgP,8pCp,cdOx,m8zx,m9B9,pcgr,mVWV,dLEX,fhph,gP6p,j5Bp,j5+p,fhRp,ex3x,exg1,cdXP,ceDF,9bah,67CF,3QNN,btgb,8q5F,67M1,5n4p,3RG1",
                    8206: "oreX,mVlp,aI5p,j5cj,j5oV,fh3j,fhfV,mVAX,mW19,pcjz,ikG9,il39,jSwz,ceeF,ewx3,ewW9,mW4b,mWjV,aJ0N,j5Xb,j67N,fhOb,fh+N,aHUP,aJa9,3Qy3,8pV9,9b3X,4Cv1",
                    "8d43": "9X6X,mVc1,mVB1,9Xw1,ikqr,9Xjx,6TVh,4BgV,8pIz,67n1,pcsX,m9lx,loIX,lo7x,9aTx,67wp,3QU1,ewMH,exg1,5mNz,5nn9,j5+j,5n4p",
                    8005: "m8wj,m9ip,pcdj,hzXp,hzlP,hAD9,aHUP,c+MV,g2qN,mWjV,3QQP,c+MV,c/sF,3RwF,9XsP,9Y8F,5muP,5naF",
                    "8bcc": "oqYb,kD2V,hziH,hzyp,4Btp,8pS1,hzNX,pct1,m92H,m9y1,gPyx,fhsj,fi89,3RJ9,aIuj,aJa9,67tb,68c9",
                    "8d70": "kCPb,kDNN,g1HP,g2Z9,aIAz,aJ3V,pcgr,g2kx,g2nz,4BYF,3QrP,c+GF,9aur,4BPh,4Cy9",
                    "6fb3": "4BgP,cdOx,fh6r,hzlV,lnNz,oqV9,9XvX,m8M1,m9rN,9YbN,9Xmz,9Yl9,pcpP,m8Yx,kDfj,ikSF,kDHr,il39,gPyr,gP3h,kDrP,cekV,c+Zj,gPiV,c/px,3QHr,5mEh,7FgF,btvV,9b0P,8qi9,5naF,3RJ9",
                    "8e66": "hzs3,nG49,nGmV,hzKV,hzs9,hzBr,6T/x,c+Dr,c+Q1,ew83,6719,5m5P,7EZV,orlb,lo1h,loJ1,os11,pcw3,lon9,3QNH,5my1,9aNh,ikJh,ikYV,67IV,4BVx,ewAb,ewPV,aIrh,aIGV,3RgX,67Sh,9Y2p,il9p,ilp1,5nk1,3RwF,ex0j,exg1,aJ6X,aITp",
                    6750: "3QHr,pbTx,j4YH,j5v9,9X0H,ikqx,gOMr,c+T9,j5Bj,j6kh,pcFr,5n7x,3Rk9,7F43,c/9V,j61x",
                    "886c": "pbNb,m8CF,kCCH,kD61,gOPF,cdvN,fh6r,3QHx,ewhr,aIrh,c+MP,gP3h,j5Bj,j6kh,pcIz,5naF,3Rk9,fhyz,aIN9",
                    8328: "66ZX,bt6V,hzvb,ewqV,lnuP,loM9,pc3X,ikD1,il33,pcw9,c+PX,j5HF,g2hj,g2W1,ceGN,3QKz,67th,9aZN,ceo1,g2x1,cenX,8qop,6UQF,4Cy9",
                    7684: "3Qy3,jRX9,jSnh,67th,6719,dLj3,dLLh,jS1j,or8N,gP9r,jSCV,orH9,jSCP,jT31,6891,5ngV,3Rqp,ewSX,aIWx",
                    "8d4c": "4BdH,8pzh,c+Dx,j5fx,9axz,67q9,bsMX,nG11,nGq1,cd/1,lo1b,lowx,pcsX,gPm1,gOYX,gPRh,mWjP,hAkp,fhI1,c/3F,aIl1,3R7z,c/3F,c/vN,3RzN,9aWz,9bmN,5mKr,5ndN",
                    "7eba": "or5z,gOwV,hzHN,j5rX,bsN1,ce5h,6TLP,8pYh,pcpP,lowx,jSnb,jT9h,jSCP,dLXN,8q2x,3QQV,ewPP,excV,685V,3Rnh",
                    6539: "mVbX,mVE9,fhm9,fgZ9,6719,aIo9,gP3b,pct1,jSwz,jT69,jSVz,ex0p,9XY9,6UrF,3QQV,g2nz,aIK1,7Fzp,4Cy9",
                    "9f13": "lnrH,loaF,or8H,hzHN,hzlP,hz+x,fh0b,fhph,btgh,bsTh,fh0h,9Xdb,6U2F,aIrb,67jV,4BgP,6UrF,kDlz,kD+h,pcCj,g2Gp,g2kr,g2W1,9Y5x,3R4x,fhEP,9X/h,4Cy9",
                    8017: "lnuP,ln+9,hzoX,hzO1,ew1P,ewAh,pbWz,3QKF,6TIH,9Xdh,ewkF,9Xz9,m8Sb,nH8V,gP3b,hAA1,ce5b,c/F9,m98X,5mX1,4C99,4Cv1,6V4h",
                    8352: "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,lo1b,ikYV,ikdX,ilp1,ikqr,dLsx,dMkN,cdUH,7ETF,3QrV,cebr,3R4x,cer3,5m+9,4Cch,4Cv1,6V19",
                    "5bc4": "pcdj,m8/F,j563,m8q9,m9uV,j6aV,j5fr,j64F,m8Yr,ikMp,gP09,ewhx,ikPr,fhUx,dLcP,dMu9,67ar,aI8x,aIDN,6UuN,6T/x,dMer,5n7x,3Rh1",
                    "4fa5": "fgSP,jS1p,or8N,jS1j,3QEp,kD2P,mWq9,ewtX,hAe9,kDQV,pcjz,il01,fhUx,dMr1,g30h,cdUH,ceTh,cehH,67wp,3QNN,ceub,4Cch,3Rqp,3RG1,68c9",
                    7078: "j563,mVxV,pc79,mVxP,mW7p,j5HF,gOZ1,dLcV,j5KH,gPyx,exj9,ex6z,9X/h,dLyH,9arp,g2nz,btmx,7F49,67jV,3Qv1,btmr,67Sh,3RJ9",
                    "78d5": "lnrH,lnX1,lnKr,g1O9,c+kN,6713,fgZ9,fhfV,7EZV,7EH9,lo1b,loJ1,ikCX,ils9,orDX,il01,ik/X,dLOp,ex6F,gPvj,c/yV,4BPb,btgh,btUV,4CrV,4B/H,btsN,btIj,4Cfp,4BCH,4CBh",
                    "6ee5": "nG43,kC/N,hzlP,ewhx,3QrP,bt0F,nGt3,dLI9,oruz,c/3F,hA7P,orNp,jSJ3,jT69,hAkj,dMnV,4BM3,btd9,btRN,4CoN,4BYz,btpF,btFb,4Cch,4Bzz,4CBh",
                    "804a": "nFZP,nGt9,nG43,9al9,nGmP,3QQV,j563,j5oV,ewqP,ew89,8ppP,aIhV,orDX,mVKp,btjp,c/9V,kDrP,9XON,4BM9,3Rqj,mW7p,mWn1,9Yi1,8qrx",
                    "5c65": "4BgP,7EH9,bsWp,oq/p,os11,loJ1,lnHp,g1Xr,jSk9,aI8r,fhm9,c+MP,3QQV,gP6j,kDrV,ikSz,ils9,gPcz,gPHV,ceJV,ceeF,gPcF,ewJz,excV,6Uib,btvV,9XOH,9Yi1,67P9,3Q+h,8qbP,67Vp,3RJ9",
                    "5a9a": "jRQP,jSh1,ewqV,8pFx,5m91,pbTr,c+u9,8pS1,4BCH,9aNh,ewGx,nGCx,nHc1,ilp1,ikPx,nGVb,il6h,3RaH,fhBN,fi51,3RG1,cehH,ceN1,9aZH,9bt1,5mQH,5nk1",
                    "54ea": "9X6X,mVc1,mVrF,cdRF,cdC1,orbP,orAV,7FjN,67th,j5oP,j5KN,dLBP,dLXN,oroj,dLI9,8pOV,5mlx,3Rnb,orKh,os11,hAnx,bt/9,aJ71,9bjF",
                    "62cd": "kCFP,kD99,kD99,pbTr,5mlx,3Qy9,bsJP,fhm9,pczb,kDoN,3R1j,kDfp,kDU1,3RG1,dMqX,dLOp,67wj,6891",
                    9887: "66TH,cdF9,kCM9,kDix,hzR9,or8H,fhcN,fgZ3,fhph,aIl1,7ETF,4Bn9,c+Aj,9XsV,67wp,nGzj,nHf9,nGVb,j5R1,8q5z,j5HF,j6aV,8qAV,g2Db,8qi9,5mQN,3Q+h,7Fzj,3RJ9",
                    6084: "ew1P,jRX9,pbTr,3QHx,kD2P,gP09,nGwb,jSzN,pczb,hAhh,jSSr,nHc1,3R1j,hzXp,hAA1,5nk1,3Rtx,dLOj,dMr1,9XFj,9Yi1",
                    9976: "gOtH,kCPh,or2x,kCPb,kD99,gOVV,gOJj,4Btp,9aH1,lo1b,m9y1,ewAb,hAhh,kDQV,pcjz,j5R1,dMnV,gPO9,cd+X,ceQ9,cehH,7FgF,5mHp,3QQV,ceub,5n1h,4Cfp,4CrV,6V4h",
                    "8d61": "bsMX,nG11,nGmV,bt6V,jS4r,9Xgp,5m5V,9Xmz,6U8V,lo1b,pct1,nGIH,nH5N,kDBh,kDX3,kDfp,btjp,4BFV,jSJ3,hA1F,jSVz,hAA1,il6b,g2Jx,g2kr,g2Z9,dLXH,dMnV,btpz,btY1,3R7z,8q5F,8qAV,3RCV,5mNz,5ngV",
                    "8a93": "mV8P,mVKp,pbZH,gOSN,fh3p,ikaP,jSnh,gP6j,ikSF,nGFF,nHc1,loaz,loM9,lowr,g2Jx,hzR3,fhyF,ew1P,exj9,cdOr,ceDF,9Xjr,9Y8F,3QHr,7EQx,7FCx,3Rtx,5mlr,5n7x",
                    "56db": "4Bqb,mVih,mWjV,4CrV,cdRz,fhm9,mVE9,mVWP,dL+V,c/d1,c/px,7EKb,7FLV",
                    "68e0": "oq/j,lnX1,pcgr,jStx,lojX,orTF,gOD3,jRX9,jS/V,gPHV,gOPz,gPvp,dMbp,dLvF,gOPF,9X3P,9Yl9,dLRr,3R4x,4BjX,67ax,7F11,9XIx,7FmV,67Vp,4Cv1",
                    "6e4d": "oqYb,lnQN,ikaP,g1Up,5m8X,c+Dx,nGpX,jSh1,jSYN,nH5N,pcpP,jSCV,gOSH,gPO9,gPlX,c/3F,3QTX,c+Q1,c/yV,685V,4Cix,c/3z,5mNF,c/jb,5n1h",
                    6587: "orlb,lodN,kCIX,kDX9,kDBb,c/9V,aIAF,7F49,67gN,3Qv1,iktz,c+T9,9aWF,67Vp,4Cv1",
                    "590f": "oqOP,os49,orrr,lo1h,lnKr,lowx,dMex,dLsx,lnKx,j5fr,j61x,gOMr,gPyx,8pw3,dLI9,bt6P,btIp,8qbV,67th,3Qy9,9XvX,6UuN,5n4p,4Cv1",
                    "5fc3": "8ppP,g1Rh,hzKP,67jV,4BCN,4C99,8qop,nGwb,j5KN,gPyr,aJa9",
                    "6daf": "nG7b,lnNF,hzlP,fh6x,5m8X,cdRF,4Bzz,9aH1,ce29,mVE9,mWn1,ikPr,illV,ewx3,exj9,lon3,ewW9,9XFj,9Yi1,5mB3,5nn9,c/g3,5m+9",
                    5937: "m8mX,m9y1,j59b,j61x,g2Jx,g1Rh,c+xh,c/yV,9YeV,8qop,pcgr,cebx,7F11,5mlx,3QrV,cebr,8qbV,67Sh,3RG1",
                    "5e7d": "jRX3,4Bn9,5ngV,j6aP,3RCV,mVAX,g1Up,g281,j5yb,9Xgp,9Xz9,cd+X,8pYh,orrr,5mKx,mW7j,g2qN,g2Gp,ilfz,9XON,9Y5x,cexj,8quF",
                    9605: "3Qy3,m8q9,pbQj,mVuN,nGzj,nHc1,5nk1,3RwF,lnWX,j5yh,ikVH,lon9,ikzP,il6h,c/jh,c+MV,ikzV,67ar,7F11,9aNh,c+Zp,c/6H,6UuN,67IV,67Vp,9bjF",
                    "6f33": "oqV3,lnQN,ikaP,fh6x,5m8X,cdRF,pcmH,mW19,m8LX,m9y1,lo4j,ikVN,il6b,lowx,ikwH,ils9,g2eb,g2PN,9YbN,9XCh,g2eh,c+Wb,c/vN,7EWH,7FS9,9XUX,3Rh1",
                    "5e1c": "9ahX,lny1,ln+9,btd9,9XpN,pbTr,3QHx,ceez,nGFF,nH8V,ceJV,dLUz,dMnV,4BM3,9XRV,aIWr,4Cy9",
                    5544: "8psX,mVc1,mVuN,bt3N,bsN1,nGpX,nHc1,nGS3,jSwF,gOVV,j5Hz,ewW9,6UE9,67M1,3R1p,cdXP,gPiV,7EWH,c/d1,g2b3,8q8N,ewW3,j6aV,g2Gj,btOF,7FS9",
                    "5d2e": "oqYb,lnEh,loCN,orWN,pcgr,lo7x,4Bn3,j569,j6aV,4CrV,685P,6719,fh6r,fhUx,hz+r,cebx,cdXP,cer9,8qi9,8pOV,cdXV",
                    "216a": "5m8X,5mrN,5mEb,5mX1,5n1b,5nk1,5naz,nH2F,nHbX,nGVh,nGOX,nGwh,nGjH,nG11,nG7b,5mQN,5mfb,nGIN",
                    "77bf": "oqYb,hzvh,hzUh,orlh,oqYh,m8tb,m8Sh,jSnb,jR+h,orxH,hA4N,hAtN,orWN,orxN,m92H,m9rN,jSYH,jSzN,hzHH,ewep,bsJV,3QEj,ewep,excV,btOz,bsWp,8pCj,8quF,5njX,5mip,5mNz,ewJF,fhyz,hzXp",
                    "80de": "4BdH,8pw9,nG49,nGmV,67jV,3QHx,ikh3,ikzV,c+u3,c+MV,hzNX,kDix,pcmN,loaz,loFV,aJ3V,9bgx,7FS3,4CoN,4B/N,67zx,hz+x,hAkp,cexp,cebx",
                    "4e19": "nFZP,nHf9,nGFz,ikSF,fhvx,ce5h,8pIF,fhvr,c/d1,9Y8F,4Bqb,ikkh,illV,685V,4Cfp",
                    9610: "3Qy3,kCM9,oq/j,lnQN,mVHb,mWn1,5nk1,3RwF,kD5X,hz+x,hA4H,loqh,hAkj,btIp,bt3N,hzHN,hAkp,ex0j,ewnN,hA1z,4BYF,8pFr,8quF",
                    "96cf": "hziH,pbWF,lnEb,ln+9,g1+F,g1HP,g2b9,4BM9,bsMX,btd9,66WP,67q9,gP3b,pcw9,kDoH,3RaN,orKb,lozF,kDoH,kDX9,g2qH,g2W1,btsH,btY1,67FH,68fh,kDHr,67Yx",
                    "8d37": "jRQP,pc41,mVor,g1Xx,kD2P,loM9,pcjz,il6h,fi1V,hAD9,pczb,mWgN,8pFr,ewhx,ex3x,8qrx,cebr,7F7h,5mrN,3Qy9,8q8H,3RCV",
                    8776: "bsMX,kCJ1,kD61,dLF1,dLg1,pbTr,7EQx,66TH,8pS1,aIhP,6Uih,kD93,kDX9,oroj,ewDp,exg1,orDX,hAb1,hAtN,orWN,aIrb,aJa9,dM53,3Rk9,4BIX,aIN9,4Cy9",
                    "5c14": "gOwP,orf1,kCYz,kDU1,gPyx,dLBP,6TP1,hA1z,5mNF,3QX9,dM8b,7FS9",
                    "7b26": "j4/P,pbWF,m8wj,m8Yx,m8Cz,j5s1,j5Er,pczh,m98X,m9B9,m9fb,j67N,bsJP,ikzV,fh6r,3QHx,fhfP,fibh,ce23,9aZN,ilcr,67Yx,4C2V",
                    8015: "lnuP,lo1h,ikdX,ikG9,ew1P,ewAh,pbWz,3QKF,7ExH,ewkF,dLvF,9XCh,j5Bj,j6h9,c+Wb,c/Ih,pcpP,btvV,8q8N,3QX9,pcIz,3RwF",
                    "679c": "nGaj,nH5N,g2PN,g1Up,nGap,kCSj,kDNN,nGCr,3R4x,dLcP,dMu9,66ZX,8pIF,c/0x,c/3z,9bah,68c9",
                    8774: "bsMX,kCJ1,kD61,c+Q1,c+r1,or2r,8pFx,6TIH,9aDV,bt3H,7F11,jSk3,jSG1,orrr,dLRx,67tb,dLLh,dL+V,7FmV,7F7h,3RaH,6UE9,9X/h,nGVh,nHc1,5nk1,3RwF,hAhb,hAA1,ceMX,ceuh",
                    "764c": "jRNH,gOGh,cdvH,fh6x,3QrP,7EKh,c+Dx,m8zx,m9Eh,pcdj,m95V,gP3b,jSnh,jSVF,gPBF,gP3h,aIhP,ewqV,ewGx,aIxx,aIhV,aIN3,ewW9,excV,aJ3V,aIN9,8pOP,4BFV,4CrV,9bpV,4C2P,9XRV",
                    "66b4": "j5cj,oq/p,orTF,j64F,j5cp,m8wj,m9oF,j5rX,dLF1,j5QX,dM21,gOD3,gPHV,dMxb,dL9N,9aeP,dLI9,dL+P,9bw9,aIeH,7F7h,5mfb,8q2x,aIQb,8q5F,4CoN,cebr,4BVx,3QX9",
                    "535a": "ik7H,ikwN,pbQj,3QEp,pczb,mWgN,mWq3,mVuN,pcpP,cekV,bt9X,jSh1,jSYN,btRN,gOYX,gPEN,ex9H,ewu1,9XpH,9Yoh,ceDz,5naF,3Rk9,8p/j,67CF",
                    7545: "pbWz,3QKF,kCIX,kDch,ce5h,cdC1,kCJ1,gOzX,gP3h,nGCr,nH8V,g2kx,g2W1,685V,4Cix,g2A3,cehN,8pYh,g2Mz,btIp,7FmV,5mKx",
                    "7a7f": "pcab,m95V,j563,m8q9,m9B9,j6h9,hzyj,lo1h,logP,hAtN,g1Rb,g2W1,fhfP,bsZx,bt/9,btvP,7F11,4Bn9,g2A3,5m+9,3R7F",
                    "65e6": "9Xjr,nGdx,nH2F,9Y8F,hzBr,hAqF,btOz,bsZx,66TH,68fh",
                    "8ba2": "oqRX,kC/N,hziH,hzBx,5mlx,aIrh,m8P3,m9Eh,m9lr,5n7x,3RdV",
                    "73d0": "m8jP,m8P9,fgVX,fhj1,6TLP,9aK9,m8zr,8pFx,jSnb,jT31,ewx3,exj9,orH3,ewW9,dM53,5mB9,685V,9Y5r,4Cy9",
                    "4fef": "fgPH,pbWF,kCSj,3QEp,5moz,7EZV,cd/1,m8M1,m9Eh,pcmH,mW4h,dLI3,kDrV,hA1z,3R7F,g2tP,g30h,c/cX,9Y2p,kDNH,5ndN,3Rqp",
                    "4f9b": "ev+H,pbZN,kCSj,3QEp,jSaH,jT31,cdRz,ceQ9,pcdj,ce8p,pcCj,cexp,3QKz,9XIx,9X/b,3RG1",
                    "61a8": "nG7b,nGwh,kD61,kCFP,kDoN,kCSj,cdLp,kDcb,aIrh,hzyj,hzUh,fh3j,fhph,bsJP,dLUF,gP9r,kDv1,orKh,kDuX,kDX9,kDKz,g2Jx,c/g9,btpF,ikYP,ewZh,ceGN,bt/9,4BjX,9aux,9aDP,5muV,4BJ1,4C99,7Fwh,9XFj,7FmV,9Y5r,5nn9",
                    "54d7": "9X6X,mVc1,mVuN,bt3N,bsN1,ikCX,m8Yx,pcmN,m8Yr,c/0x,pcw3,fhL9,ewZh,excV,gPO9,g2qH,mWjV,9XsP,9Yl9,dM1X,3Rh1",
                    7578: "66ZX,mVc1,mVB1,8pS1,8pt1,g1KX,g281,mVor,8pFx,m8Vj,m9y1,pcw3,kDv1,hzXp,kDy3,hAwV,g2eb,g2Z9,g2Mz,5naF,3Rnh,67zr,c/0x,c/g9,7Ft9,7Fdx",
                    "7f09": "or2r,hzlV,iktF,lnTP,bsJV,cd/1,6TLP,9aK9,oruz,orWN,kDNN,kDlF,oruF,hzR3,hAGh,hz+r,6Uox,hAtH,3RzN,dLRr,dMkN,aIxr,aJ0N,67q3,7FVh",
                    "89c1": "aI5j,nGap,nG/x,btLx,kDir,dLOp,8pS1,3QrV,dLUz,67CF,4C2V,4CrV,8qH9",
                    "50f5": "g1EH,kCSp,or5F,kCSj,3QEp,nGmP,nHf9,ln+3,loCN,g2PN,g2b9,ln+9,ikG3,iliN,logP,g2tV,dLyH,dMxh,bt9X,btUV,685V,67n1,bta1,9aGX,9bpV,btvP,67IV,4Bzz,4CBh",
                    7981: "lnxX,lo4p,pbZH,fhcN,g1HP,lnQN,kC/H,hzUh,loaz,loM9,pcCj,fhRp,g2kr,lotp,kDEj,g2Z9,dLpj,dMhF,9X6X,9Yi1,4BgP,8pOV,9XLz,5mNF,3QU1,8qi3,4Cy9",
                    "4eac": "pcab,mVTN,lnuP,loM9,hzBr,hAnx,ceAx,cdOx,hzBx,5m5P,aIhV,ceez,5mNF,3QU1,9X/b,5nn9",
                    "94a7": "ikaP,pbWF,lnEb,lo1h,hzoX,hzR9,c+nP,c+Wh,hzBr,4Bwx,8pYh,hzXj,kDoN,orE1,kDoH,kDU1,5ngV,3Rnh,gPiP,ex0p,9aTr,c/vN",
                    "54af": "8psX,m8n1,m8FN,aIeN,aHY1,j5v3,mVTN,pcpV,mVTH,mWjV,il9p,fhBN,c+Q1,jSwz,gPp9,fhXF,dMu9,3R4r,cebx,ceGN,3RzN,5mKr,5ndN",
                    8475: "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,j563,j5Ex,fhfV,cdLp,aHRN,gOGb,ewkF,j5KH,fhL9,c/px,aJa9,hAaX,jSVF,ex0j,gPHV,dLBP,dM8h,9Xgj,9Y8F,dLRr,9aQp,6Uf9,3QBh,8q8H,67Vp,3RCV",
                    6269: "jRQP,jSnh,bsJP,g2b9,pbWz,5moF,3Qy9,3QQP,7Fap,9XIx,kDix,kD+h,pcsX,m9lx",
                    5229: "mVbX,nGFF,mVAX,3QU1,hzlP,hA7V,8ppP,dLvF,hzO1,fhiX,ceeF,kDBb,9bah,pcOP,5ngV,3Rqp",
                    "4fe9": "g1EH,lnHp,pbWF,lnHj,3QEp,nGjH,nHf9,3QQP,ikzV,illV,5ngV,3Rqp,nGFz,dLUF,9aNh,dLUz,btvV,nGVb,c/jh,9b0V,c/jb,9Y8F",
                    "804b": "m8mX,m9B9,pcdj,lo1h,ikD1,gOPF,fh0h,pcw3,mWax,kDoH,gPfN,g2tV,g2PN,ilp1,kDKz,gP3h,dLfX,dMu9,dLvz,67dF,dMbj,3Rqp,bt0z,btIp,8qoj,8pIF,66ZX,6891",
                    "6f0f": "oqV3,lnNF,ikdX,fh6x,5m8X,c+Dx,4Btj,9XsV,dLF1,nGq1,nH8V,jS/V,jSh1,gP3b,gPO9,3Q+b,dLLh,dMnV,5ngV,3Rtx,gPp3,4C99,ceez,9XRV,8q5z,67IV,cexj,9Y8F,8qoj,67/F",
                    8513: "nG0X,nHc1,pc73,ln+9,pcw3,lon9,kCVr,kDHx,g2Jx,g1Xx,kCVx,ikqr,ilcx,ewbb,ex9N,btRN,bsTh,ewbh,ewx3,btd9,ewSX,btz1,9Xgj,9Y5x,6UuN,5my1,3Qv1,9aDP,67CF,4Cfp,3RJ9",
                    8305: "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,j5cj,j61x,g2qN,hzNX,ewPV,ew1P,ex9N,aIZF,66ZX,9aAN,dLUF,ewJz,5mNF,3QX9",
                    "540d": "ikh3,pcdp,m8LX,m9rN,gPiV,dLLh,aHY1,j5oP,g2kx,3QNH,cdUN,ceGN,3RzN,5mrH,5ndN",
                    "672b": "kCIX,kDU1,fh0b,fh+N,pcgr,3R4x,6TOX,9XmF,fhvx,btC9,9bgx,6U+1",
                    "67e0": "jRNH,jSk9,pbTr,3QHx,bsGH,jS4x,hzBr,dLF1,pcpP,m9lx,hzUb,lo1h,loM9,hAD9,ewAb,exmh,ewZb,5n1h,4B/N",
                    "519c": "hzyj,lnHp,loFV,hAwV,pcjz,hzUh,ewqV,9X3V,ewqP,3QQV,8q5F,g2kr,aIGV,7Fzp,4Cy9,aIGP,fh+N",
                    "62ab": "jRNH,jSh1,pbTr,5mlx,3Qy9,bsJP,fhj1,5mrH,9XCh,ewDp,lo4p,loJ1,hAtN,pcw3,fhL9,fhsj,fh+N,9Y5x,67M1,3QX9,c/3z,7Ft9,5naF,3RJ9",
                    "8b6c": "gOwP,j569,lnEh,oqYh,orlh,lo1h,lnEh,j59b,j5yh,g2eh,g1Rh,j59h,pcw3,nGYp,mVNr,mWn1,m95P,jSJ9,jSSr,m9rN,jSqj,jT69,hA1z,hAA1,jSMb,ewZh,g2hj,dLXN,dLcP,dMu9,ceDz,cdLp,9Xgj,9Y8F,3QEj,7ENp,7FFF,3RwF,4Btj,4ClF",
                    "6c7d": "nG43,lnNF,ikaP,g1Up,4BjX,cdUN,ikzP,orrx,lo1b,loM9,ikMj,illV,ewx3,ex6F,9X/h,67Yx,3RCV,6V4h",
                    "7b7e": "ikaP,or5F,lnHj,lo7x,lnNz,ikD1,jSwz,orH9,logP,loJ1,loqb,ilfF,cdyP,ewkF,ikPx,hz+r,fhOh,dMu9,c+Gz,c/mp,aIbz,6Uf9,btjj,7FjN,4B/H,aITp,4Bn3,4Cv1",
                    "8eaf": "mVlj,pbWF,c+u3,mVf9,mVE9,5mB9,3QHx,c+kH,c+T9,j563,j5v9,g1O3,g2b9,5m2H,8pCp,c+MV,mWq3,mVQF,5mNF,5nn9,j5QX,ex3x,8qE1,8qbP,dMex,jS/V",
                    "919b": "mV5H,mVHh,mVlj,fh3p,cdF9,nGjH,c+JN,c+T9,4BjX,jRU1,jSk9,5mB9,5m91,9X6X,9Xz9,m8Sb,m9B9,pcmH,j5KN,pcIz,j64F,dLLb,kDBh,j5U3,dMu9,dLUz,dMkN,9YeP,9XIx,4BPb,4Cv1,dM53,4C99",
                    "585e": "pcdj,mVTN,j563,mVf9,mWjV,j6aV,jS1j,jSVF,gOMr,gPyx,dLfX,dMr1,kD5X,dLF1,kDuX,dM21,7EAP,9Xjx,dLI9,dM1X,9Y5x,8qH9,8pIz,8qop,4BjX,4Cv1,cebr,4BVx",
                    "5ac2": "jRQP,jSh1,ewqV,9XmF,7ENp,4BgV,or2r,cdC1,9XmF,6Uf9,nGIH,mVHh,fhph,fi1V,mWjV,mW7p,pcw3,cer9,j5yb,j5NV,j5+j,j6aV,ce23,ceGN,9Y5x,67IV,3QU1,cebr,7Fq1,5n7x,3RJ9",
                    7525: "gOwP,m8q9,jRTX,jSk9,dLfX,dLI9,66ZX,9aNh,7ETz,or5F,nGCr,nHc1,fi51,fhvx,nGCx,jStr,jT31,nGVb,fhOh,ce5b,ceQ9,6891,3Rqp,ewW3,9XV1,6UrF,3QU1",
                    "65bd": "oq/j,lnQN,jRQP,jSk9,jS1j,aI5p,8pzh,4BgV,fh3j,fhj1,5my1,3QHx,hzR3,orAV,loaz,loM9,dLLb,gPHV,9YeV,8qrx,j5Xb,7Fwh,hA1z,5mNF,4B/N,4Cv1,6V4h",
                    5885: "nG43,nGCx,ikPx,ikh9,nG49,lnB3,lo7x,nGjH,c+JN,g1KX,g2kx,cdBX,dLUF,nGIH,nHc1,jSPp,m98X,j61x,j5KH,j6h9,fh+N,j5+j,c/mp,btz1,9arj,9bmN,4BjX,4Cy9,ceez,4BYF",
                    "62f4": "jRNH,jSh1,bsGH,fhj1,pbTr,5mlx,3Qv1,g27X,nGP1,gPO9,gP3h,gPEN,btgb,btUV,4BFP,4Cy9,gPlX,4C61",
                    "4ed6": "ev+H,pbZN,jS1j,3QEp,g1+z,j6aV,btUV,9Y5x,pcsX,8qf1,nGwb,67th,5mHp,4BVx,4CrV,7FS9",
                    "6cf0": "mVbX,mWn1,jR+b,jSVF,gOwP,gPO9,pcgr,ikG9,fhfV,9X0N,gPiP,c/px,9Yoh,cdUH,aIo9,6713,9XIx,ewGr,5mKx,3QU1,9XIr,682N,9XOH,ceuh",
                    "5e16": "8ppP,jRQV,jSh1,9Xw1,8pLN,pbQj,3QEp,pcsX,dM21,jSFX,jT69,3R4r,dLRx,dMnV,3RCV,5mKr,5ngV",
                    6850: "jRNH,jSh1,pbTr,3QHx,aHRH,ikqx,hzBr,c+Q1,3R1j,nGzp,nHf9,5nn9,3RzN,ikVH,iliN,fhEP,fhXF,9Y8F,9XRV,fhEV",
                    "671b": "or2r,m8IV,kCIX,kDix,kCSj,ewep,g2eh,dLRr,gPiV,nGLV,nH8V,fi1V,dMex,kDrP,kDQV,ikYP,illV,cdIb,ceGN,8pCj,8quF,4BjX,4Cy9,cebr,4BVx",
                    "60df": "ew1P,jRX9,pbQj,3QEp,jSaH,gOZ1,fhiX,jSqp,oruF,orH3,lowx,jSqj,jT31,fi1P,fhsp,aIuj,aJ3V,68c3,67wp,jSqj,3R1p,jSMb,67Sh",
                    "563b": "9X6X,mVc1,mVrF,bt0F,bsN1,mVxP,mWn1,pcsX,jSG1,jSk3,jS/V,hzUb,hAtN,ex9N,ewAh,hzUh,ewGr,9aZN,9b73,ex0p,cdXP,ceQ9,3QX3,9aK9,9bmN,3RzN,5mB3,5ndN",
                    "70ef": "dLcP,j569,oq/j,cdLp,4BgV,cdLj,9aDV,gOMr,jSdV,orrr,m9fh,jS/V,jStr,lok1,pcLN,hzUb,hAD9,jSMb,g2tV,aIl1,67zr,c/0x,c/C1,7FP1,67/F,fhOb,3Rnh",
                    "6d88": "oqYb,lnQN,ikaP,fh6x,4BgP,cdRF,nGt3,kDlF,pcw3,hAe9,jSSr,nHc1,3Q+b,hzUh,hAwV,5ngV,3Rqp,dLLb,dMnV,9aNb,9bpV",
                    "4e9b": "mVib,c+xh,orbP,dLBV,jSdP,jStx,cdyP,ewGx,orAP,dL+V,c/d1,c/yV,fi89,ikYP,loFV,9Xjr,9Y5x,4BjX,4Cv1",
                    "5ba3": "pcab,m92N,hzoX,m8n1,m9y1,hAA1,ikqr,ilfF,ilfF,fh9z,fhRp,7Fzp,7ETF,fh9F,bt0z,btIp,4BgP,4Cy9",
                    "96ea": "nG7b,nH5N,nGCr,dLRx,g1O3,kCM9,kDQV,g2SV,ikqr,ikG9,fh6r,fhm9,ikYP,ilfF,fhEP,fhXF,cdLj,ceDF,3RwF,9aur,9bjF,5mfb,5naF",
                    9080: "mVbX,jS4x,g1EH,g1Up,6TYp,5m91,6TYj,4BPh,4Cy9,oroj,m8P9,m8IV,hzKV,hA4N,m92N,m8P9,jSdP,jSzN,hzR3,fhsp,ewkz,ewPV,ewx3,aIl1,8pLN,ce23,cehN,9aWF,8p/p,gPlX,orQx,jSMb,jT69,jSYH,c/sF,9Y2p,6UuN,fhOb,btOF,7FP1",
                    "836f": "m8mX,m9B9,pc3X,j5s1,pcw3,j5U9,j5lH,ew89,ewqV,gP3b,9Xa9,9XCh,5m8X,7Fap,ce8j,ikYV,g2qH,g2SV,685V,4Cch,cekP,9bdp",
                    "996e": "gOwP,or5F,jS1j,jSnh,gOZ1,g1Xr,4Bwx,9Xz9,fhsj,orE1,jSzH,jT31,g2PN,gPp3,c/g9,9XRV,7FgF,3QU1,c/g3,8qrx,682N,3RJ9",
                    8424: "m8jP,m9B9,pc3X,j5s1,pcw3,j5U9,ew83,ikh9,illV,excV,8pIz,dLvF,dMhF,9Y8F,9XmF,g2nz,5mNF,4Bn3,67/F,8qoj,3RG1",
                    "6b32": "jRQP,nGdx,oreX,kDix,jSdP,g1Up,c+nV,ikwH,ewJF,4Bqb,c+xh,c+Wh,6Uih,6TVh,gPfH,orKh,jSFX,jT69,g2PN,gPvj,aIQh,67FN,3R1p,btIj,8quF,4Cy9",
                    "51a4": "jRX3,nG49,nH8V,jS/V,hzvb,m8Vp,jSgX,jSMh,gPfN,aIbz,gOPF,gPBF,c/sF,c+GF,gPcz,btjp,9aK9,6U2F,4BgV,btsH,5mQN,4C2V,4CrV,7FS9,aIQb,7FFF",
                    "55b3": "7EDX,m8n1,m8FN,9XpN,9X71,lnWX,loJ1,orDX,ewT1,ewqP,hz+x,lok1,hAnx,exj9,ewAb,ex9N,7FIN,7F7h,ewAh,btgb,btRN,4BFP,4Cy9",
                    "8bc8": "oqV3,lnQN,hziH,hzEF,5mlx,9aK9,g27X,jStx,pcpV,jStr,jT69,jSCP,3RdV,ewPP,exg1,9Yl3,9XRV",
                    6574: "mVbX,mVNx,jR+b,jSqp,gP6p,gOGh,jR+h,pbZH,cdUN,c+nP,gOSN,dLOp,j5Hz,orE1,logP,loJ1,lozz,gPvp,c/6N,j5QX,g2Gp,dMr1,bsTb,btRN,btpz,4BYF,8q5z,8qrx,8pLH,4BCN,4BgP,4Cy9",
                    8718: "aHXX,kCJ1,kD61,cd/1,cdC1,pbTr,7EQx,5m5P,8pOV,9XpH,6Uf9,ikG3,pcjF,kDfj,kDy9,ewAb,ewZh,kDoH,aIDN,67wp,3QQV,aIDH,6UHh,3Rqj,kDEp,kDX9,3RJ9,67Vj,68c9",
                    "86c0": "9X6X,ike1,ikD1,bta1,bsN1,or2r,67ax,4BgP,7F49,9aGX,67wp,orAP,lotp,j5Bj,j6h9,c/0r,c/C1,4BSj,4CBh,j5Xb,4Cch",
                    7816: "m8jP,m8Sh,m8Cz,dLcV,6TYj,g1Up,g281,8pS1,8pCp,kDfj,kDU1,gP3b,gPO9,pczb,c/3F,c/yV,6UE9,8q5z,4ClF",
                    "73ed": "66TH,9Xz9,8pCj,m8wp,fgSP,fhfV,m8gH,m8M1,dLEX,j5yh,pcjz,ceeF,8p/p,3QNN,m95P,m9B9,m9lr,5n7x,ewPP,exg1,5mNz,5nqh",
                    "7f16": "6TLP,9aH1,c+PX,bsN1,kD61,ikwH,ikaV,pbWF,pcpP,m9ip,5mrH,8pV9,ewDp,m8Vp,m9uV,hAwV,hzXp,3R1j,ewDp,exg1,6891,3RwF,9XFj,9Yi1,ewPP,67IV,ex3r,67Yx",
                    "4fa7": "g1EH,pbZN,kCSj,3QEp,aIkX,nGq1,nGP1,aIK1,j5Er,cebx,9aQp,4BCN,9XLz,67P9,m9lr,9Y5x,pcRX,5nk1,3Rtx",
                    "8d64": "m8tb,m9rN,pcgr,hz+x,hzlV,hAD9,9X6X,ewkF,hzR3,9Xw1,7EWN,3Qy9,hAaX,5mX1,3R4x,ex0j,9Yi1",
                    8106: "4BdH,9Xa9,nG49,nGq1,6Uc1,5mlx,ikh3,ikD1,dLj3,dLF1,pcw3,jSqp,mVTH,mWgN,j5Xh,j6h3,j5Ex,9XIx,3QX9,6V13,4CrV,4Cch,5mX1,ewT1,excV,btUV,9Y2p",
                    6382: "jRNH,jSh1,pbTr,5mlx,3QrV,bsJP,fhj1,3QNH,9XCh,lo1h,loM9,pcpP,m9fh,jSMb,btFh,g2Db,g2W1,3R7z,btpF,btUV,3RCV,5mNz,5ngV",
                    "591a": "iknj,pcgx,m8P3,m9rN,il39,fhm9,c+u9,jSnb,hA4N,fhEP,8pCp,c/3z,c/C1,9bgx,67FN,4BJ1,3QBh,9XIr,6UB1",
                    "7caa": "or2r,ln+9,lojX,orTF,pcgr,fhvx,kCIX,kDU1,ew4X,gOSN,kDix,kDlF,hAhh,fi51,c+xb,c/vN,9X3P,9Yl9,fhiX,9Xw1,fhHX,9XV1,7F43,3QBh,7FpX,3RCV",
                    "818f": "pcdj,mVTN,mV8P,mWq9,lnNz,lotp,j5+p,j5iF,lnNF,dLfX,gOA1,gPL1,dMr1,fh9z,fhRp,c/mp,c+GF,fh9F,3QHr,bsZx,btOF,5naF,3Rnh,9aur,9bjF,6UQz,6T/x",
                    "704c": "nG0X,lnKx,ikaP,g1Up,4BgP,cdOx,mVrz,mWq9,pcdj,kDfp,pczb,kDBh,kD2P,kDlF,gPcF,gOVV,kD2V,kDuX,kDQV,gPHV,gPm1,kDv1,9Xmz,g2eh,dLI3,3QX9,gPfH,ewW9,dLI3,dMr1,btd3,btUV,8qAP,8pV9,67q3,68c9,dM1X,67M1",
                    "4ea8": "pcdj,mVWV,mV8P,mWq9,jS4r,jSSx,fhUx,fh6x,jS4x,c+qX,c/vN,9XLF,5mNF,3QU1",
                    "79fd": "mVbX,ori9,nGgz,3QKF,hzlP,hzUh,9aeP,hzEF,g1+z,c+T9,nGzj,j5Bp,j6e1,nHc1,orKb,j5Xh,9Xz3,hAb1,ewMH,exj9,9bjF,67P9,3QX9,btsH,7Fzp",
                    "76d1": "nGaj,ewep,pc73,c+T9,gP6j,pct1,lodH,loM9,il6b,ex9N,5mij,cdLp,ceGN,5ndN,ce23,5mB9,cekP,5mTV,5m2H,5nqh",
                    "6d01": "oqV3,lnQN,ikaP,g1Xx,4BgP,cdRF,lnWX,loM9,g2b3,g2W1,pcw3,g2A9,3Q+b,ce5h,ceJV,3RCV,5ngP,5mEh",
                    "8ddd": "nG0X,nGq1,hzO1,hzp1,nG11,hzBr,6T/x,c+Dr,c+Wh,dLfX,5m91,4BdH,8pYh,mWq3,mVNx,4BVx,4CBh,gP9r,gPEN,aJ0N,aIxx",
                    "82e6": "mV8P,mWq9,pc0P,j5oV,pcw3,j5U9,g1HP,g2Z9,jStr,btmx,3QHr,bsZx,btOF,3RwF,5mlr,5naF",
                    "7c7b": "or2r,ln+9,pcgr,ewGx,kDrP,orQx,j52X,j6e1,dLj3,fhcN,gP09,j5Ex,ikPr,g2Dh,dMnV,aHUP,aJa9,c/0r,7F7h,5mrN,3Qv1,aIAz,7Fq1,5naF,3RJ9",
                    "62ce": "jRNH,jSh1,pbQj,5mip,3Qv1,cdyP,g281,gOVP,jStx,pct1,nGOX,jSSx,gPO9,j5KH,fhOh,dLI3,dMnV,6UxV,8q5z,3Rqp",
                    9523: "ikaP,pbWF,kCPb,kD99,hzs3,hzR9,c+qX,c+Wh,hzEz,4BzF,7F49,nGzj,nHc1,hAA1,hzXp,nGzp,nGLP,hA7V,nG/r,hAnx,9XCb,g2x1,dLXH,dMr1,7Fzp,5mTV,3Q+h,aIGP,7Fzp",
                    "7ef5": "pbZH,hzlV,hzKV,jSk9,bsN1,ce29,66ZX,8pV9,mVTH,pcw9,mVNr,mWjV,g2SV,g2kx,mVNx,j5Er,j6aV,5mHj,c+Zp,c/F9,6V19,5naF,g2Db,3Rnh",
                    "6ce5": "nG43,lnNF,hzlP,fh3p,4BgP,c+GF,3QHr,7F11,ce5h,nGwh,nH5N,hAtN,hzUh,fhBH,67FN,5mTV,4C61,4Cv1,6V19,9XOH,dMr1",
                    "57f9": "j4YH,j5oV,pbQj,9Xgp,8pmH,aIhV,pcmH,mW4h,ln+3,loJ1,jSqj,gPfN,fhOb,jSVF,fhfP,fibh,3Q+b,btgh,btRN,3RzN,5mEh,5ndN",
                    "51c4": "mV8P,j5fx,8pmH,ewhx,mVuH,mWn1,jSdP,jSYN,dMkN,dLBV,hzEz,hAGh,pcpP,dL+V,8pS1,3RCV,aI8r,aJa9,3QNH,5mNF,9Y5x",
                    9752: "mVf3,mWjV,jS1j,jSVF,gOwP,gPO9,pcgr,gP9x,3QHr,ewhx,ex6F,5naF,3Rk9,bsZr,btOF,8quz,8pFx",
                    "63c9": "jRQP,jSdV,pbQj,677p,4BgV,cdyP,g24V,nGCr,nH2F,lok1,m92H,kDv1,kD93,kDQV,ilfF,kDuX,gPm1,fhBN,g2eb,kDv1,dLI3,dMnV,fhHX,4C61,6UbX,9XLF,dM21,9bdp,68c9",
                    "820c": "mVib,orQx,mVNr,c/0x,hzlP,hAD9,3QEj,c+Ap,c/sF,3RwF,677j,67/F",
                    "67a2": "j4YH,j5s1,pbTr,3QHx,aHRH,j5fx,gOMr,dLF1,nHf3,nGwh,5mEh,5nqh,j5Hz,ex0p,9bpV,9aWz,dM8h,kDNN",
                    8083: "mVib,mWdF,fhXF,fh0h,j4YH,j6kh,pcgr,3R4x,3QrP,6TVh,dLpp,7ETz,c+T9,c/9P,8qop,ex9H,3RzN",
                    9511: "ikaP,or2x,lnEb,ln+9,hzoX,hzO1,c+nP,c+Q1,hzBr,5mlx,9Xw1,pcgr,mVWV,lotj,pcLN,lo4j,loFV,gPHV,gP6p,ce8p,ceN1,8qE1,6UQF,lon3,3Rk9,5mxX,7Fdx,cer9",
                    "889c": "pbNb,lnNF,kCFP,kD61,hzHN,fh6x,cdyV,fh6r,3QHx,ewhr,btd9,c+MP,g2b9,kDcb,kDX9,fhsj,fi51,pcw3,3Rk9,67mX,fhL9,68c9",
                    "68a7": "jRNH,jSh1,pbTr,3QHx,aHRH,jS4x,hzBr,dLF1,nGt3,nHc1,jSnb,jSYN,ex6F,nGLP,ewJF,ewx3,exmh,3R1j,btjp,btUV,3RCV,5mHj,5ngV",
                    "76f8": "j4/P,j5yh,pbTr,3QHx,bsJP,j5fx,hzBr,dLI9,3R4r,nGCx,nH8V,3RCV,ikPr,illV,c/0r,c/yV,67zr,685V",
                    "673d": "jRQP,jSnh,pbWz,3QKF,bsJP,iktF,hzEz,c+Zp,m8P3,m9Eh,m98X,fhBN,fi1V,682N,3Rh1",
                    "71d5": "m8mX,m9y1,pc3X,j5s1,j5R1,pct1,ikwH,9aAN,g1KX,g21N,9X3P,cdUN,g2b3,g2tV,aIGV,aIo9,g2b9,il6b,aIQh,9Y2p,9YeV,bt/9,ewZb,excV,3QuX,7ETF,7F43,3R1p,7FjH,4C99,8qrr,3RJ9",
                    "4ea6": "jRTX,jT31,pcab,lodN,9aeP,g1+F,jSnb,btd9,7EWN,3Qy9,jSFX,5mX1,3R4x,fhUr,9bw9",
                    "4f59": "g1KX,j5lN,orrx,kDy9,ilfF,gPO9,gOPz,gPyx,cdIb,ceGN,gPcz,5mNF,3QX9,4BjX,9aDV,9bab,5nk1",
                    "810f": "4BdH,8pt1,9Xa9,nG49,nGmV,5muV,3QEp,hzs3,hzKV,c+u3,c+MV,orDX,m9ip,loM3,lo4p,9XFp,3QU1,dLXH,dMr1,4BVr,4Cy9,j5+j,4Cfp",
                    9517: "ikaP,pbWF,lnEb,ln+9,hzoX,hzO1,dLcP,dLF1,hzBr,4Bwx,7F49,lo4j,lowx,pcsX,hAb1,hzUb,hAD9,mWjP,hAhh,dLUF,aIl1,3R7z,dLUF,dMkN,3RzN,9XLz,9YbN,682H,67CF",
                    "7ca5": "nFZP,nGjN,ikwN,ikh9,c+u9,c+JN,67gN,5moF,3Qy9,lnWX,ikMp,ikVH,m9c9,g24P,g2A9,pcgr,3R4x,7EZP,g2kx,fhvr,aIN9,nGVb,nHc1,ilp1,il6h,c/jh,c/C1,6891,5ngV,3Rnh",
                    "594f": "mVf3,mWn1,jR+b,jSYN,gOwP,gPO9,pcjz,jSqp,ewqV,bsJV,gPiP,dMbp,ceJV,bt/9,dLBP,dM8h,aI5j,aIZF,5mfb,aIxx,dLRx,9b0P,5ngV",
                    "82ad": "6V13,4CoN,4Bwx,674h,gOGh,gPBF,aIZF,aI2h,gP9r,aIxx,loPb,lnrN,oreX,ikD1,orH3,il39",
                    "8ff8": "nG43,jS7F,g1HP,g1Xx,8pFx,5m5V,8pFr,5my1,4BSp,4Cy9,nGpX,kDfp,jSFX,nGYp,j5rX,j64F,ex6z,ewqV,gP6j,ce8p,8pV9,hAe3,6UE9",
                    "624d": "jRQP,jT69,pcpP,5mTV,3R1p,8psX,9Xjx,cd/1,hA1F,jSCV",
                    6491: "jRQP,jSdV,pbTr,5mlx,3Qv1,aHUP,fhfV,orlb,lodN,pcw3,kDy9,kDHr,nHc1,ikG3,kD99,kDX9,ils9,ikSz,ilfF,fhXF,fhyF,ikSF,c+Wb,dMnV,9YhX,9Xz9,7EZP,7FVh,c/g3,5m+9,3R7F",
                    "78c1": "m8jP,m8M1,m8zr,dL9N,674b,g1Rh,g24V,7EZV,7EKh,orlb,kDrV,jSMb,orWN,jSgX,jT9h,ikSz,cd/1,ceeF,fhEP,5my1,7FmV,9XLz,67M1,ilfz,btz1,btOF,fi1P,4C2V,685V,9bmH,4Cy9",
                    "8e6c": "nG43,nGq1,hzO1,hzs9,nG49,hzBr,7EQx,c+Dr,c+T9,dLfX,66+1,5m2H,8pV9,nGwb,nGP1,kDoN,ewu1,kDcb,j5Ex,nGVb,jSSx,gPHV,fi89,lowr,nHc1,kDX3,ilfF,gPcz,gPBF,dLRr,dMkN,9YbN,9XIx,dLRx,7Fgz,4C61,4Cfj,8qxN,4BIX,4CBh",
                    "675c": "jRNH,jSk9,pbTr,3QHx,aHRH,j5fx,hzBr,c+T9,gP3b,gPO9,5mxX,5nqh,pczb,5n1h",
                    "653e": "oq/j,lnTV,jRNH,jStx,jS4r,bsWp,7EH9,4BdN,fh6r,fhph,67q9,4BzF,pczb,gP9x,jSCP,jT9h,jSYH,ex6F,9Y2p,6UxV,3Q+h,fhBH,aIN9,6UTN,4CBh",
                    6982: "jRNH,jSdV,pbQj,3QEp,aHRH,g1Rh,jS1p,g1Uj,dLBV,ewtX,ewJF,nGFF,nGq1,6Uc1,aIAF,c/0r,8qbV,j5rX,j5Ex,mVZX,mWq9,kDBb,fhEV,fi89,mWdz,fhUx,9X/h,6UxV,4BVx,c/sz,5naF,4CoN,4Cy9,6V4h",
                    "53e4": "jRQP,jT69,pcgr,dLRx,3QHr,dLsx,dMhF,3RwF,67ar,67/F",
                    "53f7": "nGdr,nG/x,j61x,j5fx,nGdx,fgSP,fi89,fhj1,bt3N,btOF,67Vp,4BVx",
                    "614c": "fgSP,jRX9,pbQj,3QEp,kCYz,hzO1,m8LX,m9B9,orrr,j5Ex,orQr,j61x,jSCP,hAhh,hzNX,hAD9,hzXj,dLOp,dMnV,3QNH,67th,cebx,btvP,4C2V,ceAr,5n7x,4ClF,4Cv1,6V4h",
                    "5bc2": "pcab,mVTN,ikh3,m8q9,m9y1,ilp1,jSaH,c+JN,hzHH,hzXp,c+nP,c/3F,66TH,aI5p,c+JH,5mrN,3QEp,aIo3,7Fdx,hA1z,hAtN,9Y2p,3Q+h,hA4H,btC9,6UQF,3RJ9",
                    "811a": "4BgP,aI2h,nG7h,nGmV,67jV,4Btp,ikkb,ikzV,dLmb,dLBV,ln+3,lon9,g27X,g2Dh,pcjz,g2nF,7F49,8qf1,cehH,6UHh,3Rtr,nG/x,nHc1,9Yi1,8quF",
                    "4e5d": "ikh3,il6h,9XY9,5mX1,4C99,4Cv1,7FVh,orlb,ewx9,9XsV,4BgV",
                    9897: "nG43,nGwh,gP3h,gOD9,nG49,kCM3,kDch,nGgz,3QKF,dL9H,dLRx,7ExH,dLvF,cdRz,9aNh,nGCr,nHf9,nGYj,j5U9,9aWz,j5HF,j6aV,9bpV,g2Db,aIQh,8qi9,67FN,3Q+h,8qrr,4Cy9",
                    7405: "m8jP,m8P9,fgSP,fhj1,66WP,9aK9,m8zr,7EQx,pcsX,mW7p,ewGr,excV,mWjV,mVNx,3R4x,7Ft9,ikPr,illV,ewSX,9bgx,6UWV,5nn9,9Y5r,c/C1",
                    "50da": "g1EH,kCSp,pbZN,kCSj,3QEp,m8P3,m9B9,pcw3,kDv1,hA1F,fhm9,jSnb,hA1F,lon3,hAqF,fibh,hAqz,jS/V,g2kr,g2PN,9YbN,9XIx,g2kx,c/0r,c/vN,4BIX,7FgF,9XY3,5m+9,3RaN,8quz,4Cy9",
                    "5c61": "5m5P,cdLp,oq/p,os11,loJ1,lnHp,kD5X,ikMp,hAhb,jSYN,gOPz,gPO9,lodH,dLXN,c+Gz,gPfN,ceQ9,9Xjr,9Yl9,9Y5r,67IV,5mNF,3QKF,c/6H,7F11,67P9,3RG1",
                    "95e8": "3Qy3,kCM9,oq/j,kD61,m8Vj,m9uV,5ngV,3Rqp",
                    5450: "7EDX,kCJ1,kD2V,9XsV,9X71,3R1j,jSqp,jT31,5nk1,3RwF,pczb,g2Dh,c/d1,9XLF,g2Db,aJ3V",
                    6392: "jRQP,jSdV,pbTr,5mlx,3Qv1,cdvH,fhfV,kD5X,kDlF,fhm3,fhyF,9XsP,9XLF,pcjz,3R7F,pcCj,3Rqp,kDEj,kDX9,fhRj,fi51,9Y2j,9Yoh",
                    "5a46": "oq/j,m8IV,lnB3,jS7F,dLj3,hzHN,c+JH,g2b9,ikJh,mVHh,mWn1,kDNN,pcw3,j5U9,j5yb,j67N,g2Gp,c/0x,hA1z,fhL9,c/C1,aHUP,aJa9,dLOj,8pLN,6UuN,3RCV,3QBb,5mHp,aITp",
                    6865: "j4/P,j5s1,pbTr,3QHx,cdyP,j5fx,hzBr,ewu1,nGwb,pcLN,nGOX,j5NV,fhvx,cd/1,j5v3,j6e1,j5U3,fhXF,c/F9,dLUz,8q5F,67zx,3QU1,dMer,3Rtx",
                    6270: "jRQP,jSh1,bsJP,fhm9,pbTr,5mlx,3Qy9,ikG3,ils9,nG/r,kDQV,pcsX,hA7V,aIDN,6Uox,3QQV,fhL3,5m+9,4Cch,4Cv1,6V4h",
                    "81b3": "4BdH,aH/9,nG49,orbV,5muV,3QEp,ikh3,ikzV,c+u3,c+MV,pcmH,mVWV,mW7j,pcIF,m8P3,m9y1,j5Bj,j6aV,g2b3,g2W1,ewGr,cekV,cexp,fh+N,cdXP,ceTh,m9c3,cer9,3R1j,9aQp,9bpV,3RCV,5mHj,5ngV",
                    "901d": "nG0X,jS7F,g1EH,g1Up,6TYp,5m5V,6TYj,4BPh,4Cy9,jSaH,jSzN,orlb,9aNh,7EZV,dLyH,gPfN,7Fgz,ceo1,ewW9,mW19,nHc1,hAe3,hAD9,hAqz,6UQF",
                    "4f3a": "g1HP,kCSp,pbZN,kCSj,3QEp,mVE3,mWn1,5nk1,3Rqp,j5oP,j64F,6Uib,fhph,fhOh,9bah,9aNh",
                    "819b": "4BdH,7EE1,aH/9,nG49,nGmV,5muV,3QEp,hzs3,hzKV,c+u3,c+MV,nGwb,kDoN,pcw3,j5U9,kDEj,nH8V,g2b3,j5v9,j6e1,g2W1,g2kr,g2MF,ceDF,cebx,g2kx,8pYb,8qAV,4BM3,4Cy9,cer3,4C99",
                    "56e2": "4Bn3,nG49,nH8V,4CrV,ikqr,ilcx,m92H,9XON,8pYh,aI8r,c+Q1,ikVN,6713,685V",
                    "95fb": "4Bn3,lnB9,pbQj,m8FN,nGzj,nH8V,5ngV,3Rqp,jS4r,jSSx,jSdP,9XsV,jSFX,5mX1,g24P,g2x1,c+MP,c/d1,9Xgj,9Y5x",
                    5413: "9X6X,mVc1,mVxV,cdXV,cdC1,mVAX,mWq9,mVWP,3RdV,hAhb,btY1",
                    "4fe1": "g1EH,or5F,kCSj,3QEp,pcmH,mW4h,lnQH,loPh,hzR3,hAwV,dLI3,dMnV,3QX3,aIo9,aJ0N,3RzN,5mB3,5ndN",
                    "96c5": "mVbX,mVHh,jS1j,fgZ9,fhph,mVxP,5muV,3QEp,6TIH,fhcN,hzUb,kDlF,orAV,kDlz,3R7F,pczb,m9oF,kDlz,kDX9,g2nz,g2W1,btpz,btY1,67Cz,68c9,kDEj,67Vp",
                    9057: "nG0X,jS7F,g1EH,g1Xx,7EQx,5m91,7EQr,4BSp,4Cy9,mVE3,mWdF,jSVF,jSk9,mVE9,pcpP,hA7V,hzHH,hAD9,9XCb,fhph,fhXF,9Y8F,c/cX,9aZN,6Uf9,9X/b,6UWV",
                    "4f18": "fgSP,jS1p,or5F,jS1j,3QEp,ikwH,ils9,pcmH,ewMN,9XIx,6Uf9,4BCN,orKb,kDNN,fhL3,5m+9,4Cch,4CrV,6V4h",
                    8018: "m8jP,m8Sh,ikdX,ikG9,ev+H,ewAh,pbWz,3QKF,7EAP,ewkF,c+Gz,9XCh,m8/z,m9y1,fhsj,fi89,fhOb,4BSp,685V,9Y8F,3RJ9",
                    "5f20": "nG0X,nGmV,ikzV,ikh9,c+u9,c+MV,67jV,5mrN,3QBh,pcjz,3R7F,6UE9,fhm3,fi89,hAaX,nHc1,fhL3,9bgx,685V,4Cy9",
                    "5cd9": "jRTX,7EE1,9aH1,or2r,8pFx,jSgX,6Uc1,lo4j,loJ1,gP3b,gPRh,pcw3,gPp9,ce8j,ceQ9,9XLz,7Fq1,gPBz,5naF,3Rk9",
                    7740: "or8H,m8Vp,m98X,orNp,m8q3,m9y1,j59b,j6aV,g1KX,g2Z9,m8/z,hzUh,dLyN,9X3V,3QNH,dLyN,dMhF,3RwF,aIeH,aIZF,7EWH,7FFF,5mrH,5naF",
                    "783c": "m8jP,m8P9,m8Cz,c+kN,4Bqb,g1Rh,g24V,7EZV,7EKh,pcw3,m9c9,kDv1,hA4N,g2kx,ewx9,m9c3,kDBh,hAnx,g2PN,exj9,c+Zj,c/yV,c/g3,4C99,4BM3,4Cy9",
                    "216b": "5m8X,5mrN,5mxX,5mQN,5mTP,5nk1,5ndH,nH5N,nHbX,nGLV,nGIH,nGq1,nGjH,nG11,nG7b,5mKx,5mfb,nGCx,nGS3,5m+9",
                    5305: "gOwP,pc0V,lnKr,loCN,btRN,9b79,7FOX,4CoN,4BCN,5mip,hzyp,hA7V,btvV,bsWp",
                    "79c9": "nG7b,pcIF,nGCr,3R4x,lnuP,loM9,ikkb,ilcx,btLx,bsTh,fgSP,fi89,5m5P,7EQx,btgh,btpz,8qlh,6891",
                    "98a4": "pbTr,mVxV,mV5H,mVNx,kCIX,kDfp,ewDp,ew51,kCJ1,iknj,ikD1,g281,g1Up,iknp,c+u3,c+Wh,8pYh,8pw9,c+u9,aH/3,aIrh,4BgP,67zx,nGFz,nHih,nG/r,j5U9,8q8H,ikVN,illV,8qAV,g2Gj,9Y2p,7Fwh,5mTV,3R4x,7FCr,3RJ9",
                    "6ec1": "4BgP,c+Dx,g1Rb,ik7N,nG0X,kCVx,3QNH,nGjN,nGCx,hzO1,fhph,cebx,9Xw1,gP6j,kDrV,orKh,kDEp,j67N,hAD9,hA4H,hAwV,dMu3,dLRx,hAhb,5n1h,3RdV,67wj,aIGV,btOz,68c9",
                    "888b": "j4/P,pc41,m8zr,ewhx,kD2P,loJ1,orKb,m9rN,pcjz,kDrV,g2Gp,excV,gPO9,dLcP,dMu9,g2eb,dLXN,7EAP,dLRx,9XpH,3QNN,67wp,btmr,7Ft9,3RG1,7FpX,aIZF",
                    "8fed": "nG0X,jS7F,g1EH,g1Up,6TYp,5m5V,6TYj,4BM9,4Cy9,gOYX,nGCx,jSnb,jS/V,ewqP,exj9,pcsX,dL+V,aIAF,7F11,c/cX,aIWx,7FP1",
                    9975: "pbTr,hziN,kCPb,kD61,hzHN,gOJj,4Btp,9aH1,mVE3,mWth,mVQz,8q5F,mWgH,3RzN,iliH,ikSF,dLUz,dMkN,7F43,9bzh",
                    "4f0f": "fgPH,pbZN,jS1j,3QEp,hzHH,hAGh,pcpP,g2tV,c/6N,8p/p,4BCN,fhEP,aIQh,7FFF,4Cy9,nG/r,kDQV",
                    "66f4": "nFZP,nHf9,kCVr,kDKF,c/sF,c+Dx,kCVx,gOMr,gPBF,nGFz,dLUF,9XIx,7F7h,4Bk1,cdOr,8p/p,67Sh,4Cy9",
                    "88f9": "pcab,mVTN,m8jP,m9B9,jS4r,jSSx,fhUx,fh6x,jS4x,hzBr,hAnx,jStr,aIxx,dLfX,dMr1,9X6X,dLRx,9Yl9,5m5P,aIrh,9aGX,3QU1,6UrF,aIAz,7Ft9,3RJ9,7Fwb,9bgx",
                    "72d0": "nG0X,jS4x,gOSN,cdXV,7EWN,5mlx,4Bk1,hzlP,nGmV,aHRH,g21N,4BCH,8pV9,dLOp,m8Vp,nH8V,m98X,9XV1,5mNF,6UKp,9XY3,5naF,mWar,g2Jx,btOF,4Cy9",
                    "853c": "7F43,4Bwx,ewhx,ew1V,hzKP,j5cp,m8mX,m9B9,pcw3,kDy9,pc3X,kD61,j5Er,j64F,ex6F,ewGx,j5Ex,gP9r,gPBF,dLXH,9Xz9,cebx,ceN1,6891,4ClF,5n7r,5mHp,9XFp,btFb,6UrF,9XY3,7FIN",
                    "8c79": "pc3X,lny1,m8FH,kD61,jR+b,ikqx,g1HP,lo4p,ikwH,fhm9,c+Wh,9XFp,7Fap,67q9,4Bwx,bsJP,g281,c+T3,7EE1,gP6j,pczh,kDrP,kDX9,685V,4ClF,3Rk9,hA7P,c/px",
                    "52c3": "m8jP,m92N,pbZH,ikwN,fgVX,ike1,ikSF,fhyF,ewbb,ewDp,cdXV,5muV,3QEp,8psX,btpF,j5KH,j6e1,5nk1,3Rqp,pczb,hAhh,cer9,8qbV,3R1p",
                    5531: "9ahX,nG11,nGjN,bt3N,bsN1,orrr,orZV,hAwV,hz+x,orrx,kDir,kDQV,3Q+b,ewAh,exg1,3RG1,aIrb,aJ71,688X,67th",
                    "693d": "j4/P,j5v9,pbTr,3QHx,9X3P,dLmh,j5fx,gOMr,c+T9,pcw3,jSwF,jSVF,mVZX,mWjV,hAnx,hz+r,hAD9,hAhb,fhEV,c+Wh,fhEP,ceuh,67Sh,3R7F,dM53,9XFp,btFb,7FjN,67q9,ceub,fi1V,c/mj,9bjF,5nn9",
                    "6c2e": "j4YH,pbWF,mVlj,mWn1,kCVr,kDNN,ikh3,ilcx,aITp,4CrV,6V19,gOPz,dLmh,gPiP,ewGx,hzUb,dLF1,aHY1,ewx3,btC9,bt0z,8pzh,ce23,7F11,3Qv1,8pV3,4Cch,8q2r,aIGV",
                    "4e22": "m8tb,nH5N,hzvb,hAwV,c+kH,c/Ih,lo7r,c/0x,cebr,5mip,6UNx,9XUX,4CrV",
                    "85e9": "mV8P,mWq9,pc3X,jSh1,pczb,jSMh,j563,gOPF,fgSP,cdOx,4BgP,aI8x,ikzP,j6aV,ikYP,5mTV,fh9z,fibh,hzR3,fhvx,hAqz,fhOh,ewMH,aIeN,hAaX,9Yl9,3QTX,aIl1,aJ0N,3RzN,7F0X,7FIN,5mxX,5ndN",
                    "91dc": "jRX3,orf1,orAP,kDNN,m8FH,jSk9,hA1F,g2Dh,exj9,orAP,kDNN,m9fb,j5KN,gP09,fh3p,ew1V,dLpj,dMhF,9Xdb,9YbN,9aur,67n1,67LX,9bgx,4BjX,4Cv1,dLRr,4BVx",
                    "8eac": "m8Cz,pc0V,3QQP,67zx,m8Yx,m8th,cdIh,j59b,j5Ex,fhvr,fh0h,cdBX,cebx,ce5b,8pLN,4Bk1,nGIH,nH8V,hAwV,hAb1,c/d1,c/C1,6891,5ngV,4CoN,3Rnh",
                    "90af": "jRNH,jSzN,oqYb,4Bqh,orlb,7F7h,7EKh,ewbb,ewAh,3RgX,nGP1,nHf9,hAkp,c/C1,9Yl9,7Fzp",
                    "534e": "gOwP,lnKx,pc0V,lnKr,cdOx,hzNX,kDBh,mWgN,pcjz,c/3F,dLXN,dMkN,gPL1,9X3P,9Yl9,c/0r,3R4x",
                    "7a3d": "nFZP,orbV,nGaj,3QEp,j4YH,j5s1,aHRH,j5cp,g1Uj,c+MV,m8LX,m9B9,pcpP,jSwF,gOZ1,m9c3,hAe9,hAA1,jT69,pcCj,mWgN,gP3b,c+Wh,c/vN,exg1,g2eb,g2PN,3Q+b,aIrh,aJ0N,3RzN,8pYb,8qxN,5ndH,5mEh",
                    5409: "kCFP,kDX9,g1Rb,g2PN,pcgr,g2kx,3QHr,cdOx,ceDF,3RwF,5mlr,5naF",
                    "952e": "ik7H,pbTx,kCM3,kD2V,gOzX,gOSN,c+nP,c+MV,gOJj,4Btp,7EZV,m8IP,m8Yx,fhj1,fhvx,8p/p,3QNN,bt9X,5mQN,4C99,4Cy9,m92H,m9uV,g2SV,g2qN,j5Hz,j6kh,c/6H,c/C1,9XLz,9Yl9,pczb,67Sh",
                    "59dc": "pbZH,m8P9,m8/z,pczh,m8q3,m9uV,j5cj,j64F,fgVX,fi51,m8Yr,fhvx,cdyP,ceQ9,ewGr,9axF,7FgF,3RG1,btFb,7FjN,5mB9,3Qv1",
                    "8fd1": "nG43,jSaN,g1EH,g1Up,7ENp,5m5V,7ENj,4BPh,4CBh,7EZP,c+Wh,m8Sh,mWgN,gP3b,gPO9,gPvj,6UKp",
                    "60ca": "fgPH,kCM9,pbQj,3QEp,kC/H,gP09,pcpP,mW7p,ln+3,loPh,ikMj,iliN,c/vN,c+Zp,ikMp,5muP,aIAF,c/g3,5m+9,3R7F,9Y8z,68fh",
                    "519b": "jRX3,nG49,nH8V,jS/V,j5cj,j64F,m8Yr,dLpp,dMkN,9aeP,9bw9,gP9r,3R4x",
                    "5f00": "nG43,nH8V,fgSP,fi89,nGpX,ewu1,cdXV,8pIF,4Bk1,nGVb,3Rnh",
                    "594e": "lnxX,loJ1,pcgr,lo4p,ikD1,g1Xx,ev+N,kDlz,hAe9,g2Jx,exmh,fh9z,fhRp,bsTb,btUV,hz+r,btmx,8pFr,8quF,4BjX,4Cv1,aIxr,4BVx",
                    "5ed3": "pcab,mVTN,4BdH,9Xa9,mVf9,mWq9,lnWX,j5Bp,j5fr,j5R1,hzEz,hA4N,dLXN,dLvF,hzEF,cdOr,cekV,9XCh,9XCh,5mEh,3QQV,7ENj,9b0V,3Rnb,jSMh,jT31,ex3x,aJ71,9bw9,6U+1,67Yx",
                    5088: "fgPH,pbWF,jR+b,3QBh,nGmP,nHf9,nGFz,fhyF,nGVb,fhOh,jSgX,jS/V,fi1V,fhj1,jSh1,cdUH,ceQ9,ewPP,3RdV,5moz,7F7h,cekV,8qop,5nn9",
                    8054: "nFZP,nGzp,nG7b,8pzh,7ExH,9XFp,nGpX,3QU1,ikkb,ikD1,dLEX,dLmh,pcgr,lok1,jSMb,orZV,jSqj,jT69,dLLb,dMu9,jSMb,dM8h,9XV1,6UuN,3Q+h,btFb,6UQF,3RJ9",
                    5499: "8psX,m8n1,m8FN,aIeN,aHY1,j5rX,j6h9,orKb,loCN,j5rX,j6h9,pcmH,ewJF,7F7h,3QEp,5mHj,9X/h,fh+N,gPp3,5m+9,4Cch,4CrV,68c9",
                    "964b": "3QuX,oqS1,orbV,iknp,g21N,dLBV,cdUN,aI2h,kD93,5mB9,5nn9,nGwb,nHc1,nGVb,gPsh,cehN,gPsb,c/sF,7Fgz,jSwF,jS/V,9YeV,7FCx",
                    "66fc": "or2r,orQx,jSSx,jS4x,or2x,m8zr,m9lx,hzvb,hAtN,dMkN,dLmh,hzvh,hzR3,dLI9,hAaX,dM21,bsWj,btIp,7FjN,5my1,3Qv1,aIhP,6Uox,5m+9,3RJ9",
                    "951a": "ik7H,lnEh,or2x,lnEb,lnX1,hzoX,hzO1,c+nP,c+Q1,hzyj,3QEp,7F11,ln+3,loM9,pcjz,hA1F,pcFr,hAnx,3R1j,fhsp,fi1V,3RCV,aIuj,aJ3V,fhL3,5m+9,5mHj,5ngV",
                    "547d": "hzlP,lnTV,pcgx,lok1,j64F,hAD9,ikwH,il9p,674b,ewbh,ewx9,7F49,7EKh,3RaH,ewMN,ex9N,7FIN,67Sh",
                    "83ab": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,jS4r,jSVF,c/sF,c+Dx,jS4x,gOMr,gPBF,9X0H,9Yoh,c/3z,8p/p,67n1,3Qv1,9XIr,6UB1,5n7x,3RJ9",
                    "72de": "nG0X,kCYF,gOVV,9aH1,6U8V,5mrN,4Bn9,gOwP,nGq1,aHUP,gOVV,pcpP,m9lx,hzUb,lo1h,loM9,hAD9,ewAb,exmh,ewZb,5n1h,4B/N",
                    "5f04": "nG43,nH8V,kCSj,kDKF,g1KX,g2W1,nGCr,g2kx,bsJP,bt/9,ewtX,9Xw1,6U5N,4Bn9,ewW3,3Rk9",
                    5288: "ew1P,j5cp,nGap,nGzp,j5Bp,j5cp,gOJj,gP6p,c+Zp,c+Ap,gOJp,pcw3,nGYp,m8/z,m9B9,kDrP,hAe9,hAnr,kDNN,hz+r,hAD9,ewJz,exg1,hAkj,btIp,9Xdb,9YbN,5naF,3Rh1,9XFj,67n1,4Bwx,3Qv1",
                    "7bc7": "jRQP,pbWF,mVlj,mVQF,mVrz,jSh1,kDir,pcw9,mVWP,mWq9,mW4b,jSVF,jSqj,ikVN,66TH,9aoh,cdLp,iknp,ilfF,fhXF,fh3p,3QEj,cdLp,ceJV,5ngV,3Rqp,9arj,9bpV,ce5b,4BPh,cenX,4C61",
                    "6ce3": "nG43,lnNF,hziH,ewep,3QrP,bt0F,oruz,kDBh,j5oP,j6e1,g2eb,7FjN,g2PH,5mX1,5mrH,5nqh",
                    "4edf": "g1HP,pc0V,kCVr,3QHx,m8P3,mWn1,fhiX,fibh,m9c3,3Rk9",
                    "5c48": "5m5P,9aoh,cdLp,nGap,nH5N,j67N,j5cp,gOYX,cd/1,ceGN,gPEN,hA4H,5mQN,9XpH,5mrN,5ngV,9YeP,3RCV",
                    "6cc9": "mVHb,pcgx,mVor,mWdF,fhXF,fh6x,mVox,jS4r,jSVF,cdBX,ce29,8pLN,5m5V,ewJz,5mNF,3QX9,c/3z,9XV1,6UQF,5nn9,9XUX,c/yV",
                    "8d5b": "pcdj,mVTN,jRX3,mVf9,mWjV,jS/V,kCVr,kDKF,hzEz,hAnx,fgSP,fi89,m8LX,fhj1,m98X,fhI1,9X3P,cdRF,fhj1,fhHX,cexp,9Yl9,6U2z,cdRF,cexp,6UKp,3Qy3,4BzF,5my1,7Fap,9XLF,6UxP,3RCV",
                    "745f": "nG0X,nGzp,jRX3,jSnh,g1HP,g2eh,nGgz,g1+F,nGFz,nHc1,jSzH,jS/V,g2nz,g2Z9,nGVb,g2Dh,7EDX,cdLp,4BjX,6U8V,9aWF,btC9,dMex,ewAb,btsN,btOz,7FS9,cdXP,5muV,4BJ1,4C99,5n1h,8qrx",
                    7272: "g1EH,mVf9,jRTX,jSk9,pbTr,3QHx,aHRH,ewx9,g2eb,nGIN,j5Er,j6e1,c+Zj,c/C1,5mxX,5nqh,pczb,5n1h",
                    "6e7f": "oqRX,lnKx,ikaP,g1Up,4BjX,cdOx,nGpX,nH5N,g2PN,g281,nGq1,jSgX,jSYN,c+MP,8pYh,8qoj,c/yV,g2nz,4BYF,g2A3,4C99,4Bzz,4Cy9",
                    "5eb6": "oroj,m95V,loM3,lnHp,cdLp,9aoh,4BdN,gOPz,gPL1,jSnb,btgh,btFh,jSMh,3QHr,8pS1,7Faj,4BYF,8qbP,4Cfp,9bgr,4Cy9",
                    "971c": "oqYb,orZV,ikdX,m8n1,m9y1,ilp1,oruz,g2nF,jS1j,jSnh,hzyj,hzUh,jSCP,jSYN,hAtH,hA7V,c+qX,c+Wh,g1+z,3QKF,6TLP,c+GF,cdRz,8pYh,3R4r,ewGx,excV,3RCV,cebr,ceJV,9aTr,9bpV,5mKr,5ngV",
                    "5b83": "orlb,m92N,hzs3,kCM9,kDU1,hAA1,hzHH,5mrN,4BFV,4ClF,7FLV,bt3H,ex3x",
                    "915e": "mV8P,mVHh,mVor,g1Xx,bsQ9,mVuH,c+JN,ce29,9ahX,9aK9,3QuX,j531,j5v9,5mB9,5m91,ikG3,ils9,orH3,gPp9,9XON,3QX9,9b0P,67Sh,gPp3,9Y5x,685V,4CBh",
                    5385: "66WP,9Xdh,ewep,nGap,nHc1,hzKP,hAD9,hAe3,67P9,4BYF",
                    "916e": "mV8P,mVKp,mVor,g1Xx,c+u9,mVxP,dLBV,c+Wh,4BjX,j531,j5yh,6Uih,6TP1,9X6X,9XCh,4BYz,mVQF,mWn1,6891,4ClF,ikYP,iliN,fhHX,fhXF,9Y8F,9XV1,fhI1",
                    "5fd8": "ori3,lodN,kCFP,kDU1,kCYz,ewkF,ex3x,5m5P,aI5p,bt6P,5muV,4BJ1,4Cch,6UNx,ce8j,9aZN,aIWr,68c9",
                    "4e3a": "nGgz,kD61,hzs3,illV,685V,3Rk9,c/6H,9X/h,orxH,ewGx,9aH1,4Bn9",
                    5438: "9ahX,mVc1,mVuN,bt3N,bsN1,5mij,7EZV,9XCh,dLRx,nGFF,nGt3,nH5N,g2A9,g2SV,ceDF,8qlh,67FN,3QX9,ewMH,9bah,3RG1",
                    "6eaa": "oqV3,lnQN,j4/P,g1Xx,4BgP,c+Dx,nGmP,os11,m8LX,j5Bp,m92H,j5U9,j61r,m9uV,j5KH,g2b9,g2Dh,hAnr,ce8p,cd+X,c/sF,ex3r,btUV,9axz,9bw9,cekP,8q8N,5mHp,3QKF,9b0P,67Sh,3RG1",
                    "5bb5": "pcab,mVTN,ikdX,m8n1,m9y1,ilp1,j5iz,gP09,jStr,fhvx,gPp3,jSVF,3QEj,fh3p,fhXF,5naF,3Rnh,cdLj,ceDF,8pCj,8quF",
                    "6b47": "nG7b,nGCx,hz+x,hzvh,nG7h,kCPb,kDix,cdyP,ewbh,hzEF,ewbb,ewJF,6Uox,5my1,dLBP,9arp,bt3H,9aK9,cdF3,6TS9,6Uc1,g2nz,jSG1,pczh,jSFX,jT31,g2SV,gPvj,cexp,8qi9,3R4x,cexj,8quF,3RJ9",
                    "60ac": "fh6r,nGdx,nG/x,fhUx,kCVr,kDHx,ikqr,ilcx,fgSP,fi89,fhm3,bsTh,c/mp,ewSX,btRN,4BgP,9arp,9XsP,5muV,4BJ1,4C99,7Fzp,aIuj,8q8N,9Y5r,5nn9",
                    8840: "oroj,kD61,677j,kCSp,kDKF,67/F,kD93,67q9,kDrP,67IV,66TH,68fh",
                    8170: "4BgP,9al9,bsTh,nG7h,nGmV,67jV,4Bwx,ikkb,ikzV,c+xb,c+MV,nGwb,nHf9,nGLP,fhEV,nGYj,fhRp,kDfj,kDQV,fi1V,fhsp,kDfp,ce23,ceQ9,fhL3,9aTx,6UKp,4Cv1,3Q+b,67P9,8qrx,ceDF",
                    8981: "nFZP,nHf9,nGt3,g2b9,nGLP,g2tV,kCPb,kDNN,g2PN,g1Rh,kCPh,cdyP,ceQ9,fhvr,9axF,7FmV,4CrV,ceub,7FgF,5muV,4Bn9",
                    "5c39": "nGaj,nH2F,btOF,ikaP,ils9,c+u3,c/sF,nGt3,gOZ1,cdXV,9axF,4BgV",
                    8425: "mVbX,mWq9,pc3X,jSh1,pcw3,jSJ9,fgVX,j531,j6e1,fi51,g21H,g2Gp,cexp,cdUN,g21N,3QHr,9Xjx,9Y8F,3RwF,5mlr,5naF",
                    "72f1": "gOwP,nGmV,aHUP,g1+F,nG0X,lnHp,hzEF,7EWN,67dF,4Bn9,nGwb,jStx,hzKP,hzXp,6Ulp,9XON,hA4H,hAD9,nH5H,kDU1,pcCj,g2Gp,ceuh,7Fq1,3R1p,g2Gj,8qxN,4Cy9",
                    5143: "mVlj,mWgN,hzlP,hAD9,4BgP,6T/x,9XsV,bta1,hzR9,hA7P,67IV,5mX1,5ngV,8qH9",
                    "6e23": "nG7b,lnNF,hzoX,fh3p,4BjX,cdOx,kD2P,kDU1,pcpP,dL+V,ewnH,gP3h,kDrV,hAkp,exj9,dLI3,dMhF,7FFF,7F49,dLI9,aIo3,aIZF,4Bzz,4Cy9",
                    6458: "j4/P,j5s1,pbTr,5mlx,3Qy9,bsJP,fhfV,pcpP,mW19,m8LX,m9B9,kDir,hA7V,hAhb,kDKF,3QX3,hzR9,hAA1,5nk1,3RwF,dLRr,dMhF,hAe3,aIN9,aIAz,aIWx,6UNx,6UrF,aIAF",
                    "62ef": "jRQP,jSk9,pbTr,67ax,4BgV,bsJP,fhj1,nGwb,nH8V,j5R1,9b41,7Fdx,hzNX,hA1F,ce8p,8pLN,fhL3,ilp1,g2Gj,btRN,8qH9,4BCH,4Cy9",
                    "77e5": "hzs3,or8N,lnKr,lodN,ew4X,ewMN,lnWX,aIhV,6T/x,4Bk1,bt9X,7FgF,5mWX,kDv1,kDU1,5nk1,6UAX,6U+1",
                    "8d2e": "9al3,nG49,nGt9,9aK9,kCYz,9aux,3QrV,8pLH,3Q+h,pcsX,m9ip,g2kr,kDix,kDU1,g2W1,5mHj,5nqh",
                    "8f6c": "kCFP,kDch,or8H,dLg1,dLOp,hzHH,3QNN,8ppP,aIup,kDir,kDU1,gP3b,gPO9,pczb,c/6N,c/C1,6UKp,8qbP,4CoN",
                    "6cd3": "oqRX,lnNF,ik7H,fh3p,3QrP,cdRF,nGjH,nGIN,ikVN,ikzV,dLyN,dLXN,6UrF,4BFV,orTz,4C2V,6891,3RJ3,ex9N",
                    "642c": "3QrP,5mfh,pbNh,bsGH,dLsx,j4YH,j5lN,pcdj,m8P9,3QHr,8pOV,m8IV,m8/F,5mNF,3Q+h,ewkz,ewPV,j5v3,gP9x,ce23,9aTx,fhEP,il39,mW19,mWgN,gPEN,gPO9,3RaH,67Sh,9Y8F,dMnV,dM59,9X/h,682N,3RJ9",
                    "8d2c": "9Xa3,nG49,nGt9,aIo9,jS7z,9aux,6TVh,4BgV,8pOP,3R1p,m8Vj,os11,lojX,il9p,gP9r,gPL1,aIQh,67th,7Fgz,4C99,4CBh",
                    "518c": "3QrP,9Xgp,oq/p,orlh,67th,4BCN,4BVr,9XRV,orAV,orWN,682N,3Rnh,g1EH,g30h",
                    "7fc5": "kCCH,kD99,pbTr,gOMx,gOwV,gOZ1,aIeN,4BgV,dLj3,7ETF,4BSp,4CBh,nGt3,nGLV,8qbV,6Uox,jSnb,gPcF,bt9X,gPcF,nGS3,nH8V,9bpV,7FCx,jSJ3,gPyx,cer3,fi1V",
                    7601: "cdvH,fh6x,kCFP,hzvh,4BgP,7EKh,9Xgp,cdOx,m8zx,m9B9,pcgr,mVWV,kDoH,il39,hzKP,hAA1,gP9r,bt6V,ewAb,ceeF,gPyr,btvV,ex0j,btUV,8pIz,8qH9,aIGP,3RdV",
                    "6ec7": "nG43,lnNF,ikaP,fh6x,4BjX,cdRF,mVxP,mWn1,pcsX,jSzN,8pV3,jSk9,jSVF,8quF,gP03,gPBF,dMhz,dLI9,btd3,btOF,8pIz,8qKh,3QKz,7FgF,7Fwb,3RJ9",
                    "593a": "m8mX,m9B9,pcjz,kDch,hzHN,ew1V,loaz,il39,gPyx,exj9,c+qX,c/F9,bt0z,7Fap,gPsb,5n1h,3R7F",
                    "4e30": "kCIX,kDU1,fh0b,fh+N,aHRH,aJdh,pcgr,3R4x",
                    "7f94": "or8H,lo4p,kDlz,orNp,kCM3,kDQV,g1Uj,g2PN,aHUP,aJa9,kDir,aIxx,8pFr,3QrV,9aGX,4BPh,9aZH,4C99,9bgr,4Cy9",
                    "8d2f": "nGdr,nG/x,hAnx,hzBx,nGdx,kCCH,kD+h,nGCr,hz+x,8pCj,ewep,ex6F,8quF,cebr,7F7h,67jV,3Qv1,8qbP,4Cv1",
                    "6a2a": "jRNH,jSdV,pbQj,3QEp,bsGH,jS1p,hzyj,dLBV,mVAX,mWn1,ikCX,ils9,pcjz,ikSF,pcCj,il9p,fhm3,fh+N,9bmN,9aK9,fhm9,c+T3,c/vN,ik/X,9b41,3QNH,8q5F,8qlb,3RG1",
                    "4f1a": "g1HP,orop,jSMh,gPO9,gOPz,gPvp,cdBX,ceN1,btjj,4Bqh,67Vp,9b0P,3RzN",
                    "575a": "nG7b,dLmh,orbP,c+MV,nGwb,nH8V,jSSx,gPm1,dLI9,mVNr,j5NV,g2Jx,dMu9,aI5j,aJ0N,dLRr,5mKx,5m5P,5nn9",
                    "7ed3": "or5z,gOwV,hzHN,kD5X,aHY1,ce29,4BgP,7F49,kDcb,kDX9,pczb,fhOh,fhsj,fi51,3R4r,btmx,btUV,3RCV,5mKr,5ngV",
                    "8e1e": "nG0X,nGt9,hzR9,hzp1,nG11,hzEz,6U2F,c+Gz,c+Wh,dLj3,6719,4BgP,8pYh,5mxX,9aQp,c/0x,orrx,os11,j6e1,j5Ex,fhvr,fibh,j5+j,btIp,3RaH,btsN,btY1,3RG1,5mQH,5nk1",
                    9177: "mV5H,mVKp,mVlj,g1Up,cdC1,mVuH,dLyN,c+MV,c+T9,4BgP,j4/V,j5v9,67q9,66WV,9X3P,9Xz9,ikMj,nGLV,kDlz,kDX9,pczb,fhOh,fhpb,fibh,3R7z,btpF,btRN,3RzN,5mNz,5ndN",
                    "6cea": "oq/j,m8IV,ikdX,g1+F,4Bn3,cdUN,3R1j,mVKp,mWjV,3RCV,hzXj,hAwV,ceJP,ce8p,67wj,685V",
                    "73b2": "m8gH,m8P9,g1HP,g281,6TIH,9Xz9,m8wj,8pCp,g24P,j5Ex,orE1,nGOX,kDEp,iliN,gPO9,ikYP,ewZh,c+T3,c/yV,6UB1,8q5z,3Rqp",
                    "7ba9": "jRTX,pbWF,mVlj,mVNx,mVuH,jSk9,kDlz,pcw9,mVZX,mWq9,mW4b,jSVF,j5cj,j67N,ex9N,ewep,j5cp,j5v3,ewx9,j5NP,ewPV,9aob,dLLh,bt6P,btLx,7Fq1,5mHp,4BJ1,3QBh,9aK3,6UrF",
                    5195: "oq/j,orTF,j64F,j5cp,oq/p,m8Cz,m9ip,dLfX,j5v9,hzKP,hAhh,ewPV,ewej,ex9N,aJ0N,aI5p,ewep,ewJz,9XFp,6U8V,3Qv1,9XLz,5mNF,4B/N,4CrV,7FS9",
                    "5c3c": "4BgP,8pzh,aI5p,nGap,nH2F,ilfF,iknp,g2eb,5mEh,4BSp,4CoN,7FP1,9XCb,ex9N",
                    "88f4": "m8mX,m8P9,j5v3,j59h,gOzX,gP09,ori3,dLI9,orAP,dL+V,m95P,m9y1,j6aP,j5NV,g2tP,g2Z9,fhsj,c/6N,cdyP,ceQ9,ce8j,9XsV,7EE1,9XsP,3QQV,6Uox,aIxr,6UE9,5n7x,3RJ9,7Ft3,9Y8F",
                    "6f06": "oqV3,lnNF,ikaP,g1Up,4BjX,c+Dx,m8FH,m9y1,pcpP,hA7V,g21H,ikMp,m95V,hAA1,bt3H,c+Wh,gPiV,ewZh,c/sF,ceQ9,btgb,9aWF,67jP,8qbV,dL+P,5mTV,3R4x,9b0P,5nk1,8qi3,btOF",
                    "8f7b": "lnrH,lo1h,pbWz,dLg1,dLLh,8ppP,9XCh,hzEz,3QKF,nGzj,nH8V,il6h,ewDp,il6b,fi89,cebr,ceN1,5mEb,5nqh,ceub,5n1h",
                    "67d4": "oq/j,orZV,kDlF,m8P3,jSzN,jRTX,jT69,g2PN,jSzH,fhBN,dLOp,jSwz,g2b9,dLmh,bsJP,bt/9,c/3z,3R7F,5m5P,6U2F,8pS1,btmx,btsH,7Fzp,5nn9",
                    "820d": "gOwP,kD2V,orrx,kDy9,gPO9,iktz,il9p,ew4X,exg1,ikPr,aIxx,3QHr,aI8x,aIWx,3Rtx,5mlr,5n7x",
                    "68b3": "j4/P,j5s1,pbTr,3QHx,aHRH,j5fx,gOMr,dLF1,pcmH,mW4h,ln+3,loJ1,lojX,ewx9,fh+N,il9j,exg1,3QQP,67th,8q2x,c/0x,c/cX,4C61,c/pr,5n7x,4ClF,4Cv1,6V4h",
                    9178: "mV8P,mVNx,mVor,g1Xx,c+xh,mVxP,dLBV,dLLh,9Xa3,9XCh,3Qy3,j569,j5yh,5mEh,5mc9,pczb,j5Ex,jS/V,mWdz,j6h9,ewGr,il01,ilfz,exmh,9XFj,c/9V,fhL9,c/9P,c/yV,8qop,5mQN,3Q+h,9XRP,7Fwh,5naF,3RJ9",
                    "63d0": "jRNH,jSh1,bsJP,fhj1,pbTr,5mlx,3Qy9,nGzj,nH5N,gPEN,gP6p,nGzp,kDfj,kDNN,dLEX,dMu9,dM53,5m+9,9XY3,9Yi1,4BFP,9aQp,btmx,9aQj,4C61,4CBh",
                    "6b6a": "mVbX,mWn1,mVTH,j5v9,fgSV,kDir,ewGx,j5QX,fi89,dLmb,dMkN,dLRr,5mKx,9XIr,9Y8F,aIbz,5moF,5m5P,5nn9",
                    "543e": "nG43,nH8V,jS1j,jSPp,ewZh,nGzj,ewqV,ew1P,exj9,3QKz,bt0F,btLx,3Rtx,67dz,67Yx",
                    "53a2": "5m5P,8pw9,aI2h,nG7h,nHf9,hzBr,hz+x,lnWX,3QU1,9Xgj,g281,fhiX,cebx,3RdP,jSCV,jS/V,3RCV,g2tP,g2SV,btvP,btUV,6UxP,6UWV",
                    "55c5": "8psX,mVc1,mVuN,bt3N,bsN1,pcsX,mVQF,mVHh,dLLh,dMkN,mWgN,mVQF,jSnb,jSYN,hAtH,hzUh,9XvX,9Yl9,c/mj,btOF,c/cX,9b0V,67zx,4BM9,3QNN,9b3X,67Yx,3RG1",
                    "538c": "4BgP,9Xdh,dLpp,mVlp,mWn1,jSMb,hAqF,fh9z,fi1V,loaz,ewJF,9aNh,5moF,ewJz,9b79,5ngV",
                    "88d4": "pcab,mVTN,m8mX,m9y1,m8Sb,j5oV,g1L1,j5oP,dLBV,gPcF,m8Yr,hAe9,g2Jx,exj9,hAe3,kDKF,3QEj,dLpp,dMkN,5ndN,3Rqp,c+Zj,9aAN,c/9P,9bdp,9aK3,9b79,67P9,67q9,9aK9",
                    "4fde": "gOwP,jS7F,orrx,kDBh,hAD9,j5lH,j5+p,3QEj,g1Up,g2hp,5mHp,3QU1,c+Aj,c+Zp,9Xgj,9XFp,ewSX,7Fq1,g2PH,5ndN,3Rnh",
                    "846c": "mVbX,mWn1,pc3X,kD61,pcw3,kDy9,j59b,j6aV,bsQ3,j5s1,g1+z,g2kx,c+Q1,aH/9,ewkz,c+MV,hA7P,c/9V,ceo1,ceGN,exg1,ewPP,gPBF,9ahX,9bw9,3Qy3,5mrN,6Uc1,btd9,btFb,3Rnh",
                    8517: "mVbX,mWq9,pc3X,jSh1,pcw3,jSJ9,kDfj,ikVN,iloX,iknp,9Xgp,4BgV,dLvz,dMu9,g2eb,9XCh,9X/h,g2Dh,3QEj,7EZV,7F7b,3R4x,7FpX,3Rnh,8quz,3RG1",
                    "8f74": "kCCH,kDch,pbWz,dLcV,dLLh,hzHH,3QNN,7EAP,9XCh,3R7z,jSwF,jT31,3RG1,dLUz,dMr1,67Cz,6891,pczb,67Sh",
                    "63cd": "jRNH,jSh1,oq/j,5mip,3Qv1,aHUP,fhj1,m8Vj,m9y1,jSYH,jStx,gP03,gPO9,orKb,il01,ewJF,bta1,gPyr,dMkN,ceQ9,dLXH,dMhF,9XCb,9YeV,dM8b,8qbV,4BM9,7Fzj,4Cv1",
                    8446: "mV8P,mWjV,orbP,jSdV,orDX,jSG1,kC/H,cdvN,g1Uj,3QEp,j5yb,j61x,ex3x,ewAh,j5yh,ewPP,3RdV,btXX,bt3N,4Bzz,6Uih,btvV,6UNx,4Cy9",
                    "634c": "3QuX,5mip,pbQp,bsGH,g24V,jRNH,jSdV,hzR3,nGt9,nGP1,hAb1,hzR9,c+MP,c/d1,67M1,4BVx,4BCH,7F49,g2hp,m9lr,aIWx,pcRX,5nk1,3Rtx",
                    "903c": "nG0X,jS7F,g1EH,g1Xx,6T/x,4BgV,6T/r,4BPh,4Cy9,nGmP,nHc1,hzUb,lo1h,lozF,hAqF,hzUh,6Uf3,fhm9,fi1V,7FLV,ce23,ceJV,8qAP,8pV9,fhHX,8qf1",
                    "8d22": "4BdH,6TVh,9Xjx,cdRF,j5iF,9X6X,mVc1,mVHh,9XCh,9aDP,5mKx,j5Er,j6kh,pcIz,5naF,3Rnh,8p/j,ceo1,j61x",
                    "79f0": "mV5H,orf1,mVor,3QHx,ik7H,ikG9,9abH,hzBx,fh6r,bta1,gP3b,pct1,kDlz,kDX9,gPEN,67jP,9aQp,c/3F,hAe3,5m+9,3R7F,c/pr,7FS9",
                    "96cc": "kCM3,7EH9,nGdr,8pFx,g1Xr,g24V,6TLP,9aDV,oreX,67n1,8q2x,g27X,g2kx,ikMj,orE1,kDoH,3RaN,orKb,jSVF,jSzH,jT69,fhBH,fi51,btXX,btsN,67FH,68c9,jSPj,67Vp",
                    "706f": "jR+b,ew1V,or5z,cdRF,8pCp,4BgV,g1+z,jSk9,cdRz,7Fap,m8Sb,m9Eh,m9ij,67Vp,3Rh1",
                    9540: "or2r,ik7N,lnEb,lnX1,gOzX,gOZ1,c+nP,c+Q1,gOJj,5mip,8pOV,3QKz,7F49,btgh,lo1h,loPh,pcpP,m9ip,jSCP,ewPV,ex9N,jSYN,hAD3,hz+x,cebr,ceJV,8qop,3R1p,btsH,7Ft9,4Cy9",
                    "83f2": "mV5H,mWth,pc3X,kD61,pcw3,kDy9,jSk3,3QX9,gOzX,gP09,c+T3,c+u9,9aeP,9aK9,jSCP,3RdV,gPiP,gPL1,c/yP,c/9V,9b0P,9bzh",
                    9499: "ikaP,pbWF,lnEb,ln+9,hzs3,hzR9,c+nP,c+Wh,hzEz,4BzF,9aQp,mVKj,mWq9,mW4b,dM8h,il6b,ilp1,jSwz,dLUF,dMr1,685V,3Rnh",
                    "86ca": "gOJj,m8wp,m9rN,hAtN,hzyp,pcjz,ewJF,dLj3,ex6F,gPvj,ceN1,5mij,aI5p,aJ0N,5ndN,5mTP,aIGV,aIo3,5mB9,5m5P,5nn9",
                    "6d69": "nG43,lnQN,ikaP,g1Xx,4BgP,cdRF,hzNX,nGCx,kDcb,kDQV,pcsX,fhI1,fhcH,fibh,3QX3,ce29,ceGN,3RzN,67q3,682N",
                    "9ec4": "m8q3,m9uV,pc3X,ikD1,il33,pcw9,ikaP,ils9,g1Xr,g2MF,9bjF,9aux,g1Xx,cdOr,ceDF,ikPr,9aTx,3QBb,7F49,7FpX,3RCV",
                    "8ba1": "oqRX,lnNF,gOtH,gOJp,4Btp,9Xz9,hzKP,hAGh,pcw3,3Rk9",
                    "72e1": "nG0X,jS4x,fhfV,6U5N,3Qy9,hzoX,nGmV,aHUP,fhcN,pcmH,m9fh,kD93,kDX9,ewtX,ikSF,ilcr,exg1,dMer,9b79,67CF,3QU1,dLOj,9XRV,67Yx,3RJ9",
                    9152: "pbGX,kCVx,j4YH,fh6x,4BgP,c+GF,nGjH,nHih,nGFz,ikSF,fhvx,ce29,nGS3,fhL9,dM8h,dMnV,9XvX,9YeV,67mX,685V,3QTX,jSh1,jS/V,3RCV",
                    "79d1": "nG0X,ori9,nGgz,3QKF,ik7H,ikMp,9X0H,iktF,gOPz,c+Wh,mVQz,j5Xh,gPcz,c/jh,9XCb,bu2h,pcLH,3RzN",
                    6994: "jRNH,jSdV,pbQj,3QEp,bsGH,jS1p,hzyj,ewqV,pcab,mVQF,c+T3,c/9V,m95V,m8P9,67q9,9b0V,btpz,6UE9,hzR3,hA7V,3Rqj,mW7p,mWq9,g2MF,ceTh,aJdh,9bzh,7FFF",
                    7597: "jRTX,gOGh,bsJP,ewhx,3QrP,9Xjx,m8zx,m9Eh,pcdj,m95V,hzNX,hAwV,dM59,5m+9,3R7F",
                    "7f15": "or2r,hzlV,hzHN,kD5X,aHY1,ce29,5m5P,8pS1,orlb,loaF,lowr,orZV,jSk3,jT69,pcsX,dM21,ewx3,jSG1,exg1,bt6P,bu2h,btOz,7Fzp,5mTV,3QU1,dM1X,8p/p,6UHh,67/F,3RJ9",
                    "95f7": "3QBb,kCPh,oq/j,lnTV,mVHb,mWjV,5ngV,3Rqp,aIbz,g24V,g2eb,9aNh,8p/p,8qbV,aIN9,jSqj,fhBN,gPp3,btOF",
                    "94a0": "ik7H,pbTx,lnEb,ln+9,hzoX,hzO1,c+kH,c+T9,hzyj,4Btp,8pV9,3R1j,jSqp,jT31,5nk1,3RwF,pczb,g2Dh,c/d1,aIAF,g2Db,btRN",
                    "724c": "oqV3,dLj9,8pt1,4BdN,pbZH,hzHN,hzs3,hzR9,dLj3,dLyN,4BCN,pcw3,mVTN,mVKj,mWjV,dMnV,dLOp,mVKp,ikMj,illV,mW13,ewT1,9aTx,9aGX,9bzh,dMbj,3Rqp",
                    7834: "m8gH,m8P9,dL9H,m8zx,7EH3,gOD9,gOZ1,8pS1,8pw9,4BCH,6Uf9,btjp,lo4p,loM9,hAtN,pczb,fhOh,fhvr,fh+N,aIWx,6UB1,3Q+h,c/6H,8qlh,67/F,3RJ9",
                    "77a7": "5m8X,mVc1,mVuN,6U5N,6TP1,cdBX,cdUN,hzHH,hzp1,gOVP,oruF,kDfj,8p/p,orDX,m9ip,kDfj,kDU1,gP6j,gPHV,dMnP,dLOp,9XFj,9Yl9,kDBb,9X/h,3QTX,7Fap,6Urz,3RdV,7Ft3,3Rtx,7FFz,3RJ9",
                    "7ed5": "or2r,gOwV,hzEF,kD5X,bsN1,cd/1,66WP,8pS1,ln+3,mWn1,ewtX,gPm1,kDQV,pcmH,j5R1,excV,gPO9,ce23,ceQ9,cehH,7FgF,5mHp,3QQV,ceub,5n1h,4Cfp,4Cv1,6V19",
                    5584: "pbZH,m8Sh,m95P,pcCp,m8q3,m9y1,j5cj,j6aV,g1O3,g2W1,ewnH,ce29,cenX,ex0p,cdyP,ceQ9,m8/z,ceeF,3QHr,9aux,9bjF,3RwF,5mlr,5naF",
                    "52bf": "m8mX,m8Sh,pbWz,ewkF,c+xh,gOwP,j5v9,m8Vj,m9rN,fhUx,ex6F,exg1,g30h,dLI3,fhvx,hA4N,pct1,j5Bj,g2Dh,aHXX,aJ0N,5naF,3Rk9,c/0r,8pYh,5moF,3Qv1",
                    "4f3c": "fgPH,jS1p,or5F,jS1j,3QEp,m8P3,7F49,c/9V,oruz,j5Xh,orWH,c/sF,8qop,3R1p,9Y8z,5nqh",
                    5510: "pcab,mVWV,m9xX,m8th,cdIh,8pw9,4BgV,j5lH,j64F,c/sF,c+JN,g1Xr,g2Z9,m8/z,9XLF,3QNH,9XpN,9YbN,3RzN,5mrH,5ndN",
                    "63a8": "jRQP,jSk9,bsGH,ewx9,pbTr,5mlx,3Qy9,gOYX,orxN,kDir,3R4x,orKb,lozF,jStr,jT69,fhvr,fi51,aIxr,aJ71,5mKr,5nn9,jSPj,5n4p",
                    "7eb9": "or5z,hzlV,hzHN,kD93,bsJV,c+T9,66WP,8pYh,pcmH,lotp,jSqj,jT9h,jSYH,c/px,7FmV,5mHp,3QQV,gPcz,cekV,8qlh,67/F,3RJ9",
                    6380: "jRQP,jSdV,pbQj,5mip,3Qv1,cdyP,fhcN,67dz,9Xw1,dLI9,m8P9,nGLV,gP03,gPiV,gPcz,6UrF,hA7P,orNp,kDBb,kDX9,gPHV,hAkj,cexp,7Ft9,3R4x,cexj,7FIN,4Cy9",
                    8845: "8ppP,9XLF,9al3,hzs9,hz+x,9XIx,9aur,hzBx,9XvX,hzO1,hzvb,jSaN,m8/z,j5R1,j64z,m9y1,gPfH,gPL1,btpz,bt/9,orNj,3Rqp",
                    "54d1": "8psX,m8n1,m8CF,aIbF,aHY1,mVAX,mWjV,hzKP,aIrh,mVQz,5mNF,mW4b,5n1h,aITj,hAA1,5moz,5nn9",
                    "79fb": "mVbX,ori9,ikaP,ikJh,mVor,3QHx,9aeP,g1Xx,fh6r,ce29,jSqj,pcw9,mVWP,mWjV,hAhh,dLOp,jSCP,hAhh,9aQj,dMbp,g2MF,dMbj,dMu9,aJ3V,7FCx,67P9,4BYF,3QX9,9XY3,7FCx",
                    "60a0": "gOwP,or5F,jS1j,bsWp,kD5X,dLF1,hzUb,kDlF,orAV,kDlz,kDX9,kDKz,g2Gp,c/9V,aIo9,ikVH,fhL9,c/sF,bt/9,4BjX,9aux,8pRX,4BJ1,3QX9,3Rnh,67Yx,9XIr,7FmV,9bjz,68c9",
                    "4e91": "mVlj,mWdF,g1HP,g2Z9,ewDj,5mfh,6UNx,btyX,4CoN",
                    "638c": "or2r,m8M1,pcgr,m8Yx,m9c3,orQx,hzoX,m8n1,m9y1,hAA1,j5iz,j5+p,g2Gp,g1+F,j5iF,c+xb,dMhF,aI5j,aIZF,7EAP,7FS9,c/3z,5mNF,3QX9",
                    5236: "j52X,or2x,kCPb,kDrV,gOzX,gPm1,674b,c+xh,c/6N,7FjN,67wp,pc3X,3QU1,lotj,9Y2p,orZP,5ngV,3Rtx",
                    "707c": "dLcP,jR+h,or5z,bt0F,7ENp,4BgV,bt0z,6Ulp,g1+z,kDch,ewDj,ikSF,orE1,jSzH,jS/V,5ngV,3Rnh,ewMH,aITp",
                    8912: "pcab,m92N,m9B3,m8jV,lnQH,fgSV,hzyj,9Xgp,jSgX,jSVF,hAqF,hzO1,gPiP,btvV,fh9z,fi89,bt3H,fhEV,btY1,btgb,66WV,9aDP,3QQV,6UrF,aIAz,7Ft9,3RCV,7Ft3,aIZF",
                    "997c": "pbTr,hziN,kCM3,kD99,hzHN,g1Uj,4Btp,8pOV,pcdj,m92N,pcLH,jSJ9,jSnb,jT31,c+PX,c/Ih,jSzH,9aWF,3QU1,jSSr,3Rtx",
                    "660c": "hzyj,oq/p,orTF,hAqF,hzyp,lnHj,lozF,3QBb,ewbh,excV,3RCV,aI2b,aJ3V,685V,674h",
                    9664: "3Qy3,nG49,nGq1,gOJp,cdXV,9XsV,8pCp,gOSH,kDix,orAV,jSSx,hAD9,gP3b,gPEN,ce23,ceN1,gPlX,5mX1,3R4x,5mrH,9XIx,9Y2j,5nn9",
                    "5f85": "ikaP,or8N,cdvH,j5lN,g1Uj,3QEp,ln+3,loFV,pcsX,gPm1,gOVP,gPRh,cd+X,ceQ9,9XFj,6UxV,g2Jr,5n7x,3Rk9",
                    "8c0d": "nG43,lnNF,hziH,hzyp,4Btp,8pS1,pcpP,hA7V,hAqF,pcIF,lnTP,loM9,orlb,ewAh,exg1,bt9X,bt/9,ewSX,3Rh1,4BFP,6Ulp,btz1,9bdp,6UTN,5nn9",
                    "6d31": "oqRX,lnNF,ik7H,g1Up,4BgP,c+GF,m8IP,m9B9,m8Sb,7F7h,m9lr,3Rtx,hzUb,hAnx,dMer,dLLh,7ETz,8qKh",
                    "4fd8": "4Btj,kCSp,g1EH,pbWF,mVxP,nH8V,kD93,hzXp,kDrP,hAe9,gPvj,loJ1,g27X,g2SV,cer9,5m+9,3R4x,aIeH,aJdh",
                    "5e9a": "pcdj,mVTN,4BgP,aI2h,m8th,m9y1,iktz,ilfF,btOF,bsZx,ewbb,exj9,kDlz,btpF,aIxx,6Uf9,3QEp,aIAz,7Ft9,3RG1",
                    "8fc7": "nG43,kCYF,g1HP,g1Xx,6T/x,4Bk1,6T/r,4BSp,4Cy9,j5rX,j6h9,g2hj,cekV,pcIz,8quF,6UB1",
                    "7cca": "mV8P,j59h,j5lH,m8M1,pbTr,3QHx,gOwP,gOZ1,9aeP,gOMx,fh6r,bta1,jSk3,jSG1,orrr,ewGx,67tb,ewAh,ewPV,7FmV,7F7h,3RaH,6UE9,aITp,nGYp,nHc1,5nk1,3RwF,hAkj,hAA1,ceMX,cexp",
                    "77ee": "66WP,bsZx,kCVx,bsZr,8pS1,ewtX,ew1V,hzlP,oqYh,kCM3,kD2V,mVHb,orWN,nGOX,ewT1,jSk3,jT69,fhm3,jSG1,fi51,bt9X,bu2h,btOz,6UB1,3QX9,dL+P,8p/p,3RG1",
                    "9c8d": "or2r,ik7N,m8tb,m8M1,iktF,ikdX,ikG9,9aK9,9ai1,ike1,dLfX,dLI9,ikqr,9aux,4BdH,6Uih,hzUb,orH9,kDoH,kDQV,aJ0N,9bdp,6V13,4CrV,4B/N,5mKx,gP9x,gPvp,cexp,cebx",
                    "640f": "jRNH,jSdV,bsJP,g281,3QuX,5mlx,pbTx,mVxP,mWq9,pcCj,mWgN,pcsX,ceo1,btd3,jSk9,jS/V,btUV,gP03,gPHV,excV,ewx9,9XsP,9Yoh,btOz,5naF,3Rk9,8p/j,67FN",
                    5021: "g1EH,pc0V,kCVr,3QHx,nGwb,nH5N,gPEN,gP3h,nGwh,kDcb,kDNN,3QX3,dLI9,dMr1,3RG1,9Xz3,9Yi1,67q3,6891",
                    "4f20": "fgPH,pc0V,kCVr,3QHx,lnWX,loJ1,hzHH,hAGh,pcw3,ce5h,ceJV,6UB1,8q2r,3Rtx",
                    "4f46": "ev+H,j5cp,or8N,j5cj,3QEp,8pYb,m8Sh,m9rN,8qxN,aJ0H,aIrh,gP3b,gPEN,4BCH,4CBh",
                    "4e1c": "lnrH,loPh,pcdj,dLmh,dMnV,ikSz,5mNF,3QX9,bt6P,5m5V,aIQb,68c9",
                    "5e06": "9aeP,kCFV,kD61,aIl1,9aAN,pbTr,3QHx,5muP,7F7h,btmx,nGCx,nG/x,5n7x,4ClF,4Cv1,7FVh,gPfH,dM8h",
                    "65a7": "kCM3,ori9,orAP,kDQV,mVxP,jSqp,gPp9,fi89,mW4b,jSzN,gOVV,fgSV,fhRj,ewkF,8pFx,4Bk1,aIbz,aJ71,aIJX,3Rh1",
                    "516c": "c+nP,gOMx,mVE9,nGLP,j5Xh,c/F9,gP9r,aIo9,5mip,6UNx,btyX,3RzN",
                    "97e9": "m8jP,m8Vp,pbWz,j5iF,j563,j5yh,ce5h,cdF9,j569,g1O3,g2eh,9aeP,9aTx,cdRz,3QKF,lo7r,loM9,gPcz,gPHV,c/0r,c/F9,7FP1,67/F,pczb,3Rnh",
                    "733e": "hzlP,nGq1,bsMX,fhcN,nG0X,jS7F,g24V,7EZV,5moF,3Qy9,hzXj,orop,orWN,hAtN,lo4j,lon9,hAe9,ewtX,hzO1,hAD9,exj9,3R1j,ewDp,ex9N,682N,3Rqp,ce8j,ceGN,9bmH,9aTx",
                    "79ef": "nG0X,ori9,nGdr,3QHx,ik7H,ikJh,9X0H,ikqx,gOMr,ce29,c/3z,nGFF,nH8V,c/yV,ewJz,excV,3QTX,btvV,btLr,4Cy9",
                    6781: "jRNH,jSk9,aHRH,jS4x,hzBr,c+T9,pbTr,3QHx,nGt3,nH8V,g2Dh,g2W1,aIZF,6UE9,3R1p,nGFz,cebx,8pYh,5mrN,ewPP,8qop,4Cy9",
                    "7bad": "jRQP,pbTx,nGaj,nGzp,nGgz,kD61,kDir,pct1,nGLP,nHf9,nGVb,kDKF,jSaH,gP3h,gPfH,jSMh,gOwP,gPO9,3QBb,ewbh,ewDp,5mHp,3QU1,bsTb,btjp,8pzb,8p/p,dM1X,7Fq1,fh+H,5ndN,3Rnh",
                    "5c06": "m8mX,ikqx,9aeP,fh9F,pbWz,3QKF,j5v3,pcpV,m8/z,m9uV,il6h,ewAh,jSzH,hAe9,c+MP,c/Ih,btjj,8qbV,gPBz,5naF,3Rh1",
                    "70ec": "ew1P,jRX9,pbTr,cdOx,9arp,4BgV,cdOr,7F49,aIkX,fhsp,nGzp,nH5N,iliN,ikMp,il33,dMhF,bt/9,c/6H,9Y8F,8q2r,3RzN",
                    "7cbe": "mV8P,jRX9,jSaH,mVB1,hzlP,hzO1,pbTr,3QHx,9X3P,hzBx,g1Xr,c+Q1,nGzj,nHf9,kDir,kDU1,hzXj,hAGh,pczb,hAhh,3R4r,ewGx,excV,5ngV,3Rtx,btmr,btUV,8q2r,8qAV",
                    "541b": "nG7b,nH2F,fhXF,fh0h,jRQP,jT69,nGpX,g24V,bsZx,7EAV,3QQP,cdXV,ceDF,3RwF,5muP,5naF",
                    "63e9": "jRQP,jSk9,pbTr,5mlx,3Qv1,cdyP,fhj1,pcdj,g2hp,il01,lo4j,lon9,pcCj,gPvp,g2Jx,g2Z9,ilvh,kDEj,mWq9,g2A3,c/9V,3R1j,c+Zp,c/yV,3RCV,9aQj,9bpV,5ngP,5mHp",
                    "9b41": "or5z,m8wp,cdBX,m8n1,m8Yx,ewGx,ew51,ikdX,ikPx,m8FH,ewnN,9aux,3QrV,cdXP,5muV,3QU1,3RCV,6V4h,c/0r,7F49,9aWF,aIxr,7FjN,m95P,jSPp,hA4H,ex0p,btsH,ceQ9,orTz,6UQF",
                    9614: "3Qy3,lnB9,pbQj,mVxV,nGt3,nH8V,5ngV,3Rqp,kCYz,ikD1,gOMr,ewqV,6T/r,cd/1,j5yb,kDEp,jSCP,cekV,g2b3,g2MF,7Faj,ce8p,ceuh,7Fwh,7Fap",
                    "4f8b": "fgPH,pbWF,lnHj,3QEp,mVuH,mW4h,mVNr,gP09,c+JN,hzUb,hA7V,btpF,7F7h,4BCN,dLI3,btmx,kDEj,9Y2p,pcRX,5nk1,3Rtx",
                    "83b2": "m8jP,m9B9,oreX,j5s1,orDX,j5R1,j59b,gOPF,dLcP,dLsx,6T/x,4Bk1,6T/r,4BM9,4Cy9,hzKP,hAA1,jSCP,c+T9,c/yV,9XsP,9Yi1,fhHX,67M1",
                    "7b3c": "j4/P,pbWF,m8wj,m8Vp,m8Cz,j5s1,j5Er,orH9,m98X,m9y1,m9fb,jSVF,il33,gPvp,ew4X,exg1,ikMj,c+Wh,9aH1,6U2F,3Qv1,c/3z,5mNF,4B/N,4CoN,6U+1,4BM3,9b41,ceDF",
                    "82a6": "m8jP,m9B9,pc3X,ikD1,pczb,il6h,j5Bj,gPiV,9bmH,fh+N,fh6x,9Xjx,6TYp,3QrV,aI8r,aJ0N",
                    6162: "ew1P,jRX9,pbQj,3QEp,kC/H,hzO1,nGwb,nH5N,iliN,ikJh,nGwh,lo1b,loCN,gOYX,gPL1,ceN1,cd/1,gOZ1,gPfH,cehN,cexj,gPvp,aIo3,aJ0N,67P9,3QU1,9XIr,67P9,3RJ9",
                    "6bdb": "lnB3,m8Sh,nG/x,g1O3,hAqF,aHUP,c/C1,m8Sb,5mEh,4BSp,4CoN,7FP1",
                    "8c2c": "oqRX,lnKx,hziH,hzyp,4Bqh,9XsV,or8H,orxN,hA4N,m8LX,kDfp,hzHH,jSwF,orDX,os11,gPL1,mW13,kDHx,il33,kDQV,cdUH,ewDp,hA7V,ceQ9,aIrb,ceeF,ewT1,cexj,9b0V,6Uih,3QTX,5mTV,9YeV",
                    "58a8": "nGaj,nH5N,iliN,iknp,nGap,nGjH,jSnh,jSCP,mW7p,nGFz,dLUF,g1Uj,g2PN,dLfX,dMr1,9ahX,cdLp,cd+X,9XCh,cekP,9X/h,c/sz,9Yl9,8pCj,8qAV,4BgP,4Cy9,aIAz,4BYF",
                    "51dd": "7EAP,ewep,nFZP,jS1p,pbZH,jSaN,j5oV,j5Ex,kDlF,lnQH,nGCx,dLsr,hzKV,g21H,g2kx,bsWj,btpF,fhm3,9aH1,6U5N,4Bqh,9Xz3,7Fdx,nGLP,nHc1,j5+p,lojX,gPBF,gPfH,gPO9,dMnV,gPyr,67Yx,ceAr,ceQ9,4BSj,6UuN,9b0V,dM21,9b0P,5n4p,4CBh",
                    5974: "j4/P,j5yh,c+Q1,7ETF,3QrV,or5z,c+r1,7F7h,m8Vj,m9uV,c/px,7FmV,4BM9,m8/z,g2tV,aIQh,7FFF,4Cy9",
                    7435: "nFZP,nGwh,jRTX,jSk9,g1HP,g2hp,nGgz,g1+F,nGFz,nHc1,jSzH,jS/V,g2nz,g2W1,nGVb,g2Dh,dLpj,3QEp,6Ulp,bsWj,btmx,dLXH,5mQN,4C2V,4CrV,6V19,9XOH,ceJV",
                    "504f": "fgPH,kCSp,or5F,kCSj,3QEp,pcmH,mW19,67ar,9XsV,cd/1,m8M1,m9uV,hAwV,hzO1,3QX3,ewx9,excV,5ngV,3Rtx,aIo3,aJ3V,ewMH,67FN,ex0j,67Vp",
                    "8bab": "oqV3,kC/N,hziH,hzBx,4Btp,8pS1,gOVP,kDix,orxN,kDir,kDX9,g2hj,g2PN,9XON,6Ulp,67th,4BVx,4CrV,7FVh",
                    "8c26": "oqRX,lnKx,ik7H,ikkh,674h,aIeN,pc73,m8/F,m9c3,pcIF,m8Cz,m9B9,j5rX,j6aV,btUV,bta1,fh9z,fibh,m8/z,3R7F,m9fb,3Rnh,4Bwr,btmx,btFb,4CBh",
                    "9a71": "nFWH,nGmV,dLyN,lnB3,dLg1,dLI9,67q9,3QEp,8pmH,9XpN,nHf3,nGFF,5mNF,5nqh,j5NP,ex3x,9bt1,9aZH,ex3x,jS/V",
                    5168: "fgSP,iktF,orrx,j5Xh,g2Z9,g1Xr,g2MF,aI8r,aIZF,4BjX,4Cv1,g2kr,4BVx",
                    "4e09": "m8q3,m9uV,ewhr,ex6F,66WP,68c9",
                    8272: "hzoX,m8IV,pcah,m8IP,m9ip,hA7V,9Y8z,hAqF,hzyp,5mip,4Bwx,4CoN,6U+1,btmr,hz+x,bsWj,btOF",
                    5347: "lnEb,nGFF,fgSP,fi89,mVE3,dLI9,aIl1,7EWN,3Qy9,pczb,3Rnh",
                    "8bd7": "oqV3,lnQN,hziH,hzyp,4Btp,9aH1,ln+3,loJ1,pcsX,gPm1,gOSH,gPRh,cdXP,ceQ9,aIuj,8q8N,gPBz,5naF,3Rk9",
                    6570: "nG7b,kCVx,pc0P,ewqV,jRTX,jSwF,lo1b,oruF,dLcP,jSdV,ikzP,fhvx,bsJP,btsN,dLyH,8pzh,6Uc1,5mKx,3QuX,4Bwx,67jV,7F49,btjp,g2qH,j5R1,orKh,j5QX,j6kh,j6aP,ceDF,8qop,67P9,4B/N,3R1p,ewSX,aIQh,6UQF,3RJ9",
                    "53cc": "mVbX,mVHh,fhj1,aIbF,66+1,j563,ewnN,9aQp,mVNr,mWjV,fhXF,aIQh,6UrF,4BM9,mVQz,g2tV,btFh,9bgx,5nn9",
                    5979: "j4/P,j5s1,c+MV,8pIF,3QrV,pbWz,cdF9,6Uf9,g2b3,illV,btUV,9Y5x,pczb,8qlh,mVQz,67CF,5mQN,4C2V,4Cv1,6V4h",
                    "592a": "ikdX,ilp1,orrr,gP9x,ewDp,btd9,8pLN,6T/x,4BgV,9aNb,5mQN,gP9r,dLXN,btz1,9bah,6UQF,4Cy9",
                    "542c": "9ahX,mVc1,mVxV,aIhV,aHY1,4Bzz,67n1,8pYh,btmx,nGCx,orZV,gP9r,gPO9,gPyr,3Rtx",
                    "77b3": "5m8X,m8n1,m8FN,7EWN,7EE1,hzoX,hzHN,cdBX,cdUN,orxH,m9c9,m8LX,m9uV,m8Vj,ikVN,il33,m9lx,ikCX,ils9,g2eb,g2PN,9YbN,9XCh,g2eh,c+Wb,c/vN,g2wX,4C61,7F43,7FLV,4BFP,4Cy9",
                    5984: "pcdj,mVWV,m8mX,m9B9,m8Cz,hzEF,hAtN,c+nP,c/F9,gP9r,9XpN,7Fq1,4Cv1,c/jb,8q8N,5my1,3Qy9",
                    "6f4d": "nFZP,lnHp,hziH,fh0h,4BgP,cdLp,nGpX,gOJp,gOZ1,kDcb,bsZx,ce8p,67ar,8p/p,fhpb,kDoN,orAV,orKb,m9oF,kDoH,kDU1,g2qH,g2W1,btsH,btY1,67FH,68c9,kDoH,3RaN,kDEj,67Vp",
                    9521: "hziH,or2x,kCPb,kDch,gOzX,gOZ1,cdyP,ce29,gOMr,3QHx,8pV9,nGCr,nH8V,gPHV,gP9x,nGCx,jStr,jS/V,btgb,gPm1,dLXH,dMu9,5nk1,3Rtx,7Faj,9XRV,dM8h,3R1j,6UE9,dMkN",
                    "6c50": "nGaj,kD61,ikdX,fh9F,4BjX,bt6V,ewx3,nGLV,jSzH,jT31,ceGN,7Fzp,3R1p,ewMH,9Y5x",
                    "6dc6": "oqYb,m8FN,ikdX,g1Xx,5m8X,cdOx,oroj,j67N,pcIz,j5v9,hzHH,hAD9,j5NP,ewDp,aIeN,3R1j,ewDp,ex6F,5naF,3Rnh,btjj,btOF,8quz,8p/p",
                    "874e": "aH/3,jRX9,jSk9,c+T9,c+u9,or5z,7ETF,66ZX,8pV9,9XvX,6Uih,nGFz,nH8V,gPHV,gPcF,nGFF,jSwz,jS/V,ce8j,gPm1,dLXH,dMu9,5nn9,3RzN,ceub,8qbV,aIQb,8quF,9aTr,67zx,67Yx",
                    "65cb": "oqYb,lnNF,jRQP,jSk9,jS1j,c+Ap,9aoh,4BgV,fh3j,fhj1,67jV,4Btp,gP03,loaF,pcpV,loaz,loPh,gP9r,gPL1,ex9N,gPsb,4Cch,btFb,btY1,3QTX,9aTx,dLXN,9aTr,4C99,4CBh",
                    "52cb": "nG7b,nGzp,j5Bp,j59h,nG7h,9Xdb,gOGh,gP9x,9XIx,ewqP,9aAN,6T/x,4Bk1,9aGX,6Uox,j5Hz,j6e1,6U+1,685V,4Cfp,pczb,ewZh,aIN9,7FmV,3R4x",
                    5996: "pbTr,c+r1,7F7h,jRNH,jSk9,cdXV,7EQx,4BgV,m8Vj,nH8V,fhpb,fi89,mW13,ewW9,9XRV,67zx,3QU1,ewW3,9bgx,4Cy9",
                    8e3: "m8q3,ikkh,pbTr,gOMx,j5lH,m8P9,gOtH,gP09,66TH,9Xdh,gOGh,gOSH,67gN,9aK9,nGwb,nGP1,gPm1,lo4j,kDlF,hzR3,j5KN,nGVb,nHc1,gPL1,m9fb,kDKF,hAhb,jSYN,btd3,g2nF,dLOj,3R1p,g2A3,dMex,dLOj,dMr1,btjj,btUV,8p/j,8qAV,5mHj,5nqh,dM8b,5n1h",
                    "5f15": "mVf3,mVQF,hA1F,hzyp,c+xh,c/3F,6Uox,5mHp,3QKF,orTz,3RwF",
                    8367: "lnxX,loJ1,oreX,ikD1,orDX,il01,dLj3,hzs9,hAwV,dMnV,dLyH,9Xjx,fhvr,9aQp,67n1,5mrN,3Qy9,btmr,7FmV,5n4p,3RG1,9XY3,dMex",
                    "80b2": "pcab,mVTN,m8jP,m9B9,m8Vj,gOJp,hAkp,jSFX,g2PN,3QHr,ewhx,ex6F,5naF,3Rk9,bsZr,btOF,8pFr,8quF",
                    "57a3": "ik7H,ikzV,oq/j,9arp,7EAP,9Xw1,mVE3,mWn1,7Faj,j5Bp,j67N,7FIN,ewDj,ex9N,9aQj,9bmN,4BIX,4CBh",
                    "672d": "jRQP,jStx,pbZH,3QNN,aHUP,jSaN,hzHH,dLOp,pcsX,5mX1,4C61,4Cv1,6V4h",
                    "658b": "pcdj,mVTN,m8mX,m9y1,m9ij,ikVN,g281,ew1V,jSdP,gPcF,fhRp,exj9,dLsr,dMex,dLRr,9Xz9,3QEj,9Xgp,9YbN,5ndN,3Rqp,4BM3,9Xz9,9XRP,4C2V",
                    "6b63": "mVf3,mWjV,mVQz,67CF,fhyz,fh+N,hzEz,67dF,66WP,68c9",
                    "80a2": "4BdH,9Xa9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,dLj3,dLBV,kDcb,kDX9,pczb,fhOh,fhpb,fi1V,aIWx,67FN,3QX9,fhvr,9XV1,6UNx,3RJ9",
                    "94f8": "hziH,pbTx,lnEb,ln+9,hzoX,hzO1,cdyP,ce29,hzyj,3QEp,7F11,lo1b,loM9,ikMj,ilp1,ewx3,exmh,67q3,aIAF,ewPV,il01,pcw9,aIAz,aJa9,8qbP,67Sh,ex9H,5ndN,3Rnh",
                    "64b0": "j4/P,j5oV,oq/j,5mip,3QrV,bsJP,fhfV,jSk3,jSzN,nGIN,nGt9,gP09,g2eh,g2nF,gPiV,jSMb,jS/V,nH8V,nGVh,gPsh,g2Gp,g2SV,hAA1,c+PX,c/C1,fhyz,9XLF,fhRj,9Y2p,9XpH,9Yl9,3QQP,7FgF,7Fzj,4CrV",
                    "749c": "mV8P,mVxV,g1HP,g24V,6TLP,9aDV,mVlj,8pCp,m8P3,m9y1,ikzP,ils9,pcjz,ikSF,pcCj,il9p,fhpb,fh+N,9bmN,9aNh,fhph,ce5b,ceGN,ik/X,9b41,3QTX,7FgF,7Fzj,3RG1",
                    6942: "j4YH,j5s1,oq/j,3QEp,j5cj,aHRN,iknj,ewqV,jSgX,jT31,orDX,c/d1,dLBP,g2hp,jSG1,g2MF,dMu9,c/vH,c+Wh,6Uih,6UTN,c/vN,9YbH,9XCh,4BFP,4Cy9",
                    6273: "3QuX,5mlx,pbTx,bsGH,fhm9,jRQP,jSk9,4BCH,9XCh,ce8p,m8Vp,os11,gP6j,gPHV,aIWx,67M1,3R1p,ewMH,aIN9,7FCx,3RJ9",
                    6241: "pcdj,m92N,66TH,8pw9,9Xdh,dLsx,m8zx,m9uV,hAwV,hzBx,4Bzz,ewkF,exg1,5nk1,3RwF,9Xmz,9Yi1,ewGr,3R4x,ewZb,3Rnh",
                    "6d4b": "pbK3,m8CF,j4/P,g1Xx,5m8X,c+GF,aIhP,nGmV,nGP1,aIK1,j5Er,c/0x,9aQp,4BCN,9XLz,67Sh,mWar,9Y5x,pcRX,6891,3RwF",
                    "65a5": "5m2H,aI2h,gOJp,nGap,nGS9,orZV,hzyj,hAD9,hA7P,3RdV,dLI3,7FP1",
                    "7cb9": "mV8P,j59h,j5iz,mVB1,hziH,hzR9,9X0H,hzyp,gOJj,c+MV,pbQj,3QEp,pcpP,mW4h,m8Sb,m9y1,kDoH,dLI9,hA1z,fhI1,kDKz,dM21,hAnr,dMr1,9XvX,9Yoh,c/g3,3Rk9",
                    7898: "m8jP,m8M1,m8zr,ev+N,6713,gOD9,gOVV,8pOV,8pw9,aIuj,lo4p,loFV,aJ3V,pcpP,aIGV,pcCj,aITp,g2hj,g2SV,aIhP,aJdh,3QQP,8q8N,8qoj,3RJ9",
                    "579b": "j4/P,j5s1,pbQj,aI5p,9abH,cd/1,g27X,j5Ex,nGCx,nG/x,gPyx,gPL1,c+PX,c/F9,gPlX,3Rh1,67jP,c/d1,68c9",
                    "5c01": "kCIX,kDix,or8H,g21N,g1EH,g2nF,bsJP,btmx,ewnH,6U5N,5m2H,7FgF,ikSz,ilvh,orTz,67/F,3Rk9,dLUz,9X/h",
                    "7cd5": "mVbX,jS1p,jSdP,mVHh,hzlP,hzR9,pbTr,3QHx,9X3P,hzBx,g1Xr,dLF1,orrr,m95V,kDy3,orWN,kDcb,kDU1,g2hj,g2SV,btd3,bt/9,kDy3,btC9,4BIX,9aQp,8q5z,4C2V,9b73,5n7x,9bjz,4Cy9",
                    5149: "m8tb,ikD1,orrr,fhvx,hAaX,mWgN,fgSP,fi89,fhm3,9Xw1,67ax,3QrV,fhBH,67FN,4C2V,4CoN,5ngV,7FS9",
                    8861: "jRQP,pbTx,cdvH,j5iF,fh0b,3QBh,kC/H,pcah,mVAX,mVWV,jStx,jSdP,jSG1,dM21,dLBV,jSdV,gOVP,gPm1,jSqj,aIup,8pYh,5moF,aIbz,aIQh,9XFj,6UB1,mW4b,mWq9,gPp3,gPRh,gPEH,682N,3Rnh",
                    "70e9": "dL9H,jRU1,oq/j,cdLp,6TVh,3QrV,bsWj,7F11,fh3j,kD61,fhiX,orE1,gPO9,fhvr,fh+N,btgb,bt/9,aIN3,3Q+h,5ngV,7FCr,3RJ9",
                    "5c16": "gOzX,m8CF,pcgr,g2kx,m9fb,hAwV,bsJP,bt/9,ewGr,9aNh,67gN,3QrV,aIxr,6UB1,5n4p,3RG1",
                    "89e3": "j4/P,pbWF,mVlj,mVHh,jSaN,3QrP,9aoh,jR+h,jSqp,5mHp,3QU1,g1Rb,g2hp,ce8j,cdIh,jSdP,6U8V,nGFz,nHc1,illV,hAnx,nGVb,jSJ9,gPcF,btpz,g2x1,dL+P,dMu9,9aWz,9bzh,gPyr,3Rtx",
                    "952f": "hziH,pbTx,lnEb,ln+9,hzoX,hzO1,cdvH,ce29,hzyj,4Btp,9aH1,4BFP,7F7h,btjp,nGzp,nH8V,illV,ikMp,il6b,aIQh,ewDj,exj9,3R7z,aIAF,aJ3V,3RCV,5mNz,5ngV",
                    "5e93": "pcdj,mVWV,5m2H,8pt1,fh0h,m8th,m9B9,hzBr,hAA1,kDir,c+GF,c/yV,8pCj,8qH9,g2tP,3RdV",
                    "68f1": "jRNH,jSh1,pbTr,3QHx,bsGH,jS4x,hzBr,dLF1,mVHb,mWn1,pcw3,j5U9,j5v3,j6h9,ewx3,hA4N,hAnr,exj9,9Xz3,g2x1,c/6H,c/vN,8qlh,4BM9,aIDH,6UKp,4Cy9",
                    "83f1": "mV8P,mWq9,pc3X,jSh1,pczb,jSMh,iknj,iliN,kDlz,g2nF,g1KX,g2W1,bsMX,fhfV,fhL3,btY1,7EH3,dLLh,bt9X,btFh,7FgF,5my1,3Qv1,9Xz3,67IV,4Cfp,3RG1",
                    "9aa1": "nFWH,nGmV,ewnN,m8q3,ew51,ewu1,67n1,4Btp,9aeP,bt0F,nGzj,nHc1,hAA1,hzXp,nGzp,nGVb,hAhh,kDfj,kDU1,hAe3,ewDp,ex0p,g2PH,aIup,aJ3V,c/sz,9bw9,5mEb,8q8N,aIQb,5n1h,3RaN,9bgr,68c9",
                    "514d": "ikdX,mVxV,pcah,mVxP,mW7p,ikYV,ikqr,iliN,c/vN,c+Dx,ikqx,ikSz,cebx,8pV9,5mlx,3Qv1,btsH,5mQN,4C2V,4CrV,6V19",
                    "62df": "jRNH,jSk9,pbTr,5mlx,3Qv1,cdyP,g281,m8P3,7F49,c/9V,oruz,j5Xh,orWH,c/sF,8qop,3R1p,9Y8z,5nqh",
                    "8d54": "aHXX,nG11,nGq1,aIl1,j5fr,9Xgp,5m5V,9axz,5mEh,pcpP,mW4h,lo4j,loJ1,jStr,gPiV,fhOb,j67N,fhpb,fi89,3R4r,btmx,btRN,3RzN,67zr,682N",
                    "67d2": "oq/j,lnTV,kCIX,iktF,dLfX,hzO1,j5rX,loJ1,orAP,g2tV,fhI1,fi1V,hAD9,bt/3,bsJV,fhvr,3R4x,5m8X,6T/x,9aH1,btjp,btpz,8qi9,5nk1",
                    "6c22": "ikaP,or5F,m8zr,m9uV,j5fr,j67N,gOD3,gPBF,9Y5x,6UQF,3RG1,6V4h,dLmb,dL+V,ce5h,9Xa9,ce5b,9X/h,8pCj,8qi9,4BjX,4Cfp,8pYb,4BPh",
                    8089: "3QBb,lnEh,loFV,5ngV,3Rqp,pcjz,lo7x,gP09,ewkF,j5Bj,fhRp,fhyz,ce8p,7ETF,ce8j,7Fzp",
                    "8d66": "kCIX,kDix,or8H,gOSN,gOwP,gP9x,c+u3,9aeV,gOMr,8pCp,3QrV,gP03,67q9,4BCN,dLLb,aIAF,g2nz,orH9,j5NP,j6h9,j67H,aIWx,6UE9,3R4x,fhEP,9X/h,6UTN,4Cy9",
                    "6b8a": "mV8P,mVHh,mVrz,iknp,c+nV,iknj,ikD1,dLBV,9XmF,7ENp,4BgV,dLmb,bt3N,hzUb,nGFF,jStr,jT31,fhm3,fi89,pcw3,3Rk9,6UbX,9XIx,fhL9,ceAx,9bpV,6V4h",
                    "849c": "m8jP,m9B9,pc3X,jSh1,pcw3,jSG1,hzs3,hzUh,hA4H,hAA1,dLcP,dLOp,dLUz,dMu9,6TLP,bsWp,dLyH,5mrN,3QEp,bt9X,9aQp,67wj,btvV,dMbj,5n4p,3RdV,btOz,68c9",
                    9898: "nG43,nGwh,gP3h,gOD9,nG49,jRX3,jSnh,dLcP,dLRx,dLyH,67gN,9XpH,9XFp,4BdH,7EH9,cdIh,9Xdb,5mrN,4BJ1,4Cy9,mVNr,mWq9,mW4b,jSG1,btsH,jSzN,jS/V,btUV,hAhb,btFh,8qbV,6Uox,9Y5r,6U+1",
                    5916: "ew1P,or8N,jS4r,jSwF,dLLh,aIl1,8pIF,5m91,fh6r,cd/1,pcsX,3Rh1,il9j,ceTh",
                    5434: "nGdr,nH2F,j64F,j5fx,nGdx,g1Rb,g2PN,cdBX,ceN1,g2kr,btmx,9aNh,7F11,67ax,4BgV,btmr,8qf1,6UKp,4Cv1",
                    9576: "j4/P,oq/p,lnB3,lnTV,hzoX,hzHN,dLcP,dLBV,hzyj,4Btp,9XsV,pcpP,mW4h,mVE3,mWn1,kD93,kDrV,ikYV,ikG9,kD99,kDBb,kDQV,illV,il6h,kDBh,g2b3,g2W1,dLI3,dMnV,aIkX,aJa9,hA1z,aIAF,hAkj,aITp,5muP,8q2x,aIGV,8q2r,3R4x,67M1,9b73,3RJ9,6UKj,9bmN",
                    9508: "or2r,j4/V,lnEb,ln+9,hzoX,hzO1,c+nP,c+T9,hzBr,4Btp,8pV9,mVKj,nH8V,mW13,dM59,j5yb,j6e1,dLI3,gPfN,j5U9,g2MF,exj9,dLRr,dMhF,9bdp,9bt1,5ngV,3Rnh,c/9P,7FgF,3QU1",
                    "781a": "m8jP,m8P9,dL9H,gOGh,m8zx,6TVb,gOGh,gOVV,9aDV,9aoh,cebr,nGCx,nH5N,ceGN,j5U3,ceo1,8q8N,67wp,3QQV,c/jb,5n1h,4Cfp,4CrV,6V19",
                    "610f": "pcab,m92N,m8tb,m9uV,lnTP,ikG9,ikYP,loqh,ikaP,ils9,g1Xr,g2MF,aIZF,aI8x,g1Xx,dLsr,dMhF,4BjX,9aux,9aDP,4BFV,3QU1,3Rnh,6UNx,9XIr,7FmV,9Y5r,5nn9",
                    "903e": "mVbX,jS7F,g1EH,g1Xx,6T/x,4Bk1,6T/r,4BVx,4Cy9,ikwH,lo7x,orAV,lotp,ils9,j5Bj,j61x,7F0X,gOZ1,gPiV,8qbV,7FgF,dLEX,dL+V,btvP,bta1,g2Gj,aITp,hAtH,9bmN,7FCx",
                    "906d": "mVbX,j5iF,fgPH,fh3p,677p,4Bk1,677j,3Q+h,3RJ9,m8FH,m9y1,oruz,ewJF,orKb,ewZh,jSgX,jSYN,ex9N,ewu1,jSh1,hzNX,hAtN,67tb,ce5h,ceDF,67/F,9XCb,9Y8F,6Uib,6UQF",
                    "8fd9": "nG43,jS7F,g1EH,g1Up,6TYp,5m91,6TYj,4BM9,4Cy9,oruz,lon9,jSdP,jT31,jSPp,ewW9,aIAF,7EZV,gP3b,c/d1,7FLV",
                    8098: "4BdH,9al9,nG49,nGq1,67n1,4BCN,ikh3,ikD1,c+u3,c+Q1,ikMj,ilvh,ewJz,aIN9,pcIz,5naF,3Rk9",
                    "79df": "mV8P,ori9,ik7H,ikJh,nGdr,3QHx,9abH,ikqx,gOMr,c+T9,5mNz,nGFF,nH5N,5ndN,ikSz,iliN,ceez,ceGN,5mxX,5nqh",
                    "94bc": "ik7H,pbWF,lnEb,lo1h,hzR3,hzp1,hzBr,3QHx,8pV9,ce5b,cdyV,3R4r,mVNx,mWjV,3RCV,4CrP,4BVx,aIxr,aJ3V,gPHP,gP9x",
                    6252: "3QuX,5mlx,pbTx,bsGH,g2b9,jRNH,jSk9,nGFz,ewGx,9aNh,4BCN,pczb,gPvp,aIZF,4Cy9",
                    "9f3b": "pcdj,nGq1,nGdx,hzBx,hAqF,nH2F,nGq1,lnKr,lozF,j64z,j5fx,aI5j,fh3p,fh+N,aJ0N,aI5p,c+Aj,c/vN,fhvr,aIxx,8ppP,8qH9,3QBb,4BzF,67n1,8pS1,8qlb,3Rnh",
                    "776c": "66WP,nFZV,nGmV,8pOV,8ppV,j4/P,j5oV,dLBP,dLcV,mVHb,nHc1,kDcb,gPcF,logP,hAe9,gPvj,kDQV,dLI3,dMr1,gPlX,3Rh1,67mX,8q2x,aIDN,dM21,9Y2p,7FIN,68c9",
                    "57ce": "j4YH,j5oV,oq/j,aI5p,8pmH,bt6V,3QEj,6U8V,aIo9,kD99,kDX9,m9xX,orQx,g2b3,g2tV,9XRV,7Fap,pcw3,dM8h,9bgx,4Cv1,6V4h,hAwP,ceDF,4B/N",
                    "8f9e": "m8jP,ori9,mVrz,c+GF,hziH,hzUh,4BjX,c+r1,c+Wh,67th,66+1,pcpP,m9ip,m8Sb,m9y1,jStr,g2x1,jSYH,fhOh,fhm3,fi89,9XCb,9Yi1,fhL3,3Rk9",
                    "767b": "mVf3,mVKp,j5oV,ew1V,kCPb,hzEF,nGFz,j5U9,gPyx,exj9,logP,orQx,j5Xb,loFV,gOPz,gPvp,c+Gz,c/mp,9bdp,9axF,c+GF,7EZP,4BPh,4B/H,7Ft9,4BjX,4Cv1",
                    "809a": "4BdH,9X71,nG11,nGq1,5my1,3QHx,hzoX,hzO1,c+PX,c+r1,gP3b,gPO9,5mB3,5nqh,pczb,5n1h",
                    "975e": "pc73,3QX9,kCIX,kD99,fgZ3,fhm9,9aeP,9aK9,pcpP,3RdV,kDrP,kDU1,fhEP,fi1V,9b0P,9bw9",
                    "76d6": "or5z,kDch,kDoH,orNp,kCIX,kDU1,hzBr,hAqF,dLj3,dMnV,kDir,dLRx,4Btj,aI5p,aIZF,4ClF,4BM3,aIo9,4C2P,aIGV,4BdH,4CBh",
                    "9aa8": "ikqr,or2x,orQx,ilcx,lnKr,lo7x,ikPx,ew4X,ike1,ilp1,exg1,3QHr,fh6x,fhUx,5n7x,3Rh1,cdOr,ceAx,8qrr,8pFx",
                    5475: "8pw3,mVf9,mVxV,bt6V,bsQ9,mVE3,mWq9,mWgH,682N,4Cfp,9aQj,ikMp,il6h,btFh,btjp",
                    "78fa": "mV8P,mVB1,mVor,dL9N,6TVb,gOGh,gOSN,9aAN,9aoh,m8P3,m9y1,ikzP,ils9,pcjz,ikSF,pcCj,il9p,fhpb,fh+N,9bmN,9aNh,fhph,ce5b,ceGN,ik/X,9b41,3QTX,7FgF,7Fzj,3RG1",
                    "8bb0": "nG43,kC/N,gOtH,gOJp,4Btp,9Xw1,mVE3,mWjV,g2SV,g2hp,5mHp,4BVx,4CrV,7FVh",
                    "89d2": "ikh3,pcah,nGpX,nH2F,j5KN,3QuX,8pFx,9XmF,j5iF,j6aV,5ngV,3Rqp,ewkz,excV,aIbz,aJ3V,j5Hz,67CF",
                    "53a9": "4BdH,9Xa9,nG49,nHf9,dLvz,dLOp,kDfp,kCYF,67dF,9aQp,btgb,7FgF,gOPz,gP6p,kDlz,kDU1,ikYP,dLUF,dMr1,kDEj,c/jh,7FmV,3R1p,cexj,5n4p,4Cix,4Cv1,6V4h",
                    "58f3": "mVbX,mWn1,pcgr,j5Ex,j59b,j67N,cdF3,g1O9,g2W1,ceN1,4BjX,67dF,7EZV,c+MV,c/d1,67M1,4Cch,4CrV,7FS9",
                    "72fc": "oqOP,lnKx,ewqV,9XsV,6U5N,3Qv1,gOtH,orf1,9X0H,g21N,pcmH,mW4h,dLOj,dMnV,m9uV,m8Vp,3R1p,7Fq1,ikMj,illV,dM1X,9bdp,682N,3RJ9,9bdj,ceJV",
                    "71ce": "ew1P,jRX9,or2r,bsZx,7EKh,4BgV,bsTb,8pS1,g1Xr,j5s1,ln+3,loM9,orH3,jSCV,hA1F,ewqV,j5yb,hA1F,kDy3,gPyx,exj9,hAqz,j6aV,fhsj,fhXF,9bjF,9aQp,fhsp,ce8j,ceDF,4BIX,7FgF,9b73,5m+9,3R7F,7FCr,4Cy9",
                    8651: "4BgP,9Xdh,kCPh,kDU1,illV,kDfj,pcdp,nGzj,nH5N,gOPz,hAqF,j5Bj,dLOp,c/0x,c/sF,fh+N,67ar,aIeN,aIrb,4BPh,3R1p,3Rnh,6UNx,btmr,8qf1,aIZz,6V19",
                    "4eec": "fgPH,jS1p,or8N,jS1j,3QEp,3Q+b,kDch,orlb,lodN,m98X,m9y1,5nk1,3Rtx",
                    "90a3": "nG0X,nGFF,6Uox,5my1,j52X,j5HF,dLfX,dLRx,nGmP,dLyN,9aux,7EKh,5m5V,3Rk3,nGS9,nHc1,gPyx,ceQ9,9Yoh,9bw9,7FCx",
                    "5f98": "j4/P,pbWF,cdvH,j5iF,g1Uj,3QEp,pcjz,3R7F,kD2P,kDlF,fhfP,fhyF,9aAH,9aWF,pczb,3Rnh,kDBb,kDX9,fhOb,fi51,9bab,9bzh",
                    "9b44": "66WP,lnuV,lnQN,8pLN,8ppV,ew1P,ewnN,lnB3,or2x,pcpP,m8/F,ce5b,m8Sh,m9uV,c/yV,ewAh,ikJb,illV,m98X,c/9V,7Fdx,67th,3QKF,cer3,5m+9,4Cch,4CrV,68c9,ceDz,8qop,9bt1,aJ3P,7FVh",
                    "4e54": "mVlj,mVNx,nH2F,mVNr,j5yh,fhcN,cdyV,j52X,j6e1,j5KH,fhRp,c/F9,ewx3,8pS1,3QEp,ewZb,3Rnh",
                    "60f9": "m8jP,m9B9,pc3X,jSh1,pcw3,jSJ9,ikdX,ilp1,kDlz,fhcN,c+r1,bt3H,fhcN,fhUx,btLx,bt3N,4BgP,9arp,9XsP,5muV,4BJ1,4Cch,6UKp,9XIr,7FmV,9bjz,68fh",
                    "6c55": "nG43,kD2V,ikaP,g1Xx,4BjX,cdUN,j5v3,67q9,6891,orDX,67M1,j6dX,3RG1",
                    "662f": "nGdr,nG/x,hAnx,hzBx,nGdx,kCVr,kDHx,dLcP,dMu9,dLRr,4BVx,9XIr,9YbN,4BgP,9Xjx,cdRF,9Xjr,4BSp,4Cy9",
                    9972: "gOwP,or2x,lnHj,ln+9,hzHN,g1Uj,4Btp,9aH1,mVKj,mWn1,5nk1,3Rtx,j5yb,j64F,6Uor,fhvx,fhUx,9bgx,9aTx",
                    "7cd6": "m8jP,j59h,j5iz,mVB1,hziH,hzO1,pbQj,3QEp,9abH,cdF9,hzyp,g1Uj,cdXV,pcpP,mW4h,m9xX,m8Sh,dLLh,9aK9,5mrN,j5Hz,j6aV,ceJV,cebx,g2eb,g30h,m9c3,9XY9,3R4r,9XIx,9YeV,3RCV,4BVr,4CrV",
                    9893: "mVbX,ori9,nGgz,dLvF,jRQP,jSqp,ew1P,gOJp,jS7F,iktz,fhsp,4BgP,8pzh,9Xgp,dLpp,dLF1,67n1,9aQp,nGCr,nHf9,nGYj,j5U9,9aZH,j5KN,j6aV,9bpV,g2Db,aIQh,9b79,5mNF,3Q+h,8qrr,4Cy9",
                    "543b": "8pw3,m8q9,m8CF,aIbF,aH/9,gOYX,kDfp,oruF,kDfj,kDU1,685V,3Rnh,kDuX,fhyF,btd9,67tb,8q8N,aIK1,dM8h,kDHx",
                    9528: "hzlP,or2x,kCPb,kD2V,gOD3,gOVV,c+nP,c+Q1,gOJj,4Btp,9aDV,3QNH,7F49,aIrh,m8Sh,mV+1,hzUb,hAb1,hA4H,6UuN,fhHX,orQx,jSMb,jT69,g2SV,gPyr,btLx,7Fwh,3RaN,btLr,7FIN,3RJ9",
                    "661f": "nGaj,nH2F,gPBF,gOJp,nGap,kCSj,kDKF,9X6X,fh6x,c+Aj,c/yV,9Xjr,9Y8F,5m5P,5nn9,gP9r,5mKx",
                    "4e9a": "mVf3,mWn1,hzvb,cdXV,mVHb,67th,mVZX,67M1,ceub,hAwV,66ZX,6891",
                    "4eea": "g1HP,or8N,jS1j,3QEp,oruz,jSJ9,kDcb,dLUF,9b79,67/F,4Cy9,m9rH,ex0p,9XV1,7FgF,4BFV",
                    "5fe7": "ev+H,jRX9,pbTr,3QHx,kC/H,gP09,ikJb,ils9,nGYj,kDQV,pcsX,g2tV,cehN,7Fap,4BFV,fhOb,5n1h,4Cfp,4Cv1,6V4h",
                    "90e7": "oqYb,orrx,jStx,jR+h,oqYh,9Xa3,hzs9,hA1F,9XLF,fhfP,aIhV,8pIF,4Bk1,9aK3,67IV,3Rk3,nGS9,nHc1,gPvp,aJa9,9Yi1,7FCx",
                    "6da8": "oqRX,m8zx,ikaP,g1Up,5m5P,cdLp,nGjH,nGzp,ikMp,ikwN,c+JN,c+Zp,67th,67gN,orAP,4C2V,7Fwh,fhsj,fi89,hAhb,mWjV,fhOb,9bjF,5nn9",
                    "667a": "jRTX,oq/p,m8wj,m8/F,ikdX,ikVN,m8LX,hzKV,fh9F,c+r1,hzKP,ewJF,m98X,m9uV,fi1V,fhI1,m991,3QKz,cdRF,ceDF,3RwF,9axz,9bjF,5moz,5naF",
                    "6d4a": "nG43,kC/N,hzlP,ewhx,4BjX,cdRF,9aK3,j5v9,j6aV,ceJV,ce29,orDX,5mX1,4BFP,685V,9Y8z,4Cy9",
                    "538d": "5m2H,8pt1,fh0h,oqYh,os49,j6dX,j5fx,m8/z,dLvF,dMnV,8pCj,8qH9,gPiP,3RdV",
                    5265: "oqV3,oruF,hz+x,hzlP,hAb1,kCPb,kDix,hzNX,5my1,3QHx,fgZ3,cdRF,7EDX,c+Q1,fhBH,bta1,7FmV,m9fb,9X/h,pcOP,5ngV,3Rtx",
                    "70b3": "dLcP,jRX9,or2r,bsZx,8pCp,3QrV,gOMr,kD99,bsZr,7F49,mVE3,mWq9,mW13,gPp9,dM21,9aWF,dM53,9Y8F,3Q+b,hzUh,hAA1,6891,3Rtx",
                    7316: "hzlP,orf1,aHUP,gOSN,nG0X,kC/N,gOVV,7EZV,5mrN,4Bqh,mVQz,mWjV,gPHV,gPcF,mVQF,jSwz,jS/V,3R1j,c+Zp,c/F9,3RJ9,9XFj,9Yl9,67IP,68c9",
                    "695a": "m8mX,m8Yx,pc0P,fhfV,g1KX,lnTV,kD2P,ikMp,m8/z,m9B9,pczb,fhOh,g2hj,loqh,kDEp,gPO9,dLfX,dMr1,btOF,dLUz,4BYF,9XLz,9YbN,4BjX,bt6V,9axz,4BSp,4CBh",
                    "902e": "nG0X,kCYF,gOtH,gOMx,7EQx,5m5V,7EQr,4BM9,4Cy9,m8IP,m9rN,g2PN,g24V,jSaH,jT9h,pcpP,7FmV,67wp,ewqP,c+Zp,9aDP,cekV,c/9P,7FP1,btIj,dMnV",
                    "53e0": "or2r,orQx,jS4x,nGmP,jSVF,j52X,j5Bp,ewbh,iknj,ewDp,j5Hz,j6aV,ewMN,ikYP,excV,9Xa3,dLj9,dMr1,9Yi1,4Bzz,bt0F,btLx,4Cix,9axz,9bgx,6UNr,6U2F,4BjX,4Cv1",
                    "4e8c": "lnEb,loFV,7EAP,7FS9",
                    "670d": "5m2H,cdF9,nG49,nGq1,67n1,4Bwx,j563,j5s1,dLEX,dLj9,4BYz,nGFF,nH5N,jSYN,il39,fhyz,fi1V,aJ0N,5mTV,dL+P,aIQh,7FFF,4Cy9",
                    "7fb9": "pbZH,mVHh,mVZX,pcCp,mVbX,mWn1,mVNr,ikPx,kCSj,kDNN,ikaP,ils9,fgSP,hzBx,hzR3,g2eh,hA1z,g2x1,hAqz,fi51,g2Db,dM21,dLI3,g21N,dLj3,dMnV,cdIb,ceJV,9Yl3,9X3V,7EDX,7FP1,dLUz,8q2x,67th,4BCN,3Qv1,7Fgz,5m+9,3RG1",
                    "54c8": "8psX,lny1,lnQN,aIeN,aHY1,g24P,orE1,gPO9,g2kr,g2PN,3R1j,ce8p,ceGN,3RzN,5mHj,5ndN",
                    "6e56": "nG43,lnNF,ikaP,fh6x,5m8X,cdOx,orlb,ewAh,jSaH,jSCV,67jP,ewqV,ewMN,7FjN,7EZV,4BYz,7Fq1,btC9,nGS9,nHc1,5nk1,3RwF,hAe3,hAA1,ceMX,cer9",
                    "827e": "4BgP,67gN,9aTx,g2Dh,4CuX,67Sh,9aTx,g21N,kCFP,kDX9,pcw3,hAe9,hzNX,pc41",
                    7206: "fgVX,kCPh,pbWz,fh9F,cdOx,9Xgp,4BgV,kD93,hzEF,cdOr,aIhV,j5yb,orlh,orZV,j6aV,j5yh,m8Sb,m9uV,j5KH,dLXN,j61r,dMex,gP03,gPO9,dMxb,dLBV,8pOP,dLXN,dMbj,9bzh,aIxr,9aZN,5mxX,8qi9,aJ0H,7Fzp,8qi9,5nn9,cer3,4C99,3R7F",
                    "94c2": "hzlP,pbWF,lnHj,ln+9,hzoX,hzO1,cdyP,ce29,hzBr,3QHx,7F11,pczb,kDrV,kDix,3R4x,kDrP,kDU1,3RG1,dLRr,dMr1,6Uor,6U+1",
                    "8d85": "pbWz,gOPF,lnxX,lo1h,gOwP,gP6p,gOSH,6U5N,c+JH,c+Zp,c+xb,9aoh,4BgV,9aob,4BSp,4Cy9,mVKj,mWjV,hAwV,g2Gp,mW13,ikVN,6Urz,ewJF,excV,6UWV,8q5z,8qAV",
                    8239: "pbZH,m8wp,jS4r,gOSN,c+Dr,9XsV,fgPH,fhvx,4BdH,cdIh,m8th,m8P9,67q9,4BzF,fhvr,hA4N,nGIN,nH5N,g2PN,g30h,3R7z,c/3F,c/yV,3RCV,5mNz,5ngV",
                    "60ee": "fgSP,kCM9,pbTr,3QHx,kC/H,hzO1,pcdj,m92N,kDy3,pcLN,kDcb,kDQV,ceJV,ce5h,kDch,g2eb,g2SV,kDuX,3Rh1,9aDP,9bw9",
                    "51ac": "pc73,hzs9,m8IP,m9lx,hA4N,bsGN,jSdP,g2kx,dM8h,ceTh,c+T3,9XY9,8pLH,3Rnh",
                    "756a": "mVib,orZV,mVQz,5mNF,m8zr,j5s1,m9oz,j5U9,j52X,j6e1,c+nP,fhcN,ikMp,ikVH,fhOh,c/F9,3QHr,dLsx,dMhF,3RwF,9Xjr,9Y8F,5mlr,5naF",
                    "812f": "4BdH,9Xa9,nG49,nGmV,67jV,4Btp,ikh3,ikzV,c+MP,c+u9,kDcb,kD+h,orTz,m9y1,pczb,4Cch,3R1j,hzXp,hAD9,5nn9,3RCV,c+Zj,c/F9,9bw3,9aQp",
                    "5bab": "pcab,m8/F,hzs3,lnB9,loFV,hAwV,hzHH,hAkp,dMbp,dLyN,hzHN,3QHr,aI8x,aIZF,3RwF,5mlr,5naF",
                    "542b": "gOwP,kD2V,orrx,kDy9,hAD9,kDfj,ikVN,gOPz,gPvp,btmx,3QHr,bsZx,btOF,3RwF,5mlr,5naF",
                    "6ed1": "oqYb,lnTV,j4/P,g1Xx,5m8X,c+GF,hzUb,orlh,orWN,hAtN,lo1b,lon9,hAe9,ewqP,hzKV,hAD9,exj9,3Q+b,ewAh,ex9N,682N,4Cch,ce5b,ceGN,9bmH,9aNh",
                    "7b95": "jRTX,pbWF,mVor,mVNx,mVuH,kD99,kDir,pcw9,mVZX,mWq9,mW7j,kDKF,ikkb,illV,fhcH,fhOh,ceub,cdUN,9aeP,9bw9,jSaH,9aAN,jSMb,9bah,3QuX,7F49,7FpX,3RG1",
                    "68d8": "m8gH,m8Vp,pbWz,3QKF,c+qX,ike1,ikJh,c+Wh,6TIH,ewkF,c+Gz,9Xz9,m8Yr,m9Eh,pczb,3Rnh,c/3z,ikSF,illV,c/yV,67q3,fhOh,dM8b,68c9",
                    "4ef6": "g1EH,kCSp,pbZN,kCSj,3QEp,fhfP,mVKp,j5yb,j6e1,c+Gz,c/Ih,pcsX,3Rh1",
                    "6d46": "nG7b,kC/N,g1O3,j5s1,pc3X,dLF1,j5Bj,orE1,m92H,m9y1,hAnx,ewMN,jSFX,hAkp,bsMX,btgh,8pLN,677p,4BgV,ewJz,5mNF,3Q+h,9XUX,ceJV,c/3z,9b41,6UKp,3RJ9",
                    "6d78": "oqV3,m8CF,j4/P,g1Xx,5m5P,c+Dx,nGpX,nH2F,ilfF,ikD1,ln+3,lozF,c+JH,fhcN,fi51,c/C1,3QKz,67zx,9X/h,c/px,c+T9,8q5F,67P9,4Cv1",
                    "7cb3": "m8jP,ikkh,j5lH,m8P9,gOtH,gP09,pbTr,3QHx,9aeP,gOMx,fh6r,btd9,nGwb,nHf9,jSqj,jS/V,ceJV,ce8p,jSqp,g2hj,g2SV,nGVb,ceuh,8qf1,5mKx,3QQV,aIuj,6UB1,3RJ9",
                    "5cfb": "jRQP,8ppV,9aDV,kD2P,6U8V,oq/j,9arp,orDX,jSnh,jS/V,mWdz,j6h9,ewx3,hA4N,hAnr,exj9,fhL3,9XCh,c/9P,c/vN,7Fwh,5mNF,3QU1,9XOH,67Vp,3RJ9",
                    6977: "jRNH,jSh1,pbQj,3QEp,aHRH,jS1p,hzyj,ewqV,pcab,fhph,il01,lo1b,lok1,pczb,hAhh,g2eh,g2W1,ilvh,kDBb,m9y1,g2A3,c/6N,3R1j,c+Zp,c/yV,3RCV,9aQj,9bpV,5ngP,5mHp",
                    5080: "g1HP,jS1p,or8N,jS1j,3QEp,pcpP,mVQF,ce23,mVE9,mWjV,excV,ewx9,ikG3,illV,mVZX,cekV,6Ulp,4BFV,cer3,5m+9,4Cch,4Cv1,6891,c/vH,8qop,9bt1,btUP,8qKh",
                    5783: "ik7H,ikD1,oq/j,8pCp,66TH,aIo9,orxH,kDBh,jSk3,jT69,g2hj,7FmV,gPEH,4C99,4BFP,4CBh",
                    "4fd0": "g1HP,pbWF,kCSj,3QEp,mVxP,nGS9,hzHH,hAe9,mVNr,3R4x,9axz,hz+x,g2kr,ceo1,lotj,9Y2p,orZP,5ngV,3Rqp",
                    "8fde": "kD2P,kDU1,orAP,ewu1,exg1,il33,67P9,9XsP,9Yl9,4Cy3,4BSp,6T/x,g1Xx,g1EN,mVf3,j5iF,6T/r,4BgV",
                    "7abf": "pcab,mVQF,jRTX,mVc1,mWn1,j6e1,lo1b,iknp,lodH,j64F,3QuX,hzp1,hzO1,dLpp,9XsV,8pOV,6TYp,ewtX,j5KN,hA1z,hAtN,ewZh,c/6N,bta1,g2kr,dLI9,ceDF,btY1,btmr,btOF,7F43,aIup,9aQj,9bmN,6Ulj,6UQF,4BFP,4Cv1,btyX,4C61",
                    5362: "pcgr,ikPx,m8Yr,m9uV,aJ0H,iliN,ikqx,bsZx,6TYp,3QrV,cdOr,ceGN",
                    "6f2b": "oqV3,m8FN,j4/P,gOMx,5m5P,c+Dx,orlb,orWN,j67N,j5yh,orlh,m8Sb,m9rN,gOYX,gPL1,c/C1,c+Q1,gOZ1,gPfH,c/6N,c/mj,gPvp,aIo3,aIZF,6UB1,5mNF,3QQV,aIuj,6UxV,5n1h,3RJ9",
                    "77db": "nGaj,nH2F,j5HF,kD93,hA7V,gOzX,gPL1,ceDF,7EDX,bt6V,gPcF,ewMH,67FN,4BPh",
                    6478: "jRNH,jSh1,bsGH,fhj1,pbQj,5mip,3Qv1,mVAX,mWq9,pcjz,jSwF,pcCj,jSPp,jSnb,jSYN,c/vN,c+Wh,jSnh,gP3b,gPEN,9XvX,9Yl9,c/cX,7FmV,5mNF,4BPh,3QQV,9XUX,67Yx,3RJ9",
                    "9ed8": "nG43,nGCx,hz+x,hzs9,nG49,lnHj,j5iF,j5rX,lo1h,nGmP,bt6V,ew4X,ewGx,bsJP,btpF,4BgP,9aoh,9aur,5moF,9aDP,67q9,9XCb,6UrF,3QX3,67FN,aIN9,ewZh,orKh,nH2z,jT31,hA1z,hAD9,fhOb,9bjF,4Cy9",
                    "5b81": "pcdj,mVTN,hzs3,lnB9,loFV,hAwV,ew1P,exj9,ewJz,5mNF,3QX9",
                    "52aa": "lnuP,lo4p,hzO1,c+r1,or8H,ikkh,fhsp,mVQz,mWjV,ilcx,ewJF,mVQz,j5R1,g2Gp,dMr1,aI5j,aJ0N,5naF,3Rh1,dLRr,9aNh,6Uc1,3Qy9",
                    "6bd7": "66ZX,m8n1,m8M1,8pS1,8pt1,fgVX,fhj1,m8zr,8pFx,oruz,3R7F,6UE9,hA1z,hAe9,pcCj,5n4p,4Cix,4Cv1,6V4h,gPvj,j6e1",
                    7247: "3QrP,677p,9XmF,or5F,iktz,illV,pcpP,ikYV,c+Gz,c/jh,3Rnh",
                    6390: "j4/P,j5s1,bsJP,fhj1,or2r,5mlx,3Qv1,gP3b,jSwF,orE1,m95P,m9y1,gPyx,fhHX,ewDp,3R1p,9XFj,9XV1,ex0j,exg1,3RG1,9Y2j,9Yi1,5mHj,5nk1",
                    "4e7e": "m8jP,m8Vp,pbWz,j5iF,j52X,j5yh,ce5h,cdC1,j531,g1KX,g2eh,9abH,9aTx,cdRz,3QKF,gP6j,pct1,lodH,loM9,gPfH,gPEN,67FN,4C2V,4CrV,7FS9",
                    "6e20": "oq/j,m8IV,lnB3,j5iF,dLj3,hzKV,nHbX,nGwh,fhph,fi89,kDcb,kDNN,hAtN,hzUh,bsJP,bt/9,dLRr,3R4x,5m8X,btmx,6891",
                    "75ca": "jRQP,gOGh,cdyP,ewhx,3QrP,8pCp,cdOx,m8zx,m9B9,pcgr,m991,dLyH,kDrV,dMu9,dLI3,dMkN,9YeP,9Xw1,5mrH,5nqh,dL+P,67IV",
                    "53c1": "oroj,j5cp,jSPp,mVWP,iliN,g1HP,g2Z9,j5Bj,fhj1,cdRF,9aeV,g2tP,cexp,9Yl9,cdUH,ceuh,8pIz,8qrx,4Bqb,4CrV",
                    "6da9": "mVbX,kCVx,hziH,fh3p,3QuX,cdOx,mVuH,mWgN,g2PN,ewZh,m95P,g2nF,c+Q1,gOVP,kDch,btgb,4BPh,c/cX,4C61,9XUX,9YeV,4Bzz,4Cy9",
                    "7ef3": "or5z,hzlV,hzEF,kD5X,bsJV,cd/1,66WP,7F11,nGzj,nH5N,j67N,j5Bp,nGzp,gP3b,gPHV,9YeV,9XCh,gP3h,c+Wb,c/yV,j5QX,5mX1,4C99,4Cv1,6V19",
                    "5c38": "4BgP,8pzh,9Xgp,mVlp,mWjV,excV,gOJj,gPHV",
                    "6f31": "oqRX,lnKx,ikaP,fh3p,4BgP,cdOx,m8FH,m991,j5oP,j5KN,dLXN,dLBV,j5oV,pcdj,3R1p,6T/r,dLOp,c+Zj,9XRV,gPlX,jSMh,orNp,jSMb,jT69,gPHV,gPyr,ceAx,8qlh,3R7F,ceAr,8qxN,4CBh",
                    "723d": "lnxX,loJ1,orrr,dLRx,9XCh,7EZV,5mip,3QrV,dLRr,8qf1,67Yx,4Cv1,kCPb,g2b9,g1O3,kD99,ewbb,aIl1,9Xa3,ewu1,g2qH,kDNN,jSCP,g2PN,ewSX,aJ0N,aIJX,ex9N",
                    5854: "ik7H,ikzV,oq/j,9arp,7ExH,aIl1,m8IP,m9B9,pcgr,j5Ex,pcIz,j64F,c+JH,g2kx,j5R1,g2Jx,dMu9,dLRr,dMhF,3R1j,9XFp,9YbN,3RzN,5mHj,5ndN",
                    6001: "kCFP,kDX9,orrr,jSnh,g24V,dLsx,bsN1,g2eb,c/6N,kDlz,ikYV,g2Dh,dMhF,ceN1,5m5P,9Xgp,9XsP,4BFV,3QU1,3Rnh,67Vp,btjj,8qbV,9Y8z,68fh",
                    "70c3": "ew1P,jR+h,pbTr,bsZx,7EKh,4BgV,bsZr,7F7h,gOMr,jSk9,nGwb,nH5N,kDEp,gPcF,ewu1,il33,exj9,ce5b,ceN1,cer3,5m+9,5mxX,5nqh",
                    "540c": "4Bn3,nG49,nH8V,685V,4Cfp,j5iz,j61x,fhfP,fhL9,9b79,9aDV,fhfV",
                    "5a01": "4BgP,8pw9,lnB9,loJ1,hzyj,hA7V,dLj3,dM21,hzUb,aIbF,7FjN,dLUz,9XFp,6Uc1,4Btp,orQr,mWjV,pcw3,ewW9,ceuh,7FCx,3RG1,6V4h,4B/H,7Fwh,ceDF,hAA1",
                    "7ef4": "66WP,7F49,c+PX,bsN1,jSh1,hzHH,gOwV,or5F,fhiX,jStx,orxN,jStr,3R4x,pcw3,lozF,jStr,jT69,fhvr,fi51,aIxr,aJ71,67zr,68fh,jSPj,67Vp",
                    "727a": "fgPH,m8q9,jRX3,jSk9,pbTr,3QHx,bsJP,ewu1,mVAX,mWq9,mVWP,dL+V,cehN,9XFp,mW4b,ceuh,btIp,btUV,3Q+b,hzUh,hAwV,3RCV,67tb,685V",
                    7280: "66WP,c+xh,oqYh,orZV,kDQV,kCPh,j5lH,hzXp,ewkz,g2kx,kDoH,ewMN,hAe3,j6aV,g2A3,excV,9Xmz,dLI9,bt6P,btUV,7EQr,7FS9,dLXH,3RaN",
                    6653: "66ZX,mVc1,mVxV,8pOV,8pt1,g1KX,g24V,kD5X,nHc1,ewAb,kDNN,pcjz,lodN,hAe9,dMnV,gPO9,ce23,ceN1,3QKz,4BM9,67wp,8q5F,cehN,ceub,4Cch,3Rqp,3RG1,6V19",
                    "978b": "m8gH,m8Sh,pbK3,j569,j5s1,pc41,g1KX,g2b9,ce29,cdC1,g1L1,8pmH,8p/p,j5iz,3QKF,loaz,loFV,g2kr,g2W1,aIAz,aJ3V,5mEb,5nn9,pczb,g2Dh,ewZb,5n1h",
                    7384: "orlb,logV,jRQP,jT69,jSqj,c+Ap,c/3F,gPsb,4Bn9,67/F,aIN3,4CrV",
                    "718f": "nGdr,orQx,nGCr,9aTx,lnuP,loM9,j5fr,j64F,dMhF,dLsx,j5fx,hzKP,fhph,fhEP,hAhh,bsTb,btUV,9al3,9bt1,3QuX,7EQx,7F0X,3Q+h,7FmP,3Rk9,7FFz,3RJ9",
                    7476: "mV8P,mVB1,g1HP,g281,mVor,8pFx,6TLP,9Xz9,mVHb,orZV,kDcb,ikSF,m95P,j5Xh,hAnr,m9y1,c+T3,hA1F,g2kr,g2W1,cd+X,ceTh,g2A3,5m+9,9XCb,4BPh,685V,9YeP,3RCV",
                    6930: "jRQP,jSdV,pbQj,3QEp,bsGH,iknp,hzyj,dLBV,nGmP,nGP1,nGt3,8pV9,7EWH,9XY9,nGIH,3RaN,j5v3,j5KN,ewx3,ewMN,3Rqj,nGYp,nHc1,gPBF,c/F9,9Yl9,8quF",
                    9690: "3Qy3,nG49,nGt9,hzBx,ewqV,ce29,9Xw1,8pFx,ikCX,kDfp,orxN,m8/z,m9oF,j5U9,j5Bj,j6aV,c/yV,c+Zp,g2hj,g2SV,67jP,9XCh,9XLz,5mNF,4B/N,4Cix,6UQF,btyX,8qlh,aIZz,6V19",
                    8747: "aHXX,jRU1,jSh1,c+Q1,c+r1,or2r,7EQx,66WP,8pV9,9XvX,67wp,nGCr,nH5N,j67N,j5Ex,nGCx,g2hj,g2SV,9YeV,9XFp,g2hp,c+Zj,c/yV,j5U3,5m+9,4Cch,4Cv1,6V4h",
                    "8a89": "oq/j,lnTV,pcab,lodN,jSCP,orTF,jRQP,jT69,c+nP,fh3p,jSh1,jSFX,gPvp,dMu9,hzXj,fhBN,fh9z,fhUx,cdRz,cexp,9Xjr,9Y5x,3QKz,7ETF,7FCx,3Rtx,5moz,5n7x",
                    8881: "mVlj,mWdF,pcgr,jStx,jRTX,jT31,gOMr,gPyx,c/px,c+Dx,gOMx,6TLP,9XsV,c+Wh,9XsP,3QQV,7Fdx,btpz,7Fwh,4Cy9,8qlb,btRN",
                    "8f67": "lnuP,loaF,pc0P,ew51,ewJF,ikzP,3QQV,8psX,btpF,orH3,67P9,5n1h,4Cfp,4Cv1,7FVh",
                    "5b85": "pcab,m92N,ikh3,m8q9,m9uV,illV,g1Xr,hAkp,aHUP,ceN1,gP6j,4BSp,3R4x,3RwF,6UWV",
                    "653f": "mV8P,mVQF,mVxP,7EZV,fhfP,fhsp,hzvb,6TVh,66WP,8q5F,g2kr,orH9,j5KH,j6h9,j67H,dMex,9X/h,67FN,3QU1,g2qH,aIK1,6UKp,3RJ9",
                    8102: "4BdH,9al9,nG49,nGq1,5my1,3QHx,ikh3,ikD1,c+u3,c+Q1,pcgr,hz+x,gPcF,gPL1,j6kh,kDir,mWjV,3R4r,dLRx,dMnV,3RCV,9XIr,9YeV,5mKr,5ngV",
                    "7b51": "hzlP,or2x,m8wj,m8Vp,m8Cz,ikD1,j5Er,pcw9,m95P,m9B9,m9fb,ilfF,fgZ3,fhm9,fh9z,7ETF,66WP,8pV9,3QQP,67wp,8q2x,g2kx,g2Jx,5n7x,4ClF,4Cv1,6V4h,btsH,8qlh",
                    "8d5a": "aHXX,mVc1,mVB1,aIl1,j5fr,9arp,4BgV,8pLH,4BM9,pcdj,mVTN,m9fb,orTF,ln+3,loM9,ikJb,illV,ceJV,ce5h,fhm3,fibh,lodH,3RaN,loqb,3Rnh,7F43,btsN,btIj,5nqh",
                    "57dd": "ik7H,ikzV,oq/j,9arp,7ExH,9XsV,gOVP,loaF,orAV,loqh,hAD9,hAe3,j5KN,g2eb,g2MF,btC9,btsH,8qlh,4BFP,9aNh,9aTr,4BVx,3R7F,3Rtx,67/F,9bmH,68c9",
                    "6cfe": "oqRX,lnNF,ik7H,fh3p,cdRz,3QrV,nGt3,nH2F,kDBh,hA4N,ewqV,ik/X,exj9,cd+X,ceN1,4BCH,4Cy9,4C5X,ceo1",
                    "822c": "3QrP,7EH9,cdIh,mVih,mVE9,67q9,3QKF,pbZH,mVox,fgPH,fhvx,jS4r,gOVV,c+Dr,9XsV,fhvr,ikYV,mVWV,mWgN,gPEN,gPRh,3R1j,5mTV,8qop,dMkN,dL+V,8qlh,67/F,3RJ9",
                    "4fbf": "3QBb,lnEh,gOtH,pbWF,nGjH,nHf9,kD5X,kDQV,c/yV,c+Q1,kD61,gOYX,gPHV,nGOX,dM21,aIGV,7FgF,67wp,3QNN,bt6P,7FgF,67P9,5n7x,4Cy9",
                    "5c42": "5m5P,aI2h,oqYh,orWN,kDNN,kCPh,gOSH,gPHV,c/F3,c+Dx,c/3z,5mrN,67/F,aIQb,4CrV",
                    "70bd": "ew1P,kCPh,pbWz,cdOx,7EKh,4BgV,g1+z,kDch,cdRz,8pV9,btpz,mVQF,mWjV,btUV,dLUz,dMnV,3QTX,9XV1,9Y5r,4Cy9",
                    "6dec": "nG43,kCYF,hzlP,ewep,4BgP,bt0F,orxH,m9fh,kD2P,kDU1,j5Er,cdXV,gP6j,ewPV,j61r,cekV,g2Gj,c/C1,9aAH,9bzh,btyX,3Rh1",
                    "70b9": "pcdj,hzXp,lo4j,loFV,hzBr,hAnx,btLx,bsZx,hzBx,3QrP,8pFx,8pRX,3Q+h,8q8H,3Rk9,9bgr,4Cy9",
                    "8eb2": "pbWz,m8wp,cdF3,m8q9,m8M1,5my1,3QKF,j563,j5s1,fhiX,fgZ9,cdvH,cd/1,5m2H,cdXV,g2hj,ikVN,nGIN,nH2F,gPBF,gPO9,c+Zj,c/Ih,gPsb,3Rnh,67tb,c/jh,68fh",
                    "67ab": "jRNH,jSh1,pbQj,3QEp,bsGH,jS1p,hzyj,ewqV,4Bzz,aIo9,ewAh,nGwh,nH5N,9bmN,4Cy9,7FVh,ikPr,9Y5x,j5+j,8pYh",
                    "641e": "j4/P,j5s1,cdvH,fhfV,pbQj,5mip,3Qv1,pcjz,m9c9,lnTP,loM9,j5yb,j67N,fh+N,fhph,j5yh,3QTX,c+Q1,c/C1,5nk1,3Rtx,aIxr,aIWx,6UNx,6Uox,aIxx",
                    "5e7f": "4BgP,8pzh,c+Ap,lnHp,loM9,pcdj,m95V",
                    6052: "jRX3,ew1V,pbTr,3QHx,kC/H,gOZ1,mVE3,mWq9,8p/j,j5Bp,j67N,8qxN,ewDj,ex9N,9XFj,9YbN,5mxX,5nqh",
                    "6c47": "nG43,lnQN,hzlP,ewhx,4BjX,cdRF,m9xX,m8P9,4BM9,4CBh",
                    "7b3a": "j4/P,pbWF,mVlj,mVNx,mVrz,jSk9,j5Er,pcw9,mVZX,mWq9,mW13,j67N,ikYP,g2Gp,dLfX,g2SV,9X3P,c/F9,3QBb,5mEh,7Fq1,9Y5x,ikG3,aIup,67IV,3RzN,6V19",
                    "59d0": "j4YH,j5v9,cdXV,8pFx,4BdN,pbWz,cdC1,9XmF,6Uih,4BYz,mVQF,mWgN,4CoN,gPcz,gPEN,btRH,btpF,4BIX,4CBh",
                    "4ff1": "g1EH,pc0V,jS1j,3QEp,9XCb,nGwh,nH5N,9YbN,kDcb,kDNN,hAtH,hzUh,dLLb,dMkN,9Xmz,9Yoh,3QNH,9aWF,9bab,4Cv1",
                    "88e4": "pbNb,mVrF,kCCH,kD61,gOJp,c+kN,gOJj,3QEp,fh3j,cd/1,ewkz,gOZ1,4Bzz,7F11,c+Wh,m8Sh,m9Eh,pcpP,mW4h,kDy3,c/0x,c/F9,ikPr,ilp1,8pYb,8qKh,g2Gj,3Rqp",
                    "695e": "j4YH,j5s1,pbTr,3QHx,aHRH,j5fx,hzBr,ewu1,nGwb,nH8V,hAwV,hzUh,nGwh,nGIH,hA4N,nGYj,hAkp,gPiP,ewZh,dLBP,dMxh,dL+P,7Fdx,67wj,3QQV,9XOH,9YeV,5ndN,3Rnh",
                    "96f6": "nG43,nH8V,hzoX,lny1,loJ1,hAA1,nGCr,hz+x,jS4r,jSk9,gOMr,gP09,jSCP,jSVF,gPiP,gPBF,bsJP,c+GF,gP9x,dM59,ceDF,bt/9,c+Zj,btsN,9Xgj,9Y8F,5mKx,6UbX,3Rh1",
                    "88f8": "oqYb,m8FN,jRNH,jSdV,g1Xx,c+nV,g1Xr,3QHx,ewhr,aIl1,c+JH,g2b9,nGzj,nH8V,gPHV,gP6p,nGzp,jSqj,jS/V,nGS3,3Rk9,c+T3,c/F9,67mX,8q2x,c/g9,9bjF,68c9",
                    "52c9": "j52X,or8N,m8zr,m8Yx,ikzV,cdF3,ikh9,ikSF,dLUF,dLj9,ikzP,aIeN,7EQx,3QrV,dLI3,5mB9,4BPh,4CrV,6V4h,j5NP,j6aV,9YeV,7Fzp,orNj,fhOh,btz1,7Fdx",
                    "4f60": "fgPH,jS1p,or5F,jS1j,3QEp,g24P,kDfp,pcjF,kDfj,kDU1,gPEN,6U5H,dLRx,hAaX,5mX1,3R7F,dMer,6V4h",
                    "966a": "3Qy3,nG49,nGq1,hzyp,dLBV,cd/1,9XsV,8pCp,pcpP,mW4h,m8P3,m9B9,jStr,gPiV,kDNH,fhOh,fhiX,fibh,3R1j,btjp,btUV,3RCV,5mHj,5ngV",
                    "6c8f": "oqYb,lnTV,ikdX,g1Xx,4Bn3,cdRF,ikwH,j5NV,orlb,9XCh,9aQp,9aWF,c/9V,mVWP,mWn1,6891,4Cix,mW4b,9XY9,67FN,4BSp",
                    "503e": "fgPH,pbWF,lnHj,3QEp,m8IP,8pOV,aIxx,hzKP,hz+x,nGzj,nHf9,nGYj,j5U9,9aZH,j5KN,j6aV,9bpV,g2Gj,9bah,67IV,3Q+h,7FCr,4Cy9",
                    8339: "m8jP,m9B9,pc3X,j5s1,pcw3,j5U9,g1HP,g2hp,btgh,6U5N,3QrV,j5lH,9Xdh,67zx,4C2V,gPiV,gPHV,4CrV,67IP,685V",
                    6444: "kCFP,kD99,pbTr,5mlx,3Qv1,cdvH,fhj1,nGt3,nHf9,nGCx,fhvx,nH2z,dMhF,lo7r,lozF,ikPr,ilfF,fhm3,fi89,cd+X,cekV,8q5F,4BFV,9Xz3,67IV,cer3,ceN1,7FFF,3RaN,9X/b,67/F,3RJ9",
                    6292: "kCFP,kDch,pbWz,5moF,3Qy9,bsJP,g2b9,nGzj,nH8V,j5U9,kDoH,hAnx,g2eb,g2Z9,ceGN,g2Db,5n1h,3RaN",
                    "7b97": "jRQP,pbWF,mVlj,mVNx,mVuH,kD61,kDir,pct1,mVTH,mWq9,mW4b,kDKF,j5fr,j61x,btLx,bsZx,j5fx,gOMr,gPyx,dLsr,dMex,8pmH,8qKh,bt9X,7EZV,5mlx,3Qv1,btyX,3Rh1",
                    "8e44": "nG43,nGq1,hzO1,hzs9,nG49,hzEz,7ETF,dLvz,dLLh,ew83,6TS9,66WP,8pYh,pcsX,mW7p,mVHb,mWq9,kDlz,ikYV,kDKz,hAhh,ewAb,hzUh,hAD9,exj9,67zr,c/0x,c/yV,7FLV,67Yx,hAhb,3Rnh",
                    "8c4c": "mV8P,mVE9,j52X,j5s1,dLF1,dLg1,j531,cdBX,9arp,cd+X,7EQx,66TH,8pYh,pcpP,m9ip,ikJb,m8Sh,m9y1,ilp1,ce23,j5KN,gPcz,gPp9,btvV,7FgF,3QU1,cebr,aIDN,9bgr,aJ3V,gPHV,gPsh,5n1h,4Cfp,4Cv1,6V19",
                    "6bcb": "g1EH,g30h,oruz,fhvx,8pYh,4Bwx,9bsX,9arp,nGdx,nH2F,67Yx,3Rh1",
                    9999: "nG7b,orTF,nGCr,dLRx,jRQP,jT31,c+nP,fh9F,jSnh,jSwz,g2Dh,dMu9,3QHr,c+Dx,c/mp,3Rqp,9aur,9bdp,5mlr,5n4p",
                    "79c0": "mVlj,nGFF,orTF,j52X,j6h9,nGFz,c/3F,c+qX,fhcN,j5HF,g2A9,ex6F,c/Ih,c+Gz,c/jh,9b79,9bmN,67/F,4Cix,3RdV,3QuX,67dF,8pS1,c+Wh",
                    "96c1": "5m2H,9Xa9,dLmh,nG7h,nHf9,ewhr,hzKV,m8Sh,hzKP,3QQV,dLI3,ikSF,m95V,ikSz,3R7F,m9fb,jSYN,ikSz,ils9,ewJz,exg1,aIAz,aJ71,67Cz,68c9,il9j,67Vp",
                    "6bc5": "pbTr,mVxV,m8jP,m8Yx,kCM3,ikqx,hzKP,kD99,hzlP,hz+x,hzHH,c+nV,g1Xr,c+MV,9Xw1,6Uc1,5muV,3QEp,9X3P,dLyN,66WP,aIhV,c+MP,ewDp,aIkX,8q2x,g2kr,j5NV,nGLV,nH2F,hAqF,gPEN,gPRh,dLRr,dMnV,btOF,6UB1,3Q+h,dLXH,9XY9,6UNx,4Cy9",
                    "9c7c": "hzs3,ori9,lnQH,lon9,gP9x,gOJj,gPBF,8quF,8pCp,gOJp,c+Aj,c/sF,gP9r,8q2x,4BgP,4Cy9",
                    "7cdf": "m8mX,j59h,j5lH,m8M1,hzlP,hzO1,pbTr,3QHx,9X3P,hzBx,fh6r,cd/1,m8Sb,m9B9,pcpP,dL+V,pcCj,dMbp,jSnb,jT31,dMr1,dLLh,jSnh,gP3b,gPL1,3R4r,aIxx,aJ0N,3RzN,8q2r,8qxN,4BVr,4CoN",
                    "6d59": "4BgP,c+Dx,g1Uj,ikaV,oqV3,m8CF,j5iz,j5KN,pcab,5mEh,3QQV,aIbz,ewJF,nHbX,mV+1,ceo1,9b0V,5mKx,gPlX,gPRh,gPBz,3RwF",
                    "5e1a": "oq/j,orTF,ilfF,iknp,lnKr,lozF,cdBX,g1L1,g2W1,ceN1,67ar,cdOx,ceAx,6UNx,5m+9,fhvr,3R4x",
                    "8db3": "nGaj,nG/x,hAnx,hzyp,nGap,hz+r,5mKx,cebr,ceGN,4BdH,dLsx,aI5j,5mHp,5nn9",
                    "6ca3": "oqRX,lnNF,ik7H,fh3p,3QrP,cdRF,lnTP,loFV,g27X,g2PN,aIbz,aJa9,pcpP,3RdV",
                    "53ed": "8psX,mVc1,mVxV,bt6V,bsN1,nGFz,ewGx,9aNh,4BCN,pczb,gPvp,aIZF,4Cy9",
                    "6bd4": "nG7b,4Bqh,8pYh,gOGb,gP6p,oruz,5mNF,4C2V,4ClF,5ngV,8qE1,fhyz,jS/V",
                    "8e29": "66TH,8pV9,7ETz,hzEF,6TS3,ew89,c+Gz,c+Wh,hzNX,hzs9,nG49,nGq1,hzO1,mVHb,os11,kDfj,gPfN,lojX,hAhh,gPyr,loJ1,dLLb,dMu9,gPp3,3Rk9,67q3,9aWF,dM59,9Y5x,68c9",
                    "6a59": "jRNH,jSh1,pbQj,3QEp,bsGH,jS1p,gOJj,dLBV,nGt3,nGLV,jSwF,fhj1,ln+3,j5Ex,orH3,j61x,fi89,m9ij,orZV,j64z,kDU1,hz+r,hAqF,ewDj,ex9N,9YbN,9XFp,ewDp,8q2r,5mTV,5m+3,8quF,5mxX,5nn9",
                    6148: "pbZH,mVE9,m8/z,pczh,m8jP,m9B9,kD2P,gOGh,gOZ1,ikMp,cdF9,c+Wh,fhm3,cebx,kDBb,g2nF,g2Gp,ilfz,ceeF,c/sF,ex3r,btUV,5m5P,9Xgp,9XsP,5muV,4BM9,4C61,6UHh,aIuj,8q8N,9Y8z,68c9",
                    "7b49": "jRTX,pbWF,mVlj,mVNx,mVuH,jSh1,kDir,pcw9,mVWP,mWq9,mW4b,jSVF,hzyj,hAtN,dLcP,dMu9,jStr,dLRx,aHXX,aJ71,9aAH,67th,dM8b,5n1h,3RaN",
                    "5ea6": "5m2H,cdIh,m8th,m9B9,pcgr,mVWV,ikqr,ilp1,kD93,ewx9,ex0p,kDEp,cdUH,ceAx,7FmV,5mEh,3QEp,btd3,7FgF,5n1h,3RJ9",
                    5561: "8ppP,lnuV,lnQN,9XpN,9X3V,kC/H,kDlF,fhfP,fhyF,9XsP,9XLF,pcjz,3R7F,pczb,3Rnh,kDBb,kDX9,fi4X,fhOh,9X/b,9Yoh",
                    "6e89": "oqRX,m8CF,ikaP,g1Xx,5m5P,c+Dx,ewqV,ewGx,mVNx,mVxV,67jV,9XIx,ce5b,8q8N,j5oP,j5Ex,mVTH,mWq9,jSFX,ewMN,exj9,mWar,fhRp,9XY9,7FmV,4BSp,c/pr,5n7x,4ClF,4Cv1,6V4h",
                    "8c37": "j52X,lnKx,orf1,orDX,jS/V,kDir,gOZ1,cdyV,kDir,g2A9,ceQ9,3QKz,cdRF,cexp,3Rqp,67dz,67Vp",
                    "559d": "9ahX,mVc1,mVuN,bt3N,bsN1,orlb,orWN,gPEN,gP3h,orlh,kDcb,kDNN,aIhP,gPfN,dLOj,dMr1,5ngV,3Rqp,dMhz,aIGV,7Fdx,btyX,8quF,btgb,67th,67Yx",
                    8757: "aHUP,kCFV,kD61,c+Q1,c+nV,oq/j,7ENp,66TH,7F11,aIeH,67q9,pcw3,mVTN,mVKp,g2hp,g2SV,mWjV,mVTN,j5Bj,j6aV,c+Wb,c/C1,9aQj,9bpV,4BIX,4CBh,c/g3,4C99",
                    "65e2": "dLyH,9aQp,bt9X,6719,nG49,nGq1,g281,g1O9,jRX3,jSh1,nGzj,nH8V,loaz,g2hp,g2SV,nGS3,ewT1,8q5F,3QQV,ewZb,67Sh,5n4p,5ngV,7FS9",
                    "997a": "hziH,pbTx,kCM3,kD61,hzHN,gOJj,4Btp,9aH1,pcjz,m9fh,lnWX,loM9,j5Hz,ewu1,j5+j,exj9,ex6z,aIQh,6UuN,3QQV,dLOj,9XRV,6UKp,3RJ9",
                    6551: "nGt3,lo7x,pbZH,5mrN,3QBh,gOzX,dLpp,8pmH,c+JN,jRQP,jSwF,gP6j,dLyN,c+JH,9aTx,ewGr,j5R1,pczh,j5QX,j6kh,j67H,c/sF,8qlh,3R1p,fhEP,9X/h,6UQF,4Cy9",
                    "54b3": "8psX,mVc1,mVrF,aIbF,aHY1,pcjz,mW19,lnTP,loM9,logP,fhj1,fhI1,j61r,ceeF,8pLN,fi1P,9b79,67zx,3QQV,9bab,4Cy9",
                    "5eca": "4BdH,8pw9,bsTh,mVih,mWq9,pcab,mVTN,lnTP,j5yh,bt3H,btpF,j5HF,j5lN,4BCN,7Fdx,9XCb,67FN,fhcH,fhyF,3Rk3,jSJ9,jT31,dMex,9Yl9,7FS9,67Yx",
                    "5be5": "pcdj,mVTN,j52X,mVc1,mWn1,j6e1,kCSj,kDfp,g2hp,j5fr,hzKV,fh0b,gP3h,kDlz,kDKF,ex6F,j5KH,hAhh,fhEP,gPyx,9X3P,fhvx,9Yl9,8pFr,ceeF,aIN3,7F7h,67ax,3QKz,5mNF,8qrx",
                    "6c2f": "ikaP,or2x,m8wj,m9uV,j5fr,j64F,gOzX,gPyx,btIp,6UQF,4Cv1,6V4h,ewkz,ewMN,btsN,c+Gz,c/6N,bsTb,btC9,btgb,67th,4BFV,9Xmz,8pOV,5mfb,9aNh,8p/j,9XON,8pYb,67P9",
                    "840c": "mV8P,mWq9,pc0P,jSdV,pcw3,jSJ9,6TVb,ikkh,ikG9,8pV9,8pzh,dLmb,dLI9,3QTX,6Uox,9aWF,ikSF,iliN,5ndN,3Rnh,ewJz,ex9N,aIAz,aJ0N",
                    "5a1c": "pbQj,c+r1,9aH1,jRNH,jSdV,c+JN,9aux,66+1,mVxP,mVWV,67IV,4BSp,ikCX,ikYV,c+PX,c/9V,mVNr,ce8p,8pV9,5mrN,3Rqj,nGYp,nHf9,gPBF,bu2h,9bw9,7FFF",
                    "6e43": "oqRX,lnNF,ikaP,g1Up,4BgP,cdLp,nGjH,nGFF,hzHH,hA4N,c+Gz,c/6N,nGwb,btgh,8pV9,3QKF,nGLP,nHf9,j5NP,j6e1,fhEP,fi89,aIDH,aJdh,nG/r,3Rtx",
                    "8feb": "mVf3,jSaN,g1HP,g1Xx,6T/x,4BgV,6T/r,4BSp,4Cv1,kDlz,orE1,7F7b,kDch,kDNN,7FIN,fhpb,fh+N,9XCb,9YbN",
                    "4fa8": "fgPH,pbWF,kCSj,3QEp,mVAX,orWN,nGLP,j5NV,g2nF,bt0F,j5oP,j6e1,j5QX,fhUx,c/F9,c/0r,9aTx,6Ulp,3QQV,dMer,3Rtx",
                    "70ed": "kCFP,kD99,ev+H,gP09,or5z,bt0F,9Xdh,jSnb,lozF,ceAx,btOF,btY1,dMxh,orAP,fhBN,btjp,9Xw1,gP6j,cer9,3QrP,8pCp,8pRX,3Q+h,9aZH,4C99,9bjz,4Cy9",
                    6247: "3QrP,7EH9,9Xdh,m8th,m9rN,hAtN,hzvh,pcab,mVWV,fh6r,fhvx,5mKx,3QU1,cdUH,aIo9,6T/r,9XIx,fhEP,fi1V,5ngV,3Rnh,cenX,aIWx,6UxP,9YeV",
                    "55dc": "8psX,m8n1,m8CF,bt0F,bsN1,mVE3,mW7p,jSdP,jT69,pcmH,jSzN,fhfP,ikYV,mWjV,hz+r,dLRx,c/3F,c/vN,fi51,fhvr,hAtN,3Q+b,btgh,btRN,3RzN,8pYb,8qxN,5ndH,5mEh",
                    "5df3": "mVib,mWdF,c/sF,fhXz,fh3p,hzyj,6TYp,5mlx,5ndN,8qE1",
                    5018: "fgPH,or5F,kCSj,3QEp,m8LX,j5Ex,pcpP,gPiV,il6b,mWjV,3QQP,gOVV,gPL1,5nk1,3Rtx,c/0r,c/mp,8qop,8q2x,c/0x",
                    "817f": "4BgP,8pw9,aI2h,nG7h,nGmV,67jV,4Btp,ikkb,ikzV,c+xb,c+MV,nGt3,jStx,g27X,g2hp,6Ulp,5mB9,6Ulj,4C99,4Cy9,9Y2j,6UxV,nGLV,nH8V,fi1V,fhEV,j5NP,j6aV,c/mj,7FS9,btOz,dMu9",
                    "7a33": "mVbX,nGt9,hzlP,hzR9,mVor,3QHx,9X3P,g1Xx,fh6r,ce29,jSnb,pcpV,m8/z,m9oF,j5Xh,j5Er,j6aV,c/yV,c+Zp,g2kr,g2SV,67jP,9XCh,9XLz,5mNF,4B/N,4Cix,6UQF,btyX,9bdp,9YbH,68fh",
                    5148: "hzvb,nGjN,jS7z,jSVF,pcgr,ewGx,ew4X,exg1,3QuX,67dF,7EZV,9aH1,ewx9,ewPP,5mTV,4C61,4CrV,6U+1",
                    8165: "4BgP,9Xa9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,c+MP,c+u9,nGCr,nH8V,gPHV,gP9x,nGCx,kDir,kDQV,btd3,fhyF,c+Zj,c/F9,9aTr,9bpV,4BM3,4Cy9,gPsb,4Cch",
                    "8bb6": "oqYb,lnTV,hzlP,hzEF,4Bwx,aIrh,nGzj,nHf9,logP,fhsp,fi89,4BIX,7FgF,aIK1,fhRp,nH2z,67/F,3Rk9",
                    "80f0": "4BgP,9Xa9,nG49,nGjN,67gN,4Btp,ikh3,ikwN,dLj3,dLyN,mVAX,mWq9,jSk3,jSYN,gPEN,gP09,c+T9,c/C1,9bt1,9bjF,pcsX,c/d1,8q8N,5mHp,3QU1,c/cX,7FCx,3RJ9",
                    "5c24": "hzs3,hAA1,pcgr,ewDp,9Xz9,67dF,3Qv1,nGS3,lozF,fhBH,5mQN,4C2V,4CrV,7FS9",
                    5300: "g1KX,orf1,lnQH,loFV,685V,5ndN,4ClF,3Rh1,gOVP,ewMN,8pzb,btFh",
                    6756: "j4YH,j5s1,pbQj,3QEp,aHRH,j5cp,hzyj,dLF1,j5yb,j6h9,pczb,aIN9,6UuN,3QQV,g2hj,btsN,6UKp,4Cv1",
                    "79e9": "mVbX,nGt9,ik7H,ikG9,mVor,3QHx,9aeP,gOMx,fh6r,btd9,g2eb,mVQF,j5Er,j6e1,dLLb,dMu9,pczb,ewZh,aIN9,8qbV,67CF,3QU1,ceub,7FFF,685V,4Cy9",
                    5179: "or5z,ln+9,jSzH,orNp,jRQP,jT69,ikzP,cdF9,cd/1,fhsj,4Bk1,6Uih,8pV3,5mHp,il6b,cebx,ceAx,ex9H,4BVx,67/F,8qrr,3RCV",
                    5955: "3QuX,67gN,9aNh,cebx,dLUz,ewPV,logV,lo1b,g2eh,c+MV,exfX,il6h,ikwH,ew89,lnxX,loJ1,m92H,pcah,bsMX,btY1,aIAz,8qbV,67Vp,4Cy9",
                    "788d": "5mfb,g1Rh,g281,8pS1,8pzh,dLcP,m8zx,m8gH,m8P9,oroj,orWN,hAtN,hzXp,orop,lo4j,loCN,fhpb,fi51,bu2b,btd9,9aTr,6UB1,fhXz,5naF,3Rk9",
                    "676f": "3QEj,pbQp,kCCH,kD99,cdvH,kCSp,iknj,ewu1,mVAX,mWth,9aAH,ce5h,ewGx,mW4h,jSFX,3Rh1,g2Gj,9Yoh",
                    "7b94": "pbZH,j531,m8zr,m8Yx,m8Cz,j5v9,pcw3,j5Ex,m95P,m9B9,m9c3,j64F,ikkb,g24V,ew4X,cdRF,4Bn3,9XsV,j5QX,g2qN,3Q+b,g2eh,g2PN,3RzN,btgb,btRN,67tb,682N",
                    6284: "jRNH,jSk9,cdvH,fhj1,pbTr,5mlx,3Qv1,c+PX,g2hp,kDlF,pcw3,aIN9,lozz,g30h,c/yP,9Y8F,6UHh,5mQN,3QU1",
                    5598: "8psX,m8n1,m8FN,aIeN,aHY1,nGwb,j5yh,j6aV,nH8V,orDX,j5R1,g27X,g2Z9,g2A3,cehN,3QX3,ce29,ceJV,5ngV,3RwF,4B/H,cehN,cexj,4Cfp",
                    "6de1": "oqYb,lnQN,ikaP,fh6x,4BgP,cdOx,j5rX,mVKp,mWjP,jSPp,pcsX,ikVN,dLBV,j5NP,excV,c+Zj,9aH1,fhEP,7FgF,3QKF,aIGP,6UKp,3RJ9,9bdj,c/vN",
                    8463: "m8jP,m9B9,oreX,jSh1,orDX,kDv1,iknj,jSSx,gOtH,gPRh,ewej,ex3x,9Y5x,9Xgp,ewep,cdLp,ceAx,6TS3,6UWV,4BgP,4Cy9,ikPr,4BVx",
                    "7ffb": "mVbX,orlh,nGjH,67gN,m8tb,jS1p,jSgX,m8Vp,ikaP,ikMp,iktz,dLcV,gOYX,dLRx,3Qy3,c+u9,c+Wh,67th,6719,9Xa3,9XCh,nGFz,nGVh,8qlh,3R7F,j5Er,fhI1,9XIr,dM59,nG/r,os49,5nn9,3RwF,j61r,fh+N,aITj,exg1",
                    8151: "4BdH,9Xa9,nG49,nGmV,67jV,4Btp,ikh3,ikzV,c+MP,c+u9,5mxX,9aNh,mVHh,mWq9,pcpP,mW7p,ewGr,kDy9,ikYP,3RdV,g2A3,g30h,c/jb,9Y5x,kDNH,682N,3Rqp",
                    "5f13": "nG7b,nH2F,ilfF,iknp,c+Ap,c/yV,7FFF,5n1h,4BVx",
                    "6db5": "oqYb,lnQN,ikaP,fh6x,4BjX,cdRF,nGpX,nH8V,kDrV,9XRV,7Fdx,j5yb,g2nF,aIo3,fhEV,j64z,g2A9,aJ0N,ikCX,5my1,685V,illP,3RCV",
                    "753b": "nG43,nH8V,jS7z,jSPp,9Y2p,9XmF,jS7F,fh9z,fhRp,jStr,9XIx,hzs3,6719,6UWV,gPHP,4CrV",
                    "8f91": "lnrH,lo4p,pbWz,ew51,ewAh,ikwH,3QNN,9aeP,aIup,oruz,orZV,jS/V,jSwF,oruF,hzUb,hAGh,hA4H,6UuN,dLXH,dMkN,aIDH,aJ0N,hAtH,3RzN,67tb,7FVh",
                    "6c5f": "oqRX,lnNF,ik7H,fh3p,3QrP,cdRF,m8LX,m9B9,m98X,67M1,67jP,68fh",
                    "7ecf": "pbWz,hzlV,hzKV,kD93,bsN1,ce5h,5m5P,7F7h,nGzj,nH8V,il6h,dLLh,il6b,exj9,cebr,ceN1,ceub,4Cch,4BPb,4CBh",
                    "51ef": "nG0X,j531,j5Bp,nGzp,pbWz,j5iF,g1KX,g2eh,ce5h,cdC1,4Bk1,8pYh,3QTX,6Uox,aIDN,mVTN,mWdF,5naF,4CoN,4Cv1,7FVh",
                    "62c9": "jRNH,jSh1,bsJP,fhj1,pbTr,5mlx,3Qv1,pcpP,lotp,jSk3,jT69,gP6j,8qbV,gPHP,5m+9,5mxX,5nqh",
                    9570: "ik7H,pbQp,lnB3,lnX1,hzoX,hzKV,c+nP,c+MV,hzyj,677p,9aDV,pcpP,mW4h,4BCH,9Xz9,mVE9,mWq9,loaz,j5NV,j5Xb,lozF,j5yb,j6e1,gP6j,gPHV,aJ3V,aIup,dLLb,dMu9,j5NP,3RdV,j5+j,3Rqp,5mEb,aIGV,aITj,5nn9",
                    9885: "4BdH,aH/9,j569,j5v9,aIo9,c+T3,c+u9,j5iz,pbWF,mVrz,mVKp,nGzj,nHf9,nGYj,jSJ9,9aWz,jSwF,jS/V,9bpV,gPsb,9X/h,6UxV,5mNF,3QU1,8qoj,3RJ9",
                    "94c6": "ikaP,or2x,lnEb,ln+9,hzoX,hzO1,c+nP,c+T9,hzBr,4Bwx,8pV9,nGOX,m8Vp,aIup,c/9V,kDrP,9XRV,7FjN,3Q+h,3Rtr,mWax,mWn1,9Yi1,8quF",
                    "6cab": "nG43,kC/N,ik7H,fh6x,4BgP,cdRF,jSgX,jT31,ewtX,excV,orAP,3RdV,jSgX,jT31,ewtX,excV,orAP,3RdV,5moz,6Uc1,9aQp,ewPV,9Y2j,6UWV,5nqh",
                    6012: "lnuP,lo4p,gP09,dLyN,bsN1,or8H,gOGh,dLOp,m8/z,m9uV,ilfF,fhOh,c/3F,m92H,hAe9,ex6F,c/F9,4BgP,9arp,9XsP,5muV,4BJ1,4Cch,6UKp,btjj,7Fq1,9bjz,5nqh",
                    "9a97": "nFZP,nGmV,dLyN,lnEb,dLg1,dLF1,5my1,3QHx,7EAP,9XmF,pcpP,mW7p,8pRX,ce8p,fhvx,m8Yx,m9uV,hAwV,hz+x,3R4r,ewGx,exg1,5nk1,3RwF,9XIr,9Yi1,ewW3,5m+9,ex3r,5n7x",
                    "9ed4": "nG0X,nGzp,gP6p,gOA1,nG11,lnEb,j5iF,j5oP,ln+9,nGjH,bt3N,dLfX,dLOp,bsGH,btmx,66ZX,8pw9,8pCj,5moF,8pOP,5mB9,9aNb,67zx,fhvr,ikYV,nGVh,kDKF,g2Z9,gPsb,dMhF,btpz,btUV,3Rk9",
                    "62f3": "or2r,m8M1,m98X,orQx,kCM3,kDQV,hzlP,hAD9,pcjz,kDfp,gOZ1,dLsx,bsJV,gPlX,dMex,bt/9,dLyH,dM8h,aIbz,aIWx,7EH3,7FLV,dLUz,5mNF,3QX9",
                    "68ee": "m8q3,m9y1,pcjz,g2nF,gOzX,j5lN,m8Vp,kDrP,gPHV,c+nP,c/0x,gOSH,3QNN,66TH,c+JN,c+JH,8p/p,c/3z,c/F9,gPsb,3Rnh,67tb,c/jh,9bjF,68c9",
                    8671: "nFZP,nG/x,ceAx,7FFF,4Cv1,7FVh,j52X,kDv1,j5rX,6Uc1,9Xa3,g1O9,g2tV,btvV,bsQ9,5m5P,7Fq1,9XOH,5n1h",
                    "8c01": "oqV3,lnQN,hziH,hzyp,3QEp,9Xw1,g24P,kDfp,pcjF,kDfj,3R1p,pcw3,m9lx,jSqj,jT69,fhsj,fi51,btjj,btY1,67wj,68c9,jSMb,67Sh",
                    "6c70": "nG7b,kD2V,hzoX,fh9F,3QuX,cdRF,ikzP,ils9,orAP,hA7V,dLXN,9aTx,6Uih,3QNN,8q8H,67P9,hA7P,c/g9,9Y2p,6UQF,4Cy9",
                    "94dc": "hziH,or2x,lnEb,ln+9,hzoX,hzKV,c+nP,c+Q1,hzBr,4Bwx,7F11,3R1j,nGzp,nHc1,5nk1,3Rtx,j5KH,j64F,fhBH,fhUx,9Y5x,9XON,fhBN",
                    "82c7": "mV8P,mWq9,pc0P,j5oV,pczb,j5Xh,hzoX,hAwV,ewej,ex6F,aHXX,aJ0N,7FIN,67Sh,jStr,3R4x",
                    "6a84": "jRNH,jSdV,pbQj,3QEp,aHRH,hzyp,g1Uj,dLyN,m8Vj,oruF,m8P3,m92N,gPfN,gP09,m8P9,jSk3,jSzN,g2hj,dLRx,c+MP,c/d1,4BCH,7F49,aIrh,c+Wh,aIrb,aIDN,6UuN,5mHp,fhHX,orQx,jSPj,jT9h,jS/P,ceGN,8qrx,67P9,3R7F,fhL3,aITp,6UTN,4CBh",
                    "534f": "ik7H,ikwN,pbQj,3QEp,kD5X,kDNN,67Yx,4C61,aIeH,fhm9,pcpP,dLXN,9aTx,6Uih,4BCN,fi1P,aJdh",
                    "5faa": "jRQP,pbWF,c+nP,j5lN,g1Uj,3QEp,67dz,9aH1,ce29,nGt9,orZV,jStr,jT31,m9ij,g2x1,3R7z,g2nF,g2PN,3RzN,c/3z,c/vN,9YbH,9XLF,67Cz,682N",
                    "564e": "9X6X,m8n1,m8CF,bt0F,bsN1,mVxP,mWn1,pcpP,jSCV,jSnb,jSYN,ewtX,hzO1,hAwV,excV,fhpb,fhXF,c+Wb,c/sF,9Y8F,9XCh,c+Wh,8p/j,5mNF,5m+3,8qrx,5mrH,5nn9",
                    "8fce": "mVf3,jS7F,g1EH,g1Xx,7EQx,5m91,7EQr,4BPh,4Cy9,nGIH,m8P9,9aK9,btsN,67P3,m9c9,m9uV,aJ3V,9bgx",
                    "539f": "66WP,bsTh,g1Up,nGap,nHc1,nGIH,jStx,jSdP,jSVF,ceDF,cdXV,jSdV,g24P,g2MF,67ar,9Xz9,cehH,5mQN,3R1p,9Y2j,68c9",
                    "7a84": "pcab,m92N,ikh3,m8q9,m9y1,ilp1,hzyj,kD99,kDrP,hAqF,bsTb,ewu1,ikMp,fhm3,fi1V,fhsj,3R1p,btjj,btRN,7Faj,7FLV",
                    "6c41": "oqV3,lnQN,ikaP,fh6x,4BjX,bt3N,gOVP,gPRh,pcsX,3Rh1",
                    "7bc6": "jRTX,or5F,m8wj,m8Yx,m8zr,jSdV,jStr,orH9,m95P,m9B9,m98X,jSPp,jSk3,g1+F,g2Dh,ikCX,ilcx,ewT1,ew1P,exj9,ewJz,bt6V,9Xdh,6TVb,8pOV,btmx,9aZH,6Uih,3Qy9,ce8j,aIAF,9aZN,67FN,4BYF,3Q+h,9XOH,c/vN,aIN3,7Fzp,6UQF,5nn9",
                    9881: "5m2H,7EH9,aI5p,g1Xx,g1O3,g281,bta1,5moF,fgPH,hzp1,nGap,or8H,j5s1,g2hp,nGwb,nHf9,orKb,j5R1,9aWz,j5HF,j6aV,9bpV,g2Db,btFh,6UxV,3Q+h,7Fzj,4Cy9",
                    "53d8": "pcdj,mVTN,loIX,lny1,ew1P,j5iF,ln+3,dLI9,logP,dL+V,j5Xb,exg1,dLsr,dMbp,9XV1,7FgF,5my1,3Qy9,dLyH,bta1,7FgF,5n4p,3RG1",
                    "8e6d": "4BdH,7F49,c+qX,5m91,g1Xr,67ax,cdOr,ce29,g1KX,m8n1,m8IV,g24V,g1L1,pcgr,m95V,lotj,pcOV,lo1b,loM9,exj9,ewAh,lo1h,loqb,ewZh,j5Hz,gPm1,gPvj,j67N,3R1j,ce8p,ceN1,3RG1,9aQj,9bt1,5mHj,5nk1",
                    5145: "pcab,m92N,lnuP,loM9,lo7r,ewep,fhUx,ik/X,c/yV,dLLb,9Xz9,6U8V,3Qv1,dLXH,5mQN,4C61,4CoN,7FP1",
                    "7fe0": "oqRX,orlh,ikJh,mVib,kC/N,hzoX,kD61,oruz,orWN,hAtN,mVTH,kDBh,ikVH,kDHx,hzXj,fhBN,fgVX,fi51,ewtX,9aoh,cdXP,9XFp,ewZb,9XLF,cer3,9YbN,7EAP,7FVh,9XIr,3R4x",
                    5178: "3QrP,9aK9,9b0P,4Cv1,aJdb,aHRN,aI5j,lnHp,lozF,aIZF,pc73,aIo9,pcpP,aIGV,g1Uj,g2MF",
                    6735: "g1KX,hzBx,jSdV,orbV,orH9,il39,gPsh,hAA1,c+nP,c/F9,gP9r,3R4x,6TLP,8pFx,c/0x,aIGV,8qrx,6V19",
                    8702: "bsMX,kCJ1,kD61,dLF1,dLg1,or2r,8pFx,66TH,9aH1,bt6P,7F7h,pcpP,jSnh,mVTH,mWjV,j5Xh,fhph,kDoH,hAnx,g30h,ewDj,exg1,btUP,btmx,8p/j,8qH9,gPsb,3Rnh",
                    9550: "ikaP,pbTx,lnEb,lnX1,hzoX,hzKV,c+nP,c+Q1,hzyj,3QEp,8pS1,pcmH,mW4h,m8P3,m9B9,j5Er,j67N,g2PN,g2kx,j5Ex,3Q+b,dLLh,dMr1,5nk1,3RwF,aIDH,aIWx,7FCx,7FjN,aIDN",
                    "901b": "mVbX,j5iF,fgPH,fh3p,677p,4BgV,677j,3Q+h,3RJ9,gOSH,mVQF,aIeH,fhsp,mVuH,j5yh,8q2x,6Uc1,loaz,loJ1,fi1P,fhBN,7Fgz,7FP1,lotj,7Fzp",
                    "8f70": "m8q3,m9y1,pcgr,iknp,iliN,fgSP,fi89,kDlz,c/3F,cdBX,ce8p,8pOV,3QrV,aI5j,67th,cebr,ceJV,7Fwh,3R1p,btsH,7Ft9,67Yx,3RG1",
                    "8bb3": "nG43,jS7F,hziH,hzBx,4Btp,9aH1,lnTP,loM9,hzR3,hAwV,c+JH,c/C1,6UWV,5n4p,pcsX,3Rh1",
                    "95f4": "3Qy3,lnB9,pbQj,m8IV,nGCr,nHc1,5nk1,3RwF,ikCX,il39,9b79,9aH1,ikD1,dLEX,dM59",
                    6212: "kCFP,kDX9,dLfX,dLXN,ikqr,9Xjx,4Bk1,ikJb,6Uih,orNj,m9rN,pcpV,fhI1,7Fzp,3RCV,6V4h,gPHP,aITp,3R4x",
                    "53e5": "fgVX,lnQN,pc41,lnQH,loM9,5nk1,3Rqp,8pOP,g24V,g2A9,9XY9,9XsV",
                    5938: "m8jP,m9B9,pcgr,m8P9,j5lN,g1HV,m92H,j5Xh,hAqF,g2Z9,hzHH,hAkp,dLfX,dMr1,dLEX,9XmF,9Y5x,5n7x,3R1p",
                    "51b7": "mV8P,jS1p,7ExH,c+Dx,g1Xr,j5v9,orxN,kDBh,ilfF,gPO9,ikSz,fhL9,c+MP,c/vN,67FN,8pYb,3Rnh",
                    "9f84": "mVib,hzvh,pbZH,hzHN,lnQH,lo4p,hziH,hzXp,g21H,cdRF,8pzh,cdRz,9aH1,fgZ3,6719,67th,ewAb,3Q+h,g2kr,jSG1,orKh,jSVF,g2Z9,hAe3,ex3x,ceez,ceJV,67Sh,8qbP,3Rtx",
                    "843d": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,jRX3,hzKV,fgVX,c+GF,4Bn3,bt3N,fhiX,kDlF,ikMj,ilfF,ewW9,cebx,aIl1,gP9r,c/jh,btY1,3Q+b,9XCh,9Y8F,3RwF,5mEb,5naF",
                    "5a29": "jRNH,jSh1,dLBV,9XmF,4BgV,pbWz,cdF9,7F49,jSnb,orAV,m8/z,m9oF,il39,ikMp,c+Zp,c/yV,illV,il39,btz1,7FgF,3QU1,btFb,5n1h,4Cfp,4Cv1,6V4h",
                    "533f": "5njX,5m91,nG11,nHc1,jS4r,jSYN,m8P3,hzR9,m9c3,hAe9,g1Uj,g2W1,hA1z,dLI9,aI8x,8pRX,c+Q1,c/px,8qrx,8pS1",
                    "914d": "nFZP,nGCx,nGgz,hzEF,c+xh,nGpX,ewu1,dLI9,dLOp,3Qy3,jRX9,jSqp,67wp,6719,9Xa3,9XFp,nGIH,nH8V,dMnV,g2SP,g2tV,67IV,5mX1,5ngV,7FS9",
                    5176: "lnxX,loJ1,or8H,9XpN,orKb,9X/h,hzHH,hAhh,dM8b,dLyN,9X3P,9Yl9,3QuX,8pV9,8qbP,4CrV",
                    "537f": "nGmP,mVf9,bsQ9,c+JN,kC/H,cdUN,9axF,677p,4Bk1,dLI3,dM21,nGP1,nGt9,5mB9,9b0V,ikG3,il01,btsH,67P9,3Rqj,nGYp,nHc1,8qE1,6UQF",
                    8815: "cdBX,kCJ1,kD2V,dLBV,dLg1,pbQj,8pCp,7EAP,9aDV,bt3H,7F49,nGwb,nHc1,hzR3,ln+9,loJ1,hAA1,nGS3,g2A9,j5Bj,j5NV,gPiP,gP6p,j5+j,j67N,gPEH,gPvp,exj3,ewx9,ewW3,btvV,3Q+b,btgh,btY1,5nk1,3RwF,btsH,5mQN,btIj,5n4p",
                    "5c04": "mVrz,pc0V,cdIb,mVih,mVNx,5mKx,3QU1,j59b,j5Ex,g1Rb,g2kx,cdvH,cebx,5m8X,7EQx,ce5h,j5KH,j6kh,pcLH,5ndN,3Rk9,fhEP,btIp",
                    "8f93": "m8jP,m8Sh,pbWz,dLcV,fhm9,8ppP,aIo9,j5iz,3QKF,hzNX,kDix,pct1,lowx,ils9,j5Er,j64F,3Q+b,g2eh,g2x1,5mX1,3R7F,ce5b,ceo1,9aNb,9b41,fhRj,7Fzp,gPHP,5ngV,3Rtx",
                    "867d": "nGdr,nH2F,j64F,j5fx,nGdx,9arj,g1Up,g2PN,btRN,bsWp,j5Er,67zx,4BjX,6UTN,9bgr,4Cy9",
                    "557c": "9X6X,m8n1,m8IV,cdXV,cdC1,pcpP,m9fh,m8P3,m9y1,jStr,hA4N,gPsb,jSVF,dLI3,gP09,gPL1,dMr1,4BPb,ce5h,ceJV,6UWV,5n7x,g2A3,3Rk9",
                    "5f2f": "pc73,mVTN,m8jP,m9B9,g1HP,jS7F,m8P3,fhm9,m95P,fhEV,jSPj,g2Z9,fh3j,fhUx,ceAx,cdOx,9arp,9bmN,5naF,4CoN,3RaN",
                    "6b66": "m8q3,m8Yx,hziH,hAD9,ewej,5mip,4BjX,6UuN,hzNX,67n1,cd+X,ceeF,mW7j,j67N,pcpP,c/d1,8qlh,67Yx,3RCV,6V4h",
                    "7bb1": "j4/P,pbWF,mVlj,mVNx,mVuH,jSk9,j5Er,pcw9,mVWP,mWth,mW4b,jSVF,fgVX,fhph,j5iz,3QKF,7EAP,dLvF,aIo9,3R4r,hz+x,hAwV,3RCV,dLRr,dMnV,9XIr,9YeV,67zr,685V",
                    8896: "pbQj,m8IV,jRQP,jSnh,gOPF,cdyV,fh6r,3QHx,ewhr,btd9,dLyH,g2b9,3R1j,jSqp,jT31,3RG1,dLOj,dMr1,67wj,6891,pczb,67Sh",
                    5501: "9ahX,m8n1,m8FN,bt3N,bsN1,pcmH,m9fh,lnTP,loM9,hAtH,hzUh,dLLb,dMkN,3Q+b,aIrh,aJ0N,3RzN,5mEb,5ndN",
                    "5fc6": "ev+H,jRX9,pbTr,3QHx,kC/H,gP09,mVE3,mWjV,gPm1,cebx,7F49,67q9,5mEh,4BSp,4CrV,5nk1,68c9,8qKh",
                    6109: "ev+H,jRX9,pbQj,3QEp,lnNz,ikD1,gOVP,orAV,kDEp,hAD9,ikMj,ilcx,3QX3,fhm9,fhBN,5mQN,3R4x,ce23,cehN,8pV3,8q8N,fhOb,7Fwh,g2PH,5ndN,3Rqp",
                    "51ff": "nGaj,kD2V,pc73,j5v9,pcpP,j5NV,loqb,orWN,j4YH,j6kh,hzKP,fhph,dLRr,hAe9,dLvz,dMbp,9Xmz,9Y2p,dLRr,67zx,g1Rb,4Bqh,5ndN,g2PH,3RzN",
                    "73cd": "mV5H,mVB1,mVlj,8pCp,ikaP,ikzV,6TLP,9Xw1,hzNX,kDlF,pct1,kDHx,hAD9,c+Zj,hAhh,8q2r,ex6F,3QX3,5mTV,6UKp,aJ71",
                    5492: "nG7b,nGwh,ikJh,ikkh,nG7h,nGLP,nH8V,illV,ikYV,nGLV,4BjX,67ax,7EZV,9aH1,fhj1,fhL9,5m+9,4Cch,4CrV,5nk1,7FS9",
                    5352: "pcab,m92N,lnxX,loJ1,j5oP,c+xh,gOSH,dLOp,j5Xb,c/3F,gPp3,c/yV,9X0H,9Yoh,cebr,3R4x",
                    5427: "8psX,mVc1,mVxV,bt6V,bsN1,8qH3,5ndN,5mNF,67wp,mVKp,mWjV,excV,ewDp,ewW3,mW19",
                    9119: "oqYb,kCPh,kDlF,oruF,oqYh,kD5X,fhj1,ik7H,il01,4Bn3,fgZ9,fhyF,6UrF,6TS9,9axz,c+GF,c+Wh,9aNh,9axF,3Rnb,nGVh,nHf9,gPBF,exg1,bt/9,9bw9,7FFF",
                    "91c7": "mVf3,orWN,lnHj,hzKV,lo4j,ikVN,gPlX,loCN,ew1P,exj9,hz+r,3R4x,66WP,8pFx,btd9,ewGx,btvV,9bdp,68c9",
                    6210: "3QrP,6TS9,9Xdh,kCPh,kDX9,g1Rb,g2hp,9aQp,6U8V,orQr,m9uV,pcpP,hA7V,9X/h,3RCV,6V4h,3R1j,7Ft9,btLx,gPHV",
                    "74f7": "oqV3,m8FN,gOwP,j5lN,jSgX,pcjF,mVKj,mWjV,jSVF,mVWP,ikSF,fhfV,kDrP,il6h,g2SV,dLcP,dMu9,dLyH,3QEp,67wp,bt3H,btFh,5n1h,4Cfp,4CoN,6U+1,9aK3,6UuN",
                    "77aa": "4BjX,mVc1,mVuN,7EWN,7EE1,c+qX,c+JN,hzHH,hzp1,nGpX,nGLV,jSwF,gP3h,fhfV,kD93,j5Bp,nGS3,jSPp,hAqF,fi89,lotj,nH5N,ilfz,kDU1,gP9r,gPBF,dLOj,dMhF,9Y8F,9XFp,dLOp,8q2r,4B/N,4Ccb,8quF,4BIX,4Cy9",
                    "6e21": "nG43,lnNF,ikdX,g1Xx,5m5P,c+Dx,4Btj,9XsV,m8IV,m9B9,pcmH,m9c9,hzNX,hAD9,kDlz,ewJF,ex3x,kDHx,btjj,btOF,8qop,3QX9,btpz,7Fq1,5n4p,3RG1",
                    "98de": "mVbX,mW19,g2tV,aIK1,6UKp,5ngV,8qH9,kDNH,g2tV,ceJV",
                    "5e72": "nG7b,nH5N,g1KX,g2W1,nGCr,4BVx",
                    "80a1": "4BdH,9Xa9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,dLj3,dLBV,g2b3,ikPx,jSwF,nGFF,nG/x,hAnx,gPBF,hAD9,ewAb,ex9N,9Y2p,4BPh,dLRr,8qf1,6UKp,4Cy9",
                    8377: "m8jP,m9B9,pc3X,j5s1,pcw3,j5U9,cdyP,j5iF,fh3j,3QEp,gOSH,gPO9,gPBF,5naF,3Rh1,7F0X,dLF1,dM21,9b41,9aH1",
                    "7c27": "jRQP,pbWF,mVlj,mVNx,mVuH,kD61,kDir,pcw9,mVWP,mWq9,mW4b,kDHx,ikkb,iliN,fgPH,fibh,jSgX,fhj1,jSFX,fhI1,c+Dr,7EQx,7FFF,c/sF,c+Dx,aI8r,aIZF,fhvr,7Fdx,3QuX,6Uf9,6UxP,3RCV",
                    "5fcc": "nG43,nH2F,j64F,j5cp,ewep,dLsx,dMhF,hAwV,5m5P,bsTh,bt3H,5mrN,4BFV,4C99,7Fzp,ce8j,9b0V,btLr,68c9",
                    "7f34": "or2r,gOtN,gOMx,kD2P,bsJV,cdRF,66WP,8pOV,orrr,m8Sh,m8LX,g281,g2tV,m95V,m8M1,j5rX,j5NV,fhpb,c/3F,c+MP,c/d1,c+Wb,6Uc1,3QHx,9XCb,9XRV,5mNF,3R1p,fhHX,j5Xh,nG/x,j5Xb,j6kh,j6aP,btOF,67Sh,3RaN,fhOb,7FFF,3RJ9",
                    "65e7": "oq/j,4Btp,5mB3,nGt9,nH8V,5ngV,g2b3,g2SV,7F43,7FLV",
                    "53ef": "mV5H,mWth,9Xgj,iknp,ikSF,btpF,bsWp,mW7j,67Vp,3RaN",
                    "90ce": "pbTr,mVxV,dLj3,dLOp,m8Vp,m8q9,5mc9,9Xz9,bt6P,7Fdx,hzs3,hzXp,3RgX,nGP1,nHc1,gPvp,aJa9,8qH9,6UNx",
                    "8fbd": "mVf3,kCYF,g1HP,g1Xx,7EQx,5m91,7EQr,4BSp,4Cy9,m8LX,m9uV,hAe9,9b79,7FgF",
                    "5f8b": "j4YH,pbWF,c+kH,j5iF,gOJj,3QEp,mVAX,mWgN,g2PN,g281,j5oP,j6kh,cdXP,ceJV,8pIz,8qKh,pcpP,3RdV",
                    8499: "mV8P,mWq9,pc73,kD99,pcw3,kDy9,hzs3,kCM9,kDU1,hAA1,hzBr,hAqF,fh0b,fi1V,bsTb,c+MV,fhsp,8pw3,ce8p,5mc3,7F11,9XLF,dLLb,btpF,aIDN,67FN,4BYF,3QX9,aIDH,dMhF,btyX,7FCx,4Cy9",
                    "7eb3": "pbWz,hzlV,hzHN,lnWX,bsN1,ce29,66ZX,7F49,3R1j,kDfp,kDX9,5nn9,3RwF,pczb,g2Dh,dM59,btsN,g2Db,btUV",
                    "6d3e": "nG43,kC/N,ikaP,fh6x,5m5P,cdOx,5mlr,9Xw1,m8P9,nH8V,j6aP,ikSF,4BYF,6UHh,il33,btIp,8quF,4Cy9,c/mj,fi51",
                    "7c95": "mV8P,jR+h,hzlP,hzUh,jSdP,mVHh,pbTr,3QHx,9aeP,hzBx,g1Xr,ce29,kDrP,orKh,3R4r,kDix,kDU1,3RG1,dLRr,dMr1,67zr,6891",
                    "5de7": "mV8P,mVE9,mVor,9aux,8ppP,9XCh,mVHb,mWq9,mVWP,fhyF,fi1V,682N,4Cix,3RdV",
                    "58ec": "m8tb,m8Yx,mWgN,m8Yr,5mKx,ew1P,exj9,5m5P,5nn9",
                    "7f2e": "or2r,ikaV,iktF,kD2P,bsGN,cdRF,66TH,8pOV,pcdj,m92N,pcFr,m9c9,m8LX,m9uV,j5v3,j67N,g24P,g2SV,m98X,ceo1,fhXz,ceuh,fhpb,ceeF,cdXP,ceN1,3QX3,9aK9,9bjF,3RwF,5naz,5mB9",
                    "566c": "8psX,lny1,lnNF,9XmF,9X71,j5oP,orop,m8P3,m991,m8Sb,j5HF,j5QX,orNp,m9fb,m9B9,m9ij,j67N,gOVP,gPL1,gPiP,4C2V,fhsj,8pOV,ce5b,9aWF,ex6z,8qi9,ceDz,9bt1,4BCH,4Cy9",
                    "677e": "jRQP,jSk9,pbTr,3QHx,aHUP,jS4x,hzBr,dLI9,fhpb,orAV,orNj,jSVF,gPHV,fi89,g2A3,4BPh,682N,9Y5r,4Cv1",
                    "8eba": "pbTr,mVih,cdBX,mVc1,mVB1,5my1,3QKF,cdvH,cd/1,j52X,j5s1,g1KX,g281,66WP,8pzh,cdUN,mVHb,ikVN,pcw3,gPp9,ilcr,mWn1,3R1j,gP6p,gPL1,5nk1,3RwF,c/9P,c/sF,7FFF,7FmV,c/9V",
                    8715: "9ahX,jRU1,jSh1,c+Q1,c+r1,pbTr,7EQx,66TH,8pS1,aIhP,6Uih,oroj,kDrV,jSMb,orWN,jSqj,jSYN,c/vN,c+Zp,jSqp,c/9P,6UrF,5mHp,3QU1,c/mj,5n4p,4Cix,4Cv1,6V4h",
                    "7d0a": "pcdj,m92N,m8mX,m9y1,loqb,ikVN,g24V,ew1V,kD2P,hA1F,g2Dh,fi89,g2hj,c+GF,c/3F,ewZb,9arp,aIWx,ceub,9bmN,4BjX,5mlx,7F11,9XLz,5mNF,3QX9,7Fwb,4Cy9",
                    "4ed9": "fgPH,jS1p,pbZN,jS1j,3QEp,jSk3,5mB9,6UWV,jS/P,4CrV,pcsX,67M1",
                    7329: "nFZP,kCSp,hzEF,dLyN,9aAN,67dF,5mlx,3Qv1,hzlP,orbV,aHUP,fh9F,nGwb,nH8V,gPHV,gP3h,nGwh,kDcb,kDQV,aIo3,fhvx,c+Zp,c/C1,9aQj,9bpV,5mxX,5nn9,gPp3,5m+9",
                    7109: "oqV3,orZV,orrr,hz+x,lo7r,lozF,hzlP,hAD9,ewhr,ex6F,m8Cz,bsWp,btUV,682N,4C99,66ZX,9arp,8pOP,5my1,9aQj,6UrF,9XUX,7Fwh",
                    7591: "oqYb,ikkh,hzyp,hzR9,j5yh,kCPb,nGwh,c+u3,g1Up,ewbb,ewAh,aHUP,aIrh,ewnH,8pIF,3Qv1,9aAH,6Uih,nGFz,nHc1,j5Xh,kDuX,gPyx,gP9r,gPO9,dMnV,gPsb,4Cch,btFb,btY1,c/6H,8q5F,3QX9,8q5z,4Cch,4Cy9",
                    7531: "3Qy3,j569,j67N,3RzN,c+xb,c/vN,674b,682N,orrr,67zx",
                    9668: "3Qy3,nG49,nGq1,hzBx,cd/1,bt6V,9aux,nGCr,nH5N,jSYN,jStx,nGCx,9aQj,gP6p,gPHV,9bpV,ewZb,9b41,67zx,4BJ1,8qoj,4Cy9",
                    "4e08": "jRTX,jT69,orDX,ewPV,aIAF,7F7h,3Qy9,hzEz,btjp,7Fq1,3RG1",
                    "7a1a": "mV8P,nGq1,ik7H,ikG9,mVor,3QHx,9aeP,hzBx,g1Xr,ce29,fhm3,orxN,jStr,3R4x,pczb,m9oF,jStr,jT69,g2kr,g2W1,btmr,btY1,67zr,68c9,jSPj,67Vp",
                    "54a8": "oqV3,lnNF,ew4X,ikzV,j5rX,oruF,m8Vj,m9y1,j64F,m98X,j5R1,gPfN,fhvx,dLBV,j5QX,gPvp,fhXF,dMu9,3QKz,cdRF,ceAx,3Rtx,67dz,67Yx",
                    "595a": "orZP,nG49,m8tb,j5lN,m8Sb,j5KN,j5Xb,m9rN,j5yb,g1Up,g2qN,hAhb,cdUN,cdIb,c/px,ewZb,btRN,9bw3,9aeV,3QrP,5muV,8p/p,btmx,8q5z,5m+9,3RJ9",
                    5471: "9X3P,m8jV,m8CF,bt0F,bsJV,5mij,9XpN,fhfV,mVxV,orZV,mW4b,g2Gp,c/px,68c9,5naz,9X/h,6UNr,5mEh,9XIx,m8/F",
                    "95f5": "pbQj,lnTV,kCPb,3QBh,mVHb,mWjV,5ngV,3Rtx,kDcb,ikVN,hzEz,hAnx,hAaX,c/6N,9XFp,7ETF,g27X,9XON,8qi9,7FCx",
                    "665f": "3QrP,6719,8pzh,fh0h,fi89,hAwP,hzyp,pbQp,pcOV,hAwV,loFP,lnHp,bsTb,btjp,6Ulp,4BFV,3R4r,67M1,9Y5x,c/yV,fi1P,hAnx,hA7P,dL+V,9XY9,3RCV,68fh",
                    7231: "pcIz,mVlp,m8zr,jSdV,m8Vj,jSzN,mWdz,j5U9,fi4X,j6e1,j569,fgZ9,ewbb,excV,hz+r,66+1,bt9X,btLx,3QKF,9Xz3,4Cy9",
                    7891: "mV8P,mVE9,mVor,ikkh,dL9N,6713,gOD9,gOVV,8pOV,8pw9,pcw3,mVWV,mVKp,ewDp,excV,mWjV,mVWV,j5Bj,j6aV,mW4b,ewT1,9aTx,9aK3,9bzh,ex0j,3Rqp",
                    "4f2f": "fgPH,pbZN,lnHj,3QEp,pcsX,kDlF,3QX3,kD99,kDQV,3RCV,dLI3,dMnV,67q3,685V",
                    "949e": "hziH,pbTx,lnEh,lo1h,gOzX,gOZ1,c+kH,c+T9,gOJj,4Btp,9Xz9,kDoH,dLI9,pcw3,9XY9,3QTX,4BYF,67P9,9bgx,c/vN,kDHr,fibh",
                    "4e32": "m8wj,m9oF,gPBF,gOJp,m8wp,6TVb,dLmh,dMkN,6UTN,8qxH,8pzh,pcgr,3R4x",
                    "8bde": "oqV3,kCYF,hziH,hzyp,677p,9XsV,nGjH,nGCx,gOVV,gP9x,9aNh,3QKF,dLBP,7Fap,5mX1,5nn9,m92H,nHc1,mW7j,9bdp,gPvj,gPL1,j5NP,9b0V,9bt1",
                    "61c2": "ev+H,j531,pbQj,3QEp,jS7z,g281,mVxP,mWn1,pcgr,kDix,pcCj,kDEp,jSgX,kDNN,hzKP,hAD9,jSCP,5mTV,fhm3,9Xz9,9YbN,fh+N,fhm9,c+T3,c/vN,7F0X,7FLV,5mrH,5nqh",
                    "6a0a": "kCCH,kD61,or2r,cdOx,fgPH,kCVx,j5fr,gOVV,nGt3,j5NV,orAP,ikD1,hzUb,c/9V,hA4H,c+MV,kDuX,kDX9,orQr,c/px,fhEP,kDHx,jSSr,g2W1,aHUP,aJa9,c/0r,8pYh,5moF,3QrV,aIxr,6UE9,5naF,4Cy9",
                    "5e9c": "4BdH,9Xdh,m8th,m9B9,pcdj,mVTN,dLsr,jSqp,gOYX,3QU1,fhsj,fi89,cebr,9XV1,jSSr,67Yx,3Rk9",
                    "5de9": "m8gH,m8P9,m8wj,aI5p,8pmH,ce29,4Bwr,7F49,aIup,nGzp,nG/x,67Yx,5naF,5nk1,8qKh,gPcz,dM59",
                    "5bd2": "pc73,mVQF,j563,mVf9,mWjV,j6aV,jS1j,jSVF,gPBz,gOJp,dLcP,dMu9,m8LX,dLF1,m98X,dM21,dLI3,7EAV,dLXH,7FS9,btd3,8qf1,7EWH,3Rk9",
                    5212: "ikaP,j5KN,nGpX,lo7x,or2r,dLvF,8pS1,4BVx,7FmV,4BgP,8pIF,g2kx,m9c3,9XY9,pcOP,685V,3Rqp",
                    "7c4d": "jRQP,pbWF,mVlj,mVNx,mVrz,jSh1,jStr,pcw9,mVWP,mWq9,mW4b,kDHx,hzs3,hzUh,fgZ3,fhph,cdBX,ce8p,jS7z,3QKF,66WP,bt0F,aIbz,7F7h,hz+r,hAA1,dLOj,dMu9,jSCP,dL+V,jSVz,dMhF,3R7z,btpF,btUV,3RCV,8q5z,8qAV,5mNz,5ngV",
                    7586: "nG0X,nGq1,j5s1,j569,fgZ9,fhj1,67jV,3QBh,bsJP,bt0F,dLmb,8pzh,7ExH,8pIF,mVHb,mWq9,lo4j,loFV,g2SV,g2hp,lo4p,j5Bj,j6aV,lon3,g2A9,ewx3,exj9,ce8j,ceJV,6UWV,6Ulp,ce8p,9XFj,9YeV,cer3,6UE9,4BIX,4Cy9",
                    "4e95": "jRX3,jS/V,c+nP,c/F9,pc3X,bta1,8pOV,3Qy9,pcw3,3Rk9",
                    6168: "ev+H,jRX9,pbQj,3QEp,kCVr,hzHN,fhiX,fhyF,nGFF,nGq1,6Uc1,aIAF,cebr,9b0V,j5rX,j5HF,nGLP,nHc1,kDy3,g2tV,g2Z9,nG/r,ex0p,9b79,4BYF,c/pr,67Yx,5naF,5nk1,7FVh",
                    5587: "9X6X,m8n1,m8zx,bsZx,bsN1,m8FH,m9fh,pcgr,3R4x,ikCX,il01,c/d1,c+Q1,ikD1,5mfb,8pOV,c/0x,cebr,7Ft9,m9lr,aIWx,pcOP,5ngV,3Rqp",
                    "5ec9": "5m5P,cdIh,mVih,mWn1,pcdj,mVTN,ln+3,j5Ex,j5NP,loqh,j5fr,j67N,g1+z,g2MF,aIZF,aIbF,dLpj,dMu9,j5yb,3Q+h,j5QX,3Rh1,4Bqb,aIrh,aIJX,6UQF,5nn9",
                    "5e90": "pcgr,mV+1,m9B3,m8wp,ewep,9Xdh,4BdN,kDlz,il39,9YbH,gPEN,gP09,aIo9,7F11,3QHx,btd3,btRN",
                    "536f": "nGCr,mVih,aI2h,c+Wh,kDcb,ce5h,9Xz9,6U5N,4Bqh,3RdP,mVWV,mWjV,9bpV,7Fzp",
                    "6f20": "oqV3,m8CF,j4/P,g1Xx,5m5P,c+GF,mVAX,mWq9,pcjz,jSwF,pcCj,jSPp,jSk3,jSYN,c/vN,c+T9,jSk9,gP03,gPEN,9XpH,9Yl9,c/cX,9b0V,67zx,3QQV,9b3X,67Yx,3RJ9",
                    5973: "ikaP,ils9,orrr,c+GF,9XLF,7Fwh,4CrV,il6b,cekV,8p/p,67jV,3Qv1",
                    "98d8": "nFWH,nGCx,nGdr,gOMx,nGmP,gOVV,lnxX,lo1h,gP3h,gOA1,lny1,ew4X,ewAh,cdvH,cebx,5m2H,9aoh,cdRz,5moF,3QBh,9XvX,6Uih,3QX3,67zx,9aWF,nGFF,nH8V,9YbN,685V,3RJ9,68fh,jSVz,8q8N,ikYP,9Y8F",
                    "94b1": "hziH,pbTx,lnEb,ln+9,hzoX,hzO1,c+kH,c+T9,hzBr,3QHx,9aK9,orNj,m9rN,ikJb,jS/V,c+Wb,g2W1,4BSj,6UB1,9bgx,ceJV,pcpP,dM21,8qlh,3RCV,6V19",
                    "72ac": "hzoX,hAA1,pcgr,gP9x,ce5h,8pOV,3QrV,gP9r,9XY9,4Cy9,mW13,jSVF",
                    "50e7": "fgSP,kCVx,orbV,kCVr,3QHx,pcdj,m95V,loqb,pcLN,lnWX,loJ1,exg1,ewu1,lnX1,j5Bj,gPfN,lojX,ewT1,gPsb,j64F,3Q+b,ce5h,ceJV,3RCV,9aNb,9bpV,5ngP,5mEh",
                    5341: "gOwP,gPO9,pcgr,3R4x",
                    "6c34": "jRQP,jSk9,dLyN,7EAV,pcgr,5mKx,3QU1,lo7r,dM59,9YbN,7FS9,gPiP,loFV",
                    "574d": "ikaP,ikD1,oq/j,9arp,7ExH,9Xw1,3QKz,6Uc1,aIrh,nGwh,nH5N,5ndN,3Rnh,kDoH,gPsh,ewqP,exmh",
                    "5f64": "4BgP,8pzh,nG7h,nGzp,6Ulp,5muV,jS7z,gOZ1,ew1P,ewMN,ikVH,lotp,orZV,cekP,ex0p,ilp1,3R4r,67Sh,8quF,ceQ9",
                    "840e": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,jS4r,jSSx,hzs3,hAA1,jStr,c/0x,c+xb,ewqV,jStx,ewW9,c/yV,aHUP,aJa9,c/0r,8pLN,6UrF,3RCV,3QBb,5mEh,7FmV,9X/h",
                    "88ad": "lnxX,loJ1,dLfX,g1+F,ikD1,lo1h,pcdp,pcsX,mW7p,g2b3,jSPp,jSzH,fhBN,ewPV,ex9N,hAA1,ewDj,cehN,bsJP,bt/9,66ZX,btjp,9XvX,3QU1,67FN,9XOH,7Ft9,67Yx,4Cv1,7Ft3,9Y8F",
                    "631f": "jRQP,jSh1,pbTr,5mlx,3Qv1,bsJP,fhj1,ln+3,loM9,ikJb,ewJF,ex0j,illV,c+MP,c/F9,orH3,c/d1,7FgF,3QQV,cer3,6UNx,3RJ9",
                    "65ec": "gOzX,orf1,lnQH,loJ1,6891,5ngV,3Rnh,5moz,hzEF,hAb1,7Fq1,7ETF,c+Gz,c/d1",
                    8036: "nG0X,nGIN,nGaj,9arp,nGzj,4BSp,j5cj,j5Bp,ewej,ewDp,8ppP,aIDN,4C93,nGS9,nHf9,hAkp,ceQ9,aJa9,9bpV,8qrx",
                    "8d62": "pcdj,mVTN,mV8P,mWn1,mVor,kCVx,kDKF,ikqr,ilcx,g2Jx,g1Xx,ikqx,3QrP,6TS9,dLj9,dLyN,5mrN,3QEp,bsQ3,bt3N,8pw3,8pLN,8pV3,dLI9,dLXN,8q8N,btmr,7Fap,4BJ1,7Fdr,67FN,3RdP,7Ft9,dM59,dMkN,4CoN,4Cy9,6V4h,9X/b,7FFF",
                    "63f4": "jRQP,jSdV,pbTr,5mlx,3Qv1,bsJP,fhfV,mVE3,nHc1,kDcb,ikSF,logP,j5U9,hAkj,loCN,hzR3,hAA1,dLEX,dMu9,hA7P,aIxx,8pYh,5mrN,aIxr,aIZF,6UHh,3R1p,9aZH,67Vp,3RJ9",
                    "503a": "fgPH,pbZN,kCSj,3QEp,mVAX,mWq9,jSk3,jS/V,gOSH,gPRh,pcsX,gPm1,7F43,dLI9,dMkN,7FIN,3QNH,4BPh,5mKx,7FmV,btz1,7Fwb,3RG1",
                    "4e4b": "ori3,kDoN,ikh3,ilfF,8pIF,7EKh,5m91,8pIz,4BYF,4Cy9",
                    6869: "jRNH,jSh1,pbTr,3QHx,bsJP,jS4x,hzBr,dLF1,pcpP,m9ip,4BFP,9aNh,lo1h,loM9,ewJz,exg1,5mHj,5nqh,j5Xb,5n1h",
                    "61cb": "4BgP,9Xjx,aIhP,4BFV,3QU1,3Rnh,6UNx,7FmP,aIup,9Y2j,68c9,kD+b,kDy9,kD2P,kCCN,fgPH,kCSp,oq/j,cdLp,j5cj,g24V,fhL3,kDKF,orTz,c/sF,jSVz,g2Z9,mVAX,mV+1,kDlF,lo4j,jSzN,j5Hz,c/3F,ce8p,ewtX,g2eh,j5HF,j5oP,j5U9,gPiV",
                    "752c": "3QBb,j59h,j67N,5ndN,3Rnh,3R4r,j5Ex,m8M1,jSqj,orTF,oqYh,ewbb,ex9N,9YbH,9Xdh",
                    "677f": "3QHr,pbTx,jRQP,jSk9,aHRH,j5fx,hzBr,dLI9,4BCH,8pYh,c/0x,mVNx,os11,hz+r,hAwV,c/vN,9bdp,3R1p,fhEP,btC9,7FCx,4Cy9",
                    "535e": "pc73,lodN,jRQP,jT69,jSqj,3R1p,ewMH,ceuh,9bmN",
                    "63d2": "pbQj,5mip,3QrV,cdvH,g24V,kD2P,kCCN,mVE3,pcOV,j5rX,j6kh,nGOX,5mX1,g2qH,fhph,3Q+h,aIrb,aIDN,fhOb,fi1V,3RCV,aIQb,aJ3V,5mEb,5ngV",
                    "51b2": "m8mX,j5iF,8ppP,dLyN,9Xz3,kD99,kDU1,9Yi1,btd3,btY1,pcw3,3Rk9",
                    6751: "jRNH,jSk9,pbTr,3QHx,aHRH,j5fx,hzBr,ewu1,j5Bj,j6kh,pcIz,67/F,3Rk9,ewJz,aIN9",
                    "975b": "m8mX,m8Vp,jSnb,jRU1,gOtH,gP9x,pbZH,gOSN,3Qy3,ew89,ewx9,5mB9,3QNN,bsQ3,btd9,8pV3,8pw9,pcsX,m9lx,ikSz,loaF,loJ1,ilp1,gPcz,gPL1,gPvj,5n4p,btIj,btY1,c/6H,6UuN,3R1p,6UuH,4Cch,4CBh",
                    "8dfa": "mVf3,mVB1,hzO1,hzs9,mVf9,hzEz,7ETF,dLvz,dLI9,dLfX,66+1,5m5P,8pS1,fhpb,ikSF,mVQF,mWdF,g2MF,g2Z9,ce23,ceQ9,g2A3,3Rk9,5mxX,cer9,5nn9",
                    "5cf0": "jRQP,7EAV,9aDV,jSdP,6U8V,oq/j,8pCp,jSk3,pcpV,mVQz,mWgN,j5Xh,fhm9,kDoH,il6h,g2Z9,ewAb,excV,btjj,btRN,8pV3,8qH9,gPp3,3Rk9",
                    "7a3f": "mVbX,nGq1,mVor,3QHx,hzlP,hzR9,9abH,hzBx,g1Xr,cd/1,pcmH,m9fh,ln+3,loM9,j5Er,j64F,fhXF,fhvx,j5Ex,3Q+b,c+Wh,c/yV,5ngV,3Rtx,aIAz,aIWx,6UNx,6UrF,aIAF",
                    7470: "m8gH,m8M1,g1HP,g24V,7ExH,9Xw1,m8wj,8pCp,pcsX,m8/F,ce5b,m8Sh,m9rN,dMkN,dLLh,hzUb,hAtN,m98X,dL+V,9aWF,3QNN,cer3,5m+9,4Cch,4CrV,68c9,ceGH,8qop,9bt1,aJ3P,7FVh",
                    "54c4": "8psX,m8n1,m8FN,9XpN,9X71,j5rX,j6e1,oruz,ceeF,orQr,ceAx,cdXP,ceQ9,3QNH,9XLF,9X/b,3RG1",
                    "8bf2": "oqV3,lnQN,hziH,hzBx,4Btp,9aH1,j5rX,pcjF,m8Vj,m9B9,7FS3,7F7h,ikMp,iliN,5ndN,3Rnh,c+MP,c/Ih,gPiP,ewZh,btvP,9bah",
                    "714e": "pbZH,m8Sh,m95P,pcCp,m8jP,m9B9,9Xgj,jS1p,jStx,btmx,9Xw1,gOJj,gP9x,dLpj,dLRx,il33,c/g9,jSYH,btRN,9X/h,3QuX,8pFx,8pRX,3R1p,8q8H,4C99,8qrr,4Cy9",
                    "85c9": "j4/P,pbWF,m8wj,m8Yx,m8Cz,jSh1,jStr,pcw9,m95P,m9B9,m9c3,jSSx,hzoX,hzR9,ewx3,ew89,bsJP,btgh,jS7z,3QKF,5m5P,bt0F,aIbz,7F7h,hzXj,hAA1,j5KH,dLXN,j61r,dMex,dLOj,dMu9,3R7z,btpF,btUV,3RCV,7Fgz,7FLV,5ngP,5mNF",
                    "60e7": "fgSP,kCPh,pbQj,3QEp,kD2P,gP09,9XIr,nGCx,nH5N,9YbN,dMkH,dLRx,gP9r,gPEN,kDNH,kDix,9XpH,9Yoh,3QQP,8q5F,8qoj,3RJ9",
                    "57ae": "j4YH,j5oV,oq/j,9arp,7ExH,aIl1,lnTP,loM9,pcsX,kDoN,hzXp,fhcN,lojX,ilcx,g2Z9,gP6j,gPBF,c+MP,c/F9,c/3z,9XFp,9YbN,5naF,3RdV",
                    5398: "4BdH,9Xa9,dLmh,nG7h,nHf9,kC/H,kDNN,c/vN,c+JN,kC/N,gOSH,gPEN,kDoH,4B/N,9axz,9bpV,4Btj,4CBh",
                    "94c3": "ikaP,or5F,kCPb,kDch,hzoX,hzO1,cdyP,ce29,hzBr,4Bwx,7F49,g2eb,jSzN,nGS9,j64F,g2Z9,hAaX,ex0p,c+Zj,c/C1,67P9,8q5z,3Rtx",
                    "6d1b": "oqYb,lnTV,j4/P,g1Xx,4Bn3,cdOx,hzNX,pcmN,lo7r,loCN,hAhh,ewJF,cdUN,j5Hz,g2x1,dMhF,ceQ9,3Q+b,btgh,btRN,3RzN,5mEb,5ndN",
                    "7f05": "or2r,gOwV,gOPF,jSdV,aHY1,cd/1,66WP,7F11,mVAX,mWq9,mW13,j5NV,3QX3,j5v9,j6e1,3RG1,j5KH,5mQN,j5+j,5n4p,ewMH,ex0p,aITj,aIDN,5mB3,5nk1",
                    "817b": "4BdH,9Xa9,nG49,nGjN,67gN,4Btp,c+u3,c+JN,ikwH,ikh9,lnWX,loM9,m9xX,orWN,j5v3,j5U9,g2b3,g2Dh,8pV3,dLI9,dM59,8qi9,cehH,8q5F,67wp,4BJ1,7FmP,4Cfp,pcFr,c/px,9bjF,3RG1,68fh",
                    "4f69": "fgPH,kCSp,pbWF,kCSj,3QEp,3QKz,8pOV,c+Q1,nGq1,nH5N,9bmN,685V,3RJ9,6V4h,j5yb,j61x,7Faj,fhsp,fhRp,8qop,6UE9,j5NP,4C2V",
                    "68cb": "j4/P,j5s1,pbTr,3QHx,9X0H,j5fx,gOMr,dLF1,lnWX,loM9,orrr,9XIx,orTz,9Y8F,hz+r,hAqF,dLRr,dMhF,9XsP,9Yoh,3QQP,8q8N,8qlb,3RG1",
                    "6e05": "oqRX,m8CF,ik7H,fh3p,4BgP,cdRF,mVxP,mWn1,jSgX,jS/V,gOPz,gPRh,pcsX,gPm1,3QX3,dLI9,dMkN,5ndN,3Rnh,btd3,btRN,8pV3,8qxN",
                    5112: "fgPH,pbWF,jR+b,3QBh,orbP,orZV,orAP,fhEV,ikwH,lnQN,loJ1,ilp1,j5rX,j5HF,gOYX,gPcF,j5U3,j67N,gPp3,gPEN,dLvz,dMu9,dL+P,aIAF,3QQP,aIhV,aJ3V,5ngV,3Rtx,aIxr,4BVx,aIN3,4C99",
                    6151: "ev+H,jRX9,pbQj,3QEp,kCYz,gOZ1,nGpX,nHc1,nGzj,fhsp,nH2z,c/sF,kDfj,kDKF,hAqz,hzXp,ewqP,fi89,cdUH,cehN,6Ulp,3QNN,aIkX,67FN,3R7z,6UNx,ceN1,ceo1,7Fzp,3RJ9",
                    "53d4": "g1HP,g2nF,or8H,5mrN,3QBh,kC/H,kDix,6TLP,c+Ap,c+T3,9aTx,loaz,loFV,gPEN,btLx,7Fq1,5mNF,3QX9,lodH,dM21,9bdp,682N,3RJ9",
                    "968b": "3Qy3,nG49,nGq1,gOJp,cd/1,9Xz9,8pOV,7EQx,m8P3,m9y1,g27X,j5Ex,m92N,pct1,j5Hz,j6aV,gP6j,gPO9,j5Xb,gPsh,3R4r,dLRx,dMnV,5ngV,3Rtx,aIxr,aJ3V,8q2r,8qAV",
                    "4f53": "fgPH,or5F,kCSj,3QEp,j5lH,j6h9,pcsX,3Rh1,7ETz,btd9,fhvx,j5KN,j5U3,fhRp,aJ0N,7FVh,8pV3,8qxN",
                    "6e7e": "nG43,kCYF,ikaP,fh3p,4BgP,cdRF,pcgr,m991,m8FH,m9y1,g1+z,jSnh,m8/z,fhyF,m9fb,fhOh,jSSr,gPO9,fhiX,fh+N,btRN,bta1,8pS1,8qAV,5ndN,4ClF,3RdV",
                    "4e94": "mVf3,mWjV,g1Uj,g2Jx,67Sh,mVNr,67n1,66WP,68c9",
                    8944: "pcdj,mVTN,m8mX,m9y1,jS1j,jSnh,hzUh,hzyp,jS1p,jSzH,jSVF,hAqF,hA4N,jSzN,fh0b,fi1V,c+Aj,c/vN,9X3P,9Yl9,hzNX,9Xw1,hAaX,9XV1,66ZX,8pLN,9Xw1,8pLH,3QNN,67zx,8q5z,67P9,3RG1,67P3,9bjF",
                    "7ee3": "or5z,hzlV,hzHN,kD5X,bsN1,cd/1,66WP,8pV9,mVKj,nH8V,mW13,dM59,jSnb,jT69,dLBP,hA4N,jSJ9,gPBF,exmh,dLOj,dMhF,9Y2p,9Yi1,5ndN,3Rqp,3QQP,8q5F,dL+V",
                    "5f66": "pcdj,m92N,m8tb,m9y1,kD2P,hzXp,hA4H,kDBh,hAD3,hzyp,bsWp,8pzh,4BgV,cdXP,dLUF,g2Gp,7EWH,9aWF,c/sF,3QHr,4BYF,6UKp,9bpV",
                    "4e49": "orlb,kDoN,m8wj,hzHN,fhj1,ce8p,9XRV,8qlh,6891,4BjX,9aH1,cebx,ewPV,gPp9,j5+p,mWdF",
                    "6e1d": "nG43,kC/N,ikaP,fh3p,4Bn3,cdRF,hzHH,jSqp,orAV,loqh,j67N,ils9,hzXj,hAqF,3QTX,ewu1,ewMN,5mQN,3R1p,bt9X,btsN,8pRX,8q8N,ex0j,7Fzp,g2SP,5ngV,3Rtx",
                    "85fb": "mV8P,mWq9,pc3X,lnX1,pcw3,lon9,jRX3,hzEF,g1HP,c+Dx,4BgP,aI8x,jSk3,jSVF,gPBF,gP09,ori9,ewqP,ewJF,ceeF,cdXV,ewqV,ewW3,excV,ceJV,cer9,ewW9,9XpH,9Yl9,btvP,3RdV,4Bzz,6Ulp,9XRV,6UKp,4Cv1",
                    "659f": "m8jP,m92N,pbQj,c+Ap,pcdj,c+Zp,j5cj,j5Bp,g1Uj,g2hp,c+nP,c/9V,c+u3,5mc9,5mNF,7ENj,aIeN,aIo3,8q2x,mVZX,j5+p,gPiP,c/mp,9XOH,aJdh,pcLH,3RzN",
                    "76b1": "gOwP,pbWF,m8wj,m8Vp,hzO1,hzvb,hzXp,4BSp,cdIb,ce8p,6TOX,6Ulp,5mKr,aIDN,kDoN,kDX9,hAwV,orNj,ex0p,ewPP,excV,9bjF,3RdV,cenX,8quF,5nk1",
                    "65cf": "oq/j,lnTV,jRQP,jSk9,jS4r,c+Ap,8pzh,5m5V,g1Xr,g2b9,6U5N,5mlx,ikG3,orAV,loaz,loM9,ewDj,j5NV,gPcz,gPL1,ce5b,ceQ9,gPsb,9b41,6UuN,3QU1,aIQb,8qrx,5ngV,4Cy9",
                    "7b06": "ik7H,or5F,lnHj,lo7x,lnQH,ikG9,orH3,ikPx,logP,loJ1,loqb,ilfF,7FS3,4ClF,4BzF,677p,gOJp,gPBF,aIZF,aI5p,aIxr,gP9x",
                    "7b14": "j4/P,pbZN,m8wj,m8P9,m8Cz,j5v9,jStr,pcw9,m95P,m9uV,m9fb,j64F,ilfz,g1O9,c+qX,c/vN,9YhX,9X3V,gP3b,5mEh,3R4x,3RwF,4Cv1,6V19",
                    "5f69": "nG0X,pcjF,lnB3,hzBx,m8FH,j5v9,ikYP,m92N,fgSP,fhBN,ikzP,3QQV,6TLP,9aoh,fhfV,dLBP,9aWF,ikYP,pcS1,cekP,ex3x,hAA1,bu2b,6UNx,3R7F",
                    5448: "ikqr,nGdx,nH2F,ilfF,ikqx,ewbb,excV,aJ0H,aI5p,5m5P,5nn9,ewJz,5mNF",
                    "8bcd": "oqV3,kC/N,hziH,hzBx,4Bwx,8pS1,mVE3,mWjV,685V,3Rqp,j5rX,j64F,67tb,fhph,fhRp,9bdp,9aNh",
                    "51f3": "oqV3,orlh,lnTV,hzlV,m8tb,kCVx,oruz,kDBh,ils9,mVZX,orKh,kDEj,mWgN,jSaH,jSJ9,hzBr,hAnx,ex3x,ewhx,hzBx,ewqP,ce29,cekP,ewW9,cdyP,ceQ9,3QrP,4Btp,67gN,9XsV,9XV1,5mX1,4Cch,4CrV,6V19",
                    5992: "5m5P,8pFx,aIeN,ewu1,j5v9,j4/V,or2r,c+u9,8pV9,orDX,lowx,btXX,kDU1,kDlF,ceeF,8q2x,3QU1,dLUz,dMr1",
                    "80a5": "5m2H,9Xa9,oqV9,orf1,67n1,4BzF,j563,j5s1,dLj3,dLF1,dMqX,nHc1,nGFF,7FgF,67FN,5mTV,5ngV,68c9,8qKh,fhyz,fi51,nGYj,fhRp",
                    7518: "j4YH,j6kh,or5z,3QKF,c+Gz,c/mp,67dz,67Vp,orNj,3Rqp",
                    6545: "jRNH,jStx,pbWz,ewkF,4Bn3,ew89,ewx9,6Uf9,6TS9,fhvr,orH9,j5NP,j6kh,iliH,ceAx,8qi9,3Q+h,fhEP,9X/h,682N,4Cy9",
                    "83cf": "m8jP,m9B9,pc3X,j5s1,pcw3,j5U9,jRX3,hzEF,fgSP,cdOx,3QuX,9XmF,hzKP,hAD9,hAqz,5naF,3Rk9,6Uf3,dLI9,dM59,9b79,9aK9",
                    7687: "pcdj,mVB1,mVlp,fh3p,fh+N,mWgN,mVB1,j5rX,j67N,c+u3,c/yV,9bmH,9aoh,4BgP,4Cy9,c/0r,4BVx",
                    9645: "4BjX,oqS1,orf1,iknp,ewqV,bta1,9arp,nGzj,nH8V,hzR3,hAD9,6U8P,dLUF,hAe3,5m+9,3R7F,c/sz,6V4h",
                    "7ede": "or5z,hzlV,hzHN,kD5X,bsN1,cd/1,66WP,8pV9,pcpP,m9fh,kDcb,kDX9,j5NP,ewu1,j61r,exj9,ex6z,9bah,67FN,3QU1,ewJz,9XV1,6UKp,3RJ9",
                    "81fc": "nGwb,m8th,4Bqh,fh0b,fhph,m92H,m9rN,4CoN,fhBH,fh+N,7EKb,7FIN",
                    "6e34": "oq/j,m8IV,jRTX,gOPF,5m8X,dLvF,orlb,orZV,hAwV,hzUh,orlh,kDcb,kDQV,bt6P,hA4N,ewDj,exg1,5ngV,3Rtx,c/g3,8q2x,btyX,9bgx,btd3,67q9,67/F",
                    6717: "pbTr,mVxV,dLj3,dLLh,m8Sh,m8q9,6719,9Xz9,bt6P,8p/p,ikh3,ikJh,3QX3,6Uox,aIDN,nGIN,nH8V,685V,3Rqp,ikVH,illV,c/6H,c/yV",
                    "6f66": "nG7b,lnQN,ikaP,g1Up,4Bn3,c+GF,m8P3,m9B9,pcw3,kDv1,hA1F,fhm9,jSnb,hA1F,lon3,hAqF,fibh,hAqz,jS/V,g2kr,g2PN,9YbN,9XIx,g2kx,c/0r,c/vN,4BIX,7FgF,9XY3,5m+9,3RaN,8quz,4Cy9",
                    7387: "pcab,mVQF,mVbX,mWn1,jRX3,hzBx,bsQ3,g21N,m8Yr,hzKV,hA1F,jSFX,cdXV,c/g9,fhEP,btIp,hAhb,kDNN,fhRj,btY1,9aeP,9bw9,cebr,3R4x",
                    "6aac": "j4YH,j5oV,pbQj,3QEp,bsGH,j5cp,hzyj,dLF1,mVAX,mWq9,pcmH,kDoN,pcCj,kDEp,hzR3,jSk9,jT31,hAA1,hz+r,hAtN,fhm3,fi89,aIkX,fhI1,dLXH,btC9,7Fzp,5n1h,3R7F,7F0X,ceo1,5mB3,9XY9,aIQb,dMnV,btLr,7FIN,5nn9",
                    "6c16": "ik7H,or5F,mVor,mWjV,jS7z,jSYN,gOD3,gPyx,9Y5x,6UQF,3RG1,6V4h,4BjX,8pIF,dLyN,dLj3,dLXN,aIxx,aIN9,67IV,4BSp",
                    6500: "m8jP,m8IV,pbTr,fh6x,gOwP,m8zx,lnKr,ikD1,ori3,logV,kD5X,pcpV,jSnb,g2tV,g27X,jSzN,m98X,m9y1,pcFr,g2Jx,hAaX,m9lx,lowr,ilp1,ew1P,exj9,9X3P,g2hp,ewPP,9Yl9,bt3H,ceo1,9arj,9bjF,6TOX,6U+1,btmr,5mKx,3QX9",
                    5256: "or5z,m8P9,lnxX,lodN,j5cj,gOSN,fhiX,j5Ex,fgSP,fhI1,3QBb,cdIh,ceeF,67CF,674h,m9fb,9bah,os0X,6891,3Rtx",
                    9798: "m8jP,m8Vp,pbNb,ikkh,ikD1,pc41,g1KX,g2eh,btgh,bsN1,g1L1,8pmH,8p/p,iktz,3QKF,nGCr,jSG1,pczb,hAhh,jSVz,nHf9,3R7z,hA1F,hAA1,5nk1,3RwF,dLUz,dMr1,9bsX,9aWF",
                    "4ec1": "ev+H,kCVx,or8N,kCVr,3QHx,ln+3,loJ1,6U8P,6V4h",
                    5892: "ikaP,ikzV,oq/j,9arp,7EAP,aIhV,pcmH,m9fh,m8LX,m9B9,kDir,hA7V,hAhb,kDKF,3QX3,hzR9,hAA1,5nk1,3RwF,ce8j,g2tV,g2Db,ceGN,7Fgz,ceeF,ceAx,7FCx,7FgF",
                    9002: "mVf3,jS7F,g1HP,g1Xx,6T/x,4BgV,6T/r,4BM9,4Cy9,m8LX,nH5N,mVWP,ewPV,ikwH,ilp1,6Uf3,ewx9,ex6F,6UQF,9aNb,9bjF",
                    8038: "hzs3,kCYF,pc0V,mVxP,jSqp,hz+r,kDv1,pczh,m9fb,hAA1,g1HP,g2Z9,c+JH,c/mp,9XpH,9Y2p,g21H,6U5N,g2Gj,3Rqp,66ZX,6V19",
                    "6dcc": "nG0X,lnNF,hziH,fh3p,4BgP,bt0F,mVAX,jStx,pcpP,gPiV,j5+j,nH8V,3QTX,gOZ1,gPL1,5nk1,3Rtx,c/0r,c/mp,8qop,8q2x,c/0x",
                    "892a": "oqYb,lnNF,jRQP,jSdV,fh3p,cdyV,fh3j,3QEp,dLpj,aIl1,c+Gz,fhj1,nGpX,jStx,gOVP,gP6p,6Ulp,5muV,6Ulj,4C2V,4Cy9,9Y2j,7FmV,nGLV,nH8V,g2SV,g2tV,jSCP,jS/V,dM8b,8qE1,btOz,dMr1",
                    "95ee": "3Qy3,kCM9,pbQj,m8IV,mVHb,mWjV,5ngV,3Rtx,gOYX,gPp9,9XY9,9Xw1,gOZ1",
                    "9c9c": "jRQP,pbTx,m8tb,m8P9,j5lN,j52X,j5yh,9XCh,9X71,j531,ew4X,ewAh,j5iz,9XmF,5m5P,6Ulp,oruz,lok1,jSPj,orZV,jStr,jT69,fhyz,fi51,9XIr,9Yl9,jSMb,3Rnh",
                    "60fa": "fgSP,jRX9,pbQj,3QEp,kC/H,gOZ1,nGCr,nH8V,gPHV,gP9x,nGCx,kDir,kDQV,btd3,fhyF,c+Zj,c/F9,9aTr,9bpV,4BM3,4Cy9,gPsb,4Cch",
                    "54bd": "8psX,m8n1,m8FN,bt3N,bsN1,3QX3,nGt9,nH8V,3RCV,hz+r,hAqF,lon3,fhL9,cekV,9aTx,fhL3,9YbN,67q3,685V",
                    "6c82": "oqV3,lnQN,ikaP,fh6x,5m8X,cdOx,3QNH,6Uf9,aIup,m8Vp,nH8V,g2hj,g2Z9,g2Gj,3Rqp",
                    "90ae": "5mc3,kCM9,kDix,7Fdx,7EH9,ew83,ewGx,pbZH,7EWN,3RgX,nGP1,nH8V,hAnx,dMnV,btY1,9Yi1,7FCx",
                    5141: "orrr,fh0h,g2Jx,kDuX,dMnV,3QuX,67dF,7EZV,9Xz9,fhph,fhEP,5mTV,4C61,4Cv1,7FVh",
                    "5e10": "8psX,jRU1,jSh1,aIl1,9aAN,pbTr,3QHx,pcjz,3R7F,7Fwh,fhpb,fi89,hAe3,nH8V,fhL3,9bgx,4CBh",
                    "8d28": "5m5P,aI2h,dLpp,nGap,orWN,nGLP,g2kx,jS7z,jT69,8pRX,g281,g2PN,8qxN,c/9P,7FgF,5mEh,3QHx,8qi3,3RJ9",
                    "8d44": "nG43,lnQN,fgVX,j5oV,jSgX,oruF,m8Vj,m9uV,jSVF,m98X,ikVN,g2b9,jSFX,hAkp,fi51,7EQr,ewhx,ex6F,7FFF,ceez,7Fap,5my1,3Qy9,7FjH,3RG1",
                    9698: "3QuX,nG11,nGjN,hzvh,dLyN,aIeN,9Xa9,orlb,lodN,orTz,jSJ9,jSdP,jT31,ikSz,dLBV,hAe3,dMnV,5mB3,c+T9,c/sF,5naF,5mNz,c/3F,c/jb,5n1h,5mrH,5nn9",
                    "60b2": "pc73,ce29,mVbX,mVE9,j563,j5v9,fgSP,fhm9,pcpP,cekV,mVWP,mWn1,j6aP,j5NV,fhEP,fi89,5m5P,aI8x,bt6P,5muV,4BM9,4C61,5n1h,7Fzp,btjj,8qbV,aIWr,68c9",
                    "5e1b": "pcdj,nGq1,nGap,g1Up,g2MF,nH2F,nGq1,jS1j,jSVF,674b,c+xh,c/yV,6UWV,5n4p,g2kr,3R4x",
                    "671d": "m8jP,m92N,pc0P,j5oV,j563,j5Ex,cebx,cdF9,j569,g1O3,g2kx,9aeP,9aZN,cdXP,3QQV,3R4r,7FmV,aIK1,orE1,os11,5nk1,3RwF,j5QX,j6e1,dMqX,dM21",
                    "75ae": "jRNH,g1Rh,bsGH,ewep,3QrP,9Xgp,m8wp,m9B9,pcdj,m92N,c+Gz,j5KN,dMu9,8q8H,9bah,dMex,dLI9,5mB9,4BVx,4ClF,7FLV",
                    "5f39": "nG0X,nGmV,hzKV,hzs9,c+r1,c+MV,67gN,4Bn9,pcdj,logV,kDy3,pcLN,kDcb,kDQV,c/yV,c+Wh,kDch,gP3b,gPHV,9aGX,9bw9,kDy3,3Rk9",
                    "52a8": "m8mX,m8Vp,gOwP,gP9x,gOSH,7EE1,9aQp,dLEX,7Fdx,j5Er,j6e1,685V,4Cfp,pczb,cer9,8qbV,3R1p",
                    "77fe": "mV5H,mVE9,mVor,ev+N,7EH3,hzs9,hzO1,9Xw1,9Xa9,4BFP,8p/p,c/0x,nGCx,nG/x,6UNx,5naF,5nk1,7FVh,hA4H,dM8h",
                    8150: "4BdH,bsTh,mVih,mWq9,pcdj,mVTN,gOJj,ln+9,j5oP,dLBV,j5yb,j6e1,hz+r,g2x1,lowr,fhUx,dM59,3QKz,cdRF,ceDF,5naF,3Rqp,ewJz,9aH1,btpz,9bah,9XLz,5my1,8q5F,67Sh",
                    "6c5e": "nG7b,nH5N,nGCr,j5Ex,j4/P,j6h9,ew4X,ewAh,aIhV,66+1,hz+r,5mKx,3QX9,gP9r,ceo1,8quF,68c9,cenX,fhXF",
                    "51fd": "nG7b,nH2F,jStx,9XIx,8pS1,j5fr,g2b9,aI5j,ewAh,g2qH,j64F,dLXH,9Y8F,hzs3,5mc9,685V,gPHP,4CrV",
                    5316: "ev+H,kCVx,pc0V,kCVr,3QHx,aIhP,ewMN,hAkp,loFV,pcjz,67CF,4C2V,4CrV,7FVh",
                    "96c6": "ikaP,pbZN,m8zr,c+Dx,pcjz,m991,m8Cz,m9uV,jSdP,jSYN,gOPz,gPEN,ewkz,exg1,m8/z,ewJF,aHUP,aJa9,c/0r,3R4x,5m8X,7EWN,aIup,aIDH,8qi9,5nn9",
                    "848b": "mV8P,mWq9,pc0P,kD2V,pcw3,kDy9,hzoX,ewhx,7EAP,cdUN,j5lH,3QNN,fhm3,kDoN,j5Hz,j6aV,ewW9,ceeF,gPfH,ewW9,bt9X,bu2h,9XIr,7FmV,ex6z,5naF,3Rh1",
                    "8b66": "nFZP,nGIN,pbWz,m8CF,pc73,m8P9,j4/P,m8wp,lnEb,lo7x,gP9x,fhm9,g1Rb,j59h,j5s1,gOZ1,gOGh,kDoH,pczh,mVZX,mWq9,mWgH,ilcx,fhEV,kDy3,hAkp,fi51,fhvr,dLXN,dLcP,dMu9,bsWj,btOF,9arj,9bjF,3QEj,7ENp,7FFF,3RwF,4Clz,4Btp",
                    "520a": "mVbX,mVQF,fgSP,fhBN,mVxP,4BFV,m9c3,9XY9,orZP,5ngV,3Rqp",
                    8721: "aHXX,kCJ1,kD61,c+Q1,c+r1,pbTr,7EQx,66TH,8pS1,bt6P,6Uf9,lo1b,loJ1,gP03,gPO9,pcmH,gPfN,pcFr,gPyx,3R4r,dLRx,dMnV,3RCV,9XIr,9YeV,5mKr,5ngV",
                    "601c": "ev+H,jRX9,pbQj,3QEp,lnQH,ikD1,fhcH,ikMp,pct1,nGP1,jSSx,g2Z9,ikYP,fhOh,c+PX,c/yV,6UB1,8q5z,3Rqp",
                    7089: "fgVX,kCSp,pbZH,fhcN,cdRF,9aux,4Bk1,g21H,kDfp,cdUH,9aNh,orH3,lowx,btXX,kDU1,kDlF,c/3F,7Fdx,3QU1,dLUz,dMr1",
                    8302: "m8jP,m9B9,pc0P,ikzV,pcw3,il39,jSPj,hAtN,3QrP,6TVh,9Xgp,g1Up,g2W1,j5Hz,c/6N,7Ft9,3RzN,6V19,4BM3,c/sF",
                    "5bde": "pcdj,mVWV,j563,mVf9,mWn1,j6e1,jS4r,jSVF,lo1b,hzUh,lojX,hAb1,gOPz,gPBF,btOF,bt0F,gOPF,ewkz,ex6F,9ahX,9bt1,btpz,8q2x,5my1,4BCN,3Qy9,9aWz,67P9,4ClF,3RJ9",
                    6696: "7EDX,mVc1,mVxV,9aDV,9ai1,gOzX,gOVV,mVE3,orZV,lo1b,ikSF,m95P,j5U9,hAhb,m9uV,hzR3,hAA1,ewtX,ex9N,hA7P,ceeF,7F49,4Bwx,btpz,btOF,7Fwh,5mNF,3QX9,9XOH,6UE9,5naF,3RG1",
                    "6f02": "oqV3,m8FN,ikaP,fh6x,5m5P,cdRF,nGmP,nHf9,nGIH,g2qN,nGYj,g2Gp,kD5X,kDQV,g2SV,g281,kD61,c+Wb,c/vN,9XsP,9Yl9,4BCH,8q2x,9XUX,5mX1,3R7F,7FCr,4Cy9",
                    "94b3": "hzlP,or5F,kCPb,kD99,gOD3,gOZ1,cdyP,ce29,gOMr,3QHx,8pV9,oruz,3R7F,orWH,3RzN,j5yb,j6h9,c/3z,c/vN,67Cz,682N",
                    5238: "nGaj,lnTV,logP,orQx,jRX3,jS/V,g1HP,g2Z9,pcjz,ikG9,ewnN,cdLp,9X0N,fhEP,ceDF,aJa9,bt0z,btIp,5n1h,3R7F,btgb,6U8V,3Qy9",
                    "838e": "mV8P,mWq9,pc3X,jSh1,pcsX,jSG1,jS1j,gOPF,g1KX,c+Dx,4BjX,bt0F,aIkX,gP9x,j5QX,9b41,gPBz,ceQ9,3QNH,5mNF,6UE9,8qrx,ceGN",
                    "77f3": "mVbX,mWq9,mVKj,gOSN,bsN1,4BCH,fhcN,fhXF,4ClF,6U5H,6UQF",
                    7761: "4BjX,mVc1,mVuN,6U5N,6TP1,hzoX,hzHN,cdUH,cdC1,mVAX,nH5N,j5oP,j6h9,fhiX,fi51,9XsP,9Yl9,5mxX,5ngV,jSqj,9XFp,nGOX,5mX1,jSSr,9Y5x",
                    "644a": "jRNH,jSaN,pbNb,674h,4BgV,cdvH,fhcN,kD2P,kDix,g2hp,dLLh,9aH1,6U2F,hzHH,c+Wh,7FgF,gP9r,orH9,kDrP,3RdV,orNj,loCN,kDrP,kDX9,g2tP,g2W1,btvP,btY1,67IP,68c9,kDHr,67Yx",
                    "7ae5": "pc73,m92N,lnB3,loCN,lnNz,hzR9,hA4H,loqh,hzlP,hAD9,fh6r,fhUx,9Y5x,9Xjx,fh6x,c+Dr,c/px,7ENj,7FFF,4BgP,4Cy9,fhvr,4BVx",
                    "59d4": "mVlj,orTF,nGFz,g2nF,jRX3,jT31,ew83,gOVV,jSwF,gPsh,exj9,bsJP,bt/9,ewGr,9aAN,6UuN,3RCV,3QBb,5mB9,6UrF,btIp",
                    "5e2d": "5m5P,9Xdh,m8wp,m9B9,pcdj,m92N,iktz,ilp1,kD93,ewx9,ex0p,kDEp,5muP,bt6V,btRN,682N,5n4p,ewMH,3RaN",
                    "643a": "jRNH,jSdV,oq/j,5mip,3QrV,bsGH,ewqV,hzKP,oruF,orDX,m9ip,lo4j,ce8p,lo4j,loJ1,j5Bj,j6e1,gP6j,gPL1,dLOj,dMu9,loqb,dM8h,bt9X,btOF,8qop,8qE1,5ndN,3Rqp,3QNH,5mEh,7Fdx,btsN",
                    "8be2": "nG7b,kD2V,gOtH,gOMx,3QHx,7F11,hzNX,orxN,lo7r,loJ1,6891,5ngV,3Rqp,6Ulj,gP6p,gPvp,9bdp,9aQp,c+Zj,c/mp",
                    7237: "kCM3,pc79,mVuH,j5Ex,g2Jx,fi89,pcpP,loCN,mW4b,jSzN,gOZ1,fh3p,dLcV,dLsr,dMex,7Fzp,67FN,dLI3,3QX9",
                    "76c8": "nG43,nGYp,jSJ9,jS/V,ex9N,c/jh,dLfX,gOMx,j5lN,nGmV,j5lH,j5KN,g2kx,c+JN,hzNX,dM59,5mij,bsWp,btOF,5naF,btd3,5mB9,btvP,5mTV,5m2H,5nqh",
                    "8f95": "lnuP,lnX1,pbWz,ew51,ewx9,iktz,3QKF,8ppP,btd9,mVKj,mWn1,pcw3,j5U9,j5v3,j6h9,g2kr,g2PN,ceGN,cebx,g2kx,6Uf3,9aWF,cekV,9XOH,3RaN,67Sh,aIQb,4CBh,8quz,btY1",
                    "5be8": "pcdj,mVTN,jRX3,mVf9,mWn1,jT31,jS1j,jSYN,gOMr,gPBF,dLfX,dMu9,ln+3,dLI9,lojX,dM21,8ppP,aI8x,dLI9,dM1X,btIp,9YeV,9bzh,9Xjr,9Y5x,4Bqb,8pV9,ceez,5mNF,3Q+h,8qeX,4CrV",
                    "7ec7": "pbWz,gOwV,hzHN,ln+3,bsJV,ce5h,66WP,8pYh,cebr,nGCx,nH8V,ceJV,dLRr,dMnV,3QTX,9XRV,aITj,4Cy9",
                    "5e84": "pcab,m92N,loIX,lnHp,bsWp,9aoh,4BgV,ewnH,excV,677j,68c9,j5KH,67FN",
                    9506: "pbWz,ik7N,lnEb,lo1h,hzoX,hzO1,ce23,cdyV,hzBr,4Bwx,8pV9,nGIH,hzUh,kDir,kDU1,pczb,fhOh,fhpb,fibh,3R4r,cebx,ceN1,3RG1,5njX,5mKx",
                    7248: "3QrP,7EE1,9Xa9,oqV9,pc0P,hzKV,hzs3,hzUh,c+u3,c+MV,3QQV,6Uf3,9XFp,cebx,mVNx,os11,hz+r,hAwV,ceGN,6UB1,3Q+h,fhBH,aIN9,7FCx,4Cy9",
                    "8fa8": "pbNb,mVrF,lnrH,ln+9,jRTX,gOJp,jSdP,fh6x,fgSP,fhj1,bsGH,btd9,fh6r,9Xjx,7ENp,3QrV,ikG3,dLOp,oruz,dLUF,btmx,8p/p,3QNN,pczb,mWdF,m95P,m9B9,jSFX,g2Gp,jS/P,fhUx,fhEP,fibh,aIDH,aJdh,fhUr,3Rtx",
                    "53c9": "5m8X,8pOV,btmx,fhI1,jSPp,nH2F,nG7h,lo1b,hA1F,jS7z,ewx9,btmx,8qi9,5nk1",
                    "866b": "9Xgj,jS1p,jSYN,c/vN,c+Ap,pcjz,67CF,4BjX,682N,9bdj,3RJ9",
                    "5b58": "lnuP,loM9,pc73,hzEF,bsJV,hzEz,3QKF,hzUb,hAtN,ewZh,67Sh,3RaN,cdXP,ceTh",
                    "57ab": "kCFP,kD61,or5z,cdRF,aH/9,fgSP,hzO1,kDcb,kDKF,ceAx,btOF,btY1,dMxh,orAP,hA4N,ewGx,bta1,hzUb,ewW9,cebr,4BVx,8pw3,8qAV,4BgP,4Cy9",
                    8235: "pbZH,lnHp,4BdH,8pzh,lnEh,ln+9,5mB9,3QNN,dL9H,dLUF,ikqr,fhfV,bsZr,8pOV,orH3,lowx,hA1z,loaF,loM9,hAD9,gPlX,5mX1,3Rnh,3RG1,68fh,btyX,dMr1",
                    "950b": "ik7H,or2x,lnEb,ln+9,hzoX,hzO1,c+nP,c+Q1,hzyj,4Btp,8pS1,jSk3,pcpV,mVQz,mWgN,j5Xh,fhm9,kDoH,il6h,g2Z9,ewAb,excV,btjj,btRN,8pV3,8qH9,gPp3,3Rk9",
                    "544a": "hzvb,nGjN,jS4r,jSYN,pcgr,fhvx,fgSP,fi89,3QKz,bt0F,btLx,3Rtx,5moz,5n7x",
                    "89c4": "kCFP,kD99,ev+H,ewAh,pbTr,cdOx,7EKh,5m5V,cdOr,8pYh,cebr,nGCx,nH5N,ceGN,jSJ3,ceo1,7FgF,4BJ1,c/jb,5n1h,4Cfp,4Cv1,7FVh",
                    "70d8": "jRX3,dLcV,or2r,cdOx,7EKh,4BgV,gOPz,jSk9,bsZr,7F49,j5yb,j6h9,cd+X,ceTh,orxH,cehN,orTz,ceDF,3QTX,9XON,9Y2j,3RJ9",
                    "7ed8": "or5z,gOwV,hzHN,kD93,aHY1,btd9,4BjX,7F49,fhm3,ikSF,nGS9,jSSx,iliN,g30h,fhyz,fi1V,btjj,bt/9,btC3,4BSp,5ngV,8qrr,3RJ9",
                    "517c": "pbWz,mVE9,m95P,pczh,lnxX,loM9,iknj,iliN,btRN,bsWp,ew4X,exmh,lo1b,3Q+h,lojX,3Rh1,4BgP,7ETF,btgh,btyX,6UQF,4Cy9",
                    "82a5": "mV8P,mWq9,pc0P,j5oV,pczb,j5Xh,c+nP,fhcN,j5Ex,g2x1,ex6F,c/F9,dLEX,7EZV,3QBh,dM53,3Rk9",
                    "70ac": "dL9H,j531,or2r,g1Xx,aI5p,4BdN,g1Xr,kD99,aI8r,6Uih,mWmX,mVNx,4BVx,4CBh,gP9r,gPEN,aJ0N,aIxx",
                    "630e": "jRNH,jSh1,pbQj,5mip,3Qv1,bsGH,fhj1,m8Sb,m9B9,pczb,jSCV,g2eh,m9fb,gPO9,gPfH,gPEN,dLOj,dMu9,dM1X,9XRV,9YeV,5ndN,3Rnh",
                    "68a8": "nG43,oruF,jRQP,jSCV,nGmP,c+MV,ew1P,jSdV,j5oP,g2nF,mW13,g2A9,orZP,excV,c/mp,aHUP,aJa9,dLRr,3R4x,5m8X,6U2F,8pV9,aIxx,8qbV,67/F,5nn9",
                    "4f36": "g1HP,kCSp,pbZN,kCSj,3QEp,g1+z,j5yh,pcpV,nGLP,kDBh,ilfF,gPO9,ikVH,fhL9,c+MP,c/vN,6UuN,8p/j,3Rqp",
                    "9a86": "nFZP,nGq1,dLBV,lnEb,dLj9,dLI9,5mB9,3QHx,8ppP,9XpN,j5Bj,pcw9,mVWP,mWn1,ilcx,c+Zp,jSCP,fhXF,c/Ih,3RaH,cehN,ceJV,3RCV,5mQH,5ngV",
                    9762: "mV8P,mWq9,mVQz,j5v9,3QBb,j59h,j67N,3RzN,j5rX,5my1,j5QX,5mX1,ewtX,ewT1,aIJX,aIl1,5mfb,5ndN",
                    9006: "nG0X,jS4x,g1EH,g1Xx,6T/x,4BgV,6T/r,4BVx,4Cy9,orlb,lodN,jSFX,orTF,jSdP,jT69,gP03,btd9,btRN,hAtH,9YbN,jSFX,btz1,9aZN,6Ulp",
                    "6c9b": "oqV3,m8CF,j4/P,gOJp,4BgP,c+Ap,pcmH,m9c9,lnTP,loM9,6UbX,gOZ1,gPHV,8qAV,6UNx,lojX,3Rh1",
                    5947: "mVbX,mWjV,pcgr,lo4p,j5s1,hzvh,lo4j,j5U9,gPEN,fgPH,fibh,fhUr,5n7x,3Rh1,67ar,cdOx,ceeF,7FgF,7EQx",
                    "64ce": "nFZP,nGIN,pbWz,lnNF,pcab,lo1h,hzlP,lnHp,jR+b,jStx,fhvx,dLI9,ewbb,hzvh,hzO1,fhj1,fh0h,j5KH,pczh,m9c3,m9B9,m9rH,hAnx,dLXN,jSJ3,dMu9,cdLj,c/px,9Xdb,9YbN,7EAP,7FS9,ceez,5mNF,3QU1",
                    "5b7a": "oqOP,orf1,jS1p,5mip,3Qv1,c+nP,g24V,ori3,os11,orDX,g2x1,hzNX,lnX1,loJ1,hAA1,j5Bj,j5KN,gP6j,gPfN,j5Xb,j67N,gPsb,gPEN,dLEX,dMu9,dM1X,btsN,3QTX,bta1,btY1,5nk1,3RwF,btpz,4BYF,btIj,4Cfp",
                    "6d89": "oqV3,lnNF,ik7H,fh3p,5m5P,cdOx,m8Sb,g2eh,pcpP,7FmV,logP,loFV,g21H,g2Z9,dLRr,9aDV,3QNH,5mNF,7Ft9,c/yV",
                    8212: "ikaP,or5F,jStx,j563,j5yh,ew1P,ewDp,j5iz,bt0F,3Qy3,bsQ9,btgh,67th,6719,nGFz,nHc1,il6h,jSCP,gPyx,g2kr,g30h,ceJV,g2Gj,5n4p,3RdV",
                    "968f": "3QuX,nG11,nGjN,g1Up,cdUN,aIhV,9aAN,8pzh,m8LX,jSnh,g21H,g2eh,67th,4BFV,67tb,4B/N,4Cy9,m8Vj,m9B9,pczb,lok1,gP9x,6UxP,hA7V,hAwV,8qAV,6UNx,ewPP,excV,btvP,btUV",
                    "66ff": "lnxX,lo1h,ikaP,ikJh,pbZH,ikwN,g1+F,dLpp,cdC1,hzHH,ewAh,loaz,loFV,ikPr,ilp1,pczb,j5Xh,hAe9,fhEV,c/0x,il6b,g2Jx,ex6F,c/F9,3QKz,cdRF,ceAx,3Rtx,9axz,9bgx,5moz,5n7x",
                    "73a9": "mV8P,mVE9,ikdX,ikD1,7EAP,9Xz9,mVor,9aux,mVKj,mWjV,gP03,gPO9,4BCH,67th,8q5F,aIDN,gPfN,gPvj,5n4p,4Cix,4CrV,6V19",
                    6342: "jRNH,jSh1,pbQj,5mip,3Qv1,cdyP,fhfV,nGt3,nHc1,nGOX,ewJF,jSnb,jSYN,ex6F,ewx3,exj9,3R1j,btjp,btUV,3RCV,5mHj,5ngV",
                    "6e58": "oqV3,lnNF,ikaP,fh6x,4BjX,c+Dx,j5iz,j5KN,pcab,3Q+h,aIbz,hzUh,gP3b,dLXN,3RgX,mV+1,mWjV,3RCV,hAaX,hAwV,cenX,ceJV,67LX,685V",
                    "589f": "ikaP,ikzV,oq/j,9Xgp,8ppP,bt6V,pcpP,kDrV,mVWP,mWjV,illP,kDU1,kD99,9Xz9,67jV,3QHx,g2hj,hAqF,j5NP,ewPV,dM21,dMkN,fi1V,aIuj,7FjN,cekP,5mTV,cexj,5n4p,7FFz,aJ3V,5mB3,5nn9",
                    7130: "ev+H,jRX9,or2r,bsZx,7EKh,4BgV,bsZr,8pV9,g1Xr,kD99,gP3b,jSwF,lodN,orE1,lodH,loJ1,gPvp,fhHX,dLLh,3Q+h,ex0j,exg1,3RG1,aIrb,aIK1,aITj,aJ71,67tb,6891",
                    "76ca": "or5z,kD99,j5Hz,orNp,j563,j6e1,cdF3,ewkF,hzR9,hA7P,fhRp,c/yV,4Btj,cdLp,ceDF,4ClF,ce23,4BM9,cekP,4C2V,4BgP,4Cy9",
                    "6e14": "oqV3,lnQN,hzlP,ewhx,3QuX,bt0F,hzKP,orxN,lo7r,lozF,hAe9,hzR3,hAwV,8qAV,8pV9,hzR9,c+T3,c/yV,hAaX,8qf1,4BCH,4Cy9",
                    "67a3": "m8mX,m9y1,pcgr,cebx,ewhr,j5fx,j64F,ex6F,9X3P,cdOx,ewu1,j5Ex,ewW9,ceDF,aJa9,aIrb,8qf1,7EZP,3Rnh",
                    "771f": "mVbX,mWn1,pcjz,jSqp,9axz,jS7F,jSPp,9bdp,hzEz,hAkp,ewkz,ex0p,bt0z,btIp,9abH,9bzh,3QuX,7F11,7FmP,3RG1",
                    "5b99": "pcab,mVTN,hzoX,lny1,loJ1,hAA1,3QEj,g1Up,g2MF,3RwF,bsWj,btOF,677j,67/F,j5Er,67zx",
                    7956: "pbNb,m8FN,jRNH,jSh1,bsGN,fh6r,3QHx,fh6r,ce29,5mKr,nGCx,nH5N,5ndN,hz+r,hAtN,cebr,ceGN,5muP,5nqh",
                    "6c94": "4BgP,cdRF,lnNz,oqS1,ik7H,fh6x,nGmP,nHf9,nGOX,ewT1,kD93,ewx9,excV,j5QX,j6aV,9YeV,4Cch,7FmV",
                    "516b": "4BgP,9arp,ewnN,mVE9,nGLP,hAb1,btIp,7FIN,4Cy9",
                    "5f7c": "pbWz,ik7N,cdvH,j5iF,g1Uj,3QEp,5moz,7F11,btgh,lo1h,loJ1,iliN,pcw3,fhL9,fhpb,fh+N,btLx,7Ft9,5mNF,3QX9,c/3z,9b41,6UKp,3RJ9",
                    "83dc": "mV8P,mWq9,pc3X,jSh1,jSJ3,pcw9,hzvb,jSYN,gOMr,dLF1,hzXj,ewMN,c/g3,hAqF,ceTb,cdvN,4BgP,7EWN,aIrh,cebx,9b41,7Fzp,5nn9,dLRr,3R4x",
                    "4e58": "mVlj,orTF,jRQP,jT69,mVNr,3R4x,ikCX,bta1,g1KX,g281,bsMX,dLF1,5m2H,7EQx,aIo9,dLRx,hAe3,cer9,ceJV,dMr1,g2A3,g2SV,dLRr,4Cy9",
                    "6b64": "j59b,674h,nGpX,6Uc1,gOYX,gPcF,4BgP,8q5F,orAP,5mTV,4C61,4CrV,7FS9,dL+P,hAwV",
                    9093: "nG0X,nGzp,ikG9,dLyN,7EE1,jRX3,gOPF,dLF1,9aQp,4C2P,orAV,os49,hAkp,dMr1,bt/9,9bt1,8qop",
                    "7aef": "nG7b,kCYF,j4/P,j5s1,fgVX,9Xdh,g24P,7EQx,66WP,8pS1,nGwb,j5yh,j6aV,nH8V,pcw3,j5U9,g2b3,g30h,g2A3,cehN,3Q+b,ce5h,ceN1,5nk1,3RwF,cekP,5mTV,ceAr,67Yx",
                    "532a": "nHbX,nG49,4Bn9,4Cy9,iknj,ikJh,ewAb,ewhx,9Xgj,9XCh,lo1b,67th,lojX,67M1,9XUX,9Yi1,ex9H,ewT1,ik/X,illV",
                    6746: "jRNH,jSnh,pbTr,3QHx,aHRH,jS4x,hzBr,dLI9,nGzj,nHf9,dLLb,dMxh,nGVb,3Rnh",
                    "987e": "5m2H,9Xa9,nG49,nGzp,cd+X,dLLh,j5yh,j5iF,5moF,9aQp,nGFz,nHf9,nGYj,jSJ9,9XOH,jSzN,jS/V,9YeV,gPvj,9X/h,6UB1,4BSp,8qrr,4CBh",
                    6838: "jRNH,jSh1,pbQj,3QEp,bsGH,jS1p,hzyj,dLF1,pcmH,m9ip,kD93,kD+h,kDuX,ewAh,ewZh,hAqz,btvV,8pS1,dMnP,7Ft9,3QX9,9bdj,4Cy9",
                    "51f0": "4BdH,8pw9,bsTh,oqYh,orWN,9Y8F,5ngV,3RJ9,68fh,mVNr,kD99,kD2V,fhfV,fhL9,kDy9,kD99,hzKP,hAe9,cdUH,cexp,9aDP,9bah,5mlr,5n7x,cebr,5mKx",
                    5993: "or5z,cdC1,9XmF,6Uf9,j4/P,j5s1,cdXV,8pFx,4BgV,kDcb,kDX9,pczb,fhOh,fhsj,fi1V,9bdp,67FN,3QU1,ewGr,9XRV,67Yx,3RJ9",
                    "527f": "pbWz,m8q9,jS4x,pcab,m8IV,jSk9,pcpP,m8Yx,jSCV,ikkb,ikYV,c/9V,c+xh,ikkh,fh0b,fhEV,ikG3,3QX9,9X3P,9XY9,4BjX,677p,7EWN,9Xz9,8pYb,5m+9,lowr,9bgx,pcRX,6891,3RwF",
                    8205: "pcab,nG7h,j59h,j67N,nH5N,nGIN,lnEb,lo4p,lodH,loCN,gOJj,gPBF,btOF,bsWp,gOJp,ewej,ex6F,gP9r,9aQp,67n1,3Qv1,9ahX,9bpV,5ndN,3Rk9",
                    "514b": "m8jP,m9B9,pcgr,ikPx,ikqr,ilcx,ceAx,cdOx,ikqx,3QuX,5mlx,6U8V,7F11,ce5h,cehH,5mQN,4C2V,4CrV,7FS9",
                    "6d6a": "oqV3,lnTV,j4/P,g1Xx,4BgP,cdRF,pcmH,mW4h,dLI3,dMkN,m9rN,m8P9,3QX9,7Fq1,ikG3,iliN,dL+P,8qop,682N,4Cy9,9bdj,ceJV",
                    "4e86": "nG7b,nH8V,hA1F,5mNF,3QU1",
                    "6ee4": "oqV3,lnNF,ikaP,fh6x,4BgP,cdOx,pcgr,lo7x,nGCr,nH8V,iliH,loJ1,lnTV,dLBV,8pLN,3QEp,gP03,hAqF,jSzH,ewMN,dLUF,dMhF,g2SV,5mxX,9XFp,aIDH,5mQN,4C2V,4Cix,6UTN,cer3,9bdp,btRH,6V4h",
                    "76df": "dLmb,nG7h,nGwh,ewAh,ewbh,j59b,j5yh,ce5b,fhyF,gPfN,nGIN,nH5N,dMkN,cexp,kDoH,kDNN,hA4H,hAtN,4Btj,aI5p,aJ0N,4CoN,aIo3,4BM9,aIGP,4C2V,4BgP,4Cy9",
                    "4e43": "mVlj,mWdF,g2Dh,g2Z9,682N,4C99,mVKj,ewx9,aIhV,7EQx,5mc9",
                    "6f58": "oqV3,lnQN,ik7H,fh6x,4BjX,cdRF,nGpX,orZV,m8P3,jSwF,j5Xb,mWgN,ikzP,ils9,nGOX,5mX1,dLyH,fhsp,il01,g2Jx,dMu9,3QX3,c+T9,c/vN,3RzN,9aK3,9bmN,5mB3,5ndN",
                    6251: "jRNH,jStx,bsGH,fhvx,pbZH,5mrN,3QBh,pcsX,3Rh1,il9j,c/Ih",
                    "64ac": "jRNH,jSaN,pbNb,5mfh,3QrV,cdvH,fh9F,mVAX,orWN,kD93,m9rN,ikCX,jS/V,nGIH,hA4N,gPiV,gPHV,ils9,fhyz,dLyN,bt3H,btsN,8pIz,9XON,ewAb,4BPh,6UxV,dL+P,fi51,btvP,ceN1,8qbP,9Yl9,ex0j,5n4p,4Cix,4Cv1,6V4h",
                    "4eba": "nGCr,ikPx,fhsp,aIl1,6T/x,4BgV,ikPr,ceo1,7FCx,4Cy9",
                    "4f24": "fgPH,pbZN,kCSj,3QEp,gOVP,pcmN,lo4j,loPh,ewqP,excV,685V,4CoN,3Rqp,3QNH,67th,9XLF,ewPV,j5NV",
                    "4ed5": "ev+H,or8N,nGdr,3QHx,hzHH,hAGh,pcsX,5mX1,5mxX,5nk1",
                    6002: "ew4X,hzBx,or8N,jSaH,gP3h,dLOj,gPiV,kDy9,orH9,kDy3,gPyx,dMu9,66WP,9Xgp,aIhP,5muV,4BJ1,4C99,6UKp,ce8j,9XRV,aIWr,6V4h",
                    "8d9f": "kCIX,kDch,pbWz,67dF,fgSP,fhsp,bt0z,btd9,4BdH,9Xa9,c+xh,9Xa3,4BFV,3QX9,3RJ9,mVKj,jSCV,pczb,hAhh,j61r,mWn1,6Ulj,hzXp,hAwV,7FLV,67/F,ewPP,ex3x,aIWx,aIGV,ewPV",
                    9e3: "nG43,jS7F,gOwP,gOMx,7EQx,5m91,7EQr,4BSp,4Cy9,9aZH,7F49,nGt9,nH2F,g2MF,g2b9,jSk3,jSVF,dLXH,7FLV,btFb,excV",
                    "55e1": "8psX,mVc1,mVrF,aIbF,aHY1,jSdP,oruF,pczb,m9oF,jT69,m98X,gP3h,hAnx,jSMb,g2PN,ewtX,ewMN,5mQN,3R1p,cd+X,9XFp,67gH,9aWF,ewW3,excV,5ngV,3Rtx,cer3,9Y5x,6UAX,aJ3V",
                    "7ea4": "or5z,hzlV,hzHN,kD93,bsN1,ce29,5m5P,8pV9,m8Vj,nH8V,fhm3,fibh,mW13,3Rk9",
                    5174: "mVib,g24V,orlb,hA4N,dL+P,mWjV,dLcP,dMu9,4BjX,7ETF,btd9,btvP,8qrx,5nk1",
                    9609: "or2r,lnTV,3Qy3,kCM9,nGwb,nHc1,6891,3Rtx,j5iz,j61x,loaz,g281,dLsx,hA4H,dMhF,ewqP,ewZh,9bah,9aDV,ewqV,bt6P,btFh,g2kr,6Uox,67CF,67Sh,8qrx",
                    "5b9c": "orlb,m92N,hzs3,lnB9,loFV,hAwV,4BCH,gOSN,gPvp,4Cfp,c+JH,c/mp,9aAH,9bdp,4BgP,4Cy9",
                    "94c0": "ikaP,or5F,lnHj,lo1h,hzs3,hzR9,c+nP,c+Wh,hzEz,3QKF,7F49,3R4r,jStx,jT31,3RG1,688X,67zx,c/0r,c/C1,pcCj,67Vp",
                    "8fd0": "nG43,jS7F,g1EH,g1Up,7ENp,5m91,7ENj,4BPh,4Cy9,mVE3,mWgN,hzKP,hAA1,hA4N,9aK9,9Y8F,dMbj,7FLV",
                    "8d26": "9Xa3,nG49,nGt9,9Xz9,kCYz,9XmF,6TYp,3QrV,8pOP,5mHp,pcmH,3RaN,6UKp,fhpb,fi89,hAe3,nH8V,fhOb,9Y5x,7FIN,5nqh",
                    7099: "j563,pc79,m8FH,m9fh,hzUh,fh6x,dLcV,j5KH,gPBF,exj9,9aur,dLyN,fhyz,btmx,7F49,5mrN,3Qv1,btmr,7Fq1,5n7x,3RG1,9X/b,dMhF",
                    "59ff": "nG43,lnQN,g1KX,ikzV,jSgX,oruF,mVNr,mWn1,jSVF,mVZX,ikVN,gP9x,dLBV,j5QX,gPvp,exg1,bsJP,bt/9,ewGr,8pIF,6UB1,3RG1,3QBb,5mB9,7FmV,cexp",
                    6777: "3QEj,pbQp,jRNH,jSh1,jS1j,aHRN,hzyj,dLF1,m9c3,dM59,dLOj,dMnV,ceJP,m9uV,m8Vp,67wp,4B/N,4CrV,7FS9",
                    "978d": "3QKz,iktF,8pmH,8p/p,ce5b,g2eh,g1L1,cdC1,ce5h,pc3X,ikD1,ikkh,pbNh,m8gH,m8Vp,pcsX,mWax,ils3,loM9,lo7x,ikPx,jSMb,9XLF,4Cy9,exmb,ewDp,3Q+b,67M1,btOF,ex6F",
                    5351: "pcgr,m8M1,m8wp,dLpp,dMhF,m9oF,m8M1,iknj,ilfF,m8Yr,gP6p,9XmF,9X3P,9Yl9,dLXH,3RaN",
                    8236: "mVlj,pbZN,3QrP,9al9,mVf9,mVE9,67q9,3QNN,fgPH,fhvx,jS4r,hzHN,dLsr,aIeN,kDuX,pcCp,3RaH,kDoN,kDU1,3RG1,dLXH,dMr1,6UuH,6U+1",
                    5632: "9X6X,mVc1,mVrF,cdRF,cdC1,m8Cz,m9c9,pcgr,j5Ex,j5rX,j5NV,c/9V,c+Q1,j5s1,g27X,g2tV,9axz,9b41,c/0r,3R4x,3RaH,67P9,9bdp,nGYp,nHc1,5nk1,3RwF,j6dX,j5+p,dMbj,dMr1",
                    "7a97": "pcab,mVTN,j52X,mVc1,mWn1,j6e1,hzs3,ln+9,logP,hAwV,j5Er,gP09,gOJp,3QEp,5mij,5naF,3Rwz,gPBF,gP09,aIeH,g2kx,c+T3,c/jh,67jV,btgb,9XLF",
                    "86cb": "nG43,nHc1,loCN,nGCr,g2kx,jStr,jS/V,m8IP,hzBx,fgW1,j5iz,g2eh,g2Z9,7EQr,dLsx,dMhF,9bjF,9aux,fhvr,67zx,5mc3,67/F,8qoj,3RG1",
                    "680b": "j4YH,j5s1,pbQj,3QEp,aHRH,j5cp,gOJj,c+Q1,lnWX,loPh,pcsX,dLI9,dMr1,67jP,aIxx,aIZz,68fh,il33,5m+9,3R4x",
                    9492: "ikaP,lnEh,or2x,lnEb,lnX1,hzoX,hzO1,c+nP,c+Q1,hzyj,5mip,9aH1,3QNH,6Uih,9XIx,mVNx,mWax,67Yx,5naF,5nk1,7FVh,gPfH,dM8h",
                    "8d74": "3QrP,9arp,c+Dx,9arj,5my1,4BPh,4Cy9,5mxX,fhj1,bt9X,btsN,fgVX,fhEV,fhfP,orbV,jRX3,jSwF,orKb,6UHh,hAkj,c/F9",
                    "62f1": "jRNH,jSdV,pbQj,5mip,3QrV,cdvH,g24V,jSk3,jT31,c+PX,c/F9,pcjz,c/3F,pcFr,c/px,9XLz,4BFV,aITj,5nn9",
                    "558a": "8psX,kCJ1,kCYF,9XmF,9X71,3QEj,6U8V,9Xw1,kD61,kDX9,nH2z,loFV,hzUb,hAb1,6Ulj,dLOp,dL+V,9XRV,9XFp,pczb,9Y2p,3RCV,7FVh,gPHP,aIZF,6UE9,4BYF",
                    "8bdd": "oqV3,lnNF,hziH,hzBx,4Bwx,9Xz9,mVE3,orZV,nGS3,dM59,ikCX,ils9,3R1j,dLOp,dMnV,3RCV,67wj,685V",
                    "53ca": "nG7b,nH2F,gPfN,gPEN,ceuh,8q5F,4Btp,nGt3,fhfV,bsZx,7EAV,fhm3,9XON,7Fwh,4Cy9",
                    6868: "nG0X,kCYF,g1KX,j5oV,pc0P,ewqV,j5yb,pcpV,m8/z,m9uV,hAhh,ewJF,jSCP,hAhh,bsJP,bt/9,ewGr,3R4x,5m8X,7EWN,btmx,8qf1,6UNx,5nk1",
                    "666f": "oq/j,orTF,j64F,j5cp,oq/p,m8wj,m9oF,j5yb,g2nF,g1EH,g30h,dLpj,dMex,9Y5x,9Xgp,dLpp,5m5P,9aDV,9XIr,5mKx,3QX9,8qi3,5nk1",
                    "582a": "ik7H,ikzV,oq/j,8pCp,6TIH,9aDV,lnTP,loJ1,oroj,btjp,orQr,btLx,ikMj,ilcx,fhUr,fhsp,bt3H,bt/9,btd3,4BM9,4Cv1,67wj,9XRV,9Y2j,6UWV",
                    "814a": "4BdH,aH/9,nG49,nGq1,5my1,3QHx,ikh3,ikD1,dLj3,dLF1,m8Sb,m9B9,hzR3,hAGh,pcmH,hA4N,pcIz,hAqF,3R4r,ewGx,excV,3RCV,9XIr,9YeV,5mKr,5ngV",
                    "6d9f": "nG0X,kCYF,ikaP,fh3p,4BjX,cdOx,mVuH,j5yh,fh9z,fhm9,6Uf9,4BzF,6Uf3,4C2V,4Cy9,lo7r,loJ1,pczb,ewGx,exg1,aIxr,aJa9,il9j,67Vp",
                    "63b3": "jRQP,jSh1,pbTr,5mlx,3Qy9,cdyP,g281,4BCH,8pV9,9XCh,jSnh,jT69,hAA1,pcsX,jSG1,mVZX,mWn1,g2kr,gPEN,jSFX,ewT1,dM59,dMkN,fi51,3Q+b,6UxV,cer9,9XIr,9Yi1,5ngV,3Rqp",
                    5192: "gOGb,oqYh,orZV,gPHV,lnNz,lowx,hAnr,hzEF,3QEj,ewep,ex6F,3RwF,bsWj,btOF,8quz,8pCp,5mij,5naF",
                    "964c": "4Bn3,nG49,nGq1,hzBx,ewu1,bta1,9XsV,9aux,nGt3,nHf9,nGS3,ikYV,4BSj,ikMp,illV,4CrV,ce8j,ceJV,67wj,685V",
                    8650: "pcgr,kDix,mVNr,mWgN,3QrP,9Xdh,kCSp,kDX9,hAtN,gOPz,hAqF,j5Er,ewGx,dLUF,dMhF,g2SV,btUP,bta1,5my1,5ngV,8pFr,8qKh",
                    "74e2": "nFZP,nGFF,nGdr,gOMx,nGpX,gOZ1,kCIX,kDfp,gP6p,gOA1,kCJ1,ew4X,ewAh,cdvH,cebx,66TH,9Xdh,cdRz,5moF,3QEp,9XvX,6Uih,3QX3,67zx,7FgF,aIDN,mVTN,nHc1,jSMb,c/jh,4C2V,67Yx,8qoj,4CoN,mWdz,btRN,8qAV,4Cy9",
                    "524d": "pbZH,m8Sh,lodH,pcCp,lnuP,loM9,3QBb,hzvh,hzXp,67wp,4BJ1,ewbb,ewDp,aI2b,aIup,gPlX,9b41,j67H,5ndN,3Rnh",
                    "529d": "lnxX,lo1h,ewu1,9XmF,5m5V,hzs3,cdXV,8pYh,jStr,jT69,685V,4Cfp,pczb,hAe9,c/d1,8q8N,67wp,3QQV",
                    7802: "m8jP,m8Sh,m8Cz,c+kN,674b,g1Rh,g281,8pS1,8pzh,dLI3,kDoN,pcw3,aIN9,kDKz,fibh,3QTX,4BYF,67M1,8qop,aIZF,c/yV",
                    "62fe": "jRQP,jSk9,pbTr,5mlx,3Qy9,cdyP,ewu1,gOYX,kDlF,orE1,kDHx,hAD9,gP6j,gPEN,3R1j,ce8p,ceGN,3RzN,67wj,682N",
                    "7a0e": "mVbX,orlh,mVrz,3QKF,ikaP,ikJh,9X0H,iktF,gOPz,ce29,nGFz,kDv1,j5Xb,orZV,j5Er,j6aV,c/yV,c/0x,j5Ex,3QTX,6UrF,8q8N,c/9V,c/mj,5n4p,4Cix,4Cy9,6V4h",
                    "8d2a": "hzlP,jS7F,pcgx,m991,jSSx,ils9,lo4j,j5KN,hzEz,hAhh,dLRx,6U2z,dLvF,dMex,6UNx,3QBb,4BCN,5my1,6Uih,7Fap,btpF,7FmP,3RG1",
                    6876: "j4/P,j5v9,pbTr,3QHx,aHRH,ikqx,hzBr,dLF1,nGt3,nH8V,jSJ9,loaz,hAkp,3Q+b,hzUh,hAA1,5nk1,3RzN,dLLb,dMr1,9XCb,9Yi1,hAhb,4Cch",
                    "4f1f": "fgSP,pc0V,jS4r,3QHx,lnTP,loM9,gP03,gPHV,c+PX,c/C1,7FP1,67Yx,pcsX,3Rh1",
                    "4e60": "mVib,mWjV,682N,4C61,j5lH,g2nF,8pzb,dMbp",
                    "90aa": "oqRX,orxN,lnKr,fgZ9,fhEV,orlb,67th,3QNN,fhiX,9Xjx,6TLV,3RgX,nGP1,nHf9,gPvp,9Yl9,8qE1,7FCx",
                    "5bfb": "nGaj,nG/x,gPyx,gOGh,kCVr,kDHx,c+kH,c/Ih,bt0z,7F7h,g2Db,5n1h,3RaN",
                    "91ce": "nG0X,nGzp,fhsp,fgW1,nG11,jRTX,jSqp,nGjH,7EWN,cdyP,cebx,66WP,8q5F,nGFz,nH8V,il6h,kDrP,gPyx,g2nz,g2Z9,c/yV,g2Gj,5n4p,3RdV",
                    "5f71": "nG7b,nGFF,j5HF,j59h,nG7h,lnEb,loaF,ikzP,g2b9,g1HP,g2x1,dLpj,dLUF,9XLF,9Xgp,dLpp,5m8X,9axF,9XvX,5my1,3QKF,9aNb,67IV,j5QX,orZV,cenX,j6e1,3RaH,6UNx,ceQ9",
                    "56ed": "3Qy3,nG49,nH8V,3RCV,kC/H,kDBh,gOMr,gPyx,8pFr,9Xw1,btd9,dLLh,gP3h,gPfH,9XON,9b0V,9bdp,btLx,6713,685V",
                    "77bb": "66ZX,nG11,nGgF,8pIF,8pt1,dLfX,dLvF,ikdX,iktF,m8Sb,pcmN,nGFz,nH2F,loqh,loM3,ln+9,aIo9,7F11,5moF,hz+r,jSCV,jSVz,illV,il33,gPvp,g2eb,g2Z9,dMnP,dLRx,btmr,btUV,3R4r,9aTx,9bmN,3RzN,5mKr,5ndN",
                    "804c": "nFWH,nGwh,nG43,8pw9,j563,j5oV,ew83,ewqV,6TIH,aIrh,nGmP,3QQV,c/3z,nGFF,nH8V,c/yV,fhyz,fi1V,4BPb,aIGV,btLr,5nqh",
                    "88c5": "nG43,lnNF,g1KX,j5s1,pc3X,ewu1,lo4j,loM9,pczb,gPsh,gP9r,gPEN,fhsj,c/9V,c+nP,c/F9,6TLP,9Xw1,c/0r,9Xw1,3QU1,67CF,aIAz,6UHh,5naF,3RJ9,7Fwb,aJ0N",
                    "99a8": "nG0X,nGIN,loaz,lnB9,pc0P,lnTV,jSdP,hzKV,hz+r,hzvh,dLcP,fgZ9,gOGh,jR+h,jStx,gP9x,kDlz,logV,mV+1,orE1,orTF,m9oF,loCN,loM9,jSzH,jSYN,hAnx,g2A9,ewGx,jSCP,g2Jx,fh+N,exj9,ex6z,dLmh,cdyP,ceN1,8qH3,9X/h,ceeF,ce8j,9XpN,8ppV,3QKz,9axF,9bdp,3Rqp,4Cfj,4BzF,6U2z,6UKp,9bdj,9axF,9aTr,dLRx",
                    "626e": "3Qy3,4Bwx,pbTx,bsGH,ewu1,j4YH,j5v9,fhiX,hzXp,orAV,orNj,iliN,fibh,fhsj,fh+N,682N,3Rk9,fhBH,9aWF,67wp,3QQV",
                    "8fa9": "pbNb,mVrF,lnrH,ln+9,jRTX,gOJp,jSdP,fh6x,fgSP,fhj1,bsGH,btd9,fh6r,9Xjx,7ENp,3QrV,pcab,kDlF,hzNX,hzXp,5mHp,8qbV,pczb,mWdF,m95P,m9B9,jSFX,g2Gp,jS/P,fhUx,fhEP,fibh,aIDH,aJdh,fhUr,3Rtx",
                    "832c": "m8jP,m9B9,pc0P,j5oV,pcw3,j5U9,gOwP,gPO9,kDir,ewu1,cdRF,8ppV,dLvz,3QKF,btd3,btUV,fhHX,5mX1,5muP,5nn9",
                    "5d07": "oqYb,lnEh,loCN,orWN,pcgr,lo7x,kDcb,ikSF,ew4X,ike1,ilp1,exg1,ewhr,ex3x,btXX,bsN1,5m5P,9XpN,btmr,5mKx,3QX9,9bab,5ngV",
                    "5bf8": "ikaP,ils9,fh9z,aIrh,pczb,67Sh,3R7F",
                    7535: "7EKb,lnEh,lozF,9Y8F,9Xdh,g1Rb,g2MF,pcdj,5mHp,4BVx,4CoN,6V19",
                    5241: "g1KX,j5fx,nGdx,nGzp,hzXp,hA7V,c+nP,c/9V,hzKP,3QQV,66WP,c+MV,7FjN,m9fb,9X/h,os0X,5nk1,3RwF",
                    "98ce": "4BdH,7EH9,bsWp,nGap,nG/x,9Y5x,6UTN,5nk1,8qKh,kDuX,ewGx,btd9,8pIF,j5iz,g2eh,c/6N,9bah",
                    "54e5": "nG0X,nHc1,kCVr,kDlF,hA1F,hzBx,kCVx,fgPH,fibh,7ENj,cdLp,cehN,8q8N,8pCp,nGYj,fhRp,fhUr,5n7x,3RdV",
                    "572d": "lnHj,lozF,g1HP,g2Z9,orrr,g2kx,aI2b,aJ0N,4BgP,4Cy9,dLRr,4BVx",
                    8679: "aHUP,jRQV,jSk9,ce29,cdyV,or2r,6T/x,4BdH,8pV9,9XvX,6Ulp,m8Vj,m9y1,5mEb,5nqh,m9fb,5n1h",
                    8364: "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,g1O3,j569,j6e1,g2W1,g1Uj,g2PN,ikPr,bsTh,btRN,8ppP,8qH9,dLUz,3R7F",
                    "80a9": "pcdj,mV+1,5m5P,9Xgp,dLsx,mVox,mWjV,illV,ikqx,3QX3,fhm9,fi1V,5ngV,3Rtx,ce23,ceJV,8pV3,8qAV",
                    "754c": "oq/j,orTF,g2MF,g1Up,oq/p,kCSj,kDKF,orrr,g2kx,aHRH,c+GF,g2b9,g2tP,c/mp,aJa9,cd+X,8pOV,3Qy9,dM8b,3Rnh",
                    5267: "4BdH,9Xa9,ewbh,oqYh,orAV,jSCV,jR+h,g1Rb,g2A9,jSk3,btd9,4Bzz,bt0F,btsN,67FN,67dF,mW7j,9Y2p,pcRX,5nk1,3RwF",
                    "8de8": "nG0X,nGmV,hzKV,hzp1,nG11,hzBr,6T/x,c+Dr,c+T9,dLfX,66+1,5m5P,8pYh,m8P3,m9y1,pcw3,jSzN,g2b9,m9c3,j64F,gPO9,gP9r,gPBF,dLLb,dMr1,dL+P,9XLF,9YbN,5naF,3RdV",
                    7281: "nG43,orrx,jRQP,jSzN,nGmP,ewqV,ew1P,jSdV,g2kx,nGS3,gPp9,orZP,fi1V,dMbp,9aob,dLyN,bsZr,btRN,7EDX,7FP1,ewJz,3R7F",
                    "7f9a": "oqV3,lnHp,jS7z,orlh,jRQP,jStx,fgVX,fhph,aHUP,aIup,jS7z,9XmF,6T/x,3Qv1,fhsj,ikVN,lok1,orKh,lowx,illV,gPO9,hAaX,ex3x,c/0r,c/C1,67P9,8q5F,3Rtx",
                    "7edc": "or2r,hzlV,hzEF,kD5X,bsJV,bt6V,66WP,7F11,hzR3,pct1,m92H,m9rN,il9p,ewMN,cd/1,j5KH,fhOh,c/vN,ceQ9,3R4r,btmx,btRN,3RzN,5mKr,5ndN",
                    "82d7": "kCFP,kDX9,pc3X,gOZ1,pcw3,gPp9,3QEj,g1Up,g2PN,3RzN,aI5j,aJ0N,5mij,5ndN,g2nz,5mNF",
                    "6eba": "oqYb,m8FN,ikdX,fh9F,4BjX,c+GF,nGmP,nGIN,jSzN,jSh1,fhj1,fhBN,67FN,3QU1,dLBP,btgh,7EWH,aIDN,nGS3,nHc1,jT31,jSMh,fhOh,fi51,6891,3Rnh,c/jb,aIZF,7Ft3,aJ71",
                    "55b7": "9ahX,mVc1,mVuN,aIeN,aHY1,mVAX,mWn1,pcsX,kDv1,ikCX,ils9,kDfj,g2hp,kDKz,g2MF,7F7b,ewAh,excV,7FLV,cenX,7FmV,67CF,3QNN,7Fwb,3RJ9",
                    "6b67": "jRTX,7EE1,or5z,9axF,hzEz,hzR9,6TIH,9XCh,kD93,kDU1,pcw3,fhL9,fhm3,fh+N,9Y2p,67FN,3QQV,ewGr,9XRV,6UKp,4Cy9",
                    6674: "8pw3,mVf9,mVxV,9aDV,9al9,g1O3,g24V,mVHb,mWn1,jSqj,jT31,gP03,gPO9,pczb,gPsh,3R4r,dLRx,dMnV,5ngV,3Rtx,aIxr,aIWx,7Fdr,7FCx",
                    5982: "jRQP,jStx,c+Wh,7EWN,3Qv1,pc0P,c+xh,9XsV,67zx,5mTP,logV,loJ1,5nk1,7FmP,7FP1",
                    "793e": "pbNb,m8FN,jRNH,jSdV,g1Xx,bsGN,g1Xr,3QHx,fh6r,cd/1,hzR3,hAA1,67jP,68fh,pcw3,67P9",
                    "6dd1": "nG43,lnNF,hzlP,fh3p,4BgP,cdLp,g1+z,g2tV,orlb,5mEh,3QQV,kDcb,kDoN,7EQr,c+MV,c/3z,9b41,logP,loFV,fh+N,aIWx,67M1,3R4x,lojX,g2A9,aITp,7FFF,3RJ9",
                    "7ee5": "or5z,hzlV,hzHN,kD5X,bsJV,cdXV,66WP,8pV9,m8Sb,nHc1,jSnb,gPcF,kDuX,hAhh,g2Gj,kDQV,dLI3,dMu9,gPlX,9XFp,7Ft9,67/F,4Cv1,3QTX,67IV,9bdp,c/sF",
                    "568f": "8psX,mVc1,mVrF,bt0F,bsN1,nGpX,nHc1,pcsX,kDv1,hzNX,kD61,kDU1,hAA1,ikMj,ilfF,c/sF,c+Zp,ikMp,g2hj,g2MF,ik/X,c/d1,bt9X,btUV,9bjF,btyX,4C61,7FpX,7FLV,3QKz,67n1,9aNh,7F7b,4C2V,4Cy9",
                    "987d": "nG0X,nGq1,hzlP,hzUh,66WP,9Xdh,hzyp,hzHH,67gN,9XCh,nGwb,nHf9,nGVb,j5R1,8q2r,j5Ex,j6aV,8qAV,fhOb,9XY9,6UxV,3QX9,7Fzj,3RJ9",
                    5348: "gOzX,lnNF,pc41,lnNz,loFV,c+qX,c/F9,loaz,3R7F",
                    "4e61": "orxH,hzBx,hAb1,lozz,il39,ewDp,bsZx,ceDF,fi1P,9bdp,67CF,4BFV,3QBh",
                    "620c": "3QrP,7EKh,9Xgp,jS1p,jT31,c+Gz,c/3F,orNj,m9uV,pcpP,dM21,8qlh,3RCV,7FVh,67wj,9b41,g2SV",
                    "5bb4": "pcab,mVTN,j563,m8q9,m9y1,j6e1,jS7z,jSSx,dMex,dLvF,jS7F,gOPz,gPyx,bsJP,bt/9,dLRr,8pIF,6UuN,67P9,3RCV,3Qy3,4BFV,6UrF,btFh",
                    "6ea2": "mVf3,kCYF,gOwP,ewep,3QuX,bsZx,nGwb,kDlF,j5QX,nH2F,j5lH,j6e1,c+JH,gP9x,gPsb,ceN1,4BIX,cd/1,ceGN,4CoN,ceez,4BYF,cer3,4C99,4Bzz,4CBh",
                    9685: "3Qy3,oqV9,orbV,hzBx,dLBV,bt6V,9aux,oroj,orZV,gPHV,gP6p,orop,kDfj,kDQV,orH3,9b79,8q5z,9bjF,aIWr,7FIN,3Q+b,dLLh,dMu9,68c9,3RwF",
                    "65e9": "nGdr,nH2F,g2MF,g1Xx,nGdx,jS4r,jSVF,cdyP,ceQ9,g2kr,3R4x",
                    7504: "nFWH,nGzp,nGaj,ewep,nGmP,ewqV,jRTX,jSnh,ewAh,ew51,jRU1,aHUP,aIrh,c+Gz,67dF,4BgP,6Ulp,nGCr,nHf9,nGLP,4BYF,7Fwh,ikYP,ilfF,5n7x,4ClF,4Cv1,7FVh,fhHX,btIp",
                    "663c": "bsGH,ewbh,hzBx,nGdx,nH2F,j64F,j5fx,j5Hz,fhOh,dMhF,ceQ9,ewkz,ex0p,7Fzp,7ETF,ewkF,bt0z,btIp,4BjX,4Cv1",
                    "8bc5": "oqV3,lnQN,hzlP,hzBx,4Btp,9XsV,4BVr,mVNx,mWgN,4CoN,gP9r,gPEN,btRH,btmx,4BIX,4Cy9",
                    "831c": "3QEj,c+Ap,c/sF,3RwF,5naz,5mip,7ETz,8pOV,9aH1,aIo9,gP09,gPiP,9b0V,8qf1,8qop,gPHP,gOD9,lnuP,loM9,pc0P,ikzV,il33,pcw9",
                    "75a4": "jRQP,gOGh,bsGH,ewhx,3QrP,6TVh,9Xjx,lnKx,loM9,oroj,lok1,7FS3,4CrV,4BSp,5my1,hzO1,hAtN,btRN,bta1,btvP,hA7V",
                    "78a7": "nG0X,nGzp,jSnb,jRU1,fgSP,hzXp,nGjH,gOSN,pczb,mVWV,mVQF,g2nF,g2SV,mWjV,mVWV,j5Hz,j6aV,c+nP,c/F9,c+Wb,9XpN,6TLV,3QNH,9XpN,9Y8F,3RwF,5mrH,5naF",
                    8521: "mV8P,mWq9,pc3X,kD61,pcsX,kDv1,kC/H,g1L1,j5iz,j5Bp,c+Dx,aHUV,hzEz,g281,fh0b,dLvF,aJa3,dMbp,gPm1,j5KN,j67N,ex0p,dLBP,dM8h,aI8r,aIZF,4Bqb,8pS1,aIAz,5mNF,3Q+h,8qi3,4CrV",
                    "7a0b": "mV8P,orf1,nGdr,3QHx,ik7H,ikG9,9X0H,hzBx,gOMr,c+Q1,nGzj,nH5N,j67N,j5Bp,nGzp,fhm3,fi51,aJ3P,aIrh,5muP,5nqh,fhL3,5m+9",
                    "523a": "m8jP,m991,cdIb,ikkh,ikVN,cehN,pc3X,3QU1,66WP,9Xjx,g281,ewtX,9aZN,m9ij,9Y2p,pcRX,6891,3Rtx",
                    5824: "ikaP,ikD1,or2r,aI8x,8pmH,bta1,nGzj,nH5N,gPEN,gP6p,nGzp,kDfj,kDNN,dLEX,dMu9,dM53,4C99,9XY3,9YeV,btjj,4BzF,9aNb,5mQN,4C61,4Cy9",
                    "77ed": "nGaj,gOtN,kCPb,kD99,ew1P,ewAh,kCYz,bsZx,4BdN,bt0z,8pV9,mVHb,mWth,j5Er,j6aV,c/yV,c/0x,j5Ex,btpz,6UB1,btUP,5n1h,5mB3,5nqh",
                    "8bfd": "oqRX,lnKx,hziH,hzyp,5mip,aIeN,kC/H,kDlF,fhfP,fhyF,9XsP,9XLF,pcjz,3R7F,pczb,3Rnh,kDBb,kDX9,fi4X,fhOh,9X/b,9Yoh",
                    "67d1": "jRQP,jSh1,or2r,3QHx,bsGH,jS4x,gOMr,dLI9,j5v3,j6kh,oruz,4BYF,dLUz,dMkN,682H,67CF,orWH,4CoN",
                    "56fa": "4Bn3,nG49,nH8V,4CrV,j5fr,j61x,m8Yr,ewGx,ewqP,ewW9,9XY9,9XsV,ewqV,6TS3,6UWV",
                    "79be": "mVlj,orTF,mVNr,3R4x,hzlP,hAD9,7EDX,cdXV,hz+x,hA1z,btFh,7FS9",
                    "60f6": "ew1P,jR+h,pbTr,3QHx,kC/H,gP09,pczb,mVWV,mVNx,g2kx,g2SV,mWjV,mVWV,jStr,jS/V,c+Wb,c/F9,9bpP,9aQp,4BM3,4Cy9,c/g3,4C99",
                    "7ee7": "or5z,hzlV,hzEF,kD5X,bsJV,cd/1,66WP,7F11,m8Sb,4BPh,4Cy9,m8/z,il01,ilfz,m9y1,g2nz,g2Z9,orNj,67Vp,8q2r,g2Gp,ex0j,9bt1",
                    6559: "m8q3,m8Sh,pbZH,hzHN,hzlP,hA4N,mVQz,gOVV,aHRN,ewkz,ewGx,cdXV,5muV,3QEp,8ppP,aIAF,fhyz,j5R1,orKh,j5QX,j6kh,j67H,dMhF,9Y2p,6UB1,3Q+h,fhEP,9X/h,67/F,3RJ9",
                    "548e": "fgVX,jS4x,nGjN,lnNz,loaF,gP3h,cdOx,aHY1,hzBr,ewx9,c/3F,cekV,ceQ9,nGOX,ewT1,kDBb,g2Z9,3QKz,9XmF,9Y5x,3Rtx,5moz,5n7x",
                    "523b": "pbWz,mVE9,lnuP,logV,kD2P,fgZ9,g2b9,ikMj,dLBV,9Xa9,4BjX,6U2F,9Xz9,ewJF,9Xz3,67IV,m9fb,9bah,pcOP,5ngV,3Rtx",
                    "635e": "jRQP,jSh1,cdyP,fhj1,pbTr,5mlx,3Qv1,m8P3,m9B9,orxH,ikVN,orTz,ilfF,dLI3,gP09,gPO9,dMu9,ce23,ceGN,5naF,3Rk9,3QQP,6Ulp,9aWF,fhEV",
                    6482: "jRNH,jSh1,pbTr,5mlx,3Qv1,cdyP,g281,nGwb,nH8V,hAwV,hzUh,nGwh,lo1b,loFV,nGOX,hAb1,gPfH,ewx9,fhvr,fh+N,ceo1,9XpN,dLRr,9Yl9,3Q+b,9aNh,9bmN,3RzN,5mEb,5ndN",
                    "7eff": "or5z,hzlV,hzHN,kD5X,bsN1,cd/1,6TLP,8pS1,nGwb,nH2F,gPyx,kDfj,kDKF,gOYX,gPO9,ewAb,btsN,67mX,aIK1,gPlX,5mX1,3R7F,ewSX,btFh,9bgx,7FIN,68c9,btFb,excV",
                    9530: "hziH,oq/p,lnB3,lnTV,gOwP,gOVV,cdvH,cd/1,gOJj,3QEp,8pS1,nGwb,nH8V,kDy9,fhL9,dLUF,j5rX,j6kh,5mEb,ce5h,ceJV,5ngV,cehH,5mQN,cexj,5n4p,5muP,5nqh",
                    5976: "j4YH,j5v9,dLF1,9XpN,7EQx,4BgV,pbWz,cdC1,8pV9,mVHb,mWgN,fhUx,fi89,5ngV,3Rqp,mVWP,dLXN,6Ulp,3QQV",
                    "76d8": "mVAX,pcah,bsTb,dLsx,fh9F,m8CF,m9lx,dMex,ceo1,hzlP,hAD9,kDcb,j5KN,g2eb,dLXN,4Btj,aI5p,aIZF,4ClF,4BgP,4Cy9,4BM3,aIo9,aIGP,4C2V",
                    "94fa": "ik7H,or2x,lnEb,ln+9,hzoX,hzO1,c+kH,c+Q1,hzyj,4Btp,7F11,kDcb,kD+h,orTz,m9y1,3R1j,hzXp,hAA1,5nk1,3RwF,dLOj,dMr1,9aQj,9bt1,pcw3,4C99",
                    "7fd8": "kCFP,m8Sh,ew1P,gOPF,jSk9,oqYb,j5fx,ewx9,g2hp,cdyP,ce8p,4BgP,6TVh,cdLp,cdXP,5muV,4BJ1,4CrV,6V19,mVNr,mW19,9b79,7FgF,jStr,gPfN,aIuj,g2A9,mW7j,mWjV,9bpV,7FCx,jSPj,gPBF,ceub,g2SV",
                    "5fcd": "nG7b,nH2F,fhUx,dM21,nGFz,ikMp,ewnN,c+xh,hzyj,lnTV,5m8X,aI5p,bt3H,67gN,4BJ1,4Cch,8qrx,c+Zj,9XRV,btOz,6V4h",
                    5546: "pcab,mVQF,m8jP,m9B9,kC/H,ikG9,hA4H,jSMh,3QBb,hzvh,hAtN,5ndN,3Rnh,cdRz,fhm9,fhBH,cexp,bt6P,btz1,6UB1,6U8V,bt6V",
                    "4f8d": "g1HP,kCVx,or8N,kCVr,3QHx,ln+3,loFV,pcsX,gPm1,gOVP,gPRh,cd+X,ceQ9,aIuj,7FjN,gPyr,5n7x,3Rh1",
                    9882: "ev+H,ikh9,oq/p,or8H,jSh1,fhsp,gOPz,bsWp,66+1,8pV9,cdXP,6Uih,nGzj,nH8V,nGYj,jSJ9,9aWz,jSwF,jS/V,9bpV,g2Db,9X/h,6UB1,5mQN,3Q+h,8qoj,4Cy9",
                    "70eb": "oq/j,m8IV,kCIX,j5fx,c+qX,ikzV,nGt3,nH5N,j5v9,j6e1,dMnV,c/mp,j5KH,gP9x,ewu1,j61r,g2Dh,dLXN,9aur,cdXV,c/3z,aIAF,9aTx,6Uih,5muV,4Bwx,3Qy9,aIAz,8qbV,6UHh,5naF,4Cy9,9bdj,btOF",
                    "541e": "nGaj,nH5N,j52X,j6h9,nGCr,ikJh,ewqV,c+Dx,bsJV,j5KH,ewZh,bt/9,3QKz,cdRF,cexp,3Rqp,5moz,5n4p",
                    "7fc1": "ikaP,orf1,orDX,j6h9,m8Vj,gOSN,il39,jSCP,gPvp,dLj3,dLLh,5mEh,3QQV,cdIb,9XmF,6TOX,9aH1,dLUz,dMkN,5ndN,3Rqp,cehH,9XY9,6Urz,9Y5x",
                    "54b8": "3QrP,9aoh,kCPh,kDQV,gOMr,gPcF,c+Gz,c/0x,7Fdx,7ETF,c+GF,orKb,mWdF,pcpP,dM21,8qlh,3RCV,6V19,4BVr,6UB1,aITp,hAtN",
                    5211: "mV8P,mVTN,fgSP,fhEV,mVor,c+Dx,9arp,4BgV,mVHb,3Q+h,m9fb,9bah,pcRX,5nk1,3RwF",
                    "70df": "ev+H,jRX9,pbQj,cdLp,7EH9,4BdN,cdLj,8pS1,g1Uj,jSh1,3Q+b,nGwh,nH8V,3RCV,hz+r,hAqF,lon3,ewW9,9XIx,ewW3,aIZF,67tb,685V",
                    "59e8": "j4YH,j5oV,aIbF,5m91,or2r,cdC1,7F11,m8LX,m9y1,j5v3,j67N,g2PN,g2eh,c+Wh,c/C1,aJ71,9bjF,pcsX,c/9V,8q5F,67wp,3QU1,cenX,7Fzp,67/F,3RJ9",
                    "72b9": "hzlP,orbV,aHUP,gOSN,oqOP,kCVx,gOSN,dLBV,7EZV,67gN,3QBh,ikG3,ilp1,nGYj,kDQV,pcsX,fhEV,9aWF,6Ulp,3QQV,fhOb,5n1h,4Cfp,4Cv1,6V4h",
                    8574: "mV8P,mWq9,pc3X,jSh1,pcsX,jSG1,j5iz,dLg1,dLvF,g27X,8pt1,9aAN,3QuX,6Uc1,j5Bj,j64F,dMhF,dLOp,j5Bp,g2hj,g2MF,4BPb,aIrh,aJ3V,4CrV,aIDH,4B/N,aITj,4Cfp,4BFP,4CBh",
                    "4ed7": "dLcP,or8N,jS4r,3QHx,j5oP,j6kh,pczb,btC9,7FjN,3QU1,g2eb,aIDN,6UKp,4Cy9",
                    "75d4": "kCFP,hzvh,cdvH,fh6x,pcgr,nGLV,4BjX,8pCp,aI8x,mVox,mWq9,j5oP,j6e1,m95P,fhEV,fhcH,fibh,bt6P,bt/9,9Xz3,6UrF,ex6z,5naF,3Rh1",
                    "6ecb": "nG0X,kCYF,hzlP,fh6x,4BjX,cdOx,ori3,kDlF,jSFX,orTF,j5iz,j6h9,hzXj,cdXV,cebx,fhBH,5muV,6UuN,8q5z,67IV,hAkj,btvV,btLx,fi1P,4C2V,685V,8qxH,3RJ9",
                    "6c28": "3Qy3,67n1,aIAF,aIQb,aHY1,dLI3,8pFx,6Ulp,4C99,cenX,fhI1,fgZ9,cdF9,fhsj,gOZ1,hzs3,hAnx,btIp,3RCV,6V19,kDNH,kCVx,j4/P,or5F,mVor,mWn1",
                    5317: "66TH,9aH1,hzlP,hzO1,oreX,4BJ1,8qH3,6891,5ngV,5m+9,67IV,orAV,gPiP,j6e1",
                    8116: "4BdH,9X71,nG11,nGmV,5muV,3QHx,ikdX,ikzV,c+qX,c+MV,m8LX,m9B9,pcw3,il39,ewAb,ikJh,ilp1,exg1,fhvr,fh+N,btC9,5m+9,3RaN,aIo3,aJdh",
                    "6f6e": "oqRX,m8zx,ikaP,g1Up,5m8X,c+Dx,m8FH,m991,pcdj,j5Bp,j5lH,j5NV,cekV,cdUN,j5lN,g21H,g2tV,9aur,9b41,ce8j,3R1p,3RaH,7Ft9,btFh,nGVh,nHc1,5nk1,3RwF,dM8b,dMr1,j6dX,j5Xh",
                    "5e62": "8ppP,kCFV,kD2V,9XsV,9axF,pbQj,3QEp,pcmH,mW4h,m8P3,m9y1,loaz,ikYV,il6b,lowx,ikG3,ils9,g2hj,g2PN,9YbN,9XFp,g2hp,c+Zj,c/vN,7F43,7FLV,4Cy3,4BFV,g2wX,4C61",
                    "5f53": "nG7b,hzR9,pcjz,g2nF,hAaX,mWn1,g1Rb,g2SV,3RCV,aI5j,aJ3V,5mc3,5ngV",
                    "4f97": "pbWz,ev+N,jS1j,3QEp,3QTX,nGq1,nHc1,5nk1,3RwF,j5Bj,j64F,fhyz,fhUx,9Y5x,9XLF,fhyF",
                    "7e41": "kCFP,pbTx,mVib,mVTN,kCSj,kDlF,ewJF,ewbh,kCSp,jSdP,ikG9,hzHH,fhm9,hzlP,hA7V,j5NP,orNp,lon3,loM9,loFP,hAqF,g2Gp,ewPV,jSJ3,gPyx,exj9,ewAb,cdLp,ceeF,dM8b,aIrh,9aoh,9bjF,btFb,7FLV,3QrP,7EWN,9aWz,5mNF,3QX9,6UHb,4Cv1",
                    "526f": "nG0X,nGP1,kCSj,kDlF,hA1F,hzyp,kCSp,4Bqb,dLmh,dLXN,6UuN,6TVh,aI2b,aIDN,dLEX,6Uc1,lotj,9Y2p,os0X,5nk1,3Rtx",
                    "8d21": "nG7b,nH5N,nGCr,j5Ex,j4/P,j6h9,9aur,gOMx,gPyx,9bgx,dLRr,9aQp,6Uc1,4Bk1,9b0P,4Cv1",
                    "7f55": "ikh3,nG49,nH8V,illV,hzBr,m8Sh,logP,hAqF,g1Uj,g2MF,bsMX,btY1,g2kr,3R4x",
                    "69d0": "jRNH,jSh1,aHRH,jS1p,hzyj,ewqV,pbQj,3QEp,pcw3,m8/F,m8Sb,m9uV,excV,ewAh,m8Sh,ikJb,illV,m9c3,dM21,9aZN,3QQV,cer3,5m+9,4Cch,4Cv1,6V4h,c/vH,8qop,9Yi1,btUP,8qH9",
                    6025: "hzs3,pc79,mVxP,mW4h,j5KN,j5fr,j64F,ceDF,cdOx,g1+z,g2MF,4BgP,9Xgp,9XvX,5my1,4BM9,4C99,6UKp,btjj,8qbV,aIZz,68fh",
                    5956: "nG43,lnNF,g1KX,j5oV,orbP,dLBV,j5v3,pcpV,mVQz,mWjV,ilcx,ewGx,jSzH,hAhh,bsJP,bt/9,dLRr,9aQp,6Uc1,3Qv1,aIxr,6UB1,3RG1",
                    9888: "nFZP,nGq1,g1EN,j5iz,gP3h,dLfX,dLI9,dLsr,7EQx,66WP,8pYh,orlb,os7h,orKb,jSG1,9aTr,jStx,jS/V,9bpV,g2Db,9b79,67CF,3QX9,8qoj,4Cy9",
                    "52d8": "lnuP,lodN,oqYb,cdIh,orlb,ce5h,ikkb,ikJh,fhpb,fh0h,cdvH,cehN,cdF3,6719,67zx,7ENj,aIeN,btd3,8q2x,j5Hz,j6e1,6U+1,4Cfp,orKb,dM8h,9b41,3R4x",
                    "8fa3": "pbQj,mVuN,lnuP,lo1h,j59b,gOMx,fhcH,jSk9,fgSP,fhph,aHXX,aIrh,fh9z,9XmF,7EQx,3Qv1,lo7r,loM9,pczb,3Rnh,ikPr,ilp1,c/C1,c/0x,ikPx,5mxX,7Fdx,9XRV,c/jh,aIWx,8qxN,68fh",
                    "5e18": "pcab,m92N,hzs3,m8q9,m9uV,hAwV,ew83,gOPF,jSk9,jSzH,hAkp,exg1,5mij,c+Ap,c/sF,67/F,4Cch,gP9r,3R4x",
                    5364: "pcgr,j5Ex,mVNr,mWjV,3QBb,j59h,j67N,3RzN,g24P,c/3F,8qlh,8pOP,gPp9,5mfb,5ndN",
                    "5e3d": "9ahX,lny1,lnX1,9Xw1,9axF,pbTr,3QHx,ikMj,nGzp,nH8V,illV,ikMp,lo4j,loFV,3R4r,fhvx,fi1V,3RCV,cebr,ceJV,9aTr,9bpV,5mKr,5ngV",
                    "8c0b": "oqRX,lnKx,ik7H,ikkh,674h,9XpN,m8FH,m9B9,pcab,g2eh,g2MF,pcIF,j5yb,j64F,cdUH,ceQ9,g2tP,3RdV,5moz,7F7h,cekV,7FCx,5nn9",
                    "759f": "kCFP,gOJp,bsGH,ewhx,3QrP,8pCp,aI8x,lnKx,loM9,pcgr,mV+1,hAwP,hzUh,5mEh,5nn9,bt3H,bu2h",
                    7968: "nG0X,nHc1,nGt3,gP09,nGLP,gPiV,kCPb,kDNN,gPEN,gOGh,kCPh,dLpj,dMhF,9X3P,9Yl9,4BgP,8pOV,9XLz,5mNF,3QX9,8qi3,5nk1",
                    "6f5c": "oqV3,lnNF,ikaP,fh3p,5m8X,c+Dx,m8IP,m92N,j5lH,j5KN,pcab,j5yh,gP09,dLyN,hzUb,fhyF,m9c3,m9uV,j5QX,j6e1,pcFr,j61x,gPvp,dL+V,hAnr,dMu9,3QX3,ce29,ceDF,3RwF,9aK3,9bjF,5mB3,5naF",
                    "7f3a": "ikaP,pbTx,lnEb,lo1h,g1HP,g2hp,lnNz,6U2F,cdBX,6TP1,6Uih,ce5h,kDir,kDQV,dMkN,dLOj,dMu9,pcw3,dM59,9b0V,6UrF,3QU1,c/g3,6UQF,3RJ9",
                    6740: "or5z,loaF,j5Xh,gPEN,g1Uj,ikD1,orQx,dLfX,dMu9,6713,bta1,hA1z,5mNF,3QX9,aIQb,68c9",
                    "65f6": "66ZX,m8n1,m8M1,7F11,7EE1,g1KX,g281,ikJb,ils9,fhvr,aIK1,pcFr,5n7x,3Rh1",
                    "542e": "8psX,m8n1,m8FN,bt3N,bsN1,orAP,g2b9,gPEN,lotj,fi51,g2nz,9aTx,67q9,3QKF,g2Db,67Sh,5n4p,4Cix,4CrV,6V19",
                    "762b": "jRQP,hzvh,cdvH,ewep,4BgP,9Xgp,m8wp,m9B9,pcdj,mVTN,iktz,ikMp,aIl1,67ax,ewnH,7Fdx,dLOj,gPfN,kDv1,kDEj,ilfF,hA7P,hAD9,dMqX,dLXN,9XOH,9Yi1,5nn3,5mQN,gPfH,3RaN,hAnr,5n7x",
                    6345: "jRNH,jSh1,pbQj,5mip,3Qv1,bsGH,ewqV,orlb,orZV,jSJ9,loaz,il6h,3R1j,ikMp,ils9,68c9,3RzN,dLOj,dMu9,9Yl3,9XFp,il6b,4Cch",
                    "4f2a": "fgSP,jS4x,or8N,jS4r,3QHx,orlb,loaF,j5rX,j6e1,685V,4Cfp,9Y5r,c/g9,pcw3,fhEV,9XIx,4BFV",
                    "5ab3": "j4/P,j5v9,cdXV,6TYp,4BgV,or5z,cdC1,7F49,pcw3,m95V,m8Yx,cebx,ceJV,m9uV,m95V,j5Er,j6aV,g2SP,g2kx,5mxX,9XFp,9XLz,5mNF,4B/N,4ClF,6UTN,aIN3,8qop,9YbH,68fh",
                    "659c": "hziH,pbZN,jSwF,hzvb,hzUh,dLcP,dLRx,hzHH,5mrN,3QEp,66TH,bsWp,btd3,7FgF,mVTH,j5Xh,hA1z,c/jh,aIAz,aJdh,pcIz,3RwF",
                    "9a6f": "nFZP,nGq1,ewqV,lnEb,ew89,ewx9,67n1,4Bwx,9aeP,aIeN,oruz,9XLF,7Fdx,3QX9,mW4b,67Sh,orZP,3RCV",
                    "51b6": "m8jP,ikqx,66WP,dLvF,orxH,gOVV,hAwV,m9fb,g2Z9,3Q+b,c+Wh,c/vN,3RzN,5mEb,5ndN",
                    9896: "pbNb,j59h,iknp,ikD1,kDch,m8wj,nGwh,fgVX,gP3h,cdyP,ce8p,fh9z,3QKF,66WP,8pzh,cdRF,7F7h,mVKj,mWq9,mW7j,j5R1,8q5z,j5HF,j6aV,8qAV,fhOb,8qi9,5mQN,3Q+h,8qoj,4Cy9",
                    5458: "or5z,orQx,j61x,j5iF,or5F,8pFr,g1Xx,g2PN,8qxN,dLUz,8p/p,67n1,3Qv1,8qbP,3RJ9",
                    "6be1": "m8jP,nGwh,hzoX,hzUh,cdvH,ce8p,mVor,5mlx,4BzF,4CrV,6V19,orH3,fhL9,jSJ3,jT31,fhyz,fh+N,8qxN,8q5F,fhyF",
                    "76f4": "m8q3,m9uV,pcjz,ikMp,4Bzz,iktF,il9p,4Cfp,fh9z,fhRp,cdRz,cexp,9axz,9bdp,4BgP,4Cy9",
                    5986: "kCIX,gOPF,7EAP,dLvF,pc3X,3QU1,ikG3,ilvh,orH3,cebx,9X/h,7FFF,4Cy9,5mEb,8qf1,btIp,iliN",
                    "7eeb": "66TH,8pOV,cdXP,bsJV,kD2V,hzBr,hziN,oq/p,mVHb,mWgN,j6dX,j5s1,j5QX,pct1,dLEX,hA1F,hAkj,dMr1,ewPP,9Xz9,c/6H,c/sF,9bah,6UxV,3QU1,3RFX,5n7x,7Fq1,aIxx",
                    9509: "oq/j,hziN,lnB3,lnTV,gOVP,gOwV,cdvH,cd/1,gOJj,3QEp,8pS1,mVQz,dLI9,ikPr,ewPV,mWjP,ewZh,ilfz,exj9,btgb,btY1,pcw3,5m+9,5mxX,5nqh",
                    "62cc": "3QuX,5mip,pbQp,bsGH,fhj1,jRNH,jSk9,mVE3,ikVN,mWmX,il9p,pcw3,3Rk9,g2b3,g2Z9,aIhP,aJdh",
                    "8fab": "pbNb,lnNF,lnuV,ln+9,jRX3,g1Up,jSdP,fh6x,fgSP,fhj1,aIkX,aHRN,fh6r,9Xjx,7ENp,3QrV,oruz,gOZ1,hA4N,jSCP,btd9,btvV,67mX,7FmV,pcCj,m9rN,logV,loPh,jSJ3,g2Jx,jS/P,fhXF,fhI1,fibh,fhXz,3RwF,aIJX,aJdh",
                    8336: "mV8P,mWq9,pc0P,j5oV,pcw3,j5U9,c+nP,fh9F,jStx,g2Dh,c/F9,ceGH,cdLp,g2kr,5mKx,3QX9,5m8X,9Xw1,9XUX,5ngV",
                    "5ba0": "j563,mVf9,mWjV,j6aV,pcdj,mVTN,g1O3,g2SV,jSCP,hAkp,kDfj,c+T9,9XsV,4Bk1,dLXH,5mQN,4C2V,4CoN,6U+1,dMhz,9XY9,67q9",
                    "78cb": "5mfb,fh0h,fhfV,7EZV,7EKh,cdvH,fh0h,lnNF,lnuP,ln+9,orrr,lok1,lotj,orWN,lo1b,loM9,hzUb,hAA1,dLI3,dMu9,lon3,hAb1,dL+V,aIAF,8p/p,4BCN,9XLz,9Yi1,9X/b,4Cch,4BPb,4Cy9",
                    "4f43": "g1HP,pc0V,jS1j,3QEp,4BM3,mVE9,mWn1,4Cv1,fhm3,fi51,67q3,6891,mW13,67P9",
                    "60f0": "ev+H,jRX9,pbQj,3QEp,kC/H,hzO1,m8LX,m9B9,pcsX,dLyN,jSwz,jS/V,jSMb,g2Dh,g2eb,g2Z9,3R1j,dLOp,dMnV,5ngV,3Rtx,aIuj,aJ3V,7Faj,7FLV",
                    "75af": "j4/P,gOGh,cdvH,ewep,3QrP,9Xgp,m8wp,m9B9,orrr,m95V,3QEj,6U8V,9Xw1,ikD1,ilfF,9bjF,682N,4Cy9,6V4h,fhpb,btvV,7Fzp,6Uf3,9XLF,g2Dh",
                    "6b4c": "nFZP,nGFF,lnB3,lnQN,hzHN,hzs9,lnB9,fgPH,fhBN,6TS3,cdF9,cdUN,8pLN,8pw9,nGwb,67th,4BzF,gPcz,pczh,jSCP,jT69,g2PN,gPsb,btFh,7Fq1,3R1p,ceub,9bgx,6UTN,4Cy9",
                    7845: "lnuP,lo1h,lnNz,g1Rh,cdvN,5mfb,fh0h,fhj1,7F11,7EKh,kDir,kDU1,fhpb,fibh,orKb,fhOh,9XIr,9Yl9,4BPb,4CBh,dM8b,4Cch",
                    "9e3f": "nG0X,lnKx,hzlP,ewep,4BjX,cdOx,jS7z,jStx,jSgX,9Xw1,8pFr,btmx,orKb,m95V,jSFX,hAnx,fhOb,gPEN,m9uV,m92N,cehN,ceN1,5ngV,3Rnh,7Faj,9bjF",
                    "660f": "orQr,nG7h,dLmh,g2b9,j59b,j6e1,nGCr,j5KN,ex0p,dMkN,gPL1,3QEj,c+Ap,c/mp,3Rqp,9Xgj,9Y2p,67Vj,677p",
                    8270: "mV8P,mVE9,fhcN,66WV,j52X,8pV9,7Fwb,3R4x,nGCx,nH5N,ex9N,ewGx,j5Er,j67N,dMu3,9Y2p,ewSX,9Y2p,6UTN,4Cy9",
                    "501f": "gOtH,pbZN,lnHj,3QEp,m8LX,m9y1,gOSH,gPRh,pcjz,gPcF,gPvj,pcCp,3QX3,dLI9,dMkN,3RzN,9Xz3,9YbN,5ndH,5mB9",
                    6350: "kCFP,kD99,cdyP,g2b9,pbTr,5mlx,3Qy9,orrr,orZV,j6aV,j5Ex,orrx,3R1j,g2hp,g2W1,5nk1,3RwF,c+Zj,c/C1,9bsX,9aQp",
                    "80ef": "4BgP,9Xa9,nG49,nGq1,67n1,3QHx,hzs3,hzO1,cd+X,cdF9,m8Sb,m9B9,pczb,jSCV,g2eh,m9fb,gPO9,gPfH,gPEN,dLOj,dMu9,dL+P,9XRV,9YeV,5ndN,3Rnh",
                    "9ece": "nG0X,orlh,kCFP,kDfp,nGgz,fh9F,fgSP,kCYF,jS7z,hzUh,jStr,pcw9,m95P,m9y1,hAwV,g2Jx,hA7P,m9lx,bsJP,dLvF,hz+x,ewW9,bt/9,cdRz,9Xz9,6713,8q2x,ewGr,5mKx,3QX9,9XIr,5ndN,9aZH,cexp",
                    "51cc": "m8mX,ikqx,7EAP,fh6x,lnTP,loCN,pcpP,hA7V,hzEz,hAD9,dLyH,gP6p,gPsb,c/C1,9aAH,ce8p,fhBN,ce8j,ceAx,7FmV,5mKx,3QKF,9XFj,67P9,3RCV",
                    5988: "j4YH,j5v9,cdXV,8pFx,4BgV,pbWz,c+r1,67th,nGzj,nH5N,dMhF,lodH,dLUF,dMu9,5nk1,3Rqp,9XCb,9Y8F",
                    "63cf": "jRNH,jSh1,bsGH,fhfV,pbQj,5mip,3Qv1,lnWX,loPh,pcjz,hA1F,pcIz,hAqF,3QX3,fhm9,fi1V,3RCV,aIo3,aJ3V,5mB3,5ngV,fhHX,5mX1",
                    "852b": "mV8P,mWq9,pc3X,kD61,pcsX,kDv1,jRX3,jS/V,jStr,ewGx,hz+x,hAqF,iktz,ewkF,ew1P,exj9,dLsr,9Xjx,9YeV,5ngV,3Rnh,cdOr,ceGN,3Qy3,7EQx,7EZP,4BM9,7Fdr,5mQN,8qi3,67Vp",
                    "76c6": "gOwP,nGq1,nGOX,jSSx,hAD9,j5fr,j5+p,ewZh,c/6N,j5Bj,fhj1,cdIh,4Bwr,aI8x,aIWx,4Cix,4BM3,aIo9,4C2P,aIGV,4BgP,4Cy9",
                    7566: "66ZX,lny1,ln+9,7F49,7EE1,fgVX,fhm9,lnKr,7EQx,kDir,kDU1,fhpb,fi89,orKb,fhOh,9XIr,9Yi1,4BM3,4CBh,dM8b,4Cch",
                    "6c30": "j52X,or5F,m8zr,m9y1,kCYz,kDKF,ikkb,iliN,c/px,6UTN,4Cy9,7FVh,gOPz,gPsh,fhHX,fhcN,dLpj,dM8h,ikMj,c+Zp,4Btj,7EZV,cdXV,cekV,67IV,4BYF,9b0P,9aDV,aIhP,aIGV",
                    "8fb1": "5m5P,bsTh,nG7h,nHc1,lnQH,lozF,ikkb,ilp1,ikCX,cd/1,dLUF,ikPr,ewW9,ceJV,fhL3,gPyx,9Xgj,9Yl9,8pRX,67wp,ceub,5n1h,3RdV",
                    "8bbe": "oqYb,lnQN,hziH,hzyp,5mip,9Xw1,g24P,ikJh,jSqp,nGzp,nGYp,il9p,hAnx,hAD9,ewtX,ex6F,9X/h,67CF,3QQV,ewDj,9XON,6UHh,4Cy9",
                    "758f": "mVbX,mVHh,iktF,7ETF,ewkz,ewx9,hzs3,6TS9,66TH,8pV9,pcmH,m9fh,kD93,kDX9,kDuX,fhsp,g2PN,ilcr,exg1,3QTX,67wp,7Fdx,c/0x,c/cX,4C61,c/pr,5n7x,4ClF,4Cv1,6V4h",
                    "9ad3": "hzs3,nG49,nGmV,hzKV,lnB3,lnKx,hzBx,fgPH,hziN,hzR9,fhm9,3Qy3,ew89,ewqV,5muV,3QHx,9aDP,9al9,cdF3,cdXV,m8P3,jStx,fhm3,fhvx,67zx,4BM9,67zr,4C61,4Cy9,mVNr,mWq9,pcCj,gP9x,jSFX,jT31,hA7P,hAD9,jSSr,hAnx,6UAX,fhI1,fi1V,7FLV,6UQF,9YeP,9XV1,cenX,ceJV",
                    "60d5": "fgSP,jRX9,pbTr,3QHx,kD2P,gP09,oroj,orZV,gPHV,gP6p,orop,kDfj,kDQV,bt9X,dLRx,gPiV,dLRr,dMu9,6891,4ClF,7F7b,9XON,dM21,dMhz,8qlh,67IV,3Q+h",
                    "4e38": "ikh3,j5+p,5n1h,4Cfp,4Cv1,7FVh,oroj,dLLh,9Xz9,7EWN,4Bk1,fh6r,9XRV",
                    "821e": "jRX3,pbZN,mVor,mWjV,mVrz,fh9F,mVHb,fhph,mVWP,fhEV,mW7j,fhRp,j5cj,j6aV,fgSP,fi89,9al3,ewqV,bsZr,btjp,8pV9,5moF,3Qv1,9axz,7F11,btpz,btY1,btsH,7FjN,7FP1,dMer,3Rtx",
                    "7fd4": "oqRX,lnKx,kCYz,ori9,kCFP,kDch,g1KX,g2eh,bsJP,btgh,kCYz,9XmF,6T/x,3Qy9,mVKj,mV+1,5mX1,3R4x,j5yb,g2nF,9aNb,dM21,mW4h,mWn1,5nk1,3Rtx,j5Xb,g2PN,aIQb,fi51",
                    9700: "nG7b,nH8V,nGFz,g2nF,hzs3,lnB9,loJ1,hAA1,j5cj,j5yh,gOJj,gP3h,j5NP,j64F,gPiP,gPBF,dLcP,dMu9,dLRr,btd9,3QEj,bsWp,btRN,btRN,5ndN,3Rnh,btd3,5mB9,btyX,5mX1",
                    "8c1a": "nG43,lnNF,hzlP,hzBx,4Btp,9aDV,pcmH,mW4h,lnWX,loM9,loM9,kDir,hA7V,gPsb,kDNN,gPO3,gP09,9aK9,67n1,3QKF,btmr,fh+N,7Fgz,ceJV,3R1j,5n1h,9bw9",
                    "8be3": "oqV3,kC/N,gOtH,gOJp,4Btp,9Xw1,pcab,hzUh,gP6p,gPHV,jT69,kDcb,mWjV,3Q+b,dLLh,dMkN,3RzN,9XCb,9YbN,67tb,682N",
                    "4e88": "or2r,orTF,j5HF,lnWX,hA4N,gOzX,gPO9,ceDF,gPcz,5mNF,3QU1",
                    "6fa1": "oqV3,lnQN,ikaP,fh6x,5m8X,cdRF,orlb,orTF,kDKF,kDch,orlh,hzKP,hA4N,ewMN,ewqV,hzKV,hAe3,hAA1,exg1,ewW9,hAe9,bt3H,bt/9,c/cX,3Rh1,5mrH,7Fap,btz1,8qop,6UTN,68fh",
                    7827: "mV8P,mVHh,mVor,gOGh,dLcV,674b,g1Rh,g281,7F11,7EKh,pcw3,ewW9,kDy3,kDX9,3R4r,ewGx,excV,3RCV,67zr,685V",
                    "9aa4": "nFZP,nGjN,dLvF,lnB3,dLg1,dLF1,5muV,3QEp,8pmH,9XmF,oreX,orKh,orlb,g2eh,orDX,ewT1,lo1b,lok1,j5QX,j5yh,fhfP,gPp9,mW4b,mWq9,iliN,g2Dh,kDEj,g2Z9,c+Wb,ex9N,9aNb,btsN,5mB3,9b0V,dM53,3Rk9,btC3,7FFF,5nn9,9bgr,ceN1",
                    "963b": "3QuX,oqS1,orbV,hzyp,dLBV,cd/1,9XsV,9arp,5mKr,nGCx,nH5N,5ndN,hz+r,hAtN,cebr,ceGN,5muP,5nqh",
                    "9e92": "4BdH,cdC1,m8n1,m8Yx,m8LX,dLF1,dLsr,m8zx,pbTr,mVxV,ikdX,ikMp,dLOp,dLg1,c+Aj,4Btp,67gN,9XpH,9Xgp,c+PX,4BJ1,67wp,aIuj,9aH1,3R4r,8qi9,8quz,3RMh,9Yob,9XIx,9XUX,orE1,orWH,9YbN,dMkH,dM21,hAaX,hAtN,loM3,loaF",
                    "5df4": "8qDX,685V,5naF,5mlx,674h,7EH9,nG49,nH5N,c/vN,fh+H,fgZ9,fhvr,nGCx",
                    "84d6": "mV8P,mWq9,pc3X,jSh1,jSFX,pct1,lo7r,j5v9,j59h,c+xh,c/sF,j64F,j5v9,hAe3,dLyN,hzKP,dM8h,bsTb,3QBh,6Uih,9aob,9aNh,btpz,5mNF,4C2V,4CoN,6V19,9aWz,9bmN",
                    9910: "pbZH,lnQN,nGjH,nGzp,m8wj,ikaV,lnEb,lo1h,hzEF,fgSV,jS1j,iktF,nGFz,nH5N,hA7V,logP,hAtN,j5Er,fhfV,cdyV,hz+r,fhL9,c/F9,g2eb,dLUF,67wj,3QKF,c+GF,c/jh,8qlh,8pIF,aIbz,aIQh,6Uor,3RzN,67P3,8quF",
                    "60e9": "kCFP,pbZN,fgSP,kC/N,hzyj,bsWp,mVE3,mWjV,mVZX,c/d1,ik/X,illV,jSnb,c+Wh,c+MP,c/F9,4BgP,9arp,9XvX,5my1,4BM9,4C99,6UNx,aIxr,7Fq1,9Y8z,68fh",
                    "8d50": "bsQ3,nG49,nGt9,btd9,j5iz,9Xjx,4BdN,9aAH,5mEh,nGFz,nH8V,hAwV,hA1F,nGFF,kDlz,kDQV,hAaX,c+Zp,ewJz,exj9,6891,4Cix,dM8b,8q2x,dMkH,7Fwh,4BVx",
                    "4f4e": "g1EH,pbZN,kCSj,3QEp,orZP,mW19,mVE9,5mB9,9XON,g2b3,g2Z9,mW13,g2A9,ceuh,7FCx,4CrV,7FS9,6UxP,3Rnh",
                    "953b": "j4YH,pbQp,m8q3,m8M1,hzoX,hzKV,dLcP,dLF1,hzyj,677p,9aDV,orAP,mVHh,4BPh,j5yb,j5NV,ewAb,ewPV,8pOP,aIK1,g2tP,il6h,nGVh,nH5N,iliN,hAwV,hAGh,4B/H,67P9,9Y8F,exg1,ewW9,9Y2p,6UTN,4CBh",
                    5420: "8ppP,lnuV,lnQN,9XpN,9X3V,hzNX,hAD9,nGYj,kDQV,pcsX,g2x1,btsN,6Uih,3QKF,g2wX,aITp,7FFF,4CBh",
                    "7aff": "j4/P,pbZN,m8wj,m8Yx,j5Hz,pczh,m98X,m9Eh,m9fb,iliN,m8FH,ikJh,gOJj,gPEN,bsJP,bt/9,gP9r,3R4x",
                    "96c7": "4BgP,9Xdh,m8wp,m9uV,illV,iknp,pcab,mVTN,cdOr,hzUh,ewqP,3QQV,hA1z,fhL9,ewtX,exg1,cd+X,ceJV,9aGX,9bpV,5mxX,5nn9,ewW3,5m+9",
                    "548c": "mVf3,nGmV,orrx,nGmP,3QQV,hzlP,hA1F,9aeP,dLsx,hzKV,g24P,ceeF,6UxP,m95V,m9y1,6U+1,8qbP,8qE1",
                    "714c": "ew1P,kCM9,or2r,cdOx,9arp,4BgV,cdOr,8pS1,g1Xr,jSk9,pczb,m95V,m8Vp,fhsp,fi1V,m9uV,m95V,ikMj,illV,ce23,ceQ9,8pYb,8qE1,4BIX,4CBh,cer3,4C99",
                    "7eaa": "or5z,hzlV,hzEF,kD5X,bsJV,cd/1,66WP,7F11,nGt3,nH8V,dMnV,g2SP,g2hp,5mHp,4BPh,4CrV,5nk1,8qKh",
                    9175: "nFWH,nGzp,nGaj,g1Up,c+r1,nGjH,dLyN,c+Wh,9XCb,9X71,4BjX,j531,j5yh,67th,66+1,loaz,loCN,pczb,hAhh,hzXj,hAD9,mWq3,hAnx,c/6N,aIrh,ewMH,exg1,cexp,5n4p,3RdV,8p/j,aJa9",
                    "5c31": "pbTr,m8IV,kCCH,kDlF,hzs3,hzXp,c+Zp,c+u9,hzs9,66TH,aI2h,c+JH,5mrN,3QEp,aIo3,7Fdx,hz+r,hAGh,mWar,jS/V,pczb,ewW9,aIK1,6UuN,3QX9,ex0j,5n4p,4Cix,4Cv1,6V4h",
                    "5ba2": "pcab,mVTN,j563,mVf9,mWjV,j6aV,fh0b,lo1h,j5rX,j61x,g2tV,c+T9,9X3V,hzNX,ewJF,ceuh,aJa9,3QKz,aIbF,aITp,3Rqp,5moz,5n4p",
                    "52b3": "m8jP,m9B9,pc3X,j5s1,pcw3,j5U9,ew83,hzs9,hAwV,excV,cdLj,ceDF,67Yx,3RdV,g2kr,aIrh,6U5N,3Qv1",
                    9563: "hziH,oq/p,lnB3,lnTV,gOwP,gOVV,cdvH,cd/1,gOJj,3QEp,8pS1,m8P3,m9B9,pcw3,kDv1,hA1F,fhm9,jSnb,hA1F,lon3,hAqF,fibh,hAqz,jS/V,g2kr,g2PN,9YbN,9XIx,g2kx,c/0r,c/vN,4BIX,7FgF,9XY3,5m+9,3RaN,8quz,4Cy9",
                    "5ce6": "pcab,m92N,m8jP,m9B9,ew4X,iktF,m8LX,c+Q1,m98X,c/d1,il9j,fi51,bsWj,4Btp,5ndN,btRH,3RzN,c/0r,5mKx",
                    "731b": "nFZP,j5fx,cdXV,6U5N,5moF,3Qv1,gOwP,nGmV,9X3P,fhcN,mVHb,mWgN,jSJ9,ewW9,c/3F,ikCX,ils9,4BPb,btgh,btUV,4CrV,4B/H,btsN,btIj,4Cfp,4BFP,4Cy9",
                    8010: "mV8P,mVTN,mVxP,iktF,5mc3,ikh9,ikSF,6UrF,5mEh,iktz,8pIF,ikG3,8pV9,j5KH,j6kh,pcLH,5ndN,3Rnh,g2tP,btIp",
                    "78d0": "nGdr,pbZN,dLfX,fh0h,hzyp,nGap,nGwh,ewAh,dLBV,ikaP,ikPx,lnNz,jSh1,hzEz,g281,jSwz,logV,nGLV,nH2F,lozF,kDNN,kDX9,dMu3,fhRp,j5KN,j67N,g2Gp,c/0x,bsMX,btY1,bt9X,66WV,3QKz,9axF,9bjF,3RwF,5moz,5naF",
                    "4ec6": "ev+H,kCVx,pc0V,kCVr,3QHx,pcsX,3Rh1,il9j,c/Ih",
                    "5ced": "kCIX,7EE1,8pV9,jSk3,67q9,pbTr,8pFx,nGzj,jSCV,pczb,hAhh,jSVz,nHf9,3R4r,hz+x,hAA1,5nk1,3RwF,dLRr,dMr1,9aTr,9bt1",
                    "97e7": "m8jP,m8Sh,ikdX,ikJh,dLcP,dLOp,9XFp,8pS1,pbWz,3QKF,dLUz,ikYV,mVQz,mWn1,6891,4Cix,mW7j,c/jh,7FmV,4BSp",
                    "8d4f": "or2r,lnX1,pcjz,loaF,lon3,orQx,hzs3,lnB9,loJ1,hAA1,ikwH,il9p,ex0p,ewnN,ikwN,7ETz,cdRF,ceAx,7FCx,3QuX,4BzF,67q9,aIAF,7FmP,3RG1",
                    "91ca": "nG0X,orf1,nGgz,3QKF,lnxX,j59h,j5oP,lo1h,gOwP,gP3h,8ppP,g1+F,fh9z,ce29,oroj,orZV,kDHx,g2hp,nGFz,j5Xh,g2Z9,dLOj,dMnV,9aK3,9bw9,gPsb,3Rnh",
                    9001: "nG43,kCYF,gOtH,gOJp,6TYp,5m5V,6TYj,4BM9,4Cv1,orlb,lodN,jSFX,orTF,jSk3,jT31,ewqP,exg1,jSFX,ewPV,btpF,9XFp,8pS1,dM1X,aIWx,7FLV",
                    "638f": "jRQP,jSh1,pbTr,5mlx,3Qv1,cdBX,fhj1,hzKP,oruF,lo4j,loJ1,6891,5ngV,4CoN,3Rqp,fhpb,ikSF,gP9r,gPyx,c+PX,c/sF,gPiP,7FmV,btgb,7F7h,7Fzp,btIp",
                    "5c6f": "jRTX,jT31,hzyj,aI5p,btIp,hAkj,9bdp,oroj,5mHp,4BVx,4CoN,7FS9",
                    "74ee": "ikaP,lnKx,orf1,pcpP,lotp,jSYN,j6h9,m8Yr,gOMx,hAe9,kDoH,g2Jx,ew1P,exg1,ewqP,3QBh,5mHp,bt3H,btFh,5n1h,4Cfp,4CrV,6V19,9aGX,6UuN",
                    "8d24": "oqYb,g1Rh,pc0P,fhfV,orlb,orZV,lowx,j5U9,gP6p,nGFz,jSG1,hAnx,g2W1,7EQr,fh6x,fhUx,7FCx,cebr,8p/p,67n1,4Bwx,3Qv1,7FmP,3RG1",
                    "578b": "mVbX,mVTN,hzlP,hA7V,mVrz,hzEF,ewhx,bsN1,mVHb,ce5h,mW4b,ewZh,orZP,dMnV,ceAx,9aob,9bmN,4BgP,4Cy9,cebr,4BVx",
                    "6df9": "nG43,lnNF,ikaP,fh3p,5m8X,cdOx,m8IP,m9y1,pcpP,kDlF,ikMp,ewkF,m98X,hAqF,exmh,67q3,fhm9,fhXF,8quF,8pV9,ce23,ceDF,ikYP,5mTV,4C61,4CrV,6V4h",
                    "5f5d": "pc0P,m8CF,m9c9,orbP,orNp,kDv1,jRQP,jT69,hzs3,g1Xx,g27X,ikMp,ew1P,ewAh,ikwH,9XpN,9X3P,ewnN,dLyH,btgh,j5U3,gPcF,gPsh,ilfz,dLUF,dMkN,fhXz,c/yV,dM8b,aIQh,9XRV,9XFj,cehN,ceAr,9Yi1,7EAP,7FS9,9Xz3,6Uc1,5muV,3QBh,9b73,3Rk9",
                    "6cb9": "nG7b,kC/N,hzlP,fh6x,4BjX,cdUN,3QX3,j5v9,j6e1,3RG1,c+T3,c/C1,67q3,6891,pcw3,67P9",
                    "915d": "nFZP,nGCx,nGdr,g1Xx,cdF9,nGmP,dLBV,c+Q1,c+Zp,3QuX,j531,j5Bp,67wp,66+1,9X6X,9XFp,mVTH,mWq9,g2kr,g30h,g2Gj,5mKx,685V,aIWr,3RG1",
                    "80c0": "4BdH,9Xa9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,c+u3,c+MV,pcjz,3R7F,7Fwh,fhm3,fi89,il33,orZV,fhL3,9Y5x,68c9",
                    "6ede": "nG43,lnNF,ikaP,fh3p,4BgP,bsZx,lnTP,loM9,pcab,ikJh,pcpP,ikYV,pcFr,ilcx,c+JH,gOSN,gPO9,c/F9,5mB3,c+T9,c/vN,6UTN,5n4p,g2tP,3RdV",
                    "6dc4": "nG43,lnQN,ikaP,fh6x,4BjX,c+GF,nGzj,j5oV,fhvx,orH3,jSwF,g2Dh,nH8P,jSPp,g2W1,3QTX,dLF1,dMnV,3RCV,9XvX,9YeV,dM1X,5mX1,5mxX,5ngV",
                    "5b89": "4BjX,67q9,9XRV,ewZh,fi83,fgSV,hzs3,m8q9,m9uV,illV,pcab,m95V,jStr,aI8x,8q8N,4Cv1",
                    "8f88": "mVbX,mVE9,jRX3,jSk9,hzlP,hzR9,g2b3,pc79,pcpP,fhEV,mVWP,mWn1,jSCP,jS/V,hA7P,hAD9,dMqX,dLg1,g2kr,aIbF,aJ0N,7FS3,7EAV,ceez,3R7F",
                    "818a": "4BdH,9X71,nG11,nGmV,5muV,3QHx,ikdX,ikzV,c+qX,c+MV,pcFr,mWgN,m8P3,m9B9,pcw3,btC9,btgb,jSnh,jSYN,btRN,gP3b,gPEN,dMkH,dLLh,9aK3,9bw9,btOz,4ClF,3Rnh,7Fgz,5mX1",
                    "5de2": "pbZH,m8th,jSaN,pcmH,m8Sh,jSzN,pcIz,m9c9,jSVF,iknj,ilfF,c/sF,c+Ap,iknp,g1Uj,g2MF,ikPr,3R4x,aHUP,aJa9,4BjX,6U5N,aIxx,7Ft9,67/F,5nn9",
                    "5e8a": "4BdH,9Xdh,m8th,m9y1,pcab,mVTN,g1+z,g2SV,jSwz,3R7F,677j,9Xw1,g2nF,btC3,9bgx,6U+1",
                    6321: "kCFP,kD99,bsJP,g281,pbTr,5mlx,3Qv1,nGpX,j5HF,pcsX,gPm1,j5+j,nHc1,gP03,gPL1,3RG1,btgb,btY1,67mX,6891",
                    "606b": "ev+H,jRX9,pbQj,3QEp,kC/H,gOZ1,3R1j,mVKp,mWq9,5nn9,3RzN,ikSz,illV,fhEP,fhXF,9Y8F,9XRV,fhEV",
                    "51e1": "4BgP,9aux,bt0F,nGgF,nGS9,6UE9,5n4p,5nk1,9bzh,ikzP,c/9V",
                    8986: "oqRX,os11,oreX,jSh1,orAP,jSCV,mVlj,mWdF,mWdF,jSVF,jS1p,mVlp,ew4X,j5lN,aHUP,gOZ1,dLsr,3QHx,g27X,jStx,ikJb,illV,gP6j,gPyx,ceAx,ce8p,gP6p,ewDj,ex3x,cehH,9aNh,aIAz,aIWx,7Ft9,5mNF,3QU1,9aWz,67Sh,4CoN,3RJ9",
                    5171: "j563,j6aV,oreX,cd/1,cer3,orH9,cdyP,ceQ9,4Bn3,9XCh,9XRP,4Cv1",
                    "7ff0": "m8jP,m8Vp,pbWz,j5iF,j563,j5v9,ce29,cdF9,j569,g1O3,g2b9,9aeP,9aNh,cdRz,3QKF,hzUb,orKh,hAD9,g2hj,g2x1,5mX1,3R7F,ewDj,btsN,6Uib,btz1,g2Db,g2SV,5ngV,3Rtx,ewZb,btOF,7Fwb,btUV",
                    "5f8a": "j52X,or8N,cdyP,g1Xx,jSdV,g1Xr,3QHx,3QX3,mVE9,mWn1,3RG1,ikVH,ilcx,aIWx,aIDN,ikVN,67q3,6891",
                    "75be": "j4/P,g1Rh,bsGH,fh6x,3QrP,8pCp,cdOx,lnKx,loM9,pcdj,mVWV,dLBP,jStx,gP3b,gPHV,cdUH,ceQ9,gPiP,aIGV,8q5F,67wp,3QNN,aIGP,8qlh,67/F,4Cy9",
                    "8bb2": "oqRX,lnNF,gOtH,gOJp,4Btp,9aDV,j5oP,j6h9,c+JH,c/Ih,pcjz,btpF,8q2x,3QU1,pcFr,3Rtx",
                    9759: "3QNH,4BM9,ewx9,ew89,3Qy9,8pw3,8pV9,btd3,bsQ9,gOwP,gP6p,mVKj,mV8V,jRX3,jSk9,gOPz,pbWF,pcsX,j5Bp,mVTH,mWgN,il6h,5n1h,3RaN,ikPr,illV,aJ3V,aIxx,ewDj,exmh",
                    "574e": "j4YH,j5v9,oq/j,9Xgp,8pmH,btd9,ewx3,hz+x,jSzN,orAV,jSzH,jT69,fh+N,gPp3,aIGV,6Uox,3QNN,cenX,8qop,67/F,3RJ9",
                    5566: "9aeP,lnuV,lnKx,bsZx,bsJV,j5iz,j5Ex,ori3,5mB9,3QNN,9Xjr,dLRx,nGOX,kDHx,j5KH,j6e1,g2qH,9b79,g2SP,5n1h,4BSj,4Cy9",
                    "655b": "hzlP,lnKx,or8N,mVuH,jStx,hzvb,hzXp,c+qX,9arp,dLvz,aIl1,dLOj,7F11,5m8X,8q5F,fhyz,orH9,j5NP,j6h9,j6aP,btOF,67M1,3R1p,fhHX,9bdp,3RJ9",
                    "864f": "pcgr,kDix,mVNr,mWgN,hAwP,kDX9,kCSp,bsWp,6TS9,4BgV,gOPz,hAnx,j5Er,ewGx,dLUF,dMhF,g2SV,aIbz,aJ0N,5naF,3Rh1,3QHr,6Uih,9XIx,c/3F",
                    "8c8c": "lnuP,mVox,pc41,m8Cz,jSdV,jRX3,hzBx,fgSP,hzEF,lo1h,hzBr,dLF1,9Xz9,67jV,4BCN,3QBh,bsJP,fhcN,6TLP,cd/1,pcw3,m92N,m8Vp,c+Zp,c/vN,m9rN,m92N,hzXj,hAtN,c/9P,8q8N,67zx,3QU1,c/jb,4Cch,3Rqp,3RG1,6V4h",
                    "725f": "pcab,jR+h,kDHx,nGS3,j6aV,c+u3,ikwN,fh6r,fh+N,9X3P,9Yl9,j5Er,3R4x",
                    "632a": "jRQP,jSdV,cdyP,g24V,pbQj,5mip,3Qv1,mVxP,mVWV,6UuN,5mHp,ikzP,ikVN,c+MP,c/6N,mVKj,c+Wh,8pS1,5moF,3Rnb,mW4h,mWq9,g2Jx,bt/9,9bw9,7FFF",
                    6487: "jRNH,jSaN,pbNb,5mfh,3QrV,cdvH,fh9F,nGgz,jSk9,j5Hz,nGP1,pcdj,6Ulp,3QQP,hzKV,hA7V,6UxV,5mNF,9aGX,dLLh,dLRr,9XRV,g2A9,orQx,jSMb,jT69,jS/P,9Y8F,67Vp,3RdV,fhOb,8quF,3RJ9",
                    9063: "nG0X,j5iF,g1HP,g1Xx,7EQx,5m91,7EQr,4BPh,4Cy9,mVE3,mWgN,jSYN,jSk9,mVE9,pcpP,hA7V,hzHH,hAD9,6Uf3,g2b9,g2MF,c/sF,c+T9,aIo3,aJ0N,7FIN,7F49",
                    7094: "ev+H,jRX9,pbTr,bsZx,9arp,6719,4BgV,g1Xr,kD61,bsZr,8pS1,kDfj,kDNN,dMkN,dLEX,dMxh,pcsX,dM21,9aZN,67wp,3QNN,c/cX,6UQF,3RJ9",
                    5239: "nG7b,kD99,hA7V,gOD3,kD61,orxN,ew4X,ewT1,66ZX,cdRF,hzR3,67q9,4BCN,ce8j,7Fq1,m9ij,9Y2p,pcRX,5nk1,3Rtx",
                    "4ec0": "fgPH,or8N,jS1j,3QEp,gOVP,gPRh,pcw3,3Rk9",
                    "77ac": "66ZX,nG11,nGgF,8pIF,8pt1,ikdX,iktF,dLfX,dLvF,nGpX,orZV,m8Sb,j5HF,mVWP,kDy9,j5+j,mWjV,g27X,j5s1,j6h9,g2Z9,bt6P,gP9x,ewAb,ewMN,aIAF,7Fap,4BCN,btgb,9aTx,exfX,ewW9,9b79,9bt1,gPBz,3RwF",
                    "6ee9": "oqRX,m8zx,ikaP,g1Up,4BjX,cdOx,kCYz,kDfp,ewAh,9Xw1,6T/x,gOSH,7Fdx,gP9r,orH9,kDrP,3RdV,orNj,loCN,jSCP,jT69,fhEP,fi89,aIGP,aJa9,5mTP,5nn9,jSSr,5n7x",
                    "7b52": "j4/P,pbWF,m8wj,m8Yx,m8FH,j5v9,j5Er,pcw9,m95P,m9B9,m9fb,j64F,3QBb,hzvh,hAtN,5ndN,3Rnh,ewnH,ex0p,bt9X,btC9,7Ft9,7F11,bta1",
                    "5c3e": "66TH,aI2h,hzyp,nGap,nH5N,jSYN,jS1p,g21H,ilcx,dLyH,ex9N,9Xjr,aJ71,gPcz,5mNF,4B/N,4CrV,7FS9",
                    "559c": "mVbX,mWn1,jRX3,jS/V,pcgr,jStx,hzBr,ewhx,ex3x,hAnx,hzBx,ewqP,ce29,cekP,ewZh,cdyP,ceQ9,3QEj,9Xgp,9Y8F,3RwF,5mij,5naF",
                    "80c1": "4BgP,9al9,cdIh,nG7h,nGq1,5my1,3QHx,dLmb,dLF1,ikCX,ikkh,aIrb,g2nF,j5Bj,j67N,67/F,3Rk9,fi4X,aJdh,pczb,ceo1,7FjN,3QX9",
                    "5de1": "nG7b,jSaN,gOtH,gOMx,7EQx,5m91,7EQr,4BPh,4Cy9,nGCr,fhfV,8q2x,nGVb,g2nF,8qlh,nHbX,g2Gp,8qE1",
                    "4e5f": "fgSP,j67N,aIZF,9b79,pcjz,8q5F,lnNz,5moF,4BCN,4CrV,5nk1,7FVh",
                    "786c": "m8gH,m8P9,m8zr,c+kN,6TS3,g1O9,g24V,9aDV,9al9,nGt3,nHf9,kDfj,kDQV,c/yV,c+Zp,kDfp,gP6j,gPHV,nGS3,cer9,7FmV,5mHp,3QNN,btgb,7FmV,5n7x,3RJ9",
                    5706: "3Qy3,nG49,nH8V,3RCV,lnTP,lon9,il39,ikzV,lnTV,aIeH,gOSN,gPsh,aIQh,7EQr,9aK9,aIup,ewGx,aIDH,7Fzp,6713,685V",
                    "8a79": "kCIX,pc79,mVuH,mW4h,kDoN,kDX3,kCSp,dLpp,9aoh,4BgV,gOSH,j5yh,jSJ3,hAtN,ikSz,gPiV,fh3j,fi89,c+JH,c/vN,aIeH,aJ0N,3QNH,8pLN,8qxN,3RzN,4BCH,4CoN",
                    "690d": "j4YH,j5s1,pbQj,3QEp,aHRH,j5cp,hzyj,dLF1,m8LX,m9y1,pcw3,j5NV,5mHj,j5Bp,j67N,5ndN,fhsj,fh+N,ce8j,ceGN,8p/j,8qxN,5mrH,5nn9",
                    "649e": "jRNH,jSh1,pbQj,5mip,3Qv1,cdyP,g24V,pcpP,mW4h,m8LX,m9y1,m8Yr,j5NV,j5Xb,m9oF,j5oP,j6kh,gP3b,gPEN,btRN,btgh,gP3h,dLLb,dMkN,8pRX,8qE1,5mrH,5nn9,gPlX,5mX1",
                    "61ff": "4BgP,4BSp,7F0X,4BCN,4Bwr,7EKh,8pw3,cdF9,ce29,8pV9,8pw9,ew4X,ewAh,c+Zj,gP6p,gOwV,c+nV,j52X,j5yh,j5iz,pbWF,mV8P,mVKp,nGFz,logV,g2kr,il01,jSFX,pcCp,mW4b,mWq9,jS/V,mWdz,ilcx,ewT1,ilfz,g2SV,exj9,9bjz,c/jh,67zr,btsN,btyX,5mX1,4C99,4CoN,6UWV,7FVb,btUV",
                    "7eee": "66WP,8pV9,cd+X,bsN1,kD61,hzEz,hzlV,or5F,m8Sb,m9y1,hAwP,kDy9,pcw3,m991,j5KN,gP3h,g2b3,g30h,g2PH,5ndN,3Rqp,67zr,c/0x,c/jh,7Fwh,7Fdx",
                    "4f34": "3QBb,j59h,g1EH,pbZN,mVxP,ikPx,il6b,nH8V,pcpP,3RdV,g21H,g2W1,aIbz,aJdh",
                    "904d": "nFZP,jS7F,g1EH,g1Up,6TYp,4BdN,6TYj,4BPh,4Cy9,8pIz,cd/1,m8M1,m9rN,iliN,ikD1,6Uf3,fhm9,fi1V,8qAV,6UQF,fhBH,7FjN,fhOb,7Fwh,btd3,btUV,pcjz,m9fh",
                    "67e5": "lnuP,loM9,pcgr,g2kx,ew1P,gOPF,lo7x,hAhh,exj9,ex3r,7FCx,7EQx,ewhx,ex3x,bsZr,btLx,4BgP,4Cy9",
                    "62bd": "jRNH,jSk9,pbTr,5mlx,3Qv1,bsGH,ewu1,3Q+b,jSnh,jT31,3RG1,c+Wb,c/C1,5njX,5mEh,pcw3,5m+9",
                    "64ae": "3QuX,5mlx,pbTx,jRQP,jSh1,cdyP,ewqV,nGwb,nH5N,iliN,ikJh,nGwh,lo1b,loCN,g21H,g2Z9,g2eb,6Uih,c+Wb,c/9V,9XRP,9XCh,g2tP,3RdV,67jP,7FmV,3Rk3,6UNx,9YbN,dMr1,dM59,9bdp,7FCx,3RJ9",
                    7538: "pc3X,gOA1,lnNz,loJ1,6891,3Rnh,67ar,hzBx,hAhh,8qlh,8pFx,dLsr,dM8h,8p/j,hzXp",
                    5815: "9Xa3,mVf9,mVB1,ikqx,ewqV,c+Ap,g27X,jSwF,nGP1,ln+3,loM9,aIxr,ikPx,iliN,btRN,9Y2p,g2kr,g2PN,dMkH,dLRx,8pzb,8quF,4BgP,4Cy9,9XIr,4BVx",
                    "70fd": "jRX3,fgSV,pbTr,bsWp,5m2N,cdOr,9aH1,hzBr,kD61,pcpP,jSnh,mVQz,mWgN,jSPp,hA7V,fhj1,kDoH,il39,gPBF,fibh,ewAb,excV,btjj,btRN,8pV3,8qH9,gPp3,3Rk9",
                    6401: "4BjX,67ax,or2x,jRQP,jSh1,cdyP,fhfV,orlb,loaF,4BM3,kD99,mVWP,mWn1,5nk1,3Rtx,g2kr,j5NV,kDv1,j5NP,j64F,fhL9,ce8p,gPiP,ceGN,7FjH,cehN,ceAx,7FCx,7FjN",
                    "5f52": "m8tb,9Xdh,oreX,cd/1,9aDV,4Bn9,m8Vj,m9y1,4Cv1,fhvr,fi51,7Faj,7FP1",
                    "6d2a": "nG43,lnQN,ikaP,fh6x,4BgP,bsZx,jSdP,jT31,c+JH,c/F9,orrr,c/0x,orQr,c/px,3QKz,9XIx,9X/b,4Cv1",
                    "5a5a": "j4YH,j5oV,c+JN,7ENp,4BgV,pbTr,cdC1,7F49,orZP,nGzp,ewDp,g2A9,j5Bj,j6h9,nGVb,j5+p,dMr1,gPRh,3R1j,c+Zp,c/yV,3RCV,9aQj,9bpV,5ngP,5mHp",
                    5978: "jRNH,jSh1,bt3N,7ENp,4BgV,pbTr,cdyV,9XmF,6Uih,nGwb,nHf9,ewx3,exmh,nGVb,3Rnh",
                    "4ecb": "fgSP,ikwN,orrx,jSJ9,il9p,g2Z9,gOYX,9Xw1,6U5N,3Qy9,gPsb,3Rnh",
                    "9e43": "oqV3,orlh,jSnh,jRX9,oqV9,3Qy3,gOD9,gP3h,5mEh,3QQV,c+u3,c+Wh,9al3,9aNh,pcCj,mV+1,kDuX,j61x,g2Gj,hAwV,mWjV,mVTN,dLXN,dMu9,5nk1,3Rtx,9aTr,9Y8F",
                    5757: "ik7H,ikD1,pbQj,9Xgp,8pmH,bta1,kD93,kDNN,dMhF,dLEX,dMxh,pcsX,dL+V,8q5F,67th,3QKF,c/cX,8qop,67/F,3RJ9",
                    "7bf1": "jRQP,pbWF,mVlj,mVQF,mVrz,jSh1,lodH,pcw9,mVWP,mWq9,mW7j,jSYN,lo1b,j5KN,j52X,j6e1,hzBr,cdOx,ceAx,hAnx,hzKP,dM8h,dLBP,hAe9,3QBb,9Xdh,9YeV,5ngV,3Rqp,cebr,67gN,6UB1,8qbP,5n1h",
                    7075: "nGaj,nH5N,gPEN,gOGh,kCVr,kDNN,ewqP,9Xgp,g2nz,btpF,9aQp,6Uc1,5mip,4Bk1,btpz,7Fwh,67/F,4Cy9,aIQb,excV",
                    "9ebb": "pcdj,mVWV,mWmX,mVih,c+xh,8pw9,4BdN,gOMr,gPcF,kD93,3QX9,7ENj,aIeN,gP09,fhm3,ceeF,gPfH,gPHV,kDBb,3Rnh,7Faj,btvV,gPsh,g2Db,btOF,7FS9",
                    7784: "5m8X,mVc1,mVuN,7EWN,7EE1,c+qX,c+JN,hzHH,hzp1,lnWX,loJ1,pcjz,hA1F,pcCj,hAkp,3Q+b,g2eh,g2SV,3RCV,btgb,btUV,g2wX,67M1,67tb,685V",
                    "62c8": "jRNH,jSk9,bsGH,g2b9,pbTr,5mlx,3Qv1,pcw3,ewW9,kDy3,kD+h,3R1j,ewDp,excV,3RCV,5mHj,5ngV",
                    7830: "nFWH,nGt9,ev+H,nGdx,7EKb,hzvh,hzO1,9aH1,9aoh,nGwb,nHf9,jSqj,fhBN,fhUr,kDU1,nGVb,3Rnh,ce23,ceTh",
                    "5d0e": "jRTX,7EE1,7F11,jSgX,67n1,or2r,7EQx,m8Sb,m9y1,pcw3,m9c9,j5NV,gP3h,kDy3,hAwV,g2b3,g30h,g2PH,5ndN,3Rqp,67zr,c/0x,c/jh,7Fwh,7Fdx",
                    "60c5": "fgPH,jRX9,pbQj,3QEp,lnQH,ikD1,mVAX,mWn1,jSnb,jSYN,gOYX,gPRh,pcsX,gPm1,3Q+b,ewAh,ex9N,5ndN,3Rqp,btgb,btRN,8qxH,8pYh",
                    "4e73": "m8mX,nGFF,jR+b,gOMx,kC/H,ikD1,gP03,kDoN,fgVX,fhyF,cdXV,5muV,3QEp,9ahX,btpF,orH3,5m+9,4Cch,4Cv1,6V4h",
                    7837: "m8jP,m8P9,dLcP,m8CF,6TVb,gOGh,gOZ1,9aH1,9aoh,9aQj,9aQp,lo4p,loJ1,9bt1,g2hj,g2W1,btjj,btY1,pczb,3Rnh",
                    "4e66": "kCPb,kDKF,dMex,dLj3,dMr1,8qAV,6UKp,orKb,loJ1,pcgr,3R4x",
                    "788e": "m8jP,m8P9,ew1P,m8CF,674b,g1Rh,g281,8pS1,8pzh,pcpP,mW4h,lo1b,loM9,jSzH,dLLh,hA1z,fhL9,jSVz,c/g9,gPyr,dMr1,9XCb,9Yl9,cer3,3Rk9",
                    "6d95": "oqYb,lnQN,ikdX,g1+F,5m8X,cdRF,orlb,m92N,pcIz,kDv1,kD5X,kDQV,g2SV,g2b9,ce29,ceN1,7FP1,67Yx,kDuX,3Rh1,67gH,ceo1",
                    "70f7": "dLcP,j569,oq/j,cdLp,4BgV,cdLj,9aDV,gOMr,jSdV,pcpP,m9fh,hzUb,lo1h,loJ1,hAA1,hz+r,hAtN,c+T3,c/C1,c/9P,7FgF,3QQV,c/jb,5n1h,4Cfp,4Cv1,68c9",
                    "4f0d": "g1EH,pbWF,kCSj,3QEp,mVxP,mWn1,g27X,g2PN,67Yx,mVTH,67th,67dz,68c9",
                    7965: "pbK3,lnNF,jRNH,jSh1,cdyV,fh3j,3QEp,fh6r,ce29,pcgr,m991,loqb,pcLN,kDcb,kDX9,fhsj,fi51,aIo3,aJdh,kDy3,3Rk9",
                    "865a": "pcgr,jStx,mVNr,mWgN,hAtH,jT31,jS1p,bsWp,8pzh,3QrV,g1+z,hAnx,ikMj,ewDp,dLRx,dMex,g2PN,bt0z,7F11,ce5b,4BPh,cenX,4C61,7Fwb,btRN,4Btj,4Cv1",
                    "9a8c": "mV8P,mVxV,dLyN,kCM3,dLj9,dLI9,5my1,3QHx,7ExH,9XpN,g27X,jSwF,orE1,nGOX,jSSx,gPO9,g2kr,g2PN,ce8j,7FjN,dM1X,9bah,c/yP,4Cch,4BPb,4Cy9",
                    "8bae": "nG43,kC/N,hziH,hzBx,4Bwx,aIl1,oruz,jSJ9,kD93,ewGx,btsN,9b41,67/F,3RJ9,loCH,g2Jx,btFh,7FjN,5mEh,3QNN",
                    "5a31": "j4YH,j5s1,c+MV,9axF,6TYp,3QrV,pbTr,bsN1,6Uf9,nGzj,nH5N,j67N,j5Bp,nGzp,g2eb,g2W1,btd3,bt/9,g2wX,aIK1,7FjN,67zx,3QQV,aIJX,7FCx,682N,3RJ9",
                    "86a4": "nG43,nH2F,jSG1,hzXp,g1+F,ew1V,nGdr,kD2V,ikMp,g2Gp,fi89,7ETz,c+GF,c/px,9bgx,9axF,fhvr,5mKx,4Bqb,5naF,7Fzj,3RG1",
                    "81fb": "mV8P,mVE9,mVrz,g1HV,hzKV,jS7z,g2b9,c+nP,c+Q1,5m5P,8pV9,gOMr,6T/x,mVHb,mWn1,jSqj,jS/V,gP03,gPO9,pcw3,jSG1,ewJF,aIl1,gPvj,c/vN,aJdh,c/3z,dMex,aIrb,aJ3V,c/g3,3Rk9,4BIX,9b79,8qoj,4Cy9",
                    "73e0": "m8jP,m8P9,m8zr,8pFx,g1HP,g281,6TIH,9Xz9,hzUb,mVQF,jStr,jT69,fhpb,fibh,pczb,3Rnh,67mX,8q2x,aIDN,fhOh,aIZF,68fh",
                    "7ec4": "or5z,gOwV,gOVV,kD93,aHY1,btd9,4BgP,7F49,5mNz,mVQF,mWgN,5ndN,gPcz,gPEN,btpz,btRN,5mB3,5nqh",
                    "62d4": "3QuX,5mlx,or2x,bsGH,fhj1,j5rX,j4YN,orNj,kDQV,j6h3,j5v9,pcpP,gPcF,btgh,8pLN,fhyz,fh+N,9Y2p,5mNF,3QQV,c/3z,9b41,67Yx,4Cy9",
                    "853d": "mV5H,mWth,pc3X,kD61,kDuX,pct1,j52X,gOMx,jSwz,gP09,kC/H,5mrN,3Qy3,fgZ9,fhvx,6Uox,5mB9,9aob,c+GF,cd+X,9aQp,jSMb,dLXN,gPlX,gPO9,gPEH,ceDF,9bdp,3R4x,dM1X,9X/h,6UQF,4Cy9",
                    "53c2": "pcdj,jS1p,lotp,nGOX,j67N,gPRb,gOtN,jSqj,fhfV,aHRN,gPiP,dMbp,aJdh,ewMH,aIbF,c/jb,7ETF,3QBb,5mKx,7Ft9,9Y8F",
                    "6f84": "nG43,kC/N,ik7H,fh3p,4BgP,cdOx,nGmP,nGIN,jStx,ewkF,kD5X,j5Bp,nGS3,ilcx,exj9,loqb,nH5N,ilcr,kDU1,gP6j,gPyx,dLLb,dMhF,9bjF,9aNh,dLLh,7Faj,4B/N,4C93,8qrx,4BCH,4Cy9",
                    "6b21": "mVbX,ikwN,9aeP,dLBV,g27X,pcmN,kDir,kDU1,g2MF,hA7P,cekV,8q2x,5my1,3QEp,cekP,9bah,67/F,3RJ9",
                    "6ef4": "oqV3,lnNF,ikaP,fh3p,4BjX,cdRF,pcjz,m9c9,lnTP,loM9,kDcb,hA4N,hAaX,kDHx,3QTX,hzO1,hAwV,5ngV,3Rqp,dLLb,dMex,hA7P,btvV,btmr,btFh,6UHh,6Uox,btmx",
                    "6bb5": "orlb,nG7h,4Bqh,j59b,j5v9,ewbb,ewx9,8pmH,aIrh,gP6j,ikSF,jSzN,orxN,orWN,hAtN,hAGh,ewDj,excV,8qlh,4BM9,dLUz,9XV1,6UQF,4CBh",
                    "80ba": "4BdH,9Xa9,nG49,nGq1,67n1,4Bwx,j563,j5s1,ew83,ewu1,pcpP,lotp,kD93,kD+h,kDy3,4C99,67wj,g2hp,g2SV,7FLV,67Yx",
                    "809d": "4BdH,cdF9,oqV9,orf1,67n1,4BzF,j563,j5s1,dLEX,dLj9,nGzj,nHc1,ewAb,exj9,nGVb,3Rnh",
                    "522e": "m8q3,nGLV,mVxP,dLBV,ikaP,ikYV,4Bqb,dLmh,dLUF,67CF,674h,m9fb,9bah,orZP,685V,3Rtx",
                    "4f55": "fgPH,pbZN,kCSj,3QEp,m8IP,m9Eh,9aK3,hzR9,hAe9,aIN9,aIo9,m9rH,682N,3Rnh",
                    6643: "oq/j,orTF,hAqF,hzyp,oq/p,lnHj,lozF,g1Xr,dLF1,hz+r,cebx,dM1X,gPBF,cdyP,ceQ9,3QuX,5mlx,8pS1,ce5h,cehH,5mQN,4C61,4CrV,7FS9",
                    5609: "nG0X,nHc1,pcgr,kDix,kCM3,kDNN,ikqr,ilcx,fhUx,fh6x,ikqx,ewnH,ce29,cehH,ewW9,cdvH,ceTh,9ahX,9aQp,5mHp,3QQV,cdUH,8pIF,3QrV,3RaH,9XON,9YbN,3RzN,5mQH,5ndN",
                    "8f7f": "lnuP,lo1h,pbWz,ew51,fhm9,iktz,3QKF,8pmH,aIrh,mVKj,orZV,mW13,hAb1,fhBN,ce29,j5yb,j6h9,il6b,fhXF,c/F9,c/6H,8q8N,3QX9,c/pr,4Cix",
                    "759a": "j4/P,g1Rh,bsJP,ewhx,3QrP,7ENp,9Xjx,lnKx,loM9,orrr,m95V,c+JH,g2eh,jSwF,g2eb,g2A9,9XIx,7F11,5mip,aIAz,7Ft9,4CoN",
                    "8bfe": "pbGX,m8CF,ik7H,iknp,5mip,aIhV,ori3,orZV,gPHV,gP09,ori9,kD93,kDQV,orDX,3Rh1,dLBP,dMu9,67jP,8p/p,dM21,9Y5x,7FLV,68c9",
                    7262: "pcab,mVTN,ikh3,mVf9,mWjV,illV,c+xb,jSdV,g1+z,g2PN,aHUP,aJa9,kDlz,3R7F",
                    "5ed6": "4BdH,bsTh,mVih,mWq9,pcdj,mVTN,kCYz,kDlF,g2nF,j5lH,hzUh,fh9z,hz+x,kDoH,kDNN,dMkN,j5NP,hAkp,fhEP,gPBF,aI5j,c+Wh,fhBN,ceuh,aJa9,8pIz,cekV,67gH,9X/h,3QKz,4BVx,5mTV,8quF",
                    "631b": "pcab,mVTN,m8jP,m9B9,gOzX,jS7F,m8P3,g2b9,m95P,g2tV,jSPj,g2Z9,dLj3,ex9N,btOz,bsTh,8ppP,8qH9,ewJz,5mNF,3QU1",
                    "68a6": "lnxX,lo4p,pbZH,ewnN,fgSP,lnQN,jSaH,hzXp,lo7r,loM9,pczb,ewZh,fhsj,loqh,fi89,9arj,ewAh,cd+X,ceDF,9bah,67CF,4BJ1,3QBh,9Xz3,6UuN",
                    5948: "lnxX,loJ1,pcgr,jSh1,gOPF,ew51,loaz,il39,g2MF,exj9,g1+z,g2Gp,cdIb,ceJV,5mc3,9XsV,ceez,5mNF,3QU1,9bab,5ngV",
                    "76fc": "66ZX,mVc1,mVxV,8pOV,8pt1,dLfX,dLBV,ikdX,ikzV,fhiX,j5Ex,nGIN,orNj,kDKF,g2Z9,fhsj,fh+N,67/F,4C99,fhEP,9aWF,4BFV",
                    8386: "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,lotj,j67N,hzlP,hAD9,3QEj,fh3p,fh+N,5ndN,3Rnh,cdLj,ceGN,9arj,9bmN,kDir,3R4x",
                    "4fcf": "fgSP,or8N,jS1j,3QEp,mVAX,jSwF,pcsX,hAb1,j61r,nHc1,3Q+b,hzUh,hAwV,5ngV,3Rqp,dLLb,dMnV,9XCb,9YeV",
                    "4efb": "fgPH,pbZN,kCSj,3QEp,lnTP,mWgN,ewnH,exmh,5moz,5nn9,m98X,5mX1",
                    "664c": "66ZX,m8n1,m8IV,9aDV,9ai1,g1KX,g24V,lodH,pczh,3R1j,lo4p,loJ1,5nk1,3RwF,hA7P,hAnx,aIWx,aIGV,hA7V",
                    9970: "g1EH,pbTx,kCPb,kD99,gOSN,g1Uj,4Btp,9aH1,gP03,pcpV,kDlz,kD+h,67wj,fhsp,fi1V,7FLV,67Yx,j5U3,3Rk9",
                    "5b8b": "pcab,mVTN,hzs3,lnB9,loFV,hAwV,ew4X,exg1,jStr,3R4x,66WP,9axF,bta1,ewGx,aIN9,8qrx,68c9",
                    "6d9b": "nG43,lnQN,hzlP,fh6x,4BjX,cdRF,ln+3,loM9,hzUb,hAA1,ewqP,exmh,orDX,hA7V,dLXN,9XIx,7F7h,5my1,aIAz,aJdh,ex6z,5naF,3Rnh,8qbP,6UHh",
                    "81c0": "c+nP,g1O9,j59h,oqYh,orop,lo4p,lnEh,j5cj,j5Ex,kCYz,g1+F,kD93,g2b9,g1Rb,g2nF,c+xb,ewkF,fhm3,dLOp,jSzH,m991,orE1,orTF,lozF,kDNN,kDX9,j5KH,j67N,dLXN,ikYP,g2Dh,dMr1,3QKz,cdRF,ceAx,67Yx,3Rk9,7ETz,7FCx,9Y5r,9XmF",
                    "631d": "jRNH,jSh1,pbQj,5mip,3Qv1,cdyP,fhfV,nGpX,j5Bp,fhiX,fhsp,6Ulp,4BJ1,6Ulj,4C2V,4Cy9,j5KH,j6h9,g2tP,ceuh,orTz,8quF,6UHh",
                    8854: "j4YH,pbTx,cdvH,j5fx,g1Rb,3QBh,ikwH,pcdp,ln+3,logV,hzKP,hA7V,dLyH,dL+V,hzUb,67th,9b0V,nGS3,nHf9,hAaX,hAGh,hAtH,5ndN,3Rnh",
                    "5f62": "nG0X,nGIN,fgSP,fhEV,nGdr,fh6x,9arp,6719,3QrV,nGwb,4BPh,hA4H,orZV,btsH,gPL1,3R7z,6UNx,aJa9",
                    "76d0": "kCIX,kDix,or8H,fhcN,dLfX,g2kx,orH3,dM59,lon3,gPL1,4Btj,bsWp,btOF,4ClF,btd3,4BM9,btvP,4C2V,4BdH,4CBh",
                    6905: "jRNH,jSh1,pbQj,3QEp,aHRH,j5cp,hzyj,dLBV,m8P3,m9y1,pcsX,m991,jSCV,ikSF,gP09,lojX,hAwV,g24P,g30h,67tb,c+Wh,c/g9,8qi9,8pYh,g2PH,5ndN,3Rnh",
                    "6e38": "nG0X,lnKx,ikaP,fh3p,4BjX,cdOx,oreX,lo4p,kCYz,kDoN,kD93,aIl1,6U5N,4Bwx,fhm3,fhyF,67CF,4BPh,hA4H,lon9,orNp,lon3,loM9,hAaX,hAA1,dMex,5n7x,3Rk9,btvP,bt/9",
                    6655: "oq/j,orTF,j64F,j5cp,oq/p,lnHj,lozF,c+u3,gOD9,gPHV,c/yV,dLsr,dMhF,g2kr,9Xgp,9Y8F,7EAP,7FS9,ceez,3R7F",
                    7634: "kCFP,hzvh,cdyP,fh6x,4BjX,8pCp,bsZx,mVox,mWq9,pcgr,mVWV,loaz,jSG1,jSdP,jS/V,j5Bj,gPcF,gPsb,j61x,gOSH,gPO9,ewx3,ex9N,9bmN,9aK9,ewx9,ce23,ceGN,6V13,6U2F,9b0P,3RdV",
                    "6cbb": "nG43,lnNF,hzlP,fh3p,4BjX,cdUN,pcpP,gOVV,hAtN,loqb,g2Z9,3QX3,c+T9,c/vN,3RzN,67q3,682N",
                    "5b5c": "mV5H,mVKp,iktF,67dF,3Qy9,bsJP,fhm9,fhsj,orE1,j5KH,j6kh,j67H,dMhF,9bah,67CF,3QU1,fhBH,aIK1,7Fzp,4Cy9",
                    "946b": "kCFP,m8CF,nGt9,pcgx,mW19,kDX9,lotj,lnNF,j59b,j67N,ilcr,g2tV,g2b3,ikqx,lo7r,fhvx,fi4X,fgW1,9aeP,aI2h,cdOx,dLvF,cdUN,aIl1,9aQp,9XvX,9Xdh,7EDX,7F7h,6Uf3,4BCN,4Bwr,6TS9,9Xmz,3QKF,3QrP,3R1p,9aWz,aIK1,ceuh,dMbp,ceAx,aJ0N,9bw9,9YbH,9XV1,7FjH,7FP1,6UWP,4Cix,4Ccb,6UxV,9Y2j,3Rqp,3R7z,3RJ9",
                    "4ffa": "3QBb,jR+h,g1EH,or5F,pcpP,ikJh,g1Xx,lnQH,loJ1,lon3,g2Z9,6Uf3,g2b9,g2PN,8qxN,8pV9,ce23,ceGN,ikYP,5mTV,3Rk9,3RCV,6V19",
                    "80cc": "mVbX,mVB1,hziH,j5s1,gOYX,pc41,pcmH,ikVN,hA7V,hAwV,jT69,m92H,m9y1,3QHr,fh6x,fhUx,5n7x,3Rh1,cdOr,ceAx,9bgr,9aux",
                    "6e24": "4BjX,cdOx,fh3j,hzlV,nG43,lnNF,lnQH,lok1,pcgr,ikPx,fhcH,ikwN,il01,fhI1,ewqP,ewPV,ce8p,5mHp,3QU1,8pLH,aIK1,j5U3,j6h9,dMr1,5ngV,3Rtx,pcFr,ilcx,9Y2p,67P9,3RaN",
                    5435: "7EAP,mV8V,mVrF,aIbF,aHUV,dLBP,kDfp,pcpP,aIGV,lotj,g2Z9,dMkH,8qop,5mQN,3QNN",
                    "95ef": "pbQj,m8FN,lnEb,3QBh,nGwb,nH8V,5ngV,3Rqp,j5iz,j5R1,dL+V,hzR3,dLF1,dMbp,7Fwh,67FN,9Xmz,9XV1",
                    "515a": "or2r,lnX1,pcgr,jStx,lon3,orTF,g1O3,jRX9,jT31,g2W1,g1+z,g2Gp,aITp,aIbF,g1+F,aIrb,6Uc1,3Qv1,aIDH,5mQN,3Rh1,3RCV,6V19",
                    "51bb": "m8jP,ikqx,6TIH,c+Dx,kCYz,kDX9,pcmH,dLF1,dMr1,hAaX,5mX1,3R4x,aIuj,5moF,9Y5r,68c9",
                    "70e6": "ew1P,jRX9,or2r,bsZx,8pzh,4BgV,g1Xr,jSk9,bsZr,7F49,mVE3,mWq9,mW4b,ikYV,8q2r,ikPx,illV,8qAV,3QTX,5mNF,7Fq1,9XY9,g2Dh,8qoj,4Cy9",
                    "8d4b": "5m5P,9arp,bsZx,j5iF,9Xmz,67n1,9Xa3,nG49,nGq1,9Xw1,m8Vj,m9c9,m9rH,kDU1,ikJb,ilvh,fhvr,67zx,5mEb,8qop,ikYP,7FmV,dL+P,dM8h,orNj,ceAx,8quF,4Cv1,6V4h",
                    "94a9": "ik7H,pbWF,lnEb,lo4p,hzoX,hzR9,c+nP,c+Wh,hzBr,4Bwx,8p/p,fhpb,ikSF,pct1,kDoH,kDU1,6891,3Rqp,hAhb,9aZN,aIZF,dMer,9bmN",
                    "64bc": "3QrP,677p,pbQp,jRNH,jSdV,bsJP,ewnN,9Xmz,c+Q1,ewx9,kD99,kDX9,nG/r,m9uV,pczb,gPvp,ceDF,9Yi1,ceTh,aIN3,hAwV,hzXj,hAe9,fhsj,fhI1,ceo1,ce8p,fhsp,4BCH,8pV9,9aQj,5mHp,4BVx,4Cfp,67/F,9b0P,6UE9,8qxH,5nn9",
                    6e3: "dL9H,jRX9,pbQj,3QEp,kC/H,g2b9,m8LX,m9B9,m9fb,g2qN,9aDV,ik/X,3Rh1,g2Gj,ceJV,9bzh",
                    "6c72": "oqYb,m8FN,ikdX,g1+F,5m8X,c+GF,mVAX,mWgN,g2A9,g2SV,btOF,8qlh,67FN,3QX9,mVNr,ewDp,8pS1,4Bwx,g2nz,9XY9,682N,4CBh",
                    5320: "mWmX,mVc1,4Bk1,4Cy9,7ENj,bt6V,jSdV,kDKF,fhfP,fi1V,fhHX,6UB1",
                    5883: "j4YH,j5lN,oq/j,9Xgp,8pmH,aIhV,pcmH,m9c9,m8LX,m9y1,lo4j,ikVN,il33,lowx,ikzP,ilvh,fhm3,fh+N,9YbN,9Xz9,fhm9,c+T3,c/vN,9XOH,67wp,3QKF,9XY3,4C99,3Rnh,3RG1,68fh",
                    "780d": "m8jP,m8Sh,m8Cz,dLcV,6TVb,gOGh,gP09,8pV9,8pzh,fhpb,jSzN,pct1,jSzH,jT69,g2PN,gPp3,9b0V,6UrF,3QQV,cer3,8qrx,5ngV,3RJ9",
                    "83b1": "mV8P,mWq9,pc0P,kD2V,pczb,kDBh,ikh3,illV,c+qX,c/C1,gOPz,dLI9,dM1X,gPyx,kDir,3R4x,5m8X,8pLN,9Xz9,c/0x,9XV1,7FCx,5nn9",
                    8138: "3QrP,9Xa9,nG49,nGq1,5my1,3QHx,ikh3,ikD1,c+u3,c+Q1,gP03,jSzN,nGS9,kDEp,iliN,gPO9,g2kr,g2SV,ce8j,7FjN,c/9P,9bah,4Ccb,ceJV,4BPb,4Cy9",
                    "9c81": "jRTX,mVuN,pc41,mVuH,mW7p,kDlF,kCSj,kDNN,fh+N,fh3p,kCSp,iknj,iliN,kDir,fhvx,c+nP,c/F9,3QHr,aI8x,aIZF,3RwF,7EQr,7FFF,4Bwr,4ClF",
                    "8d38": "3QuX,5my1,7Fap,c/3F,7FmP,3RG1,8quz,fhXF,fh6x,8pFx,ori3,nG7h,gOGh,kD99,m8LX,j5Bp,gP9r,jSG1,nGS9,nGCr,nH8V,j6aV,hAnx",
                    "67d0": "m8mX,m9y1,pbZH,fhcN,fhRp,pcCp,j5lH,j5+p,cdyP,ceQ9,fhvr,3R4x,5m5P,7ETF,cebx,8qi9,6UQF,5nn9",
                    "61e6": "fgSP,kCM9,pbTr,3QHx,lnNz,ikD1,ori3,os11,hzR3,ln+9,loJ1,hAA1,orH3,fhL9,j5Bj,j5KN,gP6j,gPfN,j5+j,j67N,gPEH,gPvp,ewqP,exj9,ewW3,btsN,3QX3,btd9,btY1,5nk1,3RwF,btsH,5mQN,btIj,5n4p",
                    "77a5": "pbK3,mVox,mVE3,pcgx,pc0P,ewqV,dLj3,lnB9,loaF,gPcF,fhph,gOJj,j5iF,jSgX,hzUh,jSzH,orKh,m98X,m9B9,m9rH,ilcx,dLUF,jSFX,fhXF,dMu9,3QHr,c+Dx,c/px,3Rtx,9Y5r,9Xjx,7EQr,7FCx,4Cir,4Bwx",
                    "6d45": "oqV3,lnQN,ikaP,g1Xx,4BjX,c+GF,orKb,m9oF,hzKP,jS/V,cdXP,fi51,4BFP,6UuN,8qi9,c/yV,pcjz,dLRx,8qi9,3RCV,7FS9",
                    7638: "jRQP,gOD9,cdvH,ewep,3QrP,9Xgp,m8wp,m9B9,pcgr,mVWV,j5lH,j5NV,g2qN,ewDp,kDcb,dLvF,j5Xb,j6aV,fi1V,fhOh,j5Xh,3QQP,cdXV,ceJV,5ngV,3Rqp,ewSX,btvV,8pYh,btvP,9bgx,9b0P,5mHp,8qbP,67Vp",
                    "6c99": "oqYb,lnTV,ikdX,g1Xx,4BgP,c+GF,c+MP,kDfp,pcsX,aIK1,kDHr,fibh,c/vH,9Y5x,7Fwh,67IV,4BM9,3QNN",
                    "98df": "hzlP,kC/N,orrx,lon9,ils9,lo1b,j5HF,bt0z,btIp,hAkp,hzEF,3QKF,7Fap,ewkz,ex0p,aIrb,7Ft9,4CrV,7Ft3,btRN",
                    "987a": "4BdH,9Xa9,oqV9,mVrz,6U2F,5mB3,ori9,nGzj,nHf9,nGVb,j5R1,9aWz,j5HF,j6aV,9bpV,gPsb,aIQh,6UB1,5mQN,3Q+h,8qrr,4Cy9",
                    "575b": "hziH,hzO1,nGdr,8pFx,66WP,9XCh,m8Sb,m9uV,fhiX,fi89,fhL3,4BM9,682N,aITj,3RJ9",
                    "7edf": "or5z,hzlV,hzEF,kD5X,bsJV,cd/1,66TH,8pS1,pcpP,m9fh,kDcb,kDX9,kDy3,dLI9,ex9N,hAkj,c/C1,3QQP,5mHp,7FgF,dLXN,dM8b,5n1h,4Cfp,4Cv1,6V19",
                    "7eac": "or5z,hzlV,hzKV,jSk3,bsN1,cd/1,66ZX,8pYh,lo4j,loM9,gP6j,gPL1,c+Wb,c/C1,8qE1,6UNx,pcsX,3Rh1",
                    "94e3": "ikaP,or2x,kCM3,kD99,gOzX,gOZ1,cdyP,ce29,gOMr,4Bwx,7F11,hzUb,mVQF,jStr,jT31,orKb,ewZh,ewAb,exj9,ewPP,9aZN,6UrF,3QX9,ex0j,5n4p,4Cix,4Cv1,68c9",
                    "8c10": "oqV3,lnQN,hziH,hzyp,4Btp,9Xw1,pc73,g2b9,ikYV,ln+3,logV,pczb,hAhh,g2Gp,g2W1,ilvh,kDBb,m9y1,fhHX,c/6N,3Q+b,c+Wh,c/vN,3RzN,9aNb,9bmN,5mEb,5ndN",
                    "6b89": "mV8P,mVKp,mVor,hzyp,cdyV,hzyj,hzR9,cd/1,7EQx,4BgV,dLpj,bt6V,hzUb,lodN,pct1,lodH,loJ1,6891,3Rqp,8q5z,hA1F,hAkp,8qop,9XLz,9Y2p,dMbj,dLUF",
                    9875: "nFZP,nHf9,nGFz,j5v9,8pFr,j5fx,j64F,8quF,g2nz,9XIx,6Uf9,5moF,3Qv1,9b0P,3RG1",
                    6620: "66ZX,m8n1,m8FN,8pLN,8pt1,g1KX,g21N,c+Wb,kDch,kDNN,c/vN,c+MP,c/F9,pcsX,dM21,9aZN,6Ulp,3QNN,c/cX,8qrx,682N,4Cy9",
                    "733f": "nFZP,kCSp,hzEF,dLyN,9aAN,67dF,5mlx,3Qv1,hzlP,orbV,aHUP,fh9F,lo1b,loJ1,orH3,il39,ikG3,ils9,g2kr,g2PN,ceGN,cebx,g2kx,btvP,8q2x,67n1,9XOH,3RaN,67Sh,aIQb,7FFF,4CBh,8quz,aJ71",
                    "7c98": "mVbX,jR+h,j5oP,mVHh,gOwP,gP6p,pbWz,3QKF,9abH,gOPF,fh9z,ce29,pcw3,ewW9,kDy3,kDX9,3R4r,ewGx,excV,3RCV,5mKr,5ngV",
                    "6b96": "m8jP,m8P9,m8zr,cdyV,hzyj,hzR9,bt6V,8pIF,4Bk1,dLpj,bt6V,lo4j,loM9,orKb,il01,4BVr,ikPx,iliN,4CoN,fhvr,fh+N,cebr,ceGN,8q2r,8qxN,4BIX,4Cy9",
                    "58ee": "lnuP,hzBx,9aeP,dLvF,pc0P,3QQV,hzR3,hAGh,67tb,6891,pcw3,67P9",
                    "4fea": "3QBb,lnEh,pbTr,hziN,nGgz,nHih,3QQP,j5oV,j5KN,5mQN,3R1p,3Rk3,j5U9,j6e1,5nk1,3RwF,aJ0H,fhRp,fhm3,aIxx",
                    "822b": "pbZH,lnHp,4BdH,9Xa9,lnB9,lnX1,67n1,4BzF,ev+H,ewDp,j5fr,g21N,cdOr,9aAN,orAP,lotp,jSnb,jT69,jSFX,c/9V,7FjN,3Q+h,fhHX,fi1V,685V,3Rqp",
                    "74e3": "3QrP,6TVh,9arp,ewhx,9X3P,cdXV,ew1P,ewu1,jRX3,gOJp,ewhr,jSdV,lnuP,lnX1,pbNb,m8CF,5moz,8pS1,ce29,m8P9,nGS9,mVNr,btmx,67th,7FjN,9XLz,67IV,mVWP,c/9V,9XV1,67Vp,pcCj,m9rN,lojX,loPh,j5Xb,gPyx,jT2X,fhXF,fhHX,fibh,9XY3,9Yoh,fhXz,3RwF",
                    6807: "3QEj,pbQp,j4YH,j5v9,9X0H,iknp,gOJj,dLBV,mVHb,mWjV,gP03,gPO9,gPp3,5m+9,3RaN,67jP,cebx,ceDz,7FS9",
                    "78b4": "m8jP,m8P9,m8Cz,c+kN,4Bqb,g1Rh,g24V,7EZV,7EKh,lo1b,loM9,orH3,dM59,ewx3,lon9,exj9,dLRr,dMkN,7FIN,7Fdx,dLRx,aIxr,aJ0N,4BM3,4Cy9",
                    "916c": "nG0X,nGFF,nGgz,hzEF,dLmh,nGpX,ewu1,ewAh,3Qy3,jRX9,jSqp,67wp,6719,aH/3,aIup,gP9r,ewT1,orDX,dM21,aIGV,67CF,3R1p,gPlX,ex0p,nG/r,4Cix,gPBz,dMnV,pcRX,3RG1",
                    6413: "j4/P,j5s1,or2r,5mlx,3Qv1,bsJP,fhj1,orrr,lok1,lotj,orWN,lo1b,loM9,hzUb,hAA1,dLI3,dMu9,lon3,hAb1,dL+V,aIAF,8p/p,4BCN,9XLz,9Yi1,9X/b,4Cch,4BPb,4Cy9",
                    "5e97": "pcdj,mVWV,5m2H,9Xdh,lnEh,loJ1,jSwz,ceeF,gPcz,gPL1,3QQP,cdXV,ceGN,3RzN,5muP,5ndN",
                    "86fe": "aHXX,jRU1,jSh1,cd/1,cdC1,or2r,7EQx,66TH,8pS1,aIeH,6Uih,ln+3,mV+1,m8/z,5mNF,3Q+h,aIo3,dM59,gP03,gPO9,orKb,btFh,7FCx,3RG1,68fh,mWdz,j6e1,exfX,67M1",
                    9022: "mVbX,j5iF,g1EH,g1Up,6TYp,4BgV,6TYj,4BSp,4Cy9,jSgX,oruF,m8Vj,m9rN,jSMb,hz+x,g24V,kDir,il01,gPyx,g2Z9,ewtX,excV,ce23,ceGN,9aDP,9bt1,gPiP,67IV",
                    6208: "hzoX,j6e1,nGIH,kDEp,fhUr,btvV,8pYh,4Bn9,pc73,fhph,9aWF,5n1h,3RzN,7FS9",
                    "9f9f": "gOwP,pc79,m8FH,m9fh,hzXp,7ENj,hzyp,hAqF,9bjF,9arp,dLpj,dMhF,hz+r,5mKx,3R7F,3RzN,7FS9",
                    "5b8f": "pcdj,m95V,hzvb,lnEh,loFV,hAwV,fgSP,fi89,jStr,dLF1,9Xjx,6TLV,c/6H,4BCN,67/F,9XY3,3RG1",
                    "9b42": "m8mX,m8M1,gOwP,gP09,g1Xr,7EAV,9aH1,cdUH,7F49,pcw3,m92N,m8Vp,dLOp,dMnV,m9uV,m92N,hzXj,hAwV,m9c3,ceo1,7FgF,3QNN,btC3,5m+9,4Cch,4Cv1,6V4h,ceGH,8qrx,8qE1,aJ3P,7FVh",
                    "7f04": "pbQj,hziN,hzBx,kC/H,bsJV,cdUN,66TH,8pLN,3QEj,7EZV,9Xw1,kD61,kDU1,orTz,loJ1,pczb,dM8h,9Y2p,3RCV,6V4h,gPKX,aIZF,3RaN,gP3b,gPm1,6Ulj,dLOp,dL+V,9b0V,9aQp",
                    "75a5": "kCIX,hzyp,cdyP,fh9F,4BgP,7ENp,9Xjx,dLvF,mVrF,mWq9,pcjz,mV+1,dLBP,g2hp,kDrV,gPvp,dMxh,dLRr,6Ulp,3QNN,dMer,3Rtx",
                    "5a1f": "jRQP,jSk9,dLF1,8pIF,4Bk1,pbWz,c+u9,7F7h,nGFz,nH8V,j6aV,j5HF,nGFF,3R4r,g2kx,g2W1,5nk1,3Rtx,c/0r,c/yV,9bpP,9aTx",
                    "7b77": "j4/P,pbWF,mVlj,mVKp,mVrz,jSh1,j5Er,pcw9,mVZX,mWq9,mW4b,j67N,aHUP,g1O9,jS4r,3QHx,gOSH,dLF1,gP3b,gPBF,btLx,bt9X,bt/9,j5NP,cekV,9XON,67wp,3QQV,btvP,6UKp,3RG1",
                    "72f8": "oqOP,lnHp,hzEF,dLyN,6U2F,5mlx,3Qv1,hziH,or8N,9X0H,gOPF,orlb,orZV,excV,ewAh,orlh,j5yb,j6aV,orH3,4C99,9Xz3,9Yi1,4BFP,4CBh",
                    9675: "3QuX,nG11,nGq1,hzyp,dLBV,aIhV,9arp,mVHb,mWn1,j5rX,j6h9,pcw3,j5U9,dLEX,hA1F,hAkj,dMu9,9aK3,fhI1,c/6H,c/vN,9bdp,6UB1,3QU1,aIAz,7Ft9,5naF,3RJ9",
                    "739b": "mV8P,mVHh,mVrz,8pIF,g1KX,g2b9,66WP,9Xz9,nGzj,nH5N,dMhF,loaz,dLRx,dMu9,6891,4CrV,3Rnh,9aNb,9Y8F",
                    "85d0": "m8jP,m9B9,pc3X,jSh1,pcw3,jSJ9,hzoX,jSdV,hzEz,g21N,g1O3,ewep,gP03,cdyV,ewkz,9Xw1,5muV,3QBh,9X6X,c+JN,aIeH,66+1,jSJ3,hA4N,hz+x,aIxx,aJ3V,hAwV,hA4N,ewGr,excV,aIGP,67CF,3QX9,aITj,4Cfp,3Rtx,3RG1,68c9",
                    "5e74": "ikdX,m8CF,pc0V,m8Cz,m9y1,gPEH,gOMx,9Xjx,9X3P,9Yl9,m8/z,3R7F",
                    "62a8": "kCCH,kD61,pbTr,5mlx,3Qv1,bsJP,g281,nGt3,nHf9,jT2X,ex3x,j5yb,dLXN,bt6P,bu2h,nGS3,3Rk9",
                    8110: "4BdH,9X71,nG11,nGmV,67jV,5mip,ikdX,ikzV,c+qX,c+MV,pcmH,mW4h,lnWX,loJ1,lozz,hAe9,dLI9,kDir,gPp9,dMr1,c/3z,8q5F,3QU1,c/pr,3Rtx",
                    9877: "oqV3,9al9,cd/1,jRX3,jSh1,nGpX,nHf9,nGS3,jSzN,9aNb,jSnh,jS/V,9bpV,g2wX,9b0V,5mEh,3QNN,8qlb,4Cv1",
                    "6c5d": "oq/j,lnTV,j52X,g1Xx,4BgP,c+GF,hzHH,hAD9,hAqz,ceuh,7FgF,4BFV,orDX,c+T9,5nk1",
                    7533: "8pzb,lnEh,loCN,8qxN,g1Rb,g2PN,aJ0H,aI2h,pcgr,3R4x",
                    "8d4e": "9X6X,mVc1,mVB1,9Xw1,j5fr,cdOx,6TVh,3QrV,8pLH,67q9,m8Vj,m9y1,orH3,il39,ikJb,ils9,fi1V,gPcz,fhEV,dLOj,cehN,9XCb,9Yl9,gPsb,9b79,5mNF,3Q+h,8qoj,4Cy9",
                    "5c81": "nG43,jRX9,jS/V,nH8V,pcgr,jStx,aH/3,dLvF,ikG9,fhfP,fhXF,aIQh,7FjN,5mB9,3Qv1,bt6P,7FjN",
                    5243: "oqYb,lnNF,lnWX,orop,kCIX,kDix,gP9x,gOD9,cdF9,cehN,7FgF,67th,kD2P,3QQV,66WP,8pCp,cdXV,mW4b,aIQh,pcOP,5ngV,3Rtx",
                    "5b8c": "pcdj,m92N,hzs3,m8q9,m9uV,hAwV,hzEz,hAnx,c+u3,c/C1,3QrP,5mlx,6U8V,8pS1,9Xz9,c+Wh,c/9P,5mTV,4C61,4CrV,7FS9",
                    "4fae": "fgSP,kCSp,or5F,kCSj,3QEp,hzHH,lo1h,orrx,lo1b,loM9,c+JH,c/Ih,g2tP,dM8h,btvP,8qlh,6V13,6Uf9,ikMp,iliN,682N,3Rnh",
                    "8be6": "oqRX,kCYF,hziH,hzyp,4Btp,9XsV,pc73,lodN,kDuX,pcIF,kD2P,kDU1,fhiX,fi1V,aIhP,aJa9,kDuX,3Rh1",
                    5618: "9X6X,kCJ1,kC/N,bt3N,bsN1,pcw3,kDy9,mW13,mWgN,kDX3,kDch,9XCh,6Uc1,4BCN,hA1z,illV,jSJ3,g2A9,fhOh,fi1V,gPO9,aIxr,6UB1,c/cX,67M1,c/pr,67Yx,6UNr,aJa9,67tb,68fh",
                    "6b83": "mV8P,mVHh,mVor,g1Rh,cdvN,hzyj,hzO1,bt3N,7ENp,4BgV,c+xb,bt0F,dLRr,kDix,kDQV,dMnV,dLI3,dMu9,orKb,dM59,7FgF,3QQV,c/g3,7FFF,4Cy9",
                    "8c0a": "nG0X,kCVx,gOtH,gOJp,4Btp,9XsV,pcjz,mW19,hzHH,lnQN,loFV,hAwV,4BPb,hzUh,hAnx,4Cix,dLLb,dMex,9XCb,9Y5x,4BCH,4CBh",
                    "96e8": "nFZP,nHf9,3QBb,j59h,j6aV,685V,4CoN,3Rnh,nGCr,4BVx,g21H,c+Wh,bt3H,7F7h,gPiP,c/px,cenX,8qop",
                    "8e81": "oqV3,orf1,ikD1,ikh9,oqV9,ikqr,6T/x,dLsr,dLI9,ew83,6TS9,66WP,9aK9,nGFz,nH2F,kDKF,kDlF,nGFF,ikJb,ikYV,ewPV,ewAh,ikJh,il9j,ilp1,exg1,ex0p,il9p,btd3,bt/9,dM53,3Rk9,5mxX,7FgF,btC9,7FFF,5nn9",
                    "8d1e": "pcdj,j5Bp,m8Vj,m9y1,9arj,j5cp,j64F,9bjF,fhyz,aIxx,7F49,5moF,3Qv1,8q8H,67Yx,3RG1",
                    "682a": "jRQP,jSk9,pbTr,3QHx,bsJP,jS4x,hzBr,dLF1,ikJb,nGFF,kDir,kDU1,fhm3,fi89,pcw3,3Rk9,67jP,9aTx,fhL9,9Y8F,68fh",
                    "94bb": "ikaP,or2x,kCPb,kDfp,gOzX,gP3h,cdyP,ce5h,gOMr,3QHx,8pYh,pcw3,dM59,jSJ3,jT69,3R4r,dLRx,dMnV,3RCV,5mKr,5ngV",
                    "6f62": "4BjX,cdRF,lnNz,oqS1,ik7H,fh6x,ikzP,ils9,m9xX,m8M1,ikSz,pcjF,pcCj,il9p,ik/X,9b41,9aNb,fhph,fh+N,9bmN,9aNh,ce5b,ceGN,3RFX,7Fzp,7Fgz,3QU1",
                    "8dcb": "5m2H,8pYh,66ZX,ew51,6U2z,hzEF,c+Gz,c+Wh,hzNX,hzp1,mVc1,mVB1,hzO1,nGYj,jS/V,ilvb,ikJh,orDX,ewJF,9aK9,fhBH,fh+N,aIWx,7Ft9,5mNF,3QU1,cehH,9b79,67/F,4Cy9",
                    "6bd5": "pbQj,dLpp,gP9x,lnHj,loaF,pcmH,g2qN,ewT1,excV,hAD9,lodH,loM9,9X0H,9Yoh,3R4r,dLRx",
                    8695: "nGaj,nH2F,nGzj,j5v9,fh9F,cdyV,j4/P,j6h9,j5KH,fhRp,c/F9,8pIz,dLvF,dMbp,9Y2p,9XmF,hz+r,67zx,4BjX,6UNx,8qoj,4CrV",
                    "8bda": "oqRX,lnNF,ik7H,iknp,6TYp,aIeN,3QEj,8pS1,ce29,ln+9,loM9,gP03,gPfN,9aZN,7F7h,orQr,m9uV,pcw3,c/jh,67/F,3RCV,6V4h,4BYz,8qlh,dMhF,hAwV",
                    "806a": "mV8P,mVHh,mVf3,8pw9,mVAX,3QU1,j563,j5s1,dLEX,dLj9,6TIH,aIo9,oruz,lok1,orWH,kDBh,kDir,kDQV,excV,ewGx,kDix,5mB3,aIxx,btsH,5mQN,4C2V,4ClF,6UTN,c/g3,9bgx,ceGH,7FVh",
                    "8fea": "nG0X,j5iF,g1EH,g1Up,6TYp,4BgV,6TYj,4BM9,4Cy9,6Uf3,kD99,kDNN,6UTN,9bmH,9aK9,fhm3,fh+N,pcpP,9b0V",
                    "65ad": "mVbX,66+1,67wp,m8wj,j5iF,m8/z,ikG9,gOGb,gPcF,9Xa3,gOVV,fhfP,btmx,pc0P,9aDV,os0X,mVWV,9XRV,3Q+h,gPiP,gPRh,gPBz,3RwF",
                    "5e9f": "5m2H,bsTh,lnEh,loM9,pcdj,m95V,jSk3,g1+F,g2Z9,jSMb,hAqF,jSzH,ewGx,btgh,7EZV,677p,c+Zj,c/sF,9Y2p,6UxV,3QQV,c+Zj,7Ft9,3RG1",
                    "8d76": "4BgP,9Xdh,c+Ap,9Xdb,67jV,4BSp,4Cy9,67jP,fhfV,bt6P,btmx,fgSP,fhvx,fhcH,or8N,jRTX,jStx,loaz,loJ1,dLRr,dMu9,loqb,67Sh",
                    "74dc": "5m2H,9Xdh,cdLp,fh6x,mVox,nH5N,m8Vj,9XCh,67n1,7Fq1,aIGP,67Sh,mW4b,g2Gp,c/px,68c9",
                    5408: "fgSP,jSdV,orrx,kDv1,hAqF,g2Z9,g1+z,g2Jx,3QHr,cdOx,ceAx,3Rtx,5mlr,5n7x",
                    "5e4c": "8psX,kCJ1,kD2V,9XsV,8pIF,pbQj,3QEp,oroj,orWN,hAtN,hzXp,orop,lo4j,loCN,g2eb,c/6N,hAe3,btC9,c/mj,g2SV,btd3,bt/9,btvP,6UrF,5mHp,3QQV,btFb,4Cch,3Rqp,3RCV,6V19",
                    "67b7": "pbTr,3QHx,jRQP,jSdV,aHUP,jS4x,hzBr,dLF1,kD5X,kDv1,7Fq1,67M1,4BSp,pcgr,ewDp,9aNh,3QNN,4Cfj,lotp,loJ1,4Cv1,6UKj,6U+1",
                    "8f83": "m8jP,m8Sh,pbWz,dLcV,ewAh,iktz,3QKF,8ppP,aIup,pcsX,m9lx,lo7r,loPh,ewDj,j5R1,j61r,fi89,dMkH,9Y5x,67M1,3Q+h,c/6H,8qlh,5ndN,3RJ9",
                    "97a0": "mV8P,mVKp,pbQj,j5cp,j5s1,pc41,gOD3,gP3h,ce5h,cdF9,gOD9,8ppP,8p/p,j5iz,3QKF,ikMj,pct1,lodH,loJ1,5nk1,3RwF,hz+r,fhEV,g2Gj,ilfF,dLRr,dMkN,j5U3,5m+9,7Faj,dM59,c/g3,9bmN",
                    "80af": "j4YH,j6kh,or2r,j5fx,pcjz,j5HF,mVQz,mWjV,3QHr,g1Xx,g2MF,5naF,3Rk9,cdOr,ceDF,9bjz,9aux",
                    8001: "lnEb,lon9,pcdj,gP6p,gOwP,gPO9,6TLP,9axF,ce5h,g2tV,j5Xh,mWdF,c+PX,5my1,4BM9,4ClF,7FLV,8pRX,ceDF",
                    6599: "mVbX,j5cp,jSdP,nGwh,hziH,hzUh,pbTr,3QHx,9X3P,hzBx,gOMr,ce29,mVQz,j5Xh,gP9r,c/g9,9Xz3,bu2h,pcIz,3RwF",
                    "5b6a": "pcab,m92N,m8jP,m9B9,fgSP,j5iF,m8P3,dLI9,m95P,dL+V,j5+j,fi89,dLsr,dMbp,aIAF,5mNF,3QX9,9aeP,9bw9",
                    "5b5f": "nGaj,nH2F,jSwF,fhyF,dLI9,ikdX,ilp1,5mij,cdLp,ceDF,5naF,5mEb,ce5h,cekP,5mTV,5m5P,5nn9",
                    5357: "lnuP,loM9,pcgr,hz+x,3QBb,hzvh,hAwV,5ngV,3Rqp,g24P,c+Wh,c/3z,g2A9,c+JH,c/mp,9axz,9bgx,c/0r,4BVx",
                    7554: "7EDX,mVc1,mVE9,9aK9,9ai1,g1KX,g2b9,mVor,9aux,mVKj,ikYV,ilfz,mWn1,g2hj,g2Z9,aIuj,aJa9,pczb,3Rnh",
                    8461: "mV8P,mWq9,pc3X,kD61,pcsX,kDv1,g1KX,kC/N,j5iz,j6aV,5ngV,3Rqp,g1Uj,g2Jx,ikVH,gPp9,5mij,dLpp,dM8h,6UHh,5mTV,bsWj,btFh,8pCj,8qlh,j5Bj,4BSp",
                    "7a8d": "pcab,mVTN,j563,mVf9,mWjV,j6aV,gOD3,jSk9,kDrP,gPL1,ew4X,ewAh,ewkz,6U2F,5m5P,7Fap,fhsj,fi89,fhEP,aIDN,aJ3V,5ndN,3Rh1",
                    "8ba4": "oqYb,jSh1,hziH,hzyp,4Btp,9Xw1,pcsX,hAb1,btsN,6Ulp,3QNN,hAaX,aITp,6UTN,4Cy9",
                    "4e0a": "5m5P,5nn9,oroj,5mHp,hzXj,hAtN",
                    "6c0f": "nH2z,mVih,3QBh,9aK9,g1Rb,g2SV,mVNr,fhyF,9b41,3RzN,7FP1",
                    "8bbc": "oqYb,jSaN,hziH,hzBx,4Btp,9aH1,dLBP,ikMp,nGFF,orKb,ilfF,g2SV,dMu9,g2wX,9XLF,4BM9,67/F,btFb,4CrV",
                    "6ed4": "oqV3,lnNF,j52X,g1Xx,4BjX,c+Dx,m8IP,mVWV,os11,jSgX,hzXp,kDrP,hAe9,g2Gj,loJ1,ewMH,ewu1,3QU1,ewW3,excV,3RCV,aIkX,aIDN,aIQb,aJ3V,5mxX,5ngV",
                    "62d6": "lnuP,lnX1,cdyP,fhfV,pbTr,5mlx,3Qv1,gOYX,orxN,lo7r,loM9,c+PX,gPHV,9YbN,8qop,il33,7Ft9,gP6j,5mHp,4BVx,4CrV,7FS9",
                    8717: "aHXX,kCJ1,kD61,c+Q1,c+r1,pbTr,7EQx,66WP,8pS1,aIhP,67th,nGFz,nH8V,illV,ikSF,nGFF,il6b,c/jh,8q8N,c/jb,9bmN,3R4r,ewGx,exg1,5nk1,3RwF",
                    8237: "3QrP,9Xdh,m8th,m8P9,5mB9,3QNN,pbZH,m8zx,ev+H,ewGx,j5fr,gOSN,cdOr,9XsV,orDX,lotp,jSqj,jT69,jSMb,dLUF,dMex,gPEH,5mKx,6UWV,9Y8z,4Cy9",
                    "90a2": "nG0X,nGIN,fgSP,fhEV,nGgz,c+GF,9Xjx,5m91,nGwb,5mEh,3RgX,nGP1,nHc1,gPvp,dMr1,aJa9,9bw9,7FCx",
                    "4e25": "nG0X,nHc1,lnEb,ikzV,nGwb,gP3h,nGLP,gPiV,il6b,m9rN,gPKX,gOJp,bsWp,9aoh,5m5V",
                    8681: "bsMX,kCJ1,kD99,dLI9,dLg1,pbWz,8pIF,6TLP,9XCh,cd+X,7Fdx,orxH,kDBh,kDir,ewMN,9bah,6UQF,4Cy9,3QTX,67CF,9bah,ceAx,g2MF,m9rN",
                    9149: "nFZP,nHf9,3QBb,j59h,j67N,3RzN,cdRz,ewu1,gP09,nGt9,nGIH,fhBN,ewPV,dM21,dMkN,9Xdb,9YbN,5mfb,5ndN",
                    "97f5": "or2r,m8IV,lnxX,lo7x,jR+b,hzBx,g24P,jSk9,g1HP,g2nF,3QBb,c+xh,c+Wh,5mEh,5mfh,9aob,9aNh,hz+r,orH9,kDrP,kDU1,6891,5nk1,3Rqp,gPiP,ex0p,9aWz,c/sF",
                    "969c": "3QuX,oqS1,orbV,hzyp,ewnN,bt6V,9Xgp,pcmH,mW19,mVAX,mWjV,m8Vj,j5KN,j5U3,m9lx,j5lH,j6h9,g2eb,g2MF,aIZF,aIrh,g2eh,dLLb,dMhF,7EWH,7FVh,aIJX,3Rh1",
                    "7a92": "pcab,mVTN,ikdX,lny1,loJ1,ilp1,hzyj,jSk9,kDoH,hAqF,g2VX,g1L1,g2eb,bsWp,ceAx,ewSX,btRN,8pCj,8qxN,btmr,4BVx,4BgP,4Cy9",
                    "7d2b": "nGaj,hzyp,gOzX,j5HF,oreX,ikD1,m8LX,m8/F,pcpP,ikYV,hAb1,hAA1,jT69,kDrP,mWjV,hzXj,dLvF,dLUF,g2Db,9Xgp,aIWx,c/jb,9bpV,5mc3,8pOV,9XLz,5mNF,3QX9,9b73,5nk1",
                    "715c": "3QrP,9arp,dLsx,or2x,ew1P,jRX9,kD93,gOMx,cdOr,7F49,ewDj,nGzp,nH8V,excV,ewDp,j5Bj,j6aV,dM1X,ceuh,btjj,btUV,9XLz,67IV,aIZz,4Cch,4BM3,4Cy9",
                    6309: "3QuX,5mlx,pbTx,jRNH,jSk9,fhiX,bsGN,pcpP,m9ip,hzUb,lo1h,loM9,hAD9,dMxb,dLI9,dMkH,9bgx,5mNF,3QU1,j5U3,9XIx,7Fzp,4Cy9",
                    "8d1d": "bsZr,nGdx,nH2F,btOF,jSwz,ewGx,btgh,7EWN,5m5V,btsH,68c9",
                    "6cca": "oqV3,lnQN,ikaP,fh9F,cdRz,4Bk1,pczb,kDoN,3Q+b,kDch,kDU1,3RG1,dLLb,dMr1,688X,67th",
                    7092: "ev+H,jRU1,or2r,cdOx,8pzh,5m5V,hzBr,kD99,cdOr,8pV9,c+T3,jSwF,pcw3,aIN9,kDHr,fi89,dMkH,9bdp,67FN,3QU1",
                    "521b": "gOtH,nGmV,ikYV,7Fgz,4Btp,gOJp,gP6p,btgh,9XsV,loqb,9X/h,pcOP,5ngV,3Rqp",
                    8361: "m8jP,m9B9,pc3X,j5s1,pcsX,j5R1,j59b,g21N,fgVX,cdOx,4BjX,aIeN,ikG3,ilfF,c+Wh,c/yV,5ndN,3Rnh,c/9P,9aQp,6U8V,c/pr,7FmV,3QX9",
                    "6d1e": "nG43,lnQN,ikdX,g1Xx,5m8X,cdRF,4BIX,nGq1,nHc1,5nk1,3Rtx,j5Bj,j64F,fhyz,fhUx,9Y5x,9XLF,fhyF",
                    "53cd": "nH5H,mVlp,cdLp,9aoh,4BgV,gOMr,gPBF,btFh,6Ulp,3QHx,ewtX,9XLF,67Yx,4Cy9",
                    "590d": "ikdX,pc41,m8Cz,m9y1,jS7z,jSVF,dMhF,dLvF,jS7F,gOPz,gPBF,dLI3,8pw9,bt6P,btOF,8qf1,67wp,3QBh,9XvX,7Fdx,67P9,5n7x,4Cy9",
                    "52fe": "gOzX,pc79,lnQH,loJ1,682N,3Rk9,ikMj,9aoh,aIK1,fhyz,8qlh",
                    "634d": "3QuX,5mlx,pbTx,jRNH,jSk9,bsJP,fhj1,nGzj,nH8V,gPHV,gP6p,nGzp,kDfj,kDQV,dLLb,dMu9,9XvX,9Yoh,dM53,3Rk9",
                    "6dee": "oqV3,lnQN,ikaP,fh6x,4BjX,c+GF,g21H,pcjF,kDcb,3Q+h,pcsX,lowx,kDfj,kDX9,fhpb,fi51,btgb,btY1,67tb,68fh,kDBb,67Sh",
                    5373: "9Xz3,6719,nG49,nGwh,ewAh,ew89,j563,j5yh,cdXP,6Uox,3RdP,nGLV,nH8V,9YeV,7FCx",
                    9171: "oqV3,m8zx,ikdX,kD2V,pc0P,gOVV,jSnb,pcpV,mVQz,mWjV,kDKF,il6h,gPcF,lodH,j5Xh,fgSP,fi89,fhpb,ce5h,9axF,fhBH,aIDN,9XRV,9Y8F,7ENj,7FFF,3QEj,c+Ap,c/sF,3RwF,4Btj,4ClF",
                    "656c": "lnuP,loaF,or2r,j5fx,ori3,j5v9,dL9H,iknp,g1O3,g2kx,67wp,3QNN,6TS3,c+u9,c+MV,8pOV,8pw9,gPcz,orH9,jSCP,jT9h,jSYH,c/sF,9bdp,67M1,3R1p,g2tP,9X/h,67/F,3RJ9",
                    "770b": "nG43,orZV,kCSj,kDNN,hzlP,hAD9,nGCr,ikG9,ewnN,cdLp,9X0N,3QNH,ewnN,ex6F,3RwF,bt3H,btOF,8quz,8pLN,5mrH,5naF",
                    6765: "m8q3,m9uV,ew1P,exj9,jS4r,gOZ1,gPlX,jSSx,pcgr,3R4x,66WP,8pFx,btd9,ewGx,btvV,8qop,68c9",
                    "94fe": "hziH,or2x,jRX3,jSh1,g1KX,g281,cdyP,ce29,g1Xr,4Bwx,8pS1,mVAX,jSqp,ewtX,ewDp,67wp,4BFV,67wj,4C99,4Cy9,orKb,ewJF,exg1,loaz,loJ1,9XLz,9Yl9,il9j,67Vp",
                    "9e93": "m8jP,m8Vp,pbZH,gOSN,hzlP,m8FN,lnQH,j5Bp,m8/z,m9B9,pczb,gPsh,ikSz,m9fh,j67N,hAD9,hzXj,g2qN,fi4X,fh3p,9arp,6TVh,4BgV,c+Dr,c/vN,9YbN,9Xjx,ewAb,9XCh,ewSX,9XV1,9XsP,3QQV,5mKx,6U8P,6UrF,9XRP,4C2V,3Rh1,3RCV,68c9,6UxP,6UWV",
                    "4e48": "cdBX,ikzV,nGCx,jSMb,ce8p,5mfh,6UTN,btFb,4Cv1",
                    "62c7": "jRQP,jSh1,pbTr,5mlx,3Qv1,bsJP,fhfV,7FS3,7F7h,mVKp,mWgN,5ndN,3Rqp,fhiX,fibh,kDrP,hAhh,dL+P,9X/h",
                    "7cef": "mVf3,jS1p,jSdP,mVE9,hzlP,hzR9,pbWz,3QKF,9X3P,hzEF,g1+z,c+Q1,nGwb,nHc1,nGVb,fhOh,hzUb,lo1h,loJ1,hAA1,j5Er,j5R1,gP9r,gPm1,j5+j,j6aV,gPvj,gPHV,dLLb,dMu9,dM8b,aIGV,3R1j,aIup,aJ71,5nk1,3RwF,aIGP,4C2V,aITj,5n4p",
                    "62fc": "jRQP,jSk9,pbTr,5mlx,3Qy9,cdyP,fhj1,orrr,logV,jSMb,orZV,jSnb,jT69,dLI3,dMxh,jSCP,9XON,67zx,3QU1,jSVz,3RwF",
                    "8c34": "nG43,kCVx,hziH,hzyp,4Bqh,9aAN,mVxP,j5yh,fhcH,fhm9,6Uf9,4BCN,6Uf3,4B/N,4Cy9,mVQz,mWjV,jS/V,jSwF,mVQF,pczb,hAhh,hzXj,hAD9,6UuH,fhBN,fi1V,c/yV,c/6N,aIDH,aJ3V,7FLV,7FjN",
                    5374: "kCIX,kDlF,pc0P,fhfV,fgSP,fhBN,ewqP,66+1,7Fdx,ce23,67CF,3Rk3,mW19,mWn1,8qE1,6UNx",
                    "7eb1": "pbWz,hzlV,hzEF,kD5X,aHUV,cd/1,66WP,9aNh,dLI3,kDoN,pczb,aIQh,kDHr,exmh,3QTX,4BYF,67Sh,7FCx,ceJV",
                    8680: "g1EH,jR+h,or2x,jR+b,jSk9,gOVV,g1Uj,3QEp,8pS1,9aQj,j5Bp,j6aV,btUV,btjp,orH3,5m+9,4BM3,6891,9bjz,4Cy9",
                    "821c": "nG7b,orWN,m8Cz,j5s1,mVKj,jSzN,ik/X,mWdF,ew83,ikh9,ilp1,exg1,aH/3,gOZ1,ewnH,ewDp,9Xz9,6U5N,4Bn9,bt0z,9aH1,ewJz,excV,ewMH,9aZN,9bt1,gPvj,3Rqp",
                    "6a80": "j4YH,j5oV,pbQj,3QEp,aHRH,j5cp,hzyj,dLBV,pcmH,mW19,m8FH,m9B9,kD93,kDQV,dMnV,dLI9,kD99,ikSz,ilcx,g2Jx,g2nF,ikSF,btgb,btRN,6UTN,6Uih,btgh,9aNb,9bmN,4BCH,4CBh",
                    "75db": "kCFP,hzvh,cdyP,fh6x,4BgP,9Xgp,cdOx,mVox,mWq9,pcgr,mVWV,jSdP,jSVF,gPiV,ikMj,g2A9,4BIX,g281,g2SV,685V,4Cfp,cd+X,ceJV,9bpP,9aH1,g2tP,5mTV",
                    "672a": "kCPb,kDKF,fgVX,fi51,pcgr,3R4x,66ZX,8pFx,fhvx,aIN9,8quF,68c9",
                    "6d17": "nG43,lnQN,hzlP,fh6x,5m5P,cdRF,gOVP,mVKp,jSnb,jS/V,pcsX,ewT1,ewnH,exj9,3QHr,5my1,6Uih,9XIx,ewJF,ewZb,5n1h,4Cfp,4Cv1,6V19",
                    5199: "jRTX,nG11,nHc1,jT31,iktz,ilfF,lnNz,dLvF,dMkN,682N,5naF,3Rh1,9ahX,9bah",
                    "6c5b": "oqYb,m8CF,j4/P,g1Xx,4BjX,cdRF,nGmP,nH5N,5n7x,4ClF,4Cv1,7FVh,nGFz,3R1p,fhfP,fhOh",
                    6396: "jRQP,jSh1,pbTr,5mlx,3Qy9,cdyP,fhj1,pcpP,m9fh,ln+3,loM9,jSwz,bt6V,g2hj,3R1p,ceez,jSMh,gPlX,gPHV,aIZF,6UE9,4BVx,ewZb,ceDF,dL+P,9bdp,4Cy9",
                    "54df": "8psX,lny1,lnNF,9XmF,9X71,pcgr,hzKV,hz+x,kDoH,bt6V,cekV,67gH,8qf1,fhOb,aIZF,gPiP,pcFx,jSMb,jT31,6891,3Rqp",
                    "6e90": "oqV3,lnQN,ikdX,g1Xx,5m5P,c+GF,5moz,9aH1,ce29,nGt9,nHf9,mW4b,jSCV,jStr,jS/V,ceJV,cebx,jStx,g2kr,g2SV,67tb,9XON,ceub,5n1h,3RaN,9Y8z,68fh",
                    "6cbe": "oqV3,lnTV,ikaP,fh9F,4Bn3,cdUN,pcsX,ewT1,kDuX,kDX9,3Q+b,ewAh,excV,3RCV,5mEb,5ngV",
                    6267: "kCFP,kD99,pbTr,5mlx,3Qy9,bsJP,g281,j5yb,jSVF,67Yx,5naF,5nk1,6V4h,3QQP,8q2x,c/6N,pct1,fhpb,9Y2p",
                    "72b6": "lnuP,hzyp,9X3P,fhcN,pbZH,3QNN,hzNX,hAGh,nG/r,kDQV,pcsX,fhI1,aIDN,67wp,4BJ1,fhHX,ceuh,9Y5x,6UTN,5nn9",
                    "534a": "nGaj,j5v9,j5QX,nH5N,pcjz,3R7F,hzs3,hAA1,bt/3,bsJV",
                    "5f6a": "pc0P,jSdV,mVxP,mVTN,3QrP,6TP1,bsTh,jR+h,jSCV,hA1F,g1Uj,hz+x,ikzP,dLBV,dLRx,fhBN,3QBb,67dF,aIbF,aIup,4BSp,4CrV,7FS9,orZP,j5U9,c/9P,hAwV,6UxP,c/C1",
                    "643d": "pbQj,5mip,3QrV,jRNH,jSdV,cdvH,g24V,m8FH,m9B9,pcdj,j5Bp,pcCj,j5+p,c+JH,j5NV,c/Ih,bt9X,btUV,ewSX,5mX1,3R4x,5mrH,9XFp,9Y2j,5nk1",
                    7574: "66ZX,mVc1,mVE9,8pV9,8pt1,g1KX,g2b9,mVor,8pFx,m8Sb,m9B9,ikMj,ilp1,ewAb,exmh,pcw3,hAb1,btsN,5my1,aIDH,aJa9,9aZH,67Sh,dMhz,5naF,3Rnh",
                    "63aa": "kCCH,kD99,cdvH,g281,pbTr,67ax,3Qy9,m8Sb,m9B9,hAGb,hzR9,pcmH,hA4N,pcIz,hAqF,3R1j,dLOp,dMnV,3RCV,9XFj,9YeV,67wj,685V",
                    "60e6": "fgSP,jRX9,pbQj,3QEp,kCYz,hzKV,3QNH,9aK9,btgh,lo1h,loM9,pcpP,mW4h,kDy3,cer9,gPp3,gPL1,3R7z,ceeF,ceJV,3RCV,67Cz,685V",
                    "5ce8": "j4/P,8ppV,9aDV,j5oP,67jV,nGaj,8pCp,lnWX,mVWV,hzNX,hAD9,m8Yr,5mKx,3QX9,9XvX,dM21,orKb,aITp,4CrV,6V19,mWar,jS/V,excP,9Y5x,5mTV",
                    "51af": "mVbX,j5lN,8psX,ewnN,nGpX,nH2F,ex3x,kDir,ewDp,exj9,6U+1,4Cch,9XsP,aIZF",
                    "9e3d": "gOtH,nGjN,mVuH,ikPx,gOGb,gP3h,5mfb,c+xh,c+T9,6Uf9,6TVh,pczb,m95V,jSJ3,ilcx,fhOb,gPHV,m9uV,m8/F,ceeF,ceQ9,68c9,3Rqp,8p/j,9bjF",
                    "95fa": "4Bqb,kCPh,oq/j,lnTV,mVHb,mWjV,685V,3Rqp,ikwH,il9p,fhUr,fh9F,cdUH,cexp,7FCr,7ETF,kDir,7Fdx",
                    "5f18": "mV8P,mVB1,hzO1,hzs9,c+r1,c+T9,67n1,3QBh,orKb,5mHp,7FLV,fhUr,4Cy9",
                    "6d51": "pbK3,m8FN,j4/P,g1Xx,5m5P,c+Dx,kD5X,orf1,orZV,kDQV,j5oP,j6e1,m95P,dLF1,dMnV,9XpH,9Yl9,gPlX,3Rh1",
                    8327: "m8jP,m9B9,pc0P,j5oV,pcw3,j5U9,9arj,g1Up,g2MF,aIZF,aI5p,jStr,67zx,5m8X,6UTN,9bgr,4Cy9",
                    "8beb": "oqV3,lnNF,hziH,hzBx,4Btp,9aH1,kD5X,kDU1,pcFr,mWjV,ewtX,ewW9,j5Bj,9XCh,5muV,ikVH,7FjN,pczb,cexp,8qrx,3RCV,6V4h,4B/H,8qop,btOF,gPHV",
                    5026: "fgPH,or5F,kCSj,3QEp,nGpX,kDfp,kDBb,nH5N,pcpP,ikSF,fhsp,9XmF,j5oP,j6e1,fh9z,fi89,fhOb,ceDF,9Yl9,6UxP,8qop,cexp,ce5h,4BPh,3R1p,3RzN,6U+1",
                    "4fa9": "g1EH,jR+h,pbWF,jR+b,3QBh,g1+z,ikG9,m8/F,pcpV,m9c9,j64F,gPO9,g2b3,g2MF,cdXP,ceN1,cekP,4BFV,67/F,8qoj,3RCV",
                    "79bb": "pc73,mVTN,m8jP,m9B9,kCSj,ewep,ex6F,kDKF,kD2P,g2Dh,g24P,kDBh,3QBb,bsTh,btRN,5ndN,3Rnh,ewJz,6U8V,7Fq1,9XRP,6UHh",
                    "5cad": "j52X,8pt1,8pS1,jSgX,67n1,or2r,8pFx,g2b3,jSzN,orH9,jSSx,hAtN,g2Z9,hA7P,ewZh,c+Wb,c/yV,67P9,8q5z,3Rqp",
                    7801: "mV8P,mVHh,mVuH,hzyp,c+nV,677j,gOJp,gP09,8pV9,8pCp,nGzj,nH5N,dMhF,logP,dLUF,dMu9,6891,3Rtx,9XFj,9Y8F",
                    "79d2": "mV8P,nGwh,ikaP,ikMp,mVor,3QHx,9abH,ikqx,gOMr,ce5h,dLOj,jSwF,orKb,9X/h,jSVz,exmh,3QTX,4BYF,67P9,7Fzp,9Y8F,c/yV",
                    "78be": "mV8P,mVB1,mVor,dL9N,7EKb,gOGh,gOVV,9XsV,9Xdh,4Bzz,7F11,ce5h,nGwh,nH8V,jS/V,jSnh,g2eb,g2W1,ce5b,ceQ9,jSCP,cekV,jSSr,ceAx,ceez,3R7F,67P9,cer3,8qrx,3RJ9,8qrr,aJ3V",
                    "70f9": "pcab,mVTN,m8jP,m9B9,jS7z,jSPp,g2Gp,g1+F,jS7F,ewbb,ex6F,btpF,9aWF,7F49,3QrP,7EQx,6UbX,3Q+h,7FmP,3Rk9,8quz,3RJ9",
                    "9f50": "pc73,mVTN,lnuP,loM9,loqb,hA1F,ewkF,c+nV,jS7z,g2nF,ewZh,dMu9,dLEX,8pS1,67gN,3QBh,dM8b,3Rnh",
                    "8bf7": "nG43,lnQN,hziH,hzyp,4Btp,8pS1,mVHb,mWn1,jSnb,jS/V,gOVP,gPRh,pcsX,gPm1,3R1j,dLOp,dMnV,5ngV,3Rtx,aIuj,aJ3V,7Faj,7FLV",
                    5165: "5m2H,c+MV,kDix,nGt3,lo7x,kDlF,j5KN,ewT1,btFh,5nn9",
                    "547b": "9Xdb,kCPh,kD2V,bt6V,bsTh,8pYb,lo1h,loFV,8qAV,g2eb,g2SV,btUP,btgh,pcsX,3Rh1",
                    "5b70": "oq/j,m8FN,lnrH,lo7x,j563,fgZ9,fhph,j5yh,j569,c+qX,c+Wh,aIeN,5mrN,3QBh,8ppP,9XFp,dLRr,9X/h,orDX,btvV,67zx,3QX9,j5Er,j64F,5naF,4CoN,4Cv1,6V4h",
                    "7a57": "mVbX,nGq1,ikaP,ikD1,mVor,3QHx,9abH,ikqx,g1Xr,c+Q1,mVHb,mWq9,pcw3,cer9,jSqj,jS/V,excV,ewDp,jSqp,hzXj,hAwV,btgb,ceJV,dMkH,aJa9,5muP,9aNh,9XLz,5mNF,4B/N,4Cix,6UQF,aIJX,7Fzp,9bmH,68c9",
                    "5c49": "5m2H,9al9,cdIh,oqYh,orZV,jS/V,jR+h,ewhr,exj9,ikSz,9aWF,9bgx,ilcx,ikzP,5muV,5nn9",
                    7897: "m8jP,m8M1,dL9H,gOGh,m8zx,674b,g1Rh,g24V,9aDV,9aoh,orAP,m9fh,ikJb,lo1h,loJ1,ilp1,bt9X,j5HF,g2kr,g2x1,cekV,8q5F,3QU1,ce8j,aIDN,9bgr,aJ3V,gPHV,gPsh,5n1h,4Cfp,4Cv1,68c9",
                    "575e": "ikaP,ikD1,oq/j,9Xgp,8ppP,btd9,m92H,pcw9,g2Db,hAtN,m9rN,m8Vp,c+Zp,c/F9,6891,5ngV,3Rnh,7EZP,8qrx",
                    "60f3": "jRTX,jSnh,or5z,aIbF,dLfX,j5iF,fhph,nGCr,nH8V,ceJV,cebx,nGCx,jStr,jS/V,g2kr,g2SV,4BjX,9arp,9XsP,5muV,4BJ1,3QX9,3Rnh,6UNx,aIxr,7FmV,9Y8z,68c9",
                    "987b": "j4/P,or5F,dLcP,j5oV,66TH,9arp,c+MV,nGpX,nHf9,nGS3,j5NV,8p/j,j5Bp,j6aV,9bpV,g2A3,9XV1,6UuN,5mHp,3QNN,8qoj,4Cy9",
                    "592e": "dLsr,kCVx,kDHx,dMex,dLcP,dMu9,pcgr,dLRx,9aK9,6U2F,3Qv1,c/0r,aIGV,8qlh,682N,4Cy9",
                    "8bd1": "oqV3,lnNF,hziH,hzBx,4Bwx,9aDV,oreX,orWN,lotp,hA4N,g2eh,ewnN,nGwb,jSzN,hAhh,gPyx,fi89,c+T3,c/yV,9aGX,9bw9,g2wX,3Rh1",
                    "4e0e": "pbWz,ewkF,ex9N,67/F,5n7x,4Cfp,3RaN,kCYz,kDX9,9X6X,9Y5x",
                    "566a": "8ppP,m8jV,m8CF,aIbF,aHUV,nGFz,nH2F,kDKF,kDlF,nGFF,ikJb,ikYV,ewPV,ewAh,ikJh,il9j,ilp1,exg1,ex0p,il9p,btd3,bt/9,dM53,3Rk9,5mxX,7FgF,btC9,7FFF,5nn9",
                    9488: "ik7H,pbTx,lnEb,lo1h,hzoX,hzR9,c+kH,c+Wh,hzBr,3QHx,8pYh,gP6j,gPO9,pczb,3Rnh",
                    "86db": "aHXX,jRU1,jSh1,c+Q1,c+r1,or2r,8pFx,66TH,9aH1,aIhP,7F7h,hzUb,mVQF,jStr,jT31,fhpb,fi89,pcw3,3Rk9,5mxX,8q2x,aIDN,fhL9,9bjF,68c9",
                    "7e82": "jRQP,pbZN,mVor,mVNx,mVxP,lnX1,lo7r,pct1,mVTH,mWn1,mW4b,lowx,kCVr,kDHx,ex3x,ewhx,kCVx,ikqr,ilcx,gPyr,gOMx,cdvH,ceTh,ewx3,aI5p,8ppV,ce8j,9XpN,9XLF,btyX,6T/x,7Fzp,9bab,6UTN,67jP,3QBh,6Urz,4BYF,3R1p,67LX,3RzN,cer3,9YbN,8qH9",
                    "4ec9": "ev+H,kCVx,or8N,kCVr,3QHx,3QQP,7Fap,9XIx,mVNx,mWax,5n7x,4ClF,4Cv1,8qKh",
                    "9e9f": "4BdH,cdC1,m8n1,m8Yx,m8LX,dLF1,dLsr,m8zx,pbTr,mVxV,ikdX,ikMp,dLOp,dLg1,c+Aj,4Btp,67gN,9XpH,9Xgp,c+PX,4BJ1,67wp,aIuj,9aH1,3R1j,6UxV,9XY9,c/jh,c/6N,9XOH,8qf1,9XIr,fhEV,fi1P,3RCV,7FS3,7FCx,c/px,c/Ih,fi83,jSPp,fhyF,fhRj,pcCp,nGIH,lon9,lozz,nHc1,jT9b,jStx",
                    9776: "3QKz,j5iF,9aTr,9abN,ce5b,g2eh,g1L1,cdC1,ce5h,pc73,j5v9,j59h,pbNh,m8gH,m8Yx,7FVb,5nk1,4CrV,4C99,5mTV,67FN,nGIN,nHc1,c/C1,exfX,ewMN,ex0j,nGYp",
                    "6bd9": "pbQj,hzyp,j5Bp,m8wj,m8Vp,pcpP,ikYV,hAb1,hAwV,j6h9,logP,mWn1,ew1P,exj9,ewqP,9ai1,bsZr,btjp,7F11,3Qv1,9aur,6U8V,ewMH,5mQN,4C2V,4CrV,6V19,9XOH,btUV",
                    "6b8b": "mV5H,mVKp,mVor,iknp,cdvN,hzyj,hzR9,aIhV,7ETF,4Bk1,c+Aj,aIhV,nG/r,loCN,hzXj,jT31,ce5b,fi51,4BM3,67FN,8qop,ceJV,pcpP,dM21,8qop,3RG1,6V4h",
                    "627f": "hzlP,hzHN,bsZx,66WV,nG7b,nH2F,j5Ex,5mKx,3QX9,hzKP,hAe9,dM1X,dLF1,9XsP,9XY9,gPp3,aIWx,68c9,ewZb,ilp1",
                    8471: "m8jP,m9B9,pcw3,jSJ9,jSk3,pc79,jSdP,ew51,ikwH,iliN,aIWx,9XY9,ikPr,bsTh,il6b,9aAN,g1+z,cer9,8pFr,4Bk1,8pRX,4BJ1,3QX9,3Rnh,67Vp,9XFj,6UxV,9bjz,5nn9",
                    "654c": "m8mX,nGzp,mVuH,dLyN,ik7H,ikPx,4Bn3,dLj9,dLLh,67th,6719,ewGr,pczh,j5NP,j6kh,j67H,c/sF,9Y2p,6UxV,3QX9,fhBH,btz1,8qlh,3RJ9",
                    "7f0e": "or5z,gOtN,gOPF,jSgX,bsJV,bt6V,5m2H,7EWN,nGLP,mVHh,3Q+h,ikJb,ikVN,dLLb,dLXN,8pLH,9XV1,fhBH,il39,mW19,mWgN,gPEN,gPRh,dM1X,dMr1,8qrx,3RaN,dM53,8qrx,4Cy9",
                    "6cb8": "oqRX,lnQN,ikaP,g1Xx,5m8X,c+GF,lnWX,loFV,loFV,hAwV,hzO1,c+Q1,c/F9,8qH9,6UTN,pcmH,c/6N,8q2x,4BFV,pcCj,3Rqp",
                    "611f": "aHUP,g1Up,m8wp,m9y1,pcCj,mWgN,j5iz,j5KN,pcsX,il39,ceDF,9YeV,c/F9,j6aP,fhUx,btvV,g21H,g2nF,ceeF,cdUN,g21N,9XFj,7FjN,9aur,4Bk1,9XsP,5muV,3QX9,3Rk9,6UKp,9bjz,5nn9",
                    5250: "nG7b,nGCx,hz+x,hzvh,nG7h,4BjX,ew51,ewMN,67FN,4BSp,hzNX,dLBV,9XmF,8pzh,c+MP,9aTx,loqb,9X/h,orZP,685V,3Rtx",
                    "76d2": "ikaP,kC/N,orrx,nGzj,kDBh,ils9,j5+j,j5iF,gOPz,c+GF,c/mp,gPvp,gOPF,4Bqb,aI2h,aIZF,4ClF,aIo3,4BM9,aIDH,4B/N,4BgP,4Cy9",
                    "604d": "ev+H,jRX9,3QEj,pbQp,kC/H,hzO1,mVE3,ikSF,pcsX,fhI1,il9j,mWjV,fhfP,fi89,fhBH,aIAF,7Fap,3QNN,fhOb,5n1h,4Cfp,4CrV,6V19",
                    5939: "lnB3,loPh,j5fr,fhj1,fhHX,j61x,dLcP,dMu9,orrr,ce8p,8pS1,3Qv1,c/0r,8qf1,67Vp,3RG1",
                    "53eb": "9al3,mVf9,mVB1,aIl1,aH/9,mVTH,btpF,c/yV,pcOP,3RCV",
                    "62d8": "kCCH,kD61,bsJP,fhj1,pbTr,5mlx,3Qy9,hzNX,lo7x,pcmN,lo7r,loJ1,5nk1,3Rqp,8q2r,g2kx,g2Gp,9Y2p,9XIx",
                    5543: "8psX,m8n1,m8CF,aIbF,aHY1,mVKj,hzXp,orDX,hAb1,m98X,m9uV,hzKP,hAD9,3Q+b,fhph,fh+N,5ndN,3Rqp,ce5b,ceGN,9bmH,9aNh",
                    "4f6c": "ev+H,pbZN,jS1j,3QEp,lnTP,lotp,gOPz,gPRh,pcmH,gPfN,9Xmz,c/0x,gPm1,jSPp,nH5N,ewGr,5mKx,4BYF,4CrV,7FS9,9XIr,ceJV",
                    5217: "nG0X,nGP1,nGmP,iktF,fh3p,cdyV,iktz,ikVN,dLRx,9XCh,7F11,4Bn9,dLvz,aIrh,m9fb,9X/h,pcRX,5nk1,3Rtx",
                    "6ee6": "nG43,kCYF,ikaP,fh3p,5m5P,c+Dx,pcjz,m9c9,m8FH,m9y1,fhcH,j5yh,m8Yr,ewGx,m9fb,ewZh,j64z,fi51,bt3H,bt/9,dL+P,3RdV,5moz,8p/p,btvV,7FCx,5nn9",
                    "772f": "66ZX,mVc1,mVuN,8pLN,8pt1,mVAX,ikPx,il6b,mWgN,g21H,g2Z9,pcpP,3RdV,67dz,aIup,g2tV,aIWx,6V19",
                    7537: "nGaj,nH2F,g2MF,g1Up,nGap,kCSj,kDKF,nGCr,g2kx,cdBX,ceGN,67/F,4C61,fhvr,aIrh,7EZV,3Qv1",
                    5224: "m8q3,ikqx,ikJb,mVTN,g1KX,g2qN,bsJP,btvV,oreX,cd/1,9XsV,6U2F,3Qy9,m9c3,9b79,orZP,5ngV,3Rqp",
                    "83e9": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,kDfj,ikVN,hzs3,hAwV,gOSH,c+Wh,c/9P,g2Dh,c+nP,c/F9,3QHr,aI8x,aIZF,3RwF,5mlr,5naF",
                    5207: "j4YH,j5yh,oq/j,9arp,8pFx,8pS1,btgh,m8P3,m9y1,685V,4Cfp,m98X,dL+V,9aWF,3QNN",
                    5203: "mVib,mWn1,6UWV,4C99,cdIb,ikzV,mVQz,c+Zp,9aH1,5mc9",
                    "5c1a": "m8tb,ikD1,orrr,gP9x,ik/X,m9oF,3Qy3,gOD9,gPHV,5ngV,3Rqp,c+MP,c/g9,7Ft9,7EZV,c+MV",
                    "5e02": "pc73,m92N,kCCH,kD+h,677j,g1Up,g2MF,7FFF,67P9,kDir,3R4x",
                    "8bf5": "oqV3,lnQN,gOtH,gOMx,4Btp,9aH1,nGt3,nH8V,jSJ9,kDoH,il9p,3Q+b,hzUh,hAA1,5nk1,3RwF,dLLb,dMr1,9XCb,9Yi1,hAe3,5m+9",
                    "7ee6": "nGdr,hzlV,hzEF,jSgX,bsN1,cd/1,66WP,8pS1,j5yb,orAV,loaz,loCN,il6h,g2qN,dLI9,j5Hz,hAb1,g2Jx,exj9,ce8j,ceJV,5mxX,9aWF,fhL3,5m+9,3RaN,9bgr,68c9",
                    6258: "jRQP,jSk9,bsGH,fhm9,pbTr,5mlx,3Qy9,lo4j,m991,nH8V,ewAb,exmh,m98X,5mX1,4C99,4Cv1,6V4h",
                    "6da1": "oqV3,kD2V,j4/P,fh6x,4BgP,cdUN,nGwb,nH8V,illV,ikJh,nGwh,il33,ceo1,7Fap,cenX,8qxN,3QX3,ewx9,exg1,5nk1,3RwF",
                    "95f2": "4Bqb,kCPh,oq/j,kD2V,mVHb,mWjV,5ngV,3Rqp,gOPz,gPyx,kDlz,5mNF,8pIz,btd9,gPcF,cer9,9bgx",
                    "884c": "j4/P,pbZN,cdyP,jSdV,g1Xr,3QHx,nGwb,nH8V,gOVP,gPRh,gPyr,5n7x,3Rh1",
                    7814: "nFZP,nGq1,ev+H,nGdx,6TVb,gOGh,gOVV,9aDV,9aoh,nGwb,nHc1,fhm3,fi89,nGFz,dLUF,8q2x,6Ulp,4BJ1,nG/r,3Rtx",
                    "501a": "fgSP,jS1p,pbZN,jS1j,3QEp,lnTP,loJ1,pcpP,kDoN,ikMp,gOVV,kDoH,j5Xh,gPHV,fhcH,fibh,67q3,ce29,cer9,7Ft9,7F49,fhXz,5naF,3Rnh",
                    6709: "m8jP,m9B9,cdyP,ewep,hzKV,kD99,pcdp,3QQP,hzKV,hAnx,5n7x,3Rk9,dLBP,dMex,9aDP,9bgx",
                    "5b55": "oqV3,orNp,jSJ9,jS/V,g2SV,ex0p,ew4X,gOPF,ikzV,ori9,g21H,g2Dh,ceeF,5mNF,3QU1,9X3P,9Yl9",
                    "62db": "jRNH,jSk9,pbTr,5mlx,3Qv1,bsJP,fhj1,nGt3,nH8V,gPHV,fhRp,ewAb,ikVN,nGP1,3R1j,c+Zp,c/C1,3RG1,67wj,6891",
                    "4e2d": "aI2b,kCPh,kDNN,aJ0N,cdIb,ceGN,pcgr,3R4x",
                    "4ed4": "ev+H,or8N,kCVr,3QHx,m8LX,m9uV,hAe9,5m+9,3R7F,ewqP,exmh",
                    9608: "3QBb,lnEh,pbQj,m8FN,nGwb,nH8V,5ngV,3Rqp,9bjz,6UNx,7Fwh,9XV1,ewMN,loaF,kDuX,j5+p,ilfz,ikqx,cdUH,cebx,g2kx,g21N,bt3N,8pFr,aIAF,6Uor,9XV1,c/jh,fhRp",
                    "900d": "pcsX,j5R1,nGt3,kDoN,kDBb,nH8V,ewAb,ex9N,aJ0H,aIrh,67tb,ikJh,iliN,7FIN,67Yx,mVf3,jSaN,g1EH,g1Xx,6T/x,4BgV,6T/r,4BSp,4CBh",
                    6697: "66WP,mV8V,mVuN,8pLN,8ppV,g1HP,g21N,pcmH,mW4h,m9xX,m8P9,jStr,g2tV,g2Db,kDKF,g30b,g281,3R1j,c+Zp,c/vN,3RzN,9YbH,9XFp,67wj,682N",
                    "94a1": "pbTr,hziN,lnEb,ln+9,hzoX,hzO1,cdyP,ce29,hzyj,3QEp,8pV9,9XIr,mVNx,mWjV,9YeV,j5Xb,cer9,7FmV,3QX9,9bdj,4Cy9",
                    "9a73": "nFZP,nGq1,ewnN,kCPb,ew51,ewAh,67q9,4BzF,9abH,aIhV,oroj,kDBh,gPL1,g2hj,kDBh,pcOV,ewMH,9XY9,6UQF,4CBh,3Q+b,67IV,9bdp,fi1V",
                    "8f66": "lnxX,loJ1,pcgr,ewhx,ex9N,j5Hz,3R7F,9X3P,9Yl9",
                    5439: "9ahX,mVc1,mVxV,cdXV,cdC1,fhiX,pcpV,kDoH,kDU1,g2MF,3QKz,67th,btvV,hAb1,ewSX,9bdp,682N,3RJ9",
                    6863: "jRQP,jSk9,pbTr,3QHx,cdyP,jS4x,ikqr,ewu1,nGt3,j5HF,pcw3,gPp9,j5+j,nHc1,gP03,gPL1,3RG1,btgb,btY1,67mX,6891",
                    "515c": "mVuH,m8th,c+xh,ewnN,pcjz,lo1h,lnWX,dLF1,dM21,lok1,lnX1,hzNX,hAb1,m9fb,m9uV,dMnV,dM8h,ce23,7EZV,4BgV,btvP,5mTV,4C61,4Cv1,6V4h",
                    "8fd4": "nG0X,kCYF,g1EH,g1Up,7ENp,5m5V,7ENj,4BM9,4CBh,mWjP,m8P9,ewx9,bta1,8pIF,ikJb,ilfF,dMbp,aIN9,7F7h,fhvr,cer9,7FP1",
                    5085: "g1EH,pbZN,kCSj,3QEp,mVxP,mWq9,pcCj,nH2F,pcsX,ceo1,cd+X,jSh1,jS/V,ceJV,hzNX,hAwV,ewtX,excV,9XpH,9Yl9,8p/j,67FN,ceDz,5naF,3Rk9",
                    "6c9f": "nG7b,kD2V,hzoX,ewkF,4BjX,bt0F,g24P,orxN,kDir,kDU1,685V,3Rk9,hA7P,9aH1,btIp,ewW3,9bjF",
                    "65f1": "oq/j,orTF,hAqF,hzyp,oq/p,lnHj,lozF,ewbb,ex9N,aHUP,aJa9,ewGr,3R4x",
                    "574f": "j4YH,j5v9,pbQj,bsWp,9X0H,c+T9,mVAX,mWth,mW7j,hAb1,cebx,8pOV,hAaX,3Rh1,g2Jr,9Yoh",
                    "5ac9": "jRNH,jSdV,bt0F,7EKh,5m2N,oq/j,cdC1,7F11,3QKz,7F7h,9XFp,m8Vp,m9B9,pcsX,mW7p,ikCX,g2hp,bt6P,dLOp,ewMH,j5R1,gPiP,gPL1,ceez,ceQ9,gPvj,aITp,67M1,3R1p,aITj,7FFF,3RJ9",
                    "964d": "3QuX,oqS1,orf1,hzyp,cd/1,9XsV,8pCp,jSk3,pcmN,mVQz,mWgN,il39,fhm9,kDlz,il39,fi89,c+T3,c/F9,c/0r,7F7h,7FP1,g2Db,3Rnh",
                    "955c": "ik7H,pbWF,kCM3,kD99,gOzX,gOZ1,cdyP,ce29,gOMr,4Bwx,8pS1,pcpP,mW4h,m8Sb,m9y1,kDlz,j5NV,il6b,kDKF,ikG3,ils9,g2hj,g2SV,9YeV,9XFp,g2hp,c+Zj,c/yV,9XRP,67CF,3QQV,9X/b,4Cch,3Rqp,3RG1,6V4h",
                    "5eb7": "4BgP,7EH9,9Xdh,m8th,m9y1,pcab,mVTN,jS7z,jSVF,dMhF,dLvF,gOJj,gPO9,m8/z,5mNF,3QX9,bt3H,9XCh,67ar,9XLF,ceez,7Fzp,5nk1,9b3X,ceDF",
                    "8d56": "m8mX,m8Yx,ikh3,ikMp,c+Zp,c+u9,ikh9,or8H,3QNN,66WP,c+JN,bt3H,8p/p,j5Hz,pczh,m98X,m9uV,ilcx,8q8H,ikVN,ilp1,8qE1,ex0j,8qlh,5mTV,3R1p,7FCr,3RJ9",
                    "604b": "pcab,m92N,lnxX,loJ1,dLfX,ikwN,lo1b,c+Wh,logP,c/9V,il6b,exg1,5m8X,aI8x,aIhP,5muV,4BJ1,4Cch,7FCx,btjj,8qbV,btLr,6V19",
                    "788c": "mV8P,mVE9,mVrz,hzvh,dL9N,674b,gOGh,gOVV,8pOV,8pzh,nGzj,nH5N,gPBF,kDir,kDKF,gP03,gPO9,ewAb,btpF,67mX,btz1,gPlX,5mX1,3R7F,dM1X,8quF,68c9,aITj,dMr1",
                    "73ab": "mV8P,mVKp,g1HP,g2b9,6TLP,9XCh,mVor,8pFx,fhpb,jSzN,orE1,jSzH,jT69,jSVz,dMex,8qi9,67CF,3QQV,gPcz,aIN9,7FCx,5ngV,3RJ9",
                    7261: "g1EH,jRU1,nG49,jRTX,jSnh,pbWz,3QKF,9X0H,dLLh,hzXj,hAA1,5mB3,5nn9,pczb,5n1h",
                    "8bfa": "nG43,kCYF,gOtH,gOJp,4Btp,8pS1,lnWX,loM9,pcjz,ikSF,pcIz,ilfF,g24P,g2Z9,j5U3,dLRx,9XsV,3R1j,btjp,btRN,3RzN,5mHj,5ndN",
                    9891: "mVib,gOGh,pbZH,8pLN,lnQH,lo4p,gOtH,gP6p,aHXX,dLpp,4BjX,6U5N,c+Zp,nGCr,nHf9,nGYj,j5U9,9aWz,j5HF,j6aV,9bpV,g2Db,8qi9,67IV,3Q+h,7FFz,4Cy9",
                    5811: "m8jP,m8Yx,pbWz,hzs9,hz+x,kD2P,aIhV,c+nP,c/0x,cebr,fhBN,nGIN,nHc1,j5KH,j6h9,j61r,aIWx,8pCj,8quF,4BgP,4Cy9,aIxr,4BVx",
                    "9e4a": "lnuP,lo4p,pbQj,gOJp,pc3X,gOZ1,gOtH,gP9x,3Qy3,dLj9,dLI9,5mB9,5mc9,9Xa3,9Xz9,pczb,mV+1,kDy3,ilcx,g2Gj,hAwV,mWjV,mVQF,c/3F,c/F9,5nn9,3RwF,8q2r,8quF",
                    "50bb": "g1EH,or8N,kCSj,3QEp,pcmH,mVNx,mVB1,g281,g2PN,mWgN,mVNx,lotj,gP6p,lo7r,gPyx,bt0z,ewDp,fhRj,ceQ9,ewPP,7EZV,ceez,ceDF,7Ft9,3QQV,9XLz,6UE9,3RJ9",
                    "5b9e": "pcab,mVTN,ikh3,m8q9,m9uV,illV,j5iz,g2hp,g1Rb,c+Q1,aHUP,aJa9,jSzH,c/6N,aIAF,6Uf9,5mrN,3Qv1,9aZH,67Yx,3RG1",
                    "8bf4": "oqV3,kC/N,gOtH,gOJp,4Btp,9Xw1,oroj,kDrV,j5U3,orWN,j5yb,j6aV,c/yV,c+Wh,j5yh,3QQP,67wp,7FgF,c/3F,c/jb,4Cch,3Rqp,3RG1,6V4h",
                    "75f0": "jRTX,hzvh,cdyP,fh9F,3QrP,6TYp,cdRF,m8CF,m9B9,pcgr,mV+1,ikJb,fhj1,kDrP,g2qN,dLRx,bt6V,g2qH,ceJV,g2Gj,j67N,aIrb,6Uc1,c/9P,9b0V,67zx,4BPh,3QNN,9b0P,67Vp,3RJ9,8qrr,aJ0N",
                    5077: "gOwP,pbZN,kCSj,3QEp,hzHH,jSnh,pcpV,lotp,hAGh,ikMj,ilfF,4BIX,fhj1,fhBN,67FN,4BVx,cd+X,cehN,9aZH,9aH1,ewZb,7Fwh,g2SP,685V,3Rqp",
                    "851a": "m8jP,m9B9,pc3X,jSh1,pcw3,jSJ9,5m5P,aI2h,ikkh,ikSF,fhyF,fh0h,c+Dr,c/3F,9Xgj,9XON,5mfb,8pIF,9Xz3,5mB9,3QNN,8p/j,67FN,ewPP,exmh,btvP,8qlh,jSVz,5naF,3Rnh",
                    "7cfb": "m8q3,orZV,mVNr,hzyp,il01,kDHr,cdIh,dMhF,g2Db,ceJV,5m8X,aIl1,ceez,5mNF,3QX9,aIQb,68c9",
                    "68b0": "jRNH,jSdV,pbQj,3QEp,bsGH,jS1p,hzyj,ewqV,kD5X,kDU1,pcFr,mWjV,ewtX,ewW9,j5Bj,9XCh,5muV,ikVH,7FjN,pczb,cexp,8qrx,3RCV,6V4h,4B/H,8qop,btOF,gPHV",
                    "8bad": "oqV3,kC/N,hziH,hzBx,5mlx,bta1,oroj,btjp,8pYh,3QNN,mW13,67P9,orZP,3RCV",
                    "4e1a": "j563,bt3N,ori3,5mB9,orAP,5mTV,aIN3,j6aV,5m5P,5nn9",
                    "62e5": "jRQP,jSh1,pbTr,5mlx,3Qy9,bsJP,fhj1,3QQP,9XFp,nGzp,nHc1,5nk1,3RwF,ikMj,ilp1,c+Zj,c/C1,nGS3,5m+9",
                    "7f18": "or2r,hziN,hzEF,kD5X,bsJV,cd/1,66WP,7F11,orxH,jStx,jSSx,mVQz,mWgN,gPsh,gOYX,gPRh,c+T3,gPm1,fhBH,btFh,67Vp,5n1h,3RaN,9aK3,c/d1,5mB3,7FjN,aIQh,btFb,fi51,ceAr,8qxN,5nqh",
                    "76cf": "orAP,mW7p,kCM3,m9rN,hzlP,j6e1,c+Aj,dLOp,ewMN,gPyx,pc73,jSnh,g2nF,c/jh,btRN,exj9,4Btj,aI5p,aIZF,4ClF,aIo3,4BM9,aIGP,4C2V,4BdH,4CBh",
                    "503c": "fgPH,pbWF,kCSj,3QEp,m8FH,m9y1,pcpP,j5HF,5mB3,j5v9,j64F,5naF,fhm3,fhXF,ce23,ceDF,9aQj,9bjF,5moz,5nn9",
                    "690e": "j4/P,j5v9,pbTr,3QHx,aHRH,j5fx,gOMr,c+T9,g27X,orxN,jStr,3R4x,orH3,lowx,jStr,jT69,fhvr,fi51,aIxr,aJ71,67zr,68fh,jSPj,67Vp",
                    "529e": "3QrP,8pIF,ewx9,jSnh,pcdp,kCPb,kDEp,9Y2p,67Sh,4C61,3R4x,aHRH,g1+F,g2Mz,9Yoh",
                    8198: "4BdH,9Xa9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,dLj3,dLBV,nGt3,nHf9,nGLP,gPiV,gPvj,nGYp,kDfj,kDU1,gPL1,gP6p,kDfp,dLOj,dMnV,aIo3,aJdh,4BM3,8q5F,aIQb,5n1h,3RdV,9bgr,4Cy9",
                    "5bdf": "j563,mVf9,mWjV,j6aV,pcab,mVTN,m8FH,gOA1,j5fr,j5Bp,g281,c+Ap,bsJV,g1Rb,dLvF,hzEz,g24V,g2Db,j67N,j5HF,fhOh,bt/9,ewqP,ewZh,aI2b,aJ3V,aIxr,4BVx,3QX9,5m8X,6T/x,9aH1,9b3X,4Cv1",
                    "8e0c": "ikdX,nG11,nGq1,ikD1,ike1,ikqr,7EQx,ew4X,6TP1,dLsr,dLF1,5m2H,9Xz9,m8Sb,m9B9,iloX,ikJh,fhm3,fibh,pcsX,hA7V,9aTx,67n1,btsH,bt/9,9b0P,6UHh,ex6z,5naF,3Rnh",
                    "632b": "j4YH,j5s1,cdvH,g24V,pbQj,5mip,3QrV,m8Vj,c+MV,hzUb,ewJF,m9rH,dM59,hAqz,dMu9,pcsX,5mX1,aIhP,aJ71,5moz,5nqh",
                    5960: "pbWz,mVE9,mVTH,pczh,mWmX,mVc1,mVHb,ikG9,fhcN,mVTH,hA4N,gPiV,gPyx,jSVz,jS1p,cdLp,ceDF,jSVF,ex6z,ewep,9aeP,9bw9,btmr,7F49,5moF,3QrV,8q2r,67M1,4ClF,3RG1",
                    "9e45": "lnuP,mVrF,hziH,hz+x,bsJP,ewkF,m8wj,677p,4BgV,orbP,9Xw1,4BVx,6UrF,mVE3,jStx,ewGr,6T/x,pczb,m95V,9aQj,9bjF,kDy3,ilcx,3Rqj,4CrV,68c9,c/F9,c/6N,m92N,m9uV,gPHV,fhRp",
                    "7f1d": "or2r,gOwV,gOMx,kD2P,bsJV,cdXV,66TH,8pOV,mVxP,kDch,g21H,g2eh,6Uih,4BFV,6Uib,4C2V,4CBh,j5Er,orH9,m98X,m9uV,il9p,fhvx,jSFX,gPBF,fibh,ewJz,exg1,btsH,btUV,8q5z,8qE1,gPvj,67Vp",
                    "80f3": "4BdH,9Xa9,nG49,nGmV,5muV,3QHx,ikh3,ikzV,c+u3,c+MV,jSnb,pct1,m8/z,m9rN,hAhh,dLLh,jSwz,g2Dh,dMu9,3R4r,cebx,ceGN,3RzN,5mKr,5ndN",
                    "8f68": "lnrH,lo4p,pbWz,dLcV,ewDp,8ppP,aIxx,ikwH,3QNN,ikJb,j67N,67Yx,4ClF,4Cv1,7FVh,pcsX,gPiV,aIDN,6Uox,3QX9",
                    "7ea2": "or5z,gOwV,gOSN,kD93,bsN1,ce5h,66WP,8pYh,m8Vj,m9y1,5mB3,5nqh,m9c3,5m+9",
                    "6df7": "oqV3,m8FN,j4/P,g1Xx,4BjX,c+GF,nGwb,nH5N,gPEN,gP3h,nGwh,kDcb,kDNN,ewx3,3QX9,6UxV,btd3,btvV,fhL3,5m+9,4Cch,4Cv1,6V4h,9X/b,c/C1",
                    "68c0": "jRNH,jSh1,pbTr,3QHx,aHRH,jS4x,gOMr,dLF1,gOYX,j5Ex,orE1,jSSx,hAD9,g2hj,g2PN,ce5b,7FgF,c/9P,9bah,4C93,ceJV,4BIX,4CBh",
                    "5c4a": "4BdH,9Xdh,dLpp,oq/p,orZV,jS/V,jS1p,3QQP,fhfV,fi1V,3RCV,aJ3P,aIhV,5muP,5ngV,ikVH,5mQN",
                    7737: "pbTr,m8P9,m9c3,pcIF,pcmH,jSqp,g281,dLvF,bsN1,lnHj,loJ1,hAD3,hzlV,hAaX,ex3x,ceQ9,3QNH,dLyN,dMex,3Rtx,aIeH,aIWx,7FCr,7EWN,5mrH,5n7x",
                    "5feb": "ew1P,kCM9,pbQj,3QEp,kC/H,gP09,kDcb,kDNN,dMhF,dLBP,dMxh,pcsX,c/9V,9aWF,6Ulp,3QNN,c/cX,9bdp,6UQF,4Cv1",
                    "6f13": "oqRX,m8zx,ikaP,g1Up,4BgP,cdOx,pcjz,mW19,mVuH,mWth,kD5X,ewu1,excV,kDQV,kDfj,gPyx,gP6j,lotp,3QQP,cdXV,ceN1,5nk1,3RwF,ewSX,7Fap,8qlh,9XY3,6UNx",
                    9886: "hziH,or5F,mVrz,j5yh,ikqr,fhfV,dLcP,dLLh,8pIF,9Xdb,4BFV,mVHb,mWq9,mW7j,ikYV,8q2r,ikPx,illV,5ngV,fhOb,9b79,67FN,3QX9,7Fzj,4Cy9",
                    8682: "bsMX,jRU1,jSk9,dLI9,dLg1,pbTr,7EQx,66WP,8pYh,bt9X,67zx,nGzj,nH5N,dMhF,lo7r,dLRx,dMu9,5ngV,3Rnh,9aTr,9bjF",
                    "6e3a": "oqRX,lnNF,ikaP,fh3p,5m5P,cdLp,67gH,mVuN,mVNx,8q2x,8pLN,dLyH,dLRx,ikPr,ikwN,ewJz,jSG1,orNj,cexp,kDNH,fibh,dMnP,6UKp,5mX1,3Q+h",
                    "64b5": "jRNH,jSaN,ev+H,fhcN,pbQj,5mip,3QrV,mVxP,mVTN,jSdP,jSzN,pcdj,jSqp,fhj1,ikMj,gPfN,mVZX,mWn1,jSCP,jT69,pcFr,jSSx,fhI1,j61r,fi89,dLBP,dMnV,fhyz,9Xz9,9YeV,6U5H,6V19,cenX,3Rh1",
                    "6f8e": "oqV3,lnNF,ikaP,fh6x,4BgP,c+Dx,m8FH,m9c9,pcdj,j5Bp,j5lH,j5R1,g24P,g2tV,cekV,cdXV,g24V,aIkX,7F7h,67wj,aIDN,5moz,6UB1,hAhb,nHc1,btFb,gPL1,3RaH,5n4p,8qAV,bt/9",
                    "65d7": "oq/j,lnQN,jRQP,jSk9,jS1j,dLpp,aI2h,4BgV,fh3j,fhj1,7F11,67jV,5mlx,j5yb,pcmN,mVQz,mWq9,ikMj,ilp1,kDlz,9aWF,kDKz,9bjF,fhyz,fhXF,ceDz,ceeF,9aNb,9bw9,3QX3,7FmV,7FCr,3RJ9",
                    "5e86": "pcdj,m95V,4BgP,6TS9,9aoh,lnEh,loM9,fh9z,fi51,jSzH,dLXN,9XIx,7F7h,3QHx,dLXH,8qlh,67/F,4Cy9",
                    8925: "pbNb,m8CF,kCCH,kD2V,cdvN,g1Uj,3QEp,ewej,bta1,dLsr,gOZ1,4BCH,9aK9,btgh,nGwh,nHf9,loaz,loJ1,ikJb,ils9,ikVH,cehN,fhOh,il33,ceQ9,fhXz,gPL1,9XIr,9Yl9,8q8H,6UE9,c/sz,5naF,3Rnh",
                    "4f38": "ew1P,or8N,kCVr,3QHx,8pV3,kD99,kDU1,8qE1,g2b3,g2W1,aIo3,aJ71,pcw3,3Rk9",
                    "719f": "pbWz,mVB1,mV8P,mVQF,kCPb,kDfp,hzXp,hzvh,kCPh,g1O3,g2hp,dLBV,9XsV,8pFx,bsMX,c/0x,kDlz,kDNN,9Y5x,9bjF,9bt1,bt/9,orKb,gPp9,cekV,9aTx,hA4H,dMbp,3QrP,7ENp,7F0X,3Q+h,7FmP,4C99,8quz,4Cy9",
                    9042: "mVbX,jS7F,fgSP,fh6x,6T/x,4Bk1,6T/r,4BPh,4Cy9,ori3,m8/F,kDuX,orQx,kD2P,kDU1,g24P,kDrV,j5Hz,fhL9,dM8h,9X/h,7Fq1,6Ulp,cdXP,gPiV,9aDP,ewW9,fhL3,iliN,dM8b,9Yi1",
                    5929: "mVlj,mWgN,g1KX,g2W1,mVNr,g2kx,ce8p,9aH1,6T/x,5m91,fhvr,cehN,8qlh,5nk1",
                    "633d": "jRQP,jSk9,pbTr,5mlx,3Qv1,cdyP,fhj1,jSnb,orAV,m8/z,m9rN,j5Xh,j5yb,j6e1,dMr1,dLLh,j5yh,j5U3,9XRV,67zx,3QU1,ceub,5n1h,4Cfp,4Cv1,6V4h",
                    "620a": "3QrP,6TS9,9Xdh,jR+h,jT31,ewnH,aIrh,pcCj,loCN,pcjz,gPfN,dL+V,7Fwh,3RCV,7FVh,5mHj,9XY9,g2PN",
                    "54cd": "7EDX,lny1,lnQN,9XpN,9X71,kDlz,pcw9,3Q+b,kDch,kDU1,5nk1,3Rtx,gPfH,gPyx,9Y5x,9XON,gPfN",
                    "5f90": "j4/P,or8N,cdvH,j5lN,g1Uj,3QEp,g21H,j5Bp,m92N,pct1,nGOX,kDEp,j64F,gPRh,gP3b,gPEN,cd+X,ceN1,gPlX,5mX1,3R4x,5mrH,9XFp,9Y5r,68c9",
                    "9e2f": "j5fr,mVox,mWax,j61x,j4/P,j6h9,pcjz,kDfp,hzO1,ew1V,j5NP,gPvp,fi89,fhpb,gP9x,c+Wb,btpF,aIJX,cexp,fhRp,fh9F,9axF,9bmN,5ndN,3Rnh,66ZX,67Sh",
                    "5f02": "kCSj,kDKF,orTF,oq/p,hzyp,gOMx,g1+F,g2SV,ils9,bsJP,bt/9,3QuX,67dF,7EZV,9aH1,ewu1,ewZb,4Cch",
                    "5c7f": "kCIX,7EE1,8pV9,kD93,67q9,or5z,7ETF,kDoH,kDX9,orAP,fhyF,fi51,6UWV,5nk1,3Rk9,9XFj,9Y8F",
                    9020: "nG43,jS7F,g1HP,g1Xx,6T/x,4Bk1,6T/r,4BPh,4Cv1,ikCX,nGCx,kDcb,kDQV,pcsX,gPm1,gOVP,gPL1,6Uib,dLLh,dMkN,6UTN,8pYb,8qxN",
                    "4fa6": "g1HP,pbZN,kCSj,3QEp,pcpP,ikYV,m95P,m9y1,9aK3,ikG9,iliN,9bmN,3QQP,6UrF,9XRV,ewT1,7Fzj,3RJ9",
                    6731: "hzvb,nGjN,kCVr,kDNN,fgSP,fi89,pcgr,3R4x,66ZX,9aAN,aIl1,fhvx,aIN9,7FFF,68c9",
                    5634: "9X6X,mVc1,mVrF,bt0F,bsN1,nGt3,hzR9,orrr,ikPx,m8Yr,m991,gOVP,j5R1,orKb,il6h,hAkp,hAA1,jT31,loqb,mWn1,dLBP,hA4N,g2kr,g2Jx,dM59,3QKz,6Uf9,7F7h,dLLh,dMnV,685V,4Cfp,aIrb,aJ3V,8pYb,8qAV,dM1X,5mX1",
                    "628a": "3QuX,5mlx,pbTx,cdyP,g2b9,kCFP,kD99,8qH3,5ngV,5mQN,6Ulp,nGzp,nHc1,c/C1,exfX,ewDp,ewZb,nGVh",
                    "6bd6": "or2r,fh6x,hz+x,lnKr,loaF,orAP,g2tV,fhI1,fi1V,hAD9,jSCP,mWjV,fhpb,cehN,cdOr,8pt1,5m8X,8p/p,dMex,c+PX,5my1,4BM9,4C99,7FCx,aIZz,6V19",
                    "60ed": "fgPH,jRU1,pbNb,3QBh,kCVr,hzHN,lnNz,logV,pcab,ewkF,ewMN,j5Bj,4BSp,9axz,btsN,4BYz,7Fq1,9XY9,mW19,os11,g2A3,g30h,g2PH,3RzN",
                    "901e": "oqV3,kC/N,gOwP,gOMx,7EQx,66+1,7EQr,4BSp,4Cy9,nGwb,nH5N,j67N,j5yh,nGwh,g27X,g2SV,c/yP,c+Wh,8pOP,8qH9,g2wX,8qf1",
                    "56f1": "pcjz,lnX1,3QBb,lnEh,loCN,3RzN,j5Er,c+JN,gP3b,gPsh,dM21,aIAF,8pYh,6U5N,dLLb,8qlh,5mfb,5ndN",
                    "7b1b": "hziH,pbWF,lnHj,lo4p,lnNz,hzO1,j5Er,pcw9,logP,loM9,lon3,hAqF,3QBb,ewbh,ex6F,3RwF,9Xdb,9Y8F,5naz,5mfh,hz+r,5mKx",
                    5806: "ik7H,ikD1,oq/j,9arp,7ExH,aIo9,fhfP,pcmN,jSqj,3R1p,orKb,lozF,jStr,jT69,fhvr,fi51,aIxr,aJ71,67zr,68fh,67Vj,jSPp",
                    "8d39": "mVib,mWgN,jSYN,jR+h,hzvh,hAD9,fi51,ex6F,pcab,hzR9,ewnN,cdC1,pcsX,dM21,7ETz,dLvF,dMhF,7FFF,btpz,7Fap,5muV,3QBh,7FmP,3RG1",
                    "79c6": "nFZP,pc79,ik7H,ikMp,nGdr,4Bwx,aHRH,ikqx,gOMr,dLI9,nGCr,nHf9,ewAb,exmh,nGVb,4Cch",
                    "5be1": "pcab,mVTN,j563,mVf9,mWjV,j6aV,kCVr,kDHx,kDlz,ikMp,cdOr,ikqx,ilcx,ceAx,g1Xr,g2Jx,dMer,dLsx,cdyP,ceQ9,cd+X,7EAV,cenX,7FS9,9axz,9bah,5n1h,3RaN,9aQj,3QHx",
                    "8c89": "lnuP,mVox,orbV,jRX3,hzBx,m8Cz,jSh1,fgSP,hzEF,kDch,hzEz,ce29,8pV9,67n1,3QEp,bsMX,fhfV,cd+X,7EE1,j5Er,pcw9,m95P,m9uV,ilcx,fhEV,dLOp,jSCP,gPvp,dMxh,3R7z,ceeF,ceJV,3RCV,67Cz,685V",
                    "8c0e": "oqV3,lnNF,hziH,hzBx,4Btp,9aH1,m8LX,m9B9,orrr,j5Ex,orQr,j61x,jSCP,hAhh,hzNX,hAD9,hzXj,dLOp,dMnV,3QNH,67th,cebx,btvP,4C2V,ceAr,5n7x,4ClF,4Cv1,6V4h",
                    "4f73": "ev+H,j5cp,pbZN,j5cj,3QEp,lnWX,loJ1,g21H,g2Z9,pcsX,g2x1,bt6P,btY1,4BCH,4Cy9,ewSX,4C61",
                    "7a96": "pcab,mVQF,j52X,mVc1,mWn1,j6e1,hzs3,kD61,kDrP,hAtN,dLpj,ikD1,g21H,g2MF,ikPr,cebx,cdvH,ceTh,3QHr,9Xjx,9Y5x,3Rtx,5mlr,5n7x",
                    "72d9": "hzlP,orbV,oqRX,kCYF,9XsV,67dF,4Bn9,aHUP,gOSN,4BVr,nGCx,nH5N,4CoN,hz+r,hAtN,btRH,btmx,4BIX,4CBh",
                    "57a6": "gOJj,gPBF,orTF,oq/p,bsWp,ewDp,kCSj,kDKF,gP9r,c/g9,aJ3V,c/g3,g2PN,8pCj,8quF,4BgP,4Cy9,cebr,4BVx",
                    "59e5": "j4YH,j5s1,c+Q1,9axF,3QrV,pbTr,g1Rh,bsN1,6Uih,lo1b,lozF,pcsX,gPm1,gP03,gPRh,9XvX,c/6N,hAkp,mWn1,dLXH,5mQN,4C2V,4CrV,6V19,8q8H,ceJV",
                    "88c2": "nG0X,nGLV,nGmP,kCYF,hzp1,kCYz,kDoN,gP09,dLmh,j5iz,gOZ1,nGVb,gPsh,pcOP,fi1V,ex0p,fhsj,c/6N,cdyP,ceQ9,66WP,8pIF,cebx,9aDP,3QQV,6UrF,9XLz,67Vp,4Cy9,7Ft3,aJ0N",
                    5375: "oroj,nG49,aH/9,ce29,jS4r,ewqV,lo1b,aIo9,6U5N,3Qv1,3RaH,nGIN,nH8V,9YeV,7Fzp,j5U3,ex6F",
                    "919a": "nFZP,nGwh,nGdr,g1Xx,cdF9,nGjH,dLyN,dLI9,4BjX,jRU1,jSk9,67q9,66+1,9X6X,9Xz9,mVKj,j5KN,g2eb,g2nF,67CF,4BPh,67Cz,4Cch,4CBh,nGLP,jSMh,jSYH,mWq9,hA7P,hAD9,pcFr,6UNx,9XRP,dM8h,hAnx,c/yV,9bw9",
                    "96be": "m8jP,m8M1,hzKV,c+GF,9aoh,6TLV,ikh3,dLvF,9aK9,g27X,jStx,pcmN,pczb,m9oF,jStr,3R4x,jStr,jT69,fhvr,fi51,aIxr,aJ71,67zr,68fh,jSPj,67Vp",
                    "53db": "m8q3,iknp,ikCX,m8Vp,hzoX,hzXp,c+qX,c+Zp,pbZH,dLyN,9XmF,6TYp,4BgV,4BFP,7Fap,aIAF,mVQF,nHc1,hA1z,hAwV,aIZF,67P9,3R1p,ewSX,8qop,3RJ9",
                    "84b2": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,jR+b,hzEF,fgVX,c+Dx,4BjX,bt0F,kDHr,illV,hzKP,hAD9,3QTX,fhj1,fi1V,5ngV,3Rqp,cd+X,ceJV,9aGX,9bpV,jSFX,4C61",
                    8304: "m8jP,m9B9,pc3X,ikD1,pcw3,il39,fgVX,fhsp,5mHp,3QQV,ikwH,cdRF,9aux,3QrV,3RgX,g2x1,g2SV,3RCV,67LX,685V",
                    "598a": "pbWz,cdC1,6Uf9,j4YH,j5v9,bt6V,6TYp,4BgV,m8Vj,nHc1,ewAb,exj9,4BSj,4Cy9,nGVb,4Cch",
                    "88f3": "or2r,m8M1,pcjz,m8/F,m98X,orQx,hzs3,lnB9,loFV,hAwV,j5lH,j5+p,g2Gp,g21N,j5lN,g2hj,c/6N,c+nP,c/F9,7EAP,9aux,aIl1,c+Zp,9XsP,3QQV,7FgF,btpz,7Fwh,67/F,5nk1,8qi3,btOF",
                    6043: "ew1P,jR+h,pbWz,3QKF,kD2P,gP3h,kDfj,kDU1,pczb,g2Dh,g2b3,g30h,bt9X,bu2h,9XIr,6UB1,g2Mz,5naF,3Rnh",
                    "641c": "j4YH,j5s1,bsJP,fhj1,pbQj,5mip,3Qv1,nGIH,m8Sh,g2eh,g2W1,mWn1,mW7p,j5yb,j5KN,j5+j,j6e1,pcw3,c/g9,c+T3,c/yV,8qop,67IV,4BVx,3QU1,cebr,8qbV,67Sh,4CoN,3RJ9",
                    8404: "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,fgVX,kC/N,j5iz,j6aV,685V,5ndN,4ClF,3Rk9,dLsr,hzKV,g24P,g2Dh,cdF3,ceAx,g2hj,7Fap,aI8r,7EQx,7Fwh,aIQh",
                    8131: "4BgP,9Xdh,nG7h,nGq1,67n1,4BzF,hzvb,hzO1,c+xb,c+Q1,orrr,kDv1,jSPj,orZV,jStr,jS/V,c/yV,c/0x,jStx,3QX3,67CF,7FjN,9b0V,c/d1,c/mj,67Vp,5n7x,4ClF,4Cy9,68fh",
                    "7a9d": "pcab,m92N,j52X,m8n1,m9y1,j6e1,gOD3,kD99,kDrP,hAwV,hzEz,hAnx,dMex,dLvF,hzEF,dLRr,9XIx,7F7h,67gN,9XIr,6UHh,3QBb,aI2h,aJ0N,5ndN,3Rqp",
                    "6d8e": "oqV3,lnNF,ikaP,fh3p,4BjX,cdOx,nGmP,nGCx,g24V,g2kx,btjp,6Uc1,3QHx,dLBP,7F7h,5mQN,4Cy9,m92H,nH8V,mW7j,9bdp,g2Gj,g2W1,ikVH,9aZN,9bt1",
                    9192: "nFZP,nGzp,nGaj,g1Up,cdC1,nGjH,dLyN,c+MV,c+T9,4BjX,j531,j5v9,67q9,66+1,9X6X,9Xz9,nGFz,nH8V,gPHV,gPcF,nGFF,kDlz,kDQV,aIxr,fhEV,c/6H,c/C1,9XOH,9Yi1,5mHj,5nn9,gPsb,5n1h",
                    8712: "bsQ3,jRX9,jSk9,c+T9,c+u9,or5z,7ETF,6TOX,8pV9,9XvX,6Uih,m8Sb,m92N,fhsp,fhBN,6Uox,3QU1,aIuj,5mX1,4Cfp,4Cy9,lon3,mWq9,m9oz,8quF,g2Mz,g30h,gPp3,8qbV,8qH9",
                    "5df2": "mVf3,mWdF,c/sF,ewbb,ex6F,hzvb,674h,5mip,4Bwx,4ClF,685V,8qE1",
                    "53cb": "kCIX,kDU1,pcdj,jSnh,g281,dLyN,aI5p,8pt1,g27X,g2Jx,aIN9,67th,3QEp,dLI3,9aWF,6UE9,5naF,4CBh",
                    "531d": "nH8P,nG11,4Bk1,4Cv1,9XpH,ikwN,ilfF,btOF,9XY9,m8/z,6UrF",
                    "662d": "6TOX,nG11,nGmV,9aDV,9ai1,gOzX,gOVV,nGwb,nH8V,hAwV,g2Jx,fhpb,ikVN,nGP1,3R1j,ce8p,ceJV,3RCV,67wj,685V",
                    "76c5": "m8wj,m9oF,gPBF,gOJp,m8wp,pcgr,dLRx,4Btj,cdLp,ceDF,4ClF,4BM3,ce29,4C2P,cekV,4BdH,4CBh",
                    "7c7d": "nG0X,lnHp,lnKr,nGq1,j4/P,j5v9,pbTr,3QHx,aHUP,dLmh,j5fx,gOMr,dLF1,mVAX,mWjV,il39,67P9,3R7F,fhiX,fibh",
                    "5cb8": "4BgP,8pzh,gOGh,gPHV,dMkH,dLyN,dLXH,3RaN,9bw3,9aux,oq/j,jS1p,jSYN,orWN,pcjz,jSwF",
                    "500d": "or8H,ev+N,kCSj,3QEp,pcjz,m9c9,lnTP,loM9,kDKz,fhL9,jSnb,g2qN,fh9z,fibh,3QX3,btd9,btRN,3RzN,5mB3,5ndN",
                    6355: "jRQP,jSh1,cdvH,fhj1,pbQj,5mip,3Qv1,pcFr,m9uV,lnWX,loM9,pcsX,4C61,3Q+b,hzUh,hAwV,5ngV,3RwF,dLLb,dMnV,9YeP,9XCh",
                    "626f": "jRNH,jSk9,bsGH,fhm9,pbTr,5mlx,3Qv1,j5Er,4BVx,pczb,4Cch,gPsb,gPL1,4BCH,4CBh",
                    "708a": "ew1P,kCM9,pbTr,dLsx,aI5p,5m5V,gOMr,kD99,cdOr,8pV9,pcsX,fhph,kDoH,kDU1,g2PN,gPp3,9XRV,6Uox,3QQV,cer3,8qrx,5ngV,3RJ9",
                    5200: "mVib,mWn1,7FIN,5m+9,mVQz,ewDp,9aDV,6719",
                    6296: "jRNH,jSnh,cdvH,g2b9,pbTr,5mlx,3Qv1,m8/z,il6h,gP9r,c/g9,9Xz3,bu2h,pcLH,3RzN",
                    8303: "m8gH,m9Eh,pc0P,ikzV,pcw3,il39,hzs3,ewqV,dLcP,bsZx,3QrP,9XsV,9b73,aJ0N,gPEN,gP6p,5mHp,3R7F,3RCV,6V4h",
                    "4ed8": "ew1P,pc0V,jS4r,3QHx,ikzP,ilvh,ewAb,aIGV,pcFr,5n7x,3Rk9",
                    "82df": "m8jP,m9B9,oreX,orf1,j5s1,j5U3,orH9,bsJP,fh6x,ikzV,gOPz,gPHV,685V,5ndN,4ClF,3Rnh,67gH,c+JN,c/d1,8qf1,8pLN",
                    "61be": "fgSP,jRX9,pbQj,3QEp,jS7z,gOVV,aIeH,ewx9,ln+9,loPh,orTz,m9y1,pczb,hAkp,dMhF,aJ71,dMxh,aIQb,j6e1,ikMj,il39,fhsj,fhI1,ceo1,ce8p,fhsp,4BCH,9aK9,9XIr,5mKx,4BYF,4Cfp,67/F,9XRP,7Fwh,9bmH,5nqh",
                    "6b22": "m8jP,m8M1,g21N,7EAV,ikdX,9aK9,fhpb,pct1,jSwz,jT31,g2PN,gPp3,aIGV,6Uox,3QQV,cer3,7FCx,3RJ9",
                    "7ea7": "pbWz,hzlV,hzHN,kD93,cdyV,c+T9,6TLP,9Xz9,nGt3,nH5N,g2Dh,g2SV,aIZF,6UE9,3R1p,nGIH,fhyF,9aQp,4BCN,dL+P,9X/h,4Cy9",
                    8549: "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,c+nP,kC/N,hzBr,8pFx,kDfj,ikYV,iktz,illV,fh6r,fh+N,cdOr,ceGN,9Xjr,9Yl9,ikSz,9XLF,3QrP,7EQx,7F0X,3Q+h,7FjH,3Rh1,7FCr,3RJ9",
                    "5f84": "jRQP,pbWF,c+kH,jSaN,gOJj,3QEp,nGt3,nH2F,kDBh,hA4N,ewqV,ik/X,exj9,cd+X,ceN1,4BCH,4Cy9,cenX,4C61",
                    6177: "fgPH,jRU1,pbQj,3QEp,kCYz,hzKV,pcpP,mW4h,mWq3,mVE9,c+T9,9aH1,4BzF,jStr,jSYN,dMkN,dLOp,gP3b,gPO9,m98X,5mX1,3R7F,ce8j,9XON,67q3,9XV1,c/cX,9Y2p,7FFF,5nk1,9Y2j,ceJV",
                    "84dd": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,iknj,cdLp,j5v3,ce29,ewDj,j5NV,gPfH,gPL1,fhHX,ceDF,4Btj,9Xgp,9Y8F,4ClF,4BM3,9Xz9,4C2P,9XRV,4BdH,4CBh",
                    "70bc": "fgSP,kCM9,pbTr,cdOx,8pzh,4BgV,g1Xr,jSk9,cdOr,9aH1,lo1b,loM9,pcw3,c+Wh,c/C1,hzUb,hAhh,5n1h,3RaN,5muP,9XLF,9Y8z,68fh",
                    9732: "nG43,nH8V,ikdX,lny1,loJ1,ilp1,nGCr,g2kx,j5cj,j5v9,hzyp,hzR9,j5NP,j64F,hA7P,hAqF,ewbb,ewx9,btd9,bsTh,ewbh,bt0z,67dF,9axz,9aK9,9Xa3,5mc9,4BgP,6Uih,btjj,g2x1,ewJz,ex9N,btC9,9aNh,c/3z,aIQh,9bw9,3R7z,8q5F,8qxN,3RzN,5mNz,5ndN",
                    "679a": "jRQP,jSnh,pbTr,3QHx,aHRH,jS4x,ikqr,dLI9,g2eb,pct1,kDoH,kDX9,kDNH,dMex,9b41,6UrF,4BJ1,gPfH,btC9,6UQF,4Cy9",
                    "4ea9": "ori3,lodN,kCCH,kD+h,3QEj,gOJp,gPBF,3RwF,bsWj,btOF,677j,67/F,gP9r,67zx",
                    "54e6": "8psX,m8n1,m8FN,aIeN,aHY1,lnWX,mV+1,hzNX,hAD9,m8Yr,5mKx,3QU1,9XvX,c/d1,mWdz,jT31,pczb,dM8h,9Y2p,3RG1,6V19,5mTP,9bgx,exg1",
                    "8d2b": "j4/P,orf1,orDX,kDKF,j6h9,jS4r,jSSx,gPvp,fhEV,jSqj,gOVV,ew89,7EQr,dLsx,dMex,7FCx,btpz,7Fap,5my1,3Qy9,6UxP,3RG1",
                    "5d4c": "oqYb,kCPh,kDNN,orWN,pcgr,kDix,fgSP,fhvx,j59b,3QBh,ikG3,67q9,674h,bsTb,btd9,ce8j,il01,g2tP,g2W1,ceDF,dM8b,7Fq1,5mNF,3QX9,9bab,6UNx,3RJ9",
                    "69b7": "j4/P,j5yh,or5z,3QKF,aHUP,ewep,j5iF,gOPz,c+Wh,j5Er,m8Yx,m9y1,j6e1,orNj,j5R1,g2qN,c+Zp,g2qH,3RaN,jSMb,gPBF,gPiP,gPL1,dLXH,dMr1,9XOH,9Yi1,67FH,68c9,gPvj,67Vp",
                    5565: "8psX,m8n1,m8FN,9XpN,9X71,hzNX,jStx,pct1,nGLP,jSSx,hAD9,hz+r,hAnx,excP,ewu1,hAaX,aIK1,3Q+b,aIrh,aJ0N,3RzN,5ndH,5mEh",
                    "8bc6": "oqV3,lnQN,hziH,hzBx,5mlx,aIo9,c+Zj,nGzp,nH8V,c/yV,ewDj,excV,3QQP,aIDN,aIWr,4CBh",
                    7855: "mV8P,mVHh,dL9H,hzvh,mVox,6TVb,hzvh,hzO1,9aH1,9aoh,nGzj,nHf9,nGVb,j5NV,9aTr,j5Ex,j6aV,9bpV,3QQP,5mHp,7FmV,9XY9,g2Dh,8qoj,4Cy9",
                    "6f6d": "oqV3,lnNF,ikaP,fh3p,4BgP,c+GF,nGmP,nHc1,nGFz,hA1F,nGVb,hAhh,lnWX,loFV,hAwV,hzO1,lnX1,fhm3,fh+N,9YbN,9Xz9,fhm9,c+T3,c/vN,7EWH,7FS9,9XUX,3Rh1",
                    6295: "jRQP,jSnh,pbTr,5mlx,3Qy9,bsJP,fhj1,g2b3,ikPx,jSwF,nGFF,nG/x,hAnx,gPBF,gPRh,dLI3,dMkN,aIWx,7Ft9,5mKx,3QU1,dLOj,9b0V,6UHh,5naF,4Cy9",
                    5473: "9ahX,mVc1,mVxV,aIhV,aHY1,ln+3,loFV,fhiX,fi51,pcsX,3Rh1,67gH,aIxx,fhI1,aITp,8qxN,68c9",
                    9699: "3QuX,oqS1,orbV,hzyp,cdXV,aIeN,9arp,kD93,nGCx,pcsX,kDv1,orQr,kDX9,lozz,ikSF,gOSN,hzXj,hAtN,btRN,btjp,hzXp,ewDj,ex9N,4BFP,9aTx,btyX,5mX1,3R7F,8qrr,5nk1",
                    5378: "j52X,pbWF,m8wj,m8/F,m8IP,7EZV,c+MP,c/3F,dLpj,6TYp,66WP,8q8N,gOwP,gPfN,3Rk3,mW19,mWn1,8qE1,6UQF",
                    "8baf": "oqV3,kD2V,hzlP,hzEF,4Bwx,8pV9,4BSj,nGFF,g24P,g2A9,nGmP,nH2F,67Yx,5naF,5nk1,7FS9",
                    "53f6": "8psX,m8n1,m8IV,aIhV,aHY1,gP3b,gPO9,pcw3,3Rk9",
                    "4f63": "g1HP,pbZN,jS1j,3QEp,3QNH,7F49,aIrh,mVHh,mWjV,5ngV,3Rtx,hzUb,hAwV,ce5b,ceJV,mVZX,5mX1",
                    "8fdc": "nG0X,jS4x,g1EH,g1Up,7ENp,5m5V,7ENj,4BPh,4Cy9,mVAX,mWgN,hzKP,hAwV,7EZP,9XCh,cebx,hz+x,hAe3,8qi9,7Fwh,7FIN,aJ71",
                    "65a9": "lnuP,lo4p,pbWz,ew51,ewDp,ikwH,3QNN,9aeP,aIup,3Q+b,8q5F,cehN,mVTN,nHc1,gPfH,gPRh,gPBz,3RwF",
                    "4f84": "fgPH,j59h,pbWF,j59b,3QBh,mVxP,mWn1,mVTH,fhfV,gPBF,jSMb,exg1,aIhP,aJ3V,4Bzz,4Cy9,fhEP,4C2V",
                    9525: "hziH,or2x,kCPb,kD99,gOzX,gOVV,c+nP,c+T9,gOMr,3QHx,7F11,g27X,orxN,jStr,3R4x,nGS3,lozF,j5Er,j6h9,fhvr,fi51,aIxr,aJ71,67zr,68fh,jSMb,67Sh",
                    "837b": "mVbX,mWn1,jSJ3,pcw9,pc3X,jSh1,ikG3,c+r1,8psX,c+MV,ikh3,gOMx,ewqV,bta1,6U8V,3Qy9,g2qH,btjp,btIj,g2W1,il33,aIN9,7FmV,67CF,3QX9,3RFX,7Fzp,aIN9",
                    "7eca": "5m5P,8pYh,ce5b,aHY1,kD99,hzHH,hziN,or2x,mVHb,ikYV,ilcr,mWq9,pczb,3Rnh,fhpb,fi89,9XCb,9Yoh",
                    8868: "mVbX,mWn1,j59b,j67N,fgPH,fibh,pcgr,fhvx,7ExH,9aoh,bt3N,fhph,cd+X,3QU1,6UrF,fhyz,btvV,9XY9,6UQF,4Cy9,9XY3,dMkN",
                    "5c94": "ik7H,orf1,pcpP,jSVF,hAGh,jS4r,jSMh,ewZh,c/6N,c+xb,fhfV,jSnh,bsTb,5mfh,5n7x,c+Zj,5mHp,btLr,3Rtx",
                    "7a20": "nG0X,pc79,nGgz,3QKF,j4/P,j5yh,9X0H,j5iF,gOPz,c+T9,3QNH,7F7h,fhvx,nGCx,nHf9,5nn9,3RwF,j5KH,j67N,fhyz,fi1V,m9fb,fhOh,8qbP,cekV,ceDF,8quF,8qbV",
                    9519: "pbTr,ik7N,lnEb,lnX1,hzoX,hzKV,c+nP,c+Q1,hzyj,4Btp,7F11,lo1b,loJ1,gP03,gPO9,orxH,gPfN,orQr,gPyx,3R1j,dLOp,dMnV,3RCV,9XFj,9YeV,5ngP,5mHp",
                    "6dc0": "oq/j,lnTV,ikdX,fh6x,4BjX,cdUN,pcpP,m9fh,ikG3,ln+9,loJ1,ilp1,gP3b,gPHV,gPlX,5mX1,btyX,btRN,c+Zj,6Uf9,3QKF,8pYb,4C2V,4CBh",
                    "4fc4": "g1EH,pbWF,kCPb,3QBh,lnQH,mVTN,hzEz,hAGh,aIbz,dL+V,m8Vj,5mHp,3QQV,mWdz,jT69,fi4X,9bdp,5mQN,pczb,9bdp,3RG1,6V4h",
                    "8bbd": "nG43,kCYF,hziH,hzyp,674h,9XsV,3QKz,7F11,9Xz9,nGt9,nH2F,9bjF,4Cy9,7FVh,ikPr,ewT1,9Y2p,9aQj,ewT1,jSPp",
                    7599: "jRQP,hzvh,cdyP,ewep,pcdj,m95V,4BgP,9Xgp,m8wp,m9B9,dLyH,kDix,hzUb,hAA1,dLI3,dMkN,9XLF,67n1,4BM9,3R1p,3RCV,7FS9",
                    "9b3c": "pcgr,m8M1,cdLj,m8wp,m9oF,ex6F,ewep,iknj,ilfF,m8Yr,dLOp,9Xz9,6U2F,4BgV,ceez,5mNF,4B/N,4CrV,7FS9,c/mj,7FmV,9bmN,aIZz,7FLV",
                    5589: "9X6X,m8n1,m8CF,bt0F,bsN1,gOSH,orrx,jSk3,3QX9,nGIH,nH5N,j64F,j5Bj,j6h9,ik/X,dLOp,g2qH,g2W1,btjj,bt/9,g2Db,aIQh,7Fq1,3R1p,aIQb,4Cy9",
                    "8c41": "pbTr,m8IV,j4/P,m8jV,m8Yx,j5Ex,j59b,j5v9,g1O3,g2eh,dLcP,dLOp,kCYz,aIbF,3Qy3,aH/9,aIrh,67th,6719,jSwz,orH9,orQr,jT69,cebr,j5Xh,ceTh,3RaH,cehN,ceJV,3RCV,67FH,685V",
                    "67ec": "mV8P,mWq9,pcgr,3R4x,jS1j,jSYN,c/vN,c+Ap,jS1p,hzHH,ewAh,fhEP,hAkp,5m8X,7ETF,c+Zp,c/6H,8qop,5nn9",
                    "5dfe": "8pCj,jS1p,jSVF,9Y8F,7Ft9,pcgr,3R4x",
                    5377: "or2r,kD61,kDuX,nG/x,pcjz,j5Bp,g2b9,c+JN,9aeV,jRX3,jS/V,g2Z3,g1HV,g2tP,c/mp,9Yl9,7Fgz,9bah,ceuh,cdUN,5mrN,4BFV,4Cix,6UTN",
                    "5bbd": "pcdj,mVTN,j563,mVf9,mWjV,j6aV,iknj,ilfF,kD93,g2b9,kDuX,g2x1,8pFr,fh6x,fhUx,8qrx,c/0r,7F7h,67jV,4Btp,3QrV,aIDH,5mQN,3RdV,3RCV,6V19",
                    7406: "mV5H,mVE9,g1EH,g281,66TH,9aH1,mVlj,7ENp,oroj,orZV,fi1V,fhsp,orop,jSqj,jS/V,aIrb,aJa9,5muP,5nqh,orH3,5m+9",
                    "53e6": "nGgz,nH2F,ilfF,iktF,nGgF,dLj3,dMnV,682N,4C99,4BjX,6U5N,aIrh,hz+x",
                    "9a6c": "nGaj,nGYp,dM59,lnTP,dLyN,dMr1,685V,3Rnh,9al3,9bdp",
                    "5e99": "pcab,mVTN,4BdH,8pw9,cdIh,m8th,m9y1,3QNH,gOSN,gPEN,3RzN,bt3H,btRN,682H,67gN,jSzH,67FN",
                    "637b": "jRQP,jSh1,aHUP,fhfV,pbTr,5mlx,3Qv1,gOVP,loaF,orAV,loqh,hAD9,j5KH,hAe9,g2eb,g2MF,btC9,4BFP,9aNh,btsH,8qlh,9aTr,4BVx,3R7F,3Rtx,67/F,9bmH,68c9",
                    "5f6d": "m8jP,m95V,pc3X,ikD1,ikh3,ikVN,fh0b,fhvx,btmx,bsTh,fh0h,aI5j,7ETF,6UbX,aIup,5m8X,6UuN,ikYP,nH8V,btvP,ex3x,ilp1,3R4r,5m+9,8quF,ceQ9",
                    7948: "oqYb,m8CF,jRNH,jSh1,g1Xx,cdvN,g1Xr,3QHx,g1Xr,c+Q1,os0X,mVNx,c/0x,9aQp,3QQV,gP9r,gPRh,gPyr,3Rtx",
                    "743c": "mV5H,mVxV,gOwP,gOVV,7EAP,9Xw1,mVlj,9arp,pcmH,mW4h,lnWX,loM9,ikMj,iliN,c/vN,c+Zp,ikMp,5muP,aIAF,c/g3,5m+9,3R7F,aIWr,68c9",
                    "8f6f": "lnrH,lo7x,pbWz,dLcV,dLOp,hzHH,3QNN,8ppP,aIup,g2hj,jSzN,pct1,jSzH,jT69,g2PN,gPsb,ceuh,8qf1,3Q+h,ceub,7FFF,4CBh",
                    "8eab": "mVHb,pcjF,c+JH,mVuN,mWdF,5naF,3RdV,jSaH,jSVF,g21H,g2MF,c+xb,c/sF,4Bn3,6U8V,9aZN,c/px,gPO9",
                    "85af": "mV8P,mWq9,pc0P,kD2V,pcsX,kDv1,kCPb,kDKF,gPBF,gOGh,kCPh,kD93,gP09,kDrP,gPiV,ewej,ewZh,cdyP,ceQ9,gP6j,ce8p,7EAP,9axF,btmx,c/d1,g2MF,3QKz,9axF,9bgx,3Rtx,6U2z,6UNx,4Bzz,4Cix",
                    "96a7": "3QuX,mVc1,mVuN,hzvh,dLvF,aI8x,9Xdh,lnQH,j5v9,ewkz,ewu1,6Uc1,4Bwx,6UbX,4BYF,4Cy9,nGFz,lok1,jSMb,nH5N,jSqj,jT69,jSMb,g2hp,hA7P,dMbp,9bdp,7Fwh,6UuN,fhL3,ce8p,9aTr,c/jh,dMbj,gPHV,dMbj,9Yi1",
                    "6dfb": "oqYb,m8FN,ikaP,g1Up,4BgP,cdOx,nGt3,nH8V,j5oP,j6h9,nGOX,j5KN,g2hp,c+JN,j5QX,g2Jx,dMu9,67gH,btjp,ewPP,5mTV,3R4x,aIQb,67/F,btRH,68fh",
                    "665a": "7EDX,m8n1,m8IV,9XsV,9X71,g1KX,g24V,jSk3,pcpV,m8/z,m9oF,il39,ikJb,illV,c/yV,c+Wh,ikJh,ik/X,c/d1,9aZN,6Ulp,5mB9,3QKF,btC3,5m+9,4Cch,4CrV,6V19",
                    "96fe": "oqV3,orZV,orrr,hz+x,ikdX,m8n1,m9y1,ilp1,kCSj,kD99,iknj,ikG9,kDrP,kDKF,ikYP,ilfF,ewbb,gP09,fhcH,fhUx,dM59,ce8p,bt0F,aHUV,ewnH,ceeF,aIWx,9Yl9,9aur,9bjF,5n7x,3RaN,3Qy3,5mrN,7F49,aIup",
                    "4eab": "pcdj,mVTN,m8jP,m9B9,j5fr,j61x,fhUx,fh6x,j5fx,c+qX,c/yV,9aWF,5mNF,3QU1",
                    "8bb8": "oqV3,lnQN,hziH,hzyp,4Btp,9Xz9,g24P,kDfp,pcjF,kDfj,kDX9,dLEX,dMxh,kDBb,3Rnh",
                    "79e7": "mV5H,orf1,nGdr,3QHx,hziH,hzR9,9abH,gOMx,fh6r,c+Q1,dLOj,kDfp,kDNN,dMkN,dLEX,dMu9,pcsX,dM21,9XON,6Ulp,4BFV,c/cX,8qrx,4Cy9",
                    "7ffc": "nG0X,nGwh,j5yh,mVib,lnNF,j563,lo1h,nGIH,nH8V,j6aV,mVWP,lotp,j5Hz,loFV,iknj,ilfF,c/sF,c+Ap,iknp,g1Uj,g2MF,ikPr,c/0x,aH/3,aJ3V,8ppP,8qH9,c+MP,8pOV,c/g3,8qi9,3QuX,7F49,7FpX,4Cv1",
                    "79b9": "mVf3,orWN,kCSj,kDHx,fhUx,fh3p,kCSp,mVNr,7Fdx,6T/r,8qi9,aIJX,6UKp,3Qy3,c+u9,c/yV,5ngV,3Rnh",
                    7682: "mVAX,pcdp,c+Aj,mVlp,mWdF,c/sF,j5cj,j64F,fh3j,fhXF,9aeP,bt/9,c+T3,5mB9,4BPh,4CoN,5ngV,6U+1",
                    6795: "jRQP,jSk9,pbTr,3QHx,aHUP,hzBx,g1Xr,c+T9,gP6j,kDfp,kDU1,gPL1,pcw3,ewT1,9XON,67th,3QQV,ex0j,5n4p,4Cix,4Cv1,6V4h",
                    "732a": "oqRX,kCVx,g21N,6U5N,67dF,5mlx,3Qv1,hzlP,orbV,bsJP,g1+F,m8Sb,m9lx,pcpP,hA7V,hzNX,hAD9,bt9X,ewMN,hAhh,j61x,mWjV,3R4r,c/0x,c/vN,3RzN,9XIr,9YbN,5mKr,5ndN",
                    9189: "nFZP,nGCx,nGdr,g1Xx,cdF9,nGmP,dLBV,c+Q1,c+Zp,5m8X,j531,j5Bp,6Ulp,6TP1,9X6X,9XFp,pcsX,mW7p,loaz,loM9,jSFX,dLRx,gPiP,ewZh,c/jb,jSYN,gPBz,dMu9,9XIr,9Yoh,cexj,3Rqp",
                    8019: "3QKz,pbWF,mVHb,mV8V,j4/P,j5v9,fgPH,fhph,7ExH,ewkF,9XCh,7FS3,4CrV,4B/N,67zx,nGCx,nH8V,c/yV,excV,ewGx,ewZb,nGVh",
                    "5e01": "mVf3,os11,mVQz,3R7F,6TYj,hzyp,hAtN,8qxN,6UHh",
                    "60e8": "fgPH,kCJ1,pbQj,3QEp,kCYz,ikzV,pcpP,jSnh,kDNN,nGYj,jS/V,gOVP,gPO9,j5NP,g2kx,dLI9,cdUN,gPsb,dMhF,c/yV,bt/9,9Xz3,btpF,dM59,btLr,8q8N,6Uf9,3QQP,5mTV,7FCx,9YeV",
                    "9a8b": "nFWH,nGmV,dLyN,m8q3,dLg1,dLI9,5my1,3QHx,8pmH,aIeN,mVNr,mWjV,g2SV,g2kx,mVNx,j5Er,j6aV,pczb,g2Dh,c+Wb,c/Ih,c/cX,9aWF,9bpV,4CoN,3Rnh",
                    5306: "pc3X,gOA1,lnQH,loJ1,682N,3Rk9,lo7r,fhm9,bt3N,8pw9,4Bwr,7F7h,btsN,g2A9,lotp,gOSH,9bah",
                    "72c4": "oqRX,mVlp,j5lN,ewqV,7EWN,4Bk1,hzlP,orf1,bsJP,g21N,kDlz,ewAh,pcw3,dM59,9b0V,6UrF,3QU1,dM53,9Y2p,682N,3RJ9,ex3r,kDX9",
                    5151: "or2r,ln+9,orQr,jSzN,jS4r,jSSx,ceAx,cdOx,jS4x,ce23,7EZV,5mlx,3QrV,cekP,4C2V,3Rh1,3RCV,6V19",
                    "82ac": "lnuP,loM9,pc3X,ikD1,pcsX,il01,hzNX,bsGN,ikYP,ceTh,c+Dr,c/mp,5n1h,3R7F,c+Wb,7EZV,3Qy9",
                    6562: "nG7b,nGwh,j5oV,j4/P,j5HF,j5cj,8pCp,fh3j,fhph,ce5b,cdLp,6TLP,9aNh,j5yb,3Q+h,fhyz,orNp,j5QX,j6kh,j6aP,btLx,7Ft9,4BYF,g2tP,aIQh,7FFF,5nn9",
                    6302: "jRNH,jSk9,pbTr,5mlx,3Qv1,bsJP,fhj1,kDcb,kDU1,orH3,fhL9,fhm3,fi89,ewW3,5m+9,aIrb,aJ71,5muP,5nqh",
                    9602: "4Bn3,lnB9,pbQj,m8IV,nGt3,nH8V,685V,3Rqp,lo4j,j5KN,ikqr,ilcx,ikMj,ewqV,ewJF,gPlX,c+Zp,9XmF,dM8b,9XLF,67dF,aIDH,7Fzp",
                    7070: "lnuP,loM9,pc0P,hzHN,bsZx,8pzh,4BdN,gP3b,bta1,j5NP,c/9V,9aWF,67th,3QHx,c/9P,8qlh,67/F,3RJ9,cexj,gPEN",
                    "5bb6": "pcdj,mVTN,j52X,mVc1,mWn1,j6e1,j5fr,j64F,dLmb,j5Ex,gP03,cehN,5mQN,3QX9,9al3,ewDp,5mc3,cehN,gPBz,cehN,dM1X,8qrx,5nk1",
                    "63ed": "jRQP,jSk9,pbTr,5mlx,3Qv1,bsJP,fhj1,nGzj,nH8V,hAwV,hzXp,nGzp,kDfj,kDQV,9XsP,gPiV,dLRr,dMr1,5nk1,3RwF,c/jb,8q8N,aIN3,8quF,aIuj,67wp,67Yx",
                    "75bd": "j4/P,g1Rh,bsJP,ewhx,3QrP,7ENp,9Xjx,lnKx,loM9,orrr,m95V,67tb,ikJh,ilcx,67Yx,ewAb,ex3x,9Y5r,9XCh,67gH,6891",
                    6073: "hzyj,hAnx,orQx,oq/p,bsWp,ewx9,kCSj,kDHx,hzUb,dM21,btUV,dM1X,gPBF,4BgP,9Xgp,aIhP,5muV,4BJ1,4C99,7Fzp,btjj,8qbV,9Y5r,68c9",
                    "916a": "nFZP,nGCx,nGdr,g1Xx,c+u9,nGmP,ewqV,ewAh,9X6X,9XCh,4BjX,jRU1,jSnh,67th,66+1,jStr,pcw9,mVWV,mWn1,il9p,ewGx,jSCP,gPyx,exj9,3RaH,c/6N,c/yV,3RCV,5mQH,5ngV",
                    "70c8": "nG0X,nGLV,nGpX,j5iF,g1L1,j5iz,j5HF,dLI9,bt0F,9X71,g1+z,dLI9,m9fb,dM8h,os0X,btY1,9Y5x,3QrP,8pFx,8pV3,3QX9,8qbP,3Rk9,8quz,3RJ9",
                    "4e71": "m8q3,nGFF,m8IP,c+MV,hzlP,hA7V,4Bqb,c+xh,c/0x,67zx,674h,orKb,5n1h,4Cfp,4CrV,6V4h",
                    9761: "4BgP,9Xdh,m8th,m9B9,pcdj,mVWV,ikkb,ikSF,ikVH,ilp1,kD93,dLI9,ewhr,ikG9,g2nF,kDEj,dMbp,ewJz,il9p,exj9,c/0r,3R4x,cebr,cdRF,9aAH,9aTx,67zr,67ax,c/9P,3RdV,cekP,ceN1,9bpP,9b0V,67IP,6891",
                    "56ca": "nG0X,nHc1,pcgr,ikPx,m8wj,m9oF,jSVF,jS1p,m8wp,ew4X,ike1,ilp1,exg1,gOMr,gP3h,ewAh,ewhx,gOMx,gPfH,gPyx,ex3x,ewMN,gPfN,c+Aj,c/sF,btOz,bsWp,9X6X,9Yi1,ewtX,9Xw1,ewW3,9XY9,9aNb,5m91,7EZP,3QQV,67CF,9aTr,5n4p,3RG1,67Sb,8quF",
                    "4e53": "orTz,mVrF,cdRF,iktz,illV,ik/X,ceo1,cdyP,ceQ9,9XOH,4Cv1",
                    "57d4": "ik7H,ikzV,oq/j,9Xgp,8pmH,aIhV,orNj,m9uV,kD2P,kD+h,3QTX,hzO1,hAwV,5ngV,3Rqp,dLEX,dMnV,9aGX,9bpV,pcsX,4C61",
                    "4e14": "5m2H,5nqh,5mlr,mVox,mWax,5n7x,gOMr,gPyx,bsZr,btLx",
                    "7eab": "or5z,gOwV,gOPF,jSgX,aHUV,bta1,66WP,7F11,dLUz,j5NV,mVNr,mWn1,685V,4Cfp,mW7j,dM8h,7FmV,4BSp",
                    "68a2": "jRNH,jSk9,pbTr,3QHx,aHRH,jS4x,gOMr,dLI9,nGzj,kDoN,pczb,hAhh,jSVz,os49,3R1j,hzXp,hAA1,5nk1,3RwF,dLOj,dMr1,9aQj,9bt1",
                    "5ba4": "pcab,m92N,ikdX,m8n1,m9y1,ilp1,iknj,ilfF,ikPr,dLpp,dMex,gPlX,ceJV,9arj,9bmN,4BgP,4Cy9,dLRr,4BVx",
                    8258: "4BdH,9al9,mVf9,mVB1,67n1,4BzF,mVlj,pbWF,j5fr,gOSN,cdLj,9aAN,ew1P,ewAh,mVZX,lo7x,fhvx,fi51,mWn1,mWdF,j5QX,j5Ex,j64z,j6e1,orKb,ceuh,ce8j,ceJV,7FCx,5mTV,3Q+h,ceez,8qf1,5n7x,3RJ9",
                    6843: "j4YH,j5oV,pbQj,3QEp,aHRH,hzyp,dLF1,jSk3,gP9x,9XsP,dLXN,orxH,aIDN,9aWF,7Fdx,67wp,3QU1,orKb,67Sh,4Cfp,4Cv1,6V4h,gPsb,jS/V,dM8b,9Yi1",
                    "9e35": "m8tb,pbWF,fh9z,hzR9,m8P9,m8n1,c+r1,c+Wh,67th,4BM9,3QKF,kCSj,ikwN,8pmH,9Xw1,pcsX,m9ip,hz+r,lo7x,loJ1,hAA1,cekP,excV,gPiP,5mTV,4C61,4Cv1,6V4h",
                    6211: "mVf3,orop,mVuH,5mrN,3QBh,9X3P,ewGx,ikaP,ils9,orKb,kDQV,pcpP,fhI1,9bah,6UNx,3RCV,6V19,4BM3,6UuN,9b79,btIp,g2PN",
                    "5f26": "nFZP,nGmV,hzKV,hzp1,c+r1,c+MV,67jV,5mrN,3Qy9,pcpP,loqh,jSk3,jT69,jSFX,c+Wh,c/jh,gPBz,5mEh,685V,9Y8z,4Cy9",
                    "5e78": "m8tb,m9oF,hzlP,hAD9,pcgr,hz+x,g21H,c+T9,c/6H,gPsh,c+Aj,c/sF,8psX,8qE1,c/0r,3R4x",
                    "5ca9": "oq/j,jS1p,jSYN,orWN,pcgr,jStx,gOwP,gPO9,8ppP,cdUN,gP3h,3QNH,cdUN,ceDF,3RwF,67gH,67/F",
                    "4e59": "m8q3,m9lx,gP6p,ewu1,bt0F,8pCp,6TYp,5mfh,5ndN,685V,9bt1",
                    "53f3": "jRQP,jT69,8ppP,cdRF,fhj1,jSnh,orrx,3QQP,dLBV,dMhF,3RwF,67jP,67/F",
                    7838: "mV5H,mVB1,mVlj,dL9N,6713,gOD9,gOVV,8pOV,8pw9,nHf3,nGwh,5mEh,5nqh,9XOH,j5KN,j6aV,btUV,9Y5x,m9fb,6UHh",
                    "627e": "jRQP,jSnh,pbWz,5moF,3QBh,bsJP,ewx9,nGVb,kDNN,hzUb,ilp1,4BM3,9b41,ex6F,pcpP,c/d1,7Fzp,3RCV,7FS9",
                    "5fe0": "dLmb,lnEh,lozF,dMhF,g1Rb,g2MF,oroj,c+Zp,bsTb,5m5V,aIhP,5muV,4BJ1,4C99,6UKp,btjj,9b0V,btLr,6V4h",
                    "6ed3": "nG43,lnNF,ikaP,fh6x,4BjX,cdOx,pcjz,mW19,j5oP,m8IV,m9y1,j6e1,kDoH,il39,hzNX,hAwV,g2hj,c/6N,c/g3,g2Jx,c+JH,c/F9,9aDP,9bt1,c/cX,3Rh1",
                    "57a1": "pbZH,j4/V,m8zr,aI8x,jSdP,m9B9,pcjz,j5NV,c/px,aJ71,dMxh,pczb,mWgN,j67H,fhOh,btgh,8pFr,8qxN,btpz,3R7F,3QuX,3RJ9",
                    "891a": "3QHr,gOMx,g1Xr,c+Q1,fh9z,gOZ1,bsGH,kD61,kCCN,m8Cz,pbNh,m8Sb,m9oF,pcsX,hAb1,hzR3,hAD9,mWjP,il9p,fhEV,9XpN,9aTr,9bpV,5ngP,5mKx,3R4r,c/0x,c/yV,3RCV",
                    "80fa": "3QrP,9Xa9,mVf9,mVxV,67jV,4BCN,3QHx,hzs3,hzKV,cdXP,cdF9,pcpP,m9fh,hzXj,kDfp,kDU1,hAA1,dLI3,dMxh,dMkH,8qop,3Q+h,j5U3,9aTx,7Fzp,4Cy9",
                    "72c8": "3QuX,5mlx,7EWN,cdXV,j5lN,lnNF,nGap,pbK9,ikdX,lnNF,orf1,aHUP,g21N,aIxr,nGCx,nH8V,aJ3V,j5Xb,cer9,7FjN,3QX9,9bdj,4Cy9",
                    "535c": "pcab,3Q+h,ikSz,ceJV",
                    "64a4": "3QrP,5mip,pbQp,jRNH,jSdV,bsGH,ewqV,pcab,m8/F,lnTP,lon9,lo7r,gOZ1,hA4N,j5KH,g2x1,3QTX,ewu1,ewPV,5mTV,3R7F,bt9X,btvV,8pRX,8qbV,hAe3,orTF,j5+j,j6h9,j6aP,c/vN,7FCx,3Rh1,g2Db,9Y5x,6UTN,3RJ9",
                    6376: "j4YH,j5oV,pbQj,5mip,3Qv1,aHRH,g24V,mVE3,orZV,j5rX,j6kh,ewtX,exj9,ikPr,9XIx,ilfz,9Y8F,9aDP,9bzh,4BM3,4Cy9,mVZX,4C61",
                    6363: "j4/P,j5s1,or2r,5mlx,3Qv1,bsJP,fhj1,m8/z,pct1,fhOb,gPEN,m9uV,m8Vp,c+Zp,c/C1,6891,4CrV,3Rnh,jSzH,hAhh,aIkX,67n1,67Vp,aITp,btsH,67FN",
                    6597: "mVrz,jStx,iknj,fhsp,bsGH,c/Ih,pczb,3Rnh",
                    "8d29": "aHXX,nG11,nGt9,aIo9,iktz,aIbF,7ENp,4BgV,9axz,6Uf9,nH8P,m8/F,btpF,9aTx,4BJ1,gPcz,gPL1,aIZF,3R7F,fhEP,9bdp,3RJ9",
                    "961c": "pcdj,m8M1,aI8r,m8zx,m9lx,ilcx,ikqx,fh6r,fhXF,btOF,bsZx,8pmH,8qKh,btmr,3R4x",
                    "72d7": "nG0X,j5iF,6U8V,5mrN,4Bqh,hzoX,nGjN,fhcH,aHY1,hzNX,orAV,loaz,loJ1,685V,4Cfp,8q2r,g2kx,g2Gp,9Y2p,9XIx",
                    "608d": "ev+H,jRX9,pbQj,3QEp,kC/H,gOZ1,nGzj,nH8V,hAwV,hzXp,nGzp,kDfj,kDQV,ewAb,exg1,9XvX,9Yl9,ewW3,3Rk9",
                    "73af": "mV8P,mVE9,gOzX,gP09,8ppP,btd9,mVor,9Xjx,mVHb,mWq9,mW7j,fhBN,8pS1,ik/X,4C61,g2Gj,9Yl9",
                    6324: "jRNH,jSdV,bsJP,g24V,pbQj,5mip,3Qv1,pcmH,m9fh,lnWX,loM9,lozz,il6h,c+Q1,jSqj,gPm1,dMu9,c/3z,8q5F,3QU1,c/pr,3Rtx",
                    6912: "pbQj,3QEp,jRNH,jSh1,bsGH,jS1p,hzyj,dLBV,pcdj,gP6p,lo4j,logV,gOVP,gPm1,gP9r,67zx,4BM9,6U2z,c+T9,c/6H,9b41,m98X,m9B9,dMkN,7Fwh,3R4x,lon3,c/mp,7FIN,4Cy9",
                    "75c9": "j4/P,g1Rh,bsJP,ewhx,3QrP,7ENp,9Xjx,lnKx,loM9,orrr,m95V,ikzP,ilcx,cdUN,fhBH,ceGN,ce5b,cer9,ceez,6UrF,6T/r,6UWV",
                    "7ce0": "mV8P,jR+h,ik7H,ikD1,jSaH,mVB1,pbTr,3QHx,9X0H,ikqx,gOMr,dLBV,pcpP,mW7p,mWq3,mVHh,c+Wh,9aK9,5mrN,jStr,jS/V,dMnV,dLRx,gP6j,gPO9,m9fb,5n1h,3RaN,cebr,9XRV,6Ulj,9X/h,ceub,8quF,5nn9,9bjz,btUV",
                    "5a6a": "m8jP,m8Vp,pbZH,ewnN,g1HP,m8FN,kC/H,hzXp,m8/z,m9B9,pczb,ewZh,g2kr,m9fh,kDBb,g2Z9,cdyP,ceQ9,ceub,8qbV,67wp,4BCN,3QBh,fhvr,9axF,8p/p,6UE9,4CrV",
                    "7ec3": "pbWz,hzlV,ikwN,lnWX,bsN1,ce29,66WP,8pS1,lo1b,loM9,orH3,c+Wh,c/C1,hzR3,hAhh,5n1h,3RaN,5mB3,aIDN,aIZz,68fh",
                    "8def": "nG0X,nGq1,hzO1,hzp1,nG11,hzBr,6T/x,c+Dr,c+T9,ew4X,5m91,4BdH,8pYh,ikMj,pcw9,m95P,m9uV,gPsh,c+Zp,j5KH,c/F9,3R4r,cebx,ceJV,3RCV,5mKr,5ngV",
                    6885: "jRNH,jSdV,pbQj,3QEp,bsJP,jS1p,iknj,ewqV,ikCX,m8Yx,pcjF,m8Yr,m9B9,7FVb,7F7h,ikMp,illV,685V,4CoN,3Rqp,c+MP,c/Ih,gPiP,ex0p,btyX,9bdp",
                    "59c6": "j4YH,j5s1,dLBV,bt3N,6TYp,3QrV,or2r,cdC1,6Uf9,7FVb,7Fap,mVNx,mWjV,5ngV,3Rqp,ewx3,exmh,jSFX,gPvp,c/cX,9bdp",
                    "6b27": "mVNr,mVc1,6TP1,6Ulp,jR+b,fhfV,9XFp,9Xdb,ewqV,hzR9,kDch,fhvr,jSCV,pcw9,jSCP,jT31,g2PN,gPsh,btC9,7FmV,3QX9,btFb,7FCx,682N,3RJ9",
                    "54c1": "nGjH,nGVh,hAhh,hzHN,nGjN,3Qy3,dLj9,dLLh,3Q+h,5mc3,5mEh,3RdP,dL+V,dMnV,3RCV,5mTP,5ngV",
                    "6b20": "fgZ3,ori9,kD2P,kDU1,g2Jx,hA1z,c/3F,9XFp,6Uc1,3Qy9,c/3z,9b41,67Yx,4Cv1",
                    "786e": "mV8P,mVHh,mVrz,ew1V,6TVb,gOGh,gOZ1,8pS1,8pzh,ikG3,mVTN,pct1,mVTH,mWgN,j5Xh,3QNH,5mB9,7Fap,9XIx,j5Ex,j6e1,5nk1,3Rtx,fhvr,fi51,btmr,btY1,j5Xb,67Sh",
                    "715e": "j4/P,pbZN,lnHj,lo4p,hzHN,hzs3,hzXp,btjp,bsN1,ew83,ewDp,orKb,hA1F,kDuX,kDX9,kDNH,ex0p,aIDN,hAaX,dMbp,9Yl9,3QrP,9aux,8pRX,3Q+h,8q8H,3RdV,9bgr,4Cv1",
                    "53f2": "lnHj,loCN,fh+N,fh3p,lnHp,pcjz,ewJF,btmx,6Uf9,5moF,3QrV,c+JH,9aK9,67FN,4CoN,3RJ9",
                    6714: "pbNb,lnNF,kD5X,orrx,kCFP,kDoN,hzvb,cdIh,cebx,hz+x,aIxx,kD2P,cdXV,9aAN,6T/x,4Bn9,4BSj,8qbV,cer9,nGS9,nHc1,6891,4Cix,il33,ilp1,c/BX,c/g9",
                    "8c2d": "oqYb,lnQN,hziH,hzyp,4Btp,8pS1,nGpX,nHf9,nGIH,hA4N,nGYj,hAkp,ln+3,loJ1,hAA1,hzR9,ln+9,g2eb,g2SV,9YeV,9XCh,g2eh,c+Wb,c/yV,7F43,7FS9,9XY3,3Rk9",
                    5934: "nGgz,kDfp,iknj,fhm9,cdyP,ceQ9,pcpP,fhBN,btpF,7F7h,67jV,3Qv1,9XUX,4Cy9",
                    "754f": "oq/j,orTF,gPBF,gOJp,oq/p,kCSj,kDKF,orrr,gP9x,dLcP,dMu9,dLsr,3QHx,7Fap,dLLb,8qbV,67Vp,4Cv1,8qbP,btOF",
                    "620f": "jRTX,jSnh,ewu1,9XmF,8pCp,5m5V,g1Rb,cdXV,7F7h,mW7j,jS/V,gP6j,ils9,pcpP,dM21,8qlh,3RCV,6V4h,4BM3,6UuN,9bah,excV",
                    "87f9": "j4/P,pbWF,mVlj,mVHh,kD2V,cdBX,ewep,kCSp,kDix,dLRx,c+Wh,hzyj,hz+x,g1Uj,g2kx,kD2P,c+MV,nGFz,nH8V,loFV,jSSx,nGVb,jSzN,g2qH,j5U9,hAaX,hAA1,ewMH,exj9,j61r,ceAx,6T/r,aI8x,aIZF,8quF,8pFx,ceez,5mNF,4BjX,682N,7FCr,3RJ9",
                    "900a": "mVf3,j5iF,g1EH,g1Up,7ENp,5m91,7ENj,4BVx,4Cy9,nGjH,nGIN,j5yh,9aNh,7EZV,c+JH,hA1F,btsH,j5R1,orNj,9bdp,7FmV,j64z,bt/9",
                    "66f3": "aI5j,lnHp,lozF,c/sF,c+Ap,hzyj,hAqF,pcdj,c/0x,6UB1,3RzN,6V19,5m8X,6Uih,8qf1,aIZF",
                    "81c3": "4BgP,9Xa9,nG49,nGgF,5moF,3QBh,c+Gz,c+u9,hzs3,hzEF,pcmH,mV+1,lnTP,loM9,jSqj,fhfV,fhsp,gPcz,aIhV,aIxx,ceez,6Uih,3QQV,dLXH,jSMh,jSSr,hAtN,gPlX,3Rh1,gPlX,gPL1,c/yP,c/d1,9b3X,9bpV,5mWX,5nn9,gPyr,5n7x",
                    "82d1": "mV8P,mWq9,pc3X,j5s1,pcw3,j5U9,bsJP,j5iF,gOMr,gP6p,aIo9,6U2F,3Qv1,cdOr,9Xw1,9b73,aJ0N,hAtN,hA4N,5mQN,4C2V,4CrV,7FS9",
                    "8f97": "lnuP,ln+9,pbWz,dLg1,ewx9,hzEz,3QKF,8ppP,9Xz9,4BIX,9XFp,nGzp,nH8V,jS/V,jSqp,g2hj,g2SV,ce8j,ceN1,jSFX,ceo1,jSSr,ceAx,cekP,3RdV,67Sh,ceub,4Cy9,8quz,aJ71",
                    5740: "hziH,hzO1,or2r,9aux,6TLP,aIo9,kDir,4BVx,pczb,4Cch,gPsb,gPL1,4BCH,4CBh",
                    "8ffd": "mVbX,jS7F,g1EH,g1Xx,6T/x,5m91,6T/r,4BPh,4Cy9,loaz,orE1,6Uib,lo1h,loCN,gPEN,gP3h,c+Wb,c/vN,8qxN,8pYh",
                    "90a6": "3Qy3,6U2F,bt6V,pc0V,lnxX,loaF,g2kr,g1O9,bsJP,btsN,3RgX,nGP1,nHc1,g2Gp,dMnV,aJ71,7FLV,67Yx",
                    "9cd6": "oqV3,m8zx,m8P3,oruF,fgVX,m8n1,m8Yx,gP9x,g2b9,or8H,g21N,hzvb,jS7F,jSgX,ikJh,jSzH,m991,orKh,m98X,m9B9,m9rH,ilcx,fhBN,jSJ3,exg1,bsTb,dLBV,fhm9,dLBP,dM59,btsN,bsZr,btLx,6UNx,6T/x,bsZx,9aur,9bgx,btmr,6Uox,4BgP,4Cy9",
                    "5dee": "pbWz,lo1h,lodH,pcCp,loIX,lny1,hzvb,hAtN,ew1P,exj9,lo7r,gP6p,c+T9,9XmF,6TIN,9XsP,9YbN,9XLz,4BYF,4Bqb,4Cy9",
                    6101: "m8q3,nGzp,mVrz,cdRF,j52X,j5Bp,dLfX,j5iF,fhph,hz+r,lodN,orKb,hAe9,ewPV,ce8p,il6b,fhUx,ceN1,j64z,mWn1,5m5P,9Xjx,9XsP,5muV,4BJ1,4Cch,6UNx,aIxr,8qbV,9Y5r,68c9",
                    "642d": "kCCH,kD61,cdvH,gOZ1,pbTr,5mlx,3Qv1,mVAX,mWq9,pcjz,j5HF,j64z,pcIF,c+MP,kDv1,dMu9,dLRr,dMhF,3R1j,aIup,aJ0N,3RzN,67wj,682N",
                    "6bbf": "5m2H,9ai1,dLj9,nG49,nGCx,j5Ex,j569,hzEz,aIbF,hzR3,aIo9,ewbb,ewGx,aIAz,aI2h,4Bn3,8pIF,9aK3,67zx,g2nz,j5NV,nGLV,nH2F,hAqF,gPEN,gPRh,ewJz,excV,9bgx,3R4x,dLXH,8qlh,4Cy9",
                    "989d": "pbQj,m8IV,j4/P,m8jV,m8Vp,j5Bp,kCYz,fgPN,iknj,ikJh,dLvF,9X0N,g1Uj,btjp,3QBb,aI2h,aIo9,5mB9,5mfh,nGCr,nHih,nGYj,jSG1,8q8H,jSzN,jT31,9bt1,gPvj,9bah,3Q+h,7FCr,4Cy9",
                    5949: "mVbX,mWn1,jS1j,jSYN,g1HP,g2Z9,pcgr,j5yh,dLyN,9X3V,g2tP,ceAx,9Yoh,bt0z,btLx,7EH3,7FLV,ewGr,3R4x",
                    5272: "pc0P,mVHh,j563,m8q9,m991,j5R1,ikkb,ikVN,fhBH,fh0h,c+qX,c/d1,kD5X,9Xw1,3QEj,9Xgp,9XLF,5mNF,5mip,kDEj,9Y2p,os0X,6891,3Rtx",
                    "8be1": "nG7b,jSdV,gOtH,gOMx,5mip,9aDV,j5yb,m8/F,orAV,m8/z,m9uV,il6h,ilvb,ikJh,9aNh,67q9,3QNN,8qoj,9YbN,dMkN,dL+V,5mTV,4C61,4Cv1,6V4h",
                    "4faf": "fgPH,pbZN,jS1j,3QEp,nGt3,nG/x,j5U9,j5lH,j6h9,dLEX,ikMp,g2eb,g2SV,bt3H,bt/9,g2wX,aIGV,8q5F,3QNN,aIGP,6UKp,3RJ9",
                    "6d3b": "oqV3,m8FN,j4YH,g1Xx,4BjX,cdUN,mVE3,orZV,ikzP,ilvh,nGS3,c/g9,3Q+b,c+Wh,c/yV,3RCV,5mEb,5ngV",
                    "78b1": "m8gH,m8IV,m8wj,c+kN,6TS3,g1O9,g21N,8pLN,8pw9,3QKz,67n1,aIrh,lo1h,loM9,hzXj,hAe9,7Fdr,dLRx,dM21,9b41,9aTx,orTz,m9uV,pczb,dMbp,7FFF,3RG1,6V4h,4C5X,8qrx,hAA1",
                    "7b4b": "ikaP,pbWF,m8wj,m8Yx,m8Cz,j5s1,j5Er,pcw9,m95P,m9B9,m9fb,j64F,4BgP,9aoh,gOGh,gP09,67q9,4BCN,dLmb,dLI9,9Xz3,9Xdh,ewDj,excV,5ndN,3Rnh,ik/X,9b0V,5mNF,3Q+h",
                    "7ee2": "pbWz,hzlV,hzHN,ln+3,bsN1,ce29,5m5P,7F49,nGFz,nH8V,j6aV,j5HF,nGFF,3R4r,g2kx,g2SV,5ngV,3RwF,c/3z,c/yV,9bpP,9aWF",
                    "6b3e": "m8jP,m8/F,pbZH,ikwN,ikdX,ikPx,fgZ3,fhsp,cdyP,ceeF,66WP,9Xdh,cdUH,5mrN,3QEp,9Xz3,7Fdx,gPcz,pczh,kDuX,kDX9,gPEN,il6b,btC9,8qbV,67CF,3Q+h,dM8b,9Y5x,685V,4Cy9",
                    "674e": "m8mX,m9y1,pcgr,gP9x,g1HP,j5oV,m8Yx,jSG1,hAnx,g2Z9,fh3j,fhUx,btpF,5mNF,3QU1,9X6X,9Yi1",
                    "4ee4": "gOwP,jSaN,orrx,kDy9,ilfF,gPO9,j5yb,g2tV,dLmb,dMhF,6Uox,9XpH,6Uox,3Rh1",
                    "9a82": "oqYb,orlh,j5yh,j59h,oqYh,orAP,orWN,j67N,j5NV,orAV,g1O3,g2Gp,btFh,ewqP,aIbF,aJ71,5ngV,3Rnh,6TLP,7Fwh",
                    5999: "jRQP,jSh1,dLBV,8pFx,4BgV,pbTr,cdC1,6Uih,dLI3,kDoN,pczb,9X/h,lozz,g30h,3QTX,4BYF,67P9,9bjF,dMr1",
                    "5ff5": "gOwP,jSaN,orrx,jSMh,gPO9,jSqj,hA7V,g1Xr,g2Gp,cehN,9Xgj,5m5V,aIhP,5muV,4BJ1,4Cch,6UKp,btjj,7FmV,aIWr,68c9",
                    "84ec": "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,jR+b,hzEF,ew1P,ewep,7ENp,4BgV,7ENj,4BM9,4Cy9,gOVP,loaF,j5Bj,j64F,gPp9,dLyN,hzXj,fhL9,dMu9,c+PX,c/vN,aIo3,aIZF,7EZP,7FLV,ewPP,5mTV",
                    7941: "pbQj,m8M1,jRQP,jSk9,fh9F,bsJV,fh9z,3QKF,fhcH,ce8p,3RaH,mVTN,mWjV,gPvp,dMr1,9Yl9,8qAV,7Fzp",
                    "7a77": "pcdj,mVTN,ikh3,lnB9,loJ1,ilp1,ew4X,j5v9,j5NP,exj9,cdIb,ceGN,5naF,3Rk9,3QuX,67gN,9aNh,g2kx",
                    "962e": "3QuX,oqS1,orf1,hzyp,dLF1,ce29,aIl1,9arp,nGwb,nH8V,gOYX,gPL1,gPfH,9aWF,6Ulp,4BCN,gPsb,67Sh,4Cfp,4Cv1,6V19",
                    "6df1": "oqV3,lnQN,j4/P,g1Xx,5m8X,c+Dx,kD5X,nGq1,nH8V,kDQV,gOYX,loaF,lon3,hAtN,dLBP,dMu9,hA7P,3RdV,67dz,9aNh,dL+V,dM1X,9Y5x,6V19",
                    6691: "oq/j,orTF,j64F,j5cp,oq/p,m8wj,m9oF,gOJj,gPsh,ikPr,dLRx,dLcP,dMu9,hAwP,c/3F,aIeN,9aeV,3QNH,aIeN,aIWx,3Rtx,5n7r,5mrN,8pLH,8qrx",
                    "795f": "nG7b,kCPh,kDNN,nH5N,jRTX,g1L1,g2W1,jT31,orrr,g2kx,dLvz,dMex,btXX,bsN1,5m8X,9aAN,btmr,5mKx,3QX9,9bab,5ngV",
                    "586b": "ik7H,ikD1,oq/j,9Xgp,8pmH,bta1,mVAX,mWq9,pcw3,jSCV,9aQj,jSqp,jSYN,9bmN,hzXj,hAtN,ewDj,ex9N,btjj,btRN,9aDP,9bzh,3QQP,7FgF,7Fzj,3RJ9",
                    7696: "nGdr,jRX9,66ZX,jRU1,jSdV,7EZV,7EE1,ew4X,ewqV,pcmH,m9fh,hzR3,ln+9,loFV,hAwV,hz+r,hAqF,dLI3,dMr1,3QQP,5mEh,6Uox,8q5F,dLXN,dM8b,5n1h,4Cfp,4Cv1,6V19",
                    6664: "8psX,mVc1,mVuN,9XpN,9X71,gOzX,gOSN,nGt3,nHc1,nGLP,ewJF,jSnb,jSVF,ex3x,ewtX,exj9,3Q+b,btgh,btRN,3RzN,5mEb,5ndN",
                    9879: "mV5H,mVB1,mVlj,bsWp,9X0H,cd/1,ori3,os49,orKh,jSCV,9aQj,jSqp,jS/V,9bpV,g2A3,9XV1,6UuN,5mHp,3QNN,8qlb,4Cy9",
                    "84c4": "mVbX,mWn1,pc0P,kD2V,pcw3,kDy9,m8Vj,jSzN,j4/P,j6h9,j5v3,g1Up,g2qN,il6b,ewAh,cdIh,dMhF,g2Db,ceJV,3QEj,bsWp,btOF,3RwF,8pCj,8quF,5mij,5naF,btmr,5mKx",
                    6768: "jRTX,jSk9,pbWz,3QKF,aHUP,iktF,hzEz,ewx9,nGwb,nH5N,g2nF,g2W1,6U+1,5ngV,4Cfp,8pRX,aIAF,g2A9,4BSj,8qi9,g2PN",
                    "7fcc": "nG0X,nGwh,g2eh,lnHj,jSdV,g1KX,j5yh,nGIH,nH8V,fi1V,lojX,jSPp,g2qH,j67N,g2hj,dLXN,c+u3,c/C1,aITj,5mQN,aIeH,6Uf9,5m5P,5nn9",
                    "5b87": "pcab,m92N,hzs3,m8q9,m9y1,hAA1,hzBr,hAqF,cdBX,ceQ9,hA1z,5mNF,3QX9",
                    7076: "ev+H,jRX9,pbTr,bsZx,7EKh,4BgV,bsZr,7F49,g1Xr,kD99,gP3b,gPL1,5muP,5nqh,orDX,5mX1",
                    "75b9": "kCFP,hzvh,cdyP,fh6x,4BjX,7ENp,bt0F,mVrF,mWn1,pcjz,mV+1,ewnH,gP6p,kDrV,jSCP,gPyx,fi89,aIo3,g2A9,7F7b,9XV1,ceAx,3QQP,5mTV,6UNx,9Yi1",
                    "8bf8": "oqV3,lnQN,hziH,hzyp,3QEp,8pS1,m8Sb,m9lx,pcsX,hAb1,hzKP,hAD9,nH8P,il9p,ewMN,bt6V,3R4r,c/0x,c/yV,3RCV,9XIr,9YeV,5mKr,5ngV",
                    6700: "nGdr,nG/x,ilcx,ikqx,nGdx,lnKr,lowx,g1EH,g30h,g1Uj,6TYp,g2hj,3R1p,dLpj,dLOp,9Xgj,9XFp,66ZX,8p/p,c/6H,c/vN,9Y5x,4BYF,c/0r,8qop,5nn9",
                    "6f15": "5m8X,cdOx,fh6r,ikaV,nG43,lnNF,mVuH,mWq9,jSYH,dMkN,dLI9,jSk9,jSYN,gP03,gPEN,dM8b,pczh,pcjz,dLUF,8pYb,8quF,5naz,5mEh,3Q+b,btgh,btOF,3RwF",
                    "575d": "8pmH,btd9,9Xjr,or2x,ikaP,ikD1,9XFj,nGzp,nH8V,9YeV,3QNH,5mEh,9b0V,btz1,j5U9,9bab,4Cy9",
                    "5e87": "pcdj,mVTN,m9xX,m8th,aI2h,7EH9,4BgV,j5oP,3QQV,7FgF,dLBP,dLUF,jSCP,67IV,5mX1,4C99,4CrV,6V19,c/9P,g2SV",
                    "707f": "ew4X,jR+h,or5z,dLvF,9aux,3Qv1,kDcb,gOPF,cdRz,7F7h,j5Er,5mKx,6891,pczb,67Sh,jT2X,3RG1",
                    "79e4": "nFZP,pc41,nGdr,3QHx,j4YH,j5v9,9X0H,ikqx,g1Xr,c+Q1,oroj,os11,nGS3,3Rk9,jSnb,ewMN,ex3r,jS/V,ce5b,ceTh",
                    "4ece": "or8H,fh9F,9aoh,5m2N,fh9z,c+Q1,9XFp,orH3,fhL9,btvV,6Uox,3QU1,g2A3,cexp,9bjF,5nn9",
                    "6da4": "oqV3,lnQN,j4/P,gOJp,5m5P,c+Dx,j5oP,pcmN,mVNr,mWdF,hA7V,dLyN,kDir,gPp9,dMu9,cdXP,ceN1,fhHX,5mX1,3R4x,5mrH,9XIx,9bdj,5nn9",
                    "961f": "3QuX,nG11,nGt9,hzBx,dLF1,aIo9,9aux,pcw3,gPm1,btsN,8p/p,3QNN,gPlX,ceuh,8quF,5nn9",
                    "915a": "nFWH,nGCx,nGdr,gOMx,dLj9,nGmP,ewqV,ewAh,5m8X,jRU1,jSnh,6Uih,6TP1,aHXX,aIrh,nGS3,g2hp,orQr,g30h,g2nz,g2SV,682N,4Cfp,g2A3,9b0V,4BPh",
                    "8d63": "pbQj,mVrF,m8jP,m8Sh,kCPb,ikqx,kD5X,ikwN,ik7H,ikMp,g1O3,g281,aIl1,aH/9,g1O9,dLj3,dLF1,8pmH,8p/p,aI8r,3QHx,kDfj,pct1,mVWP,mWjV,hz+x,logP,hAD9,gPfH,gPHV,gPsb,ewZh,ewDj,exj9,6Urz,ceeF,ceJV,6UWV,aIQb,67M1,3R1p,6UKj,3RJ9",
                    8902: "pbNb,m8CF,kCFP,kD61,c+nV,gOMr,3QHx,ewhr,bta1,dLyH,g281,kD93,kDBh,oruz,6UrF,gP03,gPsh,ce23,ceuh,67jP,7Fwh,pcIz,3RwF,hAqz,c/F9",
                    "6cb3": "oqRX,lnNF,ik7H,fh6x,4BgP,cdRF,mVxP,mWth,mWgH,682N,3Rnh,9aK3,hzR9,hAe9,btC9,btd9",
                    6325: "kCCH,kD2V,c+kH,g24V,pbTr,67ax,3Qv1,kD93,nGt9,nHc1,kDU1,ikCX,ilp1,m98X,dLI9,dMr1,9aDP,9bw9,gPp3,3Rk9",
                    "52a0": "jRQP,jStx,67wp,4BFV,pbZH,dLvF,8pCp,3QrV,4C5X,kDv1,kDU1,4Cv1,6UAX,6U+1",
                    "63a5": "jRQP,jSh1,bsGH,ewqV,pbTr,5mlx,3Qv1,pcmH,m9fh,ln+3,loJ1,jSqj,gPfN,g2A3,jSVF,g24P,g2Z9,bt6P,bu2h,dL+P,8pYh,6UHh,3RG1,btLr,6UHh,5mTV,3QU1",
                    "5c45": "5m2H,9Xa9,c+xh,nG7h,nH2F,j64F,j59h,fh0b,fi89,j5Hz,btpF,4BCH,bt3N,btOF,4ClF,67gH,67/F",
                    5751: "hziH,hzO1,oq/j,9Xgp,8pmH,btd9,pcjz,m9fh,kD2P,kDX9,3QHr,67q9,aIxx,gP9x,gPvp,5n4p,4Cix,4Cv1,6V4h",
                    "70d9": "ew4X,jR+h,pbWz,cdRF,6TYp,3QrV,gOPz,kDch,cdRz,8pYh,jSqj,pcw9,mVWP,mWjV,gPm1,dLOp,kDoH,gPyx,exj9,3R7z,c/3F,c/yV,3RCV,67Cz,685V",
                    "52a3": "j5cj,nGmV,pcjz,ikSF,nGVb,j6h9,jSPj,gPcF,fhfV,ew51,cdIb,ceJV,67/F,4Cix,3Rk9,fhBH,9aQp,67jV,3Qy9",
                    "63a0": "kCFP,kD61,pbTr,5mlx,3Qv1,c+nP,g2b9,pcpP,m9ip,lo1b,loM9,hz+r,hAwV,c/yV,c/0x,hz+x,5muP,aIAF,c/g3,5m+9,3R7F,aIWr,5nqh",
                    "7cdc": "4BgP,9Xdh,m8th,m9B9,pcdj,mVWV,ikkb,ikSF,ikVH,ilp1,kD93,dLI9,ewhr,ikG9,g2nF,kDEj,dMbp,ewJz,il9p,exj9,dLBP,btjp,btFb,dMhF,9Xjr,9Yl9,dLXH,3RaN,4Bwr,6Uih,9XON,6UKp,4Cy9",
                    6320: "jRNH,jSh1,pbTr,5mlx,3Qv1,cdyP,g281,ln+3,mWn1,ewAb,hAhh,kDQV,pcmH,j5U9,excV,gPO9,cd+X,ceQ9,3QQP,6Uox,cehN,ceub,5n1h,4Cfp,4Cv1,6V19",
                    "5e9e": "pcdj,m95V,4BdH,8pw9,dLmh,m8th,m9B9,g1Xr,g2W1,jSJ3,hAqF,kDir,c+Zp,6Uc1,3QEp,ewPP,5mTV,4C61,4CrV,6U+1,67tb,dMkN",
                    6734: "j4/P,j5HF,pbZH,3QNN,9X3P,j5lN,hzHH,btmx,pcw3,3Rk9,il9j,dMxh",
                    "602f": "ew1P,jRX9,pbTr,3QHx,jSdP,gP09,kDcb,kDQV,pcsX,ewT1,ewtX,exj9,dM1X,4BJ1,685V,aITj,4Cy9",
                    6254: "jRQP,jSk9,cdyP,fhm9,pbWz,5moF,3Qy9,mVE3,mWgN,fhUx,fi89,5ngV,3Rnh,mVTH,dLUF,8p/p,4BFV",
                    "634e": "jRNH,jSk9,pbTr,5mlx,3Qv1,cdyP,g281,orlb,jSzN,pcw3,hAe9,kDKz,os49,3R1j,hzXp,hAA1,5nk1,3RwF,dLOj,dMr1,9XFj,9Yi1",
                    "89c6": "oqYb,m8FN,j4/P,j5oV,fh6x,bsGN,fh6r,3QHx,fh6r,ce29,ce8j,nGzp,nH5N,c/vN,jSJ3,c/d1,9aZN,67wp,4BJ1,dM8b,67Sh,5n4p,5nk1,7FS9",
                    "64de": "j4YH,j5lN,bsJP,g21N,oq/j,5mip,3Qv1,mVxP,kDch,pcgr,fhvx,lodH,nGP1,j5oP,j5R1,pcgr,fhvx,fhfP,j5Ex,fhI1,cdUH,cer9,ewDj,9Xw1,67IV,4BCH,6Ulp,9aWF,cekV,hAe3,orTF,j5Xb,j6kh,j6aP,btRN,6UNx,5n1h,3RdV,gPsb,aIWx,6UTN,3RJ9",
                    9003: "nG0X,jS7F,g1EH,g1Up,6TYp,4BgV,6TYj,4BPh,4Cy9,kD5X,hzXp,cdXP,fhyF,oruz,c/3F,9XIx,6Uf9,orKb,8qlh,7Fzp,7FLV,9Yl9,hAnr,kDQV,g2Db,ceN1",
                    9640: "3QuX,nG11,nGt9,gOMx,fhfV,dLF1,ce29,9Xw1,8pCp,pcpP,mW4h,ikJb,lo1h,loJ1,ilp1,cehH,fi1V,ikVH,67FN,5mTV,4C61,4Cv1,7FVh",
                    "65a1": "m8jP,m8Vp,pbWz,j5iF,j52X,j5v9,ce29,cdC1,j531,fgVX,fhm9,9aeP,9aQp,cdRz,3QKF,hzUb,orH9,hAD9,hA7P,fhL9,dLUz,aIK1,7Fdr,9Yl9,j61r,3Rtx",
                    "5acc": "j4/P,j5oV,cdUN,7ENp,4BgV,or2r,cdF9,8pS1,pcab,m92N,m9fb,pcIF,ln+3,loJ1,hzUb,hAtN,btRN,btgh,ewtX,exj9,lodH,3RaN,loqb,3Rnh,5mrH,8p/p,btsN,btFb,8quF,5nn9",
                    "674f": "lnuP,loM9,pcgr,dLRx,dLcP,hzKV,lo7x,hAb1,fhXF,dMu9,3QHr,cdOx,ceAx,3Rtx,5mlr,5n7x",
                    "5ef6": "mVbX,mVB1,g1O9,g281,bt6V,7EQx,4BgV,cdIb,8pIF,4BYF,4Cy9,m8Vj,nH8V,m9c3,9XY9,gPp3,gPHV,ikPr,9XIx,9YeV",
                    "77e3": "pcgr,jR+h,jSVF,mW13,illV,c+xb,ikzV,fh9z,fhXF,bsJP,bt/9,fhyz,9aQp,67gN,3Qv1,aIAz,7Fq1,67Vp,3RG1",
                    "4f51": "fgPH,pc0V,j5cj,3QEp,jSdP,jT69,9XpH,ewDp,j5KN,orE1,3R4r,dLRx,dMnV,3RCV,67zr,685V",
                    6742: "m8tb,m9ip,fhOh,ex0p,exg1,gPO9,ewbb,gOVV,jSnh,pcdp,cdBX,ceQ9,4BjX,9aDV,fhyz,5mNF,3QX9,9bab,5nk1",
                    "6cbc": "oqYb,lnQN,ikdX,g1Xx,5mc3,c+JN,nGpX,nH8V,hAwV,g2Gp,fhiX,hz+x,kDoN,nGLV,3Q+b,c+Wh,c/yV,3RCV,67tb,685V",
                    "949f": "hziH,or2x,kCPb,kDch,gOD3,gP09,cdyP,ce5h,gOMr,4Bwx,8pV9,8q2r,jStx,jT31,8qE1,aIxr,aJ71,pczb,3Rnh",
                    "5b50": "mVf3,mWdF,hz+x,67zx,4BJ1,fgSP,fi89",
                    6848: "4BgP,67dF,9XFp,9XOH,67Yx,4Cv1,3R4r,c/0x,9Yl3,9X3V,c+qX,ewAh,il01,c/yP,g1+F,lo4p,j6h3,j4/V,jRTX,mVc1,mWjV,jS/V,pc73,mVQF",
                    5907: "j563,pc79,mVxP,mWdF,j5NV,hz+x,c+nV,kD5X,hz+x,fhOh,dMu9,3QHr,c+Dx,c/px,3Rtx,9Xjr,9Y5x,5mlr,5n7x,c/0r,5mKx",
                    "54fa": "8ppP,mV8V,mVrF,aIbF,aHUV,pcFr,m9uV,lnWX,loM9,pcsX,4C61,3Q+b,hzUh,hAwV,5ngV,3RwF,dLLb,dMnV,9YeP,9XCh",
                    "63a3": "lnB3,or2x,mVlj,mVWV,jSFX,jRU1,pc3X,dLF1,ewbb,ikkh,ikVN,fhBN,ewGx,nGYj,hAkp,pcOP,g2SV,ex3x,cdIb,c/vN,9Xgj,9YbN,6TLP,6V19,ceez,5mNF,3Q+h",
                    9524: "hziH,pbTx,lnEb,lnX1,hzoX,hzO1,dLcP,dLF1,hzyj,4Btp,8pOV,mVHb,orZV,j5v3,j6kh,ewx3,exj9,j5Hz,9aWF,j67H,9bmN,9aGX,9bw9,4BM3,4Cy9,mW13,4C99",
                    "8e48": "nG43,nGq1,ikD1,ikh9,nG49,iktz,7ETF,dLvz,dLI9,ew83,6719,5m5P,8pV9,nGzj,pcS1,lo4j,hA4N,m98X,il6h,m9xX,gPyx,fhHX,ewDp,3R1p,aIuj,aIK1,fhRj,fi51,3RG1,aJ6X,aITp,5mHj,5nk1",
                    9661: "3QuX,nG11,nGq1,gOJp,dLBV,bta1,9arp,kDcb,kDU1,gOYX,gPO9,pcw3,gPp9,gPsb,5n1h,ceub,ceN1,c+Zj,7F49,3QKF,9XFj,5mTV,4Cfp,4Cy9",
                    "72af": "nG0X,kCYF,gOVV,9aH1,6U8V,5mrN,4Bn9,gOwP,nGq1,aHUP,gOVV,m8Vj,m9uV,c/yV,dMnV,ceDF,btC9,jSwz,5mNF,4B/N,4CrV,7FVh",
                    7236: "ikh3,nGq1,nGOX,j6e1,hzHH,dLI9,btjp,7Fq1,67Vp,4CrV,il6b,dL+V,aIxx,7F11,4Bn9",
                    "57a2": "j52X,j5s1,9X3P,cd/1,pbTr,bsZx,5mrH,9aK9,aIrh,mVKp,nHc1,hzXj,hAD9,3R7z,c/3F,c/yV,3RCV,67Cz,685V",
                    "710a": "ew1P,kCM9,pbTr,bsZx,4BgV,bsZr,7F49,gOMr,ln+9,nGzj,nH8V,hAwV,hzXp,nGzp,kDfj,kDQV,ewAb,exg1,9XvX,9Yl9,ewW3,3Rk9",
                    6853: "jRNH,jSh1,pbQj,3QEp,aHRH,jS1p,hzyj,dLF1,nGt3,nHc1,8p/j,jSqp,jSYN,8qxN,fhsj,fh+N,9XFj,9YbN,67mX,68fh",
                    "51e0": "4BgP,7EQx,aIeN,mVuN,mW19,6UE9,5n1h,5ngV,7FS9",
                    7901: "m8jP,m8P9,m8zr,dL9N,6713,g1O9,g24V,8pOV,8pw9,gOYX,pcmN,orH3,lowx,kDfj,9aQp,kDir,kDU1,hzXj,hAwV,dLOj,dMnV,9XFj,9Yl9,kDBb,9X/h,3QQP,8p/p,7Fgz,3RdV,7Ft3,4Cfp,8quz,4Cy9",
                    9756: "pbK3,lnKx,kCCH,kD61,hzlP,aI2h,hzKP,8pCp,6TIH,9aK9,mVE3,mWn1,jSqp,jS/V,hzR3,hAGh,pcw3,hAe9,3R1j,ewDp,excV,5ngV,3Rqp,btjj,btUV,8p/j,8qAV",
                    "625b": "jRNH,jSk9,bsGH,fhm9,pbQj,5mip,3QrV,m8P3,m9y1,5muP,5nn9,m9c3,5m+9",
                    "680f": "j4YH,j5v9,pbTr,3QHx,9X0H,j5fx,hzBr,dLF1,orrr,kDrV,j5Xb,orZV,j5Bj,j6h9,c+Zj,c/yV,5mB3,5nn9",
                    "7cae": "m8mX,j5cp,j5oP,mVHh,hzlP,hzUh,pbWz,3QKF,9aeP,hzEF,fh9z,btd9,pcsX,mW7p,dLRr,dMnV,m9uV,m8Yx,4BVx,6UE9,ikPr,illV,dM53,8qop,5ngV,4Cy9,9bgr,ceN1",
                    "8d42": "aH/3,nG49,nGq1,aIl1,j5iz,9Xjx,4BgV,8pLH,5mEh,jSqj,pcw9,mVWP,mWjV,hAhh,ewDp,jSCP,hAkp,exj9,3R7z,ceeF,ceJV,3RCV,5mNz,5ngV",
                    9176: "nFWH,nGzp,nGaj,g1Up,c+r1,nGjH,dLyN,c+Wh,9XCb,9X71,4BjX,j531,j5yh,67th,66+1,j5Bj,orE1,lodH,loJ1,7FVb,6UrF,ikVN,illV,685V,3Rqp,g2A3,dMex,c+Zj,c/Ih,btC3,9bgx",
                    "6bcd": "7FS3,7ENp,nGgF,nH5N,67/F,4Cix,3Rh1,g1HP,g2Z9,lo4j,ikVN,c+Zj,9XON",
                    "9e25": "mVHb,mVc1,5m91,5mHp,ikkb,9XCh,9aob,j5v9,pczb,m95V,kDrP,il9p,fhOb,gPEN,m9uV,m8Yx,cebx,ceN1,5ngV,3Rnh,8p/j,8quF",
                    8058: "nFWH,nGwh,nG7b,7EKh,nGmP,3QQV,ikkb,ikzV,c+xb,c+MV,66TH,9aNh,mVNr,mWjV,fi1V,fhvx,mVNx,j5Er,j6aV,pczb,fhOh,c+T3,c/Ih,c/9P,9aWF,9bt1,5ngV,3Rnh",
                    "6b49": "pbK3,m8zx,m8LX,orlh,lnrH,loaF,ikaP,ikPx,cebx,cdC1,fgSP,fhBN,lnKr,3QHx,3QTX,lnX1,5m5P,bsZx,bt9X,8q2x,hA4H,pczh,kDuX,kDU1,gPEN,gPsb,c/jh,9b41,3R1p,c/jb,8quF,4Cy9",
                    "96c0": "jRTX,nGmV,pcgr,hz+x,nGVb,jT69,kDEj,hz+x,ew1V,fh6r,3QHx,hz+r,fhEV,ewhr,exg1,bsZr,btRN,8pFr,8qxN,5mlr,5nn9,ewMH,5mQN",
                    "7b5b": "jRQP,pbWF,mVlj,mVNx,mVrz,jSh1,jSwz,pczh,mVZX,mWq9,mW4b,jSVF,ikh3,9al9,3QrP,677p,9XpN,j5lN,hzR3,hAA1,67tb,dLLh,dMnV,7FLV,67Vp,hAaX,3Rh1",
                    "77e2": "gOD3,kCYF,orbV,kCYz,kDKF,ew1P,exj9,kDir,fhvx,aIrh,7EZV,5mip,3QrV,ewGr,9XRV,6UKp,4Cy9",
                    "70c1": "dLcP,jRX9,or2r,cdOx,7EKh,4BgV,bsZr,7F49,gOMr,jSh1,nH8P,mVNx,fhsp,fi89,jSMb,5n1h,3RaN,5mxX,btpF,btOz,6V4h",
                    "8c08": "oqYb,lnQN,hziH,hzyp,4Btp,8pS1,j5v3,mVNx,pcsX,jSCV,hA1F,ewu1,jSFX,fi89,kDHr,mWjV,9aK3,c/0x,g2wX,btz1,9b0V,6UrF,3QU1,btyX,7Fzp,67/F,4Cy9,aIZz,dMr1",
                    "900f": "nG0X,jS4x,g1EH,g1Xx,7EQx,5m91,7EQr,4BPh,4Cy9,mVE3,nH5N,jSdP,jT31,mVWP,fhEV,fhfP,gP6p,jSCV,hAkp,g2W1,ewAb,ex0p,btC9,btRN,7FFF,6UE9,ewMH,aIxx,7F11",
                    "80c3": "oqYb,orZV,hAwV,hzvh,oqYh,kCPb,kDQV,orrr,hz+x,3QHr,ewhx,ex9N,5ndN,3Rnh,bsZr,btRN,8pFr,8qxN",
                    "7ec6": "or5z,gOwV,gOPF,jSgX,bsN1,ce29,66WP,8pV9,3R1j,m8Vp,m9uV,3RCV,ewDj,excV,excV,67wj,685V,m9c3,67P9",
                    "61c8": "fgPH,jRU1,pbQj,3QEp,kCVr,hzHN,jSaH,pcdp,mVE3,mVTN,j5Bp,3QKz,9aDV,j5oV,j5NV,67IV,4BYF,aIhP,aIGV,ewPP,ewqV,j5Bj,6Ulp,nGOX,nHc1,kDU1,j64F,nG/r,il39,cer3,gPvp,ex0j,exmh,aIN3,aJdh,hAtH,3RzN",
                    "8fc5": "nG43,j5lN,fgPH,fh6x,6T/x,5m91,6T/r,4BVx,4Cy9,mVAX,mWgN,8qrx,7FFF,7FP1,9Yoh,mVQz,7Fdx,g27X,g2x1",
                    "814b": "3QrP,9Xa9,nG49,nGjN,5mrN,3QEp,c+u3,c+JN,hzHH,hzs9,pcpP,m9fh,ln+3,loM9,jSwz,bt6V,g2hj,3R1p,ceez,jSMh,gPlX,gPHV,aIZF,6UE9,4BVx,ewZb,ceDF,dL+P,9bdp,4Cy9",
                    "75c8": "jRQP,gOGh,cdvH,ewhx,3QrP,7ENp,9Xjx,m8zx,m9B9,pcjz,mV+1,3QTX,j5s1,j6aV,5ngV,3Rtx,9XvX,9YeV,excP,ewu1,j5NP,5mTV",
                    "613f": "5m5P,9al9,cdIh,nG7h,nHc1,nGIH,lo7x,lnTP,lozF,g2MF,g24V,lnTV,ikzP,ilfF,aI8r,ewAh,g2qH,cehN,aIup,dM8b,aJ71,4Btj,8pLN,8pV3,4BM9,3Q+h,3Rk9,67Vp,9aWz,6UxV,9bgr,5nn9",
                    "5d2d": "oq/j,lnHp,loFV,orZV,pcjz,loaF,gOwP,gP9x,j5lH,cdF9,ce8p,ewqP,3QQV,7EDX,9aQp,4BSj,7FjN,9XRV,hA7V,ilp1,dL+P,dMu9,dMhz,3RwF",
                    6307: "jRQP,jSk9,pbTr,5mlx,3Qv1,cdyP,g281,pcgr,hz+x,gPcF,gPHV,j6kh,kDir,mWjV,3R1j,dLOp,dMnV,3RCV,9XFj,9YeV,5ngP,5mHp",
                    "8d58": "mVbX,mVQF,kCM3,kDix,orbP,ikzV,ikaP,ikSF,iktz,ewep,c+r1,g1+z,g2kx,ewDp,dLF1,j5KH,orKh,lojX,loM9,loCH,hAqF,fhOh,dLXN,j5QX,g2Gp,ex9N,c/Ih,6U2z,cdRF,ceDF,6UQF,9XLz,6Ulp,5my1,3QBh,6UxP,3RCV",
                    "5e2e": "5mlr,bsZx,btOF,67/F,5n1h,3R4r,dLRx,bsJP,dLsx,gOSN,pc0V,mV8P,mVTN,jSwz,jRU1,gOwP,gPfN,c/cX,orE1,os11,jSSx,illV,gPL1,ex3x",
                    "618b": "oqYb,lnNF,ln+3,nGFF,pc0P,c+MV,cdF3,kCM9,kDlF,dLUF,ce5h,fh3j,ikwN,ikG3,fhsp,ikVH,kDv1,orKh,kDuX,kDX9,jSYH,fhRp,cehN,ik/X,ex3x,bt/9,5m5P,9arp,9XsP,5muV,4BJ1,4Cch,6UNx,aIxr,7FmV,9Y5r,5nn9",
                    "8be7": "oqV3,lnQN,hziH,hzBx,4Bwx,8pS1,pcmH,m9fh,ikG3,ln+9,loJ1,ilp1,g2eb,ilfF,bt6P,c/F9,gPiP,67IV,5mX1,4C99,4Cv1,7FVh",
                    "7b79": "kCFP,pbWF,mVlj,mVKp,mVrz,jSh1,kDlz,pcw9,mVZX,mWq9,mW13,j64F,ikh3,ilp1,fhXz,fh3p,cdBX,ceQ9,jStr,dLI9,9aux,66WV,9aDP,9bt1,7F0X,5mKx,ceub,5n1h,3RaN",
                    "8fbe": "nG0X,j5lN,g1EH,g1Xx,6T/x,4BgV,6T/r,4BPh,4CBh,ikzP,ilp1,pcpP,g2qN,aIup,7EZV,gPiP,c/mp,8qE1",
                    7889: "mV8P,mVE9,mVrz,dL9N,6TVb,gOGh,gOZ1,9aH1,9aoh,3QQP,9XFp,orop,os49,5nn9,3RwF,jSzH,jSYN,g2nz,g2SV,mW4b,g2Dh,c/9P,c/sF,8quF,8qbV,c/9V",
                    "8bb9": "nG43,kCYF,gOwP,gOJp,4Btp,9aH1,ewqP,nGIN,kDir,3R4x,cehH,ex0p,j6h9,orKb,5n1h,4Cfp,4Cv1,6V4h",
                    "51e4": "4BdH,bsTh,nGap,nH2F,9Y5x,682N,4Cv1,7FVh,j5lH,j5U9,ewMN,aIrh,7ETF,g24P,ceeF,7Fwh",
                    9769: "mVbX,mWn1,pc0P,j5oV,j5U9,pcw9,gOJj,gPBF,ceDF,cdLp,gOJp,9aeP,9bw9,j5Er,3R4x",
                    7678: "nG7b,nGzp,j5s1,g1Xx,dLcV,lnEb,ikwN,oruz,j5U9,g2MF,exj9,m95P,orQx,j5Xb,loCN,g1+z,g2Jx,bsTb,btRN,g2kr,9XFp,6U8V,4Bn9,9XIr,4CoN",
                    7334: "nFZP,jS1p,ewkF,7ETF,5mlx,3Qv1,ikaP,nGjN,aHRH,fh6x,gOSH,orrx,jSk3,3QX9,mVTH,mWgN,j64F,j5Er,j6h9,c+Zj,hA7V,fhBH,fi51,btjj,bt/9,fhRj,aIQh,7Fq1,3R1p,aIQb,4Cv1",
                    "4f19": "fgPH,or5F,kCSj,3QEp,dLBP,kDch,pcsX,ewPV,9XLF,7Fap,3QNN,ewPP,aIQh,8qrx,4Cy9,ex3r,jT31",
                    7877: "mV8P,mVHh,mVrz,hzyp,cdvN,4Bqb,g1Rh,g24V,7EZV,7EKh,g2b3,jSwF,pcw9,orH3,lotp,iliN,gPRh,gP9r,gPHV,c+Zj,7FjN,dM1X,8qlh,c/yP,4Cch,4BM3,4CBh",
                    "65a4": "5m5P,9Xgp,ewhx,nGdx,nH5N,gOMr,gPO9,gPiP,3RdV",
                    6485: "j4/P,j5lN,pbQj,5mip,3QrV,bsJP,ewnN,3QHr,9Xw1,mVB1,mWq9,lo1b,ikSF,hA4H,lon9,hzNX,hAe9,ewAb,9XCh,9XY9,ewW9,hA4H,9XON,6Uox,3QX9,fhOb,lozF,hAkj,hAD9,excV,ex3r,9Y5x,67Sh,3RaN,9Y5r,685V,3RJ9",
                    5321: "nHbX,nG49,5mc9,5nn9,jS7z,jSYN,fhcH,fhXF,9Xjr,9YeV,jSwz,9XLF",
                    "91cc": "oqYb,orWN,fh+N,fh0h,oqYh,jR+b,jSYN,aH/3,aJ3V,5m2H,5nqh,orrr,5mKx",
                    "6e9c": "oqV3,lnNF,j4/P,g1Xx,4BjX,cdOx,nGFz,mVB1,fhj1,j5KN,lo7r,hA7V,nGOX,nHc1,hAA1,g2Jx,fhBH,j5Xh,nGYp,3QTX,dLF1,dMnV,3RCV,9XvX,9YeV,5mxX,5ngV,dM1X,5mX1",
                    "561b": "9X6X,mVc1,mVox,bsZx,9X71,pcmH,mW4h,3QBb,8pLN,dLF1,m8M1,m9y1,gP03,gPp9,kDlz,3R7F,6U8P,9XCh,gPcF,fhyz,ceo1,gPp3,gPL1,kDHr,3Rtx,6UxP,aIQh,gPyx,ex3r,7FP1",
                    8511: "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,jR+b,jSYN,fh+N,fh0h,jR+h,jSgX,fhj1,jSCP,fhEV,3QrP,8pCp,c+Ap,c/C1,aIeH,8p/p,fhOb,c/sF,4BM3,7Ft9,aIZF,ewMH,7Ft9,3RCV,6V19",
                    "5a18": "jRQP,jSh1,dLBV,8pFx,4BgV,pbTr,c+r1,aIbF,7F49,pcsX,mW7p,dLRr,dMnV,loFV,lo7x,3R4x,6UE9,hz+r,hAwV,dM53,8qop,67/F,3RJ9,8qoj,btY1",
                    "68da": "jRQP,jSh1,pbQj,3QEp,aHRH,jS1p,hzyj,ewqV,4BCH,9Xz9,nGt9,nGLV,67IV,4BVx,ikG3,ikYV,c/9V,c+T9,3RdP,6UHh,nGVh,nHc1,5nk1,3RwF,il6b,ilp1,c/BX,c/jh",
                    "9a91": "mV5H,mVxV,dLyN,kCM3,dLg1,dLI9,5my1,3QEp,8pmH,9XpN,m8Sb,m9y1,pcw3,lon9,j5NV,gP3h,kDy3,gPHV,fhpb,fibh,fh+H,5ndN,3Rnh,67Cz,ceeF,ceuh,7Fwh,7FgF",
                    "79cb": "mVbX,nGwh,mVrz,3QKF,ikaP,ikMp,9aeP,iktF,iktz,btgh,ewGr,kDoN,pczb,dM8h,9XV1,67CF,3QX9,fhXz,kDX9,dM8b,9Y5x,5ngV,4Cy9",
                    "854a": "m8jP,m9B9,oreX,j5s1,orDX,j5R1,j5Bj,g2qN,dLmb,hzEF,ikCX,dLF1,c+T9,c/g9,fhOh,il9j,ex9N,4BdH,9al9,9Xgj,4Btp,3QHx,3QU1,67q9,cdRz,9aDV,aIo3,7Fdx,4BSj,9XON,9XUX,4C61,3Rk9,3RwF,685V,btFb,8quF,aJ0H,68fh",
                    "5a20": "j4YH,j5s1,bt3N,4BgV,or2r,cdC1,8pS1,4BFP,aIup,nGzp,nHc1,jSzH,jS/V,fhsj,fi51,fhEP,3RdV,67Vp,fhOb,9bgx,4Cy9,9Y5r,ceJV",
                    "66d9": "7EDX,nG11,nGjN,9XpN,9X71,gOzX,gOSN,ori3,orZV,kDQV,kD99,ori9,orxH,kDoN,orNj,kDEp,hzUb,hAnx,fhiX,fi89,kDrP,fhEV,9aDP,btmx,dM21,j6aV,3R4r,btmx,btRN,3RzN,9aTr,9bmN,5mKr,5ndN",
                    "5b59": "nG0X,nGzp,iktF,5moF,3Qy9,bsJP,gP3h,8pV3,ikSF,pczb,5n1h,3RaN,ilfz,c/C1,9bzh",
                    7530: "4Btj,mVlp,mWjV,4CrV,fh3j,fi1V,mVQz,7FgF,7ENj,7FLV",
                    "60cb": "ew1P,jRX9,pbQj,3QEp,jSaH,g281,pcpP,mW19,ikG3,m8P9,m9y1,ilp1,j5Er,ewAh,aIhV,gP6j,gPiV,9XLF,3QQV,ce8j,aIAF,9bgr,aJ3V,gPHV,gPsh,5n1h,4Cfp,4Cv1,68c9",
                    7269: "fgSP,m8wp,jR+b,jSk9,pbZH,3QNN,bsMX,ewAh,gP03,orAV,jSwz,jT31,6891,3Rqp,aIo3,ewMN,jSMh,5mEb,9b41,c/mp,jSYN",
                    "5df7": "lnEb,loFV,gOzX,gPL1,oreX,gOZ1,orH3,gPp9,9X3P,gP09,gPp3,c/sF,aJa9,9aDP,9bah,dM8h,dLBV,5muV,4BJ1,4Cix,6UQF",
                    9157: "nFZP,nGCx,nGdr,fh6x,cdF9,nGmP,dLBV,dLLh,4BjX,j531,j5yh,67th,66+1,9X6X,9XCh,jSwz,67CF,6891,jT2X,4Cv1,nGIH,8qxN,8q8H,orWN",
                    "626c": "jRQP,jSk9,pbTr,5mlx,3Qy9,cdyP,fhj1,nGwb,nH5N,g2kx,g2SV,6UWV,5ndN,4Cfp,7EZP,aIxx,g2x1,4BPb,7FmV,aIQh,g2MF",
                    "7ece": "or5z,hzlV,hzHN,kD93,bsN1,c+Q1,66WP,8pOV,nGt3,nH8V,jSPp,gPfN,fhj1,nGzj,kDlF,il39,gPyx,fi89,ce5b,ceN1,8pV3,8qH9,g2A3,3Rk9",
                    "8bed": "oqV3,lnQN,hziH,hzyp,3QEp,9aH1,nGt3,nHc1,nGLP,dLUF,jSnb,jSYN,dMhF,dLBP,dMxh,3R1j,btjp,btUV,3RCV,5mHj,5ngV",
                    "71e5": "fgSP,jRX9,pbTr,dLsx,9Xgp,6TS9,4BgV,bsWj,8pS1,gOMr,kD99,nGCr,nH2F,kDKF,kDix,nGCx,ikG3,ikYV,ewPV,ewx9,ikG9,il6b,ilp1,exg1,ewZh,il6h,aIkX,aJdh,c/g3,3Rk9,5mxX,6Uox,aIN9,7FFF,68fh",
                    "8bca": "oqV3,kC/N,hziH,hzyp,4Btp,9aH1,gOYX,loaF,pct1,lowx,hAD9,ce5b,il6h,8q2r,ex6F,3QX3,4B/N,67Sh,aJ71",
                    "8bdb": "oqV3,lnQN,hziH,hzBx,4Btp,9XsV,ikJb,mVNx,jSqj,jS/V,fhfP,fi89,pcsX,3Rh1,67jP,9aQp,fhI1,9bjF,6V19",
                    "7f6a": "nGaj,nH5N,j67N,j5cp,nGap,nGt3,j5v9,j5QX,nGP1,hzR3,3QX9,fgVX,fhm9,ce23,cdIh,8ppP,8pV9,hA7P,3RdV,fhEP,fi51,ceJP,cekV,8qbP,8qH9",
                    9738: "3QQP,c+MV,7Fgz,7EAV,9al3,bsQ9,btmx,9aTx,9al9,gP3b,c+Wh,c+Ap,gOJp,fgSP,fhyF,3R1j,6UuN,9b0V,fhEV,fi1V,5ngV,3Rqp,9bpP,9b0V,cekP,ceJV,hA7P,hAqF,jSVz,jSCV,jSk3,jS1p,hzyj,hzR9,ikdX,m8n1,m9y1,ilp1,gP9r,orrx,oqRX,os11",
                    "75f9": "pcdj,mVWV,mWq3,mVlp,cdLp,8pzh,5m5V,jRQP,gOGh,cdvH,fh3p,jSgX,jSYN,dMkN,dLF1,jSh1,gOYX,gPEN,jSCP,dL+V,aIbz,aJa9,3QKz,67q9,7Fap,aIxx,aITj,3Rqp",
                    "82cd": "m8gH,m9Eh,pc0P,j5oV,j5U3,pcw9,cdyP,fhcN,jSqp,g2A9,c/F9,7FIH,4Cix,4BJ1,5mrN,dLyN,dM8h,9bah,7FgF",
                    5403: "7EAP,m8jV,m8FN,9XpN,9X3V,hzNX,pcpV,loaz,loJ1,g2b3,g2MF,aIDN,6Ulp,5mEh,4BYF,4CoN,7FP1",
                    "4e1b": "nGjH,g21N,c+GF,9Xgp,7EAV,gOSH,btjp,nGVb,g2A9,c/d1,9aWF,7F7h,gPsb,btOF,7FS9,4BgP,4Cy9",
                    "7fdf": "oqV3,orop,gP6p,mVlj,kD2V,hzs3,kDfp,orxH,orZV,gPHV,mVWP,kDEp,ikVH,kDQV,hz+r,ewT1,bsJP,gOVV,ewhr,3QHx,ewkz,excV,bt0z,btRN,9axz,9bmN,67dz,68c9,ewMH,67FN",
                    "5bf9": "lnuP,ln+9,ewqV,9arp,5m5V,hzs3,dLvF,bt6V,6Ulp,j5yb,j6kh,fhyz,aIN9,orTz,67/F,3Rk9",
                    5429: "8psX,m8n1,m8FN,aIeN,aHY1,ewqP,ikMp,nGIN,orKb,jSSx,hAtN,fi89,ewAb,ex6F,67/F,3Rk9,3QKz,6Uih,9XLF,fhBN",
                    5188: "4Btj,nGap,nH8V,685V,4Cfp,jSdP,hzUh,fhyF,9Y2p,9Xmz,kDBh",
                    "4e56": "mVib,orTF,nGCr,3R4x,j4/P,j6h9,gOVP,8pOV,ew4X,ewqV,8psX,aIhV,gPlX,9XV1,8qlh,8qAV,bt/9,dM1X,g2SV",
                    "6db8": "oqYb,lnQN,j52X,g1Xx,5m8X,c+GF,3QTX,nGq1,nHc1,3RG1,ikJb,iliN,lojX,ewT1,ewGr,ex3x,9Y5x,9XIx,ewGx,67mX,6891",
                    "8f89": "m8jP,ikkh,pbTr,gOMx,gOwP,gP09,j5lH,m8P9,gOGb,9Xdh,5m2N,gOSH,67gN,aIrh,kDfj,nGzp,nHf9,kDX9,ikJb,ils9,lon3,c+Zp,c/C1,9aNb,9bw9,g2Db,3Rnh",
                    "835a": "mV8P,mWq9,pc3X,j5s1,pcw3,j5U9,hzvb,hAtN,gOMr,c+Q1,c/9P,gPyx,cdBX,ceN1,lo7r,cebx,9aNh,6U8V,3QrV,btpz,7Ft9,3RG1",
                    7686: "oqV3,fgZ9,ikJh,lnB3,lo1h,oruz,hA1F,g2qN,g2PN,ilp1,jSwz,m9uV,fhsj,c+T9,3QEj,c+Ap,c/px,3Rtx,9arj,9bgx,5mij,5n7x",
                    "9a79": "mV8P,mVB1,dLBV,kCPb,dLmh,dLLh,5mB9,3QKF,7EAP,9XpN,gP3b,loaF,pcpV,loaz,loJ1,5ngV,3Rnh,9aWz,gPcF,gPvp,aITp,aIAF",
                    "542d": "8psX,lny1,lnQN,9XpN,9X71,pcjz,loqh,jSgX,jT69,3QNH,6Ulp,9XIx,g2kx,g2Gp,5n4p,4Cix,4Cv1,6V19",
                    "6d9d": "oqV3,lnQN,ikaP,fh6x,5m5P,c+GF,m8LX,m9B9,pcjz,ikSF,pcFr,ilcx,dLBP,gOVV,gPO9,dMu9,cd+X,ceGN,5naF,3Rh1,3QKz,67th,9aWF,fhEV",
                    "730e": "oqOP,lnHp,hzHN,7EZV,5mrN,3Qv1,hzlP,orbV,9X0H,gOSN,ln+3,loM9,gOYX,gPRh,pcmH,gPfN,pcIz,gPBF,3R1j,c+Zp,c/yV,3RCV,9aQj,9bpV,5mHj,5ngV",
                    7565: "7EAP,nFZV,nGq1,9aH1,9aeV,gOwP,gOZ1,nGdr,9aux,j5yb,mVTN,pct1,mVTH,mWjV,j61x,g2x1,dLI9,kDoH,hAhh,g2Jx,exj9,3R7z,c/3F,c/vN,3RzN,5mNz,5ndN",
                    "8ff7": "nFWH,jS7F,g1EH,g1Xx,6T/x,4BgV,6T/r,4BSp,4Cy9,mVE3,j5HF,j5Xb,mWgN,hzHH,hAD9,pcsX,6UB1,9aAH,c/0x,hAb1,dMex,9Yi1",
                    8111: "4BdH,9Xa9,nG49,nGmV,5muV,3QHx,hzs3,hzKV,c+u3,c+MV,pcpP,m9ip,kD93,kD+h,hA1z,dM8h,9bmN,9aZH,c/jh,ilfF,fhsj,5mHp,5nk1,g2VX,3RG1",
                    "65c1": "pcab,m95V,m8mX,m9y1,kC/H,hzR9,hA7P,kDBh,ew83,hzs9,hAwV,excV,g2hj,dLXN,c+nP,c/C1,c+T3,9Xz9,6U8V,5moF,3Qy9,9Xz3,9Y5x,5n7x,3RdV",
                    5703: "3Qy3,nG49,nH8V,3RCV,5mc3,5ngV,jS1j,jSVF,mVWP,kDBh,7ETz,hzEF,hAkp,9bdp,7Fq1,ewkz,ex0p,bt0z,btIp,mVNr,7Fdx",
                    "7a83": "pcdj,mVTN,j52X,mVc1,mWn1,j6e1,hzyj,kD99,kDrP,hAqF,dLcP,dLOp,gOMr,7EQx,6U2F,6Uc1,9XCh,g2kr,g2SV,5naF,3Rk9,g2A3,9XRV,67zx,3QU1",
                    "4ecd": "fgSP,j5cp,or8N,j5cj,3QEp,mVxP,mWgN,fhRp,fi51,5ngV,3Rnh,mVQz,dLRx,7F49,4BCN",
                    "7a0d": "nG43,pc0V,or5z,3QKF,kCFP,kDch,bsJP,kCYF,hzEz,dLI9,oroj,kDrV,pczb,hAhh,kDNH,os49,3R1j,hzXp,hAA1,6891,3RwF,9YhX,9XFp,dLOj,dMr1",
                    "8bd5": "oqRX,kCYF,hziH,hzyp,3QEp,9aDV,j5oP,j6h9,nH2z,kDU1,fhiX,fhI1,fhvr,6Uox,67mX,7Ft9,pczb,dM8h,9Y2p,67/F,3RCV,6V4h",
                    "55fd": "9ahX,m8n1,m8zx,bsZx,bsN1,lnQH,lok1,ikzP,ikYV,dL+V,dLBV,ikzV,pcdj,3R1p,67ar,c+Zp,ce8j,9b41,g2wX,jSMh,pcFx,jSMb,jT69,gPHV,gPyr,aITp,6UE9,3R7F,aIWr,7FIN,4Cy9",
                    "6dd8": "nGaj,lnTV,hzs3,fh9F,4Bn3,bt0F,hzKP,orrx,kDcb,kDU1,6891,5ngV,4CoN,3Rqp,ewx3,j5Ex,gP6j,gPyx,c+MP,c/vN,gPiP,7FmV,btgb,7F7h,7FCx,btLx",
                    "9a6e": "mVbX,mVB1,dLBV,lnEb,dLmh,dLLh,67q9,4BzF,8ppP,aIhV,hzXj,hAD9,orKb,hAhh,ewW9,7FjN,3QX9,ewW3,aITp,7FFF,3RJ9",
                    5367: "nGFz,nG11,5m91,5mNF,nGmP,hzKV,hzoX,hz+x,cebx,cdC1,cdXP,5muV,pcw3,3Rk9,hAkj,ceQ9",
                    "663e": "nGaj,nH2F,g2MF,g1Up,nGap,jS1j,jSVF,c+Aj,8pOV,g2b3,5mB9,g2tP,5mTV,8qi3,c/vN,5m5P,5nn9",
                    6027: "fgPH,jRU1,pbQj,3QEp,kC/H,gOZ1,ewtX,j5Bp,mVNx,j5Bj,j6e1,c+Zj,c/yV,5mxX,5nqh,pcw3,5m+9",
                    "8a00": "pcdj,mVWV,m8jP,m9B9,ikqr,ilfF,ewej,ex9N,3QEj,bsWp,btOF,3RwF,677j,67/F",
                    "4ee5": "mVib,5mc9,ce29,jSgX,ewMN,mWdz,fhUx,aIQh,6UuN,5mKx,3QQV,9X/b,7FCx,3RG1",
                    "91c9": "mVbX,nGt9,kCIX,hzyp,ikCX,kDch,g1HP,g2b9,mVrz,3QKF,7EAP,g1+F,btd9,3R4r,jStx,jT31,3RG1,dLRr,dMr1,67zr,6891,pczb,67Sh",
                    "683d": "m8mX,m8Yx,pbZH,ikwN,ik7H,ilvh,dLcP,dLUF,g21H,3QNN,6TLP,9arp,dLyN,bt3H,8q2x,nGYj,loCN,pcpP,c/d1,8qlh,67Yx,3RCV,6V4h,4BSj,7Ft9,9Y2p,ex9N",
                    "8d75": "kCIX,kDch,g1HP,g2kx,pbWz,g1+F,g21H,67gN,bt3H,btjp,4BgP,9al9,c+xh,9al3,5mrN,4BM9,4Cy9,9aTr,mWgN,m8/z,9Yi1",
                    8877: "pcdj,mVTN,m8jP,m9B9,j5cj,j64F,ex6F,ewep,j5cp,kDir,c/0x,66WP,ce5h,9XsP,3QQV,6UrF,btpz,8qf1,67Yx,4Cv1,8qeX,ceGN",
                    "81ea": "lnWX,pcdp,3QHr,lnKx,lozF,3RwF,g1Xr,g2MF,bsZr,btOF,67ar,67/F",
                    "5d69": "oqYb,lnEh,loCN,orWN,pcgr,lo7x,kDcb,ikVN,hzlP,hAD9,g1+z,g2Gp,c/mp,c+GF,g1+F,4Bn3,bsQ9,btUV,5ngV,3Rnh,6UE3,6U5N,9XpN,9XY9,6UE9",
                    "80ae": "4BdH,8pw9,nG49,nGq1,67n1,4BCN,3QHx,c+PX,c+u9,hzs3,hzO1,pcmH,lotp,jSk3,jT69,3QX3,7FgF,g2nF,g2Jx,5n7x,3RwF,3RG1,7FS9",
                    "60eb": "lnHj,mVuN,pc0V,mVuH,mW4h,kDoN,ikG9,gOwV,m8FH,jSnh,ikYV,gPL1,hzEz,hAhh,ceuh,cdRF,hzEF,ewkz,ewZh,hz+r,cebx,4BdH,9aoh,9XpH,4BCN,3QU1,3Rh1,67Sh,btjj,8q8N,9bgr,6891",
                    8865: "pbWz,m8M1,kCFP,kDch,gOSN,gOwV,gOSH,3QNN,fhcH,aIxx,dLEX,hz+x,pcw3,3Rk9,il9j,dMu9",
                    "5f7b": "j4/P,or5F,cdyP,j5iF,g1Uj,3QEp,ikwH,ikYV,orlb,9XCh,9aQp,9aWF,cekV,mVWP,mWq9,6891,3Rtx,4BSj,6UxV,9b79,btFh,ex0p,mW7p",
                    5782: "mVlj,orTF,mVNr,5mKx,j563,j6e1,ev+H,exmh,j5lH,9XpN,j5+j,9Y2p,9Xdb,9YeV,5m8X,5nn9",
                    5012: "3QBb,jR+h,fgPH,jR+h,or5F,mVuH,mW19,mVKj,gOSN,hA7V,jSzH,g2A9,cdUH,ceo1,67gH,7Ft9,gP6j,6Ulp,67gH,7Ft9,kDEj,9Y2p,os0X,5nk1,3Rtx",
                    "8c46": "mVbX,mWn1,j5fr,j64F,dMhF,dLsx,j5fx,cdUH,7F7h,cexj,67CF,66WV,68fh",
                    "996d": "or2r,gOtN,kCPb,kD99,hzKV,gOJj,4Btp,aIhV,4Bzz,7F49,aIup,m8Vp,nHc1,hz+r,hAwV,btOF,7Fwh,3R1p,fhBH,aIN9,6UQF,4Cy9",
                    8179: "5m2H,9Xa9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,c+MP,c+u9,j5rX,mVNx,pcmN,mVNr,mWn1,jStr,jSYN,dMkN,dLRx,jStx,gP9r,gPEN,8pV3,dL+V,btpz,btUV,7Fzp,5mTV,3Q+h,9XLz,6UE9,3RJ9",
                    6784: "j4/P,j5v9,pbTr,3QHx,aHRH,j5fx,ikqr,ewx9,gP3b,pct1,kDoH,kDX9,6891,3Rnh,hAaX,9XFp,btLx,ewZb,9bmN",
                    "6c57": "oqRX,lnQN,j4/P,g1Xx,5m5P,c+JN,nGt3,nHc1,ewqP,exmh,nGS3,3Rk9",
                    "8fd8": "nG43,jS7F,gOtH,gOMx,7ENp,4BgV,7ENj,4BPh,4Cy9,m8IP,m9y1,m9c3,hA4N,bt6V,hA4H,7FjN,gPp3,btY1",
                    "810a": "oqYb,mVB1,j52X,lnX1,pcgr,kDfp,ikG9,gOSN,ew1V,m8Yr,ikYV,g2Jx,exj9,m98X,orWN,kDuX,j6aV,3QKz,fh9F,fhUx,5n7x,3Rh1,cdRz,ceAx,9axz,9bgx",
                    7126: "g1HP,pc0V,kCVr,9aux,pcgr,m991,kCYz,kDU1,hzBr,hAtN,dLsr,dMkN,aI8r,aJa9,kDlz,aIAF,3QrP,8pFx,8pRX,3Q+h,8q8H,4C99,8quz,3RJ9",
                    "7adf": "pcab,mVTN,mVf3,mWjV,lnQH,j5v9,j5NP,loqh,j4/P,j6h9,g1Xr,g2Jx,9Y5x,9Xjx,g1Xx,c+Dr,c/px,9XCb,67n1,3Qv1,9XRP,4C2V,3Rh1,3RCV,6V19",
                    6297: "jRNH,jSh1,bsGH,fhm9,pbTr,5mlx,3Qv1,pcmH,m9fh,jSnb,jT9h,3QQP,6Ulp,btpF,g2nF,g2Jx,5n7x,4ClF,4Cv1,6V4h",
                    "62e6": "j4YH,j5v9,bsJP,fhj1,pbTr,5mlx,3Qv1,oroj,kDrV,j5U3,orWN,j5yb,j6h9,c+Zj,c/C1,5mxX,5nqh",
                    "51c9": "mVbX,jS4x,8ppP,ewnN,pcmH,mW19,lnTP,loM9,ikJb,iliN,c/vN,c+Wh,ikJh,67gH,aIxx,c/g3,5m+9,3R7F,aIWr,68c9",
                    "9e7f": "pcdj,mVTN,m9B3,m8th,cdIh,9al9,4BdN,ikkb,iliN,dMkN,dLmh,m8P3,dLI9,m98X,dM21,c+JH,3QNN,67zx,9XpH,9XLF,c/9P,4C2V,3Rh1,3RCV,68c9,8qbP,btUV",
                    9709: "oqV3,os11,ikdX,m8n1,m9y1,ilp1,oruz,gPcF,jS4r,jSnh,hzBr,hzUh,jSCP,jSVF,hA7P,hAqF,c+xb,g24V,ewkz,exg1,ce8j,9XON,9aQj,6UuN,9X3P,9Yl9,688X,67ax,cdRF,ceDF,5n7x,3RdV",
                    5893: "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,jS4r,jSSx,ex3x,ewhx,jS4x,hzBr,hAnx,cdyP,ceQ9,ewDj,aIeN,7EAV,cenX,7FS9,8pIz,8qrx,4BjX,4Cv1,cebr,4BVx",
                    "6bb4": "mVKj,mVc1,6TP1,6Ulp,jSk3,9Xdh,jR+b,9XCh,g2hj,ikVN,nGIN,nG/x,hAnx,gPBF,gPO9,3QTX,6UxV,aIWx,ex9N,ewDp,dLUz,9b41,67Yx,3RJ9",
                    "4e52": "orTz,nGdx,cdOx,cdvH,ceTh,j5fr,j6aV,j5QX,ceo1,3QrP,9Xz9",
                    "67aa": "j4/P,j5v9,pbWz,3QKF,bsJP,j5iF,gOPz,c+T9,g2b3,jSwF,orE1,kDEp,iliN,g2Z9,9b73,aIZF,g2MF,g2kx,5mKx,4BYF,4CoN,7FP1",
                    "88d9": "pbNb,m8FN,jRQP,jSdV,g1Xx,bsGN,g1Xr,3QHx,ewhr,bta1,dLvz,g281,mVHb,mWgN,fh+N,fhm9,j5rX,j6kh,mVTH,g2nF,btjp,6U5N,3R4r,aIxx,aJ3V,3RCV,5mKr,5ngV",
                    6652: "6TOX,nG11,nGjN,9aAN,9ai1,gOzX,gOSN,nGpX,nHf9,nGIH,fhBN,ceeF,aIup,nGVb,ceuh,btIp,btUV,3QX3,ikG9,illV,3RCV,67q3,685V",
                    "4f7f": "ew1P,j5cp,or5F,j5cj,3QEp,lnTP,loM9,hzR3,hAwV,c/yV,dLI9,hzR9,pcsX,ceo1,9b0V,7FjN,5mHp,3QQV,btgb,7FjN,5n4p,3RJ9",
                    "65af": "lnrH,lo7x,pbNb,aI2h,pc73,aIo9,hzvb,hzR9,ewbb,ewx9,aHRH,aIxx,4BgP,9aux,9aDP,6Uih,3Q+b,6UrF,9XRV,mVWV,nHc1,gPiP,gPRh,gPBz,3RwF",
                    5766: "ik7H,ikD1,oq/j,8pCp,6TLP,9Xw1,8p/j,mVKp,mWgN,8qxN,gP6j,gPEN,aJ0H,aIup,4BFP,4CBh",
                    "51f8": "3Qy3,g1O9,g281,nGq1,nGS9,g2A9,g2SV,3RCV,6713,685V",
                    5582: "9ahX,mVc1,mVrF,bt0F,bsN1,orlb,orWN,g2PN,g2eh,orlh,kDcb,kDNN,orDX,g2x1,dLEX,dMu9,dLOj,3R1p,6UB1,dL+P,9bah,6UNx,4Cv1,9bdj,btUV",
                    "778e": "66ZX,mVc1,mVxV,7EZV,7EE1,ikdX,ikzV,c+qX,c+MV,pcpP,mW4h,ikJb,m8Sh,m9y1,ilp1,j5Er,j67N,g2hj,g2SV,c+T3,c/F9,kDy3,9XY9,3R1j,9XFp,9YeV,3RCV,5mHj,5ngV",
                    "6cc4": "oqV3,lnNF,ikaP,fh3p,4BjX,cdOx,mVE3,4BM9,4Cv1,orxH,9aZN,9bjF,orTF,hzEz,hAGh",
                    "538b": "5m2H,9al9,cdIh,nG7h,nHc1,fhcH,fh+N,5mij,5nn9,kDlz,5mNF,cexj,9bmN",
                    "591c": "pcab,mVTN,m8jP,m9B9,bsJP,jSh1,g1+z,3QKF,cd+X,jSCV,hA1z,hAtN,cexp,6UrF,3QU1,ewPP,cexp,cebr,7Ft9,67Yx,4Cy9",
                    "5eb8": "pcdj,mVWV,mWmX,mVlp,dLpp,7EH9,4BgV,jSaH,jSYN,fh+N,fhcN,hzyj,hAD9,3QNH,c+JN,c/vN,5ndN,3Rqp,aIeH,aJ0N,7EWH,7FIN,mVTH,4B/N",
                    6028: "hzoX,m8zx,pbZN,m8zr,m8Yx,hzR9,ewnN,bsN1,iktz,gOZ1,gPvj,iliN,mWgN,mVTN,ewMN,c/9V,c/yV,fi89,4Bn3,9XmF,9XvX,5my1,4BM9,4Cch,6UNx,cebr,9b0V,aIZz,68c9",
                    "5c55": "5m5P,9Xdh,cdLp,oq/p,orZV,jS/V,jS1p,g21H,g2PN,cdLj,ceQ9,jSnb,ce5h,jSMb,ceuh,cd+X,3QU1,7FjN,ceez,7Fwh,5ndN,4Cy9,7Fwb,aIZF",
                    "6b62": "5m5P,5nn9,5mlr,j5fx,oruz,5mNF,gPcz,gPEN",
                    5760: "aI2b,nG7h,nGwh,jS7F,hzR9,g2eh,ewkF,btd3,ewJF,gPiV,jSJ9,orH9,jSJ3,fhUx,dMkN,ceQ9,9arj,9bjF,4BgP,4Cy9,cebr,4BVx",
                    "25cb": "9X6X,ike1,m8FN,m9fh,ilp1,9Yi1,67Sh,67gN,9X71",
                    6886: "3QEj,pbQp,jRQP,jSh1,cdvH,j5cp,hzyj,ewu1,4BFP,7F7h,btmx,pcgx,ln+3,lok1,gPlX,gP09,bt6P,btC9,3Rqj,nGYp,nHf9,gPBF,exg1,bt/9,8qE1,7FFF",
                    "522b": "ikkb,nG7h,nGCx,ikPx,ikkh,dLcP,dLUF,67zx,3QU1,3QrP,674h,8pFx,cdUN,gOVV,m9fb,aIQh,pcRX,6891,3Rtx",
                    "62c6": "pbQj,5mip,3QrV,kCCH,kD99,bsGH,g281,pcOP,nGS9,nGzp,c+Zp,9aNh,3QNN,hzXj,hAGh,hAnr,3Rtx,c/cX,7FS9",
                    "4ec7": "fgPH,pc0V,kCVr,3QHx,hzHH,ilfF,5n4p,4Cix,4Cv1,6V4h,pcmH,g2nF,9XFp,3QNN",
                    "7b54": "j4/P,pbWF,m8wj,m8Yx,m8Cz,j5s1,kDlz,pcw9,m95P,m9B9,m9c3,j64F,c+nP,ewhx,jStx,g2A9,c/F9,dLvz,dMex,3QHr,9Xjx,9Y5x,3Rtx,5mlr,5n7x",
                    "53fc": "8pw3,mVf9,mVB1,bta1,bsQ9,m8Sb,m9y1,6891,4Cix,9Xz3,g2Jx",
                    "5a25": "oq/j,bsN1,6Uc1,ik7H,ikzV,cdUN,7ENp,4BgV,lnWX,mV+1,gP03,gPRh,9XvX,c/d1,m8/z,5mNF,3QX9,m9oz,jT31,exfX,8qrx,5mTV,orKb,9Y2p,3RG1,6V4h",
                    "4f5b": "fgPH,pbZN,jS1j,3QEp,lnTP,loJ1,gPL1,gOZ1,cd/1,ceQ9,7FS9,682N,pcmH,ceeF,7Fap,3QQV,pcCj,3Rqp",
                    "845b": "mV8P,mWq9,pc3X,kD61,pcsX,kDv1,jS4r,jSVF,ex6F,ewhx,jS4x,hzBr,hAqF,ewqP,9ai1,cdRz,ceJV,5ngV,3Rnh,btpz,6U8V,9XIr,6UHh,9Xjr,5mlx,5m+9",
                    6842: "j4YH,j5v9,pbQj,3QEp,bsGH,j5cp,hzyj,dLF1,kDcb,kDU1,g2b3,g2Z9,pcw3,g2A9,btgb,btY1,5muP,5nqh,ewW3,5m+9",
                    "543c": "9ahX,m8n1,m8FN,aIeN,aHY1,mVxP,mW19,j5Ex,5mKx,3QU1,bt6P,g2x1,orNj,5n4p,4Cix,4CrV,7FS9",
                    "706b": "c+xb,j5lN,oruz,c/0x,9aK9,6U5N,3Qv1,dLUz,9XV1,6UNx,4Cv1,dM8b,j6aV",
                    "62e3": "kCCH,kD61,pbTr,5mlx,3Qv1,cdvH,g281,ln+3,loM9,pcw3,c+Wh,c/F9,hzR3,hAhh,5n1h,3RaN,5muP,aIAF,aIZz,68fh",
                    "91d1": "g1EH,iktF,ln+9,orrx,jSJ9,g2Z9,hzEz,hAkp,c+xb,c/vN,9Xmz,6Uf9,6UxP,aIWx,4BjX,4Cv1,hz+r,4BVx",
                    "652b": "jRQP,jSdV,pbQj,5mip,3QrV,cdyP,gOVV,ori3,orxN,ikVN,ikG9,ori9,mVE3,mVTN,kDoH,kD99,orKb,os11,ilp1,il6h,orKh,mW4b,mWn1,kDTX,kDBh,ikPr,dLyN,g2eb,9aNh,ikYP,gPsh,g2eb,g2Z9,exfX,ewAh,ce5b,ceN1,aJa3,aIrh,g2A3,aIN9,9aAH,9bmN,67Sh,3QQV,9aNb,67FN,3RJ9",
                    "7b50": "ikaP,or2x,m8wj,m8Yx,m8zr,j5s1,j5Er,orH9,m95P,m9B9,m9c3,j64F,hAwP,hzvh,4Bqh,4Cv1,ewkz,ex6F,bt6P,btLx,7ETz,7FIN,ewJz,7FgF",
                    "9ca4": "j4/P,pbTx,m8tb,m8P9,iktF,ikh3,ikG9,9Xz9,9Xa9,ikh9,ew83,ewx9,iktz,9XmF,66WP,6Uih,nGFz,nH8V,dMnV,dLUF,nGFF,j5Hz,j6aV,nGVb,5n1h,9XIr,9Yl9,5mHj,5nqh",
                    7409: "m8gH,m8M1,g1HP,g24V,6TIH,9Xw1,m8wj,8pCp,pcjz,m9c9,ln+3,loJ1,lojX,ewx9,fhXF,il6b,dMr1,3QNH,67th,7Fap,c+Zp,c/9P,4C2V,c/pr,5n7x,4ClF,4Cv1,68c9",
                    5417: "9Xa3,nG49,nGmV,cdXV,cdF9,orlb,orWN,ex3x,loaz,ewGx,exj9,685V,3Rnh,9XsP,9Y5x",
                    "706d": "mVbX,mWn1,c+xb,j5iF,mVNr,dLRx,aIrh,6U2F,4Bk1,dLRr,9XRV,7Fzp,4Cy9,dM53,ilfF",
                    "917f": "mV5H,mVKp,mVor,g1Xx,dLpp,cdF9,mVuH,dLyN,c+MV,c+Wh,3QuX,j531,j5yh,67th,66+1,9ahX,9aNh,pcpP,m9ip,dLUz,dMnV,m9uV,m8/F,3R7F,67Sh,ikSz,illV,dM53,8qrx,4Cy9,9bgr,btY1",
                    "787c": "mV8P,mVB1,mVor,dL9N,6TS3,gOD9,gOSN,9aAN,9al9,3QKz,7F49,9XCh,nGwh,nGLV,6UxV,4BSp,ikJb,ikYV,c/9P,c+Wh,3RdP,7Fwh,aITp,nGYp,nHc1,5nk1,3Rtx,c/BX,c/mp,il9j,ilp1",
                    "8d77": "or8H,g21N,kCIX,kDfp,g1HP,g2kx,fhfP,67jV,bt6P,btmx,c+Aj,9aoh,3QrV,9aob,4BPh,4Cy9,m8/z,m9uV,fi1V,gPHP,gPfN,9aZN,8qf1,8qAV,btY1",
                    "4e18": "nH5H,m8zx,67ax,fh6r,fi1V,fhHX,67M1,66TH,68fh",
                    "745e": "mV8P,mVB1,g1KX,g281,7EAP,9aH1,mVlj,8pCp,nGwb,j5yh,j6aV,nH8V,pcsX,j5R1,gOYX,gPO9,gPp3,c/6N,3QX3,c+T9,c/C1,5nk1,3Rtx,c/6H,67FN,c/mj,67Vp",
                    "7ec5": "or8H,hzlV,hzHN,kD93,cdC1,c+T9,6TOX,8pV9,9aQj,kDfp,kDU1,9bt1,g2hj,g2W1,btjj,btY1,pczb,3Rnh",
                    "7f72": "oqYb,orWN,kDNN,kCPh,oqYh,ori3,kD99,kDuX,orE1,hzyj,hAnx,ew1P,exj9,kDir,ewGx,aHXX,bt0F,c/0x,fhOh,ilp1,3QKz,bt0F,btOF,3RwF,9axz,9bjF,67dz,67/F",
                    "635f": "jRNH,jSh1,cdvH,fhj1,pbQj,5mip,3Qv1,nGwb,nH5N,jSYN,jSnh,nGwh,8pYb,gP3h,gPEN,8qxN,ewSX,aIK1,8qbV,67zx,3QQV,8qlb,4Cy9",
                    "751c": "m8jP,nGwh,mVrz,c+GF,hziH,hzXp,3Qy3,c+u9,c+Wh,67th,6719,jSqj,jT69,orxH,3RaN,orWH,3RzN,dLXH,dMkN,67FH,682N",
                    "5b9b": "pcdj,m95V,ikh3,m8q9,m9y1,ilp1,aHXX,j5oV,gOYX,gP9x,ce5h,7EWN,3Qv1,cdRz,9Xw1,9bab,aIZF,gPBF,gPfN,5mQN,4C2V,4CrV,7FS9",
                    "52ff": "fgVX,kCYF,nGmV,kCYz,kDQV,6UTN,5naF,3Rh1,kDfj,ewx9,7EH9,kDy3,cekV,7Fap,4BFV",
                    "6a61": "jRNH,jSh1,pbTr,3QHx,bsJP,ikqx,hzBr,ewu1,kDcb,pcpV,mVQz,mWdF,jSMh,jSqj,jS/V,fi1V,fhsp,jSqp,jSJ3,fhL9,dLXN,btd9,dLXH,aIN9,7Fwh,5n1h,3RaN,8pRX,cekV,5mxX,9XY9,aIQb,dMnV,btLx,8qxN,5nn9",
                    "53d9": "hziH,pbZN,nGjH,jStx,hzvb,hzUh,dLcP,dLRx,hzHH,5mrN,3QEp,66TH,bsWp,btd3,8q5F,m8Yr,m9uV,ex6F,8qi9,3Q+h,m92H,dM21,9Y2p,685V,4CBh",
                    "4f6f": "g1EH,kCSp,pbZN,kCSj,3QEp,pcdj,logV,kDBb,pcLN,kD5X,kDX9,fhpb,fi1V,aIhP,aJdh,kDy3,3Rk9",
                    8335: "m8jP,m9B9,pc3X,ikD1,pcw3,il39,3Qy3,ikh9,iliN,3RzN,ewkz,ex0p,gP9r,c/0x,aIrh,9aH1,7ETF,cebr,8qop,5mc3,5ndN",
                    "7fbd": "nG43,nGzp,67wp,4Bwx,j59b,fhfV,9X6X,ewDp,nGIH,nH8V,685V,3Rk9,j5NP,g2Gp,9XLz,dMnV",
                    "8d23": "mVbX,mWn1,jS1j,jSVF,hzlP,hAD9,pcgr,hz+x,8pFr,ewhx,ex3x,8qrx,cebr,7F7h,5mrN,3Qv1,8qbP,4CrV",
                    9707: "oqV3,orZV,orrr,g2kx,ikdX,m8n1,m9y1,ilp1,j5cj,j5v9,gOJj,gP09,j5NP,j64F,gPiP,gPBF,4BgP,7EKh,9Xgp,fh3p,fi1V,cdUH,ceDF,9Xgj,9YeV,9XsP,3QQV,67zx,9XLz,5n1h,3RCV,67P3,8quF",
                    9010: "nG0X,kCVx,g1EH,g1Up,6TYp,5m5V,6TYj,4BPh,4Cy9,nGjH,nHc1,nGOX,hzKV,jStr,hA7V,dM59,9b79,6UrF,c+MP,hA7V,9aGX,ewT1,g2A3,jS/V,gPvj,c/sF,9bt1",
                    "5c0a": "pbWz,m8P9,m95P,pcCp,m8mX,m9y1,m8Sb,ikJh,g21N,m92H,hA4N,gPiV,gPvp,ewej,ex6F,j5cj,j64F,ceDF,cdLp,j5cp,9X3P,9Yl9,8pLH,67th,cexj,5n4p,3RaN",
                    "7f62": "j59b,nG7h,nH8V,j6aV,j59h,j5v3,nGt9,nGLV,j5NV,j5Er,cebx,fh0b,fh+N,cdyP,ceQ9,cebr,5mfh,6UQF,9XUX,4Cv1",
                    "95ed": "3QBb,kCPh,pbQj,lnTV,mVHb,mWjV,5ngV,3Rtx,gOPz,gPBF,kDrP,7FmV,67zx,8pIz,gPcF",
                    8231: "3QrP,7EH9,9Xdh,mVih,mVE9,67q9,3QNN,pbWz,mVox,jS7z,hzKV,fgSP,fhvx,c+Dr,9aAN,g27X,j5Ex,lodN,orE1,lotp,j67N,gPRh,9XY3,aIWx,g2Jx,g2nF,67CF,5mQN,4C2V,4CoN,7FS9",
                    "75f4": "jRQP,gOGh,bsGH,dLpp,3QrP,6TVh,9arp,m8wp,m9B9,pcgr,mVWV,ewnH,jSnh,hzNX,hAb1,cdUH,ceo1,hz+r,9XFp,7F49,3QKF,9XIr,67M1,4Ccb,hAhh,hAwV,4CrV,685P,67Sh",
                    "51d1": "mVbX,jS7F,7EAP,ewhx,m8IP,m9y1,j67H,j5s1,g1+z,g2Z9,pcpP,ikVN,ewDp,aIbF,g2A3,c/sF,bt/9,c+Zj,c/px,9XsP,9YeV,c/9P,7FjN,5mHp,3QNN,8qbP,3RCV",
                    "5ae1": "pbTr,cdF9,6Uc1,jRQP,jSdV,dLyN,9Xjx,4BgV,pcpP,mW4h,m8LX,m9B9,kDir,ikYV,lozz,hAhh,3Q+b,hzUh,hAwV,5ngV,3Rtx,ewGr,ex6F,hAb1,btz1,btpz,btLx,7FCx,7FgF,btpF",
                    "58a9": "ik7H,ikwN,nGaj,9arp,7ExH,aIhV,orlb,loaF,kC/H,kDy9,ikCX,ikVN,ewMN,ewu1,ikD1,cdUH,cekV,9XFp,5mHp,3QU1,6U2z,9XV1,orQr,g2tV,jSPj,jT9h,jS/P,c/vN,aIZF,7Fzp,3RaN,fhOb,9Y5x,685V,4CBh",
                    "6c1b": "ikaP,m8zx,pbZN,m8zr,m9y1,jSYH,jS4x,hzoX,hAqF,9bjF,3RG1,68fh,9X3P,fhcN,fhsj,cehN,9Y2p,aI2b,aIAF,67CF,4BM9,3QuX,67ax,aIl1",
                    "521a": "4Bn3,nG49,nGFF,5mNF,3QX9,j5fr,9XFp,jSqj,9arp,m9fb,aIQh,orZP,685V,3Rtx",
                    "62d0": "jRQP,jSk9,bsJP,g2b9,pbTr,5mlx,3Qv1,nGCr,nH8V,hAwV,hz+x,nGCx,c+Wb,c/C1,5ngV,3Rqp,g2wX,8q8N,3QU1",
                    "8d6b": "lnxX,lo4p,pbZH,gOSN,gOwP,gP6p,9X0H,ewbh,gOMr,9Xjx,3QrV,gOYX,67n1,4BzF,ewx3,btmx,loaz,loJ1,pcCj,gPvp,gPcz,gPO9,9aTr,dLXN,gPp3,btC9,7FmV,3R1p,gPBz,5naF,3Rk9,dMkH,9bzh",
                    "5fbd": "jRQP,or2x,cdvH,j5fx,g1Rb,3QBh,nGmP,jSdV,jSCV,nGLV,oroj,jSqp,hzHH,hAb1,hzXj,dLyN,dLRx,fhBH,aIeN,aIGV,c/3z,9XV1,4Bzz,8pS1,9aQj,4BSp,9aWz,6UxV,fhHX,pcIF,j5+j,j6h9,j6aP,dMkN,8qop,4B/N,ewZb,aITp,6UTN,4Cy9",
                    "988a": "lnuP,lo4p,dLcP,dLOp,j52X,g1Up,fhiX,j5Bp,pbZH,bt0F,8pCp,4BgV,bt0z,6Ulp,nGCr,nHf9,nGYj,j5U9,9aWz,j5HF,j6aV,9bpV,g2Db,aIQh,7Fq1,5mNF,3Q+h,7FCr,4Cy9",
                    "79f8": "mV8P,orf1,ik7H,ikG9,nGdr,3QHx,9X3P,ikqx,g1Xr,ce29,ln+3,loM9,gP3b,gPL1,pcw3,gPp9,3R1j,ce8p,ceJV,3RCV,5mHj,5ngV",
                    "83ca": "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,ew4X,jSaN,iktz,illV,5ngV,3Rnh,g21H,dLI9,dLXH,gPsh,cdIb,ceDF,hz+r,4BVx,5mc3,8pOV,cebx,aIxr,7Fzp",
                    "7a7a": "pcab,m92N,hzs3,lnB9,loFV,hAwV,c+u3,fh9F,ikG9,ikYP,g2Jx,c/C1,bsWj,btOF,btmr,4BVx,4BgP,4Cy9",
                    "52d2": "m8mX,m92N,pbQj,iknp,ikJh,pcah,g1O3,g2kx,cebx,cdF9,g1O9,9aeP,9aWF,ikzP,3QQV,j5Hz,j6e1,685V,4Cfp,3Q+b,6UuN,cer9,pczh",
                    7433: "m8gH,m8IV,fgSP,fhfV,6TIH,8pOV,m8wj,7ENp,j5lH,j5NV,pcdj,3R1p,9XpH,hzXp,g2hj,c/9V,j5QX,j6h9,pcCj,3Rqp,8q5z,j5+p,dMkN,8qKh",
                    "62a1": "jRQP,jSnh,pbTr,5mlx,3Qv1,bsJP,ewx9,gP03,jSwF,pcw9,nGOX,j64F,gPO9,gPcz,5mNF,4B/N,4CoN,5ngV,6U+1,aIDH,ex9N",
                    "8c1c": "oqRX,lnKx,hziH,hzyp,4Bqh,9aAN,nGmP,jSqp,gOSH,gP3h,6Uih,4BFV,6Uib,4B/N,4Cy9,mVQz,jSG1,j61r,mWn1,orKb,6UHh,hz+r,hAA1,9aTr,hAhh,9Yi1",
                    "607c": "ev+H,jRX9,pbQj,3QEp,kC/H,g281,pcmH,m9fh,lnWX,loM9,ikPr,c/g9,8quF,jSSr,ceo1,7Fap,hzUb,4BPh,5ngV,hAwP,3RCV",
                    "802a": "m8mX,m8P9,ikCX,ike1,ew1P,ewx9,pbTr,3QHx,6TIH,ewhx,c+Dr,9Xz9,pcpP,mW4h,m9B3,m8Sh,kDoH,il01,il9j,kDNN,fhsj,hzXp,hAA1,fi51,gPlX,ex0p,c+Wb,c/Ih,c/cX,7FjN,3QU1,9XRP,9Yi1,5nk1,3Rqp",
                    "666e": "pbWz,mVE9,m95P,pczh,m8mX,m9y1,jS1j,hzHN,m8P3,fhm9,m95P,fhEV,hAkj,kDNN,fgSP,fi89,3QKz,cdRF,ceAx,3Rtx,8pIz,8qrx,5moz,5n7x",
                    "94a6": "hziH,pbWF,kCPb,kDch,gOD3,gP09,cdyP,ce29,gOMr,3QHx,9aK9,fhpb,jSzN,orAV,jSzH,jT31,fh+N,gPp3,btz1,7FjN,5mHp,3QQV,cer3,8qrx,682N,4Cy9",
                    "65e5": "5mlr,mVox,mWdF,5naF,fh6r,fhXF,7FFz,7EQx",
                    "70e7": "ew1P,jRX9,or2r,cdOx,9arp,4BgV,g1Xr,jSh1,bsZr,7F49,kDcb,m9y1,pcmH,kDrV,gPp9,c/yV,g2Z9,dLLb,gPsh,jS/V,bt9X,bt/9,3QNH,4BM9,67zx,7FgF,btsN,btFb,4Cch,3Rqp,3RG1,68c9",
                    6536: "mVf3,9Xa9,cdXV,pc0P,3QQV,fhsj,jSzN,pct1,jSzH,jT69,jSYH,dMex,9X/h,67FN,3QX9,g2nz,cekV,8qlh,67/F,3RJ9",
                    "82cf": "lnuP,loM9,pc0P,ikzV,pcw3,il39,fgZ3,fhRp,67Sh,3R7F,j5Er,ce5h,7EZV,3Qv1,8psX,c+GF,ceDz,8qKh",
                    9676: "3Qy3,nG49,nGq1,gOJp,dLBV,bta1,9XsV,8pCp,ikCX,oruF,lo4j,loJ1,6891,5ngV,4CoN,3Rqp,fhpb,j5HF,hz+r,hAnx,dLI3,dMhF,hA7P,7FmV,btgb,7F7h,7FCx,btLx",
                    "9a7c": "nFZP,nGq1,dLBV,lnEb,dLmh,dLLh,5mEh,3QKF,7EAP,9XsV,pcw3,m9ip,hz+r,m8Yx,m9y1,hAA1,btvP,fi1V,hA7P,5mTV,4C61,4Cv1,6V19",
                    "63e1": "jRQP,jSdV,bsJP,fhfV,pbQj,5mip,3Qv1,4BCH,8pV9,btgh,nGwh,nH8V,jS/V,jSnh,gP9r,gPL1,gPp3,ceeF,c/yV,fhXz,bt/9,9aQj,9bpV,4BPb,4Cy9,cer3,4C99",
                    9669: "3Qy3,nG49,nGmV,gOJp,dLBV,bta1,9aux,g24P,j5Ex,nGP1,jSSx,gPO9,g2kr,g2PN,ce5b,8q5F,c/9P,9bah,5n1b,ceJV,5mB3,5nn9",
                    "59d3": "hziH,hzO1,aIeN,6TYp,3QrV,or2r,cdC1,67q9,ewx3,j5Ex,mVQF,j5Er,j6e1,cebr,ceN1,4BM3,4CBh,pczb,4Cch",
                    "989c": "pbWz,m8M1,m8mX,m8Vp,kCSj,hzEF,hzKP,kDch,hz+r,hzs9,9Xa9,4BdN,c+Dr,g2b9,9axz,c+Wh,4Btj,6Uc1,9aQp,mVQz,mWn1,mW4b,j5R1,9aZH,j5KN,j6aV,9bpV,g2Db,9X/h,6UB1,67FN,3Q+h,7FCr,3RJ9",
                    "827a": "m8jP,m9B9,pc3X,ikD1,pcw3,il39,g1Rb,g2Gp,c/0x,aIhV,7ENp,674h,4Btp,4ClF,7FP1",
                    "8bf1": "oqV3,lnNF,hziH,hzyp,4Btp,9aH1,nGwb,orWN,jSgX,jT31,nGOX,dM21,ewqP,gP9x,jSG1,gPyx,fi89,dLXH,9aWF,67wp,4BJ1,dLLb,dMex,aITp,aJ3V,682N,4Cch",
                    "54c9": "lnB3,lo7x,or8H,gOSN,gOwP,gPO9,jS/P,mW7p,3QBb,c+xh,c+Zp,67wp,674h,3R7z,7Fwh,dMnV,orAP,dM21,6UNx,3RCV,6V19",
                    7167: "nG7b,nGq1,bta1,bsTh,nG7h,hzvb,hzO1,nGwb,nH8V,j67N,hAkp,gP3b,jSzN,nGP1,g2nz,g2PN,btRN,btpF,g2nF,4BgP,9aux,8pRX,4BPh,9aZH,4C99,9Y5r,4Cv1",
                    "7ec8": "or5z,gOwV,gOSN,kD93,aHY1,bta1,4BgP,6Uf9,gP3b,orE1,logP,loCN,gPvp,dL+V,ce8p,ikYP,ex0p,ceQ9,btyX,8qxN,6UuH,3RCV",
                    "6e0d": "oqV3,lnQN,ikaP,fh6x,4BjX,cdOx,mVxP,mWn1,pcpP,gPiV,jSgX,jSYN,gOSH,gPO9,7F43,dLI9,dMkN,7FIN,cekP,7FjN,5mEh,3QNN,7Ft3,3RG1",
                    "7a23": "5m5P,6Ulp,9aNb,ikJh,ike1,9ai1,9aNh,dLLb,dLg1,9axz,iktF,m8P9,m8th,jRQP,pbTx,mVNr,orZV,hAD3,hzXp,nGVb,3Rnh,8p/j,gPsh,g2Db,aJa9",
                    6602: "9XFj,6719,ew89,fhsp,3RaH,ewMN,excV,7FLV,67Vp,hzyj,oq/p,orTF,hAqF,hzyp,kCSj,kDKF",
                    7119: "ev+H,jRX9,pbTr,cdOx,7EKh,4BgV,g1Xr,jSk9,cdOr,8pV9,pcpP,m9fh,lo1b,loM9,jStr,g2x1,jSYH,fhOh,fibb,fhj1,3R4r,btmx,btUV,3RCV,5mKr,5ngV",
                    "57e0": "ikaP,ikD1,oq/j,9arp,7ExH,aIl1,pcw3,mVTN,aIrb,mVHh,mWgN,iliN,ikJh,g2eb,g2SV,ceJV,ce5h,8pOP,8qH9,btC3,3Rk9",
                    "6f88": "nG43,lnNF,hzlP,fh3p,4BjX,cdRF,pcab,mVQF,lnQH,lon9,lo7r,gOVV,hA4N,j5Hz,g2x1,3QQP,ewqV,ewPV,5mTV,3R4x,bt6P,btvV,8qbP,8pOV,hAe3,orTF,jSMb,jT9h,jT2X,c/vN,9Y8F,3Rh1,g2Db,btLx,7FIN,3RJ9",
                    6625: "mVbX,mWn1,j67H,j59h,g1HP,g2Z9,9X0H,cdOx,g2b9,jSqp,pcjF,fhEP,btOF,9bw9,3QKz,cdRF,ceuh,3Rnh,9axz,9bah,5n1b,5moF",
                    "5c9b": "pcdj,mVB1,g2wX,hAnx,mWax,mVrF,dLvF,dMr1,5ngV,3Rnh,kD93,hA4N,bsTb,6TVh,7Ft9,btC3,67P9,c+T3,6Uf9",
                    9017: "nG0X,jS7F,g1EH,g1Up,7ENp,5m5V,7ENj,4BPh,4CBh,mVxP,mWn1,jSgX,jSYN,fh+N,fhj1,jSh1,ewAb,aIAF,9b0P,dMex,9aAH,9bw9",
                    "6cdb": "nG43,lnNF,ikaP,fh6x,4BgP,cdOx,m8LX,os11,kDoH,hAhh,g24P,g2SV,aIK1,7F49,5mlx,7F43,4C61,4CBh",
                    "8d1f": "ikh3,pcah,mVAX,mW4h,ikPx,8pFr,ikqx,ilfF,8quF,fhyz,aIxx,7F7h,67jV,3Qy9,8qbP,3RG1",
                    "8d2d": "9Xa3,mVf9,mVHh,aIrh,j5lH,9XmF,6TYp,4BgV,8pRX,5mKx,hz+r,pcw9,logP,loJ1,6891,3Rtx,hAe3,9XLF,btLx,ewZb,9bjF",
                    "6c49": "5m5P,c+JN,g1Xr,ikaV,oqRX,lnQN,mVAX,mWn1,g2MF,ceuh,7FgF,3QQV,m8Vj,g2nF,c/9V,8qop,682N,4Cy9",
                    "7f13": "or5z,hzlV,ikwN,kD61,cdC1,c+MV,6TIH,9aH1,mVHb,nH8V,kDfj,ikSF,logP,j5Xh,loFP,hAhh,hzR3,hAA1,dLEX,dMu9,hA7P,ceeF,9aQp,4BzF,aIAz,btRN,8qop,67IV,3Q+h,9XOH,6UHh,3RJ9",
                    "5df1": "nG7b,nG/x,g2Jx,g1Rh,6TVh,5mlx,5naF,9bt1",
                    "80f6": "4BdH,aH/9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,c+u3,c+MV,pcpP,lotp,kDcb,kDX9,ewAb,ikVN,ilcr,exj9,dLUz,7Ft9,67Vp,3RJ9,dMhz,8qlh,67IV,3QX9",
                    "7ade": "pcab,m92N,m8mX,m9y1,kC/H,ikG9,hA4H,kDBh,hzlP,hAD9,fh6r,fhUx,9Y5x,9Xjx,fh6x,9XCb,67n1,3Qv1,9XRP,4C2V,3Rh1,3RCV,6V19",
                    "4ea2": "orlb,lodN,kCFP,kDX9,4BjX,6U2F,9XsV,g24V,g2x1,67M1,4C99,4CrV,8qH9",
                    "7bee": "j52X,pbWF,m8wj,m8Yx,m8Cz,j5s1,jStr,pct1,m92H,m9B9,m9fb,j64F,hzBr,cdOx,ikG3,btd9,dLRr,il01,g2qH,g2W1,ewZb,ceDF,4Btj,9Xgp,9Y8F,4ClF,4BM3,9Xz9,9XRP,4C2V,4BgP,4Cy9",
                    6881: "oqV3,mVrF,kCIX,j5fx,dLcP,gOPF,nGpX,nH2F,gPyx,fhI1,nGLP,ikSF,ewx9,ikzP,lo1h,jSYH,hAGh,bsJP,bt/9,ewGr,3R4x,5m8X,7EWN,btmx,7Ft9,682N,5nn9",
                    "6f5e": "oqOP,lnKx,ik7H,fh3p,4BgP,cdLp,hzHH,mVuN,mVNx,hz+x,hzHN,hzR3,67q9,ce23,ceeF,dLyH,5mrN,4Bwr,6UrF,j5Hz,orH9,m98X,m9uV,hAnx,c/3F,jSFX,dMu9,3RgX,ceo1,ceJV,3RCV,5mWX,5ngV",
                    7164: "ew1P,jRX9,pbTr,cdOx,8pzh,4BgV,g1Xr,jSh1,cdOr,9aK9,m8LX,m9y1,pcgr,fhvx,fhXF,pcIF,j5Er,j64F,ce23,ceQ9,fhL3,3Rk9,5mxX,8q5F,cer9,9bgx,68c9",
                    "66ae": "mV8P,mWq9,pc3X,kD61,pcsX,kDv1,kCVr,kDHx,fhUx,fh6x,kCVx,ikqr,ilcx,dLcP,dMu9,9aeP,bt0F,fhph,c/g3,9bw9,3QKz,aIbF,aITp,3Rqp,8pIz,8qop,5moz,5n4p",
                    "85d5": "nFZP,nHf9,pc3X,lnX1,pcsX,lok1,ikdX,ikJh,g1KX,g2b9,cdyP,ce5h,kCYz,3QKF,66WP,cdRF,bt0z,8pV9,jStr,jS/V,dMnV,dLRx,jStx,gP9r,gPHV,jSMb,7Fwh,6Urz,7FFF,9bgr,6UTN,3R1j,aIup,aJ71,5nk1,3RwF",
                    "576a": "ik7H,ikD1,oq/j,9arp,7ExH,aIl1,nGt3,nHc1,j5v3,ewJF,ex0j,j6aV,btd3,bu2h,nGS3,3Rk9",
                    "545b": "6TOX,lny1,lnNF,9XmF,9Xa9,fhfP,ikMp,orAV,nGLP,j5+p,fi89,9b3X,aIWx,g2Jx,g2hp,5mHp,4BVx,4ClF,6UWV",
                    "7fa4": "nG0X,nGwh,g2eh,g1HV,jRNH,jStx,nGdr,gOJp,c+u9,9X0N,4Bqb,cdIh,ce5h,67th,674h,orxH,lon9,jSPj,os11,jSwz,jT31,ewMH,excV,9XIr,9Yl9,jSPj,3Rqp",
                    "73ca": "mV5H,mVxV,mVlj,9arp,gOwP,gOSN,7ExH,aIhV,4Bzz,8pS1,ce29,nGt9,nGIN,6UuN,5mHp,4B/H,8qi9,nGS9,nH5N,5ndN,3Rqp,fhcH,fibh",
                    "5c4e": "5m5P,aI2h,hzyp,nGap,nH5N,jSYN,jS1p,hzHH,fhph,ewZb,hAqF,c+Dr,c/C1,ikVH,3RaN,67ar,9aK9,c/6N,9bdp,68c9",
                    6495: "jRNH,jS7F,pbNb,5mfh,3QrV,cdvH,fhcN,kC/H,kDv1,oreX,9Xw1,oruz,9XLF,hzNX,hA1F,dLUz,dLF1,9XpH,9XV1,4Bzz,8pV9,8q2r,6UxV,3RaH,9bah,mW4h,nHc1,gPsb,gPO9,gPEH,3RzN",
                    "6bef": "lnuP,nGt9,gOzX,gP09,bsJP,ce29,m8zr,5mlx,4BzF,4CrV,68c9,jSqj,m8/F,orH3,jSG1,gPcF,fhph,jSJ3,g2SV,jSSr,m9uV,aIrb,dLUF,g2A3,btz1,9aZN,6Uih,btLr,dMkN,btC3,9Y5x,7FLV",
                    "79c3": "mVor,orTF,jRTX,jT69,mVNr,dLRx,dLfX,fh9F,jStx,gPm1,fhRp,dMr1,3QuX,5mlx,7EZV,9aH1,c+Q1,c/g9,5m+9,4Cch,4CrV,6V19",
                    "9b4f": "mVbX,nGt9,mVor,ewhx,jRQP,jSnh,ew1P,jS4x,fhph,bsJP,btgh,dLvz,9aoh,67q9,bt9X,7EWN,67ax,4Bk1,pcw3,m92N,btmr,m8Yx,m9uV,dMnV,dLRx,ikPr,illV,m9fb,dM59,9b0V,67zx,3QU1,ceub,5n1h,4Cfp,4Cv1,68c9,ceGH,8qop,9bt1,aJ3P,7FS9",
                    "867e": "aHXX,jRU1,jSnh,c+Wh,c+r1,pbWz,7ETF,66WP,8p/p,aIo3,6Uox,m8Sb,m9B9,m9c3,3Rk9,gPvj,aJ71",
                    "6cfb": "oqV3,lnNF,ikdX,fh6x,4BjX,cdOx,jSgX,nGq1,nGq1,nHc1,kDU1,kDir,dLRx,dMnV,5ndN,3Rnh,hz+r,hAwV,9aDP,9bdp",
                    "62bc": "jRNH,jSh1,pbTr,5mlx,3Qy9,cdyP,fhj1,9XFj,mVKp,mWn1,9Yi1,gP6j,gPL1,btjj,btY1,mW4b,3Rnh",
                    "6db2": "nG7b,lnNF,ikaP,fh6x,4BjX,cdOx,pcjz,m9c9,lnWX,loM9,bt3H,j5Bp,ewx3,3QX9,ce8j,gPiV,jSJ9,gPiP,gPHV,9Y2p,6UB1,3R1p,dM8b,ceAx,dLUz,9XV1,6UKp,3RG1",
                    "96cd": "pcdj,mVWV,m8jP,m9B9,kC/H,fgW1,fhcN,hzR3,aHY1,aIl1,c+T3,8pOV,67ax,4Bk1,ewAb,jSCV,gPcz,3R7F,jSMb,ilcx,gPcz,gPL1,dLUz,dMnV,9XLz,9YeV,67Cz,68c9,gPvj,67Vp",
                    9662: "3QuX,nG11,nGq1,hzyp,ewnN,aIhV,8pCp,pcmH,mW19,hzR3,m8P9,m9y1,hAA1,hz+r,hAqF,dLEX,dMr1,3QNH,5mEh,9aWF,dLXN,dM8b,5n1h,4Cfp,4CrV,6V19",
                    8638: "mV8P,mWq9,pc3X,kD61,pcsX,kDv1,j4/P,j5Bp,j5fr,cdLp,aH/9,j5lH,cdUN,btgh,8pYb,8pt1,3QuX,g1L1,g2eh,5mEh,5m91,ewDj,hA4N,jSCV,hA4H,8q8N,loqb,ilcx,hA7P,hAA1,fi1P,fhBN,cehH,ceJV,9bsX,9aZN,il9j,9bdp,3R1j,6UrF,6UB1,3Rk9,6UNr,3RwF,7FLP,4Cy9",
                    "8dbe": "mVbX,mVB1,gOZ1,gOA1,mVc1,gOMr,6T/x,c+Dr,c+T9,dLfX,5m91,5m5P,7F11,j5Er,4BVx,orKb,4Cch,g2Db,g2W1,4BIX,4Cy9",
                    "7f00": "or2r,hzlV,hzEF,jSdP,cdC1,cdUN,6TLP,9aDV,mVxP,mVWV,kDoN,gP6p,ewqV,kD93,g2qN,mW13,mWjV,jSYN,gPyx,fhL9,kDy3,fi51,dLEX,dLXN,aIAF,7Fap,4BCN,btd3,6UuN,dM1X,dMr1,9YbN,67Sh,3RaN,c/g3,9bdp,6UQF,4Cy9",
                    "6d5c": "oqRX,lnNF,ik7H,fh3p,cdRz,3QrV,orZP,nGzp,btjp,bt3H,bt/9,iloX,ikMp,ilcr,btLx,9XOH,6Ulp,3QQV,9X/b,3RJ9",
                    2160: "nGt3,nGLV,nGCr,5mKx,5mB3,5mTV",
                    "699c": "3QEj,pbQp,jRNH,jSh1,9X0H,j5cp,gOJj,dLF1,pcpP,mW4h,m8P3,m9y1,hAhb,lozF,hA7P,kDlF,fhpb,hzUh,hAA1,fi51,g2tP,ewZh,c/BX,c+T9,3QQP,6Uox,9XON,c/6N,9XOH,9YeV,685V,4ClF,3Rnh",
                    "762a": "kCCH,hzs9,bsGH,fh3p,3QrP,6TVh,9Xgp,mVlp,mWq9,pcgr,mVWV,m92H,jSqp,jSh1,c+Q1,c/sF,jSVF,jSqp,hzNX,hAqF,fhXz,fhj1,8pFr,c/6N,aIWx,9bw9,9XCb,4BPh,3R1p,3Rtx,4ClF,6UWV,6Ulj,9Y2p",
                    "67f4": "nG7b,g1Rh,fgVX,hz+x,pc0P,gOVV,lnTP,lo7x,pcpP,gPiV,g2A9,g2SV,ils9,kDrP,nH8V,cdyP,ceQ9,fhvr,3R4x,5m5P,7ETF,cebx,9b41,6UQF,5nn9",
                    "7ef8": "pbZH,ikaV,ikwN,ln+3,cdyV,c+T9,7EAP,9aH1,3QNH,7F7h,c+Zp,nGzp,nHc1,5nk1,3Rtx,j5Hz,j64F,fh+H,fhyF,m9fb,fhOh,cehH,ceAx,8qrx,8q8N,cehN",
                    7629: "kCFP,gOGh,bsGH,fh6x,3QrP,8pCp,bsZx,mVox,mWq9,pcgr,mV+1,j5lH,j6h9,lo4j,gP6p,lowr,gPyx,bt3H,gPiV,ceQ9,ce5b,ceDF,3QX3,9aK9,9bmN,3RzN,4BM3,4CoN",
                    "96d5": "4BdH,9ai1,nG11,nGwh,67th,4BCN,jR+b,jSk9,g1Rb,g2b9,m8Cz,g1+F,dLpj,dLBV,9aDV,9arp,dLpp,gP6j,pcw9,jSzH,3RaN,pcCj,loCN,kDrP,kD+h,g2Z3,g2tV,aIGP,aJa9,67IP,68fh,kDHr,67Yx",
                    6076: "nG0X,nHc1,nGt3,dLI9,kCPb,hzHN,nGLP,dL+V,gPsb,kDNN,dLcP,dMu9,5m5P,aI5p,aIhP,5muV,4BJ1,4C99,5n1h,7Fzp,ce8j,9b0V,aIZz,68fh",
                    5426: "nG0X,nHc1,nGLP,kDix,hzHN,fgSV,kDir,ewGx,jSCP,fi89,4Btj,c+Ap,c/sF,4ClF,67/z,677p",
                    "683c": "jRNH,jSk9,pbTr,3QHx,bsGH,jS4x,hzBr,ewu1,hzR3,pcpV,m8/z,m9uV,gPsh,ewJF,cd/1,jSzH,gPp9,ex6F,c/Ih,3R1j,ce8p,ceGN,3RzN,5mHj,5ndN",
                    "67dc": "jRNH,jSk9,pbTr,3QHx,aHRH,jS4x,gOMr,c+T9,mWq3,mVNx,5mKx,5nqh,hz+r,hAwV,btUV,btmx",
                    "539a": "5m2H,9al9,cdIh,nG7h,nHf9,lnTP,lozF,g2MF,g24V,lnTV,ikzP,ilfF,dLyH,dMhF,aIGV,5mTV,3R1p,9aur,9bw9",
                    "83b7": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,dLcP,ikzV,8ppP,c+JN,ikkb,ewnN,6U8V,5mrN,3Qv1,dLI3,dMu9,ik/X,aIGV,7FgF,3QU1,cenX,8qop,3RJ9,hAkj,fh+N",
                    6361: "jRNH,jSh1,pbQj,677p,3Qv1,cdyP,fhj1,g24P,j5Ex,orE1,j61x,g30h,g2hj,g2PN,ce5b,7FgF,c/9P,8qlh,ceJP,4Cch,4BFP,4Cy9",
                    "4eca": "ew1P,ikwN,orrx,jSJ9,hAqF,fi89,ikJb,ewPV,cdRz,ceDF,7Ft9,3R1p",
                    6289: "jRNH,jSk9,pbTr,5mlx,3Qv1,cdyP,g281,kDcb,kDNN,dMkN,dLEX,dMxh,pcsX,dM21,9aZN,67wp,3QNN,dM1X,7FCx,3RJ9",
                    "72c2": "nFZP,jS4x,fhcN,9XsV,67dF,5mlx,3Qv1,hzlP,orbV,9X0H,g21N,m8P3,m9y1,ewAb,excV,5muP,5nqh,m98X,5mX1",
                    "793c": "pbTr,lnX1,jRQP,jSnh,fhcN,aHRN,fhcH,3QNN,fhcH,ce8p,orDX,5mX1,4C99,4Cv1,6V19",
                    "69b4": "jRQP,jSk9,pbTr,3QHx,aHUP,jS4x,hzBr,dLI9,nGOX,mVHh,fhph,j5NV,kDoH,hAe9,nGVb,nHc1,gPL1,fhXF,fhEP,il9p,nG/x,3R1j,c+Zp,c/C1,3RG1,9aQj,9bt1,5mHj,5nk1,c/jb,5n1h",
                    "57cb": "oq/j,8pCp,6TIH,9aDV,hziH,hzO1,nGt3,nH8V,dMnV,dLI9,nGt9,ikG3,illV,nGOX,4C61,9Xz3,9Yi1,4BCH,4Cy9",
                    "6c11": "7F43,3Qy9,oqV9,orTF,ilfF,ikh9,dLj3,dMnV,ikPr,btpF,8qbV,5n4p,3RzN,6U+1",
                    "9e1f": "mVE3,pcgx,fhHX,gPyx,mWdF,mVrF,c+GF,c/C1,5ngV,3Rnh,jSnb,ikVN,9ahX,9bgx",
                    "7bf7": "jRQP,pbWF,mVlj,mVNx,kDlz,pcw9,mVrz,kD61,mVWP,mWq9,mW4b,kDKF,ikkb,g1+F,dLcP,dLsx,6T/x,4BgV,6T/r,4BPh,4Cy9,g27X,jStx,ikMj,ilfF,dLBV,gP9r,dMu9,ce23,ceGN,9Xz3,9Y8F,7F0X,7FLV,dL+P,5mTV",
                    "5c82": "nG7b,j59h,j64F,nH2F,pcgr,j5Ex,g1Rb,g2PN,9YbN,btRH,bsTh,5mfh,4Btp,4CoN,7FS9",
                    "90b1": "mVKj,kCPh,9aoh,g1Rb,g2kx,g24P,9aDV,8pmH,9XLF,4C2P,nGLV,nHc1,hAnx,dMu9,bu2h,9Yl9,8qrx",
                    9510: "ik7H,or2x,kCM3,kD99,gOzX,gOZ1,cdyP,cd/1,gOJj,4Btp,8pS1,pcdj,kDrV,jSMb,pcLN,jSqj,jS/V,c/yV,c+Zp,jSqp,3QNH,4BPh,67zx,9aZN,c/9V,c/mj,4Cfp,3Rtx,3RG1,68c9",
                    "795e": "pbQj,m8IV,jRTX,jSh1,g1+F,cdyV,g1+z,3QKF,g1+z,c+T9,8p/j,kDfp,kDU1,8qE1,g2hj,g2W1,btjj,btY1,pcw3,3Rk9",
                    8700: "oq/j,orWN,j67N,j5cp,oq/p,ori3,j5v9,j5QX,orE1,c+nP,gOPF,j5s1,gOPz,gPHV,685V,5ndN,3Rnh,8pIz,c+GF,c/jh,9X/h,9XmF,g2hj,6Ulp,5mfb,6UHh,9b3X,67Yx",
                    "7b0b": "j4/P,pbZN,m8wj,m8Yx,m8FH,j5s1,j5Er,pcw9,m95P,m9B9,m9ij,j64F,gOJj,gPyx,7FCx,9Xdb,9Y5x,dLcP,dMu9,gP03,aIo9,7EZV,5mlx,3Qv1",
                    "606c": "ev+H,jRX9,pbTr,3QHx,kC/H,gOZ1,mVKj,os11,ikJb,ilvh,nGS3,c/g9,3R1j,c+Zp,c/yV,3RCV,67wj,685V",
                    "5a49": "ik7H,ikD1,bt3N,8pFx,4BgV,or5z,bsN1,67n1,orAP,m9fh,ikJb,lo1h,loJ1,ilp1,aIkX,ikVN,g2nz,g2x1,btvV,7FgF,3QU1,btmr,9XON,9bgr,aJ3V,g2SV,g2Dh,5n1h,4Cfp,4Cv1,6V4h",
                    "52a1": "iknj,pcah,mVAX,mWax,jSG1,hz+x,fhfV,c+r1,kD5X,hz+x,g2x1,ex6F,dMu9,bsWj,btOF,67/F,3RaN,3Qy3,67jV,8pYh,ewGx",
                    "50cf": "fgSP,or8N,kCVr,3QHx,j5oP,orxN,m8Yr,m9oF,j5U9,j5v3,j6e1,fi51,fhm9,j5v9,j5U3,fhEV,c/0x,bt6V,dLUz,aIN9,7Fwh,67Sh,3RaN,cekP,8pOV,5mxX,aIN9,aIQb,dMnV,btLr,5nqh",
                    "65ed": "ikaP,j5yh,67th,5mHp,4BVx,4CrV,7FVh,3QrP,7EKh,9Xgp,dLsx,or2x,m92H,m9rN,9YbN,9XON,m92N,g2qH,g2PN",
                    "75a1": "jRQP,gOGh,cdvH,fh6x,3QrP,8pCp,9Xjx,m8zx,m9B9,pcdj,mVWV,ikzP,il39,fhm9,fi1V,6UWV,4Cfp,fhyz,btmx,7F11,fhOb,9XY9,5mHp",
                    "836b": "m8jP,m9B9,pc3X,jSh1,pcw3,jSJ9,3Qy3,ikh9,ikJh,ewkF,btd9,9XCh,7F11,7EQx,3QTX,67wp,7Fdx,8q5F,ikSF,illV,5ngV,3Rqp,ewJz,excV,aIAz,aJ3V",
                    7389: "mVib,mWn1,fh3j,fh+N,66WP,68c9,mVNr,67zx,cer3,8quF",
                    "62e9": "kCFP,kD99,pbTr,5mlx,3Qy9,bsJP,gP09,nGt3,nH8V,kDEp,gPcF,ewx9,nGwb,jSzN,gPyx,fibh,ce5b,ceN1,8pRX,8qKh,g2A3,3Rk9",
                    "632f": "jRNH,jSh1,pbQj,5mip,3Qv1,aHRH,ewqV,4BCH,9aK9,ce5h,nGwh,nHc1,j5Hz,j67N,ewAb,exj9,ewJz,3R7F,67Sh,ewW3,8qrx,4Cy9,9bgr,ceJV",
                    "7af9": "ev+H,or5F,ikkb,ikPx,iktz,3QKF,dLOj,orKh,ikYP,ilvh,ilfz,5naF,3Rk9",
                    9075: "mVf3,jS7F,g1HP,g1Xx,7EQx,5m91,7EQr,4BPh,4Cy9,orlb,lodN,loqb,orTF,lnTP,loM9,lodH,hA4N,fhph,lon3,gPp9,g2Dh,g2MF,ewx3,excV,j5v3,j6aV,ceJV,ce29,j5v9,9XpH,9Yl9,9aNb,7FgF,ceDz,7FFF,67M1",
                    "6cf7": "4BgP,bt3N,lnQH,oqS1,ik7H,fh6x,j5rX,j6h9,kDQP,nGYp,orAP,g2qN,aIxx,7F7h,3QNN,67zr,9b79,ceDF,g2W1,gPp3,5m+9,4Cch,4CrV,6V19",
                    7238: "7FLP,5ndN,4Cix,4BFV,5moF,ewkF,ex3x,9bgx,9axF,9aTr,ewGx,dLcP,gOZ1,j5HF,mW4h,orAP,loCN,kCM3,orf1,mVuH,jSnh,gPsh,fi89",
                    "655d": "mVbX,j5fx,j5v3,mVQF,pc0P,5muV,4BjX,hzp1,hA1F,67CF,4BPh,9aob,dLvF,dLEX,9XFp,orKb,g2qN,j5U3,j6h9,j67N,dMhF,8qop,3R7F,fhHX,btFh,6UQF,3RJ9",
                    "4ed3": "fgPH,gOGh,j5lN,orop,logV,ilcx,g2Z9,7FLP,4ClF,4BFV,67dF,g1+F,g2Gp,btIp,9aWF",
                    6301: "jRNH,jSk9,bsGH,fhj1,pbTr,5mlx,3Qv1,lo1b,loJ1,pcw3,gPp9,gOYX,gPRh,ce23,ceQ9,g2Mz,5naF,3Rk9,aIuj,7FmV",
                    "7c97": "mV8P,j59h,mVE3,j5lN,hziH,hzUh,9abH,hzBx,g1Xr,ce29,pbTr,3QHx,5mxX,5nqh,btpz,btRN,hAtH,hA1F,5mNz,nGFF,nH5N,5ndN",
                    "62b5": "j4YH,j5s1,pbQj,5mip,3Qv1,bsGH,fhj1,nH8P,m8Sh,4BPh,8qbV,g2eb,g2W1,mW13,dM8h,aITp,4Cv1,6V19,6UAX,4Cfp",
                    5428: "6TOX,m8n1,m8FN,9XpN,9X71,kD5X,kDX9,hzUb,aIrh,btRN,iliH,9bmN,pcsX,5mX1,4C99,4Cv1,6V4h",
                    5206: "nGpX,ew1V,orAP,il9p,exj9,g1Xr,g2Jx,6UKp,4B/N,fhpb,9Xw1,5mip,3Qv1",
                    "94a2": "ik7H,pbTx,lnEb,ln+9,hzoX,hzO1,c+nP,c+T9,hzBr,4Bwx,8pS1,3R1j,nGzp,nHc1,6891,3Rtx,j5KH,9Y8F,9aWz,jSVF",
                    "602a": "ev+H,kCM9,pbQj,3QEp,lnQH,hzO1,nGt3,nH8V,lozF,il6h,g2qN,dLBV,lo7r,il01,gPvp,exj9,btgb,btUV,fhHX,67M1,67jP,68fh",
                    8910: "oq/j,m8IV,jRQP,jSh1,cdyV,g1Xr,3QHx,ewhr,aIo9,c+JH,g2b9,nGCr,nH8V,gPHV,gP9x,nGCx,jStr,jS/V,gPiP,ce5h,dLRr,dMr1,6891,3Rtx,c/jb,8q8N,aIN3,8quF,btjj,67wp,67/F",
                    6062: "ew1P,jRX9,pbQj,3QEp,kC/H,gOZ1,kD5X,kDX9,orxH,kDlF,g2hp,9XpN,aIuj,fhBN,il6b,cer9,7FjN,3QU1,c/pr,gPHV,cer3,6UQF,4Cy9",
                    "8d3e": "nFZP,nHf9,nGt3,gP09,nGOX,gPm1,lnEb,loFV,gPHV,gOGh,lnEh,8pFr,dLsx,dMhF,8quF,btpz,7F7h,5moF,4Bk1,8qbP,3RJ9",
                    8857: "j4/P,or2x,bsGH,j5iF,g1Uj,3QEp,lnTP,lok1,gOSH,gPp9,pcgr,gP9x,cdUH,cer9,67gH,7Ft9,fhvr,7Fdx,mW4b,mWq9,g2Db,g30h,g2PH,5ndN,3Rk9",
                    "5c40": "5m2H,9Xdh,c+Ap,oq/p,orZV,j6aV,j5cp,g1Uj,g2W1,6891,4CrV,3Rqp,67mX,c+Q1,c/jh,7Fwh,7F11",
                    6050: "nFZP,nGt9,nGdr,g1Xx,ew1P,gP09,c+MP,fhph,gP6p,nGzp,nGYp,dMbp,c/px,c/C1,fi89,jSzH,gPp9,5m5P,aI5p,aIhP,5muV,4BJ1,4C99,6UKp,ce8j,9b0V,btLr,68c9",
                    "4e50": "orTz,nGap,fh0h,fi51,kDir,5mKx,3QU1,66WP,8pCp,cdUN,ceub,68c9",
                    6797: "j4/P,j5Bp,pbWz,3QKF,9abH,ewep,jS7F,hzEz,dLLh,jSwz,jT69,pczb,3Rnh,8pV3,ceeF,ewPV,jSMh,il6b,c/sF,8qKh",
                    "8f6e": "lnuP,lo4p,pbZH,dLg1,dLOp,ikwH,3QNN,7EAP,aIxx,g27X,j5HF,pcw9,orH9,j64F,gPO9,gPiP,5mTV,4C61,4CoN,7FP1,aIGP,exg1",
                    "5f25": "nFZP,nGjN,ikwN,ike1,c+nV,c+MV,5moF,3Qy9,g27X,jStx,pcpV,jStr,jT69,g2PN,6UbX,dLUF,gPp3,5m+9,3R7F,c/sz,7FS9",
                    "95f9": "3Qy3,kCM9,pbNb,lnQN,m8Sb,m9uV,5ngV,3Rqp,kDfj,ikSF,hzBr,hAqF,7EZP,dLBV,dM8h,9bah,7FmV,hz+r,4BVx",
                    "80d6": "4BgP,8pw9,aI2h,nG7h,nGq1,67n1,4BzF,ikkb,ikD1,dLmb,dLF1,mVKj,j5KN,ilcr,mWn1,gP6j,gPO9,btgb,bt/9,pczb,3Rnh",
                    "6d66": "nG43,lnQN,ikaP,g1Xx,4BjX,cdRF,kD2P,kDX9,orQr,m9uV,3QX3,hzR9,hAwV,5ngV,3Rtx,c+T3,c/yV,9aK3,9bpV,pcsX,4C61",
                    "4fb5": "g1HP,pbZN,m8zr,3QHx,nGt3,nH5N,hAtN,hzR9,kDfj,kDNN,cd+X,fhj1,fi51,ceN1,3QQV,67FN,ceDF,ce8p,7FmV,3RJ9",
                    "620e": "jRQP,jT69,c+nP,c/0x,ikwH,9XmF,6TYp,4Bk1,orKb,loCN,pcmH,dL+V,8qlh,3RCV,68c9,4BPb,7FmV,cexp,g2MF",
                    "828d": "m8jP,m9B9,pc3X,j5s1,pcw3,j5U9,cdBX,j5lN,gOMr,gPHV,5naF,3RdV,cdXP,8q5F",
                    "624b": "mVib,nGFF,orWN,iknj,iliN,dLcP,dMu9,nGFz,5mNF,3QX9",
                    9165: "nFZP,nGzp,nGdr,g1Xx,dLpp,cdF9,nGjH,ewnN,dLBV,c+Wh,4BjX,jRU1,jSnh,67th,66+1,9X6X,9XCh,mVNr,orZV,hz+r,hAD9,mW4b,3Rnh,8p/j,hAhh,ceDF,9YeV,8qE1",
                    "8ba8": "nG7b,kD2V,gOwP,gOPF,3QKF,8pYh,ikG3,ilvh,pcLH,5ndN,3Rnh,ewGr,aIK1",
                    "692d": "j4YH,j5lN,oq/j,3QEp,bsGH,j5cp,gOJj,dLyN,3QTX,nGq1,nGFF,gP09,ceeF,9aTx,8pYh,loaz,loM9,orNj,g2nF,3RgX,hAb1,hAwV,685V,3RwF,c/cX,c/yV,9bpP,9b41",
                    "6c83": "oqV3,lnTV,ikaP,g1Xx,4BjX,cdRF,m8P3,mW19,nH8V,mW13,fhI1,btvV,8q5F,6Ulp,3QNN,fhiX,fi89,dM1X,9bdp,682N,3RJ9",
                    "73b0": "mV8P,mVE9,mVor,9aux,gOwP,gOZ1,7EAP,9Xz9,c+Zj,nGzp,nH8V,c/yV,jSJ3,c/g9,8q8N,6Uox,3QNN,ceub,5n1h,4Cfp,4CrV,6V19",
                    5144: "nGdr,nGYp,fhRp,fh6x,nGdx,4BgP,67ax,8pOV,ce29,fhm9,fhBH,5mQN,4C2V,4CrV,7FS9",
                    "960e": "3Qy3,kCM9,pbQj,lnQN,mVE3,mWjV,5ngV,3Rqp,g24P,kDfp,j5yb,j5Xh,fhyF,ewDj,dLyN,7EWN,7Fwh,dM8h,dLXN,aIeH,aIup,aIDH,aIQh",
                    6291: "jRQP,jSh1,pbTr,5mlx,3Qv1,bsJP,fhj1,nGLP,mVHh,6Uih,aIGV,3Rnb,mW4h,mWn1,8qE1,6UNx",
                    "53c8": "nGaj,nH5N,gPsh,c/6N,9aH1,5m91,nGgz,gP09,ceeF,8qop,5nn9",
                    "707e": "oroj,m92N,gOD3,lnB9,loFV,gPHV,bsWj,g21N,j5Er,cebx,9aNh,6U8V,5mlx,3Qv1,c/0r,8qf1,6UKp,3RJ9,cer3,g2MF",
                    "7f69": "oqYb,orWN,kDQV,kCPh,oqYh,ori3,kD99,orDX,kDv1,kDir,g2kx,ikPr,illV,g1Xr,g2MF,9Y8F,9Xjx,g1Xx,c+Dr,c/sF,7EDX,7FP1,9XLz,3R7F",
                    "79cd": "nG0X,orlh,nGgz,3QKF,ikaP,ikJh,9X3P,gOPF,g1+z,c+Wh,aIxr,kDix,kDU1,9bt1,cebr,ceN1,pczb,3Rnh",
                    "5b57": "pc73,mVTN,ikh3,m8q9,m9uV,illV,hzBr,hAkp,ewJF,67CF,3QQV,cdyP,ceQ9",
                    "5eb5": "pcgr,mVWV,m9B3,m8th,cdIh,5m2N,ikqr,ilp1,lodH,hz+x,fhm9,cdLp,ikYP,fhOh,ceQ9,67mX,dLF1,dMex,7FCx,7F11,aIkX,aIWx,g2qH,4B/N,3RdV,3RzN,68c9",
                    "76ce": "4BdH,4CBh,4Cir,btLx,bsZx,4Bwx,4BM3,btd9,btsH,4B/N,aHUP,c+GF,hzXp,oruF,gPyr,lowx,lnKx,gOMx,gOwP,gPO9,gPfH,btY1",
                    "88ab": "pbNb,m8CF,kCCH,kD61,bsJV,cdvN,g2b3,c+JN,dLsr,btd9,g1Xr,3QHx,4BCH,8pYh,cebx,lo7x,loM9,illV,pczb,fhOh,fhvr,fi1V,btOF,8qop,5mTV,3R1p,cekP,8qop,682N,4Cy9",
                    "4e0d": "nFZP,nHf9,nGLP,kDix,gOZ1,c+Ap,aHUV,kDir,4BVx,hA7P,btY1",
                    "90f4": "jRQP,jSdV,pbTr,4Bwx,aHRH,fh0h,jS4x,gOMr,ewqV,jSgX,jSCV,pcdj,4BSp,aIeH,ewx9,jSqp,g2hj,dL+V,3Rk3,nGS9,nHf9,gPBF,excV,bt/9,8qE1,7FLV,6UNx",
                    "693f": "jRNH,jSh1,pbQj,3QEp,bsGH,jS1p,j5cj,fhfV,mVE3,mWjV,jSk3,jSYN,gOYX,gPL1,pcsX,jSCV,g2nF,cdXV,gPp3,dMhF,bt/9,3R1j,c+Zp,c/sF,3RwF,9aQj,9bjF,5mHj,5naF",
                    7977: "oqYb,lnQN,j4YH,j5oV,fh6x,bsGN,fh6r,3QHx,fh6r,cd/1,m8P3,m9y1,j5yb,j6aV,fhiX,fibh,pcw3,il01,c/6N,9XIx,67n1,btsH,bt/9,8qbP,6UHh,dMkH,5ndN,3Rnh",
                    "75d8": "3QrP,8pCp,cdOx,m8zx,m9B9,pcgr,m95V,j4/P,g1Up,bsJP,ewhx,ikwH,ilp1,fhiX,fh+N,aJ0N,aIl1,fhj1,9XCb,67CF,9Y5r,4C2V,4Bwr,4CBh",
                    "574a": "ik7H,ikD1,oq/j,9Xgp,8pmH,aIo9,pcmH,lotp,jSgX,jT9h,jSzH,ewMN,aIAF,67q9,3QKF,ewMH,excV,685V,3Rqp",
                    "5bcc": "pcdj,mVTN,ikh3,m8q9,m9uV,illV,jS4r,jSVF,hzEz,hAnx,dMex,dLvF,hzEF,3QEj,bsWp,btRN,3RzN,9arj,9bmN,5ndH,5mip,btmr,5mKx",
                    "591f": "9Xa3,hzs9,hzKV,bt6V,bsQ9,hziH,m8th,pbTx,m8tb,m8Sh,6Uih,4BzF,jSwz,m991,orKh,m98X,m9y1,j64F,ewJF,j5QX,hAhh,9aWz,cer9,fhUx,dMbj,dMxh,9YeV,67Sh,3R1p,9XY3,7FCx",
                    "592f": "kCIX,kDU1,pcjz,j5v9,c+r1,kDoH,g2Gp,dMu9,cdLj,ceDF,5n4p,3RaN,gP9r,9XCh,67gN,3Qv1",
                    6362: "jRQP,jSh1,cdvH,fhj1,pbTr,5mlx,3Qv1,jSnb,pcpV,mVQz,mWdF,il39,btgb,ikJh,iliN,btRN,bt6P,bu2h,g2wX,9b0V,6UrF,3QQV,aIN3,6UNx,3RJ9",
                    "84df": "mV8P,mWq9,pc3X,jSh1,pcsX,jSG1,fgSP,kCYF,j5cj,j5Bp,g24V,g1Rh,9aoh,9aWF,g2nF,g24V,cdIb,ceeF,g24P,9aDV,4BgP,67FN,il6b,8qlh,kDQP,5ngV,3Rqp",
                    "4ea4": "pcab,m95V,lnuP,loM9,ew83,j5s1,j5QX,fi1V,fhfP,aIup,67Sh,4Cv1,3QuX,67n1,8q2x,btvV,fhOh",
                    "51c0": "nG0X,jS7F,8ppP,fh6x,j5oP,pcjF,mVNr,mWdF,j5R1,j5v3,j6aV,aJ3V,aIl1,ewnH,exmh,j5NP,5mTV,3Q+h",
                    7095: "fgSP,kCM9,pbTr,cdOx,9aoh,4BdN,gOMr,kD99,cdOr,9aK9,pcmH,loqh,jSnb,jT69,3QNH,5mEh,9XLF,gPcF,gPyx,67Yx,4ClF,4Cy9,6V4h",
                    9611: "3QEj,lnHp,or5z,ln+9,mVNr,mWn1,6891,3Rtx,j5lH,j61x,gOVP,gPsh,ceuh,cdXV,gOVV,fhm3,dLOp,dLXH,fhL9,loaz,5mNF,6U5H,ceeF,btpz,6UKp",
                    "7cb1": "oqYb,m8FN,m8mX,jS1p,fgVX,ikwN,nGt3,nH2F,hAnx,g2x1,kDfj,ikD1,nGOX,ikSF,g2eh,kDNH,hAGh,ewhr,ce29,btyX,ex3x,bsJP,bt/9,fhvr,3R4x,4BjX,6U2F,btmx,8qbV,67Yx,4Cv1",
                    7984: "pbQj,m8FN,jRNH,jSh1,g1Up,cdvN,g1Uj,3QEp,g1Uj,cd/1,nGwb,nH5N,hAnx,kDcb,kDKF,hzNX,hAGh,fhpb,btpF,6U8P,ceo1,hAaX,5mX1,3R7F,dM1X,9bjF,68c9,cexj,excV",
                    "6ca1": "oqYb,m8IV,ikdX,g1+F,5mc3,c+JN,g2b3,ikPx,kDlF,nGFF,nG/x,ilcx,hAqF,hAD9,dLI3,dMkN,9bdp,67FN,3QQV,dLRr,9XRV,6UHh,5ndN,4Cy9",
                    "5e55": "mV8P,mWq9,pc3X,kD61,pcsX,kDv1,kCVr,kDHx,fhUx,fh6x,kCVx,ikqr,ilcx,c+nP,c/F9,fhpb,bt3N,9Xgp,8pmN,c/cX,9Y8F,8qH9,4Bzz,9XmF,9Y2p,67Vp,4C99,c/0r,3R4x",
                    5455: "8psX,m8n1,m8FN,aIeN,aHY1,mWmX,mVHh,5mEh,5nn9,jSVz,8q5F,j5Hz,9bt1",
                    "82f9": "mV8P,mWq9,pc3X,j5s1,pcsX,j5R1,hzs3,hAwV,fh3j,bta1,btC3,fhXF,9aeP,9bw9,hz+r,3R4x",
                    8154: "4BgP,9Xa9,nG49,nGq1,67n1,4Bwx,ikh3,ikD1,c+u3,c+Q1,pcsX,m9ip,ikMj,lo4p,loJ1,ilp1,dLLb,hA7V,il9j,dMr1,btjj,btUV,5mEb,5nn9,btC3,5m+9",
                    7136: "gOzX,lnKx,pbZN,lnKr,lo7x,gP09,c+JN,9Xa9,j5iz,gP09,g1Uj,dLyN,mWdz,jT31,hz+r,hAA1,orKb,hAe9,ewPV,ceeF,9XCh,hAe3,dMex,9Yl9,3QuX,8pFx,8pRX,3R1p,8q8H,3Rnh,8quz,3RJ9",
                    "82eb": "m8jP,m9B9,pc0P,ikzV,pcw3,il39,jSqj,ce8p,g2hj,g2W1,3QEj,cdLp,ceDF,3RwF,5mij,5naF",
                    "9a76": "mV8P,mVB1,dLBV,kCPb,dLj9,dLLh,5mB9,3QEp,8ppP,9XpN,kDir,kDU1,dMr1,dLRx,kDix,pczb,btFh,8qi9,5mQN,3Q+h,cebr,7Ft9,3RJ9",
                    5636: "9X6X,mVc1,mVox,cdOx,cdC1,kC/H,kDv1,oreX,9Xw1,oruz,9XLF,hzNX,hA1F,dLUz,dLF1,9XpH,9XV1,4Bzz,8pV9,8q2r,6UxV,3RaH,9bah,mW4h,nHc1,gPsb,gPO9,gPEH,3RzN",
                    8892: "pbNb,m8FN,jRQP,jSdV,hzEF,fh3p,cdyV,g1Xr,3QHx,fh6r,bta1,dLyH,g2b9,9aTr,nGCx,nH8V,9bpV,hz+r,hAwV,aIxr,aJ3V,4BIX,4CBh",
                    "7a81": "pcdj,mVWV,j59b,mVih,mWn1,j6e1,fh0b,jSnh,jSFX,g2SV,g2wX,dMbp,cdF3,ceN1,hA1z,cebx,9aNh,67gN,3Qv1,ceez,8qi9,67Yx,4Cy9",
                    "4f4d": "ev+H,or5F,j5cj,3QEp,pcgr,lon9,jSdP,jT69,g2eb,8q8N,gPEH,5mX1,5mrH,5nqh",
                    5323: "nH8P,nG49,5mc9,5nk1,jSaH,jSVF,ceDF,cdUN,jSaN,g21H,g2MF,jSwz,6UrF",
                    "8c22": "nG43,jS7F,gOtH,gOGh,4Bqh,9aDV,orrr,lo1h,cd+X,lnX1,logV,5mTV,3R1p,ikCX,ikYV,fhiX,fhEV,fhEV,cdUH,cekV,5mrH,cekV,il33,ilvh,fhL3,btLx,pcLH,5ndN,3Rqp",
                    "9e26": "mVbX,mVKp,kCPb,fgW1,fhsp,mVxP,5muV,3QEp,7EAP,fhfV,pczb,m95V,kDuX,il9p,fhRj,gPEN,m9rN,m8/F,c/3F,c/C1,5ngV,3Rqp,9aNb,9bjF",
                    "4e00": "ew1P,exj9",
                    "8e0a": "nG43,nGq1,ikD1,ikh9,nG49,iktz,7ETF,dLvz,dLI9,ew83,6TS9,66WP,9aK9,nGCr,nH8V,jSMh,logP,il9p,3R4r,ikPx,ilp1,5nk1,3RzN,dLRr,dMr1,9XIr,9Yi1,il6b,5n1h",
                    "66f0": "5mfb,m8th,m9rN,5ndN,fh0b,fh+N,7EKb,7FIN",
                    6808: "jRNH,jSh1,9X0H,ikqx,gOMr,ewu1,3QHr,pbTx,nGYj,loCN,hzXj,jS/V,ce5b,fi89,4BM3,6UB1,ceJV,pcpP,ceo1,67Vp,3RCV,68fh",
                    "53ea": "nGdr,nG/x,dMex,dLsx,nGdx,4BjX,bta1,btyX,4Cy9",
                    "8c06": "nG0X,kCYF,hziH,hzyp,4Btp,8pOV,orxH,m9c9,lnTP,loM9,ikJb,iliN,fh+N,fhph,ikJh,c+T3,c/vN,9XY9,5m+9,3R7F,8pRX,8qH9",
                    2161: "nGgz,nGzp,nGIH,nG/x,nGS3,5m+9,5n7r,5mQN,5mHj,5moF,5mxX,nGq1",
                    8180: "4BgP,8pw9,c+xh,nG7h,nGq1,67n1,5muV,3QHx,c+xb,c+Q1,ikCX,ikkh,pcpP,mW4h,m8P3,m9y1,hAhb,lozF,hA7P,kDlF,fhpb,hzUh,hAA1,fi51,g2tP,ewZh,c/BX,c+T9,3QQP,6Uox,9XON,c/6N,9XOH,9YeV,685V,4ClF,3Rnh",
                    "5f6c": "jRNH,jSdV,pbQj,3QEp,9X0H,j5cp,gOJj,ewqV,jSgX,jSG1,pcgr,3R4x,9XpH,c+T9,ewAh,ikPx,gP9r,c/d1,hAe3,os11,btC3,hAA1,3RdP,5n1h,7FFF,ceQ9",
                    "8c7a": "lnuP,pc41,jR+b,hzBx,lnNz,jSdV,fgSP,ikwN,lo4p,ikwH,ewx9,ce5h,7F7h,5my1,3QHx,aHXX,g24V,c+T3,6TP1,ikPr,ilvh,pcIz,5naF,3Rk9,8q5z,cer9,ilfF",
                    7785: "66ZX,mVc1,mVrF,8pIF,8pt1,c+qX,c+GF,hzEz,hzp1,mVxP,nGLV,mVKj,3R1p,hzKP,hA7V,aIeH,dLI9,hzXp,fhsj,cehN,ewPP,jSJ9,pcFr,dMex,9X/h,6UB1,3R7F,ceAr,8qxN,4Cy9,ex9H,jT69",
                    6253: "kCCH,kD99,cdvH,g2b9,pbQj,677p,3Qv1,m8Sb,m9Eh,m9ip,67Vp,3RdV",
                    "51cb": "mVbX,jS7F,7EAP,ewhx,3QKz,7F49,aIrh,nGwh,nHc1,6891,4CrV,3Rtx,jStr,jSVF,g2hj,g2PN,mW13,g2A9,dLUz,dMex,9bgx,9aWF,dLUF",
                    5384: "5m5P,9aoh,cdLp,nGap,nHf9,aIGP,btIp,c/sF,ilfF,ikG9,67q9,5mEh,5ngV,8qH9",
                    "592b": "kCSj,kDNN,ew4X,exg1,pcgr,btjp,8pS1,5mip,3QrV,dLRr,9b0V,67Vp,3RJ9",
                    "86e4": "9X6X,jRU1,jSk9,ce29,cdC1,pbTr,6T/x,5m5P,7F11,9XsP,5mHp,g2eb,pczh,nGVb,gPO9,g2qH,g2SV,3R7z,ceeF,ceN1,3RG1,5mNz,5nk1",
                    "8dea": "nG43,nGq1,hzO1,hzs9,nG49,hzBr,7EQx,c+Dr,c+T9,ew83,6TS9,66TH,9aK9,j5yb,m8/F,orAV,m8/z,m9uV,il6h,ilvb,ikJh,9aNh,67q9,3QNN,8qoj,9YbN,dMkN,dL+V,5mTV,4C61,4Cv1,6V4h",
                    5019: "g1HP,kCSp,pbZN,kCSj,3QEp,j5oP,9aDV,nGCr,nH5N,j5+p,j5v3,j6h9,c+Wb,hA4N,fhvr,fi1V,aIo3,aJa9,fhL3,9XV1,6UrF,3QU1,aIN3,6UNx,3RJ9",
                    6216: "66ZX,9aWF,9Xdb,gOGh,gP6p,btjp,bsTh,kCFP,kDX9,orKb,loCN,pcmH,ewPV,9b79,5n7x,3RCV,6V19,3R1j,7Ft9,btLx,gPEN",
                    "7b80": "j4/P,pbZN,m8wj,m8Yx,m8FH,j5v9,j5Er,pcw9,m95P,m9B9,m9fb,j67N,3QBb,g1Rh,j5cj,g281,hzUb,hAwV,5ngV,3Rnh,dLEX,dM21,6UB1,6Uc1,dLF1,aIkX,aIK1",
                    "6d25": "nG0X,lnKx,hzlP,fh3p,4BjX,cdOx,m8IP,m9rN,fh+N,fhj1,iktz,ilvh,bt6P,btUV,7EWH,7FS9,pcpP,3RdV",
                    6398: "jRNH,jSk9,pbTr,5mlx,3Qv1,cdyP,g281,4BCH,9XCh,nGwh,nH8V,jS/V,jSnh,g2nz,ceeF,ceJV,gPHV,aIxr,4BVx,5nk1,9YhX,3RG1,hAhb,5n1h",
                    6846: "j4YH,j5oV,bsGH,j5cp,iknj,dLBV,pbQj,3QEp,nHf3,nGwh,5mEh,5nqh,jStr,jT31,fhyz,fi1V,9aTr,9bt1,jSMb,9bah",
                    8389: "m8jP,m9B9,pc3X,j5s1,pczb,j5Xh,gOD3,hz+x,c+nP,c/6N,gOVP,3QQV,66WP,c+MV,7FgF,gPp3,8qi9,illP,5ngV,3Rnh",
                    "786b": "dL9H,lnNF,lnxX,ln+9,6TVb,g1Rh,g24V,8pOV,8pzh,pcmH,m9fh,lo1b,loM9,kDy3,ewAh,fi1V,il9j,dMu9,3QQP,6Ulp,9aTx,c/3F,c/cX,4C61,c/pr,5n7x,4ClF,4Cv1,6V19",
                    "4e70": "mVbX,mWn1,j61x,kCYz,hzXp,hzyj,dLI9,cdyP,ceQ9,loaz,c/3F,9XIx,7F49,4Bn9,9XRP,4Cy9",
                    "62bf": "jRNH,jSk9,pbTr,5mlx,3Qv1,cdvH,fhj1,6UAX,3R1p,nGzp,nH8V,illV,ikMp,c+Zj,c/F9,il6b,9Y2p,3RG1,68fh",
                    "5c3f": "5m5P,aI2h,dLpp,oq/p,orZV,jS/V,jS1p,fh9z,fhvx,btd9,6TYp,j5KH,5mQN,3Q+h,gPfH,c/g9,9Y5x,68c9,c/g3,g2W1",
                    "81a8": "4BdH,9Xa9,nG49,nGjN,67gN,4Btp,dLj3,dLyN,ikwH,ikh9,m8LX,m9fh,oruz,ikSF,ikCX,il39,g2b3,g2x1,ceo1,ce29,g2b9,9XCb,7Fdx,6Urz,aIK1,67mX,6UE9,hAhb,nHc1,gPKX,btFh,aJa3,7FIN,3Rh1",
                    "4e5e": "g1HP,j5cp,lnNF,pc0V,lnNz,loJ1,g1Uj,g2Gp,c/0x,9XsV,6T/x,5moF,4BCN,4ClF,5ndN,7FP1",
                    7403: "mVbX,mVE9,gOzX,gOZ1,7EAP,9Xz9,mVor,9aux,jSk3,jT9h,pcw3,5m+9,3R7F,orTz,loJ1,gP3b,c/6N,6UbX,dM59,hAe3,c/mp,9bjF,68c9,c/mj,g2W1",
                    "95f0": "3Qy3,kCM9,oq/j,lnTV,mVE3,mWgN,5ndN,3Rqp,j5iz,j5+p,dLvz,dM8h,8pFr,8qop,j5Er,8q2x",
                    "6c88": "nG43,kC/N,ikaP,fh3p,5m8X,cdRF,gOYX,jSh1,jS/V,gPHV,3QHr,67q9,9aTx,cehN,g2tV,pcpV,ewW3,5m+9,4Cch,4Cv1,7FS9",
                    "9ecd": "nGdr,orQx,nGCr,gP9x,kCIX,kDU1,ew4X,gOPF,kDix,il39,fi51,aHUP,cdRF,g2kx,c/jh,bt/9,bt3H,9aNh,5mfb,8q2x,ceez,5mNF,3QX9,9aTr,5ndN,8q8H,btIp",
                    "84d1": "mVbX,mWq9,pc0P,jSdV,pczb,jSMh,lo4j,j5KN,j4/P,j6h9,gOMr,gPyx,btLx,bsZx,gOMx,ew1P,exj9,6TLP,8pLN,btjp,8pLH,3QNN,67CF,9XLz,7Ft9,5ndN,4Cy9,6UHb,9YbN",
                    8214: "mV8P,nGq1,mVor,dLsx,ik7H,ikD1,4BjX,dLg1,dLBV,67jV,66+1,mVKj,nH8V,mW13,kDv1,gPfN,c+T9,j5U3,g2Jx,c/F9,j5Bj,j6e1,5mEb,aIxx,ewPP,4C2V,aIQb,67/F,btOz,68c9",
                    "4e07": "mV8P,mWq9,mVHb,gP3h,dLI9,bta1,9aAN,5mc9,gP3b,gPBF,7FCx,67Vp,4BYF",
                    "609f": "ev+H,kCM9,pbQj,3QEp,kC/H,gOZ1,nGt3,nHc1,jSk3,jSVF,ex3x,nGLP,ewJF,ewqP,exmh,3Q+b,btgh,btRN,3RzN,5mEb,5ndN",
                    5411: "4Bn3,lnB9,loFV,685V,4Cch,lnKr,ori9,g27X,g2A9,aIN9,aIl1,g281",
                    "5e8f": "3QrP,7EH9,9Xdh,lnEh,loM9,pcab,mVTN,ikwH,ilcx,ewPV,g2hj,c/d1,c+Gz,c/C1,9bmN,c/9P,5mTV,3R4x",
                    "7f8a": "or5z,kD99,kDoH,orWN,kCIX,kDU1,fh0b,fh+N,9X3P,9Yl9,kDir,3R4x",
                    "56e0": "4Bn3,nG49,nH8V,4CrV,hzBr,hAnx,m8Yr,g2kx,dLLh,bta1,9XmF,g2kr,dL+V,9Y2p,6TS3,6UWV",
                    "57df": "hziH,hzKV,oq/j,9arp,6TIH,9XpN,kD2P,kDX9,orQr,m9uV,gOYX,gPfN,btsN,bta1,gOZ1,5mrH,8qbV,pcsX,fhL9,9Y2p,3RG1,6V4h,3RaH,7Fzp,9Y5x,gPHV",
                    5219: "9Xdb,nG7h,nGCx,9XIx,jSdP,9aAN,6T/x,4BgV,9aK3,5mQN,mW4b,9X/h,pcRX,5nk1,3RwF",
                    9547: "hziH,or2x,lnEb,ln+9,hzoX,hzO1,c+nP,c+T9,hzyj,4Btp,7F11,mVE3,mWq9,pcw3,jSCV,9aQj,jSqp,jSYN,9bmN,gP6j,gPEN,ewDj,ex9N,btjj,btRN,9aK3,9bw9,3QTX,7FmV,7Fzj,3RJ9",
                    "70db": "dL9H,jRX9,pbTr,cdOx,7EKh,4BgV,cdOr,7F49,gOMr,ln+9,9XFj,jSqp,jS/V,ceJV,ce8p,pcw3,67P9,4BM3,6UWV,9Y8z,4Cy9",
                    6628: "66ZX,m8n1,m8M1,9aH1,9ai1,fgVX,fhj1,g2eb,orAV,jSwz,jT9h,jSFX,3Rh1,ewSX,exg1,9XUX,9Yoh",
                    "6cf8": "4BgP,cdRF,lnNz,oqS1,ik7H,fh6x,m9xX,m991,pcsX,il01,ce5b,ceJV,btUP,illV,ikJh,btgh,6Uf9,3QNN",
                    "767d": "3QBb,jR+h,jSYN,3RzN,6UTH,6TVh,dLmb,dMkN,jSaH,orop",
                    "5f0a": "oqYb,m8CF,m8P3,oruF,pc0P,c+MV,c+u3,kCM9,kDix,ewGx,c+Wh,fh3j,iktF,ikG3,g2hp,j5KH,orKh,lojX,loM9,kDNH,g2Gp,cehN,ik/X,fhUx,ceQ9,9X3P,9Yl9,3Qy3,67gN,ce29,cer3,3Rk9",
                    "6ca7": "nG7b,lnTV,hzlP,fh6x,3QuX,cdRF,fhfP,hzUh,kDlF,nGLV,kDBh,hAtN,g2Z9,7FLP,4ClF,4BYF,5mHp,fhsp,fhUx,9Y2p,9b0V",
                    5319: "mVib,mVNx,gP9x,gOGh,mVih,jR+b,jStx,dLcP,dLXN,dLBP,5muV,9XsP,9XLF,3QrP,bsZx,8pCj,4BJ1,4CBh,nGOX,9b41,8qlh,8qAV,aJ71,g2wX,jS/V",
                    "918b": "nFZP,nGCx,nGdr,g1Xx,c+xh,nGmP,ewqV,ewAh,9X6X,9XCh,4BjX,jRU1,jSnh,67th,66+1,lo7r,loJ1,gP6j,gPRh,pcsX,gPm1,pcIz,gPBF,3RaH,dLXN,dMnV,3RCV,9XOH,9YeV,5mQH,5ngV",
                    "5e95": "4BdH,9Xdh,lnHp,loJ1,pcdj,mVTN,j6aP,hzKV,4BFV,7FgF,c+MP,c/yV,hA7P,aIN9,4CrV,6V19,67FH,3Rk9",
                    "8e72": "nG0X,nGmV,hzKV,hzp1,nG11,hzyj,6TYp,c+Aj,c+Q1,ew4X,66+1,5m2H,7EZV,pcgr,m991,m9c3,pcIF,m8P3,m9B9,m95P,hA4N,fhvx,m9fb,gPsh,g2Gp,g2PN,dLLb,dMkN,btRH,j67N,j5yh,btgh,btRN,9aGX,9bzh,btOz,5naF,3Rnh,7Fdr,5mTV",
                    "7eb7": "nGdr,gOwV,gOPF,kD5X,aHY1,bta1,66WP,8pV9,mVTH,ikPx,dLF1,nGYj,j64F,exj9,fhsj,fh+N,5naF,3Rk9,ewPP,9XON,6Uox,3QU1",
                    "7f38": "hziH,or2x,kCPb,kDix,ew1P,ewJF,kC/H,67gN,bsQ3,5mc9,67wp,ce8j,4BSp,lodH,loM9,5mNz,5nqh,lowr,5n7x",
                    "68fa": "3QHr,pbTx,jRQP,jSh1,bsJP,g1Rh,jS4x,hzBr,ewu1,pcmH,mW4h,ikG3,m8P9,m9B9,ils9,3R1j,ikMp,iliN,dMkN,dLOp,aIuj,aJ3V,3RCV,67wj,685V",
                    "9e64": "j52X,m8n1,m8Yx,j5Ex,pc0P,j5fx,c+kN,g1Rb,3QBh,jSaH,hzR9,gOJj,gPcF,dLmb,dLRx,aI2b,aIxx,6TVb,6UrF,gOYX,6Uc1,pcFr,mW19,fhUr,gPL1,mWn1,mVWV,c/9V,c/F9,5nk1,3Rtx,kDBb,ilcx,8q5z,9bmN",
                    "86d4": "bsMX,kCJ1,kD61,cd/1,cdC1,or2r,7EQx,66WP,8pS1,aIhP,6Uih,3R1j,mVKp,mWn1,3RG1,ikYP,ilcx,aIWx,aIGV,ikYV,67wj,6891",
                    7532: "aI2b,oqYh,orWN,aJ0N,ikkb,iliN,c+xb,c/vN,orrr,3R4x",
                    9636: "3Qy3,oqV9,ori9,hzBx,c+T9,9Xz9,8pFx,gP03,jSzN,orH9,jSVF,hAD9,g2qH,9aZN,3QX9,g2Mz,3RwF",
                    5480: "9X6X,nG11,nGjN,cdUN,cdC1,5mHj,orop,orWN,5ndN,ceGH,ce8p,ikMj,iliN,5mrH,5nqh",
                    "5b54": "nFZP,nGCx,j5lN,5mrN,3QBh,cdyP,g2kx,pcsX,5mX1,4C99,4CrV,7FS9",
                    "96f7": "oqYb,orWN,hzoX,lny1,loJ1,hAA1,orrr,fhvx,j5cj,j5s1,g1Uj,g281,j5NP,j64F,g2tP,g2MF,3QEj,dLpp,dMhF,3RwF,9Xgj,9Y8F,5mij,5naF,dLRr,5mKx",
                    "78f7": "mV8P,mVE9,mVor,hzvh,ev+N,7EKb,gOGh,gOVV,9aDV,9aoh,oroj,lodN,lowr,nH8V,pcw3,ewW9,jSgX,jT9h,fhm3,jSJ9,fi51,9XvX,fhyF,c+Zj,c/9V,8q5F,3QQV,9XCb,8q2x,cenX,ceQ9,ceub,7Fwh,7FP1,fhXz,3RwF",
                    "4f26": "g1HP,jS1p,pbZN,jS1j,3QEp,fhfP,ikMp,lodN,pct1,nGOX,j61x,g2Z9,gPcz,67CF,5mQN,4C2V,4CoN,7FLV,aIAz,ex9N",
                    "7c73": "mVib,ikD1,hAaX,mWgN,g1KX,g2W1,pcgr,3R4x,66WP,9axF,ce29,g2kx,btC9,9bgx,6V19",
                    "6dd6": "nG43,kC/N,ikaP,fh6x,4BjX,c+Dx,pcsX,jSG1,mVZX,mWn1,jSnb,jSYN,ceGN,ce5h,jSnh,g2eb,g2PN,9aAH,9bzh,cenX,3Rh1",
                    "629b": "jRQP,jSh1,cdvH,fhfV,pbQj,5mip,3Qv1,hzHH,ikVN,5mQN,4C2V,4CrV,6V19,pcab,aIo9,7F11,3QHx,jSFX,jS/V,9YeV,8qrx,pcFr,hAkp,c/jh,7FmV",
                    "8c31": "nG0X,kCVx,gOtH,gOJp,4Btp,8pOV,pcab,mVQF,m9c3,pcIF,m8IP,m9y1,jSgX,gP6p,m8/z,fhyF,m9fb,fhOh,gPyr,kDQV,fhcH,fibh,3Q+b,c+Wh,c/vN,3RzN,9aNb,9bmN,5mEb,5ndN",
                    "4eb2": "pc73,mVTN,m8tb,m9uV,kC/H,hzR9,g2qH,kDEp,g1HP,g2Z9,cdIb,ceJV,g2nz,5mNF,3QX9,4BjX,9XsV,9XY3,5nn9",
                    8338: "m8jP,m9B9,pc3X,j5s1,pcw3,j5U9,ikdX,ilp1,ikwH,6U5N,il9j,3Rqp,ewnH,ex0p,btIj,bt3N,6TLP,7FS9",
                    "52fa": "g1O3,kCYF,orf1,kCYz,kDQV,6UWV,4B/N,g27X,btpF",
                    9996: "pbZH,lo1h,kDoH,pcFx,kCFP,kDX9,kDlz,gP3h,3QHr,gOMx,gPBF,3RwF,c+Dr,c/sF,9aur,9bjF,5mlr,5naF",
                    "4fd7": "fgPH,kCSp,pbZN,kCSj,3QEp,jSgX,oruF,orNj,kDU1,cdUH,ewAh,gPcF,kDv1,j5QX,g2Jx,ex9N,c/Ih,3Q+b,ce5h,ceGN,3RzN,5mEb,5ndN",
                    5957: "m8mX,m9y1,orrr,kD99,ikwN,gOJp,fgSV,lodH,j5Xh,gPEN,g2Z9,ikwH,9XpN,hzHH,hAkp,fhcH,fhRp,cdUH,cexp,9X3P,9Yl9,9XFj,4Bqh,5n7x,8qeX,3RzN",
                    "59a5": "m8tb,mVQF,orTF,kCSj,gOSN,lo4j,ikVN,gPp3,loCN,dLcP,dMu9,gP9r,9XpN,7FmV,3RG1,4Bn3,5my1,6UrF,9XY9,dMbp",
                    "5deb": "mVf3,mWjV,mVNr,5mKx,jSdP,9Xa9,ewkz,btgh,j61r,9XRV,fhRj,aJ71,5m8X,5nk1",
                    "732e": "m8jP,m8/F,pbZH,hzHN,3QuX,hzp1,hz+x,5mKx,3QU1,g1Uj,dLvF,c+JH,g2b9,c+xb,c+Wh,9Xdb,9Xz9,c+JH,5mrN,hA1z,hAD9,mWdz,jT31,pcCj,dMbp,9b79,3R7F,dMbj,9Y8F,4Cy9",
                    "51f6": "hzvb,6719,685V,hAwP,4CrV,m8zr,9bdp,9Xmz,gPcF,j5NV,nGVh",
                    "708e": "j5cj,mVuN,pcjz,j5HF,gP3h,fhfV,dLj9,j5Hz,gPvp,exj9,j5Xb,mWjV,cdUH,9arp,fhyz,btpF,7F7h,5moF,3QrV,btpz,6UE9,5n7x,3RJ9,9X/b,ceGN",
                    6613: "nGgz,nH2F,gPBF,gOPF,nGgF,kCYz,kDKF,aH/3,dLBV,gP3h,dLBP,dMnV,685V,5ndN,3Rnh,674b,9aH1,dLUF,3QQP,6UrF,dMbp",
                    "5e7c": "or8H,fgW1,g24V,jSnb,7EH9,8pYh,ce23,6Uox,j5Er,j6e1,685V,5ndN,3Rnh,orKb,dM59,9XRV,6UrF,3QX9",
                    "5bb0": "pcdj,m92N,j563,m8q9,m9y1,j6e1,kDfj,ikVN,hzyj,hAtN,g21H,c+T9,c/9P,g2Dh,c+nP,c/F9,8pw3,8qAV,c/0r,3R4x",
                    5146: "kCPb,gOVV,aHXX,ewx9,ori3,aIo9,7EWN,4Bk1,orAP,5mTV,4C61,4CrV,5nk1,7FS9,g2A3,loFV,ewSX,aJ71",
                    "80bf": "4BdH,9Xa9,nG49,nGq1,67n1,4Bwx,ikh3,ikD1,c+u3,c+Q1,9XIr,kDix,kDU1,9Yi1,btmr,btY1,pczb,3Rnh",
                    "9b03": "nGCr,nGap,iknp,m8wj,m8Vp,kDfj,kCSp,ikaP,ikSF,ikqr,g1Rh,gP09,ikG3,g2hp,lodH,orWN,j5NP,loFV,g2tP,ilp1,g2kr,ewMN,bsQ3,ew89,exg1,btY1,cdRz,ceAx,9YeP,9Xa9,4BjX,7EZV,9XLz,5mNF,3QX9,7Fwb,4Cv1",
                    5729: "6TIH,9Xw1,hzNX,hziN,8pCj,oq/p,nGt3,nHf9,nGS3,5m+9,3R7F,g27X,g30h",
                    "51f9": "4Bn3,nG49,nGt9,ewx9,ewPV,nGLV,nH8V,4CrV,6UWP,6TS9",
                    5954: "m8mX,m9B9,pcgr,kD99,gOMx,ew1V,m92H,il9p,fi89,g1+z,g2Jx,jStr,cebx,9X3P,9Yl9,dLEX,8pOV,5moF,3Qv1,dM8b,3Rnh",
                    "5e03": "lnrH,loPh,pcdj,ln+9,ikzV,g1+F,bsJV,6U2z,g1+F,g2PN,7FIN,67Sh,jSwz,3R7F",
                    "81e3": "5ngP,5mc9,nG49,nH5N,nGzj,hzXp,hzs3,hAnx,ceAx,cdF9,ce8j,5mHp",
                    9187: "nFWH,nGzp,nGaj,g1Up,c+u9,nGmP,ewqV,dLLh,4BjX,j531,j5yh,67th,66+1,9X6X,9XCh,pcsX,m9lx,m8Yr,m9Eh,j5KH,j6aV,fi1V,fhBN,j5KN,9aTr,9bzh,c/3z,c/yV,aITp,5n4p,3RdV",
                    "5bfc": "jS1j,jSVF,nH2F,nGap,hzyp,g1+F,g2PN,ilp1,cdyP,ceQ9,aIeH,6Ulp,ex0j,67Vp,3RaN",
                    "90fd": "lnxX,lo1h,pc0P,hzKV,hziH,hA7V,mVQz,ikG9,bsJV,4Btj,dLpp,dLRx,67zx,677p,9Xgj,9XIx,3Rk3,nGS9,nHf9,gPBF,ceQ9,9bzh,6UQF",
                    "82b3": "3QuX,8pLN,bta1,g2b9,g1EH,g30h,m9Eb,m8gN,ikzP,pc0V,pcw3,il39,gPiP,jSqp,ce23,ceAx,6UNx,5n4p,3RdV",
                    "8ba3": "oqYb,lnTV,hziH,hzBx,677p,9XCh,pcsX,3Rh1,il33,ceQ9",
                    "8f9c": "mV8P,mWq9,pcgr,kDix,kCVr,kDHx,hAnx,hzBx,kCVx,gP6j,ewMN,excP,ewbh,dLBP,aIrh,aIGP,dM8h,aHUP,aJa9,7EH3,7FLV,aIxr,3R4x",
                    "676d": "jRQP,jSh1,pbTr,3QHx,aHRH,jS4x,gOMr,dLI9,orxH,loqh,jSk3,jT69,3QNH,6Ulp,8q2x,9XLF,gPcF,gPyx,5n7x,4ClF,4Cv1,7FVh",
                    "60a3": "mVlj,mWdF,j64F,j5cp,mVlp,gOGb,gPEN,c/vN,c+xh,gOGh,pcgr,btmx,aIuj,7FmV,5m5P,9Xdh,aIeH,5mrN,4BFV,4C99,6UKp,9Y8z,68c9",
                    6280: "jRNH,jSh1,bsJP,fhj1,pbTr,5mlx,3Qv1,ln+3,loM9,pcw3,g2A9,g2b3,g2SV,aIWx,6UxV,3QU1,fhsj,9b0V,67Yx,4Cy9",
                    "90ca": "pbWz,m8M1,lnuP,lodN,j5iz,ew51,j5v3,fhyF,ewAb,aIl1,5m91,dLsr,aIl1,6Uox,3RgX,nGP1,nHf9,gPyx,aJa9,8qH9,6UNx",
                    "70af": "dLcP,jRX9,pbTr,cdOx,9arp,4BgV,cdOr,6Uf9,3Q+b,mVHh,mWn1,5nk1,3RwF,ikVH,ilcx,aIWx,aIDN,ikVN",
                    8003: "m8wj,m991,hzlP,hAD9,pcab,hzUh,7ExH,cdUN,gP9x,kDy9,nG/x,dLI3,dMnV,dLUz,9XFp,9Y8F,5n4p,3R4x",
                    5170: "or5z,jSnh,ikVH,orQx,ikh3,illV,c+Aj,c/sF,5m5P,5nn9",
                    "826f": "pc73,m92N,dLpj,dMhF,m9oF,m8wp,3QEp,7F49,iknj,ilfF,dLI3,8qbV,5n7x,3RG1,8qbP,ceDF",
                    "5f55": "or2r,orNp,hAhh,kCYz,kDBh,hzlP,hAD9,fh3j,cdXV,66WP,c/0x,hz+r,5mKx,3QX9,fhvr,btpF,9bah,6UTN,6891,btyX,fh+N",
                    7709: "5m5P,9aoh,cdLp,nGap,nH8V,j6aV,j5cp,nGFz,j5HF,3QQP,fhfV,fi1V,3RCV,cdXP,ceJV,9aDP,9bpV,5muP,5ngV",
                    "52df": "mV8P,mWq9,pc3X,kD61,pcsX,kDv1,kCVr,kDHx,fhUx,fh6x,kCVx,ikqr,ilcx,c+qX,c/C1,fhpb,bt3N,9Xgp,8ppV,cenX,9Y8F,9bw9,9aur,9bgx,5n4p,3RdV,btmr,6Uih,4BCN,3QBh",
                    5076: "g1EH,lnHp,pbWF,lnHj,3QEp,ori3,orZV,g2SV,g2b9,ori9,kD93,kDQV,orDX,8qf1,7Faj,9bgx,btIj,7FIN,3QTX,dLF1,dMr1,5nk1,3RwF",
                    "840d": "m8jP,m9B9,pc3X,j5s1,pcsX,j5R1,j563,g24V,fgSP,cdRF,4BjX,9XmF,hzNX,hAA1,ewAb,btpF,btIj,ex9N,hAaX,3Rh1,9XsP,9Yoh",
                    "7f8c": "pbZH,lo1h,lodH,orNp,lnB3,loFV,hzyj,hAqF,c+nP,c/F9,loaz,g2kx,9Xz9,67dF,3QrV,c/6H,5mQN,4C2V,4Cv1,6V4h",
                    "71c3": "ew1P,jRX9,oq/j,cdLp,5m5V,cdLj,9aAN,gOJj,jSdV,gOVP,orrx,lo4j,lok1,g2nF,btd9,j5Bj,hA1F,gP03,ewGx,ik/X,ils9,mWgH,kDU1,orNj,il9p,fhL9,aIAF,hAkj,dMkN,bt/9,3QNH,8pYh,8q5z,4C2V,8qi3,4Cfp,9bjz,4Cy9",
                    6749: "jRQP,jStx,pbWz,3QKF,9X3P,c+xh,g1Xx,jS7F,hzEz,c+Zp,hA4H,orZV,aIDH,ex6F,hAA1,3R4r,5m+9,7FFF,ceTh",
                    "59cb": "j4/P,j5v9,cdXV,6T/x,4Bk1,or5z,cdF9,9aAN,67th,pczb,gP6p,hAA1,lowr,g30h,3R4r,c/0x,c/yV,3RCV,5mKr,5ngV",
                    "601d": "nGaj,nH5N,ex9N,ewep,nGap,j5cj,j67N,nGCr,ewGx,5m5P,bsWp,aIeH,5mrN,4BFV,4C99,5n1h,7Fzp,ce8j,9b0V,btLr,68c9",
                    "78b3": "lnrH,lnX1,lnKr,hzvh,c+nV,674b,g1Rh,g24V,8pOV,8pzh,mVHb,j5yh,j6aV,mWjV,orH3,j5U9,g27X,g2Z9,ikVH,cebx,9aNh,4BCN,8q5z,cekV,ewZb,btFh,8qi9,67IV,3R1p,btFb,8qrx,682N,3RJ9,9Y8z,ceJV",
                    "56fe": "4Bn3,nG49,nH8V,4CrV,hzEz,m8Sh,jSk3,jSJ9,hA4N,fhph,c+Dx,ikG3,c/px,dLOj,btvV,aIo3,7FmV,6713,685V",
                    "6e2d": "oqV3,lnNF,j4/P,g1Xx,5m8X,cdRF,orlb,os11,hAA1,hzUh,orlh,lo1b,loJ1,orH3,hAe9,3Q+b,fhph,fi1V,5ngV,3Rtx,btgb,btUV,8pYb,8qAV",
                    "971e": "oqYb,orTF,j52X,m8n1,m9uV,j6aV,orrr,gP9x,jS1j,jSk9,hzyj,hzR9,jSCP,jSVF,hA7P,hAqF,cdIb,ce5h,fhph,fh0h,3QBh,9Xdb,9Xz9,7EKb,7F7h,fhyz,fhXF,ceDF,ceeF,aIxr,aIZF,6UHh,5mTV,3Q+h,9XLz,6UB1,5n7x,4Cy9",
                    "5c51": "5m2H,9al9,cdIh,oqYh,orWN,kDNN,kCPh,ikwH,g2eh,kDoH,ewMN,g2A3,iliN,3QNH,ewnN,ex9N,5ndN,3Rnh,bt3H,btRN,8pLH,8qxN",
                    "9e2d": "9X6X,mVc1,mVHh,ce5h,cdC1,hzoX,hzUh,mVrz,3QKF,mVWP,pczh,kDuX,il9p,fhOb,gPEN,mWgN,mVQF,c/3F,c/C1,5ngV,3Rnh,8pYb,9bjF",
                    "58f9": "mVbX,mWn1,pcgr,j5Ex,j59b,j67N,c+u3,gOD9,gPHV,c/yV,ewej,ex6F,cdOr,ceAx,8qrx,8pFx,cdOx,7EZP,4BPh,4B/H,7Fwh,4BgP,4Cy9",
                    "86f9": "aHXX,jRU1,jSh1,c+Q1,c+r1,or2r,6T/x,5m5P,8pV9,9XvX,6Ulp,nGzj,nH8V,jSMh,kDuX,ilcx,3R4r,ikPx,ilp1,5nk1,3RzN,dLRr,dMr1,9XIr,9Yi1,il6b,5n1h",
                    "7ea6": "or8H,gOwV,hzO1,kDcb,aH/9,ce8p,5m8X,7Fap,fhsj,jSCV,jSCV,orH9,jSCP,jT31,5nk1,3Rqp,ewSX,aIWx",
                    5360: "pcgr,dLRx,kDir,kDU1,3QEj,dLpp,dMhF,3RwF,5mij,5naF",
                    "65e8": "pbNb,hzvh,gOJp,gPBF,hAtN,jS/V,lnEb,mWdF,3QBb,dLmh,dMhF,3RwF,9Xdb,9Y8F,674b,67/F",
                    "51c6": "mV8P,jS1p,8ppP,c+GF,g1Xr,j5s1,orop,kD93,3QX9,orDX,lowx,kD93,kDX9,g2b3,g2W1,btd3,btY1,67q3,68fh,kDy3,67P9",
                    2162: "nG43,nGmV,nGt3,nGLV,nGS3,nH8V,nG/r,5n7x,5ngP,5m+9,5mTP,5mB9,5muP,5mc9,5mlr,nGdx,nGCr,5mKx",
                    "7ed1": "66WP,8pS1,cd+X,aHUV,jSh1,gOPz,gOwV,or5F,4BFP,7F7h,btmx,pcgx,ln+3,lok1,gPlX,gP09,bt6P,btC9,3Rqj,nGYp,nHf9,gPBF,exg1,bt/9,8qE1,7FFF",
                    "658c": "nG43,kCVx,j4/P,j5s1,j5lH,cdOx,8pw9,66TN,j52X,c+xh,8pIF,67n1,lo1b,logV,j5rX,j6h9,mWdz,kDQV,nGVb,gPvp,9Y8F,4Cy9,ewGr,6Uox,gPiP,7FmV,cekP,cexp,67q3,7Fwh",
                    6400: "3QuX,5mlx,pbTx,jRNH,jSh1,cdyP,fhj1,ln+3,mVNx,pcmN,mVNr,mWax,jSG1,jSnh,g2eh,g2SV,jS/V,jSG1,fhEV,btgh,9XsV,g2Db,ceuh,btIp,btY1,dMxh,aIAz,7FFF,6Uor,3RwF",
                    "4e11": "66TH,68fh,fh0b,fhUx,mVib,mWdF,67Vp,mVKj,67n1",
                    5927: "ikdX,ilp1,pcgr,ewDp,aIo9,6U2F,3Qv1,gP9r,aIK1,6UNx,4Cy9",
                    5201: "mVib,mWjV,685V,4C99,7EKb,j5U9",
                    "627c": "3QuX,5mip,pbQp,jRNH,jSh1,bsGH,fhj1,4Bzz,8pV9,9XCh,mVHh,mWq9,btIj,c/yV,illV,ikYV,5mTV,4C61,4CrV,5nk1,7FVh",
                    6577: "m8gH,m92N,pc73,mVNx,pc0P,dLBV,cdF3,kCM9,kDix,cebx,fhvr,fgZ9,hzs3,hz+x,dLvz,bta1,bsJP,btvV,bt0z,6TYp,3QrV,9axz,9aTx,5mHp,3QQV,g2qH,orKh,kDy3,kD+h,kDQP,dMkN,7Fwh,3R7F,g2wX,aITp,7FFF,4Cy9",
                    9601: "4Bn3,kCM9,oq/j,lnTV,mVHb,mWjV,5ngV,3Rqp,gOSH,lo4p,j5v3,j5U9,gPfN,c+GF,hzR3,ewMN,c/px,cd+X,cer9,7Ft9,7F11,cd/1",
                    "8d35": "mVlj,mWdF,j64F,j5cp,mVlp,pcgr,gP9x,gOtH,gPRh,7EQr,dLsx,dMhF,7FFF,ceez,7F7h,5mrN,3Qy9,8q8H,3RCV",
                    "540e": "4BdH,8pw9,cdLp,mVlp,mVQF,nH8V,iknj,ils9,3QQP,dLBV,dMkN,3RzN,67jP,682N",
                    "554a": "bsMX,nG11,nGdx,cdOx,cdC1,3QTX,orf1,orrx,kDfp,ikJh,ewGx,c/3F,aIxx,9Xz9,9XRP,jSCV,jSPp,btIp,btvV,orxH,os49,orZP,685V,5n4p",
                    8584: "4BgP,aI8x,dLpj,g1HV,kCIX,ikqx,mV8P,mWq9,pc0P,kD2V,pcsX,kDv1,loqb,jSVF,j6h3,j5lN,9XvX,gOZ1,gPEN,aJ0N,fh+H,fhj1,c+Q1,c/vN,kDrP,aIGV,9axz,9bzh,aIWr,5n7x,3Rk9,7F7b,5mNF",
                    "75c5": "3QrP,7EKh,9Xgp,dLsx,m8zx,m9B9,pcdj,mVWV,cdvH,fh6x,gOJj,jRU1,ikwH,ils9,ikYP,dL+V,btsN,8p/p,c/9P,9bgx,4BIX,ewu1,excV,685V,4Cix",
                    "573a": "pbTr,aI8x,9aeP,ce29,j4/P,j5v9,nGwb,nH5N,g2eh,g2W1,685V,4Cfp,7EZP,9XFp,c/6N,g2x1,g2Jr,btFh,7FmV,3QX9",
                    7840: "m8gH,m8P9,m8zr,c+kN,5mfb,g1Rh,g281,7F11,7EKh,nGCr,g2kx,g2SV,nH8V,c+Zj,5mHp,6891,c/BX,3RG1,pczb,67Sh",
                    6020: "pcab,jR+h,kDKF,mW13,j6e1,hzBr,hAnx,c/px,c+Dx,hzBx,4BdH,9aoh,9XsP,5muV,4BJ1,4C99,7Fzp,aIuj,8q8N,9Y8z,5nn9",
                    "4e01": "m8jP,m9B9,m8/z,67CF,4BJ1",
                    "8d30": "lnuP,loM9,orQr,m9uV,j563,j5KN,g2qH,g1O9,7EKb,dLmh,dLXN,7FjN,cd+X,7EZV,67dF,3QrV,8pV3,4C61,pcw3,c/jh,8qrx,3RG1,6V4h",
                    "6d6e": "oqYb,lnTV,j4/P,g1Xx,66ZX,c+GF,mVE3,orZV,kD93,hz+x,logP,il39,gPvj,loFV,g2b3,g2SV,ceo1,5mX1,3R4x,aIhP,aJa9",
                    "57c2": "j4/P,j5v9,pbTr,aI8x,9aeP,bta1,nGpX,nHih,kDcb,kDU1,c/C1,c+Wh,kDch,gP3b,gPL1,nGS3,cer9,7FmV,3QNN,btgb,7FmV,3RJ9",
                    "9ab8": "hzvb,nG7h,nGq1,hzO1,jR+b,jS7F,hzEF,ew1P,hzlV,hzUh,3Qy3,ew89,ewu1,67n1,3QNN,bsQ3,bta1,9aGX,9al9,orAP,m9ip,kDcb,kDX9,kDBb,ewGx,fhRp,hAqz,dM8h,9aTx,dMqX,aIZF,67IV,3Q+h,9bdj,3RJ9",
                    "5f27": "mV8P,mVxV,hzKV,hzp1,c+r1,c+MV,67gN,4Bn9,4BFP,8pYh,ce8p,m8Vp,nH8V,m98X,9XV1,5mNF,6UKp,9bab,5naF,mWar,fhUx,btOF,5nn9",
                    "60d1": "lnuP,loM9,pczb,m9oF,pcpP,hAb1,c/mp,9Yi1,c/Ih,j67H,btsN,dLpj,j5cp,j5Bp,fhsp,fh3p,bsMX,dLUF,4BjX,9arp,9XsP,5muV,4BJ1,4Cch,6UKp,aIuj,7FjN,9bjz,5nn9",
                    "808c": "4BgP,9Xa9,cdIh,nG7h,nGq1,67n1,4Bwx,c+xb,c+Q1,ikCX,ikkh,3QTX,6Uox,9XLF,nGFF,nH2F,5naF,4CoN,4Cy9,6V4h",
                    "4fed": "fgPH,kCSp,pbWF,kCSj,3QEp,g1+z,j5yh,pct1,mW4h,j67N,g30h,gP3b,gPBF,c+PX,7Fdx,dLXH,9b79,c/vH,5m+9,5muP,5nn9",
                    5065: "fgPH,kCPh,pbWF,kCPb,3QBh,mVrz,mVKp,fhcN,fhsp,aIrh,4BzF,cdUH,7F49,4B/N,4CBh,m8/z,m9uV,g2SV,g2nF,j5Bj,j6kh,c/0r,c/C1,9XFj,9Yl9,pczb,6UHh",
                    "895f": "pbNb,m8CF,kCCH,kD2V,c+kN,g1Uj,3QEp,ewej,bt6V,g24P,c+GF,m8LX,m95V,pcgr,fhvx,hzNX,m8Yx,kDir,ikYV,m98X,m9y1,pcFr,g2Jx,gPiP,m9lx,kDHr,gPO9,dLLb,dMnV,aIkX,aJa9,4BFP,9aWF,aIN3,5m+9,3R7F,9bgr,6891",
                    "5c3d": "9aeP,ewhx,nGdx,nH2F,hAqF,hzBx,hA4H,c/mp,9Yl9,c+Wb,9XV1,9aDP,4C99",
                    5014: "g1HP,lnHp,pbWF,lnHj,3QEp,5mlr,9Xw1,ce29,nGt9,nH8V,jT31,jSk9,gP9r,cebx,ceGN,gPEN,hAe3,4C99,9XCb,4BPh,4Cv1,9YhX,3RG1",
                    "4fca": "g1EH,kCSp,pbZN,kCSj,3QEp,pcmH,j5s1,kDNN,nGVb,j6e1,dLyH,hz+x,il6b,dMr1,9aGX,fhBN,c/3z,c/sF,9bah,67FN,3QQV,aIxr,6UE9,5naF,3RJ9",
                    "77ff": "m8jP,m8Vp,m8Cz,gOGh,c+kN,674b,gOGh,gP09,8pV9,8pzh,pcsX,m9oF,3QNH,67th,9aTx,dLUF,kDlF,kD+h",
                    9988: "ik7H,pbTx,lnEb,lnX1,iktF,hzyj,4Btp,9aDV,mVHb,mWjV,j6aV,j5yh,mVHh,pcsX,gPm1,gOSH,gPO9,7F7b,dLLh,dMkN,7FIN,cer3,6UuN,5mKx,3QU1,8qlb,3RG1",
                    8354: "m8jP,m9B9,pc3X,jSh1,pczb,jSMh,iknj,ilfF,fhUx,dL+V,kDir,gP3h,ewqV,c+u9,bsMX,btjp,5mEh,3QNN,3QrP,677p,9axF,dLyN,btpz,btUV,5ndN,3Rnh,3R4r,6UxV,9XY9,dM8h",
                    "75e2": "jRQP,gOGh,cdvH,fh3p,4BgP,9Xgp,mVlp,mWq9,pcgr,mVWV,ikwH,jSCV,fh9z,fhI1,j5Bj,3R1p,7EQr,fhsp,dLOj,9XRV,il6b,9X/h,kDNH,5ndN,3Rqp",
                    "998f": "hzlP,pbWF,lnHj,ln+9,ikzV,gOMr,4Btp,9aK9,orDX,nGzp,fhsp,j5NV,kDoH,hAe9,nGVb,nHf9,g2W1,fhXF,nH2z,hAkp,fhL9,4BSj,c+Zp,c/C1,5nk1,5mHp,9aQj,9bt1,c/jb,5n1h",
                    9686: "3Qy3,nG49,nGq1,hzyp,dLBV,bta1,aIhV,9arp,j5v3,mVQF,pcpV,mVQz,mWgN,jSPp,hA7V,g2b9,loaz,il6h,gPEN,g2Z9,fhvr,fh+N,9aGX,dLOp,ce8j,ceJV,9aQj,9bpV,4BIX,4Cy9,fhHX,4C61",
                    "9ea6": "mVbX,mWjV,jS1j,jSYN,g1HP,g2Z9,pcgr,g2kx,7EDX,c+Q1,g2eh,c+PX,c/px,9b79,6UrF,5mEh,3Qy9,aIo3,6UuN,5n1h,3RG1",
                    "8c29": "oqYb,lnTV,hziH,hzEF,4Btp,8pV9,oroj,orZV,j6aV,j5Bp,orop,lo4j,loFV,gP03,gPO9,c/F9,c+T9,gP09,gPfH,c/6N,gPyr,c/px,aIrb,aJ0N,6UKp,4C2V,3QX9,9XLz,6UB1,3RJ9",
                    "76bf": "6TIH,6V4h,6TVb,m8th,m9oF,6UQF,m8P3,6Uf9,m95P,6UxV",
                    6479: "nFZP,nHf9,pc3X,lnX1,pcsX,lok1,kCVr,kDHx,g2Jx,g1Xx,kCVx,ikqr,ilcx,dLfX,dMr1,g2eb,cdUN,9X3V,dM53,btOF,9Yl9,bt6P,cer9,9axz,9bgx,6TS3,6UWV,btpz,5mNF,3QU1",
                    "634f": "jRNH,jSh1,cdvH,fhj1,pbQj,5mip,3Qv1,nGwb,nH8V,excV,ewAh,nGwh,j5yb,j6aV,9XvX,9Yi1,4BFP,4Cy9,c/g3,4C99",
                    "62e7": "kCFP,kD99,cdvH,g2b9,pbWz,5moF,3Qy9,pcpP,m9ip,ikMj,lo4p,loM9,ils9,ewtX,exj9,ewZb,5n1h,3R4x",
                    "670b": "4BgP,9aoh,bsWp,nGap,nGwh,67th,4BFV,iknj,ikJh,c+Wb,c+Ap,3R1j,7FjN,9XRV,nGLV,nH8V,685V,4Cix,ikYP,illV,c/yP,c/9V",
                    5564: "9ahX,mVc1,mVuN,bt3N,bsN1,mVTH,pcw9,mVHh,mWjV,dMnV,dLLh,mVHh,ikJb,illV,mW13,g2x1,cehN,9aQp,9aDP,9bt1,dMbj,3Rqp",
                    "4f01": "fgSP,hzBx,jSh1,orrx,jSJ9,g2Z9,fhcH,5mrN,ikSz,5mNF,c/3z,c/sF,5m5P,5nn9",
                    6070: "fgSP,kCM9,pbTr,3QHx,lnQH,gOZ1,ikD1,fhiX,ikPx,orE1,kDEp,hAwV,g30h,g2kr,g2PN,3R1j,ce8p,ceJV,3RCV,5mHj,5ngV",
                    "6c42": "pcw3,mWdF,kCIX,kDU1,pcgr,5mKx,3QU1,hzyj,ewu1,7EDX,ewGx,j5Er,dM21,9Y5x,6V19,dM1X,hAtN",
                    "53d6": "nFWH,nGFF,nGaj,9arp,nGwb,3Q+h,j5cj,j5yh,ewej,ewAh,8ppP,aIAF,m8/z,m9uV,fhXF,aIQh,67zx,m92H,ewT1,9bgx,68c9",
                    "6da6": "oq/j,lnTV,ikdX,g1+F,4BjX,cdRF,3QX3,kD99,ori3,loaF,mVWP,mWn1,5nk1,3Rtx,ikPr,ilfF,dLRr,dMex,8p/j,8quF,ik/X,8qf1",
                    "4f1e": "hzlP,jS7F,lnX1,pcgx,lok1,jSPp,hAD9,gOMr,cd/1,cenX,gPBF,9aeP,9bw9,jStr,3R4x",
                    "5ba1": "pcab,mVTN,ikh3,m8q9,m9uV,illV,6TYj,hzyp,hAqF,6UQF,dLpj,dMhF,9arj,9bjF,kDir,3R4x",
                    7701: "j52X,mVuN,pcgr,ikPx,mW4b,j6h9,dL9H,fh9F,hz+x,kDBh,3QKz,fh9F,fhXF,3RwF,cdRz,ceDF,9axz,9bjF,5moz,5naF",
                    "9f20": "ori3,mVf9,gOD9,gPBF,nH2F,nGFF,jRX3,jSk9,jSwz,jSVF,fh0b,3QBh,7EZV,ewkz,c+Q1,bt0z,9Xw1,fhsj,4BSp,7Fq1,ewMH,c/g9,aIDH,9b79,fhRj,8qrx,3RCV,7FVh",
                    6055: "lnuP,loaF,gP3h,dLyN,bsN1,orbP,hzyp,dLUF,c/cX,m991,m9uV,c/yV,ewSX,excV,4BjX,9Xjx,9XvX,5my1,4BM9,4Cch,6UNx,btmr,8qbV,9Y8z,685V",
                    "68ad": "jRQP,jSk9,pbTr,3QHx,aHUP,hzBx,gOMr,c+Q1,pcsX,j5v9,jS/V,mWar,ils9,dLEX,ikVN,hAkj,dMu9,fhHX,ceeF,9aH1,c/6H,c/vN,8qlh,5mKx,3QNN,aIDH,7Ft9,5naF,3RJ9",
                    "736d": "hzlP,nGjN,nG0X,hzBx,6T/x,5mip,4Bk1,aHUP,ewhx,lnTP,logV,hzKP,hA7V,c/9V,c+MV,hzKV,oroj,3R1p,6U2z,ce8p,btjj,8q8N,j5U3,orTF,m9ij,m9y1,hAqF,9b73,hAe9,hAA1,9bt1,fhXz,8qrx,67Vp,3RaN,6UTH,3RJ9",
                    8146: "4BgP,9Xa9,nG49,nGmV,67jV,3QHx,c+MP,c+u9,hzs3,hzKV,9XFj,lo4p,loFV,9YeV,g2SP,g2hp,pcpP,9XRV,pcCj,9Y2p,9Xw1,9Yl9,3QX3,8q8N,8qoj,3RJ9",
                    "6c40": "oqYb,lnTV,ikaP,fh9F,4BjX,cdUN,m8P3,m9B9,m9ij,4Cfp,3RaN",
                    8155: "4BgP,9Xa9,mVf9,mVxV,67jV,4Btp,hzs3,hzKV,c+u3,c+MV,pcmH,m9fh,ikJb,lo1h,loJ1,ilp1,btd3,ikSF,g2kx,g2x1,btvV,8q5F,4BM9,cebr,9XON,9bjz,aJ3V,gPHV,gPsh,5n1h,4Cfp,4Cv1,68c9",
                    "5dcd": "oqYb,lnEh,loCN,orWN,pcgr,lo7x,j52X,jSnh,gOwP,gP3h,j5iz,c+GF,c+nP,gOPF,dLLh,dLyH,8pw9,67q9,aHUP,aIrh,aIo3,6U2F,4Bk1,kDy3,ikYV,btmr,ikPx,illV,c/yV,c/0x,g2kr,g2SV,il6b,c/g9,6UrF,3QX9,btFb,5n1h,4Cfp,4CrV,68c9,btRH,7Fwh,8qAV,9YeP,7FP1",
                    "8bef": "oqV3,kC/N,gOtH,gOJp,4Btp,8pS1,nGwb,nH5N,j67N,j5yh,nGwh,g2b3,g2SV,cdXP,ceQ9,g2wX,aIK1,8q8N,67zx,3QQV,aIJX,7Fzp,4Cy9",
                    "7a00": "mV8P,ori9,ik7H,ikD1,nGdr,3QHx,9X0H,ikqx,g1Xr,dLF1,oroj,jS/V,j5Bj,pcLN,hzR3,hAD9,jSJ3,fhBN,aIl1,67zr,c/0x,c/C1,7FP1,67Yx,fhOb,3Rnh",
                    "8c61": "j52X,pcah,mVxP,mW4h,jSzN,jS4r,jSYN,g2PN,g1Xx,jS4x,jSwz,g2kx,ewAh,c+MV,cdIh,ewAb,ceeF,aIDN,7FmV,5mQN,3Q+h,8pw3,9XsV,ce8p,4BjX,6U8V,aIDN,ceuh,ex6F,btFb,7FFF,5nn9",
                    "5c0f": "8ppP,cdIh,j5fx,pcgr,5mKx,3QU1,j5+j,9bw9",
                    "755c": "pcdj,mVTN,m8jP,m9B9,m8Yr,hzBx,ikVN,kDEj,dLmh,ex6F,gPsb,c/yV,3QEj,bsWp,btRN,3RzN,8pCj,8qxN,5mij,5ndN,btpz,5mNF",
                    9009: "nG0X,jS4x,gOtH,gOJp,7ENp,5m91,7ENj,4BPh,4Cy9,ikzP,nGzp,kD93,kDQV,pcsX,gPm1,gOSH,gPL1,8pOP,aIup,c/0x,gP9x,gPsb,9bah,8qop,8qxN,btY1",
                    "6d0b": "oqV3,lnTV,j4/P,gOMx,5m8X,c+GF,pcgr,m95V,kDBb,orWN,kD93,kDX9,fhpb,fi1V,aIhP,aJdh,kDy3,3Rk9",
                    6447: "jRQP,jSh1,pbTr,5mlx,3Qy9,bsJP,g281,mVE3,orZV,ln+3,ikPx,lodH,il6h,hAnr,m9y1,c+T3,hA1F,fhvr,fi1V,bt6P,bu2h,fhL3,5m+9,9XCb,4BPh,685V,9YeP,3RCV",
                    "6bb7": "5m5P,9al9,aI2h,nG7h,orop,kCPb,kDch,fhph,fh0h,ikkb,ikJh,cdIb,ce5h,7F7h,6Uf9,5moF,g2hj,hA4N,j5NV,nGLV,nH2F,hAqF,gPEN,gPRh,ewGr,excV,9Y5x,6UB1,3Q+h,dLUz,9XV1,7Fzp,682N,4Cy9",
                    5370: "orrr,mVf9,6TS9,aIxx,gOD3,gP6p,3RdP,mVWV,mWn1,9bt1,7FCx",
                    "828b": "mV8P,mWq9,pc0P,j5oV,pcw3,j5U9,hzyj,hAqF,cdyP,ceQ9,hA1z,5mNF,3QX9",
                    "6d74": "oqV3,m8FN,ikaP,g1Xx,4BgP,cdOx,jSgX,oruF,orNj,kDU1,c+MP,fhsp,jSCV,g2Jx,dMu9,3Q+b,ce5h,ceGN,3RzN,67tb,682N",
                    "6cfd": "oqV3,m8FN,ikdX,g1Xx,5m8X,cdRF,nGpX,nH2F,lotp,hA4N,ewnN,nGwb,jSwF,gPvp,fi89,c+T3,c/vN,9aAH,9bw9,g2wX,3Rh1",
                    "94e1": "ikaP,or2x,kCM3,kD61,gOzX,gOVV,cdyP,cd/1,gOJj,4Btp,7F11,aIo3,mVE9,mW19,aIN9,j5Hz,8q2x,3QU1,9XOH,67Sh,m9lr,9Y5x,os0X,5nk1,3Rtx",
                    9635: "3QuX,nG11,nGq1,gOMx,dLBV,aIl1,8pCp,ln+3,loM9,pcsX,ewAh,exg1,9aNb,9bw9,j5Xb,3Rnh",
                    "5e27": "8psX,jRU1,jSh1,9Xw1,8pLN,pbTr,3QHx,pcw3,j5U9,mW13,mWq9,9aTr,j5Ex,j6aV,9bpV,fhOb,9b79,5mQN,3QX9,7FCr,3RJ9",
                    "716e": "mVib,mW7p,pcgr,jStx,jRNN,jT9h,ew1P,g21N,ikSF,lowx,nH8V,8pLH,g21N,g2MF,9bjF,c+JH,c/sF,9XpH,9Y8F,3QuX,7EQx,7F43,3R1p,7FmP,4Cch,7FIH,4Cy9",
                    "4f4f": "ev+H,or5F,jS1j,3QEp,pcjz,lon9,jSaH,jT31,c+PX,c/yV,5moz,5nn9,jSFX,5mX1",
                    "5de6": "jRQP,jT69,oroj,gOZ1,c+JN,9Xgp,6TLV,dLBP,dMkN,5mij,5nn9,dLXH,5mQN",
                    5527: "9X3P,m8jV,m8zx,bsZx,bsJV,j5NP,j5s1,ewtX,ewPV,nGLV,nGq1,67n1,9XON,cebr,7Fq1,7FLP,9Yl9,nHf9,nGYp,3Rqp",
                    "67cf": "3QHr,pbTx,jRNH,jSk9,aHRH,j5fx,gOMr,dLI9,3R1j,kDfp,kDU1,3RG1,688X,67wp,dLOj,dMr1,kDoH,orKh",
                    "5fc5": "9X0H,hzyp,nGpX,j5KN,fhUr,9bw9,m9lr,hAe9,dLXN,9aK9,6T/x,5m5V,j5oP,5muV,4BM9,4C99,7FCx",
                    "85cf": "mV5H,mWth,pc3X,jSh1,pcsX,jSG1,lowr,jSYN,j6dX,j5fx,8pFx,3Qy9,5m2H,7EE1,bsN1,bsGH,bsZx,j52X,fgW1,fh6x,g2tP,g24V,6U8V,6UxV,cdXP,cekV,9XRV,9XsV,g2hj,ce8p,9XFj,6Ulp,4C2P,9bdp,g2SV,kDy3,dM8h,8qrx,3RCV,68c9",
                    "6c60": "nG43,kC/N,hziH,ewep,3QrP,bt0F,fh9z,j6aV,btRN,9Y2p,pcsX,7Fq1,mVE3,67q9,4BVx,4CoN,7FS9",
                    "7c07": "jRTX,pbWF,m8wj,m8Yx,m8FH,j5v9,jStr,pcw9,m95P,m9B9,m9fb,j64F,j5fr,gOVV,g1HP,g2eh,g1Xr,9arp,7EKh,4BgV,cdOr,ce29,5my1,4Bwx,dLLb,j5NV,g2nz,g2Z9,aIAz,fhI1,c/9P,c/C1,9aQj,9bw9,c/jb,8qi9,5mQN,3Q+h,9bab,67/F,4Cy9",
                    5730: "ik7H,ikD1,oq/j,8pCp,6TIH,9Xw1,g27X,j6aV,aJ3V,9bgx,pcw3,8qi9,nGzj,5mHp,3R7F,3RCV,6V4h",
                    6566: "or2r,m8IV,m8gH,m8/F,j563,j5yh,g2eh,g1O9,j569,dLfX,dLLh,bt3N,67gN,4Bqh,8ppP,aIxx,orKb,fhvx,j5NP,j6kh,j67H,c/sF,8qlh,3Q+h,fhBH,9XY9,6UNx,4Cy9",
                    "575f": "ik7H,ikD1,pbTr,9Xjx,7ExH,btd9,orxH,kDBh,jSk3,jT69,jSYH,dMex,9b41,3QNN,gP9r,cehN,8qlh,4Cy9",
                    "809b": "3QrP,9Xa9,nG49,nGq1,5my1,3QKF,c+u3,c+Q1,ikCX,ikh9,lo4j,loM9,5mEb,5nqh,loqb,5n1h",
                    5173: "nGaj,kD61,j5Er,orKh,j563,j6aV,c+nP,c/F9,j5Er,c+Zp,8pS1,3Qv1,cebr,9b0V,67Yx,4Cy9",
                    "8d3a": "m8mX,m8Yx,hzXp,g281,pbZH,jS7F,g1HV,mVZX,mWn1,hAA1,hAb1,mV+1,7ETz,ewkF,ex6F,7FFF,ceez,7Fap,5muV,3Qy9,7FmP,3RJ9",
                    "56de": "4Bn3,mVf9,mWjV,4CrV,6TS3,6UWV,ikCX,il39,btC9,bta1,ikD1",
                    "94be": "j4/P,pbTx,m8tb,m8Sh,hzoX,hzO1,c+nP,c+T9,hzBr,4Bwx,8pV9,9XIr,mVNx,mWn1,9Yi1,hz+r,hAA1,btXX,btmx,nGVb,3Rnh",
                    "622a": "mVf3,mVTN,pc3X,jSh1,jRNH,jT9h,cdvH,iktF,g1Uj,3QEp,ikzP,g2b9,fh3j,fhBN,cdLj,ceeF,9XLz,9Xgp,677j,67FN,fhiX,67n1,nG/r,m9y1,pcw3,ewW9,8qop,3RCV,6V4h,3R4r,6UHh,fi1V",
                    "77e9": "hzlP,pbTx,lnEb,lo4p,c+kH,c+Zp,lnNz,cdRF,8pCp,3QrV,cdRz,6Ulp,mWq3,mVQF,4BYF,4CBh,hA1z,hAA1,btY1,btpF",
                    "63a7": "jRNH,jSdV,bsGH,fhfV,pbQj,5mip,3QrV,pcmH,m9fh,ikG3,m8P9,m9y1,ilp1,dLI3,ikVN,il6b,g2PN,dMr1,btgb,btUV,btyX,4C61,4BFP,4CBh",
                    "956d": "ikaP,pbWF,lnEb,lnX1,hzs3,hzO1,c+qX,c+Q1,hzBr,4Bwx,8pS1,nGwb,nHf9,nGVb,ewZh,hzUb,lo1h,loM9,hAD9,ikPr,ikYV,g2tP,g2kx,il9j,illV,g2SP,g2Gp,3Q+b,c+Wh,c/C1,3RG1,9aNb,9bt1,5mEb,5nk1,c/jb,5n1h",
                    9716: "nG43,nH8V,hzoX,lny1,loJ1,hAA1,nGCr,g2kx,j5cj,j5yh,gOJj,gP3h,j5QX,j67N,gPlX,gPEN,c+qX,c+Zp,fhcH,3QNN,66WP,c+JN,8p/p,c/3z,c/F9,fhOb,3Rnh,5mEb,8qbV,c/jh,8quF,68c9",
                    "4ed1": "ew1P,j5oV,orrx,j5U9,gPBF,exj9,g24P,5muV,4BJ1,4ClF,7FIN,9XsP,dMbp",
                    "79d8": "mV8P,orf1,nGdr,3QHx,ik7H,ikG9,9X0H,ikqx,gOMr,dLF1,9XvX,g2hp,nGFz,kDBh,kDlz,67CF,5mQN,5naF,8qAV,5muP,9b0V,c/jh,gPyx,orWN,ex9H,9Yoh",
                    5462: "9ahX,mVc1,mVxV,bt6V,bsN1,4Bwr,7F11,btgh,nGwh,nH8V,hAA1,hzUh,g2tP,5mTV,4C61,4CrV,6V19,aIGP,dMr1",
                    5486: "9X6X,m8n1,m8FN,bt3N,bsN1,hzNX,lo7x,pcmN,lo7r,loFV,aJ3V,9bgx,ce8j,cexp,hAkp,hzXp,5mHp,4BVx,4CrV,6V19",
                    "66dd": "8psX,nG11,nGgF,9XmF,9X71,gOzX,gOPF,orlb,orWN,j67N,j5yh,orlh,m8Sb,m9rN,j5Hz,dLUF,j5+j,dMbp,gOYX,gPL1,dMu3,dLBV,dLUz,9Xw1,dMbj,9Yl9,c/cX,5mX1,3R7F,aIuj,9aWF,5mB3,8qf1,aIZz,8qlh,9b3X,5ngV",
                    "79e6": "mVbX,mWn1,jR+b,jSYN,gOwP,gPO9,pcgr,jSqp,gP09,dLvF,bsJV,gPiP,c/px,aJa9,c+MP,c/g9,9Xdb,9YbN,c/0r,3R4x,4Bn3,9XIx,8qbP,4CrV",
                    "84c9": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,lo4j,j5KN,fgZ3,ikh9,illV,fi1V,dLpj,gOZ1,gPp3,dMkN,9aeP,bt3N,fhvx,cer9,9Yl9,3QKz,9XmF,9Y5x,3Rtx,5moz,5n7x",
                    "97f6": "pbTr,mVB1,m8mX,m8Yx,kCPb,hzEF,hzHH,kDch,hzlP,hA1F,3QBb,ewbh,ewAh,67th,674h,aI2b,aIrh,nGFz,nHc1,gPHV,g2Jx,ewGr,hAb1,jSJ9,nGVh,3RaH,dLXN,dMnV,3RCV,67FH,685V",
                    "5b88": "pcab,mVTN,ikh3,m8q9,m9uV,illV,fgSP,fi89,j5U3,5m+9,3R4x,c+Gz,9aNh",
                    "7d20": "mVbX,mWjV,jR+b,jSVF,gOwP,gPO9,pcgr,gP9x,gP9r,c+Dx,dLXN,g2Db,ce8p,9Xdh,aIWx,c/g3,9bmN,4BjX,8pS1,9XIr,4BVx,3QX9,8qeX,4Cv1",
                    7279: "g1EH,m8th,ikdX,ikG9,pbWz,3QKF,aHUP,ewx9,lo1b,loFV,pcw3,gPp9,gP03,gPRh,ce5b,ceQ9,9XFj,6UxV,gPBz,5naF,3Rk9",
                    "62d3": "jRQP,jSk9,cdyP,fhj1,pbTr,67ax,4Bn9,m8P3,m9B9,m98X,hA4N,c+Zp,aIl1,3R7z,fhyF,fi1V,3RCV,67Cz,685V",
                    "545c": "8pw3,m8q9,m8IV,aIhV,aH/9,pcw3,m92N,g2Db,hAwV,m9uV,m8Yx,c/0x,c/F9,6891,5ngV,4CoN,3Rqp,7EZP,8qrx",
                    "53bf": "bt0z,nGgF,nG/x,btLx,jS7z,jSSx,fh9z,fhUx,bsGH,bu2h,btgb,4Bn9,67Yx,9XRP,3RCV",
                    "80f8": "4BgP,9Xa9,nG49,nGmV,5muV,3QHx,hzs3,hzKV,c+u3,c+MV,gOYX,orxN,lo7r,loJ1,6891,3Rqp,hz+r,aIQh,il9j,aIxx,ewDj,8p/p,8qrx,fhUx,6UNx",
                    "6cbf": "oqYb,lnTV,ikdX,g1Xx,5m8X,c+JN,ewqP,gP3h,j5Bp,nGzp,nG/x,gPyx,g2MF,g30h,3Q+b,c+Wh,c/vN,3RzN,67tb,682N",
                    9091: "nGaj,nH2F,j64F,j5cp,nGap,bsQ3,btRN,g2PN,g1O9,6719,5mfh,4Btp,4CoN,5ngV,7FS9,g2kr,btmx",
                    "8fc2": "nG0X,kCYF,g1EH,g1Up,7ENp,66+1,7ENj,4BVx,4Cy9,mVAX,mWgN,g24P,g2W1,mVZX,8qf1,6Uox",
                    "8f7d": "mVf3,mVQF,pc3X,j5s1,j4/P,j6h9,g1KX,g2nF,hzHH,bsTh,btmx,7EDX,8q5F,dLEX,3QU1,pcsX,dM59,9bdp,3RG1,6V4h,orQr,loFV,4BYz,9Y2p,g2SV",
                    8087: "pbTr,mVxV,fgPH,ikh9,mVf9,mVHh,ikJh,j563,j5yh,kDir,pct1,mVWP,mWn1,hA4H,mWgN,logP,gPO9,g1Uj,g2Jx,btLx,bsWp,dLcP,dMu9,9aob,9bpV,6TOX,6V19,hz+r,3R4x",
                    "91cd": "mVib,orWN,jRQP,jT69,hzBr,hAqF,btOF,bsZx,hzBx,ewhr,ex6F,8pCj,8qxN,4BgP,4Cy9,mVNr,4BVx",
                    "68d5": "jRQP,jSh1,pbQj,3QEp,aHRH,j5cp,gOJj,dLF1,pcmH,m9fh,ikJb,lo1h,loJ1,ilp1,gP9r,gPHV,c+Wb,c/F9,5mxX,aIAF,c/jb,5n1h,3RaN,aIZz,68fh",
                    "66e6": "7EAP,m8jV,m8zx,9Xjx,9X3V,g1HP,g1Xx,pc73,mVKp,mW7j,pcIF,mWmX,mVuN,ikYP,mVWV,kD2P,kDNN,iloX,ikwN,dMqX,dLyN,g24P,g2nF,g2eb,aIrh,c+T3,aIeN,aIDH,c+Zp,9XOH,9XpN,9XCb,7F11,7FgF,67CF,4BSp,4BJ1,gPyr,fi1V,gPp3,ceuh,6UNx,4CrV,4Cy9,6V19,ceJP,7Fzp,4C2V",
                    6556: "3QrP,8pCp,ewkF,bt0z,btjp,c+Wh,4BCN,ewJz,ew1V,ewqP,pc0V,ikPr,ikh9,m8mX,m8/F,orKb,g2nF,j5QX,j6kh,j67H,aIWx,67M1,3R4x,fhEP,9X/h,67/F,3RJ9",
                    "82ef": "m8jP,m9B9,pc0P,j5oV,pcw3,j5U9,gPKX,gOA1,jStr,3R4x,7EDX,cdXV,gP9x,c/d1,aIWx,7FS9,8pIz,8qrx",
                    "6b65": "mVuH,gOSN,pcjz,gPcF,loaz,loFV,gPRb,gOtN,ewqP,9X71,fhyz,67CF,3QrP,5mEh,67CF,9bah,btOF,dMnV",
                    "8fb0": "5m5P,9Xdh,cdLp,nGap,nHc1,jSdP,jSVF,fh3j,fi51,fhiX,4BJ1,7FgF,fhvr,9XV1,67/F,4Cy9,9XY3,c/sF",
                    5507: "4Bzz,aIbF,aIWx,4Cix,67Yr,67dF,bsJP,fh0h,hzyp,nGap,nHc1,kC/H,kDNN,hAzX,hzyp,hzKP,cdXV,dLRx,hz+r,dM59,aJa9,dM53,g2MF",
                    5230: "nG0X,nGLV,nGpX,gOD9,hA1F,kDcb,g2tV,gOYX,6Uc1,cdF3,cehN,66ZX,6UxV,m9fb,aIQh,os0X,6891,3Rtx",
                    7763: "pbZH,jSaN,jRNN,jSzN,nGjH,nGzp,iknj,fgSV,jSdP,fhfV,ewep,j5v3,g2nF,nGFz,nH8V,jSVF,gPp9,ewGx,nGIH,jSJ9,gPBF,exj9,3QHr,c+Dx,c/sF,3RwF,aI8r,aIZF,7FFz,7EQx,5mlr,5naF",
                    "65b9": "pc73,m92N,kCFP,kDX9,kD93,cd/1,6T/x,3QrV,fhm3,fhXF,6UNx,5n4p,4C2V",
                    9644: "3Qy3,nG49,nGq1,hzyp,dLBV,aIl1,9arp,g27X,orxN,j5Bj,3R1p,ikVH,ilvh,ewPP,btFh,pcLH,5ndN,3Rnh",
                    "83c7": "m8jP,m9B9,pc3X,j5s1,pcsX,j5R1,j5fr,9al9,67q9,fgSP,fhm9,9aAN,4Bk1,g2eb,g2Z9,j5U3,btC9,3R4r,btmx,btRN,3RzN,5mKr,5ndN",
                    "822a": "pbZH,lnHp,4BdH,9Xa9,lnB9,lnX1,67n1,4BzF,ev+H,ewDp,j5fr,g21N,cdOr,9aAN,pcpP,lotp,kDcb,kDX9,3QX3,67CF,8q8N,gPfN,gPyx,5n7x,4ClF,4Cy9,7FVh",
                    5524: "9ahX,mVc1,mVuN,bt3N,bsN1,jSk3,pcmN,mVQz,mWdF,il39,btgb,ikJh,iliN,btRN,bt6P,bt/9,g2A3,9XRV,6Uox,3QNN,aIN3,7FCx,4Cy9",
                    5180: "mVbX,mVB1,jRQP,kD61,pc3X,j5s1,pcmH,kDoN,jSCV,jS/V,m9y1,mVTH,mWgN,iknj,ilfF,dMhF,dLpp,iknp,g1Uj,g2MF,ikPr,dLRx,bsQ3,btUV,8pmH,8qKh,dLBP,8pOV,dM53,8qi9,3QuX,7F49,7FmP,3RG1",
                    "6d47": "nG43,lnNF,hzlP,fh3p,4BjX,cdOx,kD2P,mWjV,ewqP,hAb1,loCN,pcgr,kDoN,hAe9,excV,gPO9,cdXP,ceN1,cebr,8q2x,67th,3QKF,cer3,5m+9,4Cch,4CrV,6V19",
                    "7a98": "pcab,mVTN,j563,mVf9,mWjV,j6aV,lo1b,j5fx,logP,j61x,hzyj,hAqF,btOF,bsTh,ew1P,exj9,hzNX,9XmF,7ENp,4BgV,3QNH,8pLN,8quF,3RwF,5mrH,5naF",
                    "62f7": "jRNH,jSh1,pbQj,5mip,3Qv1,c+kH,fhj1,m8Sb,m9ip,pcpP,hA7V,hzNX,hAD9,nH8P,fhEV,8pOV,dLXH,dMr1,dM53,9XRV,9YeV,5ngV,3Rnh",
                    "6f9c": "oqYb,m8CF,ikdX,g1Xx,4BjX,c+GF,3QQP,lnTV,ori3,lo7x,mVTH,mWn1,5nk1,3RwF,j5yb,j64F,lojX,5mX1,gP6j,gPBF,ceDF,ce8p,gP6p,fhvr,dLXN,c/g3,fhRp,67q3,9aWF,ceo1,9bdp,7FFF",
                    "4e24": "nFZP,nHf9,4Bqb,j59h,j6aV,685V,4Cch,nGt3,hzR9,ewu1,9Xjx,fhm3,c/0x,nGOX,dL+V,8p/p,dL+P,9Y5x",
                    9646: "3Qy3,nG49,nGq1,hzyp,c+Q1,aIo9,8pOV,7EQx,lo1b,loJ1,g27X,g2Z9,pcw3,67P9,c+Zj,67wp,685V,c/yP,3RCV",
                    "5a92": "jRQP,jSh1,c+MV,9axF,674h,3QrV,pbTr,cdC1,7F11,m8LX,m9B9,pcgr,fhvx,fhXF,pcIF,j5Er,j64F,ce23,ceQ9,fhL3,3Rk9,5mxX,8q5F,cer9,7FFF,5nn9",
                    6155: "mV8P,mWq9,pc3X,kD61,pcsX,kDv1,kCYz,kDHx,fhUx,fh9F,kCYF,iktz,ilcx,c+qX,c/C1,ewAb,bt3N,8ppV,cer3,9YbN,8qH9,5mfb,9aDV,btjj,5mHp,3QU1,8q8H,5n1h,9bdj,5ngV",
                    "6ca4": "oqRX,lnNF,ikaP,g1Up,4BgP,cdLp,mWmX,mVB1,5my1,5nn9,j5Er,ewZh,9bpV,8p/j,dM59,kDKF",
                    "5e73": "nG43,nH8V,kCPb,g24V,fhHX,kDKF,c+nP,c/F9,nGCr,3R4x",
                    5899: "j4YH,j5lN,pbQj,9Xgp,8pmH,aIeN,m8IP,m9y1,pcsX,g2x1,kD93,hA1F,hAkj,kDNN,g21H,g30h,3QTX,dLF1,dMnV,3RCV,5mxX,5ngV,btmr,btFh,7Fwh,7Fdx,btmx",
                    5189: "pcgr,btmx,3QEj,lnHp,lozF,5naF,3Rk9,bsGH,bu2h,g1Uj,g2MF",
                    "5c71": "j59b,674h,685V,oruz,67CF,jS/P,3RCV",
                    "5f0f": "jRQP,jT69,ew83,ewJF,ewqP,6U8V,66ZX,7FjN,orKb,loCN,pcpP,gPm1,9X/h,3RCV,6V4h",
                    "79c1": "nG43,pcdp,ikaP,ikSF,nGjH,3QNN,9X3P,ikwN,hzHH,c+Zp,nGYj,6Uih,8qE1,fhUr,68fh",
                    "63a2": "jRNH,jSdV,pbTr,5mlx,3Qv1,bsJP,fhj1,jSk3,nGt9,nHc1,jT31,gP3b,kDoN,kDEj,gPL1,dLEX,dMxh,hAaX,3Rh1,67jP,9aQp,dM21,aITp,8qxN,68fh",
                    "5f92": "j4/P,pbWF,c+nP,j5lN,fh3j,3QEp,lnWX,loJ1,g21H,g2Z9,pcsX,g2x1,g2A3,4C99,btC3,btUV,4BCH,9Xz9,dLLh,9Xz3,5mTV,4C61,4Cy9",
                    "8c13": "oqYb,lnQN,hziH,hzBx,4Btp,9Xw1,ori3,os11,hAA1,hzR9,ori9,kD93,kDU1,orH3,hAe9,3Q+b,ewAh,excV,5ngV,3RwF,8qAP,8pYh,btgb,btUV",
                    "8f96": "kCFP,kD99,or5z,dLg1,ewx9,hzEz,3QKF,8ppP,9XCh,pcpP,mW4h,ikMj,m8Vp,m9y1,ilp1,ikSz,iliN,fhvr,fi1V,ce8j,ceQ9,kDBb,9X/h,3R4r,9XIx,9YeV,3RCV,5mKr,5ngV",
                    "85aa": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,jS4r,hzKV,hzoX,hz+x,g1Rb,dLvF,dLEX,g2eh,dLcP,dLUF,aHXX,aIxx,dLBP,5muV,3QEp,5m5P,8pzh,8pYb,67zx,3R1j,8qbV,ikYV,jT31,dL+P,dMu9,dMhF,3RwF",
                    5440: "9X6X,nG11,nGjN,cdUN,cdC1,nGwb,nHc1,loaz,fhph,fi89,nG/r,5n7x,3RdV,6T/r,9XFp,fhRp",
                    "533b": "mWmX,mVf9,5mc9,5nn9,g1+z,lo1h,ikCX,iliN,dLvz,dMnV,ikVH,c/3F,9XCh,6U2F,cekP,9Y5x,7FLV",
                    "548f": "7EDX,lny1,lnQN,9XpN,9X71,pcjz,m9ip,jSnb,jSJ9,5m+9,3R7F,fhiX,fhBN,aIxx,7F49,5mrN,hAe3,ceAx,9bmN,68c9,ex0j,hAA1",
                    "8d8a": "kCIX,kD99,or5z,g1+F,g1HP,g2eh,g21H,67gN,bt3H,btgh,4BgP,c+xh,9al3,4BM9,4Cy9,cenX,9aTx,jStx,jT31,nG/r,loFV,orH3,gPp9,c/jh,9Y5x,7FIN,9Yi1,7FmP,btIp,g2PN",
                    6218: "oq/j,ewep,jS1j,jSqp,4BjX,ew51,ewx9,6Uf9,6TP1,mW4b,jSYN,g2b3,ilp1,orxH,c/9V,9b79,67Yx,3RCV,6V19,4BPb,7Fq1,btLx,ex9N",
                    "7eb8": "pbWz,hzlV,hzHN,ln+3,bsN1,ce29,66WP,7F49,nH8P,nGCx,3R4x,7Ft9,fhvr,fi89,mW4b,aITp,67/F,3RG1,6V4h",
                    6349: "jRQP,jSk9,cdyP,fhj1,pbTr,5mlx,3Qv1,nGzj,nH5N,hAtN,hzXp,nGzp,hAaX,5mX1,dM1X,dMnV,4BCH,btjp,9aNb,4C61,4Cy9",
                    8299: "3QrP,5mlx,7F11,btjp,j5Ex,j5oP,pc0V,pcw3,j5U9,m9Eb,m8gN,c+kH,c/Ih,gPBz,gOJp,btmr,8qbV,5n4p,3RJ9",
                    2163: "5m8X,5mrN,5mij,nGap,nG0X,nGjN,nGpX,nGIN,nGVb,nHc1,nH5H,5mX1,nGwh",
                    "68d2": "3QEj,pbQp,bsGH,iknp,hzyj,ewqV,jRNH,jSh1,mVAX,mWn1,jS/P,jSk9,gOVP,gPO9,aJdb,ceJV,g2Dh,aIbz,c+T9,fhvx,j5KN,pct1,btgb,btOF,7FOX,7EZV,3RgX,ewT1",
                    "6fd2": "oqV3,lnNF,ikaP,fh3p,4BgP,cdLp,m8IP,gOVV,gOMr,gPfN,orlb,gP3h,kDcb,kDoN,dLBP,9aux,gP03,8pV9,3QEj,6Uf9,9XIx,c/6N,mVTH,mWq9,mWar,j5Xh,8qeX,j5R1,j6aV,8qAV,g2Jr,9bdp,5mX1,3R7F,7FFz,4Cy9",
                    "63ba": "3QuX,5mlx,pbTx,jRNH,jSh1,cdyP,fhj1,pcpP,jSnh,kDNN,nGYj,jS/V,gOVP,gPO9,j5NP,g2kx,dLI9,cdUN,gPsb,dMhF,c/yV,bt/9,9Xz3,btpF,dM59,btLr,8q8N,6Uf9,3QQP,5mTV,7FCx,9YeV",
                    "81ed": "pcdj,mVB1,mVox,dLsx,dMhF,mWdF,mVB1,jSgX,jSVF,hAqF,hzO1,aHUP,aJa9,dLRr,9XFp,67jV,3Qv1,aIxr,6UE9,3RG1,dL+P,aITp",
                    5446: "or2r,orQx,j61x,j5fx,or2x,ew1P,exj9,j5Er,3R4x,66WP,9XpN,ewDp,ewJz,9bdp,6U+1",
                    6389: "jRNH,jSh1,bsJP,fhfV,pbTr,5mlx,3Qv1,pcsX,jSG1,mVZX,mWn1,jSnb,jSYN,c/vN,c+Wh,jSnh,g2eb,g2PN,9aDP,9bw9,c/cX,3Rh1",
                    "904f": "mVbX,j5iF,g1EH,g1Up,6TYp,5m5V,6TYj,4BM9,4Cy9,mVHb,mWgN,gPEN,gP3h,mVHh,jSnb,jSYN,cdXP,gP9x,ewAb,excV,7FLV,67Yx,ewSX,9aQp,cekV,9Y5x,ce5b,7F7h,7Fwh",
                    "80a4": "4BdH,9X71,c+u9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,c+MP,c+u9,kDfj,kDU1,fhm3,fi89,pcw3,c/d1,8q8N,3QX9,ewW3,aITp,6UTN,4Cy9",
                    9694: "4BjX,nG11,nGmV,hzyp,c+MV,bta1,9arp,nGt3,nHf9,kDfj,kDNN,hAtN,hzXp,kDfp,4BPb,ewAh,exg1,6891,4ClF,c/3z,aIK1,9XY3,c/px,9XIr,9Y8F,9XY3,5m+9",
                    "523d": "g1HP,iknp,nGq1,mVAX,j5NV,gOJj,gPcF,c+qX,c/9V,c+PX,674h,6UrF,aIrb,5mTV,loqb,9bah,orZP,685V,3Rqp",
                    "547c": "9X6X,mVc1,mVuN,bt3N,bsN1,mVE3,os11,kD93,g2nF,g2Gj,kDQV,dLBP,dMxh,mW13,5m+9,3R4x",
                    "963f": "3QuX,oqS1,orbV,iknp,aIhV,9arp,9XFj,j5Bp,j5U9,btC9,btjp,nGpX,nHf9,nH5H,6UTN,5n1h",
                    "96f9": "oqV3,orZV,oruF,g2nF,gOzX,lny1,loJ1,gPL1,gPBz,gPiV,j5NP,j64F,gOJj,gP3h,j5yb,j5cp,g27X,bsN1,ewnH,ex6F,8qrx,7Ft9,7FOX,4ClF,4BFV,5moF,cdRF,cekV,8qbV,8pIF",
                    "5e76": "pbWz,lo1h,pcFr,jSzN,jRX3,jT31,c+nP,c/F9,jSgX,cd/1,8pLN,4Bn9,jSJ3,3Rk9",
                    "5c1d": "nGaj,kD61,pcgr,j5Ex,kDuX,orTF,g1O3,j569,j6aV,g2SV,g1+z,g2Gp,btXX,bsN1,btgb,5mip,5n4p,67Vp,9b3X,3RzN",
                    "50a8": "fgPH,or5F,kCSj,3QEp,mVxP,jSnh,hzEz,hzO1,67n1,9aQp,m8Yr,m9oF,pcw3,hAe9,hzUb,hAGh,nHbX,gPsh,aIrh,3RdP,dL+V,dMnV,3RCV,9XRP,9YeV,685P,67IV",
                    "803d": "mV5H,mVKp,mVf3,8pw9,mVAX,4BJ1,ikh3,ikD1,dLEX,dLj9,7ExH,aIxx,g2hj,jSqp,jS/V,g2SV,orH3,fhL9,9XRV,4BSp,ewZb,5n1h,4Cfp,4Cv1,6V4h",
                    "76ef": "66WP,nFZV,nGmV,7EZV,7EAV,ikaP,ikzV,dLBP,dLcV,mVE3,mWth,mW7j,5n4p,3RdV",
                    "53d1": "nGgz,ike1,ils9,orrr,ikJh,c+MV,6TLV,fhm3,fhXF,aIN9,7FgF,5my1,3QEp,c+T3,9aZN,6UHh,4Cy9,orH3,loCN",
                    "6daa": "nG7b,lnTV,hzlP,fh6x,4BjX,cdRF,pcmH,m9fh,lnWX,loJ1,jSqj,g2qN,fhL3,jSVF,ewqP,exmh,3Q+b,btgh,btRN,3RzN,67tb,682N",
                    "803f": "mV5H,mVNx,mVf3,8pw9,mVAX,3QU1,ikCX,ikh9,dLj3,dLF1,7ExH,aIxx,jSzH,dLOp,pczb,dM8h,c/g9,9b0V,3Q+h,fhOb,kDU1,dM8b,8quF,4CBh",
                    "5b69": "mV8P,mVHh,ikqx,67ax,4Bk1,cdvH,g281,orAP,lotp,kD93,kDX9,kDuX,fhph,g2Dh,ilfz,9aH1,dMkH,9b79,4BJ1,9bab,4Cv1",
                    "864e": "pcgr,kDix,mVNr,mWgN,hAwP,kDX9,kCSp,cdLp,9Xdh,4BgV,g1+z,hAqF,j5Er,ewGx,dLUF,dMex,fh+N,3QHr,67q9,8pYh,btgh,btC9,5m+9,4Cch,4CrV,6V19",
                    "970d": "oqV3,orZV,ikh3,m8q9,m9uV,illV,orrr,hz+x,jS1j,jSk9,hzyj,hzR9,jSCP,jSVF,hA7P,hAqF,aHUP,g21N,c+Aj,3QEp,gP6j,ewPV,ewkz,excV,bsZr,btRN,8pFr,8qxN,5mlr,5nk1,ewJz,5mNF",
                    9965: "hzlP,or2x,kCPb,kDch,hzKV,gOMr,4Btp,9aK9,3QTX,6Uox,9XLF,nGFF,nH2F,5naF,4CoN,4Cy9,6V4h",
                    "526a": "pbZH,mVHh,mVWP,pcCp,mV8P,mWq9,cdLj,jS1p,jStx,dLRx,ce29,hzyj,hz+x,fh3j,fhvx,jSJ3,ewW9,kDNH,dMkN,cexp,9Xdb,9YbN,5naF,3Rh1,9XFj,67jV,3Qv1",
                    8230: "m8wj,pbWF,4BdH,9Xa9,m8q9,m8M1,67n1,4BzF,ev+H,ewDp,jS4r,gOSN,c+Dr,9XpN,btpz,nGFF,nH5N,btRN,j5Xb,cer9,8qbV,3Q+h,ceub,5n1h,3Rtx,3RG1,68fh",
                    "7d27": "oqYb,gOGh,pbZH,gOSN,ori3,orZV,kDBh,gP6p,nGCr,kDrV,il9p,gPO9,gP3b,dLpp,dLUF,g2Db,9Xgp,aIZF,c/jb,9bpV,4BgP,8pOV,9XLz,5mNF,3QX9,8qi3,4Cv1",
                    "52b2": "mVbX,mVKp,ew1V,j5lH,fhyF,c+qX,c/0x,c+JH,6U5N,5m5P,7Fdx,j5Hz,j6e1,6891,4Cfp,pczb,cer9,7FmV,3QX9",
                    7235: "nG0X,orWN,mVor,kD2V,mVKj,kDoN,kDuX,mWax,kCM3,kDQV,gPHV,gOD9,kCM9,gOYX,kD61,kDrP,gPiV,9Xa3,9XCh,ewAh,ew89,4Bn9,6Uf9,cdF3,ce5h,8pOP,5mHp,c/0r,c/Ih,g2Mz,5naF,3Rk9,aIDH,7Ft9",
                    "7ae3": "oqYb,kC/N,j4/P,j5v9,g1KX,aI5p,gOYX,7ETF,66WP,8pYh,pcsX,j5Bp,jS/V,mWar,j6h9,dLI3,ikYV,hAnr,exj9,fhL3,9XFp,c/9P,c/vN,8qop,5mTV,3QX9,9XOH,67Sh,3RG1",
                    7736: "66ZX,mVc1,mVxV,7EZV,7EE1,ikdX,ikzV,dLfX,dLBV,nHf3,nGzp,5mHp,5nqh,jSwz,jT31,ewMH,exg1,9aWz,9bt1,jSPj,9bdp",
                    6127: "fgSP,jRX9,pbTr,3QHx,kD2P,gP09,mVTH,pcw9,ce5b,mVHh,mWn1,exg1,ewAh,j5yb,j6e1,mW13,ewT1,9aTx,67wp,3QU1,c/jb,5n1h,4Cfp,4Cv1,6V4h,c/vH,8qrx,9bw9,aJ6X,7FVh",
                    "540f": "mVbX,mWq9,j5cj,j67N,dMkN,dLpp,j5cp,pcjz,dLUF,9XIx,7F7h,67jV,4Bk1,cdUH,8pYh,67M1,3RJ9",
                    "7acb": "nGwb,kDoN,j563,j6aV,g1+z,8pV9,5mNz,gPyx,5m5P,5nn9",
                    7559: "orlb,nG49,g1O9,j5v9,lnTP,ikJh,oruz,orZV,hAtN,g2Dh,orH3,jSG1,hA4N,g2hp,3QBb,ewbh,ex9N,3RzN,aI2b,aJ0N,5mfb,5ndN,ewGr,5mKx",
                    5784: "kCIX,kDU1,pcgr,kDfp,ikJh,fhfV,c+Ap,bsN1,orH3,m9lx,j5KH,c/6N,cekV,ceGN,fi51,dLI3,j61x,9arj,9bjF,4BgP,4Cy9,cebr,4BVx",
                    5356: "mVib,mWjV,pcgr,jStx,jRTX,jT31,g2MF,hzEz,fhph,ewej,btd9,aHUP,aJa9,ikVH,btpF,9aTx,6Uf9,3Qy9,8qbP,3RG1",
                    8292: "lnuP,loM9,pc3X,ikD1,pczb,il6h,ikJb,fhBN,dLcP,dMu9,dLsr,4Bwx,4CrV",
                    "654f": "j4/P,pbWF,lnEb,loaF,7Fgz,7EH9,ikkh,ikMp,67th,4BCN,dL9H,dLXN,gOPz,ewu1,bt0z,9aDV,gPfH,pcCp,jSFX,jT69,jSYH,ceDF,9Y5x,7Fwh,3R4x,fhHX,aIQh,6UQF,4Cy9",
                    8611: "mV8P,mWq9,pc0P,kD2V,pcw3,kDy9,lo4j,jSzN,jT2X,jR+h,9Xa9,4BdN,gOMr,gP9x,ikG3,ce29,c+Dr,gP09,g2b3,ewGx,gPfH,gPL1,il6b,ceuh,c/3z,gPsh,c/C1,aJ6X,aI5p,aIrb,7EWN,5mfh,3QTX,8pS1,8quF,3RwF,5mxX,5naF",
                    8042: "nG0X,nHc1,nGgz,fh9F,nGVb,c/jh,kCYz,kDBh,il6b,iktF,ew1P,g2W1,cdBX,ce5h,8pOV,67ax,3QrV,aI2b,67th,ce8j,ceGN,7Fwh,4BVx,ceez,7Fwh,4Cv1",
                    "6cde": "oqRX,lnQN,ikaP,g1Xx,4BgP,cdRF,pcmH,m9fh,hzR3,m8P9,m9y1,hAA1,ewtX,exj9,ewW3,5m+9,3R7F",
                    "9e4f": "4BgP,9Xa9,nG49,nGgF,6U2F,5mfh,ikh3,iktF,c+Gz,c+u9,4BCH,9Xw1,nGq1,nGCx,67zx,4BPh,ikCX,ikPx,c+PX,c/0x,pcFr,mW4h,kDBb,ilfF,g2Jr,hAA1,mWn1,mV+1,c/d1,c/F9,5nk1,3Rqp,9aZH,9bmN",
                    "813e": "3QrP,9Xdh,nG7h,nGq1,5my1,3QHx,ikkb,ikD1,dLmb,dLF1,m95P,pczh,m8Yr,m9y1,dMr1,dLRx,m8Yx,ikPr,ilp1,m9fb,fhL9,c/d1,9aTx,9aNb,9bw9,dMbj,3Rqp",
                    "542f": "pcab,m991,4BgP,9Xgp,dLsx,lnKx,loCN,g2PN,g1Xx,3QTX,bta1,btUV,3RCV,5mxX,5ngV",
                    "6d3d": "nG43,lnQN,ikaP,g1Up,4BjX,cdRF,gOSH,jSqp,orAV,loqh,j64F,gPO9,g2hj,g2PN,3Q+b,ce5h,ceGN,3RzN,5mEb,5ndN",
                    "56da": "3Qy3,nG49,nH8V,3RCV,6713,685V,lo7r,g2kx,dLLh,9aux,g2kr,9Y5x",
                    "5a36": "oqRX,orxN,oq/j,fh3p,oroj,c+Zp,lnHj,lo4p,iknj,ikMp,ew1P,g2qN,nGFz,nHc1,j64F,dLXN,nGOX,hAkp,fh+N,dMu9,bsJP,bt/9,c+Zj,8pIF,6UuN,3RG1,3Qy3,4BFV,67zx,btFh",
                    "82e5": "m8mX,m9y1,pc0P,j5oV,pcw3,j5U9,g1HP,g2Z9,8ppP,ikPx,3QNH,cdUN,ceDF,3RwF,67gH,67/F",
                    6563: "lnxX,lo7x,hzlP,hA1F,pbTr,hzBx,pc73,hzR9,3Qy3,ew89,ewDp,5mHp,3QQV,cdF3,ce8p,9al3,9aQp,g2nz,orKh,jSFX,jT69,jS/P,g2PN,aIWx,6UE9,3R4x,g2tP,aIQh,682N,4Cy9",
                    "5a76": "j4/P,j5s1,c+MV,8pFx,5m91,or2r,cdC1,7F49,pcpP,mW7p,j5yb,m8Sh,m9y1,j6e1,7Faj,gP6p,gPHV,7FLV,c+Zj,c/yV,9aQj,9bpV,jSJ3,3Rk9",
                    "76db": "bsJP,ewbh,g1Up,lnHp,loJ1,iknj,ikMp,fhsp,dLBV,pcCj,mWdF,orxH,fhOh,btUV,dMxh,cebr,fhOh,j67N,4Bwr,aI8x,aIZF,4ClF,aIo3,4BM9,4C2P,aIGV,4BgP,4Cy9",
                    "5c5e": "5m5P,9al9,ewep,oq/p,orZV,loFV,lnHp,ikzP,j64F,g27X,g2MF,c/sF,c+Q1,g281,3QNH,aIeN,aJ71,5nk1,3Rtx,ikVH,7FjN,6Uib,7FCx,9bdj,6UQF",
                    5237: "66WP,aI2h,g1Up,nGap,nGLV,j5NV,j5cp,67dz,fh9F,fhEV,8qbV,6UrF,hzUb,3Q+h,m9lr,aIWx,os0X,5nk1,3RwF",
                    5506: "8psX,m8n1,m8FN,aIeN,aHY1,pcsX,j5v9,jS/V,mWar,ils9,dLEX,ikVN,hAkj,dMu9,fhHX,ceeF,9aH1,c/6H,c/vN,8qlh,5mKx,3QNN,aIDH,7Ft9,5naF,3RJ9",
                    "631e": "j4/P,j5s1,pbTr,5mlx,3Qv1,bsJP,ewqV,mVAX,jStx,g27X,g2hp,6Ulp,5my1,6Ulj,4C61,4Cy9,j5KH,j6h9,orNj,g2Gp,btC9,8q8N,g2Gj,ceGN,9bt1",
                    6311: "jRNH,jSdV,pbTr,5mlx,3Qy9,bsJP,fhj1,kD93,gP9x,9XsP,dLXN,pcmH,aIDN,8q5F,67wp,3QQV,pczb,67Sh,4Cfp,4Cv1,6V4h,hAqz,kDU1,ewZb,aJa9",
                    "5ef7": "mVbX,mVE9,fgW1,fhm9,aIhV,6T/x,4BgV,c+u3,8pIF,4BPh,4Cy9,m8Vj,nH8V,gP3b,gPL1,9XFj,9YeV,mW13,9XY9",
                    "6c6a": "nG43,kC/N,hzlP,ewhx,4BgP,cdUN,m8IP,m9B9,ewx3,excV,5moz,5nn9,m98X,5mX1",
                    "5fae": "j4/P,or5F,cdvH,iktF,fh0b,3QBh,nGmP,j5oV,j5NV,nGLV,pcdj,j5Bp,g1+z,g2tV,67ar,9aH1,dLF1,dLUF,6UrF,9XV1,fhEP,orQx,j5Xb,j6kh,j6dX,btRN,67Sh,5mX1,3R4x,fhOb,9Y5x,6UTN,4CBh",
                    6614: "lnEb,loCN,gOwP,gPO9,pc3X,gOZ1,pcw3,gPp9,3QHr,dLsx,dMex,3Rtx,9Xjr,9Y5x,5mlr,5n7x",
                    "606f": "pcdj,m8M1,m8zr,m9lx,ceAx,cdOx,m8zx,j5fr,j61x,g1Xr,g2Jx,5m5P,9Xjx,9XsP,4BFV,3QU1,3Rk9,67Vp,aIuj,7FmV,9Y5r,5nn9",
                    8427: "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,j5cj,j64F,dMhF,dLpp,g1HP,g2Z9,lo7r,3R4x,cdOr,677p,3Qv1,6U8P,aIo9,aIJX,7Fzp,ceGH,3RzN",
                    "5b5d": "mVlj,mW19,j4/P,j6h9,pcdj,j5Bp,cdyP,fhfV,hz+x,jSG1,orWN,fhiX,fhUx,cehN,5mQN,3Q+h,9Xdb,9Yi1",
                    6064: "ev+H,jRX9,pbQj,3QEp,jS7z,gOZ1,jSwz,orE1,5mB3,jSk9,jS/V,5ngV,jSzH,5mQN,jSPj,5n4p,5moz,5nqh",
                    7663: "kCFP,gOGh,cdvH,ewep,4BgP,8pzh,cdLp,m8wp,m9B9,pcgr,mV+1,gOSH,lo1h,j5rX,j5KN,g2hp,g24P,g2qN,9aZN,9aDV,g24V,cdXP,cehN,g2eb,9aNh,5mlr,67FN,jSJ3,gPvp,g2Mz,jT31,g2wX,g2Z9,cenX,ceQ9,8qbP,8qKh,g2Jr,3Rtx",
                    9633: "4Bn3,nG49,nGt9,hzBx,dLF1,ce5h,aIl1,9arp,4BSj,nGzp,nH8V,4CrV,g2hj,g2SV,7Faj,7FLV",
                    "5c27": "kCIX,mWjV,dLj3,gP9x,kDKF,pc73,jSqp,g2tV,ewZh,dMkN,gPL1,cdyP,ceQ9,3QuX,67gN,9aK9,ce5h,cekP,5mTV,4C61,4CrV,7FS9",
                    "97f3": "pc73,m92N,lnEb,loFV,kC/H,hzR9,gPfH,kDEp,g1EH,g30h,3QHr,c+Dx,c/px,3Rtx,9aur,9bgx,5mlr,5n7x",
                    "82f1": "m8jP,m9B9,pc0P,j5oV,pcw3,j5U9,bsZr,gOMx,gPyx,btLx,bsJP,bt/9,jStr,aIup,7F11,5mlx,3Qv1,btmr,8qbV,67Vp,3RG1",
                    "90c1": "lnrH,lodN,ew1P,hzyp,lnNF,pc0V,3QEj,hzyp,hz+x,5mKx,3QU1,dLpj,dLRx,9Xgj,9XIx,3Rk3,mW19,mWn1,g2Jx,ceQ9,9Yoh,9bw9,8qE1,7FFF",
                    "5bd3": "pcdj,mVTN,ikdX,mVc1,mWn1,ilp1,jS7z,jSSx,dMex,dLvF,jS7F,gOPz,gPyx,jSwz,6UrF,67gH,7Fwh,9b3X,67Yx,3QBb,aI2h,aJ3V,5ngV,3Rtx",
                    "8d3c": "aH/3,nG49,nGq1,aIl1,jS7z,aI8x,6TVh,4BgV,9axz,6Uf9,4BM3,8q2x,btpF,hA1F,dLLb,dM59,5mQH,9bdp,c/vN,gPL1,jT63,jSnh,orTz,m9uV,pczb,c/mp,682N,3RJ9,68fh",
                    "95f8": "3Qy3,kCM9,oq/j,lnQN,mVHb,mWjV,5ngV,3Rqp,ikzP,il6h,aIQh,aIhV,ikzV,ewqP,ewZh,ikPr,5mKx",
                    "84b8": "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,jS4r,jSSx,gP9x,btmx,9Xz9,g1O3,g2eh,cdRF,9X3V,g2kr,cexp,aJa9,dM1X,gPHV,9aur,9bdp,3QrP,7EQx,6UbX,3Q+h,6UuH,3Rk9,7Fwb,3RG1",
                    "75c7": "jRQP,gOGh,bsJP,fh6x,3QrP,6TYp,9aux,m8zx,m9B9,pcgr,mVWV,hzKP,hAA1,hAaX,5mX1,cenX,ceJV,dLLb,5mEh,5moz,5nn9",
                    "62c4": "jRNH,jSh1,pbTr,5mlx,3Qy9,bsJP,ewu1,orxH,loqh,jSnb,jT69,c+Wb,c/C1,4BM3,4Cy9,jSJ3,4C99",
                    "6ce8": "nG43,kC/N,ik7H,fh3p,4BjX,cdRF,pcjz,loqh,jSdP,jT69,c+T3,c/C1,5mrH,5nqh,jSFX,5mX1",
                    "4f50": "fgSP,orbV,jS4r,3QHx,jSdP,jT69,8pLH,fhvx,orAV,ewGr,exg1,ewZb,5n1h,5mB3,5nn9",
                    7960: "3QEj,g1Up,cdXV,cdvH,jSdV,jRNN,lnNz,pbK9,mVE3,mWn1,5nk1,3Rqp,6Uib,fhph,fhOh,9bah,9aNh,j5rX,j64F",
                    "767e": "4Bwr,ikqx,ilcx,4Cix,7FCr,7EQx,dLsr,dMex,ikCX,nGCx,nFZP,nHf9",
                    "8f9f": "4Bqb,c+xh,c+Wh,6Uih,6TVh,9X0H,cdC1,ew89,nG49,nGwh,hzUh,hzs9,pcsX,mW7p,m9B3,m8Yx,jSwz,g2x1,fhRj,jS/V,fhpb,fibh,9XFj,9Yl9,fhOb,3Rnh",
                    "64cd": "pbQj,5mip,3QrV,jRNH,jSh1,bsGH,g24V,kDfj,orop,orQx,kDHx,kDfp,ewtX,ikD1,ikVN,ewMN,ewu1,ewW3,il39,illV,excV,ewW9,bt3H,bt/9,dM1X,3Rh1,5mrH,btz1,7FFF,4Cy9",
                    "8fdf": "oqRX,kCYF,gOwP,gOMx,7EQx,5m5V,7EQr,5mHp,5nn9,8pLH,c+Wh,gP6p,nGzp,nH5N,gPEN,gP6p,ewW3,8qE1",
                    "4fc3": "g1EH,pbZN,lnKr,3QHx,nGwb,nH5N,hAtN,hzUh,nGwh,hAaX,67M1,cenX,ceN1,5moz,8pS1,dLLh,aIrb,5mHp,5nqh",
                    8482: "mV8P,mWq9,pc3X,jSh1,pcw3,jSJ9,lo4j,j5HF,ikdX,ilp1,hzKP,fhph,fhBH,hAhh,bsMX,ew51,exg1,btY1,5mlr,bsZx,btOF,6UQF,6UE9,ewGr,3R4x",
                    "987f": "lnrH,lo1h,ikaP,cdyV,c+T9,ikG3,btd9,pbTr,5mlx,9Xz9,nGzj,nHf9,nGYj,j5R1,8q5z,j5HF,j6aV,9bpV,gPsb,9X/h,7Ft9,5mQN,3Q+h,8qrr,4CBh",
                    "711a": "lnuP,lo4p,pbZH,dLyN,fgSP,lnQN,jSaH,gP6p,loaz,loM9,pczb,dM8h,fhsj,loqh,jSMb,fi89,cdUH,8pCp,dLUz,8p/p,67n1,3Qv1,9bab,c/sF,9XLz,7FmV,5n7x,3RJ9",
                    "7eb2": "or2r,hzlV,iktF,kD2V,cdC1,c+Q1,6TLP,9aH1,3Q+b,nGwh,nH8V,685V,4Cix,jStr,9Y8F,kDHr,9aTx",
                    "5b98": "pcab,m92N,hzoX,lny1,loJ1,hAA1,3QKz,hzEF,hAkp,dMbp,dLvF,9Xmz,9Y8F,3RwF,67dz,67/F",
                    "563f": "8psX,nG11,nGgF,aIbF,aHY1,nGt3,nH8V,gPHV,gP09,nGt9,lo4j,ikVN,il6b,lozF,nGOX,9XV1,dLI3,dMnV,9XsP,9Yl9,4BFP,8pYh,8q5z,4B/N,8qlb,4Cfp,8quz,4Cv1",
                    "6bc1": "or2r,mVc1,g1L1,g2eh,orlh,or8N,jRTX,jS7F,jSaH,jSnh,c+kH,c+Zp,c+Gz,7ETF,66WP,9aQp,gP9r,j5NV,orAV,orQx,ilcx,hAqF,hAD9,fhvr,fi1V,9bdp,67FN,3QX9,ewJz,9b41,67Yx,3RJ9",
                    5047: "g1EH,pbWF,lnHj,3QEp,3QTX,orf1,orxN,ikVN,ikD1,ewtX,ewMN,9XvX,9XRV,orH3,orZV,hAwV,j5QX,j6aV,ewPP,exg1,9Y8F,6UHh,3R4x,dM1X,9bdp,682N,4Cy9",
                    "52ab": "kCIX,kDix,pbZH,fhcN,6TLV,8pYh,fgSP,fhyF,cd+X,6Ulp,j5Er,j6e1,5ngV,3Rnh,pczb,dM59,8qbV,3QX9",
                    "4e3e": "oq/j,kD2V,pcab,loaF,j5KH,orTF,j52X,j6e1,j5yb,gOVV,ewhx,cdyV,j5KH,g2Dh,dMkN,c/F9,dLvz,dMex,9ahX,9bt1,g2kr,3R4x",
                    "62a0": "jRNH,jSh1,pbQj,5mip,3QrV,aHRH,fhj1,mWmX,mVHh,4BPh,4Cy9,j5Hz,ewZh,9bmN,8q2r,aIK1,ex0p,jSYN",
                    "857e": "nFZP,nHf9,pc3X,lnX1,pcsX,lok1,kCPb,kDNN,ew4X,ike1,ilp1,exg1,kDir,cebx,g1Xr,g2eh,dLsr,dLLh,g2tP,g2MF,dL+P,dMhF,3QEj,bsWp,btOF,3RwF,8pCj,8quF,btmr,5mKx,5mij,5naF",
                    "4e34": "m8mX,7EE1,or5z,3QKF,g24P,lo7x,pcmN,lo7r,loM9,j5QX,g2Gp,3R1j,ewDp,excV,3RCV,5mHj,5ngV,ewW3,5m+9",
                    "6ca6": "oqYb,lnTV,ikaP,fh6x,3QrP,cdRF,gP03,jSwF,pcw9,nGOX,j64F,gPO9,gPcz,5mNF,4B/N,4CoN,5ngV,6U+1,aIDH,ex9N",
                    "89c5": "mVib,mVQF,nGVh,orWN,lnEb,ikwN,lo4j,ikVN,hAe3,m9rN,9Xgj,hzyp,hAqF,9Y8F,ewGr,9XFp,6U8V,3QrV,btpz,5mNF,4B/N,4CrV,6V19",
                    9981: "hziH,pbTx,kCM3,kD99,hzHN,gOJp,4Btp,9aH1,m8Sb,os11,jSnb,gPcF,logP,il6h,gPBz,kDX9,dLEX,dMxh,gPlX,9XFp,7Fwh,3RJ9,dMkH,7Fzp,5mTV,3Q+h",
                    5228: "gOwP,lnKx,or5F,lnKr,lodN,aIDN,9aNh,bsWj,btd9,gP09,gOJp,5mip,4Bwx,4BYF,7FmV,m9fb,9bah,orZP,5ngV,3Rtx",
                    7011: "oqV3,m8CF,ikaP,fh3p,4BgP,cdOx,nGpX,nH5N,j67N,j5s1,nGq1,lnWX,loCN,g24P,g2SV,dLvz,dMu9,j5Er,dLRx,j5Xb,dM8h,8pFr,dLRx,dM8b,9bw9,aIrb,9aWF,5muP,8qbV,cekP,5mTV,3R4x,8qbP,5ngV,7FpX,aIWx",
                    7434: "nG0X,nGwh,kCIX,kDch,hzlP,hzR9,nGgz,hzEF,nGFz,nHc1,kDoH,kDQV,hA1z,hAD9,nGVb,hAhh,bsJP,dLvF,hzXp,dM59,bt/9,dLLb,btpF,9Xgj,9X/h,3R1p",
                    8363: "mV8P,mWq9,pc3X,j5s1,pcsX,j5R1,ew4X,ike1,ilp1,exg1,c+u3,c/yV,g2kr,3R4x,5m5P,8pLN,c/0x,9b79,7FCx,6891",
                    "5c11": "dLcP,gOJp,lnQN,pcgr,9XIx,kDBb,hAtN,exj9,3QrP,4BzF,67wp,6UrF,9b79,c/sF",
                    "5bff": "m8q3,m9uV,ikkb,iliN,fgSP,fi89,pcjz,j5Bp,c+Q1,aIeN,8pCp,6TP1,aIkX,aJ71,9aNb,6UrF,ex0j,5n4p,3RaN",
                    "901f": "nFZP,jS4x,fgPH,fh3p,6TYp,4BgV,6TYj,4BPh,4Cy9,m8IP,m9y1,ikCX,iliN,dMkN,dLF1,ikD1,pcpP,67IV,8pOP,dL+V,8qAV",
                    "85e4": "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,4BgP,8pw9,9Xdh,jR+h,jSdV,67jV,4Bwx,g1Rb,g24V,bsTb,bt6V,jSnb,hA1F,hAkj,jSYN,g2eb,g2SV,dLI3,dMr1,jSJ3,fhEV,c/3F,btjp,9Xw1,dM8b,btOF,9bw9,9XIr,8q8N,5mB3,8qf1,cenX,5mX1,3R7F,9b3X,5ngV,8qoj,9Y8F",
                    "553e": "8psX,m8n1,m8zx,9Xjx,9X71,mVAX,nH5N,j5oP,j6h9,j61r,9Y5x,j5yb,9XCh,ewqP,exg1,9aDP,9bw9,mVWP,4C2V,4BFP,4CrV",
                    "94a8": "bsMX,btgh,7F7b,3QKF,gOPF,gOD3,gP09,lo4j,lnHp,hzlP,pbWF,pczb,lodN,fhRj,gPHV,loFV,loaF,dLUF,dMu9,68c9,3Rtx,9bmH,9aQp",
                    "817a": "4BdH,9Xa9,nG49,nGmV,67jV,4Bwx,ikh3,ikzV,dLBP,dLj9,pcsX,mVTN,mVKp,gP6p,gPHV,mWjV,mVTN,jSqj,jS/V,gPp3,67P9,3R7F,c+T3,c/6N,8q2x,5mB9,dM53,9Y5x,68fh,btLr,dMr1",
                    5308: "gOwP,lnKx,pc0V,lnKr,loFV,685V,5ndN,3Rk9,ikwH,aIDN,aIbz,ikVN,gOJj,7ENp,7Fwh,gPsh",
                    5944: "lnuP,loM9,oroj,jSh1,g1Xx,c+kN,lodH,hAhh,fh+N,dMu9,7ETz,g1+F,g2Gp,8qop,8pIF,c+Gz,c/mp,j5Er,5mKx,4BYF,4CoN,6U+1",
                    "5c79": "j52X,7EE1,8pV9,or2r,8pFx,jSk3,67q9,gP6j,kDoN,orE1,kDoH,kDU1,fhyz,fh+N,9XRV,6UrF,67zx,5mNF,4B/N,4CrV,6V19",
                    "6de4": "nG0X,lnHp,ikaP,fh3p,4BgP,c+Dx,orbP,lo4p,jS4r,jSCV,jSgX,dLF1,9XsV,7EWN,3QEp,fhiX,fhyF,67CF,4BM9,g2qH,j5U9,mW7p,jSVF,g2Z9,ewZb,btRN,9b3X,4Cv1",
                    "518d": "nFZP,nHf9,3QHr,jS4x,jSVF,5naF,3Rnh,fh6r,fhXF,bsGH,bu2h,nGCr,btmx",
                    "53ec": "nG43,nH8V,hAtN,g2Jx,fhI1,ew4X,gOSN,jSnh,nGCx,3QKz,c+GF,c/vN,3RzN,67dz,682N",
                    "4ef2": "fgSP,pc0V,kCVr,3QHx,9Xz3,jSk9,jT31,9Yi1,btd3,btY1,pcsX,3Rh1",
                    "8e2a": "oqV3,orf1,ikD1,ikh9,oqV9,ikqr,6T/x,dLsr,dLI9,ew83,6TS9,66WP,9aK9,pcpP,m9ip,ikMj,lo4p,loM9,ils9,gP9r,gPHV,c+Wb,c/F9,5mxX,9XLF,c/jb,5n1h,3RaN,aIZz,68c9",
                    "71ac": "3QrP,8pCp,8pRX,3Q+h,8q8H,3Rk9,aIZz,4CBh,aHUP,cdOx,gOPF,ewkz,ewDp,9Xz9,9aAN,gOtH,gPcF,gOSH,pbZN,jRTX,jStx,mVQz,mV8V,orKb,ikSF,kDuX,kD+h,kDNH,ex3x,btz1,9XLF,hA7P,c/mp,9Yl9",
                    "672c": "j4/P,j6h9,nGCr,4BVx,9aeP,c+JN,j5Ex,ewW9,ceAx,9bw9,9Xmz,9Y5x",
                    "7c3f": "pbWz,kCJ1,mVor,mVNx,mVuH,kD99,pcw3,kDlF,mVZX,mWq9,mW4b,kDKF,j59b,gOPF,g1KX,c+Dx,4BjX,aIbF,ikzP,ils9,jRTX,ilcx,kDrP,aIGV,aIkX,g281,g2PN,aJ0N,ewtX,ex9N,ceGH,cd/1,9aAH,9bw9,7F7b,5mNF,aIWr,4Cix,3Rk9",
                    "5c18": "ew83,lnQN,oruz,fhyF,lotj,fi51,aI5j,aJ0N,4BgP,4Cy9,dLUz,4BYF",
                    "6df3": "oqRX,lnNF,ik7H,fh3p,4BdH,bsZx,pcjz,m9c9,lnQH,loM9,j5v3,j67N,fh+N,fhm9,j5v9,c+MP,c/sF,9XRV,5mTV,3R1p,8pFr,8qH9",
                    "7a3b": "mVbX,nGt9,mVrz,3QKF,ikaP,ikJh,9X0H,iktF,gOPz,c+T9,mVKj,os49,kDfj,hA4N,lojX,hAkp,g2Jr,loJ1,fhHX,ewDp,3R1p,aIuj,aIK1,ewZb,exg1,3RG1,aJ6X,aITp,67wj,6891",
                    "6bd2": "mVbX,mWn1,kDNH,kCSp,hziH,hAGh,pcgr,hz+x,688X,67ax,ewhx,ex6F,5naF,3Rk9,aHRH,aJdh,dLLb,btsN,9XCb,6UuN",
                    "80aa": "5m2H,8pt1,cdF9,nG49,nGq1,67n1,4Bwx,ikh3,ikD1,c+u3,c+Q1,pcpP,lotp,jSnb,jT9h,jSFX,c/9V,7FgF,3QX9,fhHX,fi51,685V,4Cfp",
                    5987: "j52X,j5Bp,ewAh,9Xw1,6U2F,4Bk1,or8H,cdIh,6Ulp,m8/z,m9y1,4Cv1,fhyz,fi51,6Urz,6U+1",
                    5495: "9ahX,lny1,lnTV,aIhV,aHY1,jSgX,jT69,pcw3,dM59,3R1j,dLOp,dMnV,3RCV,67wj,685V",
                    "58d5": "ik7H,ikzV,oq/j,9Xgp,8ppP,bt6V,pcjz,mV+1,mVxP,mWq9,kD93,kDKF,hAqF,hzR9,kD99,c+MP,g24V,g2W1,c/C1,dLI3,dMkN,dLXH,9Xw1,6U8P,aIDN,4BIX,9b41,ceez,9XV1,6UHh,5n1h,3RaN,9XY3,ceGN,aITj,7FFF,5nk1",
                    "75ea": "kCFP,hzvh,bsJP,ewhx,3QrP,6TYp,9Xjx,m8zx,m9B9,pcgr,m991,g27X,kDoN,ikMj,ilfF,fhI1,aIo3,fhm9,fh+N,aJ0N,aIeH,aJdh,dM1X,7FjN,5mEh,3QKF,9XUX,67Vp,3RJ9",
                    "5b63": "nGaj,pcIF,nGCr,fhvx,jRQP,jT69,dLcP,g1+F,jSnh,jSzH,gPvp,dMu9,dLsr,dMbp,btmx,5mKx,3QU1,9ahX,9bt1",
                    "9a84": "nFWH,nGmV,ewqV,lnB3,ew89,ewx9,67n1,3QHx,8pmH,aIeN,mVKj,orZV,j5v3,j6h9,nGS3,hAb1,c+Wh,j5Xb,g2MF,dMu9,dL+P,7FmV,3Q+h,dMhz,3RwF",
                    "63ea": "jRNH,jSdV,pbQj,5mip,3QrV,c+kH,fhfV,m8IP,mVWV,hzKP,hA7V,m8Vj,3R1p,9Xmz,cd/1,hzXp,g2hj,cehN,ewPP,j5U9,pcFr,c/px,8qlh,4BYF,fh+H,j6h9,c/pr,7FIN,4Cy9",
                    "70e4": "dLcP,jRX9,pbTr,aI5p,6TS9,4BdN,bsZr,6Uf9,gOMr,kD99,lo1b,lotp,pcpP,hA7V,hzNX,hAGh,9XsP,cebx,ewT1,hAkp,nHc1,dL+P,dMr1,dM53,9XV1,9YeV,5ndN,3Rk9",
                    "8c30": "nG43,lnKx,hziH,hzyp,5mip,9XpN,pc73,mVNx,3QTX,lnX1,mVWP,mWn1,5nk1,3RwF,j5yb,j67N,kDuX,4C2V,g2kr,g2Jx,btLx,btmx,g2kx,ewJz,c/6N,c/g3,ex0p,btyX,67th,9b73,6UQF",
                    "8f86": "m8jP,m8Sh,pbWz,ew1V,ewx9,9aeP,aIo9,j5iz,3QKF,mVHb,mWth,mVWP,hA7V,c/6N,9aTx,dL+P,btC9,mWar,dMbp,8qf1,dMbj,9YbN,3R1j,ikMp,illV,5ngV,3Rqp",
                    "622e": "mV8P,mVuN,gOSN,lnxX,jS1p,g1HP,iktF,mVAX,mVTN,fhBN,lnWX,jSnh,hzNX,j5HF,cdyP,g24V,cekV,9Xa3,c+Q1,btgb,6TS9,3Qy3,9XLF,mWar,kDU1,hA4H,ils9,orKb,dM8h,67Yx,3RG1,68fh,fi1P,9bdp,67IV,4BVx",
                    9541: "ikaP,pbWF,lnEb,ln+9,hzoX,hzO1,c+kH,c+T9,hzyj,4Btp,7F11,orrr,logV,kDBb,orWN,kDcb,kDU1,hzXj,hAwV,dLLb,dMr1,aIo3,aJa9,kDy3,aIK1,6UuN,3QQV,9XY3,67Yx,3RG1",
                    6728: "j4/P,j6h9,pcgr,3R4x,66ZX,c+MV,j5Ex,ewPV,9Y5x,68c9",
                    "556a": "7EDX,lny1,lnQN,9XpN,9X71,kD2P,kDrV,pcdj,5mHp,3QU1,bt6P,fhBN,kDBb,orTF,3RgX,kDv1,kDU1,3RG1,dM1X,dMr1,688X,67M1",
                    "51ed": "ikaP,lnKx,pc0V,lnKr,dLsx,mVHb,nH8V,mVZX,fhI1,j5lH,j6kh,fhm3,fi1V,3QuX,67gN,9aH1,cd/1,ceuh,4Cch,3Rqp,3RG1,6V19",
                    8537: "mV8P,mWq9,pc3X,kD61,pcw3,kDy9,j59b,j67N,lo7r,fhvx,iktz,fhj1,fhHX,il9p,fgSP,fi89,3QEj,c+Ap,c/sF,3RwF,5mij,5naF,9XvX,9XV1,6UB1,6Uc1,9Xw1",
                    "67d3": "pbNb,kD2V,lnxX,j5fx,ew4X,hzKV,lnWX,lowx,fhRp,ex3x,exg1,gPO9,pcmH,ikSF,g2hp,dLBV,bsJP,bt/9,ewGr,3R4x,5m8X,7EWN,btjp,btpz,7Fwh,5nn9",
                    5220: "4BgP,9Xdh,nG7h,nGmV,67jV,4Bwx,3QTX,9XFp,nGzp,nGLV,67IV,3R4x,g1HP,g2Dh,m9lr,9Y5x,os0X,6891,3RwF",
                    "793a": "mVlj,mWdF,gOwP,gPO9,7EDX,dLyN,gP9r,67zx,4BJ1,dM8b,8qE1",
                    "53f8": "mVib,mWjV,5ngV,3Rk9,ikdX,il9p,6T/r,ewhx,ewT1,9b41,9aux",
                    "53f9": "9ahX,mVc1,mVuN,bt3N,bsN1,mVE3,mWjV,g2Jx,aIK1,6Ulp,4BCN,m8Vj,ewMN,9bdp,4Cy9",
                    9014: "nG0X,jS7F,fgSP,fh6x,6T/x,4BgV,6T/r,4BYF,4Cy9,hzKP,nGLV,kDEp,ils9,hzUb,hAqF,dLEX,dMnV,hAaX,8qf1,6UrF,8pOP,cebx,btLr,8qE1",
                    "5c09": "5m2H,aH/9,dLmh,nG7h,nGFF,jSwF,jR+h,g1+z,g2nF,c+Aj,c/6N,6TYj,9XpN,c+T3,5mB9,3QNN,9XIr,7FmV,ik/X,ilvh,fhHX,cexp,pcLH,5ndN,3Rnh",
                    6687: "6TOX,mVc1,mVuN,9aAN,9ai1,gOzX,gOSN,3QX3,nGt9,nGLV,ikYV,ikG9,ewx3,ewMN,9Xz3,9XRV,nGS3,nH8V,hAwV,il33,illV,3R4r,6UHh,9Y8F,excV,ewT1,9X/h,67/F,3RJ9",
                    "82af": "lnxX,loJ1,nGmP,ikzV,nGS3,il39,7EAP,c+Dx,c+MP,6U8V,67n1,67Sh,9bgx,ewDj,aIGV,c/sz,7FVh",
                    "4e2b": "nG7b,j5v9,nH8P,gP9x,3R4x",
                    "63d6": "jRQP,jSh1,pbTr,5mlx,3Qy9,cdyP,fhj1,orrr,orWN,jSYN,jStx,orrx,hzR3,hAD9,hz+r,6Uox,hAtH,3RzN,dLRr,dMkN,aJ0H,aIxx,67mX,7FVh",
                    "6cf3": "oqYb,lnTV,ikaP,fh6x,4BgP,bsZx,pcjz,m9ip,jSk3,jSG1,5mX1,3R4x,fhfP,fhyF,9XFp,7F49,5moF,hAaX,cexp,9bjF,68c9,ewZb,gPL1",
                    "8dc3": "nG43,nGq1,hzO1,hzs9,nG49,hzBr,7EQx,c+Dr,c+T9,ew83,6719,5m5P,8pV9,mVKj,orZV,g2eb,g2W1,mW13,dM59,9aZN,67wp,3QQV,dM53,8qrx,4Cy9",
                    "7ad9": "oq/j,lnNF,jRQP,jSnh,g1KX,bsWp,gOYX,8pIF,66WP,9XCh,pcw3,ewW9,kDuX,kDX9,3R4r,ewGx,exg1,3RG1,67zr,6891",
                    "5fd7": "kCFP,kDX9,pcgr,fhvx,fh0b,fh+N,5m8X,bsWp,bt6P,5muV,4BJ1,4C99,7Fzp,c+Zj,9b0V,ceAr,6V19",
                    "62d9": "j4/P,j5s1,oq/j,5mip,3Qv1,bsJP,g281,lo1b,g2eh,g2SV,loFP,excV,dLLb,67th,685V,dMnP,3RCV,lon3,67P9",
                    2164: "nG7b,nGq1,nGOX,nH5N,nG/r,5mKx,nGdx",
                    "78c5": "674b,gOGh,gOVV,8pOV,8pzh,dL9H,gOGh,m8CF,m8jP,m8P9,pcpP,mW7p,m8Sb,m9B9,loaz,il01,il6b,lozF,g2eb,ikJh,ilp1,g2W1,gPlX,ewZh,c+T3,c/F9,4BM3,67zx,8q8N,9XRV,c/d1,9XRP,9YeV,5ndN,3Rnh",
                    "6ee8": "oqV3,lnNF,hzlP,fh3p,4BgP,cdOx,pcjz,mW19,ikzP,m8IV,m9y1,ilp1,j64z,hzUh,9XCh,ewAb,excV,ewZb,9X/h,9XpH,9Yl9,3QNH,8q5F,8qlb,4Cy9",
                    8749: "cdBX,lny1,ln+9,ewx9,ew51,pbWz,9axF,7ExH,9Xw1,cdXP,6Ulp,pcdj,m991,loqb,pcOV,lo7r,loJ1,c/C1,c/0x,lo7x,hz+r,hAA1,9XCb,9Yoh,loqb,3Rnh",
                    "521d": "pbQj,m8IV,jRQP,jSh1,g1+F,cdyV,g1+z,3QKF,ewkz,aIup,dLEX,gP6p,m8Vj,m9y1,685V,4Cfp,m9c3,cekV,4BM9",
                    "6b79": "nFZP,nHf9,nGCr,ikG9,g24V,c+xh,ikG3,ilfF,dMbp,9XV1,7FmV,67n1,4Bn9,dLLb,aIGV",
                    "540a": "or5z,orQx,j61x,j5iF,or5F,6TYj,ewep,ex9N,8qxN,6UHh,ikPr,3R4x",
                    9102: "nG0X,nGgF,jS7F,jRU1,nG11,nGpX,nGFF,jSwF,jSh1,nGq1,hzs3,hz+x,dL9H,dLXN,dLsr,aI2h,aIup,67th,4BzF,3RgX,nGP1,nHc1,hAnx,ceQ9,9bw9,7FCx",
                    "5b75": "4BgP,9arp,bsZx,lnKx,or8H,nG11,bsN1,aHRH,cdOx,ikh3,g1Up,4BFP,mVxV,mVNx,aIxx,9aTx,hzNX,fhsp,mVTH,os49,kDoH,il01,loqb,ilfF,hAtH,loM9,gPfH,gPL1,dMbp,5n4p,3RdV,btpz,bu2h",
                    "94ec": "hzlP,kCPh,or2x,kCPb,kDch,gOD3,gOZ1,cdyP,cd/1,gOMr,4Btp,8pS1,ikJb,loaF,orAV,loaz,loCN,hAhh,ewMN,c+Wh,j5KH,fhOh,dMhF,ceQ9,3R4r,btmx,btRN,3RzN,67zr,682N",
                    "8f8a": "lnrH,ln+9,pbTr,dLcV,ewx9,iktz,3QKF,8ppP,aIrh,nGCr,nH5N,g2PN,g2kx,nGCx,jStr,jSYN,ewGr,4BVx,7Ft9,btmr,btC9,ex0j,67Vp,4Cix,4Cv1,6V4h,9Y2j,ceN1",
                    "4e4e": "mVib,orWN,jS1j,g281,fhL3,jSVF,dL9H,dMxh,mVQz,5mNF,3QU1",
                    "57c3": "7ExH,9Xw1,9arj,oq/p,hzlP,hzKV,orAP,j5v9,kDNN,mW7j,j6e1,ikPr,dLF1,gP6j,gPHV,gPlX,aIGV,67zx,3QNN,cd+X,ceQ9,aIJX,7Fzp,4Cy9",
                    "4fdd": "fgPH,pbZN,kCSj,3QEp,ikJb,nGwh,nH5N,iliN,ikJh,ewnH,exj9,hA7P,3RdV,67dz,8pV9,dLXN,dM21,8quF,68c9",
                    "73bb": "4BjX,9Xw1,fgSP,fhfV,m8gH,m8M1,m8wj,9arp,3QNH,67n1,8pYh,ce8p,lo4p,loJ1,hAtN,pcw3,fhL9,fhsj,fi1V,ceDF,9bdp,5mQN,3Q+h,cehH,9b41,7Fwh,67/F,4Cy9",
                    "5e38": "or5z,m8M1,pcgr,lo7x,lojX,orQx,hzs3,lnB9,loJ1,hAA1,ikwH,il9p,ex0p,ewnN,ikwN,4Bwr,bsZx,btRN,682N,4Cfp,ewJz,3R7F",
                    "77d7": "4BgP,4BSp,67q3,674h,7EKb,7F49,9aob,9aK9,c+nP,c+Zp,c/3z,c/F9,9b0P,9bmN,7FIH,7FmV,67IP,682N,4BVr,4Cy9,ew4X,exg1,gPvj,gOPF,iktz,il9p,jSPj,jS7F,nG7b,nH5N,pcjz,lo4p,ewkz,lnNF,lotp,ex0p,4Bqb,bsTh,btd9,4BM9,bsZr,ewnN,btC3,ex0p,4C2P,btvV,btRN,4CoN",
                    "62c5": "jRNH,jSk9,pbTr,67ax,3Qv1,bsGH,fhj1,9aQj,nGzp,nH8V,9bpV,hzXj,hAwV,aJ3P,aIup,5mxX,5nqh",
                    "53ee": "9X3P,nFZV,nGjN,cdUN,cdyV,mVE3,mWth,mW7j,67Vp,4C2V",
                    "7f5a": "nGaj,nH8V,j6aV,j5cp,nGap,hzBr,ewu1,nGt3,j5v9,nGOX,j5R1,dLcP,dLvF,4Bwx,9aQp,g2wX,8qf1,gPHP,685V,3Rnh",
                    "798f": "pbNb,m8FN,jRQP,jSh1,fh6x,bsJV,fh6r,3QHx,fh6r,ce29,nGwb,nHih,lo7r,loFV,gPHV,gP9x,lo7x,3R1j,dLOp,dMr1,3RG1,9XFj,9Yi1,5mHj,5nk1,dM8b,5n1h",
                    6897: "j4YH,j5v9,or2r,3QHx,aHRH,ewbh,j5fx,hzBr,dLF1,nGpX,nHih,kDQP,c/yV,c+Zp,kDfp,kDQV,gP6j,gPHV,nGVb,c/jh,9b79,67CF,3QNN,btgb,7FmV,5naF,3RJ9",
                    "6d77": "oqV3,lnNF,ikaP,g1Up,4BgP,cdOx,ikwH,pcgx,m8Sb,m9y1,7FS3,7F11,j5v9,j67N,5naF,3Rk9,dLvz,dMu9,gPfH,ewW9,btsH,9b79",
                    "552c": "8psX,lny1,lnQN,bt3N,bsN1,3QHr,6Uc1,9Xz9,kD99,kDX9,hAwV,pcsX,kDv1,mVZX,mWn1,g2kr,gPBF,ik/X,ewT1,dM59,dMkN,fi1V,3Q+b,5mNF,67FN,aIDN,aITp,5n4p,4Cix,4CrV,6V19",
                    "8d27": "j4/P,pc41,m8Cz,g1+F,pcmH,hA4N,gPiV,gPEN,ilp1,j5v3,kDrV,nH8V,7ENj,dLpp,dMhF,7FFF,btmr,6Uf9,3Qy9,7FjH,3RCV",
                    "8ff9": "nG0X,jS7F,fgPH,fh6x,6T/x,5m91,6T/r,4BM9,4Cy9,oruz,lon9,kD2P,kDU1,kDlz,ceeF,7F49,bt3H,g2eh,kDBb,8qlh,6UuN,g2Mz,ceQ9",
                    "51cf": "lnuP,ikkh,8pmH,dLpp,3QuX,9axF,kCYF,kDU1,hzKP,hA4N,8pV3,dLI9,dLXN,9aZN,9aK9,orNj,m9rN,pcsX,ewW9,9bdp,3RG1,6V4h,4B/H,8qlh,btLx,hAtN",
                    5251: "gOwP,pc41,nGmP,gPiV,hzvb,hA4N,dLmb,8pIF,fhcH,9Xz9,ewMH,67q9,5m8X,6UxV,loqb,9bah,os0X,5nk1,3Rtx",
                    9526: "hzlP,or5F,kCPb,kDch,gOzX,gP09,cdyP,ce5h,gOMr,4Bwx,8pYh,pczb,mV+1,mVNx,g2kx,g2SV,mWjV,mV+1,jStr,jS/V,5mKr,c/0x,c/F9,6V19,5ndN,g2Db,3Rnh",
                    8346: "m8mX,m9c9,pbZH,j5lN,pcgr,j5Ex,hzvb,hAb1,c+qX,c/g9,hzHH,9XmF,6TYp,3Qv1,hz+r,3R4x,m9lr,9Y5x,pcRX,5nk1,3Rtx",
                    "89c9": "oq/j,lnTV,pcdj,lodN,jSJ3,orWN,g1O3,jRX9,jT31,g2W1,9axz,g1+F,g2Jx,9bgx,c/3z,9aQp,67n1,4Btp,3QrV,9XOH,4B/N,3RdV,3RCV,6V19",
                    "6d5a": "oqV3,lnQN,j4/P,g1Xx,5m8X,c+GF,pcmH,j5s1,kDNN,mW7j,j6e1,dLyH,ikSF,il6b,exg1,8pOP,btmx,c/3F,fhEV,c/3z,c/sF,7Ft9,5mNF,3QNN,9XLz,67Vp,4CoN,3RJ9",
                    "65f7": "6TOX,mVc1,mVxV,8pOV,8pt1,g1KX,g24V,3QNH,67q9,9aQp,c/0x,kDix,kD+h,orAP,lotp",
                    "6e83": "oqYb,lnQN,j4/P,g1Up,5m8X,cdOx,nGt3,nH8V,jS/V,jSk9,nGt9,pcsX,gPm1,gOSH,gPO9,7F43,ewx9,ex9N,7FIN,cenX,7FjN,5mKx,3QQV,8qi3,4Cy9",
                    6817: "oqRX,os49,lnHj,loCN,fh+N,fh3p,lnHp,ori3,fhm9,orDX,fhI1,bsJP,bt/9,ewGr,3R4x,5m5P,6T/x,8pS1,btmx,8qi9,6UNx,5nn9",
                    "7c92": "m8jP,j59h,j5lH,mVE9,hziH,hzR9,pbTr,3QHx,9abH,hzBx,fh6r,btd9,orxH,lotp,jSnb,jT69,g2kr,9b0V,5m+3,gPEN,5mxX,5nqh",
                    5218: "or5z,lnX1,jRQP,jSzN,jSqj,ewAh,aIl1,7ETF,4Bk1,g1Rb,bta1,6UuN,kDy3,9XY9,orZP,5ngV,3Rtx",
                    "62e2": "jRQP,jSh1,pbTr,5mlx,3Qv1,bsJP,fhj1,j5v3,j6h9,kDQP,nGYp,orAP,g2qN,aIxx,7F7h,3QNN,gPp3,5m+9,4Cch,4CrV,6V19,67zr,9b79,ceDF,g2W1",
                    "8fc8": "nG0X,jS7F,gOwP,gOJp,7ENp,5m5V,7ENj,4BPh,4Cy9,mVxP,mWn1,mVQF,hA1F,c+Zp,8pOV,hA1z,hAtN,9Y8F,8qf1",
                    "832b": "m8jP,m9B9,pc3X,ikD1,pcw3,il39,j563,gOPF,ew1P,cdLp,4BjX,aIeN,ikVH,fhOh,ewnH,exj9,ewAb,4BPh,4Cv1",
                    "60af": "ev+H,jRX9,pbQj,3QEp,kCYz,gOZ1,3QX3,kD99,ori3,loaF,mVWP,mWn1,5nk1,3RwF,jSCP,hAe9,gP9r,gPBF,gPvj,btC9,6Ulp,ewJz,7FCx",
                    "6a21": "jRNH,jSh1,pbQj,3QEp,aHRH,jS1p,hzyj,dLF1,mVAX,mWq9,pcmH,jSzN,pcCj,jSPp,j5yb,j67N,c/vN,c+Wh,j5yh,g2eb,g2PN,9XsP,9Yl9,c/cX,7FmV,67CF,3QU1,9XUX,67Yx,3RJ9",
                    "5b7d": "nFZP,nHf9,pc3X,lnX1,pcsX,lok1,m8Cz,jS1p,bsQ3,jRX9,jSh1,hzO1,hzs9,ew83,ewu1,cd/1,cdF9,lojX,jSMh,jSqj,jS/V,j64z,g2Dh,j5Hz,g2tV,g2eb,g2W1,dMnP,dLOp,g2A3,btC9,aI8r,aITp,8q5F,5mNF,3QX9,7EAP,7FS9",
                    "725b": "fh0b,mVxV,j5iz,j67N,pcjz,3R7F,cdyP,ceQ9",
                    6367: "jRNH,jSh1,cdvH,fhfV,pbQj,5mip,3Qv1,m8LX,m9y1,j5v3,j6aV,g27X,g30h,pcsX,g2qN,ce5h,9XpN,g2Db,ceDF,9Yl9,aIrb,aIZF,7F0X,7FP1,dM1X,3Rh1",
                    "75b2": "kCIX,hzyp,bsJP,ewkF,4BjX,9aux,bt0F,lnNF,loM9,orrr,m991,3QKz,7F11,9Xz9,hzR9,hAA1,ex9N,jSFX,c/d1,c+Wb,c/vN,8qlh,5mNF,3QU1,btmr,7Ft9,3RJ9",
                    5951: "m8mX,m8Yx,j52X,j5Ex,g1HP,g2nF,pbZH,cdUN,mVQz,mWn1,fi1V,dMbp,mW4b,il39,dLRx,aHXX,aJ71,c/0r,9aQp,67jV,3Qv1,9XLz,67Sh,3RJ9",
                    7275: "m8tb,m9uV,pcjz,m8Yx,jSk9,iknp,m8/z,ilfF,dLfX,hzp1,hAA1,dMr1,aI2b,fhj1,cdRz,ceDF,8pw3,8qE1,g2nz,3R7F",
                    "914b": "pbTr,m8P9,kDoH,pczh,kCFP,kDX9,kDcb,gP3h,dLI9,aIeN,kDoH,c/6N,cekV,ceGN,8pCj,8qxN,3QEj,gOJp,gPEN,3RzN,5mij,5ndN",
                    "9f8b": "nG43,hzs9,pbWz,hzEF,m8Cz,m8Sh,hziH,hzXp,fgVX,4Bk1,5my1,fhiX,3QU1,g1+z,9aoh,c+Dr,9XsV,nGzj,os49,jSwz,jS/V,g2SV,g2nF,jSwF,nGVb,8qlh,7FjH,8quF,9Y8z,6UWV,3R4r,c/0x,c/C1,5nk1,3RwF",
                    "5f31": "nG0X,nGwh,j5yh,j59h,fh0h,fhph,67th,4BM9,3QHx,c+u3,aIeN,6TOX,aIrh,nGCr,nH5N,j67N,j5KN,fhBN,fi1V,685V,5ndN,3Rnh,c/6H,btFh,7Fgz,ceJV",
                    6851: "or2r,orTF,lodN,jSh1,j5cp,nGmP,j64F,ikdX,ikMp,fhfV,c+u9,gOJj,dLOp,ikSF,ilp1,fhRp,dLXN,gPiP,c/C1,aHUP,aJa9,c/0r,3R4x,5m5P,6T/x,8pS1,aIxx,8qf1,6UNx,5nn9",
                    "751a": "m8mX,m9y1,pbZH,cdUN,g21H,g2Gp,j5+j,j5lN,pcCj,cexp,cdyP,ceQ9,cdOr,4Bwx,4CrV,6U5H,aIup,aIJX,6UQF",
                    5269: "nG7b,orxN,nGpX,3QU1,kCFP,kDv1,ikqr,c+Dx,c+nV,gOzX,gOMx,ikPr,c/0x,c/d1,ewW9,g2kr,gPm1,6TLP,9aux,dLF1,cd+X,7Fq1,m9lr,aIWx,pcRX,6891,3Rqp",
                    "672f": "ikdX,ilp1,nGS3,kDKF,pcgr,3R4x,66WP,8pCp,c+Q1,ikMp,ikSz,dM21,9Y5x,6V19",
                    "800d": "nG0X,nHc1,nGCr,kDch,ewej,kCSp,kDNN,g2PN,ex0p,kD93,fhm9,kDrP,fhEV,cdyP,ceQ9,ewDj,9axF,8p/p,6UE9,4CrV,4Bn3,67q9,8q8N,ceuh",
                    "7f29": "or2r,hzlV,hzBx,kD2P,bsJV,cdUN,66WP,8pOV,pcmH,mW4h,ikG3,m8P9,m9y1,j6e1,c+MP,j5HF,g2hj,3R1p,hA4H,hAD9,hAnr,dM8h,3RdP,dL+V,dMnV,3RCV,9XRP,9YeV,5ngP,5mTV",
                    "8e4b": "hzoX,nG11,nGmV,hzKV,hzp1,hzBr,7EQx,c+Dr,c+Q1,ew83,6719,5m2H,8pV9,orrr,os11,hAA1,hz+x,orrx,lo7r,loJ1,fhm3,fhI1,67M1,3R4x,c+Zj,aIAF,7F43,aIK1,fhRj,fi89,68c9,3RwF,c/mj,aJ0N,7Fzj,aJa9",
                    6761: "ikkb,pc79,m8IP,m9lx,j5NV,g2eh,ewnN,c+r1,kD2P,gPcF,fhOh,ex6F,dMu9,bsWj,btOF,ewJz,5mNF,3QX9,5mc3,9aH1,9b73,5ngV",
                    "505c": "g1HP,pbZN,kCSj,3QEp,pcjz,m9c9,m8IP,m9B9,jSnb,jSVF,g2MF,g2eh,jSnh,aIeH,dLyN,dMu9,aJa9,aIo3,aJ0N,aIN3,5m+9,3R4x",
                    "738b": "mVf3,mWn1,ewej,ex9N,66WP,68c9,mVNr,67zx",
                    5371: "ikh3,orlh,m8LX,m9ip,ikYV,ils3,ikqx,aI8x,7ENp,3QrV,9b3X,aIZF,ex6F,ewAh,5mEh,4BSp,4CrV,6V19",
                    7199: "nGFz,nG49,cdF9,ceeF,nGpX,jSh1,jS4r,jSqp,gP6p,gOMx,jS4x,gOYX,cd/1,g2PH,nH5N,nGLV,c/9V,ceo1,ceGN,exg1,hA7P,hAtN,4BgP,9arp,8pRX,4BPh,9aZH,4C99,9bjz,4Cv1",
                    "5e0c": "oq/j,j67N,j59b,orNp,gOtH,gPRh,9aeP,c+GF,j5yh,5moz,c+GF,c/vN,6UTN,5n1h,gPcz,3R7F",
                    "785d": "m8jP,m8P9,m8zr,gOGh,dLcV,674b,g1Rh,g281,8pS1,8pzh,nGzj,jSCV,pczb,hAhh,jSVz,nHf9,3R4r,hz+x,hAA1,5nk1,3RwF,dLRr,dMr1,9XIr,9Yi1",
                    6821: "jRNH,jSh1,pbTr,3QHx,aHRH,j5fx,gOMr,dLF1,pcpP,m9ip,kDcb,kD+h,ewAb,ikVN,ilcr,exj9,dMkH,9bdp,67IV,4BVx,3QU1,c/3z,8qf1,67Vp,4CoN,3RJ9",
                    "7d6e": "m8mX,m8/F,j5yh,gOPF,g1L1,pc0P,jS1p,gPcF,mVWP,mWjV,hAwV,hA7V,mVWV,g2eb,c+Ap,c/9V,fhUr,btjp,9aoh,9Y8F,ceub,8qE1,4BjX,7F11,9aWz,5mNF,3Q+h,7Ft3,4Cv1",
                    7729: "5m8X,m8n1,m8IV,6U8V,6TP1,hzoX,hzKV,c+qX,c+MV,orxH,loqh,jSdP,jT69,jSFX,c+Wh,c/jh,gPBz,4BPh,6UTN,9Y5r,4Cv1",
                    "6c27": "ikaP,mVox,pbZN,mVor,mWn1,jS7z,jSYN,hzvb,hAqF,9Y5x,682N,3RG1,6V4h,g21H,dLI9,dLOp,gPiV,dLmb,dM8h,aI5j,aIN9,7EH3,7Fzp,dLLb,3Q+h",
                    9065: "nG0X,jS7F,g1EH,g1Xx,7EQx,5m91,7EQr,4BM9,4Cy9,mVAX,orWN,lnWX,ikMp,lodH,il39,ilcr,m9uV,ewqP,ikPx,gP3b,gPEN,c+JH,c/C1,gPlX,8qf1,btd3,8pV9,8qxN,btRH,6UTN",
                    9634: "3Qy3,nG49,nGwh,hzBx,fhj1,dLI9,ce5h,aIo9,9Xw1,9aux,4BIX,7Fap,9XIx,btpF,nGFF,nH8V,685V,3Rqp,ikSz,illV,c/3z,c/yV",
                    "6a31": "jRQP,jSdV,pbQj,3QEp,bsJP,jS1p,hzyj,fh9F,gOYX,nGq1,nGIN,gPfN,lo4j,gP6p,c+Q1,g2kr,ewPV,gPsb,nGVh,nHc1,gPL1,lozz,gPyx,c/g9,fhXz,c/F9,aIeH,aJa9,c/9P,8pYh,6UB1,3RCV,aIWr,6UB1,3QU1",
                    5401: "9X6X,mVc1,mVuN,cdUN,cdC1,nGwb,nH8V,fi83,fhm9,nGOX,67M1,3R7F",
                    "88d5": "pbNb,m8CF,jRNH,jSdV,fh3p,bsGN,fh3j,3QEp,dLpj,aIl1,c+JH,g281,jSk3,orAV,orNj,kDU1,c+PX,g2nF,j5U9,g2MF,c/F9,3R4r,cebx,ceGN,3RzN,5mKr,5ndN",
                    "600e": "hzoX,pc0V,m8Cz,m9uV,m8IP,cdXV,ikzP,ilfF,ewqP,ex9N,5m5P,9Xgp,9XsP,5muV,4BJ1,4C99,6UKp,ce5b,8qbV,9Y5r,68ip",
                    7728: "6713,mVf9,mVB1,7F11,7EH9,c+u3,c+Q1,hzNX,hzs9,m8Sb,nH8V,kDrP,hAhh,g2eb,g2PN,9XV1,5mB9,7Fdr,4C99,4Cy9",
                    6323: "jRNH,jSh1,pbTr,5mlx,3Qv1,bsJP,g24V,j5rX,pcmN,m8Yr,m9oF,il39,ikJb,illV,9YeV,9Xz9,dLEX,dMxh,ik/X,5mX1,3R4x",
                    "90d1": "oqV3,lnNF,jSdP,orrx,jRTX,jSzN,dLcP,dLXN,jSdP,c+MV,9axF,7ENp,4BgV,c+MP,6UrF,3Rk3,nGS9,nHf9,gPyx,ceQ9,9Yoh,7FP1,6UNx",
                    "77a9": "66ZX,nG11,nGjN,8pLN,8pt1,j52X,j5lN,dLfX,dLyN,4Bzz,8pS1,btd9,ori9,orZV,loFV,ln+9,j5Bj,j6e1,g2kr,g2SV,dMnV,dLRx,g2kx,3R1j,btjp,btY1,5nk1,3RwF,j5U3,7Ft9,6Urz,8quF,9Y5r,6UTN",
                    "795d": "pbNb,lnQN,jRNH,jSh1,fh6x,cdyV,fh6r,3QHx,g1+z,ce29,nGzj,nH8V,fi1V,fhsp,nGzp,4BFP,6Ulp,aIDN,fhBN,fhRj,5n4p,4Cix,4Cv1,7FVh",
                    "67de": "jRTX,jSnh,pbWz,3QKF,aHXX,fh6x,jS7F,gOPz,dLLh,g2eb,jSwF,pct1,jSwz,jT9h,jSCP,3RdV,ewPP,exg1,9XRP,9Yl9",
                    "90cf": "3QrP,677p,8pLN,cd/1,pc41,lnB3,logV,dL+P,dLg1,ikkb,fh9F,fhsj,j5KN,cd+X,8p/p,67CF,4C61,3Rk3,nGS9,nHf9,gPyx,ceQ9,9Yoh,7FP1,6UNx",
                    6446: "3QuX,5mlx,pbTx,jRNH,jSdV,g24P,cdyV,ikG3,nGt9,nH8V,illV,ikG9,ikVH,nGIN,nGYj,il9p,ewx3,exg1,aJdb,aIeN,hAaX,aIK1,4BM9,67/F,8qoj,3RG1",
                    "58c1": "ew1P,hzs9,nG49,nGwh,j5yh,j569,cdIb,gOGh,gP3h,ce5h,cdIh,pcw3,m9lx,m8/z,m9y1,kDrP,hAhh,hAkj,kDNN,hAD3,hz+x,ewJz,exg1,hAhb,aIQh,8pCj,8quF,4BjX,4Cv1,btmr,4BVx",
                    "7cd9": "mV8P,j59h,j5lH,m8M1,hzlP,hzO1,pbTr,3QHx,9X0H,hzBx,fh6r,cdXV,ori3,kDfp,fhfP,fhsp,6Ulp,5muV,6Ulj,4B/N,4Cy9,ikSz,nGP1,kDrP,kDU1,pcFr,gPyx,gP9r,gPRh,6UxP,dL+V,dMnV,6UWV,8qAP,8qbV",
                    "5f1b": "nFWH,nGmV,ikzV,ike1,c+nV,c+MV,5moF,3Qv1,g27X,jS/V,aJ0N,9bdp,pcw3,8qi9,nGCr,5mKx,4B/N,4CrV,6V19",
                    "8e7f": "mVbX,mVxV,hzKV,hzp1,mVc1,hzBr,6T/x,c+Dr,c+T9,dLj3,6719,5m5P,7F49,orAP,m9ip,j5yb,m8Sh,m9y1,j6e1,gP03,jSCV,jSPj,gPO9,g2kr,g2PN,c/vN,c/0x,g2kx,5mHj,9XFp,9YeV,5ngV,67wj,685V,il33,3Rk9",
                    "7b2c": "jRTX,pbZN,mVor,mVNx,mVrz,jSh1,pczb,jSwF,mW13,mWq9,mW4b,jSVF,iknj,ilfF,ex6F,ewep,aI5p,aJ3V,6UTN,67Sh,ikSz,3R7F,aIuj,5m91",
                    "56e4": "4Bn3,nG49,nH8V,4CrV,j5fr,j64F,hzHH,c+JN,c/jh,hAhh,m8Yr,9XIx,9aWF,9bdp,btOF,6713,685V",
                    "6c7e": "nG43,kC/N,hzlP,fh3p,4BjX,bt0F,dLvz,hzR9,nGCx,orH3,j64F,fi89,fhm3,fhXF,67/F,3Rh1,fhBH,9aTx,3QKF",
                    "5c97": "nGaj,jS1p,jSYN,nH5N,pcgr,jStx,3QBb,gOGh,gPHV,5ngV,3Rqp,dLBP,7Fzp,ewZb,7EWN",
                    "51a0": "jRTX,nG11,nHc1,jT31,jS1j,jSqp,fgVX,fhvx,fh9z,9Xjx,4BgV,fhm3,67q9,5mEh,5ndN,8qH9,hz+r,hAD9,fhBH,cer9,lowr,9Y5x,7FmV",
                    "9ed1": "nGaj,nH2F,hAqF,hzyp,nGap,m8FN,j5yh,j5NP,m9fh,nGCr,aIxx,ewbb,ex9N,aHUP,aJa9,9aur,4Bk1,9aGX,4BSp,9aZH,5n1h,9bjz,5nn9",
                    6094: "ew1P,kCM9,pbQj,3QEp,lnQH,gOZ1,jSk3,pcmN,m8Yr,m9B9,7FS3,7F7h,j5Bp,j67N,682N,3Rnh,c+JH,c/Ih,hA7P,ewZh,btvP,9bah",
                    "7a3c": "mV8P,orf1,nGdr,3QHx,ikaP,ikD1,9X0H,ikqx,gOMr,c+Q1,pcpP,mW4h,j5v3,mVE9,mWq9,j6h9,j5Er,j67N,ewx3,j5U9,gPfH,c/jh,67Sh,3R7F,9XvX,ewT1,67mX,ceuh,dM8b,hAA1,ex3r,9YbN,68fh",
                    8282: "m8gH,m9Eh,pc3X,ikD1,pcw3,il39,g1Rb,g2MF,9bjF,7FmV,g2eb,3Q+h",
                    "6cae": "oqYb,kD2V,hzoX,ewkF,4Bn3,cdUN,5mHj,orop,orWN,5ndN,ceGH,ce8p,ikMj,iliN,5mrH,5nqh",
                    "53e3": "677j,m8wp,m9oF,67/F,8pCj,8quF",
                    "78ca": "nG0X,nHc1,hzlP,kC/N,nGt9,kC/H,kDHx,gPyx,gOSN,kC/N,dLcP,dLOp,7EAP,dLsx,3QEp,9Xgp,9XCh,3Q+h,5mij,5mEh,dLUz,dMu9,7Fdr,dM8h,3Rk3,9XY9,9YeV,3RCV,5m+3,5ngV",
                    "90bb": "gOwP,orbV,mVuH,ikSF,ikwH,g281,dLfX,dLRx,7EWN,9Xgj,4BM9,3RgX,mV+1,mWq9,fhRp,bt/9,9bmN,7FFF,6UNx",
                    "7eb6": "nGdr,g1EN,g1Xx,jSdP,9X3V,aIhV,4BgP,6Uc1,gP03,jSwF,pcw9,nGOX,j64F,gPO9,gPcz,5mNF,4B/N,4CoN,5ngV,6U+1,aIDH,ex9N",
                    "6ccc": "nG43,kC/N,ikaP,fh6x,4BjX,c+Dx,9aAH,g2b9,nGFz,kDy9,jSwz,5mNF,4B/N,4Cix,7FIN,4BCH,7Fdx,cer9,hAnx,mWgN,ex6z,9bzh",
                    5185: "3QBb,kCPh,kDQV,5ngV,3Rnh,pcjz,g2nF,dLOp,9aAN,g2nz,9Y5x",
                    "70ae": "ew1P,jRX9,pbTr,cdOx,9arp,4BgV,fh6r,kD99,cdOr,8pV9,ikJb,loaF,pcpV,loaz,loJ1,btY1,9Y5x,cebr,cexp,hAkp,hz+x,5mKx,4BYF,4CrV,6V19",
                    "671f": "lnuP,lodN,pbQj,aI5p,pcdj,aIup,hzyj,hzXp,ewDj,ewep,aHUP,aIAF,3QrP,9aux,9aGX,6Ulp,3Q+b,67FN,8qbV,aIK1,nGP1,nHc1,5nk1,3RwF,ik/X,ilp1,c/cX,c/C1",
                    "52e4": "m8jP,m95V,pbTr,jS4x,jSqp,pcdp,hzvb,hA1F,dLUF,dLmh,hzvh,bsMX,btsN,8pw3,8q5F,5m8X,67CF,j5oP,67jV,ikVH,ilp1,5ngV,3Rqp,pcCj,dM8h,7Fq1,3R4x",
                    5733: "mBWl,83Lv,6Aj7,9zcT,f/jj,fWWj,m+Jx,b7r2,9XLi,8sx4,7jgu,69/g,3QZP,m4mR,5BGj,m/df,3CZT",
                    "9b45": "npdt,kFm5,kHHd,kFJx,cYzb,dVBl,dZ/t,cbfD,kFf3,hdwt,hd/1,kFuh,dXNS,cQ+8,bt3K,9XnS,8uzS,76DU,5S0G,4mJF,cgrv,5KYE,5cNC,4Qo2,4GFy,4zYk,4CqW,4OG+,56eS,5B/Q,7cBb,cj2H,7ORN,8dXn,acPr,6W+9,jrIt,jpN7,fIpN,fGzB,n8M1,67Vf,fIHr,eJak,dQ+4,cMAq,bKCI,b0bi,atZZ,fGfb,eJfO,dTAO,cPgC,bKYU,b332,adoG,9zX7",
                    6654: "5WSt,lnEh,lltH,6AF5,fjrZ,fjK1,8BM7,8C2b,n8yh,jXne,ggSH,kDl5,c4tb,l5b5,isw8,hMuY,gD67,n6kT,dODC,dnNE,d6IG,cWxi,cZ8E,d6Xm,do2m,dCIu,e+CD,c4GH,3o1X,9uhj,9qct"
                }
            }
        },
        "289d": function(e, t, r) {
            var n = n || {
                REVISION: "ALPHA"
            };
            (function(e) {
                var t = 256,
                    r = 512,
                    h = 1024,
                    a = new Int32Array([-1, 1, 4, -1, 4, -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, 8]),
                    i = function() {
                        return function(e) {
                            return 65280 & e
                        }
                    }(),
                    c = function() {
                        return function(e) {
                            return 255 & e
                        }
                    }(),
                    o = function() {
                        return function(e) {
                            return a[(65280 & e) >> 8]
                        }
                    }(),
                    s = function() {
                        return function(e, t) {
                            this.size = -8 & (e + 7 | 0), "undefined" === typeof t ? this.buffer = new ArrayBuffer(this.size) : (this.buffer = t, this.size = t.length), this.u8 = new Uint8Array(this.buffer), this.i32 = new Int32Array(this.buffer), this.f32 = new Float32Array(this.buffer), this.f64 = new Float64Array(this.buffer)
                        }
                    }(),
                    l = function() {
                        function e(e, n, a, o) {
                            this.type = 0 | i(a), this.channel = 0 | c(a), this.cols = 0 | e, this.rows = 0 | n, "undefined" === typeof o ? this.allocate() : (this.buffer = o, this.data = this.type & t ? this.buffer.u8 : this.type & r ? this.buffer.i32 : this.type & h ? this.buffer.f32 : this.buffer.f64)
                        }
                        return e.prototype.allocate = function() {
                            delete this.data, delete this.buffer, this.buffer = new s(this.cols * o(this.type) * this.channel * this.rows), this.data = this.type & t ? this.buffer.u8 : this.type & r ? this.buffer.i32 : this.type & h ? this.buffer.f32 : this.buffer.f64
                        }, e.prototype.copy_to = function(e) {
                            for (var t = e.data, r = this.data, n = 0, h = this.cols * this.rows * this.channel | 0; n < h - 4; n += 4) t[n] = r[n], t[n + 1] = r[n + 1], t[n + 2] = r[n + 2], t[n + 3] = r[n + 3];
                            for (; n < h; ++n) t[n] = r[n]
                        }, e.prototype.resize = function(e, t, r) {
                            "undefined" === typeof r && (r = this.channel);
                            var n = e * o(this.type) * r * t;
                            n > this.buffer.size ? (this.cols = e, this.rows = t, this.channel = r, this.allocate()) : (this.cols = e, this.rows = t, this.channel = r)
                        }, e
                    }(),
                    p = function() {
                        function e(e) {
                            this.levels = 0 | e, this.data = new Array(e), this.pyrdown = n.imgproc.pyrdown
                        }
                        return e.prototype.allocate = function(e, t, r) {
                            var n = this.levels;
                            while (--n >= 0) this.data[n] = new l(e >> n, t >> n, r)
                        }, e.prototype.build = function(e, t) {
                            "undefined" === typeof t && (t = !0);
                            var r = 2,
                                n = e,
                                h = this.data[0];
                            if (!t) {
                                var a = e.cols * e.rows;
                                while (--a >= 0) h.data[a] = e.data[a]
                            }
                            for (h = this.data[1], this.pyrdown(n, h); r < this.levels; ++r) n = h, h = this.data[r], this.pyrdown(n, h)
                        }, e
                    }(),
                    d = function() {
                        return function(e, t, r, n, h) {
                            "undefined" === typeof e && (e = 0), "undefined" === typeof t && (t = 0), "undefined" === typeof r && (r = 0), "undefined" === typeof n && (n = 0), "undefined" === typeof h && (h = -1), this.x = e, this.y = t, this.score = r, this.level = n, this.angle = h
                        }
                    }();
                e.U8_t = t, e.S32_t = r, e.F32_t = h, e.S64_t = 2048, e.F64_t = 4096, e.C1_t = 1, e.C2_t = 2, e.C3_t = 3, e.C4_t = 4, e.U8C1_t = 257, e.U8C3_t = 259, e.U8C4_t = 260, e.F32C1_t = 1025, e.F32C2_t = 1026, e.S32C1_t = 513, e.S32C2_t = 514, e.EPSILON = 1.192092896e-7, e.FLT_MIN = 1e-37, e.COLOR_RGBA2GRAY = 0, e.COLOR_RGB2GRAY = 1, e.COLOR_BGRA2GRAY = 2, e.COLOR_BGR2GRAY = 3, e.BOX_BLUR_NOSCALE = 1, e.SVD_U_T = 1, e.SVD_V_T = 2, e.get_data_type = i, e.get_channel = c, e.get_data_type_size = o, e.data_t = s, e.matrix_t = l, e.pyramid_t = p, e.keypoint_t = d
            })(n),
            function(e) {
                var t = function() {
                    var e, t, r = function() {
                        function e(e) {
                            this.next = null, this.data = new n.data_t(e), this.size = this.data.size, this.buffer = this.data.buffer, this.u8 = this.data.u8, this.i32 = this.data.i32, this.f32 = this.data.f32, this.f64 = this.data.f64
                        }
                        return e.prototype.resize = function(e) {
                            delete this.data, this.data = new n.data_t(e), this.size = this.data.size, this.buffer = this.data.buffer, this.u8 = this.data.u8, this.i32 = this.data.i32, this.f32 = this.data.f32, this.f64 = this.data.f64
                        }, e
                    }();
                    return {
                        allocate: function(n, h) {
                            e = t = new r(h);
                            for (var a = 0; a < n; ++a) {
                                var i = new r(h);
                                t = t.next = i
                            }
                        },
                        get_buffer: function(t) {
                            var r = e;
                            return e = e.next, t > r.size && r.resize(t), r
                        },
                        put_buffer: function(e) {
                            t = t.next = e
                        }
                    }
                }();
                e.cache = t, t.allocate(30, 2560)
            }(n),
            function(e) {
                var t = function() {
                    var e = new Int32Array(96);
                    return {
                        get_gaussian_kernel: function(e, t, r, h) {
                            var a = 0,
                                i = 0,
                                c = 0,
                                o = 0,
                                s = 0,
                                l = 0,
                                p = n.cache.get_buffer(e << 2),
                                d = p.f32;
                            if (1 == (1 & e) && e <= 7 && t <= 0) switch (e >> 1) {
                                case 0:
                                    d[0] = 1, l = 1;
                                    break;
                                case 1:
                                    d[0] = .25, d[1] = .5, d[2] = .25, l = 1;
                                    break;
                                case 2:
                                    d[0] = .0625, d[1] = .25, d[2] = .375, d[3] = .25, d[4] = .0625, l = 1;
                                    break;
                                case 3:
                                    d[0] = .03125, d[1] = .109375, d[2] = .21875, d[3] = .28125, d[4] = .21875, d[5] = .109375, d[6] = .03125, l = 1;
                                    break
                            } else
                                for (o = t > 0 ? t : .3 * (.5 * (e - 1) - 1) + .8, s = -.5 / (o * o); a < e; ++a) i = a - .5 * (e - 1), c = Math.exp(s * i * i), d[a] = c, l += c;
                            if (h & n.U8_t)
                                for (l = 256 / l, a = 0; a < e; ++a) r[a] = d[a] * l + .5 | 0;
                            else
                                for (l = 1 / l, a = 0; a < e; ++a) r[a] = d[a] * l;
                            n.cache.put_buffer(p)
                        },
                        perspective_4point_transform: function(e, t, r, n, h, a, i, c, o, s, l, p, d, b, g, j, x) {
                            var V = t,
                                f = s,
                                F = i,
                                k = V * f * F,
                                m = g,
                                P = V * m,
                                u = f * P,
                                X = l,
                                N = V * X,
                                H = a,
                                z = r,
                                Q = b,
                                R = z * Q,
                                v = R * H,
                                I = Q * H * X,
                                w = Q * F,
                                y = Q * X,
                                C = f * F,
                                A = m * f,
                                D = m * H,
                                S = X * H,
                                Y = 1 / (w - y - C + A - D + S),
                                B = V * Q,
                                T = z * H,
                                L = F * V,
                                M = m * L,
                                q = z * f,
                                G = R * X,
                                E = z * X * H,
                                W = F * m * f,
                                _ = m * z,
                                J = -(u - k + N * H - H * P - R * f + v - I + w * f) * Y,
                                U = (k - u - B * F + B * X + v - f * T + D * f - I) * Y,
                                O = V,
                                Z = (-X * P + M + q * F - R * F + G - E + D * X - W) * Y,
                                K = (L * X - M - _ * f + G - E + _ * H + W - w * X) * Y,
                                $ = z,
                                ee = (-N + L + q - T + y - w - A + D) * Y,
                                te = (-P + N + R - q + D - S - w + C) * Y;
                            V = n, f = p, F = o, k = V * f * F, m = x, P = V * m, u = f * P, X = d, N = V * X, H = c, z = h, Q = j, R = z * Q, v = R * H, I = Q * H * X, w = Q * F, y = Q * X, C = f * F, A = m * f, D = m * H, S = X * H, Y = 1 / (w - y - C + A - D + S), B = V * Q, T = z * H, L = F * V, M = m * L, q = z * f, G = R * X, E = z * X * H, W = F * m * f, _ = m * z;
                            var re = -(u - k + N * H - H * P - R * f + v - I + w * f) * Y,
                                ne = (k - u - B * F + B * X + v - f * T + D * f - I) * Y,
                                he = V,
                                ae = (-X * P + M + q * F - R * F + G - E + D * X - W) * Y,
                                ie = (L * X - M - _ * f + G - E + _ * H + W - w * X) * Y,
                                ce = z,
                                oe = (-N + L + q - T + y - w - A + D) * Y,
                                se = (-P + N + R - q + D - S - w + C) * Y;
                            f = K - te * $, F = J * K, k = J * $, P = Z * U, u = O * Z, N = U * ee;
                            var le = O * ee;
                            Q = 1 / (F - k * te - P + u * te + N * $ - le * K), v = $ * ee - Z;
                            var pe = -Z * te + K * ee;
                            S = O * te - U;
                            var de = J - le;
                            T = J * te - N, L = -U * $ + O * K;
                            var be = k - u,
                                ge = F - P;
                            E = f * Q;
                            var je = S * Q,
                                xe = L * Q,
                                Ve = e.data;
                            Ve[0] = re * E + ne * (v * Q) - he * (pe * Q), Ve[1] = re * je + ne * (de * Q) - he * (T * Q), Ve[2] = -re * xe - ne * (be * Q) + he * (ge * Q), Ve[3] = ae * E + ie * (v * Q) - ce * (pe * Q), Ve[4] = ae * je + ie * (de * Q) - ce * (T * Q), Ve[5] = -ae * xe - ie * (be * Q) + ce * (ge * Q), Ve[6] = oe * E + se * (v * Q) - pe * Q, Ve[7] = oe * je + se * (de * Q) - T * Q, Ve[8] = -oe * xe - se * (be * Q) + ge * Q
                        },
                        qsort: function(t, r, n, h) {
                            var a, i, c, o, s = 0,
                                l = 0,
                                p = 0,
                                d = 0,
                                b = 0,
                                g = 0,
                                j = 0,
                                x = 0,
                                V = 0,
                                f = 0,
                                F = 0,
                                k = 0,
                                m = 0,
                                P = 0,
                                u = 0,
                                X = 0,
                                N = 0,
                                H = 0,
                                z = e;
                            if (!(n - r + 1 <= 1)) {
                                z[0] = r, z[1] = n;
                                while (s >= 0)
                                    for (l = z[s << 1], p = z[1 + (s << 1)], s--;;) {
                                        if (b = p - l + 1, b <= 7) {
                                            for (j = l + 1; j <= p; j++)
                                                for (x = j; x > l && h(t[x], t[x - 1]); x--) a = t[x], t[x] = t[x - 1], t[x - 1] = a;
                                            break
                                        }
                                        for (H = 0, f = l, k = p, P = l + (b >> 1), b > 40 && (V = b >> 3, u = l, X = l + V, N = l + (V << 1), i = t[u], c = t[X], o = t[N], l = h(i, c) ? h(c, o) ? X : h(i, o) ? N : u : h(o, c) ? X : h(i, o) ? u : N, u = P - V, X = P, N = P + V, i = t[u], c = t[X], o = t[N], P = h(i, c) ? h(c, o) ? X : h(i, o) ? N : u : h(o, c) ? X : h(i, o) ? u : N, u = p - (V << 1), X = p - V, N = p, i = t[u], c = t[X], o = t[N], p = h(i, c) ? h(c, o) ? X : h(i, o) ? N : u : h(o, c) ? X : h(i, o) ? u : N), u = l, X = P, N = p, i = t[u], c = t[X], o = t[N], P = h(i, c) ? h(c, o) ? X : h(i, o) ? N : u : h(o, c) ? X : h(i, o) ? u : N, P != f && (a = t[P], t[P] = t[f], t[f] = a, P = f), l = F = f + 1, p = m = k, i = t[P];;) {
                                            while (l <= p && !h(i, t[l])) h(t[l], i) || (l > F && (a = t[F], t[F] = t[l], t[l] = a), H = 1, F++), l++;
                                            while (l <= p && !h(t[p], i)) h(i, t[p]) || (p < m && (a = t[m], t[m] = t[p], t[p] = a), H = 1, m--), p--;
                                            if (l > p) break;
                                            a = t[l], t[l] = t[p], t[p] = a, H = 1, l++, p--
                                        }
                                        if (0 == H) {
                                            for (l = f, p = k, j = l + 1; j <= p; j++)
                                                for (x = j; x > l && h(t[x], t[x - 1]); x--) a = t[x], t[x] = t[x - 1], t[x - 1] = a;
                                            break
                                        }
                                        for (b = Math.min(F - f, l - F), g = l - b | 0, d = 0; d < b; ++d, ++g) a = t[f + d], t[f + d] = t[g], t[g] = a;
                                        for (b = Math.min(k - m, m - p), g = k - b + 1 | 0, d = 0; d < b; ++d, ++g) a = t[l + d], t[l + d] = t[g], t[g] = a;
                                        if (b = l - F, g = m - p, b > 1) g > 1 ? b > g ? (++s, z[s << 1] = f, z[1 + (s << 1)] = f + b - 1, l = k - g + 1, p = k) : (++s, z[s << 1] = k - g + 1, z[1 + (s << 1)] = k, l = f, p = f + b - 1) : (l = f, p = f + b - 1);
                                        else {
                                            if (!(g > 1)) break;
                                            l = k - g + 1, p = k
                                        }
                                    }
                            }
                        },
                        median: function(e, t, r) {
                            for (var n, h = 0, a = 0, i = 0, c = t + r >> 1;;) {
                                if (r <= t) return e[c];
                                if (r == t + 1) return e[t] > e[r] && (n = e[t], e[t] = e[r], e[r] = n), e[c];
                                for (h = t + r >> 1, e[h] > e[r] && (n = e[h], e[h] = e[r], e[r] = n), e[t] > e[r] && (n = e[t], e[t] = e[r], e[r] = n), e[h] > e[t] && (n = e[h], e[h] = e[t], e[t] = n), a = t + 1, n = e[h], e[h] = e[a], e[a] = n, i = r;;) {
                                    do {
                                        ++a
                                    } while (e[t] > e[a]);
                                    do {
                                        --i
                                    } while (e[i] > e[t]);
                                    if (i < a) break;
                                    n = e[a], e[a] = e[i], e[i] = n
                                }
                                n = e[t], e[t] = e[i], e[i] = n, i <= c ? t = a : i >= c && (r = i - 1)
                            }
                            return 0
                        }
                    }
                }();
                e.math = t
            }(n),
            function(e) {
                var t = function() {
                    return {
                        identity: function(e, t) {
                            "undefined" === typeof t && (t = 1);
                            var r = e.data,
                                n = e.rows,
                                h = e.cols,
                                a = h + 1 | 0,
                                i = n * h,
                                c = i;
                            while (--i >= 0) r[i] = 0;
                            i = c, c = 0;
                            while (c < i) r[c] = t, c += a
                        },
                        transpose: function(e, t) {
                            for (var r = 0, n = 0, h = t.rows, a = t.cols, i = 0, c = 0, o = 0, s = t.data, l = e.data; r < h; c += 1, i += a, r++)
                                for (o = c, n = 0; n < a; o += h, n++) l[o] = s[i + n]
                        },
                        multiply: function(e, t, r) {
                            for (var n = 0, h = 0, a = 0, i = 0, c = 0, o = 0, s = 0, l = 0, p = t.cols, d = t.rows, b = r.cols, g = t.data, j = r.data, x = e.data, V = 0; n < d; i += p, n++)
                                for (s = 0, h = 0; h < b; l++, s++, h++) {
                                    for (o = s, c = i, V = 0, a = 0; a < p; c++, o += b, a++) V += g[c] * j[o];
                                    x[l] = V
                                }
                        },
                        multiply_ABt: function(e, t, r) {
                            for (var n = 0, h = 0, a = 0, i = 0, c = 0, o = 0, s = 0, l = t.cols, p = t.rows, d = r.rows, b = t.data, g = r.data, j = e.data, x = 0; n < p; i += l, n++)
                                for (o = 0, h = 0; h < d; s++, h++) {
                                    for (c = i, x = 0, a = 0; a < l; c++, o++, a++) x += b[c] * g[o];
                                    j[s] = x
                                }
                        },
                        multiply_AtB: function(e, t, r) {
                            for (var n = 0, h = 0, a = 0, i = 0, c = 0, o = 0, s = 0, l = 0, p = t.cols, d = t.rows, b = r.cols, g = t.data, j = r.data, x = e.data, V = 0; n < p; i++, n++)
                                for (s = 0, h = 0; h < b; l++, s++, h++) {
                                    for (o = s, c = i, V = 0, a = 0; a < d; c += p, o += b, a++) V += g[c] * j[o];
                                    x[l] = V
                                }
                        },
                        multiply_AAt: function(e, t) {
                            for (var r = 0, n = 0, h = 0, a = 0, i = 0, c = 0, o = 0, s = 0, l = 0, p = t.cols, d = t.rows, b = t.data, g = e.data, j = 0; r < d; a += d + 1, i = c, r++)
                                for (s = a, l = a, o = i, n = r; n < d; s++, l += d, n++) {
                                    for (c = i, j = 0, h = 0; h < p; h++) j += b[c++] * b[o++];
                                    g[s] = j, g[l] = j
                                }
                        },
                        multiply_AtA: function(e, t) {
                            for (var r = 0, n = 0, h = 0, a = 0, i = 0, c = 0, o = 0, s = 0, l = 0, p = t.cols, d = t.rows, b = t.data, g = e.data, j = 0; r < p; o += p, r++)
                                for (a = r, l = o + r, s = l, n = r; n < p; s++, l += p, n++) {
                                    for (i = a, c = n, j = 0, h = 0; h < d; i += p, c += p, h++) j += b[i] * b[c];
                                    g[s] = j, g[l] = j
                                }
                        },
                        identity_3x3: function(e, t) {
                            "undefined" === typeof t && (t = 1);
                            var r = e.data;
                            r[0] = r[4] = r[8] = t, r[1] = r[2] = r[3] = 0, r[5] = r[6] = r[7] = 0
                        },
                        invert_3x3: function(e, t) {
                            var r = e.data,
                                n = t.data,
                                h = r[4],
                                a = r[8],
                                i = r[5],
                                c = r[7],
                                o = r[0],
                                s = o * h,
                                l = o * i,
                                p = r[3],
                                d = r[1],
                                b = p * d,
                                g = r[2],
                                j = p * g,
                                x = r[6],
                                V = x * d,
                                f = x * g,
                                F = 1 / (s * a - l * c - b * a + j * c + V * i - f * h);
                            n[0] = (h * a - i * c) * F, n[1] = -(d * a - g * c) * F, n[2] = -(-d * i + g * h) * F, n[3] = -(p * a - i * x) * F, n[4] = (o * a - f) * F, n[5] = -(l - j) * F, n[6] = -(-p * c + h * x) * F, n[7] = -(o * c - V) * F, n[8] = (s - b) * F
                        },
                        multiply_3x3: function(e, t, r) {
                            var n = e.data,
                                h = t.data,
                                a = r.data,
                                i = h[0],
                                c = h[1],
                                o = h[2],
                                s = h[3],
                                l = h[4],
                                p = h[5],
                                d = h[6],
                                b = h[7],
                                g = h[8],
                                j = a[0],
                                x = a[1],
                                V = a[2],
                                f = a[3],
                                F = a[4],
                                k = a[5],
                                m = a[6],
                                P = a[7],
                                u = a[8];
                            n[0] = i * j + c * f + o * m, n[1] = i * x + c * F + o * P, n[2] = i * V + c * k + o * u, n[3] = s * j + l * f + p * m, n[4] = s * x + l * F + p * P, n[5] = s * V + l * k + p * u, n[6] = d * j + b * f + g * m, n[7] = d * x + b * F + g * P, n[8] = d * V + b * k + g * u
                        },
                        mat3x3_determinant: function(e) {
                            var t = e.data;
                            return t[0] * t[4] * t[8] - t[0] * t[5] * t[7] - t[3] * t[1] * t[8] + t[3] * t[2] * t[7] + t[6] * t[1] * t[5] - t[6] * t[2] * t[4]
                        },
                        determinant_3x3: function(e, t, r, n, h, a, i, c, o) {
                            return e * h * o - e * a * c - n * t * o + n * r * c + i * t * a - i * r * h
                        }
                    }
                }();
                e.matmath = t
            }(n),
            function(e) {
                var t = function() {
                    var e = function(e, t, r, n) {
                            n = e[t], e[t] = e[r], e[r] = n
                        },
                        t = function(e, t) {
                            return e = Math.abs(e), t = Math.abs(t), e > t ? (t /= e, e * Math.sqrt(1 + t * t)) : t > 0 ? (e /= t, t * Math.sqrt(1 + e * e)) : 0
                        };
                    return {
                        lu_solve: function(t, r) {
                            var h, a, i, c, o = 0,
                                s = 0,
                                l = 0,
                                p = 1,
                                d = t.cols,
                                b = t.data,
                                g = r.data;
                            for (o = 0; o < d; o++) {
                                for (l = o, s = o + 1; s < d; s++) Math.abs(b[s * d + o]) > Math.abs(b[l * d + o]) && (l = s);
                                if (Math.abs(b[l * d + o]) < n.EPSILON) return 0;
                                if (l != o) {
                                    for (s = o; s < d; s++) e(b, o * d + s, l * d + s, h);
                                    e(g, o, l, h), p = -p
                                }
                                for (i = -1 / b[o * d + o], s = o + 1; s < d; s++) {
                                    for (a = b[s * d + o] * i, l = o + 1; l < d; l++) b[s * d + l] += a * b[o * d + l];
                                    g[s] += a * g[o]
                                }
                                b[o * d + o] = -i
                            }
                            for (o = d - 1; o >= 0; o--) {
                                for (c = g[o], l = o + 1; l < d; l++) c -= b[o * d + l] * g[l];
                                g[o] = c * b[o * d + o]
                            }
                            return 1
                        },
                        cholesky_solve: function(e, t) {
                            var r, n, h = 0,
                                a = 0,
                                i = 0,
                                c = 0,
                                o = 0,
                                s = 0,
                                l = 0,
                                p = e.cols,
                                d = e.data,
                                b = t.data;
                            for (h = 0; h < p; h++)
                                for (n = 1, c = h * p, o = c, a = h; a < p; a++) {
                                    for (r = d[o + h], i = 0; i < h; i++) r -= d[i * p + h] * d[o + i];
                                    if (a == h) {
                                        if (d[o + h] = r, 0 == r) return 0;
                                        n = 1 / r
                                    } else d[c + a] = r, d[o + h] = r * n;
                                    o += p
                                }
                            for (c = 0, s = 0; s < p; s++) {
                                for (r = b[s], l = 0; l < s; l++) r -= d[c + l] * b[l];
                                b[s] = r, c += p
                            }
                            for (c = 0, s = 0; s < p; s++) b[s] /= d[c + s], c += p;
                            for (s = p - 1; s >= 0; s--) {
                                for (r = b[s], l = s + 1, c = l * p; l < p; l++) r -= d[c + s] * b[l], c += p;
                                b[s] = r
                            }
                            return 1
                        },
                        svd_decompose: function(r, h, a, i, c) {
                            "undefined" === typeof c && (c = 0);
                            var o = 0,
                                s = 0,
                                l = r.rows,
                                p = r.cols,
                                d = l,
                                b = p,
                                g = r.type | n.C1_t;
                            d < b && (o = 1, s = d, d = b, b = s);
                            var j = n.cache.get_buffer(d * d << 3),
                                x = n.cache.get_buffer(b << 3),
                                V = n.cache.get_buffer(b * b << 3),
                                f = new n.matrix_t(d, d, g, j.data),
                                F = new n.matrix_t(1, b, g, x.data),
                                k = new n.matrix_t(b, b, g, V.data);
                            if (0 == o) n.matmath.transpose(f, r);
                            else {
                                for (s = 0; s < p * l; s++) f.data[s] = r.data[s];
                                for (; s < b * d; s++) f.data[s] = 0
                            }
                            if (function(r, h, a, i, c, o, s, l) {
                                    for (var p = 2 * n.EPSILON, d = n.FLT_MIN, b = 0, g = 0, j = 0, x = 0, V = Math.max(o, 30), f = 0, F = 0, k = 0, m = 0, P = 0, u = 0, X = 0, N = 0, H = 0, z = 0, Q = 0, R = 0, v = 0, I = 0, w = 0, y = 0, C = 0, A = 4660, D = 0, S = 0, Y = 0, B = n.cache.get_buffer(s << 3), T = B.f64; b < s; b++) {
                                        for (j = 0, Q = 0; j < o; j++) N = r[b * h + j], Q += N * N;
                                        if (T[b] = Q, i) {
                                            for (j = 0; j < s; j++) i[b * c + j] = 0;
                                            i[b * c + b] = 1
                                        }
                                    }
                                    for (; x < V; x++) {
                                        for (P = 0, b = 0; b < s - 1; b++)
                                            for (g = b + 1; g < s; g++) {
                                                for (f = b * h | 0, F = g * h | 0, w = T[b], y = 0, C = T[g], j = 2, y += r[f] * r[F], y += r[f + 1] * r[F + 1]; j < o; j++) y += r[f + j] * r[F + j];
                                                if (!(Math.abs(y) <= p * Math.sqrt(w * C))) {
                                                    for (y *= 2, R = w - C, v = t(y, R), R < 0 ? (I = .5 * (v - R), X = Math.sqrt(I / v), u = y / (v * X * 2)) : (u = Math.sqrt((v + R) / (2 * v)), X = y / (v * u * 2)), w = 0, C = 0, j = 2, H = u * r[f] + X * r[F], z = -X * r[f] + u * r[F], r[f] = H, r[F] = z, w += H * H, C += z * z, H = u * r[f + 1] + X * r[F + 1], z = -X * r[f + 1] + u * r[F + 1], r[f + 1] = H, r[F + 1] = z, w += H * H, C += z * z; j < o; j++) H = u * r[f + j] + X * r[F + j], z = -X * r[f + j] + u * r[F + j], r[f + j] = H, r[F + j] = z, w += H * H, C += z * z;
                                                    if (T[b] = w, T[g] = C, P = 1, i)
                                                        for (k = b * c | 0, m = g * c | 0, j = 2, H = u * i[k] + X * i[m], z = -X * i[k] + u * i[m], i[k] = H, i[m] = z, H = u * i[k + 1] + X * i[m + 1], z = -X * i[k + 1] + u * i[m + 1], i[k + 1] = H, i[m + 1] = z; j < s; j++) H = u * i[k + j] + X * i[m + j], z = -X * i[k + j] + u * i[m + j], i[k + j] = H, i[m + j] = z
                                                }
                                            }
                                        if (0 == P) break
                                    }
                                    for (b = 0; b < s; b++) {
                                        for (j = 0, Q = 0; j < o; j++) N = r[b * h + j], Q += N * N;
                                        T[b] = Math.sqrt(Q)
                                    }
                                    for (b = 0; b < s - 1; b++) {
                                        for (g = b, j = b + 1; j < s; j++) T[g] < T[j] && (g = j);
                                        if (b != g && (e(T, b, g, Q), i)) {
                                            for (j = 0; j < o; j++) e(r, b * h + j, g * h + j, N);
                                            for (j = 0; j < s; j++) e(i, b * c + j, g * c + j, N)
                                        }
                                    }
                                    for (b = 0; b < s; b++) a[b] = T[b];
                                    if (i) {
                                        for (b = 0; b < l; b++) {
                                            Q = b < s ? T[b] : 0;
                                            while (Q <= d) {
                                                for (S = 1 / o, j = 0; j < o; j++) A = 214013 * A + 2531011, D = 0 != (256 & A >> 16) ? S : -S, r[b * h + j] = D;
                                                for (x = 0; x < 2; x++)
                                                    for (g = 0; g < b; g++) {
                                                        for (Q = 0, j = 0; j < o; j++) Q += r[b * h + j] * r[g * h + j];
                                                        for (Y = 0, j = 0; j < o; j++) N = r[b * h + j] - Q * r[g * h + j], r[b * h + j] = N, Y += Math.abs(N);
                                                        for (Y = Y ? 1 / Y : 0, j = 0; j < o; j++) r[b * h + j] *= Y
                                                    }
                                                for (Q = 0, j = 0; j < o; j++) N = r[b * h + j], Q += N * N;
                                                Q = Math.sqrt(Q)
                                            }
                                            for (X = 1 / Q, j = 0; j < o; j++) r[b * h + j] *= X
                                        }
                                        n.cache.put_buffer(B)
                                    } else n.cache.put_buffer(B)
                                }(f.data, d, F.data, k.data, b, d, b, d), h) {
                                for (s = 0; s < b; s++) h.data[s] = F.data[s];
                                for (; s < p; s++) h.data[s] = 0
                            }
                            if (0 == o) {
                                if (a && c & n.SVD_U_T) {
                                    s = d * d;
                                    while (--s >= 0) a.data[s] = f.data[s]
                                } else a && n.matmath.transpose(a, f);
                                if (i && c & n.SVD_V_T) {
                                    s = b * b;
                                    while (--s >= 0) i.data[s] = k.data[s]
                                } else i && n.matmath.transpose(i, k)
                            } else {
                                if (a && c & n.SVD_U_T) {
                                    s = b * b;
                                    while (--s >= 0) a.data[s] = k.data[s]
                                } else a && n.matmath.transpose(a, k);
                                if (i && c & n.SVD_V_T) {
                                    s = d * d;
                                    while (--s >= 0) i.data[s] = f.data[s]
                                } else i && n.matmath.transpose(i, f)
                            }
                            n.cache.put_buffer(j), n.cache.put_buffer(x), n.cache.put_buffer(V)
                        },
                        svd_solve: function(e, t, r) {
                            var h, a = 0,
                                i = 0,
                                c = 0,
                                o = 0,
                                s = 0,
                                l = e.rows,
                                p = e.cols,
                                d = 0,
                                b = 0,
                                g = e.type | n.C1_t,
                                j = n.cache.get_buffer(l * l << 3),
                                x = n.cache.get_buffer(p << 3),
                                V = n.cache.get_buffer(p * p << 3),
                                f = new n.matrix_t(l, l, g, j.data),
                                F = new n.matrix_t(1, p, g, x.data),
                                k = new n.matrix_t(p, p, g, V.data),
                                m = r.data,
                                P = f.data,
                                u = F.data,
                                X = k.data;
                            for (this.svd_decompose(e, F, f, k, 0), h = n.EPSILON * u[0] * p; a < p; a++, s += p) {
                                for (b = 0, i = 0; i < p; i++)
                                    if (u[i] > h) {
                                        for (c = 0, d = 0, o = 0; c < l; c++, o += p) d += P[o + i] * m[c];
                                        b += d * X[s + i] / u[i]
                                    } t.data[a] = b
                            }
                            n.cache.put_buffer(j), n.cache.put_buffer(x), n.cache.put_buffer(V)
                        },
                        svd_invert: function(e, t) {
                            var r, h = 0,
                                a = 0,
                                i = 0,
                                c = 0,
                                o = 0,
                                s = 0,
                                l = t.rows,
                                p = t.cols,
                                d = 0,
                                b = t.type | n.C1_t,
                                g = n.cache.get_buffer(l * l << 3),
                                j = n.cache.get_buffer(p << 3),
                                x = n.cache.get_buffer(p * p << 3),
                                V = new n.matrix_t(l, l, b, g.data),
                                f = new n.matrix_t(1, p, b, j.data),
                                F = new n.matrix_t(p, p, b, x.data),
                                k = e.data,
                                m = V.data,
                                P = f.data,
                                u = F.data;
                            for (this.svd_decompose(t, f, V, F, 0), r = n.EPSILON * P[0] * p; h < p; h++, o += p)
                                for (a = 0, c = 0; a < l; a++, s++) {
                                    for (i = 0, d = 0; i < p; i++, c++) P[i] > r && (d += u[o + i] * m[c] / P[i]);
                                    k[s] = d
                                }
                            n.cache.put_buffer(g), n.cache.put_buffer(j), n.cache.put_buffer(x)
                        },
                        eigenVV: function(r, h, a) {
                            var i = r.cols,
                                c = i * i,
                                o = r.type | n.C1_t,
                                s = n.cache.get_buffer(i * i << 3),
                                l = n.cache.get_buffer(i << 3),
                                p = new n.matrix_t(i, i, o, s.data),
                                d = new n.matrix_t(1, i, o, l.data);
                            while (--c >= 0) p.data[c] = r.data[c];
                            if (function(r, h, a, i, c, o) {
                                    var s = n.EPSILON,
                                        l = 0,
                                        p = 0,
                                        d = 0,
                                        b = 0,
                                        g = 0,
                                        j = 0,
                                        x = 0,
                                        V = 0,
                                        f = 0,
                                        F = o * o * 30,
                                        k = 0,
                                        m = 0,
                                        P = 0,
                                        u = 0,
                                        X = 0,
                                        N = 0,
                                        H = 0,
                                        z = 0,
                                        Q = 0,
                                        R = n.cache.get_buffer(o << 2),
                                        v = n.cache.get_buffer(o << 2),
                                        I = R.i32,
                                        w = v.i32;
                                    if (i)
                                        for (; l < o; l++) {
                                            for (d = l * c, p = 0; p < o; p++) i[d + p] = 0;
                                            i[d + l] = 1
                                        }
                                    for (d = 0; d < o; d++) {
                                        if (a[d] = r[(h + 1) * d], d < o - 1) {
                                            for (b = d + 1, k = Math.abs(r[h * d + b]), l = d + 2; l < o; l++) m = Math.abs(r[h * d + l]), k < m && (k = m, b = l);
                                            I[d] = b
                                        }
                                        if (d > 0) {
                                            for (b = 0, k = Math.abs(r[d]), l = 1; l < d; l++) m = Math.abs(r[h * l + d]), k < m && (k = m, b = l);
                                            w[d] = b
                                        }
                                    }
                                    if (o > 1)
                                        for (; f < F; f++) {
                                            for (d = 0, k = Math.abs(r[I[0]]), l = 1; l < o - 1; l++) m = Math.abs(r[h * l + I[l]]), k < m && (k = m, d = l);
                                            for (g = I[d], l = 1; l < o; l++) m = Math.abs(r[h * w[l] + l]), k < m && (k = m, d = w[l], g = l);
                                            if (P = r[h * d + g], Math.abs(P) <= s) break;
                                            for (u = .5 * (a[g] - a[d]), X = Math.abs(u) + t(P, u), N = t(P, X), H = X / N, N = P / N, X = P / X * P, u < 0 && (N = -N, X = -X), r[h * d + g] = 0, a[d] -= X, a[g] += X, l = 0; l < d; l++) x = h * l + d, V = h * l + g, z = r[x], Q = r[V], r[x] = z * H - Q * N, r[V] = z * N + Q * H;
                                            for (l = d + 1; l < g; l++) x = h * d + l, V = h * l + g, z = r[x], Q = r[V], r[x] = z * H - Q * N, r[V] = z * N + Q * H;
                                            for (l = g + 1, x = h * d + l, V = h * g + l; l < o; l++, x++, V++) z = r[x], Q = r[V], r[x] = z * H - Q * N, r[V] = z * N + Q * H;
                                            if (i)
                                                for (x = c * d, V = c * g, l = 0; l < o; l++, x++, V++) z = i[x], Q = i[V], i[x] = z * H - Q * N, i[V] = z * N + Q * H;
                                            for (p = 0; p < 2; p++) {
                                                if (j = 0 == p ? d : g, j < o - 1) {
                                                    for (b = j + 1, k = Math.abs(r[h * j + b]), l = j + 2; l < o; l++) m = Math.abs(r[h * j + l]), k < m && (k = m, b = l);
                                                    I[j] = b
                                                }
                                                if (j > 0) {
                                                    for (b = 0, k = Math.abs(r[j]), l = 1; l < j; l++) m = Math.abs(r[h * l + j]), k < m && (k = m, b = l);
                                                    w[j] = b
                                                }
                                            }
                                        }
                                    for (d = 0; d < o - 1; d++) {
                                        for (b = d, l = d + 1; l < o; l++) a[b] < a[l] && (b = l);
                                        if (d != b && (e(a, b, d, k), i))
                                            for (l = 0; l < o; l++) e(i, c * b + l, c * d + l, k)
                                    }
                                    n.cache.put_buffer(R), n.cache.put_buffer(v)
                                }(p.data, i, d.data, h ? h.data : null, i, i), a)
                                while (--i >= 0) a.data[i] = d.data[i];
                            n.cache.put_buffer(s), n.cache.put_buffer(l)
                        }
                    }
                }();
                e.linalg = t
            }(n),
            function(e) {
                var t = function() {
                        var e = function(e) {
                                return e * e
                            },
                            t = new n.matrix_t(3, 3, n.F32_t | n.C1_t),
                            r = new n.matrix_t(3, 3, n.F32_t | n.C1_t),
                            h = new n.matrix_t(6, 6, n.F32_t | n.C1_t),
                            a = new n.matrix_t(6, 1, n.F32_t | n.C1_t),
                            i = function() {
                                function i() {}
                                return i.prototype.run = function(e, i, c, o) {
                                    var s, l, p = 0,
                                        d = 0,
                                        b = c.type | n.C1_t,
                                        g = c.data,
                                        j = t.data,
                                        x = r.data,
                                        V = 0,
                                        f = 0;
                                    (function(e, t, r, n, h) {
                                        for (var a, i, c = 0, o = 0, s = 0, l = 0, p = 0, d = 0, b = 0, g = 0, j = 0; c < h; ++c) o += e[c].x, s += e[c].y, p += t[c].x, d += t[c].y;
                                        for (o /= h, s /= h, p /= h, d /= h, c = 0; c < h; ++c) g = e[c].x - o, j = e[c].y - s, l += Math.sqrt(g * g + j * j), g = t[c].x - p, j = t[c].y - d, b += Math.sqrt(g * g + j * j);
                                        l /= h, b /= h, a = Math.SQRT2 / l, i = Math.SQRT2 / b, r[0] = r[4] = a, r[2] = -o * a, r[5] = -s * a, r[1] = r[3] = r[6] = r[7] = 0, r[8] = 1, n[0] = n[4] = i, n[2] = -p * i, n[5] = -d * i, n[1] = n[3] = n[6] = n[7] = 0, n[8] = 1
                                    })(e, i, j, x, o);
                                    for (var F = n.cache.get_buffer(2 * o * 6 << 3), k = n.cache.get_buffer(2 * o << 3), m = new n.matrix_t(6, 2 * o, b, F.data), P = new n.matrix_t(1, 2 * o, b, k.data), u = m.data, X = P.data; p < o; ++p) s = e[p], l = i[p], V = j[0] * s.x + j[1] * s.y + j[2], f = j[3] * s.x + j[4] * s.y + j[5], d = 2 * p * 6, u[d] = V, u[d + 1] = f, u[d + 2] = 1, u[d + 3] = 0, u[d + 4] = 0, u[d + 5] = 0, d += 6, u[d] = 0, u[d + 1] = 0, u[d + 2] = 0, u[d + 3] = V, u[d + 4] = f, u[d + 5] = 1, X[p << 1] = x[0] * l.x + x[1] * l.y + x[2], X[1 + (p << 1)] = x[3] * l.x + x[4] * l.y + x[5];
                                    return n.matmath.multiply_AtA(h, m), n.matmath.multiply_AtB(a, m, P), n.linalg.lu_solve(h, a), g[0] = a.data[0], g[1] = a.data[1], g[2] = a.data[2], g[3] = a.data[3], g[4] = a.data[4], g[5] = a.data[5], g[6] = 0, g[7] = 0, g[8] = 1, n.matmath.invert_3x3(r, r), n.matmath.multiply_3x3(c, r, c), n.matmath.multiply_3x3(c, c, t), n.cache.put_buffer(F), n.cache.put_buffer(k), 1
                                }, i.prototype.error = function(t, r, n, h, a) {
                                    for (var i, c, o = 0, s = n.data; o < a; ++o) i = t[o], c = r[o], h[o] = e(c.x - s[0] * i.x - s[1] * i.y - s[2]) + e(c.y - s[3] * i.x - s[4] * i.y - s[5])
                                }, i.prototype.check_subset = function(e, t, r) {
                                    return !0
                                }, i
                            }(),
                            c = new n.matrix_t(9, 9, n.F32_t | n.C1_t),
                            o = new n.matrix_t(9, 9, n.F32_t | n.C1_t),
                            s = function() {
                                function e() {}
                                return e.prototype.run = function(e, h, a, i) {
                                    for (var s = 0, l = 0, p = a.data, d = t.data, b = r.data, g = c.data, j = o.data, x = 0, V = 0, f = 0, F = 0, k = 0, m = 0, P = 0, u = 0, X = 0, N = 0, H = 0, z = 0; s < i; ++s) P += h[s].x, u += h[s].y, H += e[s].x, z += e[s].y;
                                    for (P /= i, u /= i, H /= i, z /= i, s = 0; s < i; ++s) k += Math.abs(h[s].x - P), m += Math.abs(h[s].y - u), X += Math.abs(e[s].x - H), N += Math.abs(e[s].y - z);
                                    if (Math.abs(k) < n.EPSILON || Math.abs(m) < n.EPSILON || Math.abs(X) < n.EPSILON || Math.abs(N) < n.EPSILON) return 0;
                                    k = i / k, m = i / m, X = i / X, N = i / N, d[0] = X, d[1] = 0, d[2] = -H * X, d[3] = 0, d[4] = N, d[5] = -z * N, d[6] = 0, d[7] = 0, d[8] = 1, b[0] = 1 / k, b[1] = 0, b[2] = P, b[3] = 0, b[4] = 1 / m, b[5] = u, b[6] = 0, b[7] = 0, b[8] = 1, s = 81;
                                    while (--s >= 0) g[s] = 0;
                                    for (s = 0; s < i; ++s) x = (h[s].x - P) * k, V = (h[s].y - u) * m, f = (e[s].x - H) * X, F = (e[s].y - z) * N, g[0] += f * f, g[1] += f * F, g[2] += f, g[6] += f * -x * f, g[7] += f * -x * F, g[8] += f * -x, g[10] += F * F, g[11] += F, g[15] += F * -x * f, g[16] += F * -x * F, g[17] += F * -x, g[20] += 1, g[24] += -x * f, g[25] += -x * F, g[26] += -x, g[30] += f * f, g[31] += f * F, g[32] += f, g[33] += f * -V * f, g[34] += f * -V * F, g[35] += f * -V, g[40] += F * F, g[41] += F, g[42] += F * -V * f, g[43] += F * -V * F, g[44] += F * -V, g[50] += 1, g[51] += -V * f, g[52] += -V * F, g[53] += -V, g[60] += -x * f * -x * f + -V * f * -V * f, g[61] += -x * f * -x * F + -V * f * -V * F, g[62] += -x * f * -x + -V * f * -V, g[70] += -x * F * -x * F + -V * F * -V * F, g[71] += -x * F * -x + -V * F * -V, g[80] += -x * -x + -V * -V;
                                    for (s = 0; s < 9; ++s)
                                        for (l = 0; l < s; ++l) g[9 * s + l] = g[9 * l + s];
                                    return n.linalg.eigenVV(c, o), p[0] = j[72], p[1] = j[73], p[2] = j[74], p[3] = j[75], p[4] = j[76], p[5] = j[77], p[6] = j[78], p[7] = j[79], p[8] = j[80], n.matmath.multiply_3x3(a, r, a), n.matmath.multiply_3x3(a, a, t), x = 1 / p[8], p[0] *= x, p[1] *= x, p[2] *= x, p[3] *= x, p[4] *= x, p[5] *= x, p[6] *= x, p[7] *= x, p[8] = 1, 1
                                }, e.prototype.error = function(e, t, r, n, h) {
                                    for (var a, i, c = 0, o = 0, s = 0, l = 0, p = r.data; c < h; ++c) a = e[c], i = t[c], o = 1 / (p[6] * a.x + p[7] * a.y + 1), s = (p[0] * a.x + p[1] * a.y + p[2]) * o - i.x, l = (p[3] * a.x + p[4] * a.y + p[5]) * o - i.y, n[c] = s * s + l * l
                                }, e.prototype.check_subset = function(e, t, r) {
                                    if (4 == r) {
                                        var h = 0,
                                            a = e[0],
                                            i = e[1],
                                            c = e[2],
                                            o = e[3],
                                            s = t[0],
                                            l = t[1],
                                            p = t[2],
                                            d = t[3],
                                            b = a.x,
                                            g = a.y,
                                            j = i.x,
                                            x = i.y,
                                            V = c.x,
                                            f = c.y,
                                            F = s.x,
                                            k = s.y,
                                            m = l.x,
                                            P = l.y,
                                            u = p.x,
                                            X = p.y,
                                            N = n.matmath.determinant_3x3(b, g, 1, j, x, 1, V, f, 1),
                                            H = n.matmath.determinant_3x3(F, k, 1, m, P, 1, u, X, 1);
                                        if (N * H < 0 && h++, b = i.x, g = i.y, j = c.x, x = c.y, V = o.x, f = o.y, F = l.x, k = l.y, m = p.x, P = p.y, u = d.x, X = d.y, N = n.matmath.determinant_3x3(b, g, 1, j, x, 1, V, f, 1), H = n.matmath.determinant_3x3(F, k, 1, m, P, 1, u, X, 1), N * H < 0 && h++, b = a.x, g = a.y, j = c.x, x = c.y, V = o.x, f = o.y, F = s.x, k = s.y, m = p.x, P = p.y, u = d.x, X = d.y, N = n.matmath.determinant_3x3(b, g, 1, j, x, 1, V, f, 1), H = n.matmath.determinant_3x3(F, k, 1, m, P, 1, u, X, 1), N * H < 0 && h++, b = a.x, g = a.y, j = i.x, x = i.y, V = o.x, f = o.y, F = s.x, k = s.y, m = l.x, P = l.y, u = d.x, X = d.y, N = n.matmath.determinant_3x3(b, g, 1, j, x, 1, V, f, 1), H = n.matmath.determinant_3x3(F, k, 1, m, P, 1, u, X, 1), N * H < 0 && h++, 0 != h && 4 != h) return !1
                                    }
                                    return !0
                                }, e
                            }();
                        return {
                            affine2d: i,
                            homography2d: s
                        }
                    }(),
                    r = function() {
                        function e(e, t, r, n) {
                            "undefined" === typeof e && (e = 0), "undefined" === typeof t && (t = .5), "undefined" === typeof r && (r = .5), "undefined" === typeof n && (n = .99), this.size = e, this.thresh = t, this.eps = r, this.prob = n
                        }
                        return e.prototype.update_iters = function(e, t) {
                            var r = Math.log(1 - this.prob),
                                n = Math.log(1 - Math.pow(1 - e, this.size));
                            return 0 | (n >= 0 || -r >= t * -n ? t : Math.round(r / n))
                        }, e
                    }(),
                    h = function() {
                        var e = function(e, t, r, n, h, a, i) {
                                for (var c = 1e3, o = [], s = 0, l = 0, p = 0, d = 0, b = !1; p < c; ++p) {
                                    for (s = 0; s < n && p < c;) {
                                        b = !1, d = 0;
                                        while (!b)
                                            for (b = !0, d = o[s] = 0 | Math.floor(Math.random() * h), l = 0; l < s; ++l)
                                                if (d == o[l]) {
                                                    b = !1;
                                                    break
                                                } a[s] = t[d], i[s] = r[d], e.check_subset(a, i, s + 1) ? ++s : p++
                                    }
                                    break
                                }
                                return s == n && p < c
                            },
                            t = function(e, t, r, n, h, a, i, c) {
                                var o = 0,
                                    s = 0,
                                    l = 0,
                                    p = a * a;
                                for (e.error(r, n, t, i, h); s < h; ++s) l = i[s] <= p, c[s] = l, o += l;
                                return o
                            };
                        return {
                            ransac: function(r, h, a, i, c, o, s, l) {
                                if ("undefined" === typeof l && (l = 1e3), c < r.size) return !1;
                                var p = r.size,
                                    d = l,
                                    b = 0,
                                    g = !1,
                                    j = [],
                                    x = [],
                                    V = !1,
                                    f = o.cols,
                                    F = o.rows,
                                    k = o.type | n.C1_t,
                                    m = n.cache.get_buffer(f * F << 3),
                                    P = n.cache.get_buffer(c),
                                    u = n.cache.get_buffer(c << 2),
                                    X = new n.matrix_t(f, F, k, m.data),
                                    N = new n.matrix_t(c, 1, n.U8C1_t, P.data),
                                    H = -1,
                                    z = 0,
                                    Q = 0,
                                    R = u.f32;
                                if (c == p) {
                                    if (h.run(a, i, X, c) <= 0) return n.cache.put_buffer(m), n.cache.put_buffer(P), n.cache.put_buffer(u), !1;
                                    if (X.copy_to(o), s)
                                        while (--c >= 0) s.data[c] = 1;
                                    return n.cache.put_buffer(m), n.cache.put_buffer(P), n.cache.put_buffer(u), !0
                                }
                                for (; b < d; ++b) {
                                    if (V = e(h, a, i, p, c, j, x), !V) {
                                        if (0 == b) return n.cache.put_buffer(m), n.cache.put_buffer(P), n.cache.put_buffer(u), !1;
                                        break
                                    }
                                    Q = h.run(j, x, X, p), Q <= 0 || (z = t(h, X, a, i, c, r.thresh, R, N.data), z > Math.max(H, p - 1) && (X.copy_to(o), H = z, s && N.copy_to(s), d = r.update_iters((c - z) / c, d), g = !0))
                                }
                                return n.cache.put_buffer(m), n.cache.put_buffer(P), n.cache.put_buffer(u), g
                            },
                            lmeds: function(r, h, a, i, c, o, s, l) {
                                if ("undefined" === typeof l && (l = 1e3), c < r.size) return !1;
                                var p = r.size,
                                    d = l,
                                    b = 0,
                                    g = !1,
                                    j = [],
                                    x = [],
                                    V = !1,
                                    f = o.cols,
                                    F = o.rows,
                                    k = o.type | n.C1_t,
                                    m = n.cache.get_buffer(f * F << 3),
                                    P = n.cache.get_buffer(c),
                                    u = n.cache.get_buffer(c << 2),
                                    X = new n.matrix_t(f, F, k, m.data),
                                    N = new n.matrix_t(c, 1, n.U8_t | n.C1_t, P.data),
                                    H = 0,
                                    z = 0,
                                    Q = u.f32,
                                    R = 1e9,
                                    v = 0,
                                    I = 0;
                                if (r.eps = .45, d = r.update_iters(r.eps, d), c == p) {
                                    if (h.run(a, i, X, c) <= 0) return n.cache.put_buffer(m), n.cache.put_buffer(P), n.cache.put_buffer(u), !1;
                                    if (X.copy_to(o), s)
                                        while (--c >= 0) s.data[c] = 1;
                                    return n.cache.put_buffer(m), n.cache.put_buffer(P), n.cache.put_buffer(u), !0
                                }
                                for (; b < d; ++b) {
                                    if (V = e(h, a, i, p, c, j, x), !V) {
                                        if (0 == b) return n.cache.put_buffer(m), n.cache.put_buffer(P), n.cache.put_buffer(u), !1;
                                        break
                                    }
                                    z = h.run(j, x, X, p), z <= 0 || (h.error(a, i, X, Q, c), I = n.math.median(Q, 0, c - 1), I < R && (R = I, X.copy_to(o), g = !0))
                                }
                                return g && (v = 2.5 * 1.4826 * (1 + 5 / (c - p)) * Math.sqrt(R), v = Math.max(v, .001), H = t(h, o, a, i, c, v, Q, N.data), s && N.copy_to(s), g = H >= p), n.cache.put_buffer(m), n.cache.put_buffer(P), n.cache.put_buffer(u), g
                            }
                        }
                    }();
                e.ransac_params_t = r, e.motion_model = t, e.motion_estimator = h
            }(n),
            function(e) {
                var t = function() {
                    return {
                        grayscale: function(e, t, r, h, a) {
                            "undefined" === typeof a && (a = n.COLOR_RGBA2GRAY);
                            var i = 0,
                                c = 0,
                                o = 0,
                                s = 0,
                                l = 0,
                                p = 0,
                                d = 4899,
                                b = 9617,
                                g = 1868,
                                j = 4;
                            a != n.COLOR_BGRA2GRAY && a != n.COLOR_BGR2GRAY || (d = 1868, g = 4899), a != n.COLOR_RGB2GRAY && a != n.COLOR_BGR2GRAY || (j = 3);
                            var x = j << 1,
                                V = 3 * j | 0;
                            h.resize(t, r, 1);
                            var f = h.data;
                            for (c = 0; c < r; ++c, s += t, o += t * j) {
                                for (i = 0, l = o, p = s; i <= t - 4; i += 4, l += j << 2, p += 4) f[p] = e[l] * d + e[l + 1] * b + e[l + 2] * g + 8192 >> 14, f[p + 1] = e[l + j] * d + e[l + j + 1] * b + e[l + j + 2] * g + 8192 >> 14, f[p + 2] = e[l + x] * d + e[l + x + 1] * b + e[l + x + 2] * g + 8192 >> 14, f[p + 3] = e[l + V] * d + e[l + V + 1] * b + e[l + V + 2] * g + 8192 >> 14;
                                for (; i < t; ++i, ++p, l += j) f[p] = e[l] * d + e[l + 1] * b + e[l + 2] * g + 8192 >> 14
                            }
                        },
                        resample: function(e, t, r, h) {
                            var a = e.rows,
                                i = e.cols;
                            a > h && i > r && (t.resize(r, h, e.channel), e.type & n.U8_t && t.type & n.U8_t && a * i / (h * r) < 256 ? function(e, t, r, h) {
                                for (var a = 0, i = e.channel, c = e.cols, o = e.rows, s = e.data, l = t.data, p = c / r, d = o / h, b = p * d * 65536 | 0, g = 0, j = 0, x = 0, V = 0, f = 0, F = 0, k = 0, m = 0, P = 0, u = 0, X = 0, N = 0, H = 0, z = 0, Q = 0, R = 0, v = n.cache.get_buffer(r * i << 2), I = n.cache.get_buffer(r * i << 2), w = n.cache.get_buffer(2 * c * 3 << 2), y = v.i32, C = I.i32, A = w.i32; g < r; g++) {
                                    for (P = g * p, u = P + p, f = P + 1 - 1e-6 | 0, F = 0 | u, f = Math.min(f, c - 1), F = Math.min(F, c - 1), f > P && (A[m++] = g * i | 0, A[m++] = (f - 1) * i | 0, A[m++] = 256 * (f - P) | 0, a++), x = f; x < F; x++) a++, A[m++] = g * i | 0, A[m++] = x * i | 0, A[m++] = 256;
                                    u - F > .001 && (a++, A[m++] = g * i | 0, A[m++] = F * i | 0, A[m++] = 256 * (u - F) | 0)
                                }
                                for (g = 0; g < r * i; g++) y[g] = C[g] = 0;
                                for (j = 0, V = 0; V < o; V++) {
                                    for (X = c * V, m = 0; m < a; m++)
                                        for (H = A[3 * m], f = A[3 * m + 1], z = A[3 * m + 2], k = 0; k < i; k++) y[H + k] += s[X + f + k] * z;
                                    if ((j + 1) * d <= V + 1 || V == o - 1) {
                                        if (Q = 256 * Math.max(V + 1 - (j + 1) * d, 0) | 0, R = 256 - Q, N = r * j, Q <= 0)
                                            for (g = 0; g < r * i; g++) l[N + g] = Math.min(Math.max((C[g] + 256 * y[g]) / b, 0), 255), C[g] = y[g] = 0;
                                        else
                                            for (g = 0; g < r * i; g++) l[N + g] = Math.min(Math.max((C[g] + y[g] * R) / b, 0), 255), C[g] = y[g] * Q, y[g] = 0;
                                        j++
                                    } else
                                        for (g = 0; g < r * i; g++) C[g] += 256 * y[g], y[g] = 0
                                }
                                n.cache.put_buffer(I), n.cache.put_buffer(v), n.cache.put_buffer(w)
                            }(e, t, r, h) : function(e, t, r, h) {
                                for (var a = 0, i = e.channel, c = e.cols, o = e.rows, s = e.data, l = t.data, p = c / r, d = o / h, b = 1 / (p * d), g = 0, j = 0, x = 0, V = 0, f = 0, F = 0, k = 0, m = 0, P = 0, u = 0, X = 0, N = 0, H = 0, z = 0, Q = 0, R = 0, v = n.cache.get_buffer(r * i << 2), I = n.cache.get_buffer(r * i << 2), w = n.cache.get_buffer(2 * c * 3 << 2), y = v.f32, C = I.f32, A = w.f32; g < r; g++) {
                                    for (P = g * p, u = P + p, f = P + 1 - 1e-6 | 0, F = 0 | u, f = Math.min(f, c - 1), F = Math.min(F, c - 1), f > P && (a++, A[m++] = (f - 1) * i | 0, A[m++] = g * i | 0, A[m++] = (f - P) * b), x = f; x < F; x++) a++, A[m++] = x * i | 0, A[m++] = g * i | 0, A[m++] = b;
                                    u - F > .001 && (a++, A[m++] = F * i | 0, A[m++] = g * i | 0, A[m++] = (u - F) * b)
                                }
                                for (g = 0; g < r * i; g++) y[g] = C[g] = 0;
                                for (j = 0, V = 0; V < o; V++) {
                                    for (X = c * V, m = 0; m < a; m++)
                                        for (f = 0 | A[3 * m], H = 0 | A[3 * m + 1], z = A[3 * m + 2], k = 0; k < i; k++) y[H + k] += s[X + f + k] * z;
                                    if ((j + 1) * d <= V + 1 || V == o - 1) {
                                        if (Q = Math.max(V + 1 - (j + 1) * d, 0), R = 1 - Q, N = r * j, Math.abs(Q) < .001)
                                            for (g = 0; g < r * i; g++) l[N + g] = C[g] + y[g], C[g] = y[g] = 0;
                                        else
                                            for (g = 0; g < r * i; g++) l[N + g] = C[g] + y[g] * R, C[g] = y[g] * Q, y[g] = 0;
                                        j++
                                    } else
                                        for (g = 0; g < r * i; g++) C[g] += y[g], y[g] = 0
                                }
                                n.cache.put_buffer(I), n.cache.put_buffer(v), n.cache.put_buffer(w)
                            }(e, t, r, h))
                        },
                        box_blur_gray: function(e, t, r, h) {
                            "undefined" === typeof h && (h = 0);
                            var a = e.cols,
                                i = e.rows,
                                c = i << 1,
                                o = a << 1,
                                s = 0,
                                l = 0,
                                p = 0,
                                d = 0,
                                b = 1 + (r << 1) | 0,
                                g = r + 1 | 0,
                                j = g + 1 | 0,
                                x = h & n.BOX_BLUR_NOSCALE ? 1 : 1 / (b * b),
                                V = n.cache.get_buffer(a * i << 2),
                                f = 0,
                                F = 0,
                                k = 0,
                                m = 0,
                                P = 0,
                                u = V.i32,
                                X = e.data,
                                N = 0;
                            for (t.resize(a, i, e.channel), p = 0; p < i; ++p) {
                                for (F = p, f = g * X[k], s = k + 1 | 0, d = k + r | 0; s <= d; ++s) f += X[s];
                                for (m = k + g | 0, P = k, N = X[P], l = 0; l < r; ++l, F += i) u[F] = f, f += X[m] - N, m++;
                                for (; l < a - j; l += 2, F += c) u[F] = f, f += X[m] - X[P], u[F + i] = f, f += X[m + 1] - X[P + 1], m += 2, P += 2;
                                for (; l < a - g; ++l, F += i) u[F] = f, f += X[m] - X[P], m++, P++;
                                for (N = X[m - 1]; l < a; ++l, F += i) u[F] = f, f += N - X[P], P++;
                                k += a
                            }
                            if (k = 0, X = t.data, 1 == x)
                                for (p = 0; p < a; ++p) {
                                    for (F = p, f = g * u[k], s = k + 1 | 0, d = k + r | 0; s <= d; ++s) f += u[s];
                                    for (m = k + g, P = k, N = u[P], l = 0; l < r; ++l, F += a) X[F] = f, f += u[m] - N, m++;
                                    for (; l < i - j; l += 2, F += o) X[F] = f, f += u[m] - u[P], X[F + a] = f, f += u[m + 1] - u[P + 1], m += 2, P += 2;
                                    for (; l < i - g; ++l, F += a) X[F] = f, f += u[m] - u[P], m++, P++;
                                    for (N = u[m - 1]; l < i; ++l, F += a) X[F] = f, f += N - u[P], P++;
                                    k += i
                                } else
                                    for (p = 0; p < a; ++p) {
                                        for (F = p, f = g * u[k], s = k + 1 | 0, d = k + r | 0; s <= d; ++s) f += u[s];
                                        for (m = k + g, P = k, N = u[P], l = 0; l < r; ++l, F += a) X[F] = f * x, f += u[m] - N, m++;
                                        for (; l < i - j; l += 2, F += o) X[F] = f * x, f += u[m] - u[P], X[F + a] = f * x, f += u[m + 1] - u[P + 1], m += 2, P += 2;
                                        for (; l < i - g; ++l, F += a) X[F] = f * x, f += u[m] - u[P], m++, P++;
                                        for (N = u[m - 1]; l < i; ++l, F += a) X[F] = f * x, f += N - u[P], P++;
                                        k += i
                                    }
                            n.cache.put_buffer(V)
                        },
                        gaussian_blur: function(e, t, r, h) {
                            "undefined" === typeof h && (h = 0), "undefined" === typeof r && (r = 0), r = 0 == r ? 2 * Math.max(1, 4 * h + 1 - 1e-8) + 1 | 0 : r;
                            var a = r >> 1,
                                i = e.cols,
                                c = e.rows,
                                o = e.type,
                                s = o & n.U8_t;
                            t.resize(i, c, e.channel);
                            var l, p, d = e.data,
                                b = t.data,
                                g = r + Math.max(c, i) | 0,
                                j = n.cache.get_buffer(g << 2),
                                x = n.cache.get_buffer(r << 2);
                            s ? (l = j.i32, p = x.i32) : o & n.S32_t ? (l = j.i32, p = x.f32) : (l = j.f32, p = x.f32), n.math.get_gaussian_kernel(r, h, p, o), s ? function(e, t, r, n, h, a, i, c) {
                                for (var o = 0, s = 0, l = 0, p = 0, d = 0, b = 0, g = 0, j = 0, x = 0, V = a[0], f = 0, F = n << 1, k = 3 * n, m = n << 2; o < h; ++o) {
                                    for (b = t[p], s = 0; s < c; ++s) e[s] = b;
                                    for (s = 0; s <= n - 2; s += 2) e[s + c] = t[p + s], e[s + c + 1] = t[p + s + 1];
                                    for (; s < n; ++s) e[s + c] = t[p + s];
                                    for (b = t[p + n - 1], s = n; s < c + n; ++s) e[s + c] = b;
                                    for (s = 0; s <= n - 4; s += 4) {
                                        for (b = e[s] * V, g = e[s + 1] * V, j = e[s + 2] * V, x = e[s + 3] * V, l = 1; l < i; ++l) f = a[l], b += e[l + s] * f, g += e[l + s + 1] * f, j += e[l + s + 2] * f, x += e[l + s + 3] * f;
                                        r[d + s] = Math.min(b >> 8, 255), r[d + s + 1] = Math.min(g >> 8, 255), r[d + s + 2] = Math.min(j >> 8, 255), r[d + s + 3] = Math.min(x >> 8, 255)
                                    }
                                    for (; s < n; ++s) {
                                        for (b = e[s] * V, l = 1; l < i; ++l) b += e[l + s] * a[l];
                                        r[d + s] = Math.min(b >> 8, 255)
                                    }
                                    p += n, d += n
                                }
                                for (o = 0; o < n; ++o) {
                                    for (b = r[o], s = 0; s < c; ++s) e[s] = b;
                                    for (l = o, s = 0; s <= h - 2; s += 2, l += F) e[s + c] = r[l], e[s + c + 1] = r[l + n];
                                    for (; s < h; ++s, l += n) e[s + c] = r[l];
                                    for (b = r[(h - 1) * n + o], s = h; s < c + h; ++s) e[s + c] = b;
                                    for (d = o, s = 0; s <= h - 4; s += 4, d += m) {
                                        for (b = e[s] * V, g = e[s + 1] * V, j = e[s + 2] * V, x = e[s + 3] * V, l = 1; l < i; ++l) f = a[l], b += e[l + s] * f, g += e[l + s + 1] * f, j += e[l + s + 2] * f, x += e[l + s + 3] * f;
                                        r[d] = Math.min(b >> 8, 255), r[d + n] = Math.min(g >> 8, 255), r[d + F] = Math.min(j >> 8, 255), r[d + k] = Math.min(x >> 8, 255)
                                    }
                                    for (; s < h; ++s, d += n) {
                                        for (b = e[s] * V, l = 1; l < i; ++l) b += e[l + s] * a[l];
                                        r[d] = Math.min(b >> 8, 255)
                                    }
                                }
                            }(l, d, b, i, c, p, r, a) : function(e, t, r, n, h, a, i, c) {
                                for (var o = 0, s = 0, l = 0, p = 0, d = 0, b = 0, g = 0, j = 0, x = 0, V = a[0], f = 0, F = n << 1, k = 3 * n, m = n << 2; o < h; ++o) {
                                    for (b = t[p], s = 0; s < c; ++s) e[s] = b;
                                    for (s = 0; s <= n - 2; s += 2) e[s + c] = t[p + s], e[s + c + 1] = t[p + s + 1];
                                    for (; s < n; ++s) e[s + c] = t[p + s];
                                    for (b = t[p + n - 1], s = n; s < c + n; ++s) e[s + c] = b;
                                    for (s = 0; s <= n - 4; s += 4) {
                                        for (b = e[s] * V, g = e[s + 1] * V, j = e[s + 2] * V, x = e[s + 3] * V, l = 1; l < i; ++l) f = a[l], b += e[l + s] * f, g += e[l + s + 1] * f, j += e[l + s + 2] * f, x += e[l + s + 3] * f;
                                        r[d + s] = b, r[d + s + 1] = g, r[d + s + 2] = j, r[d + s + 3] = x
                                    }
                                    for (; s < n; ++s) {
                                        for (b = e[s] * V, l = 1; l < i; ++l) b += e[l + s] * a[l];
                                        r[d + s] = b
                                    }
                                    p += n, d += n
                                }
                                for (o = 0; o < n; ++o) {
                                    for (b = r[o], s = 0; s < c; ++s) e[s] = b;
                                    for (l = o, s = 0; s <= h - 2; s += 2, l += F) e[s + c] = r[l], e[s + c + 1] = r[l + n];
                                    for (; s < h; ++s, l += n) e[s + c] = r[l];
                                    for (b = r[(h - 1) * n + o], s = h; s < c + h; ++s) e[s + c] = b;
                                    for (d = o, s = 0; s <= h - 4; s += 4, d += m) {
                                        for (b = e[s] * V, g = e[s + 1] * V, j = e[s + 2] * V, x = e[s + 3] * V, l = 1; l < i; ++l) f = a[l], b += e[l + s] * f, g += e[l + s + 1] * f, j += e[l + s + 2] * f, x += e[l + s + 3] * f;
                                        r[d] = b, r[d + n] = g, r[d + F] = j, r[d + k] = x
                                    }
                                    for (; s < h; ++s, d += n) {
                                        for (b = e[s] * V, l = 1; l < i; ++l) b += e[l + s] * a[l];
                                        r[d] = b
                                    }
                                }
                            }(l, d, b, i, c, p, r, a), n.cache.put_buffer(j), n.cache.put_buffer(x)
                        },
                        hough_transform: function(e, t, r, n) {
                            var h = e.data,
                                a = e.cols,
                                i = e.rows,
                                c = a;
                            min_theta = 0, max_theta = Math.PI, numangle = Math.round((max_theta - min_theta) / r), numrho = Math.round((2 * (a + i) + 1) / t), irho = 1 / t;
                            for (var o = new Int32Array((numangle + 2) * (numrho + 2)), s = new Float32Array(numangle), l = new Float32Array(numangle), p = 0, d = min_theta; p < numangle; p++) s[p] = Math.sin(d) * irho, l[p] = Math.cos(d) * irho, d += r;
                            for (var b = 0; b < i; b++)
                                for (var g = 0; g < a; g++)
                                    if (0 != h[b * c + g])
                                        for (p = 0; p < numangle; p++) {
                                            var j = Math.round(g * l[p] + b * s[p]);
                                            j += (numrho - 1) / 2, o[(p + 1) * (numrho + 2) + j + 1] += 1
                                        }
                            _sort_buf = new Array;
                            for (j = 0; j < numrho; j++)
                                for (p = 0; p < numangle; p++) {
                                    var x = (p + 1) * (numrho + 2) + j + 1;
                                    o[x] > n && o[x] > o[x - 1] && o[x] >= o[x + 1] && o[x] > o[x - numrho - 2] && o[x] >= o[x + numrho + 2] && _sort_buf.push(x)
                                }
                            _sort_buf.sort((function(e, t) {
                                return o[e] > o[t] || o[e] == o[t] && e < t
                            })), linesMax = Math.min(numangle * numrho, _sort_buf.length), scale = 1 / (numrho + 2), lines = new Array;
                            for (b = 0; b < linesMax; b++) {
                                var V = _sort_buf[b],
                                    f = (p = Math.floor(V * scale) - 1, j = V - (p + 1) * (numrho + 2) - 1, (j - .5 * (numrho - 1)) * t),
                                    F = p * r;
                                lines.push([f, F])
                            }
                            return lines
                        },
                        pyrdown: function(e, t, r, n) {
                            "undefined" === typeof r && (r = 0), "undefined" === typeof n && (n = 0);
                            var h = e.cols,
                                a = e.rows,
                                i = h >> 1,
                                c = a >> 1,
                                o = i - (r << 1),
                                s = c - (n << 1),
                                l = 0,
                                p = 0,
                                d = r + n * h,
                                b = 0,
                                g = 0,
                                j = 0;
                            t.resize(i, c, e.channel);
                            var x = e.data,
                                V = t.data;
                            for (p = 0; p < s; ++p) {
                                for (b = d, j = g, l = 0; l <= o - 2; l += 2, j += 2, b += 4) V[j] = x[b] + x[b + 1] + x[b + h] + x[b + h + 1] + 2 >> 2, V[j + 1] = x[b + 2] + x[b + 3] + x[b + h + 2] + x[b + h + 3] + 2 >> 2;
                                for (; l < o; ++l, ++j, b += 2) V[j] = x[b] + x[b + 1] + x[b + h] + x[b + h + 1] + 2 >> 2;
                                d += h << 1, g += i
                            }
                        },
                        scharr_derivatives: function(e, t) {
                            var r, h, a, i, c, o, s, l, p = e.cols,
                                d = e.rows,
                                b = p << 1,
                                g = 0,
                                j = 0,
                                x = 0,
                                V = 0,
                                f = 0,
                                F = 0,
                                k = 0;
                            t.resize(p, d, 2);
                            var m = e.data,
                                P = t.data,
                                u = n.cache.get_buffer(p + 2 << 2),
                                X = n.cache.get_buffer(p + 2 << 2);
                            for (e.type & n.U8_t || e.type & n.S32_t ? (s = u.i32, l = X.i32) : (s = u.f32, l = X.f32); j < d; ++j, f += p) {
                                for (V = (j > 0 ? j - 1 : 1) * p | 0, F = (j < d - 1 ? j + 1 : d - 2) * p | 0, k = j * b | 0, g = 0, x = 1; g <= p - 2; g += 2, x += 2) r = m[V + g], h = m[F + g], s[x] = 3 * (r + h) + 10 * m[f + g], l[x] = h - r, r = m[V + g + 1], h = m[F + g + 1], s[x + 1] = 3 * (r + h) + 10 * m[f + g + 1], l[x + 1] = h - r;
                                for (; g < p; ++g, ++x) r = m[V + g], h = m[F + g], s[x] = 3 * (r + h) + 10 * m[f + g], l[x] = h - r;
                                for (g = p + 1 | 0, s[0] = s[1], s[g] = s[p], l[0] = l[1], l[g] = l[p], g = 0; g <= p - 4; g += 4) r = l[g + 2], h = l[g + 1], a = l[g + 3], i = l[g + 4], c = s[g + 2], o = s[g + 3], P[k++] = c - s[g], P[k++] = 3 * (r + l[g]) + 10 * h, P[k++] = o - s[g + 1], P[k++] = 3 * (a + h) + 10 * r, P[k++] = s[g + 4] - c, P[k++] = 3 * (i + r) + 10 * a, P[k++] = s[g + 5] - o, P[k++] = 3 * (l[g + 5] + a) + 10 * i;
                                for (; g < p; ++g) P[k++] = s[g + 2] - s[g], P[k++] = 3 * (l[g + 2] + l[g]) + 10 * l[g + 1]
                            }
                            n.cache.put_buffer(u), n.cache.put_buffer(X)
                        },
                        sobel_derivatives: function(e, t) {
                            var r, h, a, i, c, o, s, l, p = e.cols,
                                d = e.rows,
                                b = p << 1,
                                g = 0,
                                j = 0,
                                x = 0,
                                V = 0,
                                f = 0,
                                F = 0,
                                k = 0;
                            t.resize(p, d, 2);
                            var m = e.data,
                                P = t.data,
                                u = n.cache.get_buffer(p + 2 << 2),
                                X = n.cache.get_buffer(p + 2 << 2);
                            for (e.type & n.U8_t || e.type & n.S32_t ? (s = u.i32, l = X.i32) : (s = u.f32, l = X.f32); j < d; ++j, f += p) {
                                for (V = (j > 0 ? j - 1 : 1) * p | 0, F = (j < d - 1 ? j + 1 : d - 2) * p | 0, k = j * b | 0, g = 0, x = 1; g <= p - 2; g += 2, x += 2) r = m[V + g], h = m[F + g], s[x] = r + h + 2 * m[f + g], l[x] = h - r, r = m[V + g + 1], h = m[F + g + 1], s[x + 1] = r + h + 2 * m[f + g + 1], l[x + 1] = h - r;
                                for (; g < p; ++g, ++x) r = m[V + g], h = m[F + g], s[x] = r + h + 2 * m[f + g], l[x] = h - r;
                                for (g = p + 1 | 0, s[0] = s[1], s[g] = s[p], l[0] = l[1], l[g] = l[p], g = 0; g <= p - 4; g += 4) r = l[g + 2], h = l[g + 1], a = l[g + 3], i = l[g + 4], c = s[g + 2], o = s[g + 3], P[k++] = c - s[g], P[k++] = r + l[g] + 2 * h, P[k++] = o - s[g + 1], P[k++] = a + h + 2 * r, P[k++] = s[g + 4] - c, P[k++] = i + r + 2 * a, P[k++] = s[g + 5] - o, P[k++] = l[g + 5] + a + 2 * i;
                                for (; g < p; ++g) P[k++] = s[g + 2] - s[g], P[k++] = l[g + 2] + l[g] + 2 * l[g + 1]
                            }
                            n.cache.put_buffer(u), n.cache.put_buffer(X)
                        },
                        compute_integral_image: function(e, t, r, n) {
                            var h = 0 | e.cols,
                                a = 0 | e.rows,
                                i = e.data,
                                c = h + 1 | 0,
                                o = 0,
                                s = 0,
                                l = 0,
                                p = 0,
                                d = 0,
                                b = 0,
                                g = 0,
                                j = 0;
                            if (t && r) {
                                for (; d < c; ++d) t[d] = 0, r[d] = 0;
                                for (l = c + 1 | 0, p = 1, d = 0, j = 0; d < a; ++d, ++l, ++p) {
                                    for (o = s = 0, b = 0; b <= h - 2; b += 2, j += 2, l += 2, p += 2) g = i[j], o += g, s += g * g, t[l] = t[p] + o, r[l] = r[p] + s, g = i[j + 1], o += g, s += g * g, t[l + 1] = t[p + 1] + o, r[l + 1] = r[p + 1] + s;
                                    for (; b < h; ++b, ++j, ++l, ++p) g = i[j], o += g, s += g * g, t[l] = t[p] + o, r[l] = r[p] + s
                                }
                            } else if (t) {
                                for (; d < c; ++d) t[d] = 0;
                                for (l = c + 1 | 0, p = 1, d = 0, j = 0; d < a; ++d, ++l, ++p) {
                                    for (o = 0, b = 0; b <= h - 2; b += 2, j += 2, l += 2, p += 2) o += i[j], t[l] = t[p] + o, o += i[j + 1], t[l + 1] = t[p + 1] + o;
                                    for (; b < h; ++b, ++j, ++l, ++p) o += i[j], t[l] = t[p] + o
                                }
                            } else if (r) {
                                for (; d < c; ++d) r[d] = 0;
                                for (l = c + 1 | 0, p = 1, d = 0, j = 0; d < a; ++d, ++l, ++p) {
                                    for (s = 0, b = 0; b <= h - 2; b += 2, j += 2, l += 2, p += 2) g = i[j], s += g * g, r[l] = r[p] + s, g = i[j + 1], s += g * g, r[l + 1] = r[p + 1] + s;
                                    for (; b < h; ++b, ++j, ++l, ++p) g = i[j], s += g * g, r[l] = r[p] + s
                                }
                            }
                            if (n) {
                                for (d = 0; d < c; ++d) n[d] = 0;
                                for (l = c + 1 | 0, p = 0, d = 0, j = 0; d < a; ++d, ++l, ++p) {
                                    for (b = 0; b <= h - 2; b += 2, j += 2, l += 2, p += 2) n[l] = i[j] + n[p], n[l + 1] = i[j + 1] + n[p + 1];
                                    for (; b < h; ++b, ++j, ++l, ++p) n[l] = i[j] + n[p]
                                }
                                for (l = c + h | 0, p = h, d = 0; d < a; ++d, l += c, p += c) n[l] += n[p];
                                for (b = h - 1; b > 0; --b)
                                    for (l = b + a * c, p = l - c, d = a; d > 0; --d, l -= c, p -= c) n[l] += n[p] + n[p + 1]
                            }
                        },
                        equalize_histogram: function(e, t) {
                            var r = e.cols,
                                h = e.rows,
                                a = e.data;
                            t.resize(r, h, e.channel);
                            var i, c, o = t.data,
                                s = r * h,
                                l = 0,
                                p = 0,
                                d = n.cache.get_buffer(1024);
                            for (i = d.i32; l < 256; ++l) i[l] = 0;
                            for (l = 0; l < s; ++l) ++i[a[l]];
                            for (p = i[0], l = 1; l < 256; ++l) p = i[l] += p;
                            for (c = 255 / s, l = 0; l < s; ++l) o[l] = i[a[l]] * c + .5 | 0;
                            n.cache.put_buffer(d)
                        },
                        canny: function(e, t, r, h) {
                            var a = e.cols,
                                i = e.rows;
                            e.data;
                            t.resize(a, i, e.channel);
                            var c = t.data,
                                o = 0,
                                s = 0,
                                l = 0,
                                p = a << 1,
                                d = 0,
                                b = 0,
                                g = 0,
                                j = 0,
                                x = 0,
                                V = 0,
                                f = 0,
                                F = 0,
                                k = n.cache.get_buffer(i * p << 2),
                                m = n.cache.get_buffer(3 * (a + 2) << 2),
                                P = n.cache.get_buffer((i + 2) * (a + 2) << 2),
                                u = n.cache.get_buffer(i * a << 2),
                                X = m.i32,
                                N = P.i32,
                                H = u.i32,
                                z = k.i32,
                                Q = new n.matrix_t(a, i, n.S32C2_t, k.data),
                                R = 1,
                                v = a + 2 + 1 | 0,
                                I = 2 * (a + 2) + 1 | 0,
                                w = a + 2 | 0,
                                y = w + 1 | 0,
                                C = 0;
                            this.sobel_derivatives(e, Q), r > h && (o = r, r = h, h = o), o = 3 * (a + 2) | 0;
                            while (--o >= 0) X[o] = 0;
                            o = (i + 2) * (a + 2) | 0;
                            while (--o >= 0) N[o] = 0;
                            for (; s < a; ++s, l += 2) j = z[l], x = z[l + 1], X[v + s] = (j ^ j >> 31) - (j >> 31) + ((x ^ x >> 31) - (x >> 31));
                            for (o = 1; o <= i; ++o, l += p) {
                                if (o == i) {
                                    s = I + a;
                                    while (--s >= I) X[s] = 0
                                } else
                                    for (s = 0; s < a; s++) j = z[l + (s << 1)], x = z[l + (s << 1) + 1], X[I + s] = (j ^ j >> 31) - (j >> 31) + ((x ^ x >> 31) - (x >> 31));
                                for (d = l - p | 0, N[y - 1] = 0, b = 0, s = 0; s < a; ++s, d += 2) {
                                    if (g = X[v + s], g > r)
                                        if (j = z[d], x = z[d + 1], V = j ^ x, j = (j ^ j >> 31) - (j >> 31) | 0, x = (x ^ x >> 31) - (x >> 31) | 0, f = 13573 * j, F = f + (j + j << 15), x <<= 15, x < f) {
                                            if (g > X[v + s - 1] && g >= X[v + s + 1]) {
                                                g > h && !b && 2 != N[y + s - w] ? (N[y + s] = 2, b = 1, H[C++] = y + s) : N[y + s] = 1;
                                                continue
                                            }
                                        } else if (x > F) {
                                        if (g > X[R + s] && g >= X[I + s]) {
                                            g > h && !b && 2 != N[y + s - w] ? (N[y + s] = 2, b = 1, H[C++] = y + s) : N[y + s] = 1;
                                            continue
                                        }
                                    } else if (V = V < 0 ? -1 : 1, g > X[R + s - V] && g > X[I + s + V]) {
                                        g > h && !b && 2 != N[y + s - w] ? (N[y + s] = 2, b = 1, H[C++] = y + s) : N[y + s] = 1;
                                        continue
                                    }
                                    N[y + s] = 0, b = 0
                                }
                                N[y + a] = 0, y += w, s = R, R = v, v = I, I = s
                            }
                            for (s = y - w - 1, o = 0; o < w; ++o, ++s) N[s] = 0;
                            while (C > 0) y = H[--C], y -= w + 1, 1 == N[y] && (N[y] = 2, H[C++] = y), y += 1, 1 == N[y] && (N[y] = 2, H[C++] = y), y += 1, 1 == N[y] && (N[y] = 2, H[C++] = y), y += w, 1 == N[y] && (N[y] = 2, H[C++] = y), y -= 2, 1 == N[y] && (N[y] = 2, H[C++] = y), y += w, 1 == N[y] && (N[y] = 2, H[C++] = y), y += 1, 1 == N[y] && (N[y] = 2, H[C++] = y), y += 1, 1 == N[y] && (N[y] = 2, H[C++] = y);
                            for (y = w + 1, R = 0, o = 0; o < i; ++o, y += w)
                                for (s = 0; s < a; ++s) c[R++] = 255 * (2 == N[y + s]);
                            n.cache.put_buffer(k), n.cache.put_buffer(m), n.cache.put_buffer(P), n.cache.put_buffer(u)
                        },
                        warp_perspective: function(e, t, r, n) {
                            "undefined" === typeof n && (n = 0);
                            for (var h = 0 | e.cols, a = 0 | e.rows, i = 0 | t.cols, c = 0 | t.rows, o = e.data, s = t.data, l = 0, p = 0, d = 0, b = 0, g = 0, j = 0, x = 0, V = 0, f = 0, F = 0, k = 0, m = 0, P = 0, u = 0, X = 0, N = r.data, H = N[0], z = N[1], Q = N[2], R = N[3], v = N[4], I = N[5], w = N[6], y = N[7], C = N[8], A = 0; p < c; ++p)
                                for (V = z * p + Q, f = v * p + I, F = y * p + C, l = 0; l < i; ++l, ++A, V += H, f += R, F += w) k = 1 / F, j = V * k, x = f * k, b = 0 | j, g = 0 | x, j > 0 && x > 0 && b < h - 1 && g < a - 1 ? (m = Math.max(j - b, 0), P = Math.max(x - g, 0), d = h * g + b | 0, u = o[d] + m * (o[d + 1] - o[d]), X = o[d + h] + m * (o[d + h + 1] - o[d + h]), s[A] = u + P * (X - u)) : s[A] = n
                        },
                        warp_affine: function(e, t, r, n) {
                            "undefined" === typeof n && (n = 0);
                            for (var h = e.cols, a = e.rows, i = t.cols, c = t.rows, o = e.data, s = t.data, l = 0, p = 0, d = 0, b = 0, g = 0, j = 0, x = 0, V = 0, f = 0, F = 0, k = 0, m = r.data, P = m[0], u = m[1], X = m[2], N = m[3], H = m[4], z = m[5], Q = 0; p < c; ++p)
                                for (j = u * p + X, x = H * p + z, l = 0; l < i; ++l, ++Q, j += P, x += N) b = 0 | j, g = 0 | x, b >= 0 && g >= 0 && b < h - 1 && g < a - 1 ? (V = j - b, f = x - g, d = h * g + b, F = o[d] + V * (o[d + 1] - o[d]), k = o[d + h] + V * (o[d + h + 1] - o[d + h]), s[Q] = F + f * (k - F)) : s[Q] = n
                        },
                        skindetector: function(e, t) {
                            var r, n, h, a, i = e.width * e.height;
                            while (i--) a = 4 * i, r = e.data[a], n = e.data[a + 1], h = e.data[a + 2], r > 95 && n > 40 && h > 20 && r > n && r > h && r - Math.min(n, h) > 15 && Math.abs(r - n) > 15 ? t[i] = 255 : t[i] = 0
                        }
                    }
                }();
                e.imgproc = t
            }(n),
            function(e) {
                var t = function() {
                    var e = new Int32Array([0, 3, 1, 3, 2, 2, 3, 1, 3, 0, 3, -1, 2, -2, 1, -3, 0, -3, -1, -3, -2, -2, -3, -1, -3, 0, -3, 1, -2, 2, -1, 3]),
                        t = new Uint8Array(512),
                        r = new Int32Array(25),
                        h = new Int32Array(25),
                        a = function(e, t, r, n, h) {
                            for (var a = 0, i = e[t], c = h, o = 0, s = 0, l = 0; a < 25; ++a) n[a] = i - e[t + r[a]];
                            for (a = 0; a < 16; a += 2) o = Math.min(n[a + 1], n[a + 2]), o = Math.min(o, n[a + 3]), o <= c || (o = Math.min(o, n[a + 4]), o = Math.min(o, n[a + 5]), o = Math.min(o, n[a + 6]), o = Math.min(o, n[a + 7]), o = Math.min(o, n[a + 8]), c = Math.max(c, Math.min(o, n[a])), c = Math.max(c, Math.min(o, n[a + 9])));
                            for (s = -c, a = 0; a < 16; a += 2) l = Math.max(n[a + 1], n[a + 2]), l = Math.max(l, n[a + 3]), l = Math.max(l, n[a + 4]), l = Math.max(l, n[a + 5]), l >= s || (l = Math.max(l, n[a + 6]), l = Math.max(l, n[a + 7]), l = Math.max(l, n[a + 8]), s = Math.min(s, Math.max(l, n[a])), s = Math.min(s, Math.max(l, n[a + 9])));
                            return -s - 1
                        },
                        i = 20;
                    return {
                        set_threshold: function(e) {
                            i = Math.min(Math.max(e, 0), 255);
                            for (var r = -255; r <= 255; ++r) t[r + 255] = r < -i ? 1 : r > i ? 2 : 0;
                            return i
                        },
                        detect: function(c, o, s) {
                            "undefined" === typeof s && (s = 3);
                            var l, p = c.data,
                                d = c.cols,
                                b = c.rows,
                                g = 0,
                                j = 0,
                                x = 0,
                                V = 0,
                                f = 0,
                                F = 0,
                                k = n.cache.get_buffer(3 * d),
                                m = n.cache.get_buffer(3 * (d + 1) << 2),
                                P = k.u8,
                                u = m.i32,
                                X = r,
                                N = h,
                                H = Math.max(3, s),
                                z = Math.min(b - 2, b - s),
                                Q = Math.max(3, s),
                                R = Math.min(d - 3, d - s),
                                v = 0,
                                I = 0,
                                w = a,
                                y = t,
                                C = i,
                                A = 0,
                                D = 0,
                                S = 0,
                                Y = 0,
                                B = 0,
                                T = 0,
                                L = 0,
                                M = 0,
                                q = 0,
                                G = 0,
                                E = 0,
                                W = 0;
                            (function(t, r, n) {
                                for (var h = 0, a = e; h < n; ++h) t[h] = a[h << 1] + a[1 + (h << 1)] * r;
                                for (; h < 25; ++h) t[h] = t[h - n]
                            })(X, d, 16);
                            var _ = X[0],
                                J = X[1],
                                U = X[2],
                                O = X[3],
                                Z = X[4],
                                K = X[5],
                                $ = X[6],
                                ee = X[7],
                                te = X[8],
                                re = X[9],
                                ne = X[10],
                                he = X[11],
                                ae = X[12],
                                ie = X[13],
                                ce = X[14],
                                oe = X[15];
                            for (g = 0; g < 3 * d; ++g) P[g] = 0;
                            for (g = H; g < z; ++g) {
                                for (L = g * d + Q | 0, F = (g - 3) % 3, T = F * d | 0, B = F * (d + 1) | 0, j = 0; j < d; ++j) P[T + j] = 0;
                                if (Y = 0, g < z - 1)
                                    for (j = Q; j < R; ++j, ++L)
                                        if (A = p[L], D = 255 - A, S = y[D + p[L + _]] | y[D + p[L + te]], 0 != S && (S &= y[D + p[L + U]] | y[D + p[L + ne]], S &= y[D + p[L + Z]] | y[D + p[L + ae]], S &= y[D + p[L + $]] | y[D + p[L + ce]], 0 != S)) {
                                            if (S &= y[D + p[L + J]] | y[D + p[L + re]], S &= y[D + p[L + O]] | y[D + p[L + he]], S &= y[D + p[L + K]] | y[D + p[L + ie]], S &= y[D + p[L + ee]] | y[D + p[L + oe]], 1 & S)
                                                for (V = A - C, v = 0, x = 0; x < 25; ++x)
                                                    if (f = p[L + X[x]], f < V) {
                                                        if (++v, v > 8) {
                                                            ++Y, u[B + Y] = j, P[T + j] = w(p, L, X, N, C);
                                                            break
                                                        }
                                                    } else v = 0;
                                            if (2 & S)
                                                for (V = A + C, v = 0, x = 0; x < 25; ++x)
                                                    if (f = p[L + X[x]], f > V) {
                                                        if (++v, v > 8) {
                                                            ++Y, u[B + Y] = j, P[T + j] = w(p, L, X, N, C);
                                                            break
                                                        }
                                                    } else v = 0
                                        } if (u[B + d] = Y, g != H)
                                    for (F = (g - 4 + 3) % 3, M = F * d | 0, B = F * (d + 1) | 0, F = (g - 5 + 3) % 3, q = F * d | 0, Y = u[B + d], x = 0; x < Y; ++x) j = u[B + x], G = j + 1 | 0, E = j - 1 | 0, W = P[M + j], W > P[M + G] && W > P[M + E] && W > P[q + E] && W > P[q + j] && W > P[q + G] && W > P[T + E] && W > P[T + j] && W > P[T + G] && (l = o[I], l.x = j, l.y = g - 1, l.score = W, I++)
                            }
                            return n.cache.put_buffer(k), n.cache.put_buffer(m), I
                        }
                    }
                }();
                e.fast_corners = t, t.set_threshold(20)
            }(n),
            function(e) {
                var t = function() {
                    var e = function(e, t, r, n, h, a, i) {
                        var c = -2 * e[t] + e[t + n] + e[t - n],
                            o = -2 * e[t] + e[t + h] + e[t - h],
                            s = e[t + a] + e[t - a] - e[t + i] - e[t - i],
                            l = 0 | Math.sqrt((c - o) * (c - o) + 4 * s * s);
                        return Math.min(Math.abs(r - l), Math.abs(-(r + l)))
                    };
                    return {
                        laplacian_threshold: 30,
                        min_eigen_value_threshold: 25,
                        detect: function(t, r, h) {
                            "undefined" === typeof h && (h = 5);
                            var a, i = 0,
                                c = 0,
                                o = t.cols,
                                s = t.rows,
                                l = t.data,
                                p = 5 * o | 0,
                                d = 3 + 3 * o | 0,
                                b = 3 - 3 * o | 0,
                                g = n.cache.get_buffer(o * s << 2),
                                j = g.i32,
                                x = 0,
                                V = 0,
                                f = 0,
                                F = 0,
                                k = 0,
                                m = this.laplacian_threshold,
                                P = this.min_eigen_value_threshold,
                                u = 0 | Math.max(5, h),
                                X = 0 | Math.max(3, h),
                                N = 0 | Math.min(o - 5, o - h),
                                H = 0 | Math.min(s - 3, s - h);
                            i = o * s;
                            while (--i >= 0) j[i] = 0;
                            for (function(e, t, r, n, h, a, i, c, o, s) {
                                    var l = 0,
                                        p = 0,
                                        d = c * r + i | 0,
                                        b = d;
                                    for (l = c; l < s; ++l, d += r, b = d)
                                        for (p = i; p < o; ++p, ++b) t[b] = -4 * e[b] + e[b + h] + e[b - h] + e[b + a] + e[b - a]
                                }(l, j, o, 0, 5, p, u, X, N, H), V = X * o + u | 0, c = X; c < H; ++c, V += o)
                                for (i = u, f = V; i < N; ++i, ++f) x = j[f], (x < -m && x < j[f - 1] && x < j[f + 1] && x < j[f - o] && x < j[f + o] && x < j[f - o - 1] && x < j[f + o - 1] && x < j[f - o + 1] && x < j[f + o + 1] || x > m && x > j[f - 1] && x > j[f + 1] && x > j[f - o] && x > j[f + o] && x > j[f - o - 1] && x > j[f + o - 1] && x > j[f - o + 1] && x > j[f + o + 1]) && (F = e(l, f, x, 5, p, d, b), F > P && (a = r[k], a.x = i, a.y = c, a.score = F, ++k, ++i, ++f));
                            return n.cache.put_buffer(g), k
                        }
                    }
                }();
                e.yape06 = t
            }(n),
            function(e) {
                var t = function() {
                    var e = function(e, t, r) {
                            var n = 0;
                            return 0 != e[t + 1] && n++, 0 != e[t - 1] && n++, 0 != e[t + r] && n++, 0 != e[t + r + 1] && n++, 0 != e[t + r - 1] && n++, 0 != e[t - r] && n++, 0 != e[t - r + 1] && n++, 0 != e[t - r - 1] && n++, n
                        },
                        t = function(e, t, r, n, h) {
                            var a, i;
                            if (r > 0)
                                for (t -= n * h, i = -h; i <= h; ++i) {
                                    for (a = -h; a <= h; ++a)
                                        if (e[t + a] > r) return !1;
                                    t += n
                                } else
                                    for (t -= n * h, i = -h; i <= h; ++i) {
                                        for (a = -h; a <= h; ++a)
                                            if (e[t + a] < r) return !1;
                                        t += n
                                    }
                            return !0
                        },
                        r = function(e, t, r, n, h, a, i, c) {
                            var o = 0,
                                s = 0,
                                l = i - 1 | 0,
                                p = 0,
                                d = 0,
                                b = 0,
                                g = 0,
                                j = 0;
                            if (p = e[t + a[s]], p <= h)
                                if (p >= n)
                                    if (d = e[t + a[l]], d <= h) {
                                        if (d >= n) return void(r[t] = 0);
                                        if (l++, b = e[t + a[l]], b > h)
                                            if (l++, g = e[t + a[l]], g > h) j = 3;
                                            else {
                                                if (!(g < n)) return void(r[t] = 0);
                                                j = 6
                                            }
                                        else if (l++, g = e[t + a[l]], g > h) j = 7;
                                        else {
                                            if (!(g < n)) return void(r[t] = 0);
                                            j = 2
                                        }
                                    } else if (l++, b = e[t + a[l]], b > h)
                                if (l++, g = e[t + a[l]], g > h) j = 3;
                                else {
                                    if (!(g < n)) return void(r[t] = 0);
                                    j = 6
                                }
                            else {
                                if (!(b < n)) return void(r[t] = 0);
                                if (l++, g = e[t + a[l]], g > h) j = 7;
                                else {
                                    if (!(g < n)) return void(r[t] = 0);
                                    j = 2
                                }
                            } else {
                                if (d = e[t + a[l]], d > h) return void(r[t] = 0);
                                if (l++, b = e[t + a[l]], b > h) return void(r[t] = 0);
                                if (l++, g = e[t + a[l]], g > h) return void(r[t] = 0);
                                j = 1
                            } else {
                                if (d = e[t + a[l]], d < n) return void(r[t] = 0);
                                if (l++, b = e[t + a[l]], b < n) return void(r[t] = 0);
                                if (l++, g = e[t + a[l]], g < n) return void(r[t] = 0);
                                j = 0
                            }
                            for (s = 1; s <= i; s++) switch (p = e[t + a[s]], j) {
                                case 0:
                                    if (p > h) {
                                        if (b = g, l++, g = e[t + a[l]], g < n) return void(r[t] = 0);
                                        o -= p + b, j = 0;
                                        break
                                    }
                                    if (p < n) {
                                        if (b > h) return void(r[t] = 0);
                                        if (g > h) return void(r[t] = 0);
                                        if (b = g, l++, g = e[t + a[l]], g > h) return void(r[t] = 0);
                                        o -= p + b, j = 8;
                                        break
                                    }
                                    if (b <= h) return void(r[t] = 0);
                                    if (g <= h) return void(r[t] = 0);
                                    if (b = g, l++, g = e[t + a[l]], g > h) {
                                        o -= p + b, j = 3;
                                        break
                                    }
                                    if (g < n) {
                                        o -= p + b, j = 6;
                                        break
                                    }
                                    return void(r[t] = 0);
                                case 1:
                                    if (p < n) {
                                        if (b = g, l++, g = e[t + a[l]], g > h) return void(r[t] = 0);
                                        o -= p + b, j = 1;
                                        break
                                    }
                                    if (p > h) {
                                        if (b < n) return void(r[t] = 0);
                                        if (g < n) return void(r[t] = 0);
                                        if (b = g, l++, g = e[t + a[l]], g < n) return void(r[t] = 0);
                                        o -= p + b, j = 9;
                                        break
                                    }
                                    if (b >= n) return void(r[t] = 0);
                                    if (g >= n) return void(r[t] = 0);
                                    if (b = g, l++, g = e[t + a[l]], g < n) {
                                        o -= p + b, j = 2;
                                        break
                                    }
                                    if (g > h) {
                                        o -= p + b, j = 7;
                                        break
                                    }
                                    return void(r[t] = 0);
                                case 2:
                                    if (p > h) return void(r[t] = 0);
                                    if (b = g, l++, g = e[t + a[l]], p < n) {
                                        if (g > h) return void(r[t] = 0);
                                        o -= p + b, j = 4;
                                        break
                                    }
                                    if (g > h) {
                                        o -= p + b, j = 7;
                                        break
                                    }
                                    if (g < n) {
                                        o -= p + b, j = 2;
                                        break
                                    }
                                    return void(r[t] = 0);
                                case 3:
                                    if (p < n) return void(r[t] = 0);
                                    if (b = g, l++, g = e[t + a[l]], p > h) {
                                        if (g < n) return void(r[t] = 0);
                                        o -= p + b, j = 5;
                                        break
                                    }
                                    if (g > h) {
                                        o -= p + b, j = 3;
                                        break
                                    }
                                    if (g < n) {
                                        o -= p + b, j = 6;
                                        break
                                    }
                                    return void(r[t] = 0);
                                case 4:
                                    if (p > h) return void(r[t] = 0);
                                    if (p < n) {
                                        if (b = g, l++, g = e[t + a[l]], g > h) return void(r[t] = 0);
                                        o -= p + b, j = 1;
                                        break
                                    }
                                    if (g >= n) return void(r[t] = 0);
                                    if (b = g, l++, g = e[t + a[l]], g < n) {
                                        o -= p + b, j = 2;
                                        break
                                    }
                                    if (g > h) {
                                        o -= p + b, j = 7;
                                        break
                                    }
                                    return void(r[t] = 0);
                                case 5:
                                    if (p < n) return void(r[t] = 0);
                                    if (p > h) {
                                        if (b = g, l++, g = e[t + a[l]], g < n) return void(r[t] = 0);
                                        o -= p + b, j = 0;
                                        break
                                    }
                                    if (g <= h) return void(r[t] = 0);
                                    if (b = g, l++, g = e[t + a[l]], g > h) {
                                        o -= p + b, j = 3;
                                        break
                                    }
                                    if (g < n) {
                                        o -= p + b, j = 6;
                                        break
                                    }
                                    return void(r[t] = 0);
                                case 7:
                                    if (p > h) return void(r[t] = 0);
                                    if (p < n) return void(r[t] = 0);
                                    if (b = g, l++, g = e[t + a[l]], g > h) {
                                        o -= p + b, j = 3;
                                        break
                                    }
                                    if (g < n) {
                                        o -= p + b, j = 6;
                                        break
                                    }
                                    return void(r[t] = 0);
                                case 6:
                                    if (p > h) return void(r[t] = 0);
                                    if (p < n) return void(r[t] = 0);
                                    if (b = g, l++, g = e[t + a[l]], g < n) {
                                        o -= p + b, j = 2;
                                        break
                                    }
                                    if (g > h) {
                                        o -= p + b, j = 7;
                                        break
                                    }
                                    return void(r[t] = 0);
                                case 8:
                                    if (p > h) {
                                        if (g < n) return void(r[t] = 0);
                                        if (b = g, l++, g = e[t + a[l]], g < n) return void(r[t] = 0);
                                        o -= p + b, j = 9;
                                        break
                                    }
                                    if (p < n) {
                                        if (b = g, l++, g = e[t + a[l]], g > h) return void(r[t] = 0);
                                        o -= p + b, j = 1;
                                        break
                                    }
                                    return void(r[t] = 0);
                                case 9:
                                    if (p < n) {
                                        if (g > h) return void(r[t] = 0);
                                        if (b = g, l++, g = e[t + a[l]], g > h) return void(r[t] = 0);
                                        o -= p + b, j = 8;
                                        break
                                    }
                                    if (p > h) {
                                        if (b = g, l++, g = e[t + a[l]], g < n) return void(r[t] = 0);
                                        o -= p + b, j = 0;
                                        break
                                    }
                                    return void(r[t] = 0);
                                default:
                                    break
                            }
                            r[t] = o + c * e[t]
                        },
                        n = function() {
                            return function(e, t, r) {
                                this.dirs = new Int32Array(1024), this.dirs_count = 0 | function(e, t, r) {
                                    var n, h, a = 0;
                                    for (n = r, h = 0; h < n; h++, a++) n = Math.sqrt(r * r - h * h) + .5 | 0, t[a] = n + e * h;
                                    for (n--; n < h && n >= 0; n--, a++) h = Math.sqrt(r * r - n * n) + .5 | 0, t[a] = n + e * h;
                                    for (; - n < h; n--, a++) h = Math.sqrt(r * r - n * n) + .5 | 0, t[a] = n + e * h;
                                    for (h--; h >= 0; h--, a++) n = -Math.sqrt(r * r - h * h) - .5 | 0, t[a] = n + e * h;
                                    for (; h > n; h--, a++) n = -Math.sqrt(r * r - h * h) - .5 | 0, t[a] = n + e * h;
                                    for (n++; n <= 0; n++, a++) h = -Math.sqrt(r * r - n * n) - .5 | 0, t[a] = n + e * h;
                                    for (; n < -h; n++, a++) h = -Math.sqrt(r * r - n * n) - .5 | 0, t[a] = n + e * h;
                                    for (h++; h < 0; h++, a++) n = Math.sqrt(r * r - h * h) + .5 | 0, t[a] = n + e * h;
                                    return t[a] = t[0], t[a + 1] = t[1], a
                                }(e, this.dirs, r), this.scores = new Int32Array(e * t), this.radius = 0 | r
                            }
                        }();
                    return {
                        level_tables: [],
                        tau: 7,
                        init: function(e, t, r, h) {
                            var a;
                            for ("undefined" === typeof h && (h = 1), r = Math.min(r, 7), r = Math.max(r, 3), a = 0; a < h; ++a) this.level_tables[a] = new n(e >> a, t >> a, r)
                        },
                        detect: function(n, h, a) {
                            "undefined" === typeof a && (a = 4);
                            var i, c = this.level_tables[0],
                                o = 0 | c.radius,
                                s = o - 1 | 0,
                                l = c.dirs,
                                p = 0 | c.dirs_count,
                                d = p >> 1,
                                b = n.data,
                                g = 0 | n.cols,
                                j = 0 | n.rows,
                                x = g >> 1,
                                V = c.scores,
                                f = 0,
                                F = 0,
                                k = 0,
                                m = 0,
                                P = 0,
                                u = 0,
                                X = 0,
                                N = 0,
                                H = 0 | this.tau,
                                z = 0,
                                Q = 0 | Math.max(o + 1, a),
                                R = 0 | Math.max(o + 1, a),
                                v = 0 | Math.min(g - o - 2, g - a),
                                I = 0 | Math.min(j - o - 2, j - a);
                            for (k = R * g + Q | 0, F = R; F < I; ++F, k += g)
                                for (f = Q, m = k; f < v; ++f, ++m) P = b[m] + H, u = b[m] - H, u < b[m + o] && b[m + o] < P && u < b[m - o] && b[m - o] < P ? V[m] = 0 : r(b, m, V, u, P, l, d, p);
                            for (k = R * g + Q | 0, F = R; F < I; ++F, k += g)
                                for (f = Q, m = k; f < v; ++f, ++m) N = V[m], X = Math.abs(N), X < 5 ? (++f, ++m) : e(V, m, g) >= 3 && t(V, m, N, x, o) && (i = h[z], i.x = f, i.y = F, i.score = X, ++z, f += s, m += s);
                            return z
                        }
                    }
                }();
                e.yape = t
            }(n),
            function(e) {
                var t = function() {
                    var e = new Int32Array([8, -3, 9, 5, 4, 2, 7, -12, -11, 9, -8, 2, 7, -12, 12, -13, 2, -13, 2, 12, 1, -7, 1, 6, -2, -10, -2, -4, -13, -13, -11, -8, -13, -3, -12, -9, 10, 4, 11, 9, -13, -8, -8, -9, -11, 7, -9, 12, 7, 7, 12, 6, -4, -5, -3, 0, -13, 2, -12, -3, -9, 0, -7, 5, 12, -6, 12, -1, -3, 6, -2, 12, -6, -13, -4, -8, 11, -13, 12, -8, 4, 7, 5, 1, 5, -3, 10, -3, 3, -7, 6, 12, -8, -7, -6, -2, -2, 11, -1, -10, -13, 12, -8, 10, -7, 3, -5, -3, -4, 2, -3, 7, -10, -12, -6, 11, 5, -12, 6, -7, 5, -6, 7, -1, 1, 0, 4, -5, 9, 11, 11, -13, 4, 7, 4, 12, 2, -1, 4, 4, -4, -12, -2, 7, -8, -5, -7, -10, 4, 11, 9, 12, 0, -8, 1, -13, -13, -2, -8, 2, -3, -2, -2, 3, -6, 9, -4, -9, 8, 12, 10, 7, 0, 9, 1, 3, 7, -5, 11, -10, -13, -6, -11, 0, 10, 7, 12, 1, -6, -3, -6, 12, 10, -9, 12, -4, -13, 8, -8, -12, -13, 0, -8, -4, 3, 3, 7, 8, 5, 7, 10, -7, -1, 7, 1, -12, 3, -10, 5, 6, 2, -4, 3, -10, -13, 0, -13, 5, -13, -7, -12, 12, -13, 3, -11, 8, -7, 12, -4, 7, 6, -10, 12, 8, -9, -1, -7, -6, -2, -5, 0, 12, -12, 5, -7, 5, 3, -10, 8, -13, -7, -7, -4, 5, -3, -2, -1, -7, 2, 9, 5, -11, -11, -13, -5, -13, -1, 6, 0, -1, 5, -3, 5, 2, -4, -13, -4, 12, -9, -6, -9, 6, -12, -10, -8, -4, 10, 2, 12, -3, 7, 12, 12, 12, -7, -13, -6, 5, -4, 9, -3, 4, 7, -1, 12, 2, -7, 6, -5, 1, -13, 11, -12, 5, -3, 7, -2, -6, 7, -8, 12, -7, -13, -7, -11, -12, 1, -3, 12, 12, 2, -6, 3, 0, -4, 3, -2, -13, -1, -13, 1, 9, 7, 1, 8, -6, 1, -1, 3, 12, 9, 1, 12, 6, -1, -9, -1, 3, -13, -13, -10, 5, 7, 7, 10, 12, 12, -5, 12, 9, 6, 3, 7, 11, 5, -13, 6, 10, 2, -12, 2, 3, 3, 8, 4, -6, 2, 6, 12, -13, 9, -12, 10, 3, -8, 4, -7, 9, -11, 12, -4, -6, 1, 12, 2, -8, 6, -9, 7, -4, 2, 3, 3, -2, 6, 3, 11, 0, 3, -3, 8, -8, 7, 8, 9, 3, -11, -5, -6, -4, -10, 11, -5, 10, -5, -8, -3, 12, -10, 5, -9, 0, 8, -1, 12, -6, 4, -6, 6, -11, -10, 12, -8, 7, 4, -2, 6, 7, -2, 0, -2, 12, -5, -8, -5, 2, 7, -6, 10, 12, -9, -13, -8, -8, -5, -13, -5, -2, 8, -8, 9, -13, -9, -11, -9, 0, 1, -8, 1, -2, 7, -4, 9, 1, -2, 1, -1, -4, 11, -6, 12, -11, -12, -9, -6, 4, 3, 7, 7, 12, 5, 5, 10, 8, 0, -4, 2, 8, -9, 12, -5, -13, 0, 7, 2, 12, -1, 2, 1, 7, 5, 11, 7, -9, 3, 5, 6, -8, -13, -4, -8, 9, -5, 9, -3, -3, -4, -7, -3, -12, 6, 5, 8, 0, -7, 6, -6, 12, -13, 6, -5, -2, 1, -10, 3, 10, 4, 1, 8, -4, -2, -2, 2, -13, 2, -12, 12, 12, -2, -13, 0, -6, 4, 1, 9, 3, -6, -10, -3, -5, -3, -13, -1, 1, 7, 5, 12, -11, 4, -2, 5, -7, -13, 9, -9, -5, 7, 1, 8, 6, 7, -8, 7, 6, -7, -4, -7, 1, -8, 11, -7, -8, -13, 6, -12, -8, 2, 4, 3, 9, 10, -5, 12, 3, -6, -5, -6, 7, 8, -3, 9, -8, 2, -12, 2, 8, -11, -2, -10, 3, -12, -13, -7, -9, -11, 0, -10, -5, 5, -3, 11, 8, -2, -13, -1, 12, -1, -8, 0, 9, -13, -11, -12, -5, -10, -2, -10, 11, -3, 9, -2, -13, 2, -3, 3, 2, -9, -13, -4, 0, -4, 6, -3, -10, -4, 12, -2, -7, -6, -11, -4, 9, 6, -3, 6, 11, -13, 11, -5, 5, 11, 11, 12, 6, 7, -5, 12, -2, -1, 12, 0, 7, -4, -8, -3, -2, -7, 1, -6, 7, -13, -12, -8, -13, -7, -2, -6, -8, -8, 5, -6, -9, -5, -1, -4, 5, -13, 7, -8, 10, 1, 5, 5, -13, 1, 0, 10, -13, 9, 12, 10, -1, 5, -8, 10, -9, -1, 11, 1, -13, -9, -3, -6, 2, -1, -10, 1, 12, -13, 1, -8, -10, 8, -11, 10, -6, 2, -13, 3, -6, 7, -13, 12, -9, -10, -10, -5, -7, -10, -8, -8, -13, 4, -6, 8, 5, 3, 12, 8, -13, -4, 2, -3, -3, 5, -13, 10, -12, 4, -13, 5, -1, -9, 9, -4, 3, 0, 3, 3, -9, -12, 1, -6, 1, 3, 2, 4, -8, -10, -10, -10, 9, 8, -13, 12, 12, -8, -12, -6, -5, 2, 2, 3, 7, 10, 6, 11, -8, 6, 8, 8, -12, -7, 10, -6, 5, -3, -9, -3, 9, -1, -13, -1, 5, -3, -7, -3, 4, -8, -2, -8, 3, 4, 2, 12, 12, 2, -5, 3, 11, 6, -9, 11, -13, 3, -1, 7, 12, 11, -1, 12, 4, -3, 0, -3, 6, 4, -11, 4, 12, 2, -4, 2, 1, -10, -6, -8, 1, -13, 7, -11, 1, -13, 12, -11, -13, 6, 0, 11, -13, 0, -1, 1, 4, -13, 3, -9, -2, -9, 8, -6, -3, -13, -6, -8, -2, 5, -9, 8, 10, 2, 7, 3, -9, -1, -6, -1, -1, 9, 5, 11, -2, 11, -3, 12, -8, 3, 0, 3, 5, -1, 4, 0, 10, 3, -6, 4, 5, -13, 0, -10, 5, 5, 8, 12, 11, 8, 9, 9, -6, 7, -4, 8, -12, -10, 4, -10, 9, 7, 3, 12, 4, 9, -7, 10, -2, 7, 0, 12, -2, -1, -6, 0, -11]),
                        t = new n.matrix_t(3, 3, n.F32_t | n.C1_t),
                        r = new n.matrix_t(32, 32, n.U8_t | n.C1_t),
                        h = function(e, r, h, a, i, c) {
                            var o = Math.cos(h),
                                s = Math.sin(h);
                            t.data[0] = o, t.data[1] = -s, t.data[2] = (-o + s) * c * .5 + a, t.data[3] = s, t.data[4] = o, t.data[5] = (-s - o) * c * .5 + i, n.imgproc.warp_affine(e, r, t, 128)
                        };
                    return {
                        describe: function(t, a, i, c) {
                            var o = 0,
                                s = 0,
                                l = 0,
                                p = 0,
                                d = 0,
                                b = 0,
                                g = 0,
                                j = 0,
                                x = (t.data, t.cols, t.rows, r.data),
                                V = 528,
                                f = 0;
                            c.type & n.U8_t ? c.resize(32, i, 1) : (c.type = n.U8_t, c.cols = 32, c.rows = i, c.channel = 1, c.allocate());
                            var F = c.data,
                                k = 0;
                            for (o = 0; o < i; ++o) {
                                for (l = a[o].x, p = a[o].y, d = a[o].angle, h(t, r, d, l, p, 32), f = 0, s = 0; s < 32; ++s) b = x[V + 32 * e[f + 1] + e[f]], f += 2, g = x[V + 32 * e[f + 1] + e[f]], f += 2, j = b < g | 0, b = x[V + 32 * e[f + 1] + e[f]], f += 2, g = x[V + 32 * e[f + 1] + e[f]], f += 2, j |= (b < g) << 1, b = x[V + 32 * e[f + 1] + e[f]], f += 2, g = x[V + 32 * e[f + 1] + e[f]], f += 2, j |= (b < g) << 2, b = x[V + 32 * e[f + 1] + e[f]], f += 2, g = x[V + 32 * e[f + 1] + e[f]], f += 2, j |= (b < g) << 3, b = x[V + 32 * e[f + 1] + e[f]], f += 2, g = x[V + 32 * e[f + 1] + e[f]], f += 2, j |= (b < g) << 4, b = x[V + 32 * e[f + 1] + e[f]], f += 2, g = x[V + 32 * e[f + 1] + e[f]], f += 2, j |= (b < g) << 5, b = x[V + 32 * e[f + 1] + e[f]], f += 2, g = x[V + 32 * e[f + 1] + e[f]], f += 2, j |= (b < g) << 6, b = x[V + 32 * e[f + 1] + e[f]], f += 2, g = x[V + 32 * e[f + 1] + e[f]], f += 2, j |= (b < g) << 7, F[k + s] = j;
                                k += 32
                            }
                        }
                    }
                }();
                e.orb = t
            }(n),
            function(e) {
                var t = function() {
                    var e = n.imgproc.scharr_derivatives;
                    return {
                        track: function(t, r, h, a, i, c, o, s, l, p) {
                            "undefined" === typeof o && (o = 30), "undefined" === typeof s && (s = new Uint8Array(i)), "undefined" === typeof l && (l = .01), "undefined" === typeof p && (p = 1e-4);
                            var d = .5 * (c - 1),
                                b = c * c | 0,
                                g = b << 1,
                                j = t.data,
                                x = r.data,
                                V = j[0].data,
                                f = x[0].data,
                                F = j[0].cols,
                                k = j[0].rows,
                                m = 0,
                                P = 0,
                                u = n.cache.get_buffer(b << 2),
                                X = n.cache.get_buffer(g << 2),
                                N = n.cache.get_buffer(k * (F << 1) << 2),
                                H = new n.matrix_t(F, k, n.S32C2_t, N.data),
                                z = u.i32,
                                Q = X.i32,
                                R = N.i32,
                                v = 0,
                                I = 0,
                                w = 0,
                                y = 0,
                                C = 0,
                                A = 0,
                                D = 0,
                                S = 0,
                                Y = 0,
                                B = 0,
                                T = 0,
                                L = 0,
                                M = 0,
                                q = 0,
                                G = 0,
                                E = 0,
                                W = 0,
                                _ = 0,
                                J = 0,
                                U = 0,
                                O = 0,
                                Z = 0,
                                K = 0,
                                $ = 0,
                                ee = 0,
                                te = 0,
                                re = 0,
                                ne = 0,
                                he = 0,
                                ae = 0,
                                ie = 0,
                                ce = 0,
                                oe = 16384,
                                se = 1 / (1 << 20),
                                le = 0,
                                pe = 0,
                                de = 0,
                                be = 0,
                                ge = 0,
                                je = 0,
                                xe = 0,
                                Ve = 0,
                                fe = 0,
                                Fe = 0,
                                ke = 0,
                                me = 0;
                            for (l *= l; U < i; ++U) s[U] = 1;
                            var Pe = t.levels - 1 | 0;
                            for ($ = Pe; $ >= 0; --$)
                                for (D = 1 / (1 << $), m = F >> $, P = k >> $, v = m << 1, V = j[$].data, f = x[$].data, re = m - c | 0, ne = P - c | 0, e(j[$], H), ee = 0; ee < i; ++ee)
                                    if (U = ee << 1, O = U + 1, S = h[U] * D, Y = h[O] * D, $ == Pe ? (B = S, T = Y) : (B = 2 * a[U], T = 2 * a[O]), a[U] = B, a[O] = T, S -= d, Y -= d, E = 0 | S, W = 0 | Y, Z = E <= 0 | E >= re | W <= 0 | W >= ne, 0 == Z) {
                                        for (he = S - E, ae = Y - W, le = (1 - he) * (1 - ae) * oe + .5 | 0, pe = he * (1 - ae) * oe + .5 | 0, de = (1 - he) * ae * oe + .5 | 0, be = oe - le - pe - de, Ve = 0, fe = 0, Fe = 0, K = 0; K < c; ++K)
                                            for (I = (K + W) * m + E | 0, w = I << 1, y = K * c | 0, C = y << 1, Z = 0; Z < c; ++Z, ++I, ++y, w += 2) ge = V[I] * le + V[I + 1] * pe + V[I + m] * de + V[I + m + 1] * be, ge = ge + 256 >> 9, je = R[w] * le + R[w + 2] * pe + R[w + v] * de + R[w + v + 2] * be, je = je + 8192 >> 14, xe = R[w + 1] * le + R[w + 3] * pe + R[w + v + 1] * de + R[w + v + 3] * be, xe = xe + 8192 >> 14, z[y] = ge, Q[C++] = je, Q[C++] = xe, Ve += je * je, fe += je * xe, Fe += xe * xe;
                                        if (Ve *= se, fe *= se, Fe *= se, ke = Ve * Fe - fe * fe, me = (Fe + Ve - Math.sqrt((Ve - Fe) * (Ve - Fe) + 4 * fe * fe)) / g, me < p || ke < 1.1920929e-7) 0 == $ && (s[ee] = 0);
                                        else
                                            for (ke = 1 / ke, B -= d, T -= d, L = 0, M = 0, te = 0; te < o; ++te) {
                                                if (_ = 0 | B, J = 0 | T, Z = _ <= 0 | _ >= re | J <= 0 | J >= ne, 0 != Z) {
                                                    0 == $ && (s[ee] = 0);
                                                    break
                                                }
                                                for (he = B - _, ae = T - J, le = (1 - he) * (1 - ae) * oe + .5 | 0, pe = he * (1 - ae) * oe + .5 | 0, de = (1 - he) * ae * oe + .5 | 0, be = oe - le - pe - de, ie = 0, ce = 0, K = 0; K < c; ++K)
                                                    for (A = (K + J) * m + _ | 0, y = K * c | 0, C = y << 1, Z = 0; Z < c; ++Z, ++A, ++y) ge = f[A] * le + f[A + 1] * pe + f[A + m] * de + f[A + m + 1] * be, ge = ge + 256 >> 9, ge -= z[y], ie += ge * Q[C++], ce += ge * Q[C++];
                                                if (ie *= se, ce *= se, q = (fe * ce - Fe * ie) * ke, G = (fe * ie - Ve * ce) * ke, B += q, T += G, a[U] = B + d, a[O] = T + d, q * q + G * G <= l) break;
                                                if (te > 0 && Math.abs(q + L) < .01 && Math.abs(G + M) < .01) {
                                                    a[U] -= .5 * q, a[O] -= .5 * G;
                                                    break
                                                }
                                                L = q, M = G
                                            }
                                    } else 0 == $ && (s[ee] = 0);
                            n.cache.put_buffer(u), n.cache.put_buffer(X), n.cache.put_buffer(N)
                        }
                    }
                }();
                e.optical_flow_lk = t
            }(n),
            function(e) {
                var t = function() {
                    var e = function(e, t) {
                        var r = .25 * e.width + .5 | 0;
                        return t.x <= e.x + r && t.x >= e.x - r && t.y <= e.y + r && t.y >= e.y - r && t.width <= 1.5 * e.width + .5 | 0 && 1.5 * t.width + .5 | 0 >= e.width
                    };
                    return {
                        edges_density: .07,
                        detect_single_scale: function(e, t, r, n, h, a, i, c) {
                            var o, s, l, p, d, b, g, j, x, V, f, F, k, m, P, u, X, N, H, z, Q, R, v, I, w, y, C = c.size[0] * i | 0,
                                A = c.size[1] * i | 0,
                                D = .5 * i + 1.5 | 0,
                                S = D,
                                Y = h - C | 0,
                                B = a - A | 0,
                                T = h + 1 | 0,
                                L = 1 / (C * A),
                                M = !0,
                                q = 0,
                                G = C,
                                E = A * T,
                                W = E + C,
                                _ = C * A * 255 * this.edges_density | 0,
                                J = [];
                            for (d = 0; d < B; d += S)
                                for (q = d * T, p = 0; p < Y; p += D, q += D)
                                    if (g = e[q] - e[q + G] - e[q + E] + e[q + W], n && (b = n[q] - n[q + G] - n[q + E] + n[q + W], b < _ || g < 20)) p += D, q += D;
                                    else {
                                        for (g *= L, j = (t[q] - t[q + G] - t[q + E] + t[q + W]) * L - g * g, x = j > 0 ? Math.sqrt(j) : 1, V = c.complexClassifiers, m = V.length, M = !0, o = 0; o < m; ++o) {
                                            for (f = V[o], X = f.threshold, F = f.simpleClassifiers, P = F.length, N = 0, s = 0; s < P; ++s) {
                                                if (k = F[s], H = 0, Q = k.features, u = Q.length, 1 === k.tilted)
                                                    for (l = 0; l < u; ++l) z = Q[l], R = ~~(p + z[0] * i) + ~~(d + z[1] * i) * T, w = ~~(z[2] * i), y = ~~(z[3] * i), v = w * T, I = y * T, H += (r[R] - r[R + w + v] - r[R - y + I] + r[R + w - y + v + I]) * z[4];
                                                else
                                                    for (l = 0; l < u; ++l) z = Q[l], R = ~~(p + z[0] * i) + ~~(d + z[1] * i) * T, w = ~~(z[2] * i), y = ~~(z[3] * i), I = y * T, H += (e[R] - e[R + w] - e[R + I] + e[R + I + w]) * z[4];
                                                N += H * L < k.threshold * x ? k.left_val : k.right_val
                                            }
                                            if (N < X) {
                                                M = !1;
                                                break
                                            }
                                        }
                                        M && (J.push({
                                            x: p,
                                            y: d,
                                            width: C,
                                            height: A,
                                            neighbor: 1,
                                            confidence: N
                                        }), p += D, q += D)
                                    } return J
                        },
                        detect_multi_scale: function(e, t, r, n, h, a, i, c, o) {
                            "undefined" === typeof c && (c = 1.2), "undefined" === typeof o && (o = 1);
                            var s = i.size[0],
                                l = i.size[1],
                                p = [];
                            while (o * s < h && o * l < a) p = p.concat(this.detect_single_scale(e, t, r, n, h, a, o, i)), o *= c;
                            return p
                        },
                        group_rectangles: function(t, r) {
                            "undefined" === typeof r && (r = 1);
                            var n, h, a = t.length,
                                i = [];
                            for (n = 0; n < a; ++n) i[n] = {
                                parent: -1,
                                element: t[n],
                                rank: 0
                            };
                            for (n = 0; n < a; ++n)
                                if (i[n].element) {
                                    var c = n;
                                    while (-1 != i[c].parent) c = i[c].parent;
                                    for (h = 0; h < a; ++h)
                                        if (n != h && i[h].element && e(i[n].element, i[h].element)) {
                                            var o = h;
                                            while (-1 != i[o].parent) o = i[o].parent;
                                            if (o != c) {
                                                i[c].rank > i[o].rank ? i[o].parent = c : (i[c].parent = o, i[c].rank == i[o].rank && i[o].rank++, c = o);
                                                var s, l = h;
                                                while (-1 != i[l].parent) s = l, l = i[l].parent, i[s].parent = c;
                                                l = n;
                                                while (-1 != i[l].parent) s = l, l = i[l].parent, i[s].parent = c
                                            }
                                        }
                                } var p = [],
                                d = 0;
                            for (n = 0; n < a; n++) {
                                h = -1;
                                var b = n;
                                if (i[b].element) {
                                    while (-1 != i[b].parent) b = i[b].parent;
                                    i[b].rank >= 0 && (i[b].rank = ~d++), h = ~i[b].rank
                                }
                                p[n] = h
                            }
                            var g = [];
                            for (n = 0; n < d + 1; ++n) g[n] = {
                                neighbors: 0,
                                x: 0,
                                y: 0,
                                width: 0,
                                height: 0,
                                confidence: 0
                            };
                            for (n = 0; n < a; ++n) {
                                var j = t[n],
                                    x = p[n];
                                0 == g[x].neighbors && (g[x].confidence = j.confidence), ++g[x].neighbors, g[x].x += j.x, g[x].y += j.y, g[x].width += j.width, g[x].height += j.height, g[x].confidence = Math.max(g[x].confidence, j.confidence)
                            }
                            var V = [];
                            for (n = 0; n < d; ++n) a = g[n].neighbors, a >= r && V.push({
                                x: (2 * g[n].x + a) / (2 * a),
                                y: (2 * g[n].y + a) / (2 * a),
                                width: (2 * g[n].width + a) / (2 * a),
                                height: (2 * g[n].height + a) / (2 * a),
                                neighbors: g[n].neighbors,
                                confidence: g[n].confidence
                            });
                            var f = [];
                            for (a = V.length, n = 0; n < a; ++n) {
                                j = V[n];
                                var F = !0;
                                for (h = 0; h < a; ++h) {
                                    var k = V[h],
                                        m = .25 * k.width + .5 | 0;
                                    if (n != h && j.x >= k.x - m && j.y >= k.y - m && j.x + j.width <= k.x + k.width + m && j.y + j.height <= k.y + k.height + m && (k.neighbors > Math.max(3, j.neighbors) || j.neighbors < 3)) {
                                        F = !1;
                                        break
                                    }
                                }
                                F && f.push(j)
                            }
                            return f
                        }
                    }
                }();
                e.haar = t
            }(n),
            function(e) {
                var t = function() {
                    var e = function(e, t) {
                            var r = .25 * e.width + .5 | 0;
                            return t.x <= e.x + r && t.x >= e.x - r && t.y <= e.y + r && t.y >= e.y - r && t.width <= 1.5 * e.width + .5 | 0 && 1.5 * t.width + .5 | 0 >= e.width
                        },
                        t = new n.pyramid_t(1);
                    return {
                        interval: 4,
                        scale: 1.1486,
                        next: 5,
                        scale_to: 1,
                        prepare_cascade: function(e) {
                            for (var t = e.stage_classifier.length, r = 0; r < t; r++)
                                for (var n = e.stage_classifier[r].feature, h = e.stage_classifier[r].count, a = e.stage_classifier[r]._feature = new Array(h), i = 0; i < h; i++) a[i] = {
                                    size: n[i].size,
                                    px: new Array(n[i].size),
                                    pz: new Array(n[i].size),
                                    nx: new Array(n[i].size),
                                    nz: new Array(n[i].size)
                                }
                        },
                        build_pyramid: function(e, r, h, a) {
                            "undefined" === typeof a && (a = 4);
                            var i = e.cols,
                                c = e.rows,
                                o = 0,
                                s = 0,
                                l = 0,
                                p = !1,
                                d = e,
                                b = e,
                                g = n.U8_t | n.C1_t;
                            this.interval = a, this.scale = Math.pow(2, 1 / (this.interval + 1)), this.next = this.interval + 1 | 0, this.scale_to = Math.log(Math.min(i / r, c / h)) / Math.log(this.scale) | 0;
                            var j = 4 * (this.scale_to + 2 * this.next) | 0;
                            for (t.levels != j && (t.levels = j, t.data = new Array(j), p = !0, t.data[0] = e), o = 1; o <= this.interval; ++o) s = i / Math.pow(this.scale, o) | 0, l = c / Math.pow(this.scale, o) | 0, d = t.data[o << 2], (p || s != d.cols || l != d.rows) && (t.data[o << 2] = new n.matrix_t(s, l, g), d = t.data[o << 2]), n.imgproc.resample(e, d, s, l);
                            for (o = this.next; o < this.scale_to + 2 * this.next; ++o) b = t.data[(o << 2) - (this.next << 2)], d = t.data[o << 2], s = b.cols >> 1, l = b.rows >> 1, (p || s != d.cols || l != d.rows) && (t.data[o << 2] = new n.matrix_t(s, l, g), d = t.data[o << 2]), n.imgproc.pyrdown(b, d);
                            for (o = 2 * this.next; o < this.scale_to + 2 * this.next; ++o) b = t.data[(o << 2) - (this.next << 2)], s = b.cols >> 1, l = b.rows >> 1, d = t.data[1 + (o << 2)], (p || s != d.cols || l != d.rows) && (t.data[1 + (o << 2)] = new n.matrix_t(s, l, g), d = t.data[1 + (o << 2)]), n.imgproc.pyrdown(b, d, 1, 0), d = t.data[2 + (o << 2)], (p || s != d.cols || l != d.rows) && (t.data[2 + (o << 2)] = new n.matrix_t(s, l, g), d = t.data[2 + (o << 2)]), n.imgproc.pyrdown(b, d, 0, 1), d = t.data[3 + (o << 2)], (p || s != d.cols || l != d.rows) && (t.data[3 + (o << 2)] = new n.matrix_t(s, l, g), d = t.data[3 + (o << 2)]), n.imgproc.pyrdown(b, d, 1, 1);
                            return t
                        },
                        detect: function(e, t) {
                            this.interval;
                            var r, n, h, a, i, c = this.scale,
                                o = this.next,
                                s = this.scale_to,
                                l = 0,
                                p = 0,
                                d = 0,
                                b = 0,
                                g = 0,
                                j = 0,
                                x = 0,
                                V = 0,
                                f = 0,
                                F = 0,
                                k = 0,
                                m = 0,
                                P = 0,
                                u = 0,
                                X = 0,
                                N = 0,
                                H = 0,
                                z = 0,
                                Q = !0,
                                R = !0,
                                v = 1,
                                I = 1,
                                w = [0, 1, 0, 1],
                                y = [0, 0, 1, 1],
                                C = [],
                                A = e.data,
                                D = [],
                                S = [0, 0, 0],
                                Y = [0, 0, 0],
                                B = [0, 0, 0];
                            for (l = 0; l < s; l++) {
                                for (X = l << 2, N = A[X + (o << 3)].cols - (t.width >> 2), H = A[X + (o << 3)].rows - (t.height >> 2), Y[0] = 1 * A[X].cols, Y[1] = 1 * A[X + (o << 2)].cols, Y[2] = 1 * A[X + (o << 3)].cols, B[0] = 4 * A[X].cols - 4 * N, B[1] = 2 * A[X + (o << 2)].cols - 2 * N, B[2] = 1 * A[X + (o << 3)].cols - 1 * N, V = t.stage_classifier.length, p = 0; p < V; p++)
                                    for (h = t.stage_classifier[p].feature, n = t.stage_classifier[p]._feature, f = t.stage_classifier[p].count, d = 0; d < f; d++)
                                        for (a = n[d], i = h[d], F = 0 | i.size, x = 0; x < F; x++) a.px[x] = 1 * i.px[x] + i.py[x] * Y[i.pz[x]], a.pz[x] = i.pz[x], a.nx[x] = 1 * i.nx[x] + i.ny[x] * Y[i.nz[x]], a.nz[x] = i.nz[x];
                                for (D[0] = A[X].data, D[1] = A[X + (o << 2)].data, x = 0; x < 4; x++)
                                    for (D[2] = A[X + (o << 3) + x].data, S[0] = 2 * w[x] + y[x] * (2 * A[X].cols), S[1] = 1 * w[x] + y[x] * (1 * A[X + (o << 2)].cols), S[2] = 0, j = 0; j < H; j++) {
                                        for (g = 0; g < N; g++) {
                                            for (z = 0, Q = !0, V = t.stage_classifier.length, p = 0; p < V; p++) {
                                                for (z = 0, r = t.stage_classifier[p].alpha, n = t.stage_classifier[p]._feature, f = t.stage_classifier[p].count, d = 0; d < f; d++)
                                                    if (a = n[d], m = D[a.pz[0]][S[a.pz[0]] + a.px[0]], P = D[a.nz[0]][S[a.nz[0]] + a.nx[0]], m <= P) z += r[d << 1];
                                                    else {
                                                        for (R = !0, F = a.size, u = 1; u < F; u++) {
                                                            if (a.pz[u] >= 0 && (k = D[a.pz[u]][S[a.pz[u]] + a.px[u]], k < m)) {
                                                                if (k <= P) {
                                                                    R = !1;
                                                                    break
                                                                }
                                                                m = k
                                                            }
                                                            if (a.nz[u] >= 0 && (b = D[a.nz[u]][S[a.nz[u]] + a.nx[u]], b > P)) {
                                                                if (m <= b) {
                                                                    R = !1;
                                                                    break
                                                                }
                                                                P = b
                                                            }
                                                        }
                                                        z += R ? r[1 + (d << 1)] : r[d << 1]
                                                    } if (z < t.stage_classifier[p].threshold) {
                                                    Q = !1;
                                                    break
                                                }
                                            }
                                            Q && (C.push({
                                                x: (4 * g + 2 * w[x]) * v,
                                                y: (4 * j + 2 * y[x]) * I,
                                                width: t.width * v,
                                                height: t.height * I,
                                                neighbor: 1,
                                                confidence: z
                                            }), ++g, S[0] += 4, S[1] += 2, S[2] += 1), S[0] += 4, S[1] += 2, S[2] += 1
                                        }
                                        S[0] += B[0], S[1] += B[1], S[2] += B[2]
                                    }
                                v *= c, I *= c
                            }
                            return C
                        },
                        group_rectangles: function(t, r) {
                            "undefined" === typeof r && (r = 1);
                            var n, h, a = t.length,
                                i = [];
                            for (n = 0; n < a; ++n) i[n] = {
                                parent: -1,
                                element: t[n],
                                rank: 0
                            };
                            for (n = 0; n < a; ++n)
                                if (i[n].element) {
                                    var c = n;
                                    while (-1 != i[c].parent) c = i[c].parent;
                                    for (h = 0; h < a; ++h)
                                        if (n != h && i[h].element && e(i[n].element, i[h].element)) {
                                            var o = h;
                                            while (-1 != i[o].parent) o = i[o].parent;
                                            if (o != c) {
                                                i[c].rank > i[o].rank ? i[o].parent = c : (i[c].parent = o, i[c].rank == i[o].rank && i[o].rank++, c = o);
                                                var s, l = h;
                                                while (-1 != i[l].parent) s = l, l = i[l].parent, i[s].parent = c;
                                                l = n;
                                                while (-1 != i[l].parent) s = l, l = i[l].parent, i[s].parent = c
                                            }
                                        }
                                } var p = [],
                                d = 0;
                            for (n = 0; n < a; n++) {
                                h = -1;
                                var b = n;
                                if (i[b].element) {
                                    while (-1 != i[b].parent) b = i[b].parent;
                                    i[b].rank >= 0 && (i[b].rank = ~d++), h = ~i[b].rank
                                }
                                p[n] = h
                            }
                            var g = [];
                            for (n = 0; n < d + 1; ++n) g[n] = {
                                neighbors: 0,
                                x: 0,
                                y: 0,
                                width: 0,
                                height: 0,
                                confidence: 0
                            };
                            for (n = 0; n < a; ++n) {
                                var j = t[n],
                                    x = p[n];
                                0 == g[x].neighbors && (g[x].confidence = j.confidence), ++g[x].neighbors, g[x].x += j.x, g[x].y += j.y, g[x].width += j.width, g[x].height += j.height, g[x].confidence = Math.max(g[x].confidence, j.confidence)
                            }
                            var V = [];
                            for (n = 0; n < d; ++n) a = g[n].neighbors, a >= r && V.push({
                                x: (2 * g[n].x + a) / (2 * a),
                                y: (2 * g[n].y + a) / (2 * a),
                                width: (2 * g[n].width + a) / (2 * a),
                                height: (2 * g[n].height + a) / (2 * a),
                                neighbors: g[n].neighbors,
                                confidence: g[n].confidence
                            });
                            var f = [];
                            for (a = V.length, n = 0; n < a; ++n) {
                                j = V[n];
                                var F = !0;
                                for (h = 0; h < a; ++h) {
                                    var k = V[h],
                                        m = .25 * k.width + .5 | 0;
                                    if (n != h && j.x >= k.x - m && j.y >= k.y - m && j.x + j.width <= k.x + k.width + m && j.y + j.height <= k.y + k.height + m && (k.neighbors > Math.max(3, j.neighbors) || j.neighbors < 3)) {
                                        F = !1;
                                        break
                                    }
                                }
                                F && f.push(j)
                            }
                            return f
                        }
                    }
                }();
                e.bbf = t
            }(n),
            function(t) {
                "undefined" === typeof e.exports ? window.jsfeat = t : e.exports = t
            }(n)
        },
        "28e3": function(t, r, n) {
            "use strict";
            (function(t) {
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = getApp();

                function h(e, t, r) {
                    for (var n = 0; n < e.length; n++)
                        if (e[n][t] === r) return n;
                    return -1
                }
                var a = {
                    data: function() {
                        return {
                            nbTitle: "\u81ea\u52a8\u5316\u6d4b\u8bd5",
                            devices: [],
                            forTest: !1,
                            deviceTested: [],
                            deviceTesting: null,
                            testStatus: "",
                            blu_rec_content: null,
                            bluOpen: !1,
                            discoveryStarted: !1,
                            recDeviceMsgTimer: null,
                            testingIdx: -1,
                            total: 0,
                            notPass: 0,
                            passCount: 0,
                            scrollTop: 0,
                            chs: [],
                            misScanding: !1,
                            scandbutName: "\u5f00\u59cb\u81ea\u52a8\u6d4b\u8bd5",
                            name: "",
                            deviceId: "",
                            canWrite: !1
                        }
                    },
                    onHide: function() {},
                    onLoad: function() {
                        this.forTest = 0 != n.globalData.muuidSel
                    },
                    onunLoad: function() {
                        this.stopBluetoothDevicesDiscovery(), this.closeCnnAndRun(), uni.setKeepScreenOn({
                            keepScreenOn: !1
                        }), n.globalData.blu_cnn_from_test = !1
                    },
                    onReady: function() {
                        n.globalData.blu_cnn_from_test = !0, this.checkAndOpenBluetoothAdapter(), uni.setKeepScreenOn({
                            keepScreenOn: !0
                        })
                    },
                    methods: {
                        checkAndOpenBluetoothAdapter: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                            if (this.bluOpen) e();
                            else {
                                var r = this;
                                uni.getBluetoothAdapterState({
                                    success: function(n) {
                                        t("log", "getBluetoothAdapterState", n, " at pages/test/test.js:79"), r.bluOpen = !0, uni.onBLEConnectionStateChange((function(e) {
                                            r.bleConnectionStateChange(e)
                                        })), e && e()
                                    },
                                    fail: function(t) {
                                        1e4 == t.errCode && r.openBluetoothAdapter(e)
                                    }
                                })
                            }
                        },
                        showMsg: function(e) {
                            n.globalData.showModalTips(e, !0)
                        },
                        openBluetoothAdapter: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                                r = this;
                            uni.openBluetoothAdapter({
                                success: function(e) {
                                    t("log", "openBluetoothAdapter success", e, " at pages/test/test.js:102"), r.bluOpen = !0, uni.onBLEConnectionStateChange((function(e) {
                                        r.bleConnectionStateChange(e)
                                    }))
                                },
                                fail: function(e) {
                                    r.bluOpen = !1, t("log", "openBluetoothAdapter", e, " at pages/test/test.js:110"), 10001 === e.errCode && r.showMsg("\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528"), 103 == e.errno && r.showMsg("\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650")
                                },
                                complete: function() {
                                    e && e()
                                }
                            })
                        },
                        bleConnectionStateChange: function(e) {
                            var t = h(this.deviceTested, "deviceId", e.deviceId);
                            if (-1 != t) {
                                var r = this.deviceTested[t].conn;
                                this.$set(this.deviceTested[t], "conn", e.connected), !e.connected && r && (this.deviceTesting = null, this.discoveryStarted && this.doStart(this.testingIdx + 1))
                            }
                        },
                        getBluetoothAdapterState: function() {
                            var e = this;
                            uni.getBluetoothAdapterState({
                                success: function(r) {
                                    t("log", "getBluetoothAdapterState", r, " at pages/test/test.js:141"), r.discovering ? e.onBluetoothDeviceFound() : r.available && e.startBluetoothDevicesDiscovery()
                                }
                            })
                        },
                        startBluetoothDevicesDiscovery: function() {
                            var e = this;
                            this.discoveryStarted ? this.stopBluetoothDevicesDiscovery() : (this.misScanding = !0, this.scandbutName = "\u6b63\u5728\u81ea\u52a8\u6d4b\u8bd5", this.devices = [], this.chs = [], this.discoveryStarted = !0, uni.startBluetoothDevicesDiscovery({
                                allowDuplicatesKey: !0,
                                interval: 1e3,
                                success: function(r) {
                                    t("log", "startBluetoothDevicesDiscovery success", r, " at pages/test/test.js:173"), e.onBluetoothDeviceFound()
                                },
                                fail: function(r) {
                                    t("log", "startBluetoothDevicesDiscovery fail", r, " at pages/test/test.js:177"), 1509008 === r.errno && n.globalData.showModalTips(e.$t("\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650"), !0)
                                }
                            }))
                        },
                        stopBluetoothDevicesDiscovery: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                            this.discoveryStarted = !1;
                            var r = this;
                            uni.stopBluetoothDevicesDiscovery({
                                success: function(n) {
                                    t("log", n, " at pages/test/test.js:189"), r.misScanding = !1, r.scandbutName = "\u5f00\u59cb\u81ea\u52a8\u6d4b\u8bd5", t("log", r.misScanding, r.scandbutName, " at pages/test/test.js:192"), null != e && e()
                                }
                            })
                        },
                        ab2hex: function(e) {
                            var t = Array.prototype.map.call(new Uint8Array(e), (function(e) {
                                    return ("00" + e.toString(16)).slice(-2) + ""
                                })),
                                r = t.join("").toUpperCase().slice(0, 4);
                            return r
                        },
                        onBluetoothDeviceFound: function() {
                            var e = this;
                            uni.onBluetoothDeviceFound((function(t) {
                                t.devices.forEach((function(t) {
                                    if (t.name || t.localName) {
                                        var r = t.name || t.localName;
                                        if (r) {
                                            if (!e.forTest) {
                                                if (!r.startsWith("TD5322A_")) return;
                                                var n = e.tripCh(t.deviceId, ":"),
                                                    a = n.slice(0, 4).toUpperCase();
                                                r = "Laser_Light_" + a
                                            }
                                            t["showName"] = r;
                                            var i = e.devices,
                                                c = h(i, "deviceId", t.deviceId); - 1 === c ? (e.devices.push(t), e.addToTest(t)) : e.devices[c] = t
                                        }
                                    }
                                }))
                            }))
                        },
                        addToTest: function(e) {
                            t("log", "addtotest begin", e, " at pages/test/test.js:237");
                            var r = h(this.deviceTested, "deviceId", e.deviceId); - 1 == r && (e["testTimeBegin"] = new Date, e["testStatus"] = "\u672a\u5f00\u59cb", e["testResult"] = "\u672a\u6d4b\u8bd5", e["testTimeEnd"] = "", e["testMsg"] = "", e["canSend"] = !1, this.deviceTested.push(e), this.scrollToBottom(), this.total = this.total + 1, this.notPass = this.notPass + 1, this.deviceTesting || -1 != this.testingIdx || this.doStart(this.testingIdx + 1))
                        },
                        scrollToBottom: function() {
                            var e = this;
                            uni.createSelectorQuery().in(this).select("#scroll_view").fields({
                                size: !0,
                                scrollOffset: !0,
                                scrollHeight: !0
                            }).exec((function(t) {
                                if (t[0]) {
                                    var r = t[0].scrollHeight;
                                    e.$nextTick((function() {
                                        e.scrollTop = r
                                    }))
                                }
                            }))
                        },
                        tripCh: function(e, t) {
                            for (var r = "", n = 0; n < e.length; n++) ":" != e[n] && (r += e[n]);
                            return r
                        },
                        doLog: function() {
                            this.testStatus = this.deviceTesting.testStatus, t("log", "testing dev", this.deviceTesting, " at pages/test/test.js:286")
                        },
                        createBLEConnection: function(e) {
                            var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                            e.canSend = !1, t("log", "\u5f00\u59cb\u8fde\u63a5createBLEConnection", " at pages/test/test.js:291"), e.testStatus = "\u6b63\u5728\u8fde\u63a5", this.doLog();
                            var n = e.deviceId;
                            uni.createBLEConnection({
                                deviceId: n,
                                timeout: 4e3,
                                success: function(e) {
                                    r && r(null)
                                },
                                fail: function(e) {
                                    r && r(e)
                                }
                            })
                        },
                        closeBLEConnection: function(e) {
                            uni.closeBLEConnection({
                                deviceId: e.deviceId,
                                complete: function() {}
                            })
                        },
                        getBLEDeviceServices: function(e) {
                            var r = this,
                                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                                h = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 4;
                            e.testStatus = "\u6b63\u5728\u83b7\u53d6\u670d\u52a1", this.doLog(), h < 0 && n && n("\u83b7\u53d6\u670d\u52a1\u8d85\u65f6");
                            var a = e.deviceId;
                            uni.getBLEDeviceServices({
                                deviceId: a,
                                success: function(a) {
                                    if (0 == a.services.length) return t("log", "service length: ", a.services.length, " at pages/test/test.js:327"), void setTimeout((function() {
                                        r.getBLEDeviceServices(e, n, h - 1)
                                    }), 1e3);
                                    t("log", "getBLEDeviceServices----", a, " at pages/test/test.js:331");
                                    for (var i = !1, c = 0; c < a.services.length; c++) "0000FF00-0000-1000-8000-00805F9B34FB" != a.services[c].uuid && "0000FFE0-0000-1000-8000-00805F9B34FB1" != a.services[c].uuid || (e.serviceId = a.services[c].uuid, i = !0, r.getBLEDeviceCharacteristics(e));
                                    !i && n && n("\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u670d\u52a1")
                                },
                                fail: function(e) {
                                    n && n(e)
                                }
                            })
                        },
                        getBLEDeviceCharacteristics: function(r) {
                            r.testStatus = "\u6b63\u5728\u83b7\u53d6\u7279\u5f81\u503c", this.doLog(), uni.onBLECharacteristicValueChange((function(e) {
                                new Uint8Array(e.value);
                                var t = function(e) {
                                    var t = Array.prototype.map.call(new Uint8Array(e), (function(e) {
                                        return ("00" + e.toString(16)).slice(-2)
                                    }));
                                    return t.join("")
                                }(e.value);
                                n.addContent(e.characteristicId, t.toUpperCase())
                            }));
                            var n = this,
                                h = r.deviceId,
                                a = r.serviceId;
                            uni.getBLEDeviceCharacteristics({
                                deviceId: h,
                                serviceId: a,
                                success: function(e) {
                                    t("log", "getBLEDeviceCharacteristics success", e.characteristics, " at pages/test/test.js:366");
                                    for (var i = function(i) {
                                            var c = e.characteristics[i];
                                            c.properties.read && uni.readBLECharacteristicValue({
                                                deviceId: h,
                                                serviceId: a,
                                                characteristicId: c.uuid
                                            }), c.properties.write && ("0000FFE2-0000-1000-8000-00805F9B34FB" != c.uuid && "0000FF02-0000-1000-8000-00805F9B34FB" != c.uuid || (r.writeUUID = c.uuid, n.startTest(r))), (c.properties.notify || c.properties.indicate) && ("0000FFE1-0000-1000-8000-00805F9B34FB" != c.uuid && "0000FF01-0000-1000-8000-00805F9B34FB" != c.uuid || (r.readUUID = c.uuid, uni.notifyBLECharacteristicValueChange({
                                                deviceId: h,
                                                serviceId: a,
                                                characteristicId: c.uuid,
                                                state: !0,
                                                success: function(e) {
                                                    r.canSend = !0, uni.readBLECharacteristicValue({
                                                        deviceId: h,
                                                        serviceId: a,
                                                        characteristicId: c.uuid,
                                                        success: function(e) {
                                                            t("log", "readBLECharacteristicValue2:", e, " at pages/test/test.js:399")
                                                        },
                                                        fail: function(e) {
                                                            t("log", "readBLECharacteristicValue2-fail:", e, " at pages/test/test.js:402")
                                                        }
                                                    })
                                                }
                                            })))
                                        }, c = 0; c < e.characteristics.length; c++) i(c)
                                },
                                fail: function(n) {
                                    r.testStatus = "\u6d4b\u8bd5\u7ed3\u675f", r.testResult = "\u672a\u901a\u8fc7", r.testMsg = "\u83b7\u53d6\u7279\u5f81\u503c\u5931\u8d25:" + JSON.stringify(e), t("error", "getBLEDeviceCharacteristics", n, " at pages/test/test.js:415"), this.doLog()
                                }
                            })
                        },
                        addContent: function(e, r) {
                            t("log", "addContent", r, " at pages/test/test.js:422");
                            var n = this.blu_rec_content;
                            if (null == n ? r.startsWith("E0E1E2E3") && (n = r) : n += r, "" != n && null != n) {
                                var h = n.lastIndexOf("E0E1E2E3"),
                                    a = n.lastIndexOf("E4E5E6E7"),
                                    i = n;
                                a > 0 && (a == n.length - 8 ? (i = n.slice(h, a + 8), this.dataReced(e, i), i = null) : i = n.slice(h)), this.blu_rec_content = i
                            }
                        },
                        getCmdValue: function(e, r, n) {
                            var h = new RegExp(e + "(.+?)" + r),
                                a = h.exec(n);
                            return null !== a ? a[1] : (t("log", "\u672a\u5339\u914d\u5230\u7b26\u5408\u8981\u6c42\u7684\u5b57\u7b26\u4e32", " at pages/test/test.js:455"), "")
                        },
                        dataReced: function(e, r) {
                            t("log", "data ", r, " at pages/test/test.js:461"), this.recDeviceMsgTimer && (clearTimeout(this.recDeviceMsgTimer), this.recDeviceMsgTimer = null);
                            var n = this.getCmdValue("C0C1C2C3", "C4C5C6C7", r),
                                h = "C0C1C2C304" + n.substring(2, 20) + "FFFFFFFF" + n.substring(28, n.length) + "C4C5C6C7";
                            if (t("log", "sTxt", h, " at pages/test/test.js:469"), this.deviceTesting && this.deviceTesting.readUUID == e) {
                                var a = this.deviceTesting;
                                a.testStatus = "\u6b63\u5728\u53d1\u9001\u8282\u76ee\u547d\u4ee4", this.doLog();
                                var i = this;
                                this.sendData(a, h, (function(e) {
                                    e ? (a.testStatus = "\u6d4b\u8bd5\u7ed3\u675f", a.testResult = "\u672a\u901a\u8fc7", t("log", "\u53d1\u9001\u8282\u76ee\u547d\u4ee4\u5931\u8d25" + JSON.stringify(e), " at pages/test/test.js:479"), a.testMsg = "\u53d1\u9001\u8282\u76ee\u547d\u4ee4\u5931\u8d25", i.doLog()) : (a.testStatus = "\u6d4b\u8bd5\u7ed3\u675f", a.testResult = "\u5df2\u901a\u8fc7", a.testMsg = "\u53d1\u9001\u8282\u76ee\u547d\u4ee4\u6210\u529f", i.notPass = i.notPass - 1, i.passCount = i.passCount + 1, i.doLog(), i.closeCnnAndRun())
                                }))
                            } else t("log", "\u7279\u5f81\u503c\u4e0d\u5339\u914d", " at pages/test/test.js:492")
                        },
                        startTest: function(e) {
                            var r = this,
                                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 10;
                            if (n < 0) return e.testStatus = "\u6d4b\u8bd5\u7ed3\u675f", e.testResult = "\u672a\u901a\u8fc7", t("log", "\u53d1\u9001\u547d\u4ee4\u5931\u8d25:" + JSON.stringify(res), " at pages/test/test.js:499"), e.testMsg = "\u53d1\u9001\u547d\u4ee4\u5931\u8d25-\u53d1\u9001\u8d85\u65f6", void this.doLog();
                            e.canSend ? setTimeout((function() {
                                r.doStartTest(e)
                            }), 4e3) : setTimeout((function() {
                                r.startTest(e, n - 1)
                            }), 1e3)
                        },
                        doStartTest: function(e) {
                            var r = this,
                                n = this;
                            e.testStatus = "\u6b63\u5728\u53d1\u9001\u67e5\u8be2\u547d\u4ee4", this.doLog(), this.sendData(e, "E0E1E2E3F776CD3AE4E5E6E7", (function(h) {
                                h ? (e.testStatus = "\u6d4b\u8bd5\u7ed3\u675f", e.testResult = "\u672a\u901a\u8fc7", t("log", "\u53d1\u9001\u67e5\u8be2\u547d\u4ee4\u5931\u8d25" + JSON.stringify(h), " at pages/test/test.js:519"), e.testMsg = "\u53d1\u9001\u67e5\u8be2\u547d\u4ee4\u5931\u8d25", n.doLog()) : (e.testStatus = "\u53d1\u9001\u67e5\u8be2\u547d\u4ee4\u6210\u529f\uff0c\u7b49\u5f85\u8bbe\u5907\u54cd\u5e94", n.doLog(), r.recDeviceMsgTimer && clearTimeout(r.recDeviceMsgTimer), r.recDeviceMsgTimer = setTimeout((function() {
                                    r.recDeviceMsgTimer = null, e.conn && (e.testStatus = "\u6d4b\u8bd5\u7ed3\u675f", e.testResult = "\u672a\u901a\u8fc7", t("log", "\u8bfb\u53d6\u8bbe\u5907\u8d85\u65f6", " at pages/test/test.js:531"), e.testMsg = "\u8bfb\u53d6\u8bbe\u5907\u8d85\u65f6", n.doLog(), n.closeCnnAndRun((function() {
                                        t("log", "that.closeCnnAndRun", " at pages/test/test.js:535")
                                    })))
                                }), 1e4))
                            }))
                        },
                        reTest: function(e) {
                            this.discoveryStarted ? this.showMsg("\u8bf7\u5148\u505c\u6b62\u81ea\u52a8\u6d4b\u8bd5") : ("\u5df2\u901a\u8fc7" == this.deviceTested[e].testResult && (this.notPass = this.notPass + 1, this.passCount = this.passCount - 1), this.doStart(e))
                        },
                        startTest1: function(e) {
                            var r = this;
                            uni.openBluetoothAdapter({
                                success: function(e) {
                                    r.doStart()
                                },
                                fail: function(e) {
                                    t("log", "openBluetoothAdapter\u5931\u8d25", e, " at pages/test/test.js:563")
                                }
                            })
                        },
                        closeCnnAndRun: function() {
                            for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, r = null, n = 0; n < this.deviceTested.length; n++)
                                if (this.deviceTested[n].conn) {
                                    r = this.deviceTested[n];
                                    break
                                } t("log", "dev====", r, " at pages/test/test.js:577"), null != r && r.conn ? uni.closeBLEConnection({
                                deviceId: r.deviceId,
                                fail: function(e) {
                                    t("log", "closeBLEConnection \u5931\u8d25:", e, " at pages/test/test.js:582")
                                },
                                complete: function() {
                                    e && e()
                                }
                            }) : e && e()
                        },
                        doStart: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                                r = this;
                            if (e > this.deviceTested.length - 1) this.discoveryStarted && setTimeout((function() {
                                r.doStart(e)
                            }), 1e3);
                            else {
                                this.testingIdx = e, this.deviceTesting = this.deviceTested[e], this.deviceTesting.testResult = "\u6b63\u5728\u6d4b\u8bd5", this.deviceTesting.testStatus = "\u6b63\u5728\u6d4b\u8bd5", this.deviceTesting.testMsg = "\u6b63\u5728\u6d4b\u8bd5", t("log", "startTest  =========", this.testingIdx, this.deviceTesting, " at pages/test/test.js:604");
                                var n = this.deviceTesting;
                                this.closeCnnAndRun((function() {
                                    r.createBLEConnection(r.deviceTesting, (function(t) {
                                        t ? (n.testStatus = "\u6d4b\u8bd5\u7ed3\u675f", n.testResult = "\u672a\u901a\u8fc7", n.testMsg = "\u8fde\u63a5\u5931\u8d25:" + JSON.stringify(t), r.$set(r.deviceTested[e], "testStatus", "\u6d4b\u8bd5\u7ed3\u675f"), r.doLog(), r.deviceTesting = null, r.discoveryStarted && r.doStart(r.testingIdx + 1)) : (n.testStatus = "\u5df2\u8fde\u63a5", n.conn = !0, r.doLog(), r.getBLEDeviceServices(n, (function(e) {
                                            n.testStatus = "\u6d4b\u8bd5\u7ed3\u675f", n.testResult = "\u672a\u901a\u8fc7", n.testMsg = "\u83b7\u53d6\u670d\u52a1\u5931\u8d25:" + JSON.stringify(e), r.doLog(), r.closeCnnAndRun()
                                        })))
                                    }))
                                }))
                            }
                        },
                        testClick: function() {
                            this.sendData(this.deviceTesting, "E0E1E2E3F776CD3AE4E5E6E7")
                        },
                        covert2SendData: function(e) {
                            t("log", "covert2SendData", e, " at pages/test/test.js:639");
                            var r = new Uint8Array(e.match(/[\da-f]{2}/gi).map((function(e) {
                                return parseInt(e, 16)
                            })));
                            if (null == r) return [];
                            var n = r.buffer.byteLength,
                                h = [],
                                a = 0;
                            while (n > 0) {
                                var i = n % 20,
                                    c = null;
                                n >= 20 ? (c = new Uint8Array(r.subarray(a, a + 20)).buffer, n -= 20, a += 20) : (c = new Uint8Array(r.subarray(a, a + i)).buffer, n -= i, a += i), h.push(c)
                            }
                            return h
                        },
                        sendData: function(e, t) {
                            var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                                n = this.covert2SendData(t);
                            this.doSendData(e, n, 0, r)
                        },
                        doSendData: function(e, t) {
                            var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                                n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                                h = t[r],
                                a = this;
                            this.writeBLECharacteristicValue(e, h, (function(h) {
                                null != h ? n && n(h) : r < t.length - 1 ? setTimeout((function() {
                                    a.doSendData(e, t, r + 1, n)
                                }), 20) : n && n(null)
                            }))
                        },
                        writeBLECharacteristicValue: function(e, t) {
                            var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                            uni.writeBLECharacteristicValue({
                                deviceId: e.deviceId,
                                serviceId: e.serviceId,
                                characteristicId: e.writeUUID,
                                value: t,
                                success: function(e) {
                                    r && r(null)
                                },
                                fail: function(e) {
                                    r && r(e)
                                }
                            })
                        },
                        closeBluetoothAdapter: function() {
                            uni.closeBluetoothAdapter()
                        }
                    }
                };
                r.default = a
            }).call(this, n("f3b9")["default"])
        },
        "2a89": function(e, t, r) {
            e.exports = r.p + "static/imgs/text/arrow-left.png"
        },
        "32bf": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("7010"),
                h = r("17d8");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        3315: function(t, r, n) {
            (function(h, a) {
                var i, c, o, s = n("3b2d");
                (function(e, n) {
                    "object" === s(r) && "undefined" !== typeof t ? n(r) : (c = [r], i = n, o = "function" === typeof i ? i.apply(r, c) : i, void 0 === o || (t.exports = o))
                })(0, (function(t) {
                    "use strict";
                    /*! https://mths.be/codepointat v0.2.0 by @mathias */
                    String.prototype.codePointAt || function() {
                        var e = function() {
                                try {
                                    var e = {},
                                        t = Object.defineProperty,
                                        r = t(e, e, e) && t
                                } catch (n) {}
                                return r
                            }(),
                            t = function(e) {
                                if (null == this) throw TypeError();
                                var t = String(this),
                                    r = t.length,
                                    n = e ? Number(e) : 0;
                                if (n != n && (n = 0), !(n < 0 || n >= r)) {
                                    var h, a = t.charCodeAt(n);
                                    return a >= 55296 && a <= 56319 && r > n + 1 && (h = t.charCodeAt(n + 1), h >= 56320 && h <= 57343) ? 1024 * (a - 55296) + h - 56320 + 65536 : a
                                }
                            };
                        e ? e(String.prototype, "codePointAt", {
                            value: t,
                            configurable: !0,
                            writable: !0
                        }) : String.prototype.codePointAt = t
                    }();

                    function r() {
                        this.table = new Uint16Array(16), this.trans = new Uint16Array(288)
                    }

                    function i(e, t) {
                        this.source = e, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = t, this.destLen = 0, this.ltree = new r, this.dtree = new r
                    }
                    var c = new r,
                        o = new r,
                        l = new Uint8Array(30),
                        p = new Uint16Array(30),
                        d = new Uint8Array(30),
                        b = new Uint16Array(30),
                        g = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),
                        j = new r,
                        x = new Uint8Array(320);

                    function V(e, t, r, n) {
                        var h, a;
                        for (h = 0; h < r; ++h) e[h] = 0;
                        for (h = 0; h < 30 - r; ++h) e[h + r] = h / r | 0;
                        for (a = n, h = 0; h < 30; ++h) t[h] = a, a += 1 << e[h]
                    }
                    var f = new Uint16Array(16);

                    function F(e, t, r, n) {
                        var h, a;
                        for (h = 0; h < 16; ++h) e.table[h] = 0;
                        for (h = 0; h < n; ++h) e.table[t[r + h]]++;
                        for (e.table[0] = 0, a = 0, h = 0; h < 16; ++h) f[h] = a, a += e.table[h];
                        for (h = 0; h < n; ++h) t[r + h] && (e.trans[f[t[r + h]]++] = h)
                    }

                    function k(e) {
                        e.bitcount-- || (e.tag = e.source[e.sourceIndex++], e.bitcount = 7);
                        var t = 1 & e.tag;
                        return e.tag >>>= 1, t
                    }

                    function m(e, t, r) {
                        if (!t) return r;
                        while (e.bitcount < 24) e.tag |= e.source[e.sourceIndex++] << e.bitcount, e.bitcount += 8;
                        var n = e.tag & 65535 >>> 16 - t;
                        return e.tag >>>= t, e.bitcount -= t, n + r
                    }

                    function P(e, t) {
                        while (e.bitcount < 24) e.tag |= e.source[e.sourceIndex++] << e.bitcount, e.bitcount += 8;
                        var r = 0,
                            n = 0,
                            h = 0,
                            a = e.tag;
                        do {
                            n = 2 * n + (1 & a), a >>>= 1, ++h, r += t.table[h], n -= t.table[h]
                        } while (n >= 0);
                        return e.tag = a, e.bitcount -= h, t.trans[r + n]
                    }

                    function u(e, t, r) {
                        var n, h, a, i, c, o;
                        for (n = m(e, 5, 257), h = m(e, 5, 1), a = m(e, 4, 4), i = 0; i < 19; ++i) x[i] = 0;
                        for (i = 0; i < a; ++i) {
                            var s = m(e, 3, 0);
                            x[g[i]] = s
                        }
                        for (F(j, x, 0, 19), c = 0; c < n + h;) {
                            var l = P(e, j);
                            switch (l) {
                                case 16:
                                    var p = x[c - 1];
                                    for (o = m(e, 2, 3); o; --o) x[c++] = p;
                                    break;
                                case 17:
                                    for (o = m(e, 3, 3); o; --o) x[c++] = 0;
                                    break;
                                case 18:
                                    for (o = m(e, 7, 11); o; --o) x[c++] = 0;
                                    break;
                                default:
                                    x[c++] = l;
                                    break
                            }
                        }
                        F(t, x, 0, n), F(r, x, n, h)
                    }

                    function X(e, t, r) {
                        while (1) {
                            var n, h, a, i, c = P(e, t);
                            if (256 === c) return 0;
                            if (c < 256) e.dest[e.destLen++] = c;
                            else
                                for (c -= 257, n = m(e, l[c], p[c]), h = P(e, r), a = e.destLen - m(e, d[h], b[h]), i = a; i < a + n; ++i) e.dest[e.destLen++] = e.dest[i]
                        }
                    }

                    function N(e) {
                        var t, r, n;
                        while (e.bitcount > 8) e.sourceIndex--, e.bitcount -= 8;
                        if (t = e.source[e.sourceIndex + 1], t = 256 * t + e.source[e.sourceIndex], r = e.source[e.sourceIndex + 3], r = 256 * r + e.source[e.sourceIndex + 2], t !== (65535 & ~r)) return -3;
                        for (e.sourceIndex += 4, n = t; n; --n) e.dest[e.destLen++] = e.source[e.sourceIndex++];
                        return e.bitcount = 0, 0
                    }(function(e, t) {
                        var r;
                        for (r = 0; r < 7; ++r) e.table[r] = 0;
                        for (e.table[7] = 24, e.table[8] = 152, e.table[9] = 112, r = 0; r < 24; ++r) e.trans[r] = 256 + r;
                        for (r = 0; r < 144; ++r) e.trans[24 + r] = r;
                        for (r = 0; r < 8; ++r) e.trans[168 + r] = 280 + r;
                        for (r = 0; r < 112; ++r) e.trans[176 + r] = 144 + r;
                        for (r = 0; r < 5; ++r) t.table[r] = 0;
                        for (t.table[5] = 32, r = 0; r < 32; ++r) t.trans[r] = r
                    })(c, o), V(l, p, 4, 3), V(d, b, 2, 1), l[28] = 0, p[28] = 258;
                    var H = function(e, t) {
                        var r, n, h, a = new i(e, t);
                        do {
                            switch (r = k(a), n = m(a, 2, 0), n) {
                                case 0:
                                    h = N(a);
                                    break;
                                case 1:
                                    h = X(a, c, o);
                                    break;
                                case 2:
                                    u(a, a.ltree, a.dtree), h = X(a, a.ltree, a.dtree);
                                    break;
                                default:
                                    h = -3
                            }
                            if (0 !== h) throw new Error("Data error")
                        } while (!r);
                        return a.destLen < a.dest.length ? "function" === typeof a.dest.slice ? a.dest.slice(0, a.destLen) : a.dest.subarray(0, a.destLen) : a.dest
                    };

                    function z(e, t, r, n, h) {
                        return Math.pow(1 - h, 3) * e + 3 * Math.pow(1 - h, 2) * h * t + 3 * (1 - h) * Math.pow(h, 2) * r + Math.pow(h, 3) * n
                    }

                    function Q() {
                        this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN
                    }

                    function R() {
                        this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1
                    }

                    function v(e) {
                        throw new Error(e)
                    }

                    function I(e, t) {
                        e || v(t)
                    }
                    Q.prototype.isEmpty = function() {
                        return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2)
                    }, Q.prototype.addPoint = function(e, t) {
                        "number" === typeof e && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = e, this.x2 = e), e < this.x1 && (this.x1 = e), e > this.x2 && (this.x2 = e)), "number" === typeof t && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = t, this.y2 = t), t < this.y1 && (this.y1 = t), t > this.y2 && (this.y2 = t))
                    }, Q.prototype.addX = function(e) {
                        this.addPoint(e, null)
                    }, Q.prototype.addY = function(e) {
                        this.addPoint(null, e)
                    }, Q.prototype.addBezier = function(e, t, r, n, h, a, i, c) {
                        var o = [e, t],
                            s = [r, n],
                            l = [h, a],
                            p = [i, c];
                        this.addPoint(e, t), this.addPoint(i, c);
                        for (var d = 0; d <= 1; d++) {
                            var b = 6 * o[d] - 12 * s[d] + 6 * l[d],
                                g = -3 * o[d] + 9 * s[d] - 9 * l[d] + 3 * p[d],
                                j = 3 * s[d] - 3 * o[d];
                            if (0 !== g) {
                                var x = Math.pow(b, 2) - 4 * j * g;
                                if (!(x < 0)) {
                                    var V = (-b + Math.sqrt(x)) / (2 * g);
                                    0 < V && V < 1 && (0 === d && this.addX(z(o[d], s[d], l[d], p[d], V)), 1 === d && this.addY(z(o[d], s[d], l[d], p[d], V)));
                                    var f = (-b - Math.sqrt(x)) / (2 * g);
                                    0 < f && f < 1 && (0 === d && this.addX(z(o[d], s[d], l[d], p[d], f)), 1 === d && this.addY(z(o[d], s[d], l[d], p[d], f)))
                                }
                            } else {
                                if (0 === b) continue;
                                var F = -j / b;
                                0 < F && F < 1 && (0 === d && this.addX(z(o[d], s[d], l[d], p[d], F)), 1 === d && this.addY(z(o[d], s[d], l[d], p[d], F)))
                            }
                        }
                    }, Q.prototype.addQuad = function(e, t, r, n, h, a) {
                        var i = e + 2 / 3 * (r - e),
                            c = t + 2 / 3 * (n - t),
                            o = i + 1 / 3 * (h - e),
                            s = c + 1 / 3 * (a - t);
                        this.addBezier(e, t, i, c, o, s, h, a)
                    }, R.prototype.moveTo = function(e, t) {
                        this.commands.push({
                            type: "M",
                            x: e,
                            y: t
                        })
                    }, R.prototype.lineTo = function(e, t) {
                        this.commands.push({
                            type: "L",
                            x: e,
                            y: t
                        })
                    }, R.prototype.curveTo = R.prototype.bezierCurveTo = function(e, t, r, n, h, a) {
                        this.commands.push({
                            type: "C",
                            x1: e,
                            y1: t,
                            x2: r,
                            y2: n,
                            x: h,
                            y: a
                        })
                    }, R.prototype.quadTo = R.prototype.quadraticCurveTo = function(e, t, r, n) {
                        this.commands.push({
                            type: "Q",
                            x1: e,
                            y1: t,
                            x: r,
                            y: n
                        })
                    }, R.prototype.close = R.prototype.closePath = function() {
                        this.commands.push({
                            type: "Z"
                        })
                    }, R.prototype.extend = function(e) {
                        if (e.commands) e = e.commands;
                        else if (e instanceof Q) {
                            var t = e;
                            return this.moveTo(t.x1, t.y1), this.lineTo(t.x2, t.y1), this.lineTo(t.x2, t.y2), this.lineTo(t.x1, t.y2), void this.close()
                        }
                        Array.prototype.push.apply(this.commands, e)
                    }, R.prototype.getBoundingBox = function() {
                        for (var e = new Q, t = 0, r = 0, n = 0, h = 0, a = 0; a < this.commands.length; a++) {
                            var i = this.commands[a];
                            switch (i.type) {
                                case "M":
                                    e.addPoint(i.x, i.y), t = n = i.x, r = h = i.y;
                                    break;
                                case "L":
                                    e.addPoint(i.x, i.y), n = i.x, h = i.y;
                                    break;
                                case "Q":
                                    e.addQuad(n, h, i.x1, i.y1, i.x, i.y), n = i.x, h = i.y;
                                    break;
                                case "C":
                                    e.addBezier(n, h, i.x1, i.y1, i.x2, i.y2, i.x, i.y), n = i.x, h = i.y;
                                    break;
                                case "Z":
                                    n = t, h = r;
                                    break;
                                default:
                                    throw new Error("Unexpected path command " + i.type)
                            }
                        }
                        return e.isEmpty() && e.addPoint(0, 0), e
                    }, R.prototype.draw = function(e) {
                        e.beginPath();
                        for (var t = 0; t < this.commands.length; t += 1) {
                            var r = this.commands[t];
                            "M" === r.type ? e.moveTo(r.x, r.y) : "L" === r.type ? e.lineTo(r.x, r.y) : "C" === r.type ? e.bezierCurveTo(r.x1, r.y1, r.x2, r.y2, r.x, r.y) : "Q" === r.type ? e.quadraticCurveTo(r.x1, r.y1, r.x, r.y) : "Z" === r.type && e.closePath()
                        }
                        this.fill && (e.fillStyle = this.fill, e.fill()), this.stroke && (e.strokeStyle = this.stroke, e.lineWidth = this.strokeWidth, e.stroke())
                    }, R.prototype.toPathData = function(e) {
                        function t(t) {
                            return Math.round(t) === t ? "" + Math.round(t) : t.toFixed(e)
                        }

                        function r() {
                            for (var e = arguments, r = "", n = 0; n < arguments.length; n += 1) {
                                var h = e[n];
                                h >= 0 && n > 0 && (r += " "), r += t(h)
                            }
                            return r
                        }
                        e = void 0 !== e ? e : 2;
                        for (var n = "", h = 0; h < this.commands.length; h += 1) {
                            var a = this.commands[h];
                            "M" === a.type ? n += "M" + r(a.x, a.y) : "L" === a.type ? n += "L" + r(a.x, a.y) : "C" === a.type ? n += "C" + r(a.x1, a.y1, a.x2, a.y2, a.x, a.y) : "Q" === a.type ? n += "Q" + r(a.x1, a.y1, a.x, a.y) : "Z" === a.type && (n += "Z")
                        }
                        return n
                    }, R.prototype.toSVG = function(e) {
                        var t = '<path d="';
                        return t += this.toPathData(e), t += '"', this.fill && "black" !== this.fill && (null === this.fill ? t += ' fill="none"' : t += ' fill="' + this.fill + '"'), this.stroke && (t += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), t += "/>", t
                    }, R.prototype.toDOMElement = function(e) {
                        var t = this.toPathData(e),
                            r = document.createElementNS("http://www.w3.org/2000/svg", "path");
                        return r.setAttribute("d", t), r
                    };
                    var w = {
                            fail: v,
                            argument: I,
                            assert: I
                        },
                        y = {},
                        C = {},
                        A = {};

                    function D(e) {
                        return function() {
                            return e
                        }
                    }
                    C.BYTE = function(e) {
                        return w.argument(e >= 0 && e <= 255, "Byte value should be between 0 and 255."), [e]
                    }, A.BYTE = D(1), C.CHAR = function(e) {
                        return [e.charCodeAt(0)]
                    }, A.CHAR = D(1), C.CHARARRAY = function(e) {
                        "undefined" === typeof e && (e = "", h("warn", "Undefined CHARARRAY encountered and treated as an empty string. This is probably caused by a missing glyph name.", " at utils/opentype.js:999"));
                        for (var t = [], r = 0; r < e.length; r += 1) t[r] = e.charCodeAt(r);
                        return t
                    }, A.CHARARRAY = function(e) {
                        return "undefined" === typeof e ? 0 : e.length
                    }, C.USHORT = function(e) {
                        return [e >> 8 & 255, 255 & e]
                    }, A.USHORT = D(2), C.SHORT = function(e) {
                        return e >= 32768 && (e = -(65536 - e)), [e >> 8 & 255, 255 & e]
                    }, A.SHORT = D(2), C.UINT24 = function(e) {
                        return [e >> 16 & 255, e >> 8 & 255, 255 & e]
                    }, A.UINT24 = D(3), C.ULONG = function(e) {
                        return [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e]
                    }, A.ULONG = D(4), C.LONG = function(e) {
                        return e >= 2147483648 && (e = -(4294967296 - e)), [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e]
                    }, A.LONG = D(4), C.FIXED = C.ULONG, A.FIXED = A.ULONG, C.FWORD = C.SHORT, A.FWORD = A.SHORT, C.UFWORD = C.USHORT, A.UFWORD = A.USHORT, C.LONGDATETIME = function(e) {
                        return [0, 0, 0, 0, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e]
                    }, A.LONGDATETIME = D(8), C.TAG = function(e) {
                        return w.argument(4 === e.length, "Tag should be exactly 4 ASCII characters."), [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]
                    }, A.TAG = D(4), C.Card8 = C.BYTE, A.Card8 = A.BYTE, C.Card16 = C.USHORT, A.Card16 = A.USHORT, C.OffSize = C.BYTE, A.OffSize = A.BYTE, C.SID = C.USHORT, A.SID = A.USHORT, C.NUMBER = function(e) {
                        return e >= -107 && e <= 107 ? [e + 139] : e >= 108 && e <= 1131 ? (e -= 108, [247 + (e >> 8), 255 & e]) : e >= -1131 && e <= -108 ? (e = -e - 108, [251 + (e >> 8), 255 & e]) : e >= -32768 && e <= 32767 ? C.NUMBER16(e) : C.NUMBER32(e)
                    }, A.NUMBER = function(e) {
                        return C.NUMBER(e).length
                    }, C.NUMBER16 = function(e) {
                        return [28, e >> 8 & 255, 255 & e]
                    }, A.NUMBER16 = D(3), C.NUMBER32 = function(e) {
                        return [29, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e]
                    }, A.NUMBER32 = D(5), C.REAL = function(e) {
                        var t = e.toString(),
                            r = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t);
                        if (r) {
                            var n = parseFloat("1e" + ((r[2] ? +r[2] : 0) + r[1].length));
                            t = (Math.round(e * n) / n).toString()
                        }
                        for (var h = "", a = 0, i = t.length; a < i; a += 1) {
                            var c = t[a];
                            h += "e" === c ? "-" === t[++a] ? "c" : "b" : "." === c ? "a" : "-" === c ? "e" : c
                        }
                        h += 1 & h.length ? "f" : "ff";
                        for (var o = [30], s = 0, l = h.length; s < l; s += 2) o.push(parseInt(h.substr(s, 2), 16));
                        return o
                    }, A.REAL = function(e) {
                        return C.REAL(e).length
                    }, C.NAME = C.CHARARRAY, A.NAME = A.CHARARRAY, C.STRING = C.CHARARRAY, A.STRING = A.CHARARRAY, y.UTF8 = function(e, t, r) {
                        for (var n = [], h = r, a = 0; a < h; a++, t += 1) n[a] = e.getUint8(t);
                        return String.fromCharCode.apply(null, n)
                    }, y.UTF16 = function(e, t, r) {
                        for (var n = [], h = r / 2, a = 0; a < h; a++, t += 2) n[a] = e.getUint16(t);
                        return String.fromCharCode.apply(null, n)
                    }, C.UTF16 = function(e) {
                        for (var t = [], r = 0; r < e.length; r += 1) {
                            var n = e.charCodeAt(r);
                            t[t.length] = n >> 8 & 255, t[t.length] = 255 & n
                        }
                        return t
                    }, A.UTF16 = function(e) {
                        return 2 * e.length
                    };
                    var S = {
                        "x-mac-croatian": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\u0160\u2122\xb4\xa8\u2260\u017d\xd8\u221e\xb1\u2264\u2265\u2206\xb5\u2202\u2211\u220f\u0161\u222b\xaa\xba\u03a9\u017e\xf8\xbf\xa1\xac\u221a\u0192\u2248\u0106\xab\u010c\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u0110\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\uf8ff\xa9\u2044\u20ac\u2039\u203a\xc6\xbb\u2013\xb7\u201a\u201e\u2030\xc2\u0107\xc1\u010d\xc8\xcd\xce\xcf\xcc\xd3\xd4\u0111\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u03c0\xcb\u02da\xb8\xca\xe6\u02c7",
                        "x-mac-cyrillic": "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u2020\xb0\u0490\xa3\xa7\u2022\xb6\u0406\xae\xa9\u2122\u0402\u0452\u2260\u0403\u0453\u221e\xb1\u2264\u2265\u0456\xb5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040a\u045a\u0458\u0405\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\u040b\u045b\u040c\u045c\u0455\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u201e\u040e\u045e\u040f\u045f\u2116\u0401\u0451\u044f\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e",
                        "x-mac-gaelic": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u1e02\xb1\u2264\u2265\u1e03\u010a\u010b\u1e0a\u1e0b\u1e1e\u1e1f\u0120\u0121\u1e40\xe6\xf8\u1e41\u1e56\u1e57\u027c\u0192\u017f\u1e60\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\u1e61\u1e9b\xff\u0178\u1e6a\u20ac\u2039\u203a\u0176\u0177\u1e6b\xb7\u1ef2\u1ef3\u204a\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\u2663\xd2\xda\xdb\xd9\u0131\xdd\xfd\u0174\u0175\u1e84\u1e85\u1e80\u1e81\u1e82\u1e83",
                        "x-mac-greek": "\xc4\xb9\xb2\xc9\xb3\xd6\xdc\u0385\xe0\xe2\xe4\u0384\xa8\xe7\xe9\xe8\xea\xeb\xa3\u2122\xee\xef\u2022\xbd\u2030\xf4\xf6\xa6\u20ac\xf9\xfb\xfc\u2020\u0393\u0394\u0398\u039b\u039e\u03a0\xdf\xae\xa9\u03a3\u03aa\xa7\u2260\xb0\xb7\u0391\xb1\u2264\u2265\xa5\u0392\u0395\u0396\u0397\u0399\u039a\u039c\u03a6\u03ab\u03a8\u03a9\u03ac\u039d\xac\u039f\u03a1\u2248\u03a4\xab\xbb\u2026\xa0\u03a5\u03a7\u0386\u0388\u0153\u2013\u2015\u201c\u201d\u2018\u2019\xf7\u0389\u038a\u038c\u038e\u03ad\u03ae\u03af\u03cc\u038f\u03cd\u03b1\u03b2\u03c8\u03b4\u03b5\u03c6\u03b3\u03b7\u03b9\u03be\u03ba\u03bb\u03bc\u03bd\u03bf\u03c0\u03ce\u03c1\u03c3\u03c4\u03b8\u03c9\u03c2\u03c7\u03c5\u03b6\u03ca\u03cb\u0390\u03b0\xad",
                        "x-mac-icelandic": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\xdd\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u03a9\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\u20ac\xd0\xf0\xde\xfe\xfd\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uf8ff\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7",
                        "x-mac-inuit": "\u1403\u1404\u1405\u1406\u140a\u140b\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144e\u144f\u1450\u1451\u1455\u1456\u1466\u146d\u146e\u146f\u1470\u1472\u1473\u1483\u148b\u148c\u148d\u148e\u1490\u1491\xb0\u14a1\u14a5\u14a6\u2022\xb6\u14a7\xae\xa9\u2122\u14a8\u14aa\u14ab\u14bb\u14c2\u14c3\u14c4\u14c5\u14c7\u14c8\u14d0\u14ef\u14f0\u14f1\u14f2\u14f4\u14f5\u1505\u14d5\u14d6\u14d7\u14d8\u14da\u14db\u14ea\u1528\u1529\u152a\u152b\u152d\u2026\xa0\u152e\u153e\u1555\u1556\u1557\u2013\u2014\u201c\u201d\u2018\u2019\u1558\u1559\u155a\u155d\u1546\u1547\u1548\u1549\u154b\u154c\u1550\u157f\u1580\u1581\u1582\u1583\u1584\u1585\u158f\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15a0\u15a1\u15a2\u15a3\u15a4\u15a5\u15a6\u157c\u0141\u0142",
                        "x-mac-ce": "\xc4\u0100\u0101\xc9\u0104\xd6\xdc\xe1\u0105\u010c\xe4\u010d\u0106\u0107\xe9\u0179\u017a\u010e\xed\u010f\u0112\u0113\u0116\xf3\u0117\xf4\xf6\xf5\xfa\u011a\u011b\xfc\u2020\xb0\u0118\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\u0119\xa8\u2260\u0123\u012e\u012f\u012a\u2264\u2265\u012b\u0136\u2202\u2211\u0142\u013b\u013c\u013d\u013e\u0139\u013a\u0145\u0146\u0143\xac\u221a\u0144\u0147\u2206\xab\xbb\u2026\xa0\u0148\u0150\xd5\u0151\u014c\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\u014d\u0154\u0155\u0158\u2039\u203a\u0159\u0156\u0157\u0160\u201a\u201e\u0161\u015a\u015b\xc1\u0164\u0165\xcd\u017d\u017e\u016a\xd3\xd4\u016b\u016e\xda\u016f\u0170\u0171\u0172\u0173\xdd\xfd\u0137\u017b\u0141\u017c\u0122\u02c7",
                        macintosh: "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u03a9\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uf8ff\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7",
                        "x-mac-romanian": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\u0102\u0218\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u03a9\u0103\u0219\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\u20ac\u2039\u203a\u021a\u021b\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uf8ff\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7",
                        "x-mac-turkish": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u03a9\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u011e\u011f\u0130\u0131\u015e\u015f\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uf8ff\xd2\xda\xdb\xd9\uf8a0\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7"
                    };
                    y.MACSTRING = function(e, t, r, n) {
                        var h = S[n];
                        if (void 0 !== h) {
                            for (var a = "", i = 0; i < r; i++) {
                                var c = e.getUint8(t + i);
                                a += c <= 127 ? String.fromCharCode(c) : h[127 & c]
                            }
                            return a
                        }
                    };
                    var Y, B = "function" === typeof WeakMap && new WeakMap;

                    function T(e) {
                        return e >= -128 && e <= 127
                    }

                    function L(e, t, r) {
                        var n = 0,
                            h = e.length;
                        while (t < h && n < 64 && 0 === e[t]) ++t, ++n;
                        return r.push(128 | n - 1), t
                    }

                    function M(e, t, r) {
                        var n = 0,
                            h = e.length,
                            a = t;
                        while (a < h && n < 64) {
                            var i = e[a];
                            if (!T(i)) break;
                            if (0 === i && a + 1 < h && 0 === e[a + 1]) break;
                            ++a, ++n
                        }
                        r.push(n - 1);
                        for (var c = t; c < a; ++c) r.push(e[c] + 256 & 255);
                        return a
                    }

                    function q(e, t, r) {
                        var n = 0,
                            h = e.length,
                            a = t;
                        while (a < h && n < 64) {
                            var i = e[a];
                            if (0 === i) break;
                            if (T(i) && a + 1 < h && T(e[a + 1])) break;
                            ++a, ++n
                        }
                        r.push(64 | n - 1);
                        for (var c = t; c < a; ++c) {
                            var o = e[c];
                            r.push(o + 65536 >> 8 & 255, o + 256 & 255)
                        }
                        return a
                    }
                    C.MACSTRING = function(e, t) {
                        var r = function(e) {
                            if (!Y)
                                for (var t in Y = {}, S) Y[t] = new String(t);
                            var r = Y[e];
                            if (void 0 !== r) {
                                if (B) {
                                    var n = B.get(r);
                                    if (void 0 !== n) return n
                                }
                                var h = S[e];
                                if (void 0 !== h) {
                                    for (var a = {}, i = 0; i < h.length; i++) a[h.charCodeAt(i)] = i + 128;
                                    return B && B.set(r, a), a
                                }
                            }
                        }(t);
                        if (void 0 !== r) {
                            for (var n = [], h = 0; h < e.length; h++) {
                                var a = e.charCodeAt(h);
                                if (a >= 128 && (a = r[a], void 0 === a)) return;
                                n[h] = a
                            }
                            return n
                        }
                    }, A.MACSTRING = function(e, t) {
                        var r = C.MACSTRING(e, t);
                        return void 0 !== r ? r.length : 0
                    }, C.VARDELTAS = function(e) {
                        var t = 0,
                            r = [];
                        while (t < e.length) {
                            var n = e[t];
                            t = 0 === n ? L(e, t, r) : n >= -128 && n <= 127 ? M(e, t, r) : q(e, t, r)
                        }
                        return r
                    }, C.INDEX = function(e) {
                        for (var t = 1, r = [t], n = [], h = 0; h < e.length; h += 1) {
                            var a = C.OBJECT(e[h]);
                            Array.prototype.push.apply(n, a), t += a.length, r.push(t)
                        }
                        if (0 === n.length) return [0, 0];
                        for (var i = [], c = 1 + Math.floor(Math.log(t) / Math.log(2)) / 8 | 0, o = [void 0, C.BYTE, C.USHORT, C.UINT24, C.ULONG][c], s = 0; s < r.length; s += 1) {
                            var l = o(r[s]);
                            Array.prototype.push.apply(i, l)
                        }
                        return Array.prototype.concat(C.Card16(e.length), C.OffSize(c), i, n)
                    }, A.INDEX = function(e) {
                        return C.INDEX(e).length
                    }, C.DICT = function(e) {
                        for (var t = [], r = Object.keys(e), n = r.length, h = 0; h < n; h += 1) {
                            var a = parseInt(r[h], 0),
                                i = e[a];
                            t = t.concat(C.OPERAND(i.value, i.type)), t = t.concat(C.OPERATOR(a))
                        }
                        return t
                    }, A.DICT = function(e) {
                        return C.DICT(e).length
                    }, C.OPERATOR = function(e) {
                        return e < 1200 ? [e] : [12, e - 1200]
                    }, C.OPERAND = function(e, t) {
                        var r = [];
                        if (Array.isArray(t))
                            for (var n = 0; n < t.length; n += 1) w.argument(e.length === t.length, "Not enough arguments given for type" + t), r = r.concat(C.OPERAND(e[n], t[n]));
                        else if ("SID" === t) r = r.concat(C.NUMBER(e));
                        else if ("offset" === t) r = r.concat(C.NUMBER32(e));
                        else if ("number" === t) r = r.concat(C.NUMBER(e));
                        else {
                            if ("real" !== t) throw new Error("Unknown operand type " + t);
                            r = r.concat(C.REAL(e))
                        }
                        return r
                    }, C.OP = C.BYTE, A.OP = A.BYTE;
                    var G = "function" === typeof WeakMap && new WeakMap;

                    function E(e, t, r) {
                        if (t.length && ("coverageFormat" !== t[0].name || 1 === t[0].value))
                            for (var n = 0; n < t.length; n += 1) {
                                var h = t[n];
                                this[h.name] = h.value
                            }
                        if (this.tableName = e, this.fields = t, r)
                            for (var a = Object.keys(r), i = 0; i < a.length; i += 1) {
                                var c = a[i],
                                    o = r[c];
                                void 0 !== this[c] && (this[c] = o)
                            }
                    }

                    function W(e, t, r) {
                        void 0 === r && (r = t.length);
                        var n = new Array(t.length + 1);
                        n[0] = {
                            name: e + "Count",
                            type: "USHORT",
                            value: r
                        };
                        for (var h = 0; h < t.length; h++) n[h + 1] = {
                            name: e + h,
                            type: "USHORT",
                            value: t[h]
                        };
                        return n
                    }

                    function _(e, t, r) {
                        var n = t.length,
                            h = new Array(n + 1);
                        h[0] = {
                            name: e + "Count",
                            type: "USHORT",
                            value: n
                        };
                        for (var a = 0; a < n; a++) h[a + 1] = {
                            name: e + a,
                            type: "TABLE",
                            value: r(t[a], a)
                        };
                        return h
                    }

                    function J(e, t, r) {
                        var n = t.length,
                            h = [];
                        h[0] = {
                            name: e + "Count",
                            type: "USHORT",
                            value: n
                        };
                        for (var a = 0; a < n; a++) h = h.concat(r(t[a], a));
                        return h
                    }

                    function U(e) {
                        1 === e.format ? E.call(this, "coverageTable", [{
                            name: "coverageFormat",
                            type: "USHORT",
                            value: 1
                        }].concat(W("glyph", e.glyphs))) : 2 === e.format ? E.call(this, "coverageTable", [{
                            name: "coverageFormat",
                            type: "USHORT",
                            value: 2
                        }].concat(J("rangeRecord", e.ranges, (function(e) {
                            return [{
                                name: "startGlyphID",
                                type: "USHORT",
                                value: e.start
                            }, {
                                name: "endGlyphID",
                                type: "USHORT",
                                value: e.end
                            }, {
                                name: "startCoverageIndex",
                                type: "USHORT",
                                value: e.index
                            }]
                        })))) : w.assert(!1, "Coverage format must be 1 or 2.")
                    }

                    function O(e) {
                        E.call(this, "scriptListTable", J("scriptRecord", e, (function(e, t) {
                            var r = e.script,
                                n = r.defaultLangSys;
                            return w.assert(!!n, "Unable to write GSUB: script " + e.tag + " has no default language system."), [{
                                name: "scriptTag" + t,
                                type: "TAG",
                                value: e.tag
                            }, {
                                name: "script" + t,
                                type: "TABLE",
                                value: new E("scriptTable", [{
                                    name: "defaultLangSys",
                                    type: "TABLE",
                                    value: new E("defaultLangSys", [{
                                        name: "lookupOrder",
                                        type: "USHORT",
                                        value: 0
                                    }, {
                                        name: "reqFeatureIndex",
                                        type: "USHORT",
                                        value: n.reqFeatureIndex
                                    }].concat(W("featureIndex", n.featureIndexes)))
                                }].concat(J("langSys", r.langSysRecords, (function(e, t) {
                                    var r = e.langSys;
                                    return [{
                                        name: "langSysTag" + t,
                                        type: "TAG",
                                        value: e.tag
                                    }, {
                                        name: "langSys" + t,
                                        type: "TABLE",
                                        value: new E("langSys", [{
                                            name: "lookupOrder",
                                            type: "USHORT",
                                            value: 0
                                        }, {
                                            name: "reqFeatureIndex",
                                            type: "USHORT",
                                            value: r.reqFeatureIndex
                                        }].concat(W("featureIndex", r.featureIndexes)))
                                    }]
                                }))))
                            }]
                        })))
                    }

                    function Z(e) {
                        E.call(this, "featureListTable", J("featureRecord", e, (function(e, t) {
                            var r = e.feature;
                            return [{
                                name: "featureTag" + t,
                                type: "TAG",
                                value: e.tag
                            }, {
                                name: "feature" + t,
                                type: "TABLE",
                                value: new E("featureTable", [{
                                    name: "featureParams",
                                    type: "USHORT",
                                    value: r.featureParams
                                }].concat(W("lookupListIndex", r.lookupListIndexes)))
                            }]
                        })))
                    }

                    function K(e, t) {
                        E.call(this, "lookupListTable", _("lookup", e, (function(e) {
                            var r = t[e.lookupType];
                            return w.assert(!!r, "Unable to write GSUB lookup type " + e.lookupType + " tables."), new E("lookupTable", [{
                                name: "lookupType",
                                type: "USHORT",
                                value: e.lookupType
                            }, {
                                name: "lookupFlag",
                                type: "USHORT",
                                value: e.lookupFlag
                            }].concat(_("subtable", e.subtables, r)))
                        })))
                    }
                    C.CHARSTRING = function(e) {
                        if (G) {
                            var t = G.get(e);
                            if (void 0 !== t) return t
                        }
                        for (var r = [], n = e.length, h = 0; h < n; h += 1) {
                            var a = e[h];
                            r = r.concat(C[a.type](a.value))
                        }
                        return G && G.set(e, r), r
                    }, A.CHARSTRING = function(e) {
                        return C.CHARSTRING(e).length
                    }, C.OBJECT = function(e) {
                        var t = C[e.type];
                        return w.argument(void 0 !== t, "No encoding function for type " + e.type), t(e.value)
                    }, A.OBJECT = function(e) {
                        var t = A[e.type];
                        return w.argument(void 0 !== t, "No sizeOf function for type " + e.type), t(e.value)
                    }, C.TABLE = function(e) {
                        for (var t = [], r = e.fields.length, n = [], h = [], a = 0; a < r; a += 1) {
                            var i = e.fields[a],
                                c = C[i.type];
                            w.argument(void 0 !== c, "No encoding function for field type " + i.type + " (" + i.name + ")");
                            var o = e[i.name];
                            void 0 === o && (o = i.value);
                            var s = c(o);
                            "TABLE" === i.type ? (h.push(t.length), t = t.concat([0, 0]), n.push(s)) : t = t.concat(s)
                        }
                        for (var l = 0; l < n.length; l += 1) {
                            var p = h[l],
                                d = t.length;
                            w.argument(d < 65536, "Table " + e.tableName + " too big."), t[p] = d >> 8, t[p + 1] = 255 & d, t = t.concat(n[l])
                        }
                        return t
                    }, A.TABLE = function(e) {
                        for (var t = 0, r = e.fields.length, n = 0; n < r; n += 1) {
                            var h = e.fields[n],
                                a = A[h.type];
                            w.argument(void 0 !== a, "No sizeOf function for field type " + h.type + " (" + h.name + ")");
                            var i = e[h.name];
                            void 0 === i && (i = h.value), t += a(i), "TABLE" === h.type && (t += 2)
                        }
                        return t
                    }, C.RECORD = C.TABLE, A.RECORD = A.TABLE, C.LITERAL = function(e) {
                        return e
                    }, A.LITERAL = function(e) {
                        return e.length
                    }, E.prototype.encode = function() {
                        return C.TABLE(this)
                    }, E.prototype.sizeOf = function() {
                        return A.TABLE(this)
                    }, U.prototype = Object.create(E.prototype), U.prototype.constructor = U, O.prototype = Object.create(E.prototype), O.prototype.constructor = O, Z.prototype = Object.create(E.prototype), Z.prototype.constructor = Z, K.prototype = Object.create(E.prototype), K.prototype.constructor = K;
                    var $ = {
                        Table: E,
                        Record: E,
                        Coverage: U,
                        ScriptList: O,
                        FeatureList: Z,
                        LookupList: K,
                        ushortList: W,
                        tableList: _,
                        recordList: J
                    };

                    function ee(e, t) {
                        return e.getUint8(t)
                    }

                    function te(e, t) {
                        return e.getUint16(t, !1)
                    }

                    function re(e, t) {
                        return e.getUint32(t, !1)
                    }

                    function ne(e, t) {
                        var r = e.getInt16(t, !1),
                            n = e.getUint16(t + 2, !1);
                        return r + n / 65535
                    }
                    var he = {
                        byte: 1,
                        uShort: 2,
                        short: 2,
                        uLong: 4,
                        fixed: 4,
                        longDateTime: 8,
                        tag: 4
                    };

                    function ae(e, t) {
                        this.data = e, this.offset = t, this.relativeOffset = 0
                    }
                    ae.prototype.parseByte = function() {
                        var e = this.data.getUint8(this.offset + this.relativeOffset);
                        return this.relativeOffset += 1, e
                    }, ae.prototype.parseChar = function() {
                        var e = this.data.getInt8(this.offset + this.relativeOffset);
                        return this.relativeOffset += 1, e
                    }, ae.prototype.parseCard8 = ae.prototype.parseByte, ae.prototype.parseUShort = function() {
                        var e = this.data.getUint16(this.offset + this.relativeOffset);
                        return this.relativeOffset += 2, e
                    }, ae.prototype.parseCard16 = ae.prototype.parseUShort, ae.prototype.parseSID = ae.prototype.parseUShort, ae.prototype.parseOffset16 = ae.prototype.parseUShort, ae.prototype.parseShort = function() {
                        var e = this.data.getInt16(this.offset + this.relativeOffset);
                        return this.relativeOffset += 2, e
                    }, ae.prototype.parseF2Dot14 = function() {
                        var e = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
                        return this.relativeOffset += 2, e
                    }, ae.prototype.parseULong = function() {
                        var e = re(this.data, this.offset + this.relativeOffset);
                        return this.relativeOffset += 4, e
                    }, ae.prototype.parseOffset32 = ae.prototype.parseULong, ae.prototype.parseFixed = function() {
                        var e = ne(this.data, this.offset + this.relativeOffset);
                        return this.relativeOffset += 4, e
                    }, ae.prototype.parseString = function(e) {
                        var t = this.data,
                            r = this.offset + this.relativeOffset,
                            n = "";
                        this.relativeOffset += e;
                        for (var h = 0; h < e; h++) n += String.fromCharCode(t.getUint8(r + h));
                        return n
                    }, ae.prototype.parseTag = function() {
                        return this.parseString(4)
                    }, ae.prototype.parseLongDateTime = function() {
                        var e = re(this.data, this.offset + this.relativeOffset + 4);
                        return e -= 2082844800, this.relativeOffset += 8, e
                    }, ae.prototype.parseVersion = function(e) {
                        var t = te(this.data, this.offset + this.relativeOffset),
                            r = te(this.data, this.offset + this.relativeOffset + 2);
                        return this.relativeOffset += 4, void 0 === e && (e = 4096), t + r / e / 10
                    }, ae.prototype.skip = function(e, t) {
                        void 0 === t && (t = 1), this.relativeOffset += he[e] * t
                    }, ae.prototype.parseULongList = function(e) {
                        void 0 === e && (e = this.parseULong());
                        for (var t = new Array(e), r = this.data, n = this.offset + this.relativeOffset, h = 0; h < e; h++) t[h] = r.getUint32(n), n += 4;
                        return this.relativeOffset += 4 * e, t
                    }, ae.prototype.parseOffset16List = ae.prototype.parseUShortList = function(e) {
                        void 0 === e && (e = this.parseUShort());
                        for (var t = new Array(e), r = this.data, n = this.offset + this.relativeOffset, h = 0; h < e; h++) t[h] = r.getUint16(n), n += 2;
                        return this.relativeOffset += 2 * e, t
                    }, ae.prototype.parseShortList = function(e) {
                        for (var t = new Array(e), r = this.data, n = this.offset + this.relativeOffset, h = 0; h < e; h++) t[h] = r.getInt16(n), n += 2;
                        return this.relativeOffset += 2 * e, t
                    }, ae.prototype.parseByteList = function(e) {
                        for (var t = new Array(e), r = this.data, n = this.offset + this.relativeOffset, h = 0; h < e; h++) t[h] = r.getUint8(n++);
                        return this.relativeOffset += e, t
                    }, ae.prototype.parseList = function(e, t) {
                        t || (t = e, e = this.parseUShort());
                        for (var r = new Array(e), n = 0; n < e; n++) r[n] = t.call(this);
                        return r
                    }, ae.prototype.parseList32 = function(e, t) {
                        t || (t = e, e = this.parseULong());
                        for (var r = new Array(e), n = 0; n < e; n++) r[n] = t.call(this);
                        return r
                    }, ae.prototype.parseRecordList = function(e, t) {
                        t || (t = e, e = this.parseUShort());
                        for (var r = new Array(e), n = Object.keys(t), h = 0; h < e; h++) {
                            for (var a = {}, i = 0; i < n.length; i++) {
                                var c = n[i],
                                    o = t[c];
                                a[c] = o.call(this)
                            }
                            r[h] = a
                        }
                        return r
                    }, ae.prototype.parseRecordList32 = function(e, t) {
                        t || (t = e, e = this.parseULong());
                        for (var r = new Array(e), n = Object.keys(t), h = 0; h < e; h++) {
                            for (var a = {}, i = 0; i < n.length; i++) {
                                var c = n[i],
                                    o = t[c];
                                a[c] = o.call(this)
                            }
                            r[h] = a
                        }
                        return r
                    }, ae.prototype.parseStruct = function(e) {
                        if ("function" === typeof e) return e.call(this);
                        for (var t = Object.keys(e), r = {}, n = 0; n < t.length; n++) {
                            var h = t[n],
                                a = e[h];
                            r[h] = a.call(this)
                        }
                        return r
                    }, ae.prototype.parseValueRecord = function(e) {
                        if (void 0 === e && (e = this.parseUShort()), 0 !== e) {
                            var t = {};
                            return 1 & e && (t.xPlacement = this.parseShort()), 2 & e && (t.yPlacement = this.parseShort()), 4 & e && (t.xAdvance = this.parseShort()), 8 & e && (t.yAdvance = this.parseShort()), 16 & e && (t.xPlaDevice = void 0, this.parseShort()), 32 & e && (t.yPlaDevice = void 0, this.parseShort()), 64 & e && (t.xAdvDevice = void 0, this.parseShort()), 128 & e && (t.yAdvDevice = void 0, this.parseShort()), t
                        }
                    }, ae.prototype.parseValueRecordList = function() {
                        for (var e = this.parseUShort(), t = this.parseUShort(), r = new Array(t), n = 0; n < t; n++) r[n] = this.parseValueRecord(e);
                        return r
                    }, ae.prototype.parsePointer = function(e) {
                        var t = this.parseOffset16();
                        if (t > 0) return new ae(this.data, this.offset + t).parseStruct(e)
                    }, ae.prototype.parsePointer32 = function(e) {
                        var t = this.parseOffset32();
                        if (t > 0) return new ae(this.data, this.offset + t).parseStruct(e)
                    }, ae.prototype.parseListOfLists = function(e) {
                        for (var t = this.parseOffset16List(), r = t.length, n = this.relativeOffset, h = new Array(r), a = 0; a < r; a++) {
                            var i = t[a];
                            if (0 !== i)
                                if (this.relativeOffset = i, e) {
                                    for (var c = this.parseOffset16List(), o = new Array(c.length), s = 0; s < c.length; s++) this.relativeOffset = i + c[s], o[s] = e.call(this);
                                    h[a] = o
                                } else h[a] = this.parseUShortList();
                            else h[a] = void 0
                        }
                        return this.relativeOffset = n, h
                    }, ae.prototype.parseCoverage = function() {
                        var e = this.offset + this.relativeOffset,
                            t = this.parseUShort(),
                            r = this.parseUShort();
                        if (1 === t) return {
                            format: 1,
                            glyphs: this.parseUShortList(r)
                        };
                        if (2 === t) {
                            for (var n = new Array(r), h = 0; h < r; h++) n[h] = {
                                start: this.parseUShort(),
                                end: this.parseUShort(),
                                index: this.parseUShort()
                            };
                            return {
                                format: 2,
                                ranges: n
                            }
                        }
                        throw new Error("0x" + e.toString(16) + ": Coverage format must be 1 or 2.")
                    }, ae.prototype.parseClassDef = function() {
                        var e = this.offset + this.relativeOffset,
                            t = this.parseUShort();
                        if (1 === t) return {
                            format: 1,
                            startGlyph: this.parseUShort(),
                            classes: this.parseUShortList()
                        };
                        if (2 === t) return {
                            format: 2,
                            ranges: this.parseRecordList({
                                start: ae.uShort,
                                end: ae.uShort,
                                classId: ae.uShort
                            })
                        };
                        throw new Error("0x" + e.toString(16) + ": ClassDef format must be 1 or 2.")
                    }, ae.list = function(e, t) {
                        return function() {
                            return this.parseList(e, t)
                        }
                    }, ae.list32 = function(e, t) {
                        return function() {
                            return this.parseList32(e, t)
                        }
                    }, ae.recordList = function(e, t) {
                        return function() {
                            return this.parseRecordList(e, t)
                        }
                    }, ae.recordList32 = function(e, t) {
                        return function() {
                            return this.parseRecordList32(e, t)
                        }
                    }, ae.pointer = function(e) {
                        return function() {
                            return this.parsePointer(e)
                        }
                    }, ae.pointer32 = function(e) {
                        return function() {
                            return this.parsePointer32(e)
                        }
                    }, ae.tag = ae.prototype.parseTag, ae.byte = ae.prototype.parseByte, ae.uShort = ae.offset16 = ae.prototype.parseUShort, ae.uShortList = ae.prototype.parseUShortList, ae.uLong = ae.offset32 = ae.prototype.parseULong, ae.uLongList = ae.prototype.parseULongList, ae.struct = ae.prototype.parseStruct, ae.coverage = ae.prototype.parseCoverage, ae.classDef = ae.prototype.parseClassDef;
                    var ie = {
                        reserved: ae.uShort,
                        reqFeatureIndex: ae.uShort,
                        featureIndexes: ae.uShortList
                    };
                    ae.prototype.parseScriptList = function() {
                        return this.parsePointer(ae.recordList({
                            tag: ae.tag,
                            script: ae.pointer({
                                defaultLangSys: ae.pointer(ie),
                                langSysRecords: ae.recordList({
                                    tag: ae.tag,
                                    langSys: ae.pointer(ie)
                                })
                            })
                        })) || []
                    }, ae.prototype.parseFeatureList = function() {
                        return this.parsePointer(ae.recordList({
                            tag: ae.tag,
                            feature: ae.pointer({
                                featureParams: ae.offset16,
                                lookupListIndexes: ae.uShortList
                            })
                        })) || []
                    }, ae.prototype.parseLookupList = function(e) {
                        return this.parsePointer(ae.list(ae.pointer((function() {
                            var t = this.parseUShort();
                            w.argument(1 <= t && t <= 9, "GPOS/GSUB lookup type " + t + " unknown.");
                            var r = this.parseUShort(),
                                n = 16 & r;
                            return {
                                lookupType: t,
                                lookupFlag: r,
                                subtables: this.parseList(ae.pointer(e[t])),
                                markFilteringSet: n ? this.parseUShort() : void 0
                            }
                        })))) || []
                    }, ae.prototype.parseFeatureVariationsList = function() {
                        return this.parsePointer32((function() {
                            var e = this.parseUShort(),
                                t = this.parseUShort();
                            w.argument(1 === e && t < 1, "GPOS/GSUB feature variations table unknown.");
                            var r = this.parseRecordList32({
                                conditionSetOffset: ae.offset32,
                                featureTableSubstitutionOffset: ae.offset32
                            });
                            return r
                        })) || []
                    };
                    var ce = {
                        getByte: ee,
                        getCard8: ee,
                        getUShort: te,
                        getCard16: te,
                        getShort: function(e, t) {
                            return e.getInt16(t, !1)
                        },
                        getULong: re,
                        getFixed: ne,
                        getTag: function(e, t) {
                            for (var r = "", n = t; n < t + 4; n += 1) r += String.fromCharCode(e.getInt8(n));
                            return r
                        },
                        getOffset: function(e, t, r) {
                            for (var n = 0, h = 0; h < r; h += 1) n <<= 8, n += e.getUint8(t + h);
                            return n
                        },
                        getBytes: function(e, t, r) {
                            for (var n = [], h = t; h < r; h += 1) n.push(e.getUint8(h));
                            return n
                        },
                        bytesToString: function(e) {
                            for (var t = "", r = 0; r < e.length; r += 1) t += String.fromCharCode(e[r]);
                            return t
                        },
                        Parser: ae
                    };

                    function oe(e, t, r) {
                        e.segments.push({
                            end: t,
                            start: t,
                            delta: -(t - r),
                            offset: 0,
                            glyphIndex: r
                        })
                    }
                    var se = {
                            parse: function(e, t) {
                                var r = {};
                                r.version = ce.getUShort(e, t), w.argument(0 === r.version, "cmap table version should be 0."), r.numTables = ce.getUShort(e, t + 2);
                                for (var n = -1, h = r.numTables - 1; h >= 0; h -= 1) {
                                    var a = ce.getUShort(e, t + 4 + 8 * h),
                                        i = ce.getUShort(e, t + 4 + 8 * h + 2);
                                    if (3 === a && (0 === i || 1 === i || 10 === i) || 0 === a && (0 === i || 1 === i || 2 === i || 3 === i || 4 === i)) {
                                        n = ce.getULong(e, t + 4 + 8 * h + 4);
                                        break
                                    }
                                }
                                if (-1 === n) throw new Error("No valid cmap sub-tables found.");
                                var c = new ce.Parser(e, t + n);
                                if (r.format = c.parseUShort(), 12 === r.format)(function(e, t) {
                                    var r;
                                    t.parseUShort(), e.length = t.parseULong(), e.language = t.parseULong(), e.groupCount = r = t.parseULong(), e.glyphIndexMap = {};
                                    for (var n = 0; n < r; n += 1)
                                        for (var h = t.parseULong(), a = t.parseULong(), i = t.parseULong(), c = h; c <= a; c += 1) e.glyphIndexMap[c] = i, i++
                                })(r, c);
                                else {
                                    if (4 !== r.format) throw new Error("Only format 4 and 12 cmap tables are supported (found format " + r.format + ").");
                                    (function(e, t, r, n, h) {
                                        var a;
                                        e.length = t.parseUShort(), e.language = t.parseUShort(), e.segCount = a = t.parseUShort() >> 1, t.skip("uShort", 3), e.glyphIndexMap = {};
                                        for (var i = new ce.Parser(r, n + h + 14), c = new ce.Parser(r, n + h + 16 + 2 * a), o = new ce.Parser(r, n + h + 16 + 4 * a), s = new ce.Parser(r, n + h + 16 + 6 * a), l = n + h + 16 + 8 * a, p = 0; p < a - 1; p += 1)
                                            for (var d = void 0, b = i.parseUShort(), g = c.parseUShort(), j = o.parseShort(), x = s.parseUShort(), V = g; V <= b; V += 1) 0 !== x ? (l = s.offset + s.relativeOffset - 2, l += x, l += 2 * (V - g), d = ce.getUShort(r, l), 0 !== d && (d = d + j & 65535)) : d = V + j & 65535, e.glyphIndexMap[V] = d
                                    })(r, c, e, t, n)
                                }
                                return r
                            },
                            make: function(e) {
                                var t, r = !0;
                                for (t = e.length - 1; t > 0; t -= 1) {
                                    var n = e.get(t);
                                    if (n.unicode > 65535) {
                                        h("log", "Adding CMAP format 12 (needed!)", " at utils/opentype.js:2884"), r = !1;
                                        break
                                    }
                                }
                                var a = [{
                                    name: "version",
                                    type: "USHORT",
                                    value: 0
                                }, {
                                    name: "numTables",
                                    type: "USHORT",
                                    value: r ? 1 : 2
                                }, {
                                    name: "platformID",
                                    type: "USHORT",
                                    value: 3
                                }, {
                                    name: "encodingID",
                                    type: "USHORT",
                                    value: 1
                                }, {
                                    name: "offset",
                                    type: "ULONG",
                                    value: r ? 12 : 20
                                }];
                                r || (a = a.concat([{
                                    name: "cmap12PlatformID",
                                    type: "USHORT",
                                    value: 3
                                }, {
                                    name: "cmap12EncodingID",
                                    type: "USHORT",
                                    value: 10
                                }, {
                                    name: "cmap12Offset",
                                    type: "ULONG",
                                    value: 0
                                }])), a = a.concat([{
                                    name: "format",
                                    type: "USHORT",
                                    value: 4
                                }, {
                                    name: "cmap4Length",
                                    type: "USHORT",
                                    value: 0
                                }, {
                                    name: "language",
                                    type: "USHORT",
                                    value: 0
                                }, {
                                    name: "segCountX2",
                                    type: "USHORT",
                                    value: 0
                                }, {
                                    name: "searchRange",
                                    type: "USHORT",
                                    value: 0
                                }, {
                                    name: "entrySelector",
                                    type: "USHORT",
                                    value: 0
                                }, {
                                    name: "rangeShift",
                                    type: "USHORT",
                                    value: 0
                                }]);
                                var i = new $.Table("cmap", a);
                                for (i.segments = [], t = 0; t < e.length; t += 1) {
                                    for (var c = e.get(t), o = 0; o < c.unicodes.length; o += 1) oe(i, c.unicodes[o], t);
                                    i.segments = i.segments.sort((function(e, t) {
                                        return e.start - t.start
                                    }))
                                }(function(e) {
                                    e.segments.push({
                                        end: 65535,
                                        start: 65535,
                                        delta: 1,
                                        offset: 0
                                    })
                                })(i);
                                var s = i.segments.length,
                                    l = 0,
                                    p = [],
                                    d = [],
                                    b = [],
                                    g = [],
                                    j = [],
                                    x = [];
                                for (t = 0; t < s; t += 1) {
                                    var V = i.segments[t];
                                    V.end <= 65535 && V.start <= 65535 ? (p = p.concat({
                                        name: "end_" + t,
                                        type: "USHORT",
                                        value: V.end
                                    }), d = d.concat({
                                        name: "start_" + t,
                                        type: "USHORT",
                                        value: V.start
                                    }), b = b.concat({
                                        name: "idDelta_" + t,
                                        type: "SHORT",
                                        value: V.delta
                                    }), g = g.concat({
                                        name: "idRangeOffset_" + t,
                                        type: "USHORT",
                                        value: V.offset
                                    }), void 0 !== V.glyphId && (j = j.concat({
                                        name: "glyph_" + t,
                                        type: "USHORT",
                                        value: V.glyphId
                                    }))) : l += 1, r || void 0 === V.glyphIndex || (x = x.concat({
                                        name: "cmap12Start_" + t,
                                        type: "ULONG",
                                        value: V.start
                                    }), x = x.concat({
                                        name: "cmap12End_" + t,
                                        type: "ULONG",
                                        value: V.end
                                    }), x = x.concat({
                                        name: "cmap12Glyph_" + t,
                                        type: "ULONG",
                                        value: V.glyphIndex
                                    }))
                                }
                                if (i.segCountX2 = 2 * (s - l), i.searchRange = 2 * Math.pow(2, Math.floor(Math.log(s - l) / Math.log(2))), i.entrySelector = Math.log(i.searchRange / 2) / Math.log(2), i.rangeShift = i.segCountX2 - i.searchRange, i.fields = i.fields.concat(p), i.fields.push({
                                        name: "reservedPad",
                                        type: "USHORT",
                                        value: 0
                                    }), i.fields = i.fields.concat(d), i.fields = i.fields.concat(b), i.fields = i.fields.concat(g), i.fields = i.fields.concat(j), i.cmap4Length = 14 + 2 * p.length + 2 + 2 * d.length + 2 * b.length + 2 * g.length + 2 * j.length, !r) {
                                    var f = 16 + 4 * x.length;
                                    i.cmap12Offset = 20 + i.cmap4Length, i.fields = i.fields.concat([{
                                        name: "cmap12Format",
                                        type: "USHORT",
                                        value: 12
                                    }, {
                                        name: "cmap12Reserved",
                                        type: "USHORT",
                                        value: 0
                                    }, {
                                        name: "cmap12Length",
                                        type: "ULONG",
                                        value: f
                                    }, {
                                        name: "cmap12Language",
                                        type: "ULONG",
                                        value: 0
                                    }, {
                                        name: "cmap12nGroups",
                                        type: "ULONG",
                                        value: x.length / 3
                                    }]), i.fields = i.fields.concat(x)
                                }
                                return i
                            }
                        },
                        le = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "266 ff", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"],
                        pe = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"],
                        de = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"],
                        be = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];

                    function ge(e) {
                        this.font = e
                    }

                    function je(e) {
                        this.cmap = e
                    }

                    function xe(e, t) {
                        this.encoding = e, this.charset = t
                    }

                    function Ve(e) {
                        switch (e.version) {
                            case 1:
                                this.names = be.slice();
                                break;
                            case 2:
                                this.names = new Array(e.numberOfGlyphs);
                                for (var t = 0; t < e.numberOfGlyphs; t++) e.glyphNameIndex[t] < be.length ? this.names[t] = be[e.glyphNameIndex[t]] : this.names[t] = e.names[e.glyphNameIndex[t] - be.length];
                                break;
                            case 2.5:
                                this.names = new Array(e.numberOfGlyphs);
                                for (var r = 0; r < e.numberOfGlyphs; r++) this.names[r] = be[r + e.glyphNameIndex[r]];
                                break;
                            case 3:
                                this.names = [];
                                break;
                            default:
                                this.names = [];
                                break
                        }
                    }

                    function fe(e, t) {
                        t.lowMemory ? function(e) {
                            e._IndexToUnicodeMap = {};
                            for (var t = e.tables.cmap.glyphIndexMap, r = Object.keys(t), n = 0; n < r.length; n += 1) {
                                var h = r[n],
                                    a = t[h];
                                void 0 === e._IndexToUnicodeMap[a] ? e._IndexToUnicodeMap[a] = {
                                    unicodes: [parseInt(h)]
                                } : e._IndexToUnicodeMap[a].unicodes.push(parseInt(h))
                            }
                        }(e) : function(e) {
                            for (var t, r = e.tables.cmap.glyphIndexMap, n = Object.keys(r), h = 0; h < n.length; h += 1) {
                                var a = n[h],
                                    i = r[a];
                                t = e.glyphs.get(i), t.addUnicode(parseInt(a))
                            }
                            for (var c = 0; c < e.glyphs.length; c += 1) t = e.glyphs.get(c), e.cffEncoding ? e.isCIDFont ? t.name = "gid" + c : t.name = e.cffEncoding.charset[c] : e.glyphNames.names && (t.name = e.glyphNames.glyphIndexToName(c))
                        }(e)
                    }
                    ge.prototype.charToGlyphIndex = function(e) {
                        var t = e.codePointAt(0),
                            r = this.font.glyphs;
                        if (r)
                            for (var n = 0; n < r.length; n += 1)
                                for (var h = r.get(n), a = 0; a < h.unicodes.length; a += 1)
                                    if (h.unicodes[a] === t) return n;
                        return null
                    }, je.prototype.charToGlyphIndex = function(e) {
                        return this.cmap.glyphIndexMap[e.codePointAt(0)] || 0
                    }, xe.prototype.charToGlyphIndex = function(e) {
                        var t = e.codePointAt(0),
                            r = this.encoding[t];
                        return this.charset.indexOf(r)
                    }, Ve.prototype.nameToGlyphIndex = function(e) {
                        return this.names.indexOf(e)
                    }, Ve.prototype.glyphIndexToName = function(e) {
                        return this.names[e]
                    };
                    var Fe = {
                        line: function(e, t, r, n, h) {
                            e.beginPath(), e.moveTo(t, r), e.lineTo(n, h), e.stroke()
                        }
                    };

                    function ke(e) {
                        this.bindConstructorValues(e)
                    }

                    function me(e, t, r) {
                        Object.defineProperty(e, t, {
                            get: function() {
                                return e.path, e[r]
                            },
                            set: function(t) {
                                e[r] = t
                            },
                            enumerable: !0,
                            configurable: !0
                        })
                    }

                    function Pe(e, t) {
                        if (this.font = e, this.glyphs = {}, Array.isArray(t))
                            for (var r = 0; r < t.length; r++) {
                                var n = t[r];
                                n.path.unitsPerEm = e.unitsPerEm, this.glyphs[r] = n
                            }
                        this.length = t && t.length || 0
                    }
                    ke.prototype.bindConstructorValues = function(e) {
                        this.index = e.index || 0, this.name = e.name || null, this.unicode = e.unicode || void 0, this.unicodes = e.unicodes || void 0 !== e.unicode ? [e.unicode] : [], "xMin" in e && (this.xMin = e.xMin), "yMin" in e && (this.yMin = e.yMin), "xMax" in e && (this.xMax = e.xMax), "yMax" in e && (this.yMax = e.yMax), "advanceWidth" in e && (this.advanceWidth = e.advanceWidth), Object.defineProperty(this, "path", function(e, t) {
                            var r = t || new R;
                            return {
                                configurable: !0,
                                get: function() {
                                    return "function" === typeof r && (r = r()), r
                                },
                                set: function(e) {
                                    r = e
                                }
                            }
                        }(0, e.path))
                    }, ke.prototype.addUnicode = function(e) {
                        0 === this.unicodes.length && (this.unicode = e), this.unicodes.push(e)
                    }, ke.prototype.getBoundingBox = function() {
                        return this.path.getBoundingBox()
                    }, ke.prototype.getPath = function(e, t, r, n, h) {
                        var a, i;
                        e = void 0 !== e ? e : 0, t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 72, n || (n = {});
                        var c = n.xScale,
                            o = n.yScale;
                        if (n.hinting && h && h.hinting && (i = this.path && h.hinting.exec(this, r)), i) a = h.hinting.getCommands(i), e = Math.round(e), t = Math.round(t), c = o = 1;
                        else {
                            a = this.path.commands;
                            var s = 1 / (this.path.unitsPerEm || 1e3) * r;
                            void 0 === c && (c = s), void 0 === o && (o = s)
                        }
                        for (var l = new R, p = 0; p < a.length; p += 1) {
                            var d = a[p];
                            "M" === d.type ? l.moveTo(e + d.x * c, t + -d.y * o) : "L" === d.type ? l.lineTo(e + d.x * c, t + -d.y * o) : "Q" === d.type ? l.quadraticCurveTo(e + d.x1 * c, t + -d.y1 * o, e + d.x * c, t + -d.y * o) : "C" === d.type ? l.curveTo(e + d.x1 * c, t + -d.y1 * o, e + d.x2 * c, t + -d.y2 * o, e + d.x * c, t + -d.y * o) : "Z" === d.type && l.closePath()
                        }
                        return l
                    }, ke.prototype.getContours = function() {
                        if (void 0 === this.points) return [];
                        for (var e = [], t = [], r = 0; r < this.points.length; r += 1) {
                            var n = this.points[r];
                            t.push(n), n.lastPointOfContour && (e.push(t), t = [])
                        }
                        return w.argument(0 === t.length, "There are still points left in the current contour."), e
                    }, ke.prototype.getMetrics = function() {
                        for (var e = this.path.commands, t = [], r = [], n = 0; n < e.length; n += 1) {
                            var h = e[n];
                            "Z" !== h.type && (t.push(h.x), r.push(h.y)), "Q" !== h.type && "C" !== h.type || (t.push(h.x1), r.push(h.y1)), "C" === h.type && (t.push(h.x2), r.push(h.y2))
                        }
                        var a = {
                            xMin: Math.min.apply(null, t),
                            yMin: Math.min.apply(null, r),
                            xMax: Math.max.apply(null, t),
                            yMax: Math.max.apply(null, r),
                            leftSideBearing: this.leftSideBearing
                        };
                        return isFinite(a.xMin) || (a.xMin = 0), isFinite(a.xMax) || (a.xMax = this.advanceWidth), isFinite(a.yMin) || (a.yMin = 0), isFinite(a.yMax) || (a.yMax = 0), a.rightSideBearing = this.advanceWidth - a.leftSideBearing - (a.xMax - a.xMin), a
                    }, ke.prototype.draw = function(e, t, r, n, h) {
                        this.getPath(t, r, n, h).draw(e)
                    }, ke.prototype.drawPoints = function(e, t, r, n) {
                        function h(t, r, n, h) {
                            e.beginPath();
                            for (var a = 0; a < t.length; a += 1) e.moveTo(r + t[a].x * h, n + t[a].y * h), e.arc(r + t[a].x * h, n + t[a].y * h, 2, 0, 2 * Math.PI, !1);
                            e.closePath(), e.fill()
                        }
                        t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0, n = void 0 !== n ? n : 24;
                        for (var a = 1 / this.path.unitsPerEm * n, i = [], c = [], o = this.path, s = 0; s < o.commands.length; s += 1) {
                            var l = o.commands[s];
                            void 0 !== l.x && i.push({
                                x: l.x,
                                y: -l.y
                            }), void 0 !== l.x1 && c.push({
                                x: l.x1,
                                y: -l.y1
                            }), void 0 !== l.x2 && c.push({
                                x: l.x2,
                                y: -l.y2
                            })
                        }
                        e.fillStyle = "blue", h(i, t, r, a), e.fillStyle = "red", h(c, t, r, a)
                    }, ke.prototype.drawMetrics = function(e, t, r, n) {
                        var h;
                        t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0, n = void 0 !== n ? n : 24, h = 1 / this.path.unitsPerEm * n, e.lineWidth = 1, e.strokeStyle = "black", Fe.line(e, t, -1e4, t, 1e4), Fe.line(e, -1e4, r, 1e4, r);
                        var a = this.xMin || 0,
                            i = this.yMin || 0,
                            c = this.xMax || 0,
                            o = this.yMax || 0,
                            s = this.advanceWidth || 0;
                        e.strokeStyle = "blue", Fe.line(e, t + a * h, -1e4, t + a * h, 1e4), Fe.line(e, t + c * h, -1e4, t + c * h, 1e4), Fe.line(e, -1e4, r + -i * h, 1e4, r + -i * h), Fe.line(e, -1e4, r + -o * h, 1e4, r + -o * h), e.strokeStyle = "green", Fe.line(e, t + s * h, -1e4, t + s * h, 1e4)
                    }, Pe.prototype.get = function(e) {
                        if (void 0 === this.glyphs[e]) {
                            this.font._push(e), "function" === typeof this.glyphs[e] && (this.glyphs[e] = this.glyphs[e]());
                            var t = this.glyphs[e],
                                r = this.font._IndexToUnicodeMap[e];
                            if (r)
                                for (var n = 0; n < r.unicodes.length; n++) t.addUnicode(r.unicodes[n]);
                            this.font.cffEncoding ? this.font.isCIDFont ? t.name = "gid" + e : t.name = this.font.cffEncoding.charset[e] : this.font.glyphNames.names && (t.name = this.font.glyphNames.glyphIndexToName(e)), this.glyphs[e].advanceWidth = this.font._hmtxTableData[e].advanceWidth, this.glyphs[e].leftSideBearing = this.font._hmtxTableData[e].leftSideBearing
                        } else "function" === typeof this.glyphs[e] && (this.glyphs[e] = this.glyphs[e]());
                        return this.glyphs[e]
                    }, Pe.prototype.push = function(e, t) {
                        this.glyphs[e] = t, this.length++
                    };
                    var ue = {
                        GlyphSet: Pe,
                        glyphLoader: function(e, t) {
                            return new ke({
                                index: t,
                                font: e
                            })
                        },
                        ttfGlyphLoader: function(e, t, r, n, h, a) {
                            return function() {
                                var i = new ke({
                                    index: t,
                                    font: e
                                });
                                return i.path = function() {
                                    r(i, n, h);
                                    var t = a(e.glyphs, i);
                                    return t.unitsPerEm = e.unitsPerEm, t
                                }, me(i, "xMin", "_xMin"), me(i, "xMax", "_xMax"), me(i, "yMin", "_yMin"), me(i, "yMax", "_yMax"), i
                            }
                        },
                        cffGlyphLoader: function(e, t, r, n) {
                            return function() {
                                var h = new ke({
                                    index: t,
                                    font: e
                                });
                                return h.path = function() {
                                    var t = r(e, h, n);
                                    return t.unitsPerEm = e.unitsPerEm, t
                                }, h
                            }
                        }
                    };

                    function Xe(e, t) {
                        if (e === t) return !0;
                        if (Array.isArray(e) && Array.isArray(t)) {
                            if (e.length !== t.length) return !1;
                            for (var r = 0; r < e.length; r += 1)
                                if (!Xe(e[r], t[r])) return !1;
                            return !0
                        }
                        return !1
                    }

                    function Ne(e) {
                        var t;
                        return t = e.length < 1240 ? 107 : e.length < 33900 ? 1131 : 32768, t
                    }

                    function He(e, t, r) {
                        var n, h, a = [],
                            i = [],
                            c = ce.getCard16(e, t);
                        if (0 !== c) {
                            var o = ce.getByte(e, t + 2);
                            n = t + (c + 1) * o + 2;
                            for (var s = t + 3, l = 0; l < c + 1; l += 1) a.push(ce.getOffset(e, s, o)), s += o;
                            h = n + a[c]
                        } else h = t + 2;
                        for (var p = 0; p < a.length - 1; p += 1) {
                            var d = ce.getBytes(e, n + a[p], n + a[p + 1]);
                            r && (d = r(d)), i.push(d)
                        }
                        return {
                            objects: i,
                            startOffset: t,
                            endOffset: h
                        }
                    }

                    function ze(e, t) {
                        var r, n, h, a;
                        if (28 === t) return r = e.parseByte(), n = e.parseByte(), r << 8 | n;
                        if (29 === t) return r = e.parseByte(), n = e.parseByte(), h = e.parseByte(), a = e.parseByte(), r << 24 | n << 16 | h << 8 | a;
                        if (30 === t) return function(e) {
                            var t = "",
                                r = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"];
                            while (1) {
                                var n = e.parseByte(),
                                    h = n >> 4,
                                    a = 15 & n;
                                if (15 === h) break;
                                if (t += r[h], 15 === a) break;
                                t += r[a]
                            }
                            return parseFloat(t)
                        }(e);
                        if (t >= 32 && t <= 246) return t - 139;
                        if (t >= 247 && t <= 250) return r = e.parseByte(), 256 * (t - 247) + r + 108;
                        if (t >= 251 && t <= 254) return r = e.parseByte(), 256 * -(t - 251) - r - 108;
                        throw new Error("Invalid b0 " + t)
                    }

                    function Qe(e, t, r) {
                        t = void 0 !== t ? t : 0;
                        var n = new ce.Parser(e, t),
                            h = [],
                            a = [];
                        r = void 0 !== r ? r : e.length;
                        while (n.relativeOffset < r) {
                            var i = n.parseByte();
                            i <= 21 ? (12 === i && (i = 1200 + n.parseByte()), h.push([i, a]), a = []) : a.push(ze(n, i))
                        }
                        return function(e) {
                            for (var t = {}, r = 0; r < e.length; r += 1) {
                                var n = e[r][0],
                                    h = e[r][1],
                                    a = void 0;
                                if (a = 1 === h.length ? h[0] : h, t.hasOwnProperty(n) && !isNaN(t[n])) throw new Error("Object " + t + " already has key " + n);
                                t[n] = a
                            }
                            return t
                        }(h)
                    }

                    function Re(e, t) {
                        return t = t <= 390 ? le[t] : e[t - 391], t
                    }

                    function ve(e, t, r) {
                        for (var n, h = {}, a = 0; a < t.length; a += 1) {
                            var i = t[a];
                            if (Array.isArray(i.type)) {
                                var c = [];
                                c.length = i.type.length;
                                for (var o = 0; o < i.type.length; o++) n = void 0 !== e[i.op] ? e[i.op][o] : void 0, void 0 === n && (n = void 0 !== i.value && void 0 !== i.value[o] ? i.value[o] : null), "SID" === i.type[o] && (n = Re(r, n)), c[o] = n;
                                h[i.name] = c
                            } else n = e[i.op], void 0 === n && (n = void 0 !== i.value ? i.value : null), "SID" === i.type && (n = Re(r, n)), h[i.name] = n
                        }
                        return h
                    }
                    var Ie = [{
                            name: "version",
                            op: 0,
                            type: "SID"
                        }, {
                            name: "notice",
                            op: 1,
                            type: "SID"
                        }, {
                            name: "copyright",
                            op: 1200,
                            type: "SID"
                        }, {
                            name: "fullName",
                            op: 2,
                            type: "SID"
                        }, {
                            name: "familyName",
                            op: 3,
                            type: "SID"
                        }, {
                            name: "weight",
                            op: 4,
                            type: "SID"
                        }, {
                            name: "isFixedPitch",
                            op: 1201,
                            type: "number",
                            value: 0
                        }, {
                            name: "italicAngle",
                            op: 1202,
                            type: "number",
                            value: 0
                        }, {
                            name: "underlinePosition",
                            op: 1203,
                            type: "number",
                            value: -100
                        }, {
                            name: "underlineThickness",
                            op: 1204,
                            type: "number",
                            value: 50
                        }, {
                            name: "paintType",
                            op: 1205,
                            type: "number",
                            value: 0
                        }, {
                            name: "charstringType",
                            op: 1206,
                            type: "number",
                            value: 2
                        }, {
                            name: "fontMatrix",
                            op: 1207,
                            type: ["real", "real", "real", "real", "real", "real"],
                            value: [.001, 0, 0, .001, 0, 0]
                        }, {
                            name: "uniqueId",
                            op: 13,
                            type: "number"
                        }, {
                            name: "fontBBox",
                            op: 5,
                            type: ["number", "number", "number", "number"],
                            value: [0, 0, 0, 0]
                        }, {
                            name: "strokeWidth",
                            op: 1208,
                            type: "number",
                            value: 0
                        }, {
                            name: "xuid",
                            op: 14,
                            type: [],
                            value: null
                        }, {
                            name: "charset",
                            op: 15,
                            type: "offset",
                            value: 0
                        }, {
                            name: "encoding",
                            op: 16,
                            type: "offset",
                            value: 0
                        }, {
                            name: "charStrings",
                            op: 17,
                            type: "offset",
                            value: 0
                        }, {
                            name: "private",
                            op: 18,
                            type: ["number", "offset"],
                            value: [0, 0]
                        }, {
                            name: "ros",
                            op: 1230,
                            type: ["SID", "SID", "number"]
                        }, {
                            name: "cidFontVersion",
                            op: 1231,
                            type: "number",
                            value: 0
                        }, {
                            name: "cidFontRevision",
                            op: 1232,
                            type: "number",
                            value: 0
                        }, {
                            name: "cidFontType",
                            op: 1233,
                            type: "number",
                            value: 0
                        }, {
                            name: "cidCount",
                            op: 1234,
                            type: "number",
                            value: 8720
                        }, {
                            name: "uidBase",
                            op: 1235,
                            type: "number"
                        }, {
                            name: "fdArray",
                            op: 1236,
                            type: "offset"
                        }, {
                            name: "fdSelect",
                            op: 1237,
                            type: "offset"
                        }, {
                            name: "fontName",
                            op: 1238,
                            type: "SID"
                        }],
                        we = [{
                            name: "subrs",
                            op: 19,
                            type: "offset",
                            value: 0
                        }, {
                            name: "defaultWidthX",
                            op: 20,
                            type: "number",
                            value: 0
                        }, {
                            name: "nominalWidthX",
                            op: 21,
                            type: "number",
                            value: 0
                        }];

                    function ye(e, t) {
                        var r = Qe(e, 0, e.byteLength);
                        return ve(r, Ie, t)
                    }

                    function Ce(e, t, r, n) {
                        var h = Qe(e, t, r);
                        return ve(h, we, n)
                    }

                    function Ae(e, t, r, n) {
                        for (var h = [], a = 0; a < r.length; a += 1) {
                            var i = new DataView(new Uint8Array(r[a]).buffer),
                                c = ye(i, n);
                            c._subrs = [], c._subrsBias = 0, c._defaultWidthX = 0, c._nominalWidthX = 0;
                            var o = c.private[0],
                                s = c.private[1];
                            if (0 !== o && 0 !== s) {
                                var l = Ce(e, s + t, o, n);
                                if (c._defaultWidthX = l.defaultWidthX, c._nominalWidthX = l.nominalWidthX, 0 !== l.subrs) {
                                    var p = s + l.subrs,
                                        d = He(e, p + t);
                                    c._subrs = d.objects, c._subrsBias = Ne(c._subrs)
                                }
                                c._privateDict = l
                            }
                            h.push(c)
                        }
                        return h
                    }

                    function De(e, t, r) {
                        var n, a, i, c, o, s, l, p, d = new R,
                            b = [],
                            g = 0,
                            j = !1,
                            x = !1,
                            V = 0,
                            f = 0;
                        if (e.isCIDFont) {
                            var F = e.tables.cff.topDict._fdSelect[t.index],
                                k = e.tables.cff.topDict._fdArray[F];
                            o = k._subrs, s = k._subrsBias, l = k._defaultWidthX, p = k._nominalWidthX
                        } else o = e.tables.cff.topDict._subrs, s = e.tables.cff.topDict._subrsBias, l = e.tables.cff.topDict._defaultWidthX, p = e.tables.cff.topDict._nominalWidthX;
                        var m = l;

                        function P(e, t) {
                            x && d.closePath(), d.moveTo(e, t), x = !0
                        }

                        function u() {
                            var e;
                            e = b.length % 2 !== 0, e && !j && (m = b.shift() + p), g += b.length >> 1, b.length = 0, j = !0
                        }
                        return function r(l) {
                            var F, k, X, N, H, z, Q, R, v, I, w, y, C = 0;
                            while (C < l.length) {
                                var A = l[C];
                                switch (C += 1, A) {
                                    case 1:
                                        u();
                                        break;
                                    case 3:
                                        u();
                                        break;
                                    case 4:
                                        b.length > 1 && !j && (m = b.shift() + p, j = !0), f += b.pop(), P(V, f);
                                        break;
                                    case 5:
                                        while (b.length > 0) V += b.shift(), f += b.shift(), d.lineTo(V, f);
                                        break;
                                    case 6:
                                        while (b.length > 0) {
                                            if (V += b.shift(), d.lineTo(V, f), 0 === b.length) break;
                                            f += b.shift(), d.lineTo(V, f)
                                        }
                                        break;
                                    case 7:
                                        while (b.length > 0) {
                                            if (f += b.shift(), d.lineTo(V, f), 0 === b.length) break;
                                            V += b.shift(), d.lineTo(V, f)
                                        }
                                        break;
                                    case 8:
                                        while (b.length > 0) n = V + b.shift(), a = f + b.shift(), i = n + b.shift(), c = a + b.shift(), V = i + b.shift(), f = c + b.shift(), d.curveTo(n, a, i, c, V, f);
                                        break;
                                    case 10:
                                        H = b.pop() + s, z = o[H], z && r(z);
                                        break;
                                    case 11:
                                        return;
                                    case 12:
                                        switch (A = l[C], C += 1, A) {
                                            case 35:
                                                n = V + b.shift(), a = f + b.shift(), i = n + b.shift(), c = a + b.shift(), Q = i + b.shift(), R = c + b.shift(), v = Q + b.shift(), I = R + b.shift(), w = v + b.shift(), y = I + b.shift(), V = w + b.shift(), f = y + b.shift(), b.shift(), d.curveTo(n, a, i, c, Q, R), d.curveTo(v, I, w, y, V, f);
                                                break;
                                            case 34:
                                                n = V + b.shift(), a = f, i = n + b.shift(), c = a + b.shift(), Q = i + b.shift(), R = c, v = Q + b.shift(), I = c, w = v + b.shift(), y = f, V = w + b.shift(), d.curveTo(n, a, i, c, Q, R), d.curveTo(v, I, w, y, V, f);
                                                break;
                                            case 36:
                                                n = V + b.shift(), a = f + b.shift(), i = n + b.shift(), c = a + b.shift(), Q = i + b.shift(), R = c, v = Q + b.shift(), I = c, w = v + b.shift(), y = I + b.shift(), V = w + b.shift(), d.curveTo(n, a, i, c, Q, R), d.curveTo(v, I, w, y, V, f);
                                                break;
                                            case 37:
                                                n = V + b.shift(), a = f + b.shift(), i = n + b.shift(), c = a + b.shift(), Q = i + b.shift(), R = c + b.shift(), v = Q + b.shift(), I = R + b.shift(), w = v + b.shift(), y = I + b.shift(), Math.abs(w - V) > Math.abs(y - f) ? V = w + b.shift() : f = y + b.shift(), d.curveTo(n, a, i, c, Q, R), d.curveTo(v, I, w, y, V, f);
                                                break;
                                            default:
                                                h("log", "Glyph " + t.index + ": unknown operator 1200" + A, " at utils/opentype.js:4546"), b.length = 0
                                        }
                                        break;
                                    case 14:
                                        b.length > 0 && !j && (m = b.shift() + p, j = !0), x && (d.closePath(), x = !1);
                                        break;
                                    case 18:
                                        u();
                                        break;
                                    case 19:
                                    case 20:
                                        u(), C += g + 7 >> 3;
                                        break;
                                    case 21:
                                        b.length > 2 && !j && (m = b.shift() + p, j = !0), f += b.pop(), V += b.pop(), P(V, f);
                                        break;
                                    case 22:
                                        b.length > 1 && !j && (m = b.shift() + p, j = !0), V += b.pop(), P(V, f);
                                        break;
                                    case 23:
                                        u();
                                        break;
                                    case 24:
                                        while (b.length > 2) n = V + b.shift(), a = f + b.shift(), i = n + b.shift(), c = a + b.shift(), V = i + b.shift(), f = c + b.shift(), d.curveTo(n, a, i, c, V, f);
                                        V += b.shift(), f += b.shift(), d.lineTo(V, f);
                                        break;
                                    case 25:
                                        while (b.length > 6) V += b.shift(), f += b.shift(), d.lineTo(V, f);
                                        n = V + b.shift(), a = f + b.shift(), i = n + b.shift(), c = a + b.shift(), V = i + b.shift(), f = c + b.shift(), d.curveTo(n, a, i, c, V, f);
                                        break;
                                    case 26:
                                        b.length % 2 && (V += b.shift());
                                        while (b.length > 0) n = V, a = f + b.shift(), i = n + b.shift(), c = a + b.shift(), V = i, f = c + b.shift(), d.curveTo(n, a, i, c, V, f);
                                        break;
                                    case 27:
                                        b.length % 2 && (f += b.shift());
                                        while (b.length > 0) n = V + b.shift(), a = f, i = n + b.shift(), c = a + b.shift(), V = i + b.shift(), f = c, d.curveTo(n, a, i, c, V, f);
                                        break;
                                    case 28:
                                        F = l[C], k = l[C + 1], b.push((F << 24 | k << 16) >> 16), C += 2;
                                        break;
                                    case 29:
                                        H = b.pop() + e.gsubrsBias, z = e.gsubrs[H], z && r(z);
                                        break;
                                    case 30:
                                        while (b.length > 0) {
                                            if (n = V, a = f + b.shift(), i = n + b.shift(), c = a + b.shift(), V = i + b.shift(), f = c + (1 === b.length ? b.shift() : 0), d.curveTo(n, a, i, c, V, f), 0 === b.length) break;
                                            n = V + b.shift(), a = f, i = n + b.shift(), c = a + b.shift(), f = c + b.shift(), V = i + (1 === b.length ? b.shift() : 0), d.curveTo(n, a, i, c, V, f)
                                        }
                                        break;
                                    case 31:
                                        while (b.length > 0) {
                                            if (n = V + b.shift(), a = f, i = n + b.shift(), c = a + b.shift(), f = c + b.shift(), V = i + (1 === b.length ? b.shift() : 0), d.curveTo(n, a, i, c, V, f), 0 === b.length) break;
                                            n = V, a = f + b.shift(), i = n + b.shift(), c = a + b.shift(), V = i + b.shift(), f = c + (1 === b.length ? b.shift() : 0), d.curveTo(n, a, i, c, V, f)
                                        }
                                        break;
                                    default:
                                        A < 32 ? h("log", "Glyph " + t.index + ": unknown operator " + A, " at utils/opentype.js:4716") : A < 247 ? b.push(A - 139) : A < 251 ? (F = l[C], C += 1, b.push(256 * (A - 247) + F + 108)) : A < 255 ? (F = l[C], C += 1, b.push(256 * -(A - 251) - F - 108)) : (F = l[C], k = l[C + 1], X = l[C + 2], N = l[C + 3], C += 4, b.push((F << 24 | k << 16 | X << 8 | N) / 65536))
                                }
                            }
                        }(r), t.advanceWidth = m, d
                    }

                    function Se(e, t) {
                        var r, n = le.indexOf(e);
                        return n >= 0 && (r = n), n = t.indexOf(e), n >= 0 ? r = n + le.length : (r = le.length + t.length, t.push(e)), r
                    }

                    function Ye(e, t, r) {
                        for (var n = {}, h = 0; h < e.length; h += 1) {
                            var a = e[h],
                                i = t[a.name];
                            void 0 === i || Xe(i, a.value) || ("SID" === a.type && (i = Se(i, r)), n[a.op] = {
                                name: a.name,
                                type: a.type,
                                value: i
                            })
                        }
                        return n
                    }

                    function Be(e, t) {
                        var r = new $.Record("Top DICT", [{
                            name: "dict",
                            type: "DICT",
                            value: {}
                        }]);
                        return r.dict = Ye(Ie, e, t), r
                    }

                    function Te(e) {
                        var t = new $.Record("Top DICT INDEX", [{
                            name: "topDicts",
                            type: "INDEX",
                            value: []
                        }]);
                        return t.topDicts = [{
                            name: "topDict_0",
                            type: "TABLE",
                            value: e
                        }], t
                    }

                    function Le(e) {
                        var t = [],
                            r = e.path;
                        t.push({
                            name: "width",
                            type: "NUMBER",
                            value: e.advanceWidth
                        });
                        for (var n = 0, h = 0, a = 0; a < r.commands.length; a += 1) {
                            var i = void 0,
                                c = void 0,
                                o = r.commands[a];
                            if ("Q" === o.type) {
                                o = {
                                    type: "C",
                                    x: o.x,
                                    y: o.y,
                                    x1: Math.round(1 / 3 * n + 2 / 3 * o.x1),
                                    y1: Math.round(1 / 3 * h + 2 / 3 * o.y1),
                                    x2: Math.round(1 / 3 * o.x + 2 / 3 * o.x1),
                                    y2: Math.round(1 / 3 * o.y + 2 / 3 * o.y1)
                                }
                            }
                            if ("M" === o.type) i = Math.round(o.x - n), c = Math.round(o.y - h), t.push({
                                name: "dx",
                                type: "NUMBER",
                                value: i
                            }), t.push({
                                name: "dy",
                                type: "NUMBER",
                                value: c
                            }), t.push({
                                name: "rmoveto",
                                type: "OP",
                                value: 21
                            }), n = Math.round(o.x), h = Math.round(o.y);
                            else if ("L" === o.type) i = Math.round(o.x - n), c = Math.round(o.y - h), t.push({
                                name: "dx",
                                type: "NUMBER",
                                value: i
                            }), t.push({
                                name: "dy",
                                type: "NUMBER",
                                value: c
                            }), t.push({
                                name: "rlineto",
                                type: "OP",
                                value: 5
                            }), n = Math.round(o.x), h = Math.round(o.y);
                            else if ("C" === o.type) {
                                var s = Math.round(o.x1 - n),
                                    l = Math.round(o.y1 - h),
                                    p = Math.round(o.x2 - o.x1),
                                    d = Math.round(o.y2 - o.y1);
                                i = Math.round(o.x - o.x2), c = Math.round(o.y - o.y2), t.push({
                                    name: "dx1",
                                    type: "NUMBER",
                                    value: s
                                }), t.push({
                                    name: "dy1",
                                    type: "NUMBER",
                                    value: l
                                }), t.push({
                                    name: "dx2",
                                    type: "NUMBER",
                                    value: p
                                }), t.push({
                                    name: "dy2",
                                    type: "NUMBER",
                                    value: d
                                }), t.push({
                                    name: "dx",
                                    type: "NUMBER",
                                    value: i
                                }), t.push({
                                    name: "dy",
                                    type: "NUMBER",
                                    value: c
                                }), t.push({
                                    name: "rrcurveto",
                                    type: "OP",
                                    value: 8
                                }), n = Math.round(o.x), h = Math.round(o.y)
                            }
                        }
                        return t.push({
                            name: "endchar",
                            type: "OP",
                            value: 14
                        }), t
                    }
                    var Me = {
                        parse: function(e, t, r, n) {
                            r.tables.cff = {};
                            var h = function(e, t) {
                                    var r = {};
                                    return r.formatMajor = ce.getCard8(e, t), r.formatMinor = ce.getCard8(e, t + 1), r.size = ce.getCard8(e, t + 2), r.offsetSize = ce.getCard8(e, t + 3), r.startOffset = t, r.endOffset = t + 4, r
                                }(e, t),
                                a = He(e, h.endOffset, ce.bytesToString),
                                i = He(e, a.endOffset),
                                c = He(e, i.endOffset, ce.bytesToString),
                                o = He(e, c.endOffset);
                            r.gsubrs = o.objects, r.gsubrsBias = Ne(r.gsubrs);
                            var s = Ae(e, t, i.objects, c.objects);
                            if (1 !== s.length) throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + s.length);
                            var l = s[0];
                            if (r.tables.cff.topDict = l, l._privateDict && (r.defaultWidthX = l._privateDict.defaultWidthX, r.nominalWidthX = l._privateDict.nominalWidthX), void 0 !== l.ros[0] && void 0 !== l.ros[1] && (r.isCIDFont = !0), r.isCIDFont) {
                                var p = l.fdArray,
                                    d = l.fdSelect;
                                if (0 === p || 0 === d) throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
                                p += t;
                                var b = He(e, p),
                                    g = Ae(e, t, b.objects, c.objects);
                                l._fdArray = g, d += t, l._fdSelect = function(e, t, r, n) {
                                    var h, a = [],
                                        i = new ce.Parser(e, t),
                                        c = i.parseCard8();
                                    if (0 === c)
                                        for (var o = 0; o < r; o++) {
                                            if (h = i.parseCard8(), h >= n) throw new Error("CFF table CID Font FDSelect has bad FD index value " + h + " (FD count " + n + ")");
                                            a.push(h)
                                        } else {
                                            if (3 !== c) throw new Error("CFF Table CID Font FDSelect table has unsupported format " + c);
                                            var s, l = i.parseCard16(),
                                                p = i.parseCard16();
                                            if (0 !== p) throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + p);
                                            for (var d = 0; d < l; d++) {
                                                if (h = i.parseCard8(), s = i.parseCard16(), h >= n) throw new Error("CFF table CID Font FDSelect has bad FD index value " + h + " (FD count " + n + ")");
                                                if (s > r) throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + s);
                                                for (; p < s; p++) a.push(h);
                                                p = s
                                            }
                                            if (s !== r) throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + s)
                                        }
                                    return a
                                }(e, d, r.numGlyphs, g.length)
                            }
                            var j, x = t + l.private[1],
                                V = Ce(e, x, l.private[0], c.objects);
                            if (r.defaultWidthX = V.defaultWidthX, r.nominalWidthX = V.nominalWidthX, 0 !== V.subrs) {
                                var f = x + V.subrs,
                                    F = He(e, f);
                                r.subrs = F.objects, r.subrsBias = Ne(r.subrs)
                            } else r.subrs = [], r.subrsBias = 0;
                            n.lowMemory ? (j = function(e, t) {
                                var r, n, h = [],
                                    a = ce.getCard16(e, t);
                                if (0 !== a) {
                                    var i = ce.getByte(e, t + 2);
                                    r = t + (a + 1) * i + 2;
                                    for (var c = t + 3, o = 0; o < a + 1; o += 1) h.push(ce.getOffset(e, c, i)), c += i;
                                    n = r + h[a]
                                } else n = t + 2;
                                return {
                                    offsets: h,
                                    startOffset: t,
                                    endOffset: n
                                }
                            }(e, t + l.charStrings), r.nGlyphs = j.offsets.length) : (j = He(e, t + l.charStrings), r.nGlyphs = j.objects.length);
                            var k = function(e, t, r, n) {
                                var h, a, i = new ce.Parser(e, t);
                                r -= 1;
                                var c = [".notdef"],
                                    o = i.parseCard8();
                                if (0 === o)
                                    for (var s = 0; s < r; s += 1) h = i.parseSID(), c.push(Re(n, h));
                                else if (1 === o)
                                    while (c.length <= r) {
                                        h = i.parseSID(), a = i.parseCard8();
                                        for (var l = 0; l <= a; l += 1) c.push(Re(n, h)), h += 1
                                    } else {
                                        if (2 !== o) throw new Error("Unknown charset format " + o);
                                        while (c.length <= r) {
                                            h = i.parseSID(), a = i.parseCard16();
                                            for (var p = 0; p <= a; p += 1) c.push(Re(n, h)), h += 1
                                        }
                                    }
                                return c
                            }(e, t + l.charset, r.nGlyphs, c.objects);
                            if (0 === l.encoding ? r.cffEncoding = new xe(pe, k) : 1 === l.encoding ? r.cffEncoding = new xe(de, k) : r.cffEncoding = function(e, t, r) {
                                    var n, h = {},
                                        a = new ce.Parser(e, t),
                                        i = a.parseCard8();
                                    if (0 === i)
                                        for (var c = a.parseCard8(), o = 0; o < c; o += 1) n = a.parseCard8(), h[n] = o;
                                    else {
                                        if (1 !== i) throw new Error("Unknown encoding format " + i);
                                        var s = a.parseCard8();
                                        n = 1;
                                        for (var l = 0; l < s; l += 1)
                                            for (var p = a.parseCard8(), d = a.parseCard8(), b = p; b <= p + d; b += 1) h[b] = n, n += 1
                                    }
                                    return new xe(h, r)
                                }(e, t + l.encoding, k), r.encoding = r.encoding || r.cffEncoding, r.glyphs = new ue.GlyphSet(r), n.lowMemory) r._push = function(n) {
                                var h = function(e, t, r, n, h) {
                                    var a = ce.getCard16(r, n),
                                        i = 0;
                                    if (0 !== a) {
                                        var c = ce.getByte(r, n + 2);
                                        i = n + (a + 1) * c + 2
                                    }
                                    var o = ce.getBytes(r, i + t[e], i + t[e + 1]);
                                    return h && (o = h(o)), o
                                }(n, j.offsets, e, t + l.charStrings);
                                r.glyphs.push(n, ue.cffGlyphLoader(r, n, De, h))
                            };
                            else
                                for (var m = 0; m < r.nGlyphs; m += 1) {
                                    var P = j.objects[m];
                                    r.glyphs.push(m, ue.cffGlyphLoader(r, m, De, P))
                                }
                        },
                        make: function(e, t) {
                            for (var r, n = new $.Table("CFF ", [{
                                    name: "header",
                                    type: "RECORD"
                                }, {
                                    name: "nameIndex",
                                    type: "RECORD"
                                }, {
                                    name: "topDictIndex",
                                    type: "RECORD"
                                }, {
                                    name: "stringIndex",
                                    type: "RECORD"
                                }, {
                                    name: "globalSubrIndex",
                                    type: "RECORD"
                                }, {
                                    name: "charsets",
                                    type: "RECORD"
                                }, {
                                    name: "charStringsIndex",
                                    type: "RECORD"
                                }, {
                                    name: "privateDict",
                                    type: "RECORD"
                                }]), h = 1 / t.unitsPerEm, a = {
                                    version: t.version,
                                    fullName: t.fullName,
                                    familyName: t.familyName,
                                    weight: t.weightName,
                                    fontBBox: t.fontBBox || [0, 0, 0, 0],
                                    fontMatrix: [h, 0, 0, h, 0, 0],
                                    charset: 999,
                                    encoding: 0,
                                    charStrings: 999,
                                    private: [0, 999]
                                }, i = [], c = 1; c < e.length; c += 1) r = e.get(c), i.push(r.name);
                            var o = [];
                            n.header = function() {
                                return new $.Record("Header", [{
                                    name: "major",
                                    type: "Card8",
                                    value: 1
                                }, {
                                    name: "minor",
                                    type: "Card8",
                                    value: 0
                                }, {
                                    name: "hdrSize",
                                    type: "Card8",
                                    value: 4
                                }, {
                                    name: "major",
                                    type: "Card8",
                                    value: 1
                                }])
                            }(), n.nameIndex = function(e) {
                                var t = new $.Record("Name INDEX", [{
                                    name: "names",
                                    type: "INDEX",
                                    value: []
                                }]);
                                t.names = [];
                                for (var r = 0; r < e.length; r += 1) t.names.push({
                                    name: "name_" + r,
                                    type: "NAME",
                                    value: e[r]
                                });
                                return t
                            }([t.postScriptName]);
                            var s = Be(a, o);
                            n.topDictIndex = Te(s), n.globalSubrIndex = function() {
                                return new $.Record("Global Subr INDEX", [{
                                    name: "subrs",
                                    type: "INDEX",
                                    value: []
                                }])
                            }(), n.charsets = function(e, t) {
                                for (var r = new $.Record("Charsets", [{
                                        name: "format",
                                        type: "Card8",
                                        value: 0
                                    }]), n = 0; n < e.length; n += 1) {
                                    var h = e[n],
                                        a = Se(h, t);
                                    r.fields.push({
                                        name: "glyph_" + n,
                                        type: "SID",
                                        value: a
                                    })
                                }
                                return r
                            }(i, o), n.charStringsIndex = function(e) {
                                for (var t = new $.Record("CharStrings INDEX", [{
                                        name: "charStrings",
                                        type: "INDEX",
                                        value: []
                                    }]), r = 0; r < e.length; r += 1) {
                                    var n = e.get(r),
                                        h = Le(n);
                                    t.charStrings.push({
                                        name: n.name,
                                        type: "CHARSTRING",
                                        value: h
                                    })
                                }
                                return t
                            }(e), n.privateDict = function(e, t) {
                                var r = new $.Record("Private DICT", [{
                                    name: "dict",
                                    type: "DICT",
                                    value: {}
                                }]);
                                return r.dict = Ye(we, e, t), r
                            }({}, o), n.stringIndex = function(e) {
                                var t = new $.Record("String INDEX", [{
                                    name: "strings",
                                    type: "INDEX",
                                    value: []
                                }]);
                                t.strings = [];
                                for (var r = 0; r < e.length; r += 1) t.strings.push({
                                    name: "string_" + r,
                                    type: "STRING",
                                    value: e[r]
                                });
                                return t
                            }(o);
                            var l = n.header.sizeOf() + n.nameIndex.sizeOf() + n.topDictIndex.sizeOf() + n.stringIndex.sizeOf() + n.globalSubrIndex.sizeOf();
                            return a.charset = l, a.encoding = 0, a.charStrings = a.charset + n.charsets.sizeOf(), a.private[1] = a.charStrings + n.charStringsIndex.sizeOf(), s = Be(a, o), n.topDictIndex = Te(s), n
                        }
                    };
                    var qe = {
                        parse: function(e, t) {
                            var r = {},
                                n = new ce.Parser(e, t);
                            return r.version = n.parseVersion(), r.fontRevision = Math.round(1e3 * n.parseFixed()) / 1e3, r.checkSumAdjustment = n.parseULong(), r.magicNumber = n.parseULong(), w.argument(1594834165 === r.magicNumber, "Font header has wrong magic number."), r.flags = n.parseUShort(), r.unitsPerEm = n.parseUShort(), r.created = n.parseLongDateTime(), r.modified = n.parseLongDateTime(), r.xMin = n.parseShort(), r.yMin = n.parseShort(), r.xMax = n.parseShort(), r.yMax = n.parseShort(), r.macStyle = n.parseUShort(), r.lowestRecPPEM = n.parseUShort(), r.fontDirectionHint = n.parseShort(), r.indexToLocFormat = n.parseShort(), r.glyphDataFormat = n.parseShort(), r
                        },
                        make: function(e) {
                            var t = Math.round((new Date).getTime() / 1e3) + 2082844800,
                                r = t;
                            return e.createdTimestamp && (r = e.createdTimestamp + 2082844800), new $.Table("head", [{
                                name: "version",
                                type: "FIXED",
                                value: 65536
                            }, {
                                name: "fontRevision",
                                type: "FIXED",
                                value: 65536
                            }, {
                                name: "checkSumAdjustment",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "magicNumber",
                                type: "ULONG",
                                value: 1594834165
                            }, {
                                name: "flags",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "unitsPerEm",
                                type: "USHORT",
                                value: 1e3
                            }, {
                                name: "created",
                                type: "LONGDATETIME",
                                value: r
                            }, {
                                name: "modified",
                                type: "LONGDATETIME",
                                value: t
                            }, {
                                name: "xMin",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "yMin",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "xMax",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "yMax",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "macStyle",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "lowestRecPPEM",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "fontDirectionHint",
                                type: "SHORT",
                                value: 2
                            }, {
                                name: "indexToLocFormat",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "glyphDataFormat",
                                type: "SHORT",
                                value: 0
                            }], e)
                        }
                    };
                    var Ge = {
                        parse: function(e, t) {
                            var r = {},
                                n = new ce.Parser(e, t);
                            return r.version = n.parseVersion(), r.ascender = n.parseShort(), r.descender = n.parseShort(), r.lineGap = n.parseShort(), r.advanceWidthMax = n.parseUShort(), r.minLeftSideBearing = n.parseShort(), r.minRightSideBearing = n.parseShort(), r.xMaxExtent = n.parseShort(), r.caretSlopeRise = n.parseShort(), r.caretSlopeRun = n.parseShort(), r.caretOffset = n.parseShort(), n.relativeOffset += 8, r.metricDataFormat = n.parseShort(), r.numberOfHMetrics = n.parseUShort(), r
                        },
                        make: function(e) {
                            return new $.Table("hhea", [{
                                name: "version",
                                type: "FIXED",
                                value: 65536
                            }, {
                                name: "ascender",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "descender",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "lineGap",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "advanceWidthMax",
                                type: "UFWORD",
                                value: 0
                            }, {
                                name: "minLeftSideBearing",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "minRightSideBearing",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "xMaxExtent",
                                type: "FWORD",
                                value: 0
                            }, {
                                name: "caretSlopeRise",
                                type: "SHORT",
                                value: 1
                            }, {
                                name: "caretSlopeRun",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "caretOffset",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "reserved1",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "reserved2",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "reserved3",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "reserved4",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "metricDataFormat",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "numberOfHMetrics",
                                type: "USHORT",
                                value: 0
                            }], e)
                        }
                    };
                    var Ee = {
                        parse: function(e, t, r, n, h, a, i) {
                            i.lowMemory ? function(e, t, r, n, h) {
                                var a, i;
                                e._hmtxTableData = {};
                                for (var c = new ce.Parser(t, r), o = 0; o < h; o += 1) o < n && (a = c.parseUShort(), i = c.parseShort()), e._hmtxTableData[o] = {
                                    advanceWidth: a,
                                    leftSideBearing: i
                                }
                            }(e, t, r, n, h) : function(e, t, r, n, h) {
                                for (var a, i, c = new ce.Parser(e, t), o = 0; o < n; o += 1) {
                                    o < r && (a = c.parseUShort(), i = c.parseShort());
                                    var s = h.get(o);
                                    s.advanceWidth = a, s.leftSideBearing = i
                                }
                            }(t, r, n, h, a)
                        },
                        make: function(e) {
                            for (var t = new $.Table("hmtx", []), r = 0; r < e.length; r += 1) {
                                var n = e.get(r),
                                    h = n.advanceWidth || 0,
                                    a = n.leftSideBearing || 0;
                                t.fields.push({
                                    name: "advanceWidth_" + r,
                                    type: "USHORT",
                                    value: h
                                }), t.fields.push({
                                    name: "leftSideBearing_" + r,
                                    type: "SHORT",
                                    value: a
                                })
                            }
                            return t
                        }
                    };
                    var We = {
                        make: function(e) {
                            for (var t = new $.Table("ltag", [{
                                    name: "version",
                                    type: "ULONG",
                                    value: 1
                                }, {
                                    name: "flags",
                                    type: "ULONG",
                                    value: 0
                                }, {
                                    name: "numTags",
                                    type: "ULONG",
                                    value: e.length
                                }]), r = "", n = 12 + 4 * e.length, h = 0; h < e.length; ++h) {
                                var a = r.indexOf(e[h]);
                                a < 0 && (a = r.length, r += e[h]), t.fields.push({
                                    name: "offset " + h,
                                    type: "USHORT",
                                    value: n + a
                                }), t.fields.push({
                                    name: "length " + h,
                                    type: "USHORT",
                                    value: e[h].length
                                })
                            }
                            return t.fields.push({
                                name: "stringPool",
                                type: "CHARARRAY",
                                value: r
                            }), t
                        },
                        parse: function(e, t) {
                            var r = new ce.Parser(e, t),
                                n = r.parseULong();
                            w.argument(1 === n, "Unsupported ltag table version."), r.skip("uLong", 1);
                            for (var h = r.parseULong(), a = [], i = 0; i < h; i++) {
                                for (var c = "", o = t + r.parseUShort(), s = r.parseUShort(), l = o; l < o + s; ++l) c += String.fromCharCode(e.getInt8(l));
                                a.push(c)
                            }
                            return a
                        }
                    };
                    var _e = {
                            parse: function(e, t) {
                                var r = {},
                                    n = new ce.Parser(e, t);
                                return r.version = n.parseVersion(), r.numGlyphs = n.parseUShort(), 1 === r.version && (r.maxPoints = n.parseUShort(), r.maxContours = n.parseUShort(), r.maxCompositePoints = n.parseUShort(), r.maxCompositeContours = n.parseUShort(), r.maxZones = n.parseUShort(), r.maxTwilightPoints = n.parseUShort(), r.maxStorage = n.parseUShort(), r.maxFunctionDefs = n.parseUShort(), r.maxInstructionDefs = n.parseUShort(), r.maxStackElements = n.parseUShort(), r.maxSizeOfInstructions = n.parseUShort(), r.maxComponentElements = n.parseUShort(), r.maxComponentDepth = n.parseUShort()), r
                            },
                            make: function(e) {
                                return new $.Table("maxp", [{
                                    name: "version",
                                    type: "FIXED",
                                    value: 20480
                                }, {
                                    name: "numGlyphs",
                                    type: "USHORT",
                                    value: e
                                }])
                            }
                        },
                        Je = ["copyright", "fontFamily", "fontSubfamily", "uniqueID", "fullName", "version", "postScriptName", "trademark", "manufacturer", "designer", "description", "manufacturerURL", "designerURL", "license", "licenseURL", "reserved", "preferredFamily", "preferredSubfamily", "compatibleFullName", "sampleText", "postScriptFindFontName", "wwsFamily", "wwsSubfamily"],
                        Ue = {
                            0: "en",
                            1: "fr",
                            2: "de",
                            3: "it",
                            4: "nl",
                            5: "sv",
                            6: "es",
                            7: "da",
                            8: "pt",
                            9: "no",
                            10: "he",
                            11: "ja",
                            12: "ar",
                            13: "fi",
                            14: "el",
                            15: "is",
                            16: "mt",
                            17: "tr",
                            18: "hr",
                            19: "zh-Hant",
                            20: "ur",
                            21: "hi",
                            22: "th",
                            23: "ko",
                            24: "lt",
                            25: "pl",
                            26: "hu",
                            27: "es",
                            28: "lv",
                            29: "se",
                            30: "fo",
                            31: "fa",
                            32: "ru",
                            33: "zh",
                            34: "nl-BE",
                            35: "ga",
                            36: "sq",
                            37: "ro",
                            38: "cz",
                            39: "sk",
                            40: "si",
                            41: "yi",
                            42: "sr",
                            43: "mk",
                            44: "bg",
                            45: "uk",
                            46: "be",
                            47: "uz",
                            48: "kk",
                            49: "az-Cyrl",
                            50: "az-Arab",
                            51: "hy",
                            52: "ka",
                            53: "mo",
                            54: "ky",
                            55: "tg",
                            56: "tk",
                            57: "mn-CN",
                            58: "mn",
                            59: "ps",
                            60: "ks",
                            61: "ku",
                            62: "sd",
                            63: "bo",
                            64: "ne",
                            65: "sa",
                            66: "mr",
                            67: "bn",
                            68: "as",
                            69: "gu",
                            70: "pa",
                            71: "or",
                            72: "ml",
                            73: "kn",
                            74: "ta",
                            75: "te",
                            76: "si",
                            77: "my",
                            78: "km",
                            79: "lo",
                            80: "vi",
                            81: "id",
                            82: "tl",
                            83: "ms",
                            84: "ms-Arab",
                            85: "am",
                            86: "ti",
                            87: "om",
                            88: "so",
                            89: "sw",
                            90: "rw",
                            91: "rn",
                            92: "ny",
                            93: "mg",
                            94: "eo",
                            128: "cy",
                            129: "eu",
                            130: "ca",
                            131: "la",
                            132: "qu",
                            133: "gn",
                            134: "ay",
                            135: "tt",
                            136: "ug",
                            137: "dz",
                            138: "jv",
                            139: "su",
                            140: "gl",
                            141: "af",
                            142: "br",
                            143: "iu",
                            144: "gd",
                            145: "gv",
                            146: "ga",
                            147: "to",
                            148: "el-polyton",
                            149: "kl",
                            150: "az",
                            151: "nn"
                        },
                        Oe = {
                            0: 0,
                            1: 0,
                            2: 0,
                            3: 0,
                            4: 0,
                            5: 0,
                            6: 0,
                            7: 0,
                            8: 0,
                            9: 0,
                            10: 5,
                            11: 1,
                            12: 4,
                            13: 0,
                            14: 6,
                            15: 0,
                            16: 0,
                            17: 0,
                            18: 0,
                            19: 2,
                            20: 4,
                            21: 9,
                            22: 21,
                            23: 3,
                            24: 29,
                            25: 29,
                            26: 29,
                            27: 29,
                            28: 29,
                            29: 0,
                            30: 0,
                            31: 4,
                            32: 7,
                            33: 25,
                            34: 0,
                            35: 0,
                            36: 0,
                            37: 0,
                            38: 29,
                            39: 29,
                            40: 0,
                            41: 5,
                            42: 7,
                            43: 7,
                            44: 7,
                            45: 7,
                            46: 7,
                            47: 7,
                            48: 7,
                            49: 7,
                            50: 4,
                            51: 24,
                            52: 23,
                            53: 7,
                            54: 7,
                            55: 7,
                            56: 7,
                            57: 27,
                            58: 7,
                            59: 4,
                            60: 4,
                            61: 4,
                            62: 4,
                            63: 26,
                            64: 9,
                            65: 9,
                            66: 9,
                            67: 13,
                            68: 13,
                            69: 11,
                            70: 10,
                            71: 12,
                            72: 17,
                            73: 16,
                            74: 14,
                            75: 15,
                            76: 18,
                            77: 19,
                            78: 20,
                            79: 22,
                            80: 30,
                            81: 0,
                            82: 0,
                            83: 0,
                            84: 4,
                            85: 28,
                            86: 28,
                            87: 28,
                            88: 0,
                            89: 0,
                            90: 0,
                            91: 0,
                            92: 0,
                            93: 0,
                            94: 0,
                            128: 0,
                            129: 0,
                            130: 0,
                            131: 0,
                            132: 0,
                            133: 0,
                            134: 0,
                            135: 7,
                            136: 4,
                            137: 26,
                            138: 0,
                            139: 0,
                            140: 0,
                            141: 0,
                            142: 0,
                            143: 28,
                            144: 0,
                            145: 0,
                            146: 0,
                            147: 0,
                            148: 6,
                            149: 0,
                            150: 0,
                            151: 0
                        },
                        Ze = {
                            1078: "af",
                            1052: "sq",
                            1156: "gsw",
                            1118: "am",
                            5121: "ar-DZ",
                            15361: "ar-BH",
                            3073: "ar",
                            2049: "ar-IQ",
                            11265: "ar-JO",
                            13313: "ar-KW",
                            12289: "ar-LB",
                            4097: "ar-LY",
                            6145: "ary",
                            8193: "ar-OM",
                            16385: "ar-QA",
                            1025: "ar-SA",
                            10241: "ar-SY",
                            7169: "aeb",
                            14337: "ar-AE",
                            9217: "ar-YE",
                            1067: "hy",
                            1101: "as",
                            2092: "az-Cyrl",
                            1068: "az",
                            1133: "ba",
                            1069: "eu",
                            1059: "be",
                            2117: "bn",
                            1093: "bn-IN",
                            8218: "bs-Cyrl",
                            5146: "bs",
                            1150: "br",
                            1026: "bg",
                            1027: "ca",
                            3076: "zh-HK",
                            5124: "zh-MO",
                            2052: "zh",
                            4100: "zh-SG",
                            1028: "zh-TW",
                            1155: "co",
                            1050: "hr",
                            4122: "hr-BA",
                            1029: "cs",
                            1030: "da",
                            1164: "prs",
                            1125: "dv",
                            2067: "nl-BE",
                            1043: "nl",
                            3081: "en-AU",
                            10249: "en-BZ",
                            4105: "en-CA",
                            9225: "en-029",
                            16393: "en-IN",
                            6153: "en-IE",
                            8201: "en-JM",
                            17417: "en-MY",
                            5129: "en-NZ",
                            13321: "en-PH",
                            18441: "en-SG",
                            7177: "en-ZA",
                            11273: "en-TT",
                            2057: "en-GB",
                            1033: "en",
                            12297: "en-ZW",
                            1061: "et",
                            1080: "fo",
                            1124: "fil",
                            1035: "fi",
                            2060: "fr-BE",
                            3084: "fr-CA",
                            1036: "fr",
                            5132: "fr-LU",
                            6156: "fr-MC",
                            4108: "fr-CH",
                            1122: "fy",
                            1110: "gl",
                            1079: "ka",
                            3079: "de-AT",
                            1031: "de",
                            5127: "de-LI",
                            4103: "de-LU",
                            2055: "de-CH",
                            1032: "el",
                            1135: "kl",
                            1095: "gu",
                            1128: "ha",
                            1037: "he",
                            1081: "hi",
                            1038: "hu",
                            1039: "is",
                            1136: "ig",
                            1057: "id",
                            1117: "iu",
                            2141: "iu-Latn",
                            2108: "ga",
                            1076: "xh",
                            1077: "zu",
                            1040: "it",
                            2064: "it-CH",
                            1041: "ja",
                            1099: "kn",
                            1087: "kk",
                            1107: "km",
                            1158: "quc",
                            1159: "rw",
                            1089: "sw",
                            1111: "kok",
                            1042: "ko",
                            1088: "ky",
                            1108: "lo",
                            1062: "lv",
                            1063: "lt",
                            2094: "dsb",
                            1134: "lb",
                            1071: "mk",
                            2110: "ms-BN",
                            1086: "ms",
                            1100: "ml",
                            1082: "mt",
                            1153: "mi",
                            1146: "arn",
                            1102: "mr",
                            1148: "moh",
                            1104: "mn",
                            2128: "mn-CN",
                            1121: "ne",
                            1044: "nb",
                            2068: "nn",
                            1154: "oc",
                            1096: "or",
                            1123: "ps",
                            1045: "pl",
                            1046: "pt",
                            2070: "pt-PT",
                            1094: "pa",
                            1131: "qu-BO",
                            2155: "qu-EC",
                            3179: "qu",
                            1048: "ro",
                            1047: "rm",
                            1049: "ru",
                            9275: "smn",
                            4155: "smj-NO",
                            5179: "smj",
                            3131: "se-FI",
                            1083: "se",
                            2107: "se-SE",
                            8251: "sms",
                            6203: "sma-NO",
                            7227: "sms",
                            1103: "sa",
                            7194: "sr-Cyrl-BA",
                            3098: "sr",
                            6170: "sr-Latn-BA",
                            2074: "sr-Latn",
                            1132: "nso",
                            1074: "tn",
                            1115: "si",
                            1051: "sk",
                            1060: "sl",
                            11274: "es-AR",
                            16394: "es-BO",
                            13322: "es-CL",
                            9226: "es-CO",
                            5130: "es-CR",
                            7178: "es-DO",
                            12298: "es-EC",
                            17418: "es-SV",
                            4106: "es-GT",
                            18442: "es-HN",
                            2058: "es-MX",
                            19466: "es-NI",
                            6154: "es-PA",
                            15370: "es-PY",
                            10250: "es-PE",
                            20490: "es-PR",
                            3082: "es",
                            1034: "es",
                            21514: "es-US",
                            14346: "es-UY",
                            8202: "es-VE",
                            2077: "sv-FI",
                            1053: "sv",
                            1114: "syr",
                            1064: "tg",
                            2143: "tzm",
                            1097: "ta",
                            1092: "tt",
                            1098: "te",
                            1054: "th",
                            1105: "bo",
                            1055: "tr",
                            1090: "tk",
                            1152: "ug",
                            1058: "uk",
                            1070: "hsb",
                            1056: "ur",
                            2115: "uz-Cyrl",
                            1091: "uz",
                            1066: "vi",
                            1106: "cy",
                            1160: "wo",
                            1157: "sah",
                            1144: "ii",
                            1130: "yo"
                        };

                    function Ke(e, t, r) {
                        switch (e) {
                            case 0:
                                if (65535 === t) return "und";
                                if (r) return r[t];
                                break;
                            case 1:
                                return Ue[t];
                            case 3:
                                return Ze[t]
                        }
                    }
                    var $e = {
                            0: "macintosh",
                            1: "x-mac-japanese",
                            2: "x-mac-chinesetrad",
                            3: "x-mac-korean",
                            6: "x-mac-greek",
                            7: "x-mac-cyrillic",
                            9: "x-mac-devanagai",
                            10: "x-mac-gurmukhi",
                            11: "x-mac-gujarati",
                            12: "x-mac-oriya",
                            13: "x-mac-bengali",
                            14: "x-mac-tamil",
                            15: "x-mac-telugu",
                            16: "x-mac-kannada",
                            17: "x-mac-malayalam",
                            18: "x-mac-sinhalese",
                            19: "x-mac-burmese",
                            20: "x-mac-khmer",
                            21: "x-mac-thai",
                            22: "x-mac-lao",
                            23: "x-mac-georgian",
                            24: "x-mac-armenian",
                            25: "x-mac-chinesesimp",
                            26: "x-mac-tibetan",
                            27: "x-mac-mongolian",
                            28: "x-mac-ethiopic",
                            29: "x-mac-ce",
                            30: "x-mac-vietnamese",
                            31: "x-mac-extarabic"
                        },
                        et = {
                            15: "x-mac-icelandic",
                            17: "x-mac-turkish",
                            18: "x-mac-croatian",
                            24: "x-mac-ce",
                            25: "x-mac-ce",
                            26: "x-mac-ce",
                            27: "x-mac-ce",
                            28: "x-mac-ce",
                            30: "x-mac-icelandic",
                            37: "x-mac-romanian",
                            38: "x-mac-ce",
                            39: "x-mac-ce",
                            40: "x-mac-ce",
                            143: "x-mac-inuit",
                            146: "x-mac-gaelic"
                        };

                    function tt(e, t, r) {
                        switch (e) {
                            case 0:
                                return "utf-16";
                            case 1:
                                return et[r] || $e[t];
                            case 3:
                                if (1 === t || 10 === t) return "utf-16";
                                break
                        }
                    }

                    function rt(e) {
                        var t = {};
                        for (var r in e) t[e[r]] = parseInt(r);
                        return t
                    }

                    function nt(e, t, r, n, h, a) {
                        return new $.Record("NameRecord", [{
                            name: "platformID",
                            type: "USHORT",
                            value: e
                        }, {
                            name: "encodingID",
                            type: "USHORT",
                            value: t
                        }, {
                            name: "languageID",
                            type: "USHORT",
                            value: r
                        }, {
                            name: "nameID",
                            type: "USHORT",
                            value: n
                        }, {
                            name: "length",
                            type: "USHORT",
                            value: h
                        }, {
                            name: "offset",
                            type: "USHORT",
                            value: a
                        }])
                    }

                    function ht(e, t) {
                        var r = function(e, t) {
                            var r = e.length,
                                n = t.length - r + 1;
                            e: for (var h = 0; h < n; h++)
                                for (; h < n; h++) {
                                    for (var a = 0; a < r; a++)
                                        if (t[h + a] !== e[a]) continue e;
                                    return h
                                }
                            return -1
                        }(e, t);
                        if (r < 0) {
                            r = t.length;
                            for (var n = 0, h = e.length; n < h; ++n) t.push(e[n])
                        }
                        return r
                    }
                    var at = {
                            parse: function(e, t, r) {
                                for (var n = {}, h = new ce.Parser(e, t), a = h.parseUShort(), i = h.parseUShort(), c = h.offset + h.parseUShort(), o = 0; o < i; o++) {
                                    var s = h.parseUShort(),
                                        l = h.parseUShort(),
                                        p = h.parseUShort(),
                                        d = h.parseUShort(),
                                        b = Je[d] || d,
                                        g = h.parseUShort(),
                                        j = h.parseUShort(),
                                        x = Ke(s, p, r),
                                        V = tt(s, l, p);
                                    if (void 0 !== V && void 0 !== x) {
                                        var f = void 0;
                                        if (f = "utf-16" === V ? y.UTF16(e, c + j, g) : y.MACSTRING(e, c + j, g, V), f) {
                                            var F = n[b];
                                            void 0 === F && (F = n[b] = {}), F[x] = f
                                        }
                                    }
                                }
                                return 1 === a && h.parseUShort(), n
                            },
                            make: function(e, t) {
                                var r, n = [],
                                    h = {},
                                    a = rt(Je);
                                for (var i in e) {
                                    var c = a[i];
                                    if (void 0 === c && (c = i), r = parseInt(c), isNaN(r)) throw new Error('Name table entry "' + i + '" does not exist, see nameTableNames for complete list.');
                                    h[r] = e[i], n.push(r)
                                }
                                for (var o = rt(Ue), s = rt(Ze), l = [], p = [], d = 0; d < n.length; d++) {
                                    r = n[d];
                                    var b = h[r];
                                    for (var g in b) {
                                        var j = b[g],
                                            x = 1,
                                            V = o[g],
                                            f = Oe[V],
                                            F = tt(x, f, V),
                                            k = C.MACSTRING(j, F);
                                        void 0 === k && (x = 0, V = t.indexOf(g), V < 0 && (V = t.length, t.push(g)), f = 4, k = C.UTF16(j));
                                        var m = ht(k, p);
                                        l.push(nt(x, f, V, r, k.length, m));
                                        var P = s[g];
                                        if (void 0 !== P) {
                                            var u = C.UTF16(j),
                                                X = ht(u, p);
                                            l.push(nt(3, 1, P, r, u.length, X))
                                        }
                                    }
                                }
                                l.sort((function(e, t) {
                                    return e.platformID - t.platformID || e.encodingID - t.encodingID || e.languageID - t.languageID || e.nameID - t.nameID
                                }));
                                for (var N = new $.Table("name", [{
                                        name: "format",
                                        type: "USHORT",
                                        value: 0
                                    }, {
                                        name: "count",
                                        type: "USHORT",
                                        value: l.length
                                    }, {
                                        name: "stringOffset",
                                        type: "USHORT",
                                        value: 6 + 12 * l.length
                                    }]), H = 0; H < l.length; H++) N.fields.push({
                                    name: "record_" + H,
                                    type: "RECORD",
                                    value: l[H]
                                });
                                return N.fields.push({
                                    name: "strings",
                                    type: "LITERAL",
                                    value: p
                                }), N
                            }
                        },
                        it = [{
                            begin: 0,
                            end: 127
                        }, {
                            begin: 128,
                            end: 255
                        }, {
                            begin: 256,
                            end: 383
                        }, {
                            begin: 384,
                            end: 591
                        }, {
                            begin: 592,
                            end: 687
                        }, {
                            begin: 688,
                            end: 767
                        }, {
                            begin: 768,
                            end: 879
                        }, {
                            begin: 880,
                            end: 1023
                        }, {
                            begin: 11392,
                            end: 11519
                        }, {
                            begin: 1024,
                            end: 1279
                        }, {
                            begin: 1328,
                            end: 1423
                        }, {
                            begin: 1424,
                            end: 1535
                        }, {
                            begin: 42240,
                            end: 42559
                        }, {
                            begin: 1536,
                            end: 1791
                        }, {
                            begin: 1984,
                            end: 2047
                        }, {
                            begin: 2304,
                            end: 2431
                        }, {
                            begin: 2432,
                            end: 2559
                        }, {
                            begin: 2560,
                            end: 2687
                        }, {
                            begin: 2688,
                            end: 2815
                        }, {
                            begin: 2816,
                            end: 2943
                        }, {
                            begin: 2944,
                            end: 3071
                        }, {
                            begin: 3072,
                            end: 3199
                        }, {
                            begin: 3200,
                            end: 3327
                        }, {
                            begin: 3328,
                            end: 3455
                        }, {
                            begin: 3584,
                            end: 3711
                        }, {
                            begin: 3712,
                            end: 3839
                        }, {
                            begin: 4256,
                            end: 4351
                        }, {
                            begin: 6912,
                            end: 7039
                        }, {
                            begin: 4352,
                            end: 4607
                        }, {
                            begin: 7680,
                            end: 7935
                        }, {
                            begin: 7936,
                            end: 8191
                        }, {
                            begin: 8192,
                            end: 8303
                        }, {
                            begin: 8304,
                            end: 8351
                        }, {
                            begin: 8352,
                            end: 8399
                        }, {
                            begin: 8400,
                            end: 8447
                        }, {
                            begin: 8448,
                            end: 8527
                        }, {
                            begin: 8528,
                            end: 8591
                        }, {
                            begin: 8592,
                            end: 8703
                        }, {
                            begin: 8704,
                            end: 8959
                        }, {
                            begin: 8960,
                            end: 9215
                        }, {
                            begin: 9216,
                            end: 9279
                        }, {
                            begin: 9280,
                            end: 9311
                        }, {
                            begin: 9312,
                            end: 9471
                        }, {
                            begin: 9472,
                            end: 9599
                        }, {
                            begin: 9600,
                            end: 9631
                        }, {
                            begin: 9632,
                            end: 9727
                        }, {
                            begin: 9728,
                            end: 9983
                        }, {
                            begin: 9984,
                            end: 10175
                        }, {
                            begin: 12288,
                            end: 12351
                        }, {
                            begin: 12352,
                            end: 12447
                        }, {
                            begin: 12448,
                            end: 12543
                        }, {
                            begin: 12544,
                            end: 12591
                        }, {
                            begin: 12592,
                            end: 12687
                        }, {
                            begin: 43072,
                            end: 43135
                        }, {
                            begin: 12800,
                            end: 13055
                        }, {
                            begin: 13056,
                            end: 13311
                        }, {
                            begin: 44032,
                            end: 55215
                        }, {
                            begin: 55296,
                            end: 57343
                        }, {
                            begin: 67840,
                            end: 67871
                        }, {
                            begin: 19968,
                            end: 40959
                        }, {
                            begin: 57344,
                            end: 63743
                        }, {
                            begin: 12736,
                            end: 12783
                        }, {
                            begin: 64256,
                            end: 64335
                        }, {
                            begin: 64336,
                            end: 65023
                        }, {
                            begin: 65056,
                            end: 65071
                        }, {
                            begin: 65040,
                            end: 65055
                        }, {
                            begin: 65104,
                            end: 65135
                        }, {
                            begin: 65136,
                            end: 65279
                        }, {
                            begin: 65280,
                            end: 65519
                        }, {
                            begin: 65520,
                            end: 65535
                        }, {
                            begin: 3840,
                            end: 4095
                        }, {
                            begin: 1792,
                            end: 1871
                        }, {
                            begin: 1920,
                            end: 1983
                        }, {
                            begin: 3456,
                            end: 3583
                        }, {
                            begin: 4096,
                            end: 4255
                        }, {
                            begin: 4608,
                            end: 4991
                        }, {
                            begin: 5024,
                            end: 5119
                        }, {
                            begin: 5120,
                            end: 5759
                        }, {
                            begin: 5760,
                            end: 5791
                        }, {
                            begin: 5792,
                            end: 5887
                        }, {
                            begin: 6016,
                            end: 6143
                        }, {
                            begin: 6144,
                            end: 6319
                        }, {
                            begin: 10240,
                            end: 10495
                        }, {
                            begin: 40960,
                            end: 42127
                        }, {
                            begin: 5888,
                            end: 5919
                        }, {
                            begin: 66304,
                            end: 66351
                        }, {
                            begin: 66352,
                            end: 66383
                        }, {
                            begin: 66560,
                            end: 66639
                        }, {
                            begin: 118784,
                            end: 119039
                        }, {
                            begin: 119808,
                            end: 120831
                        }, {
                            begin: 1044480,
                            end: 1048573
                        }, {
                            begin: 65024,
                            end: 65039
                        }, {
                            begin: 917504,
                            end: 917631
                        }, {
                            begin: 6400,
                            end: 6479
                        }, {
                            begin: 6480,
                            end: 6527
                        }, {
                            begin: 6528,
                            end: 6623
                        }, {
                            begin: 6656,
                            end: 6687
                        }, {
                            begin: 11264,
                            end: 11359
                        }, {
                            begin: 11568,
                            end: 11647
                        }, {
                            begin: 19904,
                            end: 19967
                        }, {
                            begin: 43008,
                            end: 43055
                        }, {
                            begin: 65536,
                            end: 65663
                        }, {
                            begin: 65856,
                            end: 65935
                        }, {
                            begin: 66432,
                            end: 66463
                        }, {
                            begin: 66464,
                            end: 66527
                        }, {
                            begin: 66640,
                            end: 66687
                        }, {
                            begin: 66688,
                            end: 66735
                        }, {
                            begin: 67584,
                            end: 67647
                        }, {
                            begin: 68096,
                            end: 68191
                        }, {
                            begin: 119552,
                            end: 119647
                        }, {
                            begin: 73728,
                            end: 74751
                        }, {
                            begin: 119648,
                            end: 119679
                        }, {
                            begin: 7040,
                            end: 7103
                        }, {
                            begin: 7168,
                            end: 7247
                        }, {
                            begin: 7248,
                            end: 7295
                        }, {
                            begin: 43136,
                            end: 43231
                        }, {
                            begin: 43264,
                            end: 43311
                        }, {
                            begin: 43312,
                            end: 43359
                        }, {
                            begin: 43520,
                            end: 43615
                        }, {
                            begin: 65936,
                            end: 65999
                        }, {
                            begin: 66e3,
                            end: 66047
                        }, {
                            begin: 66208,
                            end: 66271
                        }, {
                            begin: 127024,
                            end: 127135
                        }];
                    var ct = {
                        parse: function(e, t) {
                            var r = {},
                                n = new ce.Parser(e, t);
                            r.version = n.parseUShort(), r.xAvgCharWidth = n.parseShort(), r.usWeightClass = n.parseUShort(), r.usWidthClass = n.parseUShort(), r.fsType = n.parseUShort(), r.ySubscriptXSize = n.parseShort(), r.ySubscriptYSize = n.parseShort(), r.ySubscriptXOffset = n.parseShort(), r.ySubscriptYOffset = n.parseShort(), r.ySuperscriptXSize = n.parseShort(), r.ySuperscriptYSize = n.parseShort(), r.ySuperscriptXOffset = n.parseShort(), r.ySuperscriptYOffset = n.parseShort(), r.yStrikeoutSize = n.parseShort(), r.yStrikeoutPosition = n.parseShort(), r.sFamilyClass = n.parseShort(), r.panose = [];
                            for (var h = 0; h < 10; h++) r.panose[h] = n.parseByte();
                            return r.ulUnicodeRange1 = n.parseULong(), r.ulUnicodeRange2 = n.parseULong(), r.ulUnicodeRange3 = n.parseULong(), r.ulUnicodeRange4 = n.parseULong(), r.achVendID = String.fromCharCode(n.parseByte(), n.parseByte(), n.parseByte(), n.parseByte()), r.fsSelection = n.parseUShort(), r.usFirstCharIndex = n.parseUShort(), r.usLastCharIndex = n.parseUShort(), r.sTypoAscender = n.parseShort(), r.sTypoDescender = n.parseShort(), r.sTypoLineGap = n.parseShort(), r.usWinAscent = n.parseUShort(), r.usWinDescent = n.parseUShort(), r.version >= 1 && (r.ulCodePageRange1 = n.parseULong(), r.ulCodePageRange2 = n.parseULong()), r.version >= 2 && (r.sxHeight = n.parseShort(), r.sCapHeight = n.parseShort(), r.usDefaultChar = n.parseUShort(), r.usBreakChar = n.parseUShort(), r.usMaxContent = n.parseUShort()), r
                        },
                        make: function(e) {
                            return new $.Table("OS/2", [{
                                name: "version",
                                type: "USHORT",
                                value: 3
                            }, {
                                name: "xAvgCharWidth",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "usWeightClass",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usWidthClass",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "fsType",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "ySubscriptXSize",
                                type: "SHORT",
                                value: 650
                            }, {
                                name: "ySubscriptYSize",
                                type: "SHORT",
                                value: 699
                            }, {
                                name: "ySubscriptXOffset",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "ySubscriptYOffset",
                                type: "SHORT",
                                value: 140
                            }, {
                                name: "ySuperscriptXSize",
                                type: "SHORT",
                                value: 650
                            }, {
                                name: "ySuperscriptYSize",
                                type: "SHORT",
                                value: 699
                            }, {
                                name: "ySuperscriptXOffset",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "ySuperscriptYOffset",
                                type: "SHORT",
                                value: 479
                            }, {
                                name: "yStrikeoutSize",
                                type: "SHORT",
                                value: 49
                            }, {
                                name: "yStrikeoutPosition",
                                type: "SHORT",
                                value: 258
                            }, {
                                name: "sFamilyClass",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "bFamilyType",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bSerifStyle",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bWeight",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bProportion",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bContrast",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bStrokeVariation",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bArmStyle",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bLetterform",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bMidline",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "bXHeight",
                                type: "BYTE",
                                value: 0
                            }, {
                                name: "ulUnicodeRange1",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "ulUnicodeRange2",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "ulUnicodeRange3",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "ulUnicodeRange4",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "achVendID",
                                type: "CHARARRAY",
                                value: "XXXX"
                            }, {
                                name: "fsSelection",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usFirstCharIndex",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usLastCharIndex",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "sTypoAscender",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "sTypoDescender",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "sTypoLineGap",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "usWinAscent",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usWinDescent",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "ulCodePageRange1",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "ulCodePageRange2",
                                type: "ULONG",
                                value: 0
                            }, {
                                name: "sxHeight",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "sCapHeight",
                                type: "SHORT",
                                value: 0
                            }, {
                                name: "usDefaultChar",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usBreakChar",
                                type: "USHORT",
                                value: 0
                            }, {
                                name: "usMaxContext",
                                type: "USHORT",
                                value: 0
                            }], e)
                        },
                        unicodeRanges: it,
                        getUnicodeRange: function(e) {
                            for (var t = 0; t < it.length; t += 1) {
                                var r = it[t];
                                if (e >= r.begin && e < r.end) return t
                            }
                            return -1
                        }
                    };
                    var ot = {
                            parse: function(e, t) {
                                var r = {},
                                    n = new ce.Parser(e, t);
                                switch (r.version = n.parseVersion(), r.italicAngle = n.parseFixed(), r.underlinePosition = n.parseShort(), r.underlineThickness = n.parseShort(), r.isFixedPitch = n.parseULong(), r.minMemType42 = n.parseULong(), r.maxMemType42 = n.parseULong(), r.minMemType1 = n.parseULong(), r.maxMemType1 = n.parseULong(), r.version) {
                                    case 1:
                                        r.names = be.slice();
                                        break;
                                    case 2:
                                        r.numberOfGlyphs = n.parseUShort(), r.glyphNameIndex = new Array(r.numberOfGlyphs);
                                        for (var h = 0; h < r.numberOfGlyphs; h++) r.glyphNameIndex[h] = n.parseUShort();
                                        r.names = [];
                                        for (var a = 0; a < r.numberOfGlyphs; a++)
                                            if (r.glyphNameIndex[a] >= be.length) {
                                                var i = n.parseChar();
                                                r.names.push(n.parseString(i))
                                            } break;
                                    case 2.5:
                                        r.numberOfGlyphs = n.parseUShort(), r.offset = new Array(r.numberOfGlyphs);
                                        for (var c = 0; c < r.numberOfGlyphs; c++) r.offset[c] = n.parseChar();
                                        break
                                }
                                return r
                            },
                            make: function() {
                                return new $.Table("post", [{
                                    name: "version",
                                    type: "FIXED",
                                    value: 196608
                                }, {
                                    name: "italicAngle",
                                    type: "FIXED",
                                    value: 0
                                }, {
                                    name: "underlinePosition",
                                    type: "FWORD",
                                    value: 0
                                }, {
                                    name: "underlineThickness",
                                    type: "FWORD",
                                    value: 0
                                }, {
                                    name: "isFixedPitch",
                                    type: "ULONG",
                                    value: 0
                                }, {
                                    name: "minMemType42",
                                    type: "ULONG",
                                    value: 0
                                }, {
                                    name: "maxMemType42",
                                    type: "ULONG",
                                    value: 0
                                }, {
                                    name: "minMemType1",
                                    type: "ULONG",
                                    value: 0
                                }, {
                                    name: "maxMemType1",
                                    type: "ULONG",
                                    value: 0
                                }])
                            }
                        },
                        st = new Array(9);
                    st[1] = function() {
                        var e = this.offset + this.relativeOffset,
                            t = this.parseUShort();
                        return 1 === t ? {
                            substFormat: 1,
                            coverage: this.parsePointer(ae.coverage),
                            deltaGlyphId: this.parseUShort()
                        } : 2 === t ? {
                            substFormat: 2,
                            coverage: this.parsePointer(ae.coverage),
                            substitute: this.parseOffset16List()
                        } : void w.assert(!1, "0x" + e.toString(16) + ": lookup type 1 format must be 1 or 2.")
                    }, st[2] = function() {
                        var e = this.parseUShort();
                        return w.argument(1 === e, "GSUB Multiple Substitution Subtable identifier-format must be 1"), {
                            substFormat: e,
                            coverage: this.parsePointer(ae.coverage),
                            sequences: this.parseListOfLists()
                        }
                    }, st[3] = function() {
                        var e = this.parseUShort();
                        return w.argument(1 === e, "GSUB Alternate Substitution Subtable identifier-format must be 1"), {
                            substFormat: e,
                            coverage: this.parsePointer(ae.coverage),
                            alternateSets: this.parseListOfLists()
                        }
                    }, st[4] = function() {
                        var e = this.parseUShort();
                        return w.argument(1 === e, "GSUB ligature table identifier-format must be 1"), {
                            substFormat: e,
                            coverage: this.parsePointer(ae.coverage),
                            ligatureSets: this.parseListOfLists((function() {
                                return {
                                    ligGlyph: this.parseUShort(),
                                    components: this.parseUShortList(this.parseUShort() - 1)
                                }
                            }))
                        }
                    };
                    var lt = {
                        sequenceIndex: ae.uShort,
                        lookupListIndex: ae.uShort
                    };
                    st[5] = function() {
                        var e = this.offset + this.relativeOffset,
                            t = this.parseUShort();
                        if (1 === t) return {
                            substFormat: t,
                            coverage: this.parsePointer(ae.coverage),
                            ruleSets: this.parseListOfLists((function() {
                                var e = this.parseUShort(),
                                    t = this.parseUShort();
                                return {
                                    input: this.parseUShortList(e - 1),
                                    lookupRecords: this.parseRecordList(t, lt)
                                }
                            }))
                        };
                        if (2 === t) return {
                            substFormat: t,
                            coverage: this.parsePointer(ae.coverage),
                            classDef: this.parsePointer(ae.classDef),
                            classSets: this.parseListOfLists((function() {
                                var e = this.parseUShort(),
                                    t = this.parseUShort();
                                return {
                                    classes: this.parseUShortList(e - 1),
                                    lookupRecords: this.parseRecordList(t, lt)
                                }
                            }))
                        };
                        if (3 === t) {
                            var r = this.parseUShort(),
                                n = this.parseUShort();
                            return {
                                substFormat: t,
                                coverages: this.parseList(r, ae.pointer(ae.coverage)),
                                lookupRecords: this.parseRecordList(n, lt)
                            }
                        }
                        w.assert(!1, "0x" + e.toString(16) + ": lookup type 5 format must be 1, 2 or 3.")
                    }, st[6] = function() {
                        var e = this.offset + this.relativeOffset,
                            t = this.parseUShort();
                        return 1 === t ? {
                            substFormat: 1,
                            coverage: this.parsePointer(ae.coverage),
                            chainRuleSets: this.parseListOfLists((function() {
                                return {
                                    backtrack: this.parseUShortList(),
                                    input: this.parseUShortList(this.parseShort() - 1),
                                    lookahead: this.parseUShortList(),
                                    lookupRecords: this.parseRecordList(lt)
                                }
                            }))
                        } : 2 === t ? {
                            substFormat: 2,
                            coverage: this.parsePointer(ae.coverage),
                            backtrackClassDef: this.parsePointer(ae.classDef),
                            inputClassDef: this.parsePointer(ae.classDef),
                            lookaheadClassDef: this.parsePointer(ae.classDef),
                            chainClassSet: this.parseListOfLists((function() {
                                return {
                                    backtrack: this.parseUShortList(),
                                    input: this.parseUShortList(this.parseShort() - 1),
                                    lookahead: this.parseUShortList(),
                                    lookupRecords: this.parseRecordList(lt)
                                }
                            }))
                        } : 3 === t ? {
                            substFormat: 3,
                            backtrackCoverage: this.parseList(ae.pointer(ae.coverage)),
                            inputCoverage: this.parseList(ae.pointer(ae.coverage)),
                            lookaheadCoverage: this.parseList(ae.pointer(ae.coverage)),
                            lookupRecords: this.parseRecordList(lt)
                        } : void w.assert(!1, "0x" + e.toString(16) + ": lookup type 6 format must be 1, 2 or 3.")
                    }, st[7] = function() {
                        var e = this.parseUShort();
                        w.argument(1 === e, "GSUB Extension Substitution subtable identifier-format must be 1");
                        var t = this.parseUShort(),
                            r = new ae(this.data, this.offset + this.parseULong());
                        return {
                            substFormat: 1,
                            lookupType: t,
                            extension: st[t].call(r)
                        }
                    }, st[8] = function() {
                        var e = this.parseUShort();
                        return w.argument(1 === e, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), {
                            substFormat: e,
                            coverage: this.parsePointer(ae.coverage),
                            backtrackCoverage: this.parseList(ae.pointer(ae.coverage)),
                            lookaheadCoverage: this.parseList(ae.pointer(ae.coverage)),
                            substitutes: this.parseUShortList()
                        }
                    };
                    var pt = new Array(9);
                    pt[1] = function(e) {
                        return 1 === e.substFormat ? new $.Table("substitutionTable", [{
                            name: "substFormat",
                            type: "USHORT",
                            value: 1
                        }, {
                            name: "coverage",
                            type: "TABLE",
                            value: new $.Coverage(e.coverage)
                        }, {
                            name: "deltaGlyphID",
                            type: "USHORT",
                            value: e.deltaGlyphId
                        }]) : new $.Table("substitutionTable", [{
                            name: "substFormat",
                            type: "USHORT",
                            value: 2
                        }, {
                            name: "coverage",
                            type: "TABLE",
                            value: new $.Coverage(e.coverage)
                        }].concat($.ushortList("substitute", e.substitute)))
                    }, pt[2] = function(e) {
                        return w.assert(1 === e.substFormat, "Lookup type 2 substFormat must be 1."), new $.Table("substitutionTable", [{
                            name: "substFormat",
                            type: "USHORT",
                            value: 1
                        }, {
                            name: "coverage",
                            type: "TABLE",
                            value: new $.Coverage(e.coverage)
                        }].concat($.tableList("seqSet", e.sequences, (function(e) {
                            return new $.Table("sequenceSetTable", $.ushortList("sequence", e))
                        }))))
                    }, pt[3] = function(e) {
                        return w.assert(1 === e.substFormat, "Lookup type 3 substFormat must be 1."), new $.Table("substitutionTable", [{
                            name: "substFormat",
                            type: "USHORT",
                            value: 1
                        }, {
                            name: "coverage",
                            type: "TABLE",
                            value: new $.Coverage(e.coverage)
                        }].concat($.tableList("altSet", e.alternateSets, (function(e) {
                            return new $.Table("alternateSetTable", $.ushortList("alternate", e))
                        }))))
                    }, pt[4] = function(e) {
                        return w.assert(1 === e.substFormat, "Lookup type 4 substFormat must be 1."), new $.Table("substitutionTable", [{
                            name: "substFormat",
                            type: "USHORT",
                            value: 1
                        }, {
                            name: "coverage",
                            type: "TABLE",
                            value: new $.Coverage(e.coverage)
                        }].concat($.tableList("ligSet", e.ligatureSets, (function(e) {
                            return new $.Table("ligatureSetTable", $.tableList("ligature", e, (function(e) {
                                return new $.Table("ligatureTable", [{
                                    name: "ligGlyph",
                                    type: "USHORT",
                                    value: e.ligGlyph
                                }].concat($.ushortList("component", e.components, e.components.length + 1)))
                            })))
                        }))))
                    }, pt[6] = function(e) {
                        if (1 === e.substFormat) {
                            var t = new $.Table("chainContextTable", [{
                                name: "substFormat",
                                type: "USHORT",
                                value: e.substFormat
                            }, {
                                name: "coverage",
                                type: "TABLE",
                                value: new $.Coverage(e.coverage)
                            }].concat($.tableList("chainRuleSet", e.chainRuleSets, (function(e) {
                                return new $.Table("chainRuleSetTable", $.tableList("chainRule", e, (function(e) {
                                    var t = $.ushortList("backtrackGlyph", e.backtrack, e.backtrack.length).concat($.ushortList("inputGlyph", e.input, e.input.length + 1)).concat($.ushortList("lookaheadGlyph", e.lookahead, e.lookahead.length)).concat($.ushortList("substitution", [], e.lookupRecords.length));
                                    return e.lookupRecords.forEach((function(e, r) {
                                        t = t.concat({
                                            name: "sequenceIndex" + r,
                                            type: "USHORT",
                                            value: e.sequenceIndex
                                        }).concat({
                                            name: "lookupListIndex" + r,
                                            type: "USHORT",
                                            value: e.lookupListIndex
                                        })
                                    })), new $.Table("chainRuleTable", t)
                                })))
                            }))));
                            return t
                        }
                        if (2 === e.substFormat) w.assert(!1, "lookup type 6 format 2 is not yet supported.");
                        else if (3 === e.substFormat) {
                            var r = [{
                                name: "substFormat",
                                type: "USHORT",
                                value: e.substFormat
                            }];
                            r.push({
                                name: "backtrackGlyphCount",
                                type: "USHORT",
                                value: e.backtrackCoverage.length
                            }), e.backtrackCoverage.forEach((function(e, t) {
                                r.push({
                                    name: "backtrackCoverage" + t,
                                    type: "TABLE",
                                    value: new $.Coverage(e)
                                })
                            })), r.push({
                                name: "inputGlyphCount",
                                type: "USHORT",
                                value: e.inputCoverage.length
                            }), e.inputCoverage.forEach((function(e, t) {
                                r.push({
                                    name: "inputCoverage" + t,
                                    type: "TABLE",
                                    value: new $.Coverage(e)
                                })
                            })), r.push({
                                name: "lookaheadGlyphCount",
                                type: "USHORT",
                                value: e.lookaheadCoverage.length
                            }), e.lookaheadCoverage.forEach((function(e, t) {
                                r.push({
                                    name: "lookaheadCoverage" + t,
                                    type: "TABLE",
                                    value: new $.Coverage(e)
                                })
                            })), r.push({
                                name: "substitutionCount",
                                type: "USHORT",
                                value: e.lookupRecords.length
                            }), e.lookupRecords.forEach((function(e, t) {
                                r = r.concat({
                                    name: "sequenceIndex" + t,
                                    type: "USHORT",
                                    value: e.sequenceIndex
                                }).concat({
                                    name: "lookupListIndex" + t,
                                    type: "USHORT",
                                    value: e.lookupListIndex
                                })
                            }));
                            var n = new $.Table("chainContextTable", r);
                            return n
                        }
                        w.assert(!1, "lookup type 6 format must be 1, 2 or 3.")
                    };
                    var dt = {
                        parse: function(e, t) {
                            t = t || 0;
                            var r = new ae(e, t),
                                n = r.parseVersion(1);
                            return w.argument(1 === n || 1.1 === n, "Unsupported GSUB table version."), 1 === n ? {
                                version: n,
                                scripts: r.parseScriptList(),
                                features: r.parseFeatureList(),
                                lookups: r.parseLookupList(st)
                            } : {
                                version: n,
                                scripts: r.parseScriptList(),
                                features: r.parseFeatureList(),
                                lookups: r.parseLookupList(st),
                                variations: r.parseFeatureVariationsList()
                            }
                        },
                        make: function(e) {
                            return new $.Table("GSUB", [{
                                name: "version",
                                type: "ULONG",
                                value: 65536
                            }, {
                                name: "scripts",
                                type: "TABLE",
                                value: new $.ScriptList(e.scripts)
                            }, {
                                name: "features",
                                type: "TABLE",
                                value: new $.FeatureList(e.features)
                            }, {
                                name: "lookups",
                                type: "TABLE",
                                value: new $.LookupList(e.lookups, pt)
                            }])
                        }
                    };
                    var bt = {
                        parse: function(e, t) {
                            var r = new ce.Parser(e, t),
                                n = r.parseULong();
                            w.argument(1 === n, "Unsupported META table version."), r.parseULong(), r.parseULong();
                            for (var h = r.parseULong(), a = {}, i = 0; i < h; i++) {
                                var c = r.parseTag(),
                                    o = r.parseULong(),
                                    s = r.parseULong(),
                                    l = y.UTF8(e, t + o, s);
                                a[c] = l
                            }
                            return a
                        },
                        make: function(e) {
                            var t = Object.keys(e).length,
                                r = "",
                                n = 16 + 12 * t,
                                h = new $.Table("meta", [{
                                    name: "version",
                                    type: "ULONG",
                                    value: 1
                                }, {
                                    name: "flags",
                                    type: "ULONG",
                                    value: 0
                                }, {
                                    name: "offset",
                                    type: "ULONG",
                                    value: n
                                }, {
                                    name: "numTags",
                                    type: "ULONG",
                                    value: t
                                }]);
                            for (var a in e) {
                                var i = r.length;
                                r += e[a], h.fields.push({
                                    name: "tag " + a,
                                    type: "TAG",
                                    value: a
                                }), h.fields.push({
                                    name: "offset " + a,
                                    type: "ULONG",
                                    value: n + i
                                }), h.fields.push({
                                    name: "length " + a,
                                    type: "ULONG",
                                    value: e[a].length
                                })
                            }
                            return h.fields.push({
                                name: "stringPool",
                                type: "CHARARRAY",
                                value: r
                            }), h
                        }
                    };

                    function gt(e) {
                        return Math.log(e) / Math.log(2) | 0
                    }

                    function jt(e) {
                        while (e.length % 4 !== 0) e.push(0);
                        for (var t = 0, r = 0; r < e.length; r += 4) t += (e[r] << 24) + (e[r + 1] << 16) + (e[r + 2] << 8) + e[r + 3];
                        return t %= Math.pow(2, 32), t
                    }

                    function xt(e, t, r, n) {
                        return new $.Record("Table Record", [{
                            name: "tag",
                            type: "TAG",
                            value: void 0 !== e ? e : ""
                        }, {
                            name: "checkSum",
                            type: "ULONG",
                            value: void 0 !== t ? t : 0
                        }, {
                            name: "offset",
                            type: "ULONG",
                            value: void 0 !== r ? r : 0
                        }, {
                            name: "length",
                            type: "ULONG",
                            value: void 0 !== n ? n : 0
                        }])
                    }

                    function Vt(e) {
                        var t = new $.Table("sfnt", [{
                            name: "version",
                            type: "TAG",
                            value: "OTTO"
                        }, {
                            name: "numTables",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "searchRange",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "entrySelector",
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "rangeShift",
                            type: "USHORT",
                            value: 0
                        }]);
                        t.tables = e, t.numTables = e.length;
                        var r = Math.pow(2, gt(t.numTables));
                        t.searchRange = 16 * r, t.entrySelector = gt(r), t.rangeShift = 16 * t.numTables - t.searchRange;
                        var n = [],
                            h = [],
                            a = t.sizeOf() + xt().sizeOf() * t.numTables;
                        while (a % 4 !== 0) a += 1, h.push({
                            name: "padding",
                            type: "BYTE",
                            value: 0
                        });
                        for (var i = 0; i < e.length; i += 1) {
                            var c = e[i];
                            w.argument(4 === c.tableName.length, "Table name" + c.tableName + " is invalid.");
                            var o = c.sizeOf(),
                                s = xt(c.tableName, jt(c.encode()), a, o);
                            n.push({
                                name: s.tag + " Table Record",
                                type: "RECORD",
                                value: s
                            }), h.push({
                                name: c.tableName + " table",
                                type: "RECORD",
                                value: c
                            }), a += o, w.argument(!isNaN(a), "Something went wrong calculating the offset.");
                            while (a % 4 !== 0) a += 1, h.push({
                                name: "padding",
                                type: "BYTE",
                                value: 0
                            })
                        }
                        return n.sort((function(e, t) {
                            return e.value.tag > t.value.tag ? 1 : -1
                        })), t.fields = t.fields.concat(n), t.fields = t.fields.concat(h), t
                    }

                    function ft(e, t, r) {
                        for (var n = 0; n < t.length; n += 1) {
                            var h = e.charToGlyphIndex(t[n]);
                            if (h > 0) {
                                var a = e.glyphs.get(h);
                                return a.getMetrics()
                            }
                        }
                        return r
                    }

                    function Ft(e) {
                        for (var t = 0, r = 0; r < e.length; r += 1) t += e[r];
                        return t / e.length
                    }
                    var kt = {
                        make: Vt,
                        fontToTable: function(e) {
                            for (var t, r = [], n = [], h = [], a = [], i = [], c = [], o = [], s = 0, l = 0, p = 0, d = 0, b = 0, g = 0; g < e.glyphs.length; g += 1) {
                                var j = e.glyphs.get(g),
                                    x = 0 | j.unicode;
                                if (isNaN(j.advanceWidth)) throw new Error("Glyph " + j.name + " (" + g + "): advanceWidth is not a number.");
                                (t > x || void 0 === t) && x > 0 && (t = x), s < x && (s = x);
                                var V = ct.getUnicodeRange(x);
                                if (V < 32) l |= 1 << V;
                                else if (V < 64) p |= 1 << V - 32;
                                else if (V < 96) d |= 1 << V - 64;
                                else {
                                    if (!(V < 123)) throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
                                    b |= 1 << V - 96
                                }
                                if (".notdef" !== j.name) {
                                    var f = j.getMetrics();
                                    r.push(f.xMin), n.push(f.yMin), h.push(f.xMax), a.push(f.yMax), c.push(f.leftSideBearing), o.push(f.rightSideBearing), i.push(j.advanceWidth)
                                }
                            }
                            var F = {
                                xMin: Math.min.apply(null, r),
                                yMin: Math.min.apply(null, n),
                                xMax: Math.max.apply(null, h),
                                yMax: Math.max.apply(null, a),
                                advanceWidthMax: Math.max.apply(null, i),
                                advanceWidthAvg: Ft(i),
                                minLeftSideBearing: Math.min.apply(null, c),
                                maxLeftSideBearing: Math.max.apply(null, c),
                                minRightSideBearing: Math.min.apply(null, o)
                            };
                            F.ascender = e.ascender, F.descender = e.descender;
                            var k = qe.make({
                                    flags: 3,
                                    unitsPerEm: e.unitsPerEm,
                                    xMin: F.xMin,
                                    yMin: F.yMin,
                                    xMax: F.xMax,
                                    yMax: F.yMax,
                                    lowestRecPPEM: 3,
                                    createdTimestamp: e.createdTimestamp
                                }),
                                m = Ge.make({
                                    ascender: F.ascender,
                                    descender: F.descender,
                                    advanceWidthMax: F.advanceWidthMax,
                                    minLeftSideBearing: F.minLeftSideBearing,
                                    minRightSideBearing: F.minRightSideBearing,
                                    xMaxExtent: F.maxLeftSideBearing + (F.xMax - F.xMin),
                                    numberOfHMetrics: e.glyphs.length
                                }),
                                P = _e.make(e.glyphs.length),
                                u = ct.make(Object.assign({
                                    xAvgCharWidth: Math.round(F.advanceWidthAvg),
                                    usFirstCharIndex: t,
                                    usLastCharIndex: s,
                                    ulUnicodeRange1: l,
                                    ulUnicodeRange2: p,
                                    ulUnicodeRange3: d,
                                    ulUnicodeRange4: b,
                                    sTypoAscender: F.ascender,
                                    sTypoDescender: F.descender,
                                    sTypoLineGap: 0,
                                    usWinAscent: F.yMax,
                                    usWinDescent: Math.abs(F.yMin),
                                    ulCodePageRange1: 1,
                                    sxHeight: ft(e, "xyvw", {
                                        yMax: Math.round(F.ascender / 2)
                                    }).yMax,
                                    sCapHeight: ft(e, "HIKLEFJMNTZBDPRAGOQSUVWXY", F).yMax,
                                    usDefaultChar: e.hasChar(" ") ? 32 : 0,
                                    usBreakChar: e.hasChar(" ") ? 32 : 0
                                }, e.tables.os2)),
                                X = Ee.make(e.glyphs),
                                N = se.make(e.glyphs),
                                H = e.getEnglishName("fontFamily"),
                                z = e.getEnglishName("fontSubfamily"),
                                Q = H + " " + z,
                                R = e.getEnglishName("postScriptName");
                            R || (R = H.replace(/\s/g, "") + "-" + z);
                            var v = {};
                            for (var I in e.names) v[I] = e.names[I];
                            v.uniqueID || (v.uniqueID = {
                                en: e.getEnglishName("manufacturer") + ":" + Q
                            }), v.postScriptName || (v.postScriptName = {
                                en: R
                            }), v.preferredFamily || (v.preferredFamily = e.names.fontFamily), v.preferredSubfamily || (v.preferredSubfamily = e.names.fontSubfamily);
                            var w = [],
                                y = at.make(v, w),
                                C = w.length > 0 ? We.make(w) : void 0,
                                A = ot.make(),
                                D = Me.make(e.glyphs, {
                                    version: e.getEnglishName("version"),
                                    fullName: Q,
                                    familyName: H,
                                    weightName: z,
                                    postScriptName: R,
                                    unitsPerEm: e.unitsPerEm,
                                    fontBBox: [0, F.yMin, F.ascender, F.advanceWidthMax]
                                }),
                                S = e.metas && Object.keys(e.metas).length > 0 ? bt.make(e.metas) : void 0,
                                Y = [k, m, P, u, y, N, A, D, X];
                            C && Y.push(C), e.tables.gsub && Y.push(dt.make(e.tables.gsub)), S && Y.push(S);
                            for (var B = Vt(Y), T = B.encode(), L = jt(T), M = B.fields, q = !1, G = 0; G < M.length; G += 1)
                                if ("head table" === M[G].name) {
                                    M[G].value.checkSumAdjustment = 2981146554 - L, q = !0;
                                    break
                                } if (!q) throw new Error("Could not find head table with checkSum to adjust.");
                            return B
                        },
                        computeCheckSum: jt
                    };

                    function mt(e, t) {
                        var r = 0,
                            n = e.length - 1;
                        while (r <= n) {
                            var h = r + n >>> 1,
                                a = e[h].tag;
                            if (a === t) return h;
                            a < t ? r = h + 1 : n = h - 1
                        }
                        return -r - 1
                    }

                    function Pt(e, t) {
                        var r = 0,
                            n = e.length - 1;
                        while (r <= n) {
                            var h = r + n >>> 1,
                                a = e[h];
                            if (a === t) return h;
                            a < t ? r = h + 1 : n = h - 1
                        }
                        return -r - 1
                    }

                    function ut(e, t) {
                        var r, n = 0,
                            h = e.length - 1;
                        while (n <= h) {
                            var a = n + h >>> 1;
                            r = e[a];
                            var i = r.start;
                            if (i === t) return r;
                            i < t ? n = a + 1 : h = a - 1
                        }
                        if (n > 0) return r = e[n - 1], t > r.end ? 0 : r
                    }

                    function Xt(e, t) {
                        this.font = e, this.tableName = t
                    }

                    function Nt(e) {
                        Xt.call(this, e, "gpos")
                    }

                    function Ht(e) {
                        Xt.call(this, e, "gsub")
                    }

                    function zt(e, t) {
                        var r = e.length;
                        if (r !== t.length) return !1;
                        for (var n = 0; n < r; n++)
                            if (e[n] !== t[n]) return !1;
                        return !0
                    }

                    function Qt(e, t, r) {
                        for (var n = e.subtables, h = 0; h < n.length; h++) {
                            var a = n[h];
                            if (a.substFormat === t) return a
                        }
                        if (r) return n.push(r), r
                    }

                    function Rt(e) {
                        for (var t = new ArrayBuffer(e.length), r = new Uint8Array(t), n = 0; n < e.length; ++n) r[n] = e[n];
                        return t
                    }

                    function vt(e, t) {
                        if (!e) throw t
                    }

                    function It(e, t, r, n, h) {
                        var a;
                        return (t & n) > 0 ? (a = e.parseByte(), 0 === (t & h) && (a = -a), a = r + a) : a = (t & h) > 0 ? r : r + e.parseShort(), a
                    }

                    function wt(e, t, r) {
                        var n, h, a = new ce.Parser(t, r);
                        if (e.numberOfContours = a.parseShort(), e._xMin = a.parseShort(), e._yMin = a.parseShort(), e._xMax = a.parseShort(), e._yMax = a.parseShort(), e.numberOfContours > 0) {
                            for (var i = e.endPointIndices = [], c = 0; c < e.numberOfContours; c += 1) i.push(a.parseUShort());
                            e.instructionLength = a.parseUShort(), e.instructions = [];
                            for (var o = 0; o < e.instructionLength; o += 1) e.instructions.push(a.parseByte());
                            var s = i[i.length - 1] + 1;
                            n = [];
                            for (var l = 0; l < s; l += 1)
                                if (h = a.parseByte(), n.push(h), (8 & h) > 0)
                                    for (var p = a.parseByte(), d = 0; d < p; d += 1) n.push(h), l += 1;
                            if (w.argument(n.length === s, "Bad flags."), i.length > 0) {
                                var b, g = [];
                                if (s > 0) {
                                    for (var j = 0; j < s; j += 1) h = n[j], b = {}, b.onCurve = !!(1 & h), b.lastPointOfContour = i.indexOf(j) >= 0, g.push(b);
                                    for (var x = 0, V = 0; V < s; V += 1) h = n[V], b = g[V], b.x = It(a, h, x, 2, 16), x = b.x;
                                    for (var f = 0, F = 0; F < s; F += 1) h = n[F], b = g[F], b.y = It(a, h, f, 4, 32), f = b.y
                                }
                                e.points = g
                            } else e.points = []
                        } else if (0 === e.numberOfContours) e.points = [];
                        else {
                            e.isComposite = !0, e.points = [], e.components = [];
                            var k = !0;
                            while (k) {
                                n = a.parseUShort();
                                var m = {
                                    glyphIndex: a.parseUShort(),
                                    xScale: 1,
                                    scale01: 0,
                                    scale10: 0,
                                    yScale: 1,
                                    dx: 0,
                                    dy: 0
                                };
                                (1 & n) > 0 ? (2 & n) > 0 ? (m.dx = a.parseShort(), m.dy = a.parseShort()) : m.matchedPoints = [a.parseUShort(), a.parseUShort()] : (2 & n) > 0 ? (m.dx = a.parseChar(), m.dy = a.parseChar()) : m.matchedPoints = [a.parseByte(), a.parseByte()], (8 & n) > 0 ? m.xScale = m.yScale = a.parseF2Dot14() : (64 & n) > 0 ? (m.xScale = a.parseF2Dot14(), m.yScale = a.parseF2Dot14()) : (128 & n) > 0 && (m.xScale = a.parseF2Dot14(), m.scale01 = a.parseF2Dot14(), m.scale10 = a.parseF2Dot14(), m.yScale = a.parseF2Dot14()), e.components.push(m), k = !!(32 & n)
                            }
                            if (256 & n) {
                                e.instructionLength = a.parseUShort(), e.instructions = [];
                                for (var P = 0; P < e.instructionLength; P += 1) e.instructions.push(a.parseByte())
                            }
                        }
                    }

                    function yt(e, t) {
                        for (var r = [], n = 0; n < e.length; n += 1) {
                            var h = e[n],
                                a = {
                                    x: t.xScale * h.x + t.scale01 * h.y + t.dx,
                                    y: t.scale10 * h.x + t.yScale * h.y + t.dy,
                                    onCurve: h.onCurve,
                                    lastPointOfContour: h.lastPointOfContour
                                };
                            r.push(a)
                        }
                        return r
                    }

                    function Ct(e) {
                        var t = new R;
                        if (!e) return t;
                        for (var r = function(e) {
                                for (var t = [], r = [], n = 0; n < e.length; n += 1) {
                                    var h = e[n];
                                    r.push(h), h.lastPointOfContour && (t.push(r), r = [])
                                }
                                return w.argument(0 === r.length, "There are still points left in the current contour."), t
                            }(e), n = 0; n < r.length; ++n) {
                            var h = r[n],
                                a = null,
                                i = h[h.length - 1],
                                c = h[0];
                            if (i.onCurve) t.moveTo(i.x, i.y);
                            else if (c.onCurve) t.moveTo(c.x, c.y);
                            else {
                                var o = {
                                    x: .5 * (i.x + c.x),
                                    y: .5 * (i.y + c.y)
                                };
                                t.moveTo(o.x, o.y)
                            }
                            for (var s = 0; s < h.length; ++s)
                                if (a = i, i = c, c = h[(s + 1) % h.length], i.onCurve) t.lineTo(i.x, i.y);
                                else {
                                    var l = c;
                                    a.onCurve || {
                                        x: .5 * (i.x + a.x),
                                        y: .5 * (i.y + a.y)
                                    }, c.onCurve || (l = {
                                        x: .5 * (i.x + c.x),
                                        y: .5 * (i.y + c.y)
                                    }), t.quadraticCurveTo(i.x, i.y, l.x, l.y)
                                } t.closePath()
                        }
                        return t
                    }

                    function At(e, t) {
                        if (t.isComposite)
                            for (var r = 0; r < t.components.length; r += 1) {
                                var n = t.components[r],
                                    h = e.get(n.glyphIndex);
                                if (h.getPath(), h.points) {
                                    var a = void 0;
                                    if (void 0 === n.matchedPoints) a = yt(h.points, n);
                                    else {
                                        if (n.matchedPoints[0] > t.points.length - 1 || n.matchedPoints[1] > h.points.length - 1) throw Error("Matched points out of range in " + t.name);
                                        var i = t.points[n.matchedPoints[0]],
                                            c = h.points[n.matchedPoints[1]],
                                            o = {
                                                xScale: n.xScale,
                                                scale01: n.scale01,
                                                scale10: n.scale10,
                                                yScale: n.yScale,
                                                dx: 0,
                                                dy: 0
                                            };
                                        c = yt([c], o)[0], o.dx = i.x - c.x, o.dy = i.y - c.y, a = yt(h.points, o)
                                    }
                                    t.points = t.points.concat(a)
                                }
                            }
                        return Ct(t.points)
                    }
                    Xt.prototype = {
                        searchTag: mt,
                        binSearch: Pt,
                        getTable: function(e) {
                            var t = this.font.tables[this.tableName];
                            return !t && e && (t = this.font.tables[this.tableName] = this.createDefaultTable()), t
                        },
                        getScriptNames: function() {
                            var e = this.getTable();
                            return e ? e.scripts.map((function(e) {
                                return e.tag
                            })) : []
                        },
                        getDefaultScriptName: function() {
                            var e = this.getTable();
                            if (e) {
                                for (var t = !1, r = 0; r < e.scripts.length; r++) {
                                    var n = e.scripts[r].tag;
                                    if ("DFLT" === n) return n;
                                    "latn" === n && (t = !0)
                                }
                                return t ? "latn" : void 0
                            }
                        },
                        getScriptTable: function(e, t) {
                            var r = this.getTable(t);
                            if (r) {
                                e = e || "DFLT";
                                var n = r.scripts,
                                    h = mt(r.scripts, e);
                                if (h >= 0) return n[h].script;
                                if (t) {
                                    var a = {
                                        tag: e,
                                        script: {
                                            defaultLangSys: {
                                                reserved: 0,
                                                reqFeatureIndex: 65535,
                                                featureIndexes: []
                                            },
                                            langSysRecords: []
                                        }
                                    };
                                    return n.splice(-1 - h, 0, a), a.script
                                }
                            }
                        },
                        getLangSysTable: function(e, t, r) {
                            var n = this.getScriptTable(e, r);
                            if (n) {
                                if (!t || "dflt" === t || "DFLT" === t) return n.defaultLangSys;
                                var h = mt(n.langSysRecords, t);
                                if (h >= 0) return n.langSysRecords[h].langSys;
                                if (r) {
                                    var a = {
                                        tag: t,
                                        langSys: {
                                            reserved: 0,
                                            reqFeatureIndex: 65535,
                                            featureIndexes: []
                                        }
                                    };
                                    return n.langSysRecords.splice(-1 - h, 0, a), a.langSys
                                }
                            }
                        },
                        getFeatureTable: function(e, t, r, n) {
                            var h = this.getLangSysTable(e, t, n);
                            if (h) {
                                for (var a, i = h.featureIndexes, c = this.font.tables[this.tableName].features, o = 0; o < i.length; o++)
                                    if (a = c[i[o]], a.tag === r) return a.feature;
                                if (n) {
                                    var s = c.length;
                                    return w.assert(0 === s || r >= c[s - 1].tag, "Features must be added in alphabetical order."), a = {
                                        tag: r,
                                        feature: {
                                            params: 0,
                                            lookupListIndexes: []
                                        }
                                    }, c.push(a), i.push(s), a.feature
                                }
                            }
                        },
                        getLookupTables: function(e, t, r, n, h) {
                            var a = this.getFeatureTable(e, t, r, h),
                                i = [];
                            if (a) {
                                for (var c, o = a.lookupListIndexes, s = this.font.tables[this.tableName].lookups, l = 0; l < o.length; l++) c = s[o[l]], c.lookupType === n && i.push(c);
                                if (0 === i.length && h) {
                                    c = {
                                        lookupType: n,
                                        lookupFlag: 0,
                                        subtables: [],
                                        markFilteringSet: void 0
                                    };
                                    var p = s.length;
                                    return s.push(c), o.push(p), [c]
                                }
                            }
                            return i
                        },
                        getGlyphClass: function(e, t) {
                            switch (e.format) {
                                case 1:
                                    return e.startGlyph <= t && t < e.startGlyph + e.classes.length ? e.classes[t - e.startGlyph] : 0;
                                case 2:
                                    var r = ut(e.ranges, t);
                                    return r ? r.classId : 0
                            }
                        },
                        getCoverageIndex: function(e, t) {
                            switch (e.format) {
                                case 1:
                                    var r = Pt(e.glyphs, t);
                                    return r >= 0 ? r : -1;
                                case 2:
                                    var n = ut(e.ranges, t);
                                    return n ? n.index + t - n.start : -1
                            }
                        },
                        expandCoverage: function(e) {
                            if (1 === e.format) return e.glyphs;
                            for (var t = [], r = e.ranges, n = 0; n < r.length; n++)
                                for (var h = r[n], a = h.start, i = h.end, c = a; c <= i; c++) t.push(c);
                            return t
                        }
                    }, Nt.prototype = Xt.prototype, Nt.prototype.init = function() {
                        var e = this.getDefaultScriptName();
                        this.defaultKerningTables = this.getKerningTables(e)
                    }, Nt.prototype.getKerningValue = function(e, t, r) {
                        for (var n = 0; n < e.length; n++)
                            for (var h = e[n].subtables, a = 0; a < h.length; a++) {
                                var i = h[a],
                                    c = this.getCoverageIndex(i.coverage, t);
                                if (!(c < 0)) switch (i.posFormat) {
                                    case 1:
                                        for (var o = i.pairSets[c], s = 0; s < o.length; s++) {
                                            var l = o[s];
                                            if (l.secondGlyph === r) return l.value1 && l.value1.xAdvance || 0
                                        }
                                        break;
                                    case 2:
                                        var p = this.getGlyphClass(i.classDef1, t),
                                            d = this.getGlyphClass(i.classDef2, r),
                                            b = i.classRecords[p][d];
                                        return b.value1 && b.value1.xAdvance || 0
                                }
                            }
                        return 0
                    }, Nt.prototype.getKerningTables = function(e, t) {
                        if (this.font.tables.gpos) return this.getLookupTables(e, t, "kern", 2)
                    }, Ht.prototype = Xt.prototype, Ht.prototype.createDefaultTable = function() {
                        return {
                            version: 1,
                            scripts: [{
                                tag: "DFLT",
                                script: {
                                    defaultLangSys: {
                                        reserved: 0,
                                        reqFeatureIndex: 65535,
                                        featureIndexes: []
                                    },
                                    langSysRecords: []
                                }
                            }],
                            features: [],
                            lookups: []
                        }
                    }, Ht.prototype.getSingle = function(e, t, r) {
                        for (var n = [], h = this.getLookupTables(t, r, e, 1), a = 0; a < h.length; a++)
                            for (var i = h[a].subtables, c = 0; c < i.length; c++) {
                                var o = i[c],
                                    s = this.expandCoverage(o.coverage),
                                    l = void 0;
                                if (1 === o.substFormat) {
                                    var p = o.deltaGlyphId;
                                    for (l = 0; l < s.length; l++) {
                                        var d = s[l];
                                        n.push({
                                            sub: d,
                                            by: d + p
                                        })
                                    }
                                } else {
                                    var b = o.substitute;
                                    for (l = 0; l < s.length; l++) n.push({
                                        sub: s[l],
                                        by: b[l]
                                    })
                                }
                            }
                        return n
                    }, Ht.prototype.getMultiple = function(e, t, r) {
                        for (var n = [], h = this.getLookupTables(t, r, e, 2), a = 0; a < h.length; a++)
                            for (var i = h[a].subtables, c = 0; c < i.length; c++) {
                                var o = i[c],
                                    s = this.expandCoverage(o.coverage),
                                    l = void 0;
                                for (l = 0; l < s.length; l++) {
                                    var p = s[l],
                                        d = o.sequences[l];
                                    n.push({
                                        sub: p,
                                        by: d
                                    })
                                }
                            }
                        return n
                    }, Ht.prototype.getAlternates = function(e, t, r) {
                        for (var n = [], h = this.getLookupTables(t, r, e, 3), a = 0; a < h.length; a++)
                            for (var i = h[a].subtables, c = 0; c < i.length; c++)
                                for (var o = i[c], s = this.expandCoverage(o.coverage), l = o.alternateSets, p = 0; p < s.length; p++) n.push({
                                    sub: s[p],
                                    by: l[p]
                                });
                        return n
                    }, Ht.prototype.getLigatures = function(e, t, r) {
                        for (var n = [], h = this.getLookupTables(t, r, e, 4), a = 0; a < h.length; a++)
                            for (var i = h[a].subtables, c = 0; c < i.length; c++)
                                for (var o = i[c], s = this.expandCoverage(o.coverage), l = o.ligatureSets, p = 0; p < s.length; p++)
                                    for (var d = s[p], b = l[p], g = 0; g < b.length; g++) {
                                        var j = b[g];
                                        n.push({
                                            sub: [d].concat(j.components),
                                            by: j.ligGlyph
                                        })
                                    }
                        return n
                    }, Ht.prototype.addSingle = function(e, t, r, n) {
                        var h = this.getLookupTables(r, n, e, 1, !0)[0],
                            a = Qt(h, 2, {
                                substFormat: 2,
                                coverage: {
                                    format: 1,
                                    glyphs: []
                                },
                                substitute: []
                            });
                        w.assert(1 === a.coverage.format, "Single: unable to modify coverage table format " + a.coverage.format);
                        var i = t.sub,
                            c = this.binSearch(a.coverage.glyphs, i);
                        c < 0 && (c = -1 - c, a.coverage.glyphs.splice(c, 0, i), a.substitute.splice(c, 0, 0)), a.substitute[c] = t.by
                    }, Ht.prototype.addMultiple = function(e, t, r, n) {
                        w.assert(t.by instanceof Array && t.by.length > 1, 'Multiple: "by" must be an array of two or more ids');
                        var h = this.getLookupTables(r, n, e, 2, !0)[0],
                            a = Qt(h, 1, {
                                substFormat: 1,
                                coverage: {
                                    format: 1,
                                    glyphs: []
                                },
                                sequences: []
                            });
                        w.assert(1 === a.coverage.format, "Multiple: unable to modify coverage table format " + a.coverage.format);
                        var i = t.sub,
                            c = this.binSearch(a.coverage.glyphs, i);
                        c < 0 && (c = -1 - c, a.coverage.glyphs.splice(c, 0, i), a.sequences.splice(c, 0, 0)), a.sequences[c] = t.by
                    }, Ht.prototype.addAlternate = function(e, t, r, n) {
                        var h = this.getLookupTables(r, n, e, 3, !0)[0],
                            a = Qt(h, 1, {
                                substFormat: 1,
                                coverage: {
                                    format: 1,
                                    glyphs: []
                                },
                                alternateSets: []
                            });
                        w.assert(1 === a.coverage.format, "Alternate: unable to modify coverage table format " + a.coverage.format);
                        var i = t.sub,
                            c = this.binSearch(a.coverage.glyphs, i);
                        c < 0 && (c = -1 - c, a.coverage.glyphs.splice(c, 0, i), a.alternateSets.splice(c, 0, 0)), a.alternateSets[c] = t.by
                    }, Ht.prototype.addLigature = function(e, t, r, n) {
                        var h = this.getLookupTables(r, n, e, 4, !0)[0],
                            a = h.subtables[0];
                        a || (a = {
                            substFormat: 1,
                            coverage: {
                                format: 1,
                                glyphs: []
                            },
                            ligatureSets: []
                        }, h.subtables[0] = a), w.assert(1 === a.coverage.format, "Ligature: unable to modify coverage table format " + a.coverage.format);
                        var i = t.sub[0],
                            c = t.sub.slice(1),
                            o = {
                                ligGlyph: t.by,
                                components: c
                            },
                            s = this.binSearch(a.coverage.glyphs, i);
                        if (s >= 0) {
                            for (var l = a.ligatureSets[s], p = 0; p < l.length; p++)
                                if (zt(l[p].components, c)) return;
                            l.push(o)
                        } else s = -1 - s, a.coverage.glyphs.splice(s, 0, i), a.ligatureSets.splice(s, 0, [o])
                    }, Ht.prototype.getFeature = function(e, t, r) {
                        if (/ss\d\d/.test(e)) return this.getSingle(e, t, r);
                        switch (e) {
                            case "aalt":
                            case "salt":
                                return this.getSingle(e, t, r).concat(this.getAlternates(e, t, r));
                            case "dlig":
                            case "liga":
                            case "rlig":
                                return this.getLigatures(e, t, r);
                            case "ccmp":
                                return this.getMultiple(e, t, r).concat(this.getLigatures(e, t, r));
                            case "stch":
                                return this.getMultiple(e, t, r)
                        }
                    }, Ht.prototype.add = function(e, t, r, n) {
                        if (/ss\d\d/.test(e)) return this.addSingle(e, t, r, n);
                        switch (e) {
                            case "aalt":
                            case "salt":
                                return "number" === typeof t.by ? this.addSingle(e, t, r, n) : this.addAlternate(e, t, r, n);
                            case "dlig":
                            case "liga":
                            case "rlig":
                                return this.addLigature(e, t, r, n);
                            case "ccmp":
                                return t.by instanceof Array ? this.addMultiple(e, t, r, n) : this.addLigature(e, t, r, n)
                        }
                    };
                    var Dt, St, Yt, Bt, Tt = {
                        getPath: Ct,
                        parse: function(e, t, r, n, h) {
                            return h.lowMemory ? function(e, t, r, n) {
                                var h = new ue.GlyphSet(n);
                                return n._push = function(a) {
                                    var i = r[a],
                                        c = r[a + 1];
                                    i !== c ? h.push(a, ue.ttfGlyphLoader(n, a, wt, e, t + i, At)) : h.push(a, ue.glyphLoader(n, a))
                                }, h
                            }(e, t, r, n) : function(e, t, r, n) {
                                for (var h = new ue.GlyphSet(n), a = 0; a < r.length - 1; a += 1) {
                                    var i = r[a],
                                        c = r[a + 1];
                                    i !== c ? h.push(a, ue.ttfGlyphLoader(n, a, wt, e, t + i, At)) : h.push(a, ue.glyphLoader(n, a))
                                }
                                return h
                            }(e, t, r, n)
                        }
                    };

                    function Lt(e) {
                        this.font = e, this.getCommands = function(e) {
                            return Tt.getPath(e).commands
                        }, this._fpgmState = this._prepState = void 0, this._errorState = 0
                    }

                    function Mt(e) {
                        return e
                    }

                    function qt(e) {
                        return Math.sign(e) * Math.round(Math.abs(e))
                    }

                    function Gt(e) {
                        return Math.sign(e) * Math.round(Math.abs(2 * e)) / 2
                    }

                    function Et(e) {
                        return Math.sign(e) * (Math.round(Math.abs(e) + .5) - .5)
                    }

                    function Wt(e) {
                        return Math.sign(e) * Math.ceil(Math.abs(e))
                    }

                    function _t(e) {
                        return Math.sign(e) * Math.floor(Math.abs(e))
                    }
                    var Jt = function(e) {
                            var t = this.srPeriod,
                                r = this.srPhase,
                                n = this.srThreshold,
                                h = 1;
                            return e < 0 && (e = -e, h = -1), e += n - r, e = Math.trunc(e / t) * t, e += r, e < 0 ? r * h : e * h
                        },
                        Ut = {
                            x: 1,
                            y: 0,
                            axis: "x",
                            distance: function(e, t, r, n) {
                                return (r ? e.xo : e.x) - (n ? t.xo : t.x)
                            },
                            interpolate: function(e, t, r, n) {
                                var h, a, i, c, o, s, l;
                                if (!n || n === this) return h = e.xo - t.xo, a = e.xo - r.xo, o = t.x - t.xo, s = r.x - r.xo, i = Math.abs(h), c = Math.abs(a), l = i + c, 0 === l ? void(e.x = e.xo + (o + s) / 2) : void(e.x = e.xo + (o * c + s * i) / l);
                                h = n.distance(e, t, !0, !0), a = n.distance(e, r, !0, !0), o = n.distance(t, t, !1, !0), s = n.distance(r, r, !1, !0), i = Math.abs(h), c = Math.abs(a), l = i + c, 0 !== l ? Ut.setRelative(e, e, (o * c + s * i) / l, n, !0) : Ut.setRelative(e, e, (o + s) / 2, n, !0)
                            },
                            normalSlope: Number.NEGATIVE_INFINITY,
                            setRelative: function(e, t, r, n, h) {
                                if (n && n !== this) {
                                    var a = h ? t.xo : t.x,
                                        i = h ? t.yo : t.y,
                                        c = a + r * n.x,
                                        o = i + r * n.y;
                                    e.x = c + (e.y - o) / n.normalSlope
                                } else e.x = (h ? t.xo : t.x) + r
                            },
                            slope: 0,
                            touch: function(e) {
                                e.xTouched = !0
                            },
                            touched: function(e) {
                                return e.xTouched
                            },
                            untouch: function(e) {
                                e.xTouched = !1
                            }
                        },
                        Ot = {
                            x: 0,
                            y: 1,
                            axis: "y",
                            distance: function(e, t, r, n) {
                                return (r ? e.yo : e.y) - (n ? t.yo : t.y)
                            },
                            interpolate: function(e, t, r, n) {
                                var h, a, i, c, o, s, l;
                                if (!n || n === this) return h = e.yo - t.yo, a = e.yo - r.yo, o = t.y - t.yo, s = r.y - r.yo, i = Math.abs(h), c = Math.abs(a), l = i + c, 0 === l ? void(e.y = e.yo + (o + s) / 2) : void(e.y = e.yo + (o * c + s * i) / l);
                                h = n.distance(e, t, !0, !0), a = n.distance(e, r, !0, !0), o = n.distance(t, t, !1, !0), s = n.distance(r, r, !1, !0), i = Math.abs(h), c = Math.abs(a), l = i + c, 0 !== l ? Ot.setRelative(e, e, (o * c + s * i) / l, n, !0) : Ot.setRelative(e, e, (o + s) / 2, n, !0)
                            },
                            normalSlope: 0,
                            setRelative: function(e, t, r, n, h) {
                                if (n && n !== this) {
                                    var a = h ? t.xo : t.x,
                                        i = h ? t.yo : t.y,
                                        c = a + r * n.x,
                                        o = i + r * n.y;
                                    e.y = o + n.normalSlope * (e.x - c)
                                } else e.y = (h ? t.yo : t.y) + r
                            },
                            slope: Number.POSITIVE_INFINITY,
                            touch: function(e) {
                                e.yTouched = !0
                            },
                            touched: function(e) {
                                return e.yTouched
                            },
                            untouch: function(e) {
                                e.yTouched = !1
                            }
                        };

                    function Zt(e, t) {
                        this.x = e, this.y = t, this.axis = void 0, this.slope = t / e, this.normalSlope = -e / t, Object.freeze(this)
                    }

                    function Kt(e, t) {
                        var r = Math.sqrt(e * e + t * t);
                        return e /= r, t /= r, 1 === e && 0 === t ? Ut : 0 === e && 1 === t ? Ot : new Zt(e, t)
                    }

                    function $t(e, t, r, n) {
                        this.x = this.xo = Math.round(64 * e) / 64, this.y = this.yo = Math.round(64 * t) / 64, this.lastPointOfContour = r, this.onCurve = n, this.prevPointOnContour = void 0, this.nextPointOnContour = void 0, this.xTouched = !1, this.yTouched = !1, Object.preventExtensions(this)
                    }
                    Object.freeze(Ut), Object.freeze(Ot), Zt.prototype.distance = function(e, t, r, n) {
                        return this.x * Ut.distance(e, t, r, n) + this.y * Ot.distance(e, t, r, n)
                    }, Zt.prototype.interpolate = function(e, t, r, n) {
                        var h, a, i, c, o, s, l;
                        i = n.distance(e, t, !0, !0), c = n.distance(e, r, !0, !0), h = n.distance(t, t, !1, !0), a = n.distance(r, r, !1, !0), o = Math.abs(i), s = Math.abs(c), l = o + s, 0 !== l ? this.setRelative(e, e, (h * s + a * o) / l, n, !0) : this.setRelative(e, e, (h + a) / 2, n, !0)
                    }, Zt.prototype.setRelative = function(e, t, r, n, h) {
                        n = n || this;
                        var a = h ? t.xo : t.x,
                            i = h ? t.yo : t.y,
                            c = a + r * n.x,
                            o = i + r * n.y,
                            s = n.normalSlope,
                            l = this.slope,
                            p = e.x,
                            d = e.y;
                        e.x = (l * p - s * c + o - d) / (l - s), e.y = l * (e.x - p) + d
                    }, Zt.prototype.touch = function(e) {
                        e.xTouched = !0, e.yTouched = !0
                    }, $t.prototype.nextTouched = function(e) {
                        var t = this.nextPointOnContour;
                        while (!e.touched(t) && t !== this) t = t.nextPointOnContour;
                        return t
                    }, $t.prototype.prevTouched = function(e) {
                        var t = this.prevPointOnContour;
                        while (!e.touched(t) && t !== this) t = t.prevPointOnContour;
                        return t
                    };
                    var er = Object.freeze(new $t(0, 0)),
                        tr = {
                            cvCutIn: 17 / 16,
                            deltaBase: 9,
                            deltaShift: .125,
                            loop: 1,
                            minDis: 1,
                            autoFlip: !0
                        };

                    function rr(e, t) {
                        switch (this.env = e, this.stack = [], this.prog = t, e) {
                            case "glyf":
                                this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;
                            case "prep":
                                this.fv = this.pv = this.dpv = Ut, this.round = qt
                        }
                    }

                    function nr(e) {
                        for (var t = e.tZone = new Array(e.gZone.length), r = 0; r < t.length; r++) t[r] = new $t(0, 0)
                    }

                    function hr(e, t) {
                        var r, n = e.prog,
                            h = e.ip,
                            a = 1;
                        do {
                            if (r = n[++h], 88 === r) a++;
                            else if (89 === r) a--;
                            else if (64 === r) h += n[h + 1] + 1;
                            else if (65 === r) h += 2 * n[h + 1] + 1;
                            else if (r >= 176 && r <= 183) h += r - 176 + 1;
                            else if (r >= 184 && r <= 191) h += 2 * (r - 184 + 1);
                            else if (t && 1 === a && 27 === r) break
                        } while (a > 0);
                        e.ip = h
                    }

                    function ar(e, r) {
                        t.DEBUG && h("log", r.step, "SVTCA[" + e.axis + "]", " at utils/opentype.js:9338"), r.fv = r.pv = r.dpv = e
                    }

                    function ir(e, r) {
                        t.DEBUG && h("log", r.step, "SPVTCA[" + e.axis + "]", " at utils/opentype.js:9346"), r.pv = r.dpv = e
                    }

                    function cr(e, r) {
                        t.DEBUG && h("log", r.step, "SFVTCA[" + e.axis + "]", " at utils/opentype.js:9354"), r.fv = e
                    }

                    function or(e, r) {
                        var n, a, i = r.stack,
                            c = i.pop(),
                            o = i.pop(),
                            s = r.z2[c],
                            l = r.z1[o];
                        t.DEBUG && h("log", "SPVTL[" + e + "]", c, o, " at utils/opentype.js:9368"), e ? (n = s.y - l.y, a = l.x - s.x) : (n = l.x - s.x, a = l.y - s.y), r.pv = r.dpv = Kt(n, a)
                    }

                    function sr(e, r) {
                        var n, a, i = r.stack,
                            c = i.pop(),
                            o = i.pop(),
                            s = r.z2[c],
                            l = r.z1[o];
                        t.DEBUG && h("log", "SFVTL[" + e + "]", c, o, " at utils/opentype.js:9393"), e ? (n = s.y - l.y, a = l.x - s.x) : (n = l.x - s.x, a = l.y - s.y), r.fv = Kt(n, a)
                    }

                    function lr(e) {
                        t.DEBUG && h("log", e.step, "POP[]", " at utils/opentype.js:9699"), e.stack.pop()
                    }

                    function pr(e, r) {
                        var n = r.stack.pop(),
                            a = r.z0[n],
                            i = r.fv,
                            c = r.pv;
                        t.DEBUG && h("log", r.step, "MDAP[" + e + "]", n, " at utils/opentype.js:9841");
                        var o = c.distance(a, er);
                        e && (o = r.round(o)), i.setRelative(a, er, o, c), i.touch(a), r.rp0 = r.rp1 = n
                    }

                    function dr(e, r) {
                        var n, a, i, c = r.z2,
                            o = c.length - 2;
                        t.DEBUG && h("log", r.step, "IUP[" + e.axis + "]", " at utils/opentype.js:9862");
                        for (var s = 0; s < o; s++) n = c[s], e.touched(n) || (a = n.prevTouched(e), a !== n && (i = n.nextTouched(e), a === i && e.setRelative(n, n, e.distance(a, a, !1, !0), e, !0), e.interpolate(n, a, i, e)))
                    }

                    function br(e, r) {
                        var n = r.stack,
                            a = e ? r.rp1 : r.rp2,
                            i = (e ? r.z0 : r.z1)[a],
                            c = r.fv,
                            o = r.pv,
                            s = r.loop,
                            l = r.z2;
                        while (s--) {
                            var p = n.pop(),
                                d = l[p],
                                b = o.distance(i, i, !1, !0);
                            c.setRelative(d, d, b, o), c.touch(d), t.DEBUG && h("log", r.step, (r.loop > 1 ? "loop " + (r.loop - s) + ": " : "") + "SHP[" + (e ? "rp1" : "rp2") + "]", p, " at utils/opentype.js:9909")
                        }
                        r.loop = 1
                    }

                    function gr(e, r) {
                        var n = r.stack,
                            a = e ? r.rp1 : r.rp2,
                            i = (e ? r.z0 : r.z1)[a],
                            c = r.fv,
                            o = r.pv,
                            s = n.pop(),
                            l = r.z2[r.contours[s]],
                            p = l;
                        t.DEBUG && h("log", r.step, "SHC[" + e + "]", s, " at utils/opentype.js:9935");
                        var d = o.distance(i, i, !1, !0);
                        do {
                            p !== i && c.setRelative(p, p, d, o), p = p.nextPointOnContour
                        } while (p !== l)
                    }

                    function jr(e, r) {
                        var n, a, i = r.stack,
                            c = e ? r.rp1 : r.rp2,
                            o = (e ? r.z0 : r.z1)[c],
                            s = r.fv,
                            l = r.pv,
                            p = i.pop();
                        switch (t.DEBUG && h("log", r.step, "SHZ[" + e + "]", p, " at utils/opentype.js:9956"), p) {
                            case 0:
                                n = r.tZone;
                                break;
                            case 1:
                                n = r.gZone;
                                break;
                            default:
                                throw new Error("Invalid zone")
                        }
                        for (var d = l.distance(o, o, !1, !0), b = n.length - 2, g = 0; g < b; g++) a = n[g], s.setRelative(a, a, d, l)
                    }

                    function xr(e, r) {
                        var n = r.stack,
                            a = n.pop() / 64,
                            i = n.pop(),
                            c = r.z1[i],
                            o = r.z0[r.rp0],
                            s = r.fv,
                            l = r.pv;
                        s.setRelative(c, o, a, l), s.touch(c), t.DEBUG && h("log", r.step, "MSIRP[" + e + "]", a, i, " at utils/opentype.js:10051"), r.rp1 = r.rp0, r.rp2 = i, e && (r.rp0 = i)
                    }

                    function Vr(e, r) {
                        var n = r.stack,
                            a = n.pop(),
                            i = n.pop(),
                            c = r.z0[i],
                            o = r.fv,
                            s = r.pv,
                            l = r.cvt[a];
                        t.DEBUG && h("log", r.step, "MIAP[" + e + "]", a, "(", l, ")", i, " at utils/opentype.js:10108");
                        var p = s.distance(c, er);
                        e && (Math.abs(p - l) < r.cvCutIn && (p = l), p = r.round(p)), o.setRelative(c, er, p, s), 0 === r.zp0 && (c.xo = c.x, c.yo = c.y), o.touch(c), r.rp0 = r.rp1 = i
                    }

                    function fr(e, r) {
                        var n = r.stack,
                            a = n.pop(),
                            i = r.z2[a];
                        t.DEBUG && h("log", r.step, "GC[" + e + "]", a, " at utils/opentype.js:10232"), n.push(64 * r.dpv.distance(i, er, e, !1))
                    }

                    function Fr(e, r) {
                        var n = r.stack,
                            a = n.pop(),
                            i = n.pop(),
                            c = r.z1[a],
                            o = r.z0[i],
                            s = r.dpv.distance(o, c, e, e);
                        t.DEBUG && h("log", r.step, "MD[" + e + "]", a, i, "->", s, " at utils/opentype.js:10247"), r.stack.push(Math.round(64 * s))
                    }

                    function kr(e, r) {
                        var n = r.stack,
                            a = n.pop(),
                            i = r.fv,
                            c = r.pv,
                            o = r.ppem,
                            s = r.deltaBase + 16 * (e - 1),
                            l = r.deltaShift,
                            p = r.z0;
                        t.DEBUG && h("log", r.step, "DELTAP[" + e + "]", a, n, " at utils/opentype.js:10435");
                        for (var d = 0; d < a; d++) {
                            var b = n.pop(),
                                g = n.pop(),
                                j = s + ((240 & g) >> 4);
                            if (j === o) {
                                var x = (15 & g) - 8;
                                x >= 0 && x++, t.DEBUG && h("log", r.step, "DELTAPFIX", b, "by", x * l, " at utils/opentype.js:10445");
                                var V = p[b];
                                i.setRelative(V, V, x * l, c)
                            }
                        }
                    }

                    function mr(e, r) {
                        var n = r.stack,
                            a = n.pop();
                        t.DEBUG && h("log", r.step, "ROUND[]", " at utils/opentype.js:10572"), n.push(64 * r.round(a / 64))
                    }

                    function Pr(e, r) {
                        var n = r.stack,
                            a = n.pop(),
                            i = r.ppem,
                            c = r.deltaBase + 16 * (e - 1),
                            o = r.deltaShift;
                        t.DEBUG && h("log", r.step, "DELTAC[" + e + "]", a, n, " at utils/opentype.js:10600");
                        for (var s = 0; s < a; s++) {
                            var l = n.pop(),
                                p = n.pop(),
                                d = c + ((240 & p) >> 4);
                            if (d === i) {
                                var b = (15 & p) - 8;
                                b >= 0 && b++;
                                var g = b * o;
                                t.DEBUG && h("log", r.step, "DELTACFIX", l, "by", g, " at utils/opentype.js:10613"), r.cvt[l] += g
                            }
                        }
                    }

                    function ur(e, r) {
                        var n, a, i = r.stack,
                            c = i.pop(),
                            o = i.pop(),
                            s = r.z2[c],
                            l = r.z1[o];
                        t.DEBUG && h("log", r.step, "SDPVTL[" + e + "]", c, o, " at utils/opentype.js:10761"), e ? (n = s.y - l.y, a = l.x - s.x) : (n = l.x - s.x, a = l.y - s.y), r.dpv = Kt(n, a)
                    }

                    function Xr(e, r) {
                        var n = r.stack,
                            a = r.prog,
                            i = r.ip;
                        t.DEBUG && h("log", r.step, "PUSHB[" + e + "]", " at utils/opentype.js:10867");
                        for (var c = 0; c < e; c++) n.push(a[++i]);
                        r.ip = i
                    }

                    function Nr(e, r) {
                        var n = r.ip,
                            a = r.prog,
                            i = r.stack;
                        t.DEBUG && h("log", r.ip, "PUSHW[" + e + "]", " at utils/opentype.js:10881");
                        for (var c = 0; c < e; c++) {
                            var o = a[++n] << 8 | a[++n];
                            32768 & o && (o = -(1 + (65535 ^ o))), i.push(o)
                        }
                        r.ip = n
                    }

                    function Hr(e, r, n, a, i, c) {
                        var o, s, l, p, d = c.stack,
                            b = e && d.pop(),
                            g = d.pop(),
                            j = c.rp0,
                            x = c.z0[j],
                            V = c.z1[g],
                            f = c.minDis,
                            F = c.fv,
                            k = c.dpv;
                        s = o = k.distance(V, x, !0, !0), l = s >= 0 ? 1 : -1, s = Math.abs(s), e && (p = c.cvt[b], a && Math.abs(s - p) < c.cvCutIn && (s = p)), n && s < f && (s = f), a && (s = c.round(s)), F.setRelative(V, x, l * s, k), F.touch(V), t.DEBUG && h("log", c.step, (e ? "MIRP[" : "MDRP[") + (r ? "M" : "m") + (n ? ">" : "_") + (a ? "R" : "_") + (0 === i ? "Gr" : 1 === i ? "Bl" : 2 === i ? "Wh" : "") + "]", e ? b + "(" + c.cvt[b] + "," + p + ")" : "", g, "(d =", o, "->", l * s, ")", " at utils/opentype.js:10938"), c.rp1 = c.rp0, c.rp2 = g, r && (c.rp0 = g)
                    }

                    function zr(e) {
                        this.char = e, this.state = {}, this.activeState = null
                    }

                    function Qr(e, t, r) {
                        this.contextName = r, this.startIndex = e, this.endOffset = t
                    }

                    function Rr(e, t, r) {
                        this.contextName = e, this.openRange = null, this.ranges = [], this.checkStart = t, this.checkEnd = r
                    }

                    function vr(e, t) {
                        this.context = e, this.index = t, this.length = e.length, this.current = e[t], this.backtrack = e.slice(0, t), this.lookahead = e.slice(t + 1)
                    }

                    function Ir(e) {
                        this.eventId = e, this.subscribers = []
                    }

                    function wr(e) {
                        var t = this,
                            r = ["start", "end", "next", "newToken", "contextStart", "contextEnd", "insertToken", "removeToken", "removeRange", "replaceToken", "replaceRange", "composeRUD", "updateContextsRanges"];
                        r.forEach((function(e) {
                            Object.defineProperty(t.events, e, {
                                value: new Ir(e)
                            })
                        })), e && r.forEach((function(r) {
                            var n = e[r];
                            "function" === typeof n && t.events[r].subscribe(n)
                        }));
                        ["insertToken", "removeToken", "removeRange", "replaceToken", "replaceRange", "composeRUD"].forEach((function(e) {
                            t.events[e].subscribe(t.updateContextsRanges)
                        }))
                    }

                    function yr(e) {
                        this.tokens = [], this.registeredContexts = {}, this.contextCheckers = [], this.events = {}, this.registeredModifiers = [], wr.call(this, e)
                    }

                    function Cr(e) {
                        return /[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(e)
                    }

                    function Ar(e) {
                        return /[\u0630\u0690\u0621\u0631\u0661\u0671\u0622\u0632\u0672\u0692\u06C2\u0623\u0673\u0693\u06C3\u0624\u0694\u06C4\u0625\u0675\u0695\u06C5\u06E5\u0676\u0696\u06C6\u0627\u0677\u0697\u06C7\u0648\u0688\u0698\u06C8\u0689\u0699\u06C9\u068A\u06CA\u066B\u068B\u06CB\u068C\u068D\u06CD\u06FD\u068E\u06EE\u06FE\u062F\u068F\u06CF\u06EF]/.test(e)
                    }

                    function Dr(e) {
                        return /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(e)
                    }

                    function Sr(e) {
                        return /[A-z]/.test(e)
                    }

                    function Yr(e) {
                        this.font = e, this.features = {}
                    }

                    function Br(e) {
                        this.id = e.id, this.tag = e.tag, this.substitution = e.substitution
                    }

                    function Tr(e, t) {
                        if (!e) return -1;
                        switch (t.format) {
                            case 1:
                                return t.glyphs.indexOf(e);
                            case 2:
                                for (var r = t.ranges, n = 0; n < r.length; n++) {
                                    var h = r[n];
                                    if (e >= h.start && e <= h.end) {
                                        var a = e - h.start;
                                        return h.index + a
                                    }
                                }
                                break;
                            default:
                                return -1
                        }
                        return -1
                    }

                    function Lr(e, t) {
                        var r = Tr(e, t.coverage);
                        return -1 === r ? null : e + t.deltaGlyphId
                    }

                    function Mr(e, t) {
                        var r = Tr(e, t.coverage);
                        return -1 === r ? null : t.substitute[r]
                    }

                    function qr(e, t) {
                        for (var r = [], n = 0; n < e.length; n++) {
                            var h = e[n],
                                a = t.current;
                            a = Array.isArray(a) ? a[0] : a;
                            var i = Tr(a, h); - 1 !== i && r.push(i)
                        }
                        return r.length !== e.length ? -1 : r
                    }

                    function Gr(e, t) {
                        var r = t.inputCoverage.length + t.lookaheadCoverage.length + t.backtrackCoverage.length;
                        if (e.context.length < r) return [];
                        var n = qr(t.inputCoverage, e);
                        if (-1 === n) return [];
                        var h = t.inputCoverage.length - 1;
                        if (e.lookahead.length < t.lookaheadCoverage.length) return [];
                        var a = e.lookahead.slice(h);
                        while (a.length && Dr(a[0].char)) a.shift();
                        var i = new vr(a, 0),
                            c = qr(t.lookaheadCoverage, i),
                            o = [].concat(e.backtrack);
                        o.reverse();
                        while (o.length && Dr(o[0].char)) o.shift();
                        if (o.length < t.backtrackCoverage.length) return [];
                        var s = new vr(o, 0),
                            l = qr(t.backtrackCoverage, s),
                            p = n.length === t.inputCoverage.length && c.length === t.lookaheadCoverage.length && l.length === t.backtrackCoverage.length,
                            d = [];
                        if (p)
                            for (var b = 0; b < t.lookupRecords.length; b++)
                                for (var g = t.lookupRecords[b], j = g.lookupListIndex, x = this.getLookupByIndex(j), V = 0; V < x.subtables.length; V++) {
                                    var f = x.subtables[V],
                                        F = this.getLookupMethod(x, f),
                                        k = this.getSubstitutionType(x, f);
                                    if ("12" === k)
                                        for (var m = 0; m < n.length; m++) {
                                            var P = e.get(m),
                                                u = F(P);
                                            u && d.push(u)
                                        }
                                }
                        return d
                    }

                    function Er(e, t) {
                        var r, n = e.current,
                            h = Tr(n, t.coverage);
                        if (-1 === h) return null;
                        for (var a = t.ligatureSets[h], i = 0; i < a.length; i++) {
                            r = a[i];
                            for (var c = 0; c < r.components.length; c++) {
                                var o = e.lookahead[c],
                                    s = r.components[c];
                                if (o !== s) break;
                                if (c === r.components.length - 1) return r
                            }
                        }
                        return null
                    }

                    function Wr(e, t) {
                        var r = Tr(e, t.coverage);
                        return -1 === r ? null : t.sequences[r]
                    }
                    Lt.prototype.exec = function(r, n) {
                        if ("number" !== typeof n) throw new Error("Point size is not a number!");
                        if (!(this._errorState > 2)) {
                            var a = this.font,
                                i = this._prepState;
                            if (!i || i.ppem !== n) {
                                var c = this._fpgmState;
                                if (!c) {
                                    rr.prototype = tr, c = this._fpgmState = new rr("fpgm", a.tables.fpgm), c.funcs = [], c.font = a, t.DEBUG && (h("log", "---EXEC FPGM---", " at utils/opentype.js:8987"), c.step = -1);
                                    try {
                                        St(c)
                                    } catch (e) {
                                        return h("log", "Hinting error in FPGM:" + e, " at utils/opentype.js:8994"), void(this._errorState = 3)
                                    }
                                }
                                rr.prototype = c, i = this._prepState = new rr("prep", a.tables.prep), i.ppem = n;
                                var o = a.tables.cvt;
                                if (o)
                                    for (var s = i.cvt = new Array(o.length), l = n / a.unitsPerEm, p = 0; p < o.length; p++) s[p] = o[p] * l;
                                else i.cvt = [];
                                t.DEBUG && (h("log", "---EXEC PREP---", " at utils/opentype.js:9025"), i.step = -1);
                                try {
                                    St(i)
                                } catch (e) {
                                    this._errorState < 2 && h("log", "Hinting error in PREP:" + e, " at utils/opentype.js:9033"), this._errorState = 2
                                }
                            }
                            if (!(this._errorState > 1)) try {
                                return Yt(r, i)
                            } catch (e) {
                                return this._errorState < 1 && (h("log", "Hinting error:" + e, " at utils/opentype.js:9045"), h("log", "Note: further hinting errors are silenced", " at utils/opentype.js:9046")), void(this._errorState = 1)
                            }
                        }
                    }, Yt = function(e, r) {
                        var n, a, i, c = r.ppem / r.font.unitsPerEm,
                            o = c,
                            s = e.components;
                        if (rr.prototype = r, s) {
                            var l = r.font;
                            a = [], n = [];
                            for (var p = 0; p < s.length; p++) {
                                var d = s[p],
                                    b = l.glyphs.get(d.glyphIndex);
                                i = new rr("glyf", b.instructions), t.DEBUG && (h("log", "---EXEC COMP " + p + "---", " at utils/opentype.js:9085"), i.step = -1), Bt(b, i, c, o);
                                for (var g = Math.round(d.dx * c), j = Math.round(d.dy * o), x = i.gZone, V = i.contours, f = 0; f < x.length; f++) {
                                    var F = x[f];
                                    F.xTouched = F.yTouched = !1, F.xo = F.x = F.x + g, F.yo = F.y = F.y + j
                                }
                                var k = a.length;
                                a.push.apply(a, x);
                                for (var m = 0; m < V.length; m++) n.push(V[m] + k)
                            }
                            e.instructions && !i.inhibitGridFit && (i = new rr("glyf", e.instructions), i.gZone = i.z0 = i.z1 = i.z2 = a, i.contours = n, a.push(new $t(0, 0), new $t(Math.round(e.advanceWidth * c), 0)), t.DEBUG && (h("log", "---EXEC COMPOSITE---", " at utils/opentype.js:9126"), i.step = -1), St(i), a.length -= 2)
                        } else i = new rr("glyf", e.instructions), t.DEBUG && (h("log", "---EXEC GLYPH---", " at utils/opentype.js:9069"), i.step = -1), Bt(e, i, c, o), a = i.gZone;
                        return a
                    }, Bt = function(e, r, n, a) {
                        for (var i, c, o, s = e.points || [], l = s.length, p = r.gZone = r.z0 = r.z1 = r.z2 = [], d = r.contours = [], b = 0; b < l; b++) i = s[b], p[b] = new $t(i.x * n, i.y * a, i.lastPointOfContour, i.onCurve);
                        for (var g = 0; g < l; g++) i = p[g], c || (c = i, d.push(g)), i.lastPointOfContour ? (i.nextPointOnContour = c, c.prevPointOnContour = i, c = void 0) : (o = p[g + 1], i.nextPointOnContour = o, o.prevPointOnContour = i);
                        if (!r.inhibitGridFit) {
                            if (t.DEBUG) {
                                h("log", "PROCESSING GLYPH", r.stack, " at utils/opentype.js:9190");
                                for (var j = 0; j < l; j++) h("log", j, p[j].x, p[j].y, " at utils/opentype.js:9192")
                            }
                            if (p.push(new $t(0, 0), new $t(Math.round(e.advanceWidth * n), 0)), St(r), p.length -= 2, t.DEBUG) {
                                h("log", "FINISHED GLYPH", r.stack, " at utils/opentype.js:9207");
                                for (var x = 0; x < l; x++) h("log", x, p[x].x, p[x].y, " at utils/opentype.js:9209")
                            }
                        }
                    }, St = function(e) {
                        var r = e.prog;
                        if (r) {
                            var n, h = r.length;
                            for (e.ip = 0; e.ip < h; e.ip++) {
                                if (t.DEBUG && e.step++, n = Dt[r[e.ip]], !n) throw new Error("unknown instruction: 0x" + Number(r[e.ip]).toString(16));
                                n(e)
                            }
                        }
                    }, Dt = [ar.bind(void 0, Ot), ar.bind(void 0, Ut), ir.bind(void 0, Ot), ir.bind(void 0, Ut), cr.bind(void 0, Ot), cr.bind(void 0, Ut), or.bind(void 0, 0), or.bind(void 0, 1), sr.bind(void 0, 0), sr.bind(void 0, 1), function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "SPVFS[]", n, a, " at utils/opentype.js:9416"), e.pv = e.dpv = Kt(a, n)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "SPVFS[]", n, a, " at utils/opentype.js:9428"), e.fv = Kt(a, n)
                    }, function(e) {
                        var r = e.stack,
                            n = e.pv;
                        t.DEBUG && h("log", e.step, "GPV[]", " at utils/opentype.js:9439"), r.push(16384 * n.x), r.push(16384 * n.y)
                    }, function(e) {
                        var r = e.stack,
                            n = e.fv;
                        t.DEBUG && h("log", e.step, "GFV[]", " at utils/opentype.js:9451"), r.push(16384 * n.x), r.push(16384 * n.y)
                    }, function(e) {
                        e.fv = e.pv, t.DEBUG && h("log", e.step, "SFVTPV[]", " at utils/opentype.js:9462")
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop(),
                            i = r.pop(),
                            c = r.pop(),
                            o = r.pop(),
                            s = e.z0,
                            l = e.z1,
                            p = s[n],
                            d = s[a],
                            b = l[i],
                            g = l[c],
                            j = e.z2[o];
                        t.DEBUG && h("log", "ISECT[], ", n, a, i, c, o, " at utils/opentype.js:9483");
                        var x = p.x,
                            V = p.y,
                            f = d.x,
                            F = d.y,
                            k = b.x,
                            m = b.y,
                            P = g.x,
                            u = g.y,
                            X = (x - f) * (m - u) - (V - F) * (k - P),
                            N = x * F - V * f,
                            H = k * u - m * P;
                        j.x = (N * (k - P) - H * (x - f)) / X, j.y = (N * (m - u) - H * (V - F)) / X
                    }, function(e) {
                        e.rp0 = e.stack.pop(), t.DEBUG && h("log", e.step, "SRP0[]", e.rp0, " at utils/opentype.js:9510")
                    }, function(e) {
                        e.rp1 = e.stack.pop(), t.DEBUG && h("log", e.step, "SRP1[]", e.rp1, " at utils/opentype.js:9518")
                    }, function(e) {
                        e.rp2 = e.stack.pop(), t.DEBUG && h("log", e.step, "SRP2[]", e.rp2, " at utils/opentype.js:9526")
                    }, function(e) {
                        var r = e.stack.pop();
                        switch (t.DEBUG && h("log", e.step, "SZP0[]", r, " at utils/opentype.js:9534"), e.zp0 = r, r) {
                            case 0:
                                e.tZone || nr(e), e.z0 = e.tZone;
                                break;
                            case 1:
                                e.z0 = e.gZone;
                                break;
                            default:
                                throw new Error("Invalid zone pointer")
                        }
                    }, function(e) {
                        var r = e.stack.pop();
                        switch (t.DEBUG && h("log", e.step, "SZP1[]", r, " at utils/opentype.js:9556"), e.zp1 = r, r) {
                            case 0:
                                e.tZone || nr(e), e.z1 = e.tZone;
                                break;
                            case 1:
                                e.z1 = e.gZone;
                                break;
                            default:
                                throw new Error("Invalid zone pointer")
                        }
                    }, function(e) {
                        var r = e.stack.pop();
                        switch (t.DEBUG && h("log", e.step, "SZP2[]", r, " at utils/opentype.js:9578"), e.zp2 = r, r) {
                            case 0:
                                e.tZone || nr(e), e.z2 = e.tZone;
                                break;
                            case 1:
                                e.z2 = e.gZone;
                                break;
                            default:
                                throw new Error("Invalid zone pointer")
                        }
                    }, function(e) {
                        var r = e.stack.pop();
                        switch (t.DEBUG && h("log", e.step, "SZPS[]", r, " at utils/opentype.js:9600"), e.zp0 = e.zp1 = e.zp2 = r, r) {
                            case 0:
                                e.tZone || nr(e), e.z0 = e.z1 = e.z2 = e.tZone;
                                break;
                            case 1:
                                e.z0 = e.z1 = e.z2 = e.gZone;
                                break;
                            default:
                                throw new Error("Invalid zone pointer")
                        }
                    }, function(e) {
                        e.loop = e.stack.pop(), t.DEBUG && h("log", e.step, "SLOOP[]", e.loop, " at utils/opentype.js:9622")
                    }, function(e) {
                        t.DEBUG && h("log", e.step, "RTG[]", " at utils/opentype.js:9628"), e.round = qt
                    }, function(e) {
                        t.DEBUG && h("log", e.step, "RTHG[]", " at utils/opentype.js:9636"), e.round = Et
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && h("log", e.step, "SMD[]", r, " at utils/opentype.js:9646"), e.minDis = r / 64
                    }, function(e) {
                        t.DEBUG && h("log", e.step, "ELSE[]", " at utils/opentype.js:9660"), hr(e, !1)
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && h("log", e.step, "JMPR[]", r, " at utils/opentype.js:9670"), e.ip += r - 1
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && h("log", e.step, "SCVTCI[]", r, " at utils/opentype.js:9681"), e.cvCutIn = r / 64
                    }, void 0, void 0, function(e) {
                        var r = e.stack;
                        t.DEBUG && h("log", e.step, "DUP[]", " at utils/opentype.js:9691"), r.push(r[r.length - 1])
                    }, lr, function(e) {
                        t.DEBUG && h("log", e.step, "CLEAR[]", " at utils/opentype.js:9707"), e.stack.length = 0
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "SWAP[]", " at utils/opentype.js:9720"), r.push(n), r.push(a)
                    }, function(e) {
                        var r = e.stack;
                        t.DEBUG && h("log", e.step, "DEPTH[]", " at utils/opentype.js:9731"), r.push(r.length)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "CINDEX[]", n, " at utils/opentype.js:9796"), r.push(r[r.length - n])
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "MINDEX[]", n, " at utils/opentype.js:9809"), r.push(r.splice(r.length - n, 1)[0])
                    }, void 0, void 0, void 0, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "LOOPCALL[]", n, a, " at utils/opentype.js:9743");
                        var i = e.ip,
                            c = e.prog;
                        e.prog = e.funcs[n];
                        for (var o = 0; o < a; o++) St(e), t.DEBUG && h("log", ++e.step, o + 1 < a ? "next loopcall" : "done loopcall", o, " at utils/opentype.js:9755");
                        e.ip = i, e.prog = c
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && h("log", e.step, "CALL[]", r, " at utils/opentype.js:9772");
                        var n = e.ip,
                            a = e.prog;
                        e.prog = e.funcs[r], St(e), e.ip = n, e.prog = a, t.DEBUG && h("log", ++e.step, "returning from", r, " at utils/opentype.js:9787")
                    }, function(e) {
                        if ("fpgm" !== e.env) throw new Error("FDEF not allowed here");
                        var r = e.stack,
                            n = e.prog,
                            a = e.ip,
                            i = r.pop(),
                            c = a;
                        t.DEBUG && h("log", e.step, "FDEF[]", i, " at utils/opentype.js:9825");
                        while (45 !== n[++a]);
                        e.ip = a, e.funcs[i] = n.slice(c + 1, a)
                    }, void 0, pr.bind(void 0, 0), pr.bind(void 0, 1), dr.bind(void 0, Ot), dr.bind(void 0, Ut), br.bind(void 0, 0), br.bind(void 0, 1), gr.bind(void 0, 0), gr.bind(void 0, 1), jr.bind(void 0, 0), jr.bind(void 0, 1), function(e) {
                        var r = e.stack,
                            n = e.loop,
                            a = e.fv,
                            i = r.pop() / 64,
                            c = e.z2;
                        while (n--) {
                            var o = r.pop(),
                                s = c[o];
                            t.DEBUG && h("log", e.step, (e.loop > 1 ? "loop " + (e.loop - n) + ": " : "") + "SHPIX[]", o, i, " at utils/opentype.js:9990"), a.setRelative(s, s, i), a.touch(s)
                        }
                        e.loop = 1
                    }, function(e) {
                        var r = e.stack,
                            n = e.rp1,
                            a = e.rp2,
                            i = e.loop,
                            c = e.z0[n],
                            o = e.z1[a],
                            s = e.fv,
                            l = e.dpv,
                            p = e.z2;
                        while (i--) {
                            var d = r.pop(),
                                b = p[d];
                            t.DEBUG && h("log", e.step, (e.loop > 1 ? "loop " + (e.loop - i) + ": " : "") + "IP[]", d, n, "<->", a, " at utils/opentype.js:10022"), s.interpolate(b, c, o, l), s.touch(b)
                        }
                        e.loop = 1
                    }, xr.bind(void 0, 0), xr.bind(void 0, 1), function(e) {
                        var r = e.stack,
                            n = e.rp0,
                            a = e.z0[n],
                            i = e.loop,
                            c = e.fv,
                            o = e.pv,
                            s = e.z1;
                        while (i--) {
                            var l = r.pop(),
                                p = s[l];
                            t.DEBUG && h("log", e.step, (e.loop > 1 ? "loop " + (e.loop - i) + ": " : "") + "ALIGNRP[]", l, " at utils/opentype.js:10074"), c.setRelative(p, a, 0, o), c.touch(p)
                        }
                        e.loop = 1
                    }, function(e) {
                        t.DEBUG && h("log", e.step, "RTDG[]", " at utils/opentype.js:10091"), e.round = Gt
                    }, Vr.bind(void 0, 0), Vr.bind(void 0, 1), function(e) {
                        var r = e.prog,
                            n = e.ip,
                            a = e.stack,
                            i = r[++n];
                        t.DEBUG && h("log", e.step, "NPUSHB[]", i, " at utils/opentype.js:10144");
                        for (var c = 0; c < i; c++) a.push(r[++n]);
                        e.ip = n
                    }, function(e) {
                        var r = e.ip,
                            n = e.prog,
                            a = e.stack,
                            i = n[++r];
                        t.DEBUG && h("log", e.step, "NPUSHW[]", i, " at utils/opentype.js:10159");
                        for (var c = 0; c < i; c++) {
                            var o = n[++r] << 8 | n[++r];
                            32768 & o && (o = -(1 + (65535 ^ o))), a.push(o)
                        }
                        e.ip = r
                    }, function(e) {
                        var r = e.stack,
                            n = e.store;
                        n || (n = e.store = []);
                        var a = r.pop(),
                            i = r.pop();
                        t.DEBUG && h("log", e.step, "WS", a, i, " at utils/opentype.js:10181"), n[i] = a
                    }, function(e) {
                        var r = e.stack,
                            n = e.store,
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "RS", a, " at utils/opentype.js:10194");
                        var i = n && n[a] || 0;
                        r.push(i)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "WCVTP", n, a, " at utils/opentype.js:10209"), e.cvt[a] = n / 64
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "RCVT", n, " at utils/opentype.js:10220"), r.push(64 * e.cvt[n])
                    }, fr.bind(void 0, 0), fr.bind(void 0, 1), void 0, Fr.bind(void 0, 0), Fr.bind(void 0, 1), function(e) {
                        t.DEBUG && h("log", e.step, "MPPEM[]", " at utils/opentype.js:10255"), e.stack.push(e.ppem)
                    }, void 0, function(e) {
                        t.DEBUG && h("log", e.step, "FLIPON[]", " at utils/opentype.js:10262"), e.autoFlip = !0
                    }, void 0, void 0, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "LT[]", n, a, " at utils/opentype.js:10273"), r.push(a < n ? 1 : 0)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "LTEQ[]", n, a, " at utils/opentype.js:10285"), r.push(a <= n ? 1 : 0)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "GT[]", n, a, " at utils/opentype.js:10297"), r.push(a > n ? 1 : 0)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "GTEQ[]", n, a, " at utils/opentype.js:10309"), r.push(a >= n ? 1 : 0)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "EQ[]", n, a, " at utils/opentype.js:10321"), r.push(n === a ? 1 : 0)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "NEQ[]", n, a, " at utils/opentype.js:10333"), r.push(n !== a ? 1 : 0)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "ODD[]", n, " at utils/opentype.js:10344"), r.push(Math.trunc(n) % 2 ? 1 : 0)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "EVEN[]", n, " at utils/opentype.js:10355"), r.push(Math.trunc(n) % 2 ? 0 : 1)
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && h("log", e.step, "IF[]", r, " at utils/opentype.js:10365"), r || (hr(e, !0), t.DEBUG && h("log", e.step, "EIF[]", " at utils/opentype.js:10372"))
                    }, function(e) {
                        t.DEBUG && h("log", e.step, "EIF[]", " at utils/opentype.js:10383")
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "AND[]", n, a, " at utils/opentype.js:10393"), r.push(n && a ? 1 : 0)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "OR[]", n, a, " at utils/opentype.js:10405"), r.push(n || a ? 1 : 0)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "NOT[]", n, " at utils/opentype.js:10416"), r.push(n ? 0 : 1)
                    }, kr.bind(void 0, 1), function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "SDB[]", n, " at utils/opentype.js:10458"), e.deltaBase = n
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "SDS[]", n, " at utils/opentype.js:10469"), e.deltaShift = Math.pow(.5, n)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "ADD[]", n, a, " at utils/opentype.js:10481"), r.push(a + n)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "SUB[]", n, a, " at utils/opentype.js:10493"), r.push(a - n)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "DIV[]", n, a, " at utils/opentype.js:10505"), r.push(64 * a / n)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "MUL[]", n, a, " at utils/opentype.js:10517"), r.push(a * n / 64)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "ABS[]", n, " at utils/opentype.js:10528"), r.push(Math.abs(n))
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "NEG[]", n, " at utils/opentype.js:10539"), r.push(-n)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "FLOOR[]", n, " at utils/opentype.js:10550"), r.push(64 * Math.floor(n / 64))
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop();
                        t.DEBUG && h("log", e.step, "CEILING[]", n, " at utils/opentype.js:10561"), r.push(64 * Math.ceil(n / 64))
                    }, mr.bind(void 0, 0), mr.bind(void 0, 1), mr.bind(void 0, 2), mr.bind(void 0, 3), void 0, void 0, void 0, void 0, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "WCVTF[]", n, a, " at utils/opentype.js:10584"), e.cvt[a] = n * e.ppem / e.font.unitsPerEm
                    }, kr.bind(void 0, 2), kr.bind(void 0, 3), Pr.bind(void 0, 1), Pr.bind(void 0, 2), Pr.bind(void 0, 3), function(e) {
                        var r, n = e.stack.pop();
                        switch (t.DEBUG && h("log", e.step, "SROUND[]", n, " at utils/opentype.js:10624"), e.round = Jt, 192 & n) {
                            case 0:
                                r = .5;
                                break;
                            case 64:
                                r = 1;
                                break;
                            case 128:
                                r = 2;
                                break;
                            default:
                                throw new Error("invalid SROUND value")
                        }
                        switch (e.srPeriod = r, 48 & n) {
                            case 0:
                                e.srPhase = 0;
                                break;
                            case 16:
                                e.srPhase = .25 * r;
                                break;
                            case 32:
                                e.srPhase = .5 * r;
                                break;
                            case 48:
                                e.srPhase = .75 * r;
                                break;
                            default:
                                throw new Error("invalid SROUND value")
                        }
                        n &= 15, e.srThreshold = 0 === n ? 0 : (n / 8 - .5) * r
                    }, function(e) {
                        var r, n = e.stack.pop();
                        switch (t.DEBUG && h("log", e.step, "S45ROUND[]", n, " at utils/opentype.js:10673"), e.round = Jt, 192 & n) {
                            case 0:
                                r = Math.sqrt(2) / 2;
                                break;
                            case 64:
                                r = Math.sqrt(2);
                                break;
                            case 128:
                                r = 2 * Math.sqrt(2);
                                break;
                            default:
                                throw new Error("invalid S45ROUND value")
                        }
                        switch (e.srPeriod = r, 48 & n) {
                            case 0:
                                e.srPhase = 0;
                                break;
                            case 16:
                                e.srPhase = .25 * r;
                                break;
                            case 32:
                                e.srPhase = .5 * r;
                                break;
                            case 48:
                                e.srPhase = .75 * r;
                                break;
                            default:
                                throw new Error("invalid S45ROUND value")
                        }
                        n &= 15, e.srThreshold = 0 === n ? 0 : (n / 8 - .5) * r
                    }, void 0, void 0, function(e) {
                        t.DEBUG && h("log", e.step, "ROFF[]", " at utils/opentype.js:10721"), e.round = Mt
                    }, void 0, function(e) {
                        t.DEBUG && h("log", e.step, "RUTG[]", " at utils/opentype.js:10729"), e.round = Wt
                    }, function(e) {
                        t.DEBUG && h("log", e.step, "RDTG[]", " at utils/opentype.js:10737"), e.round = _t
                    }, lr, lr, void 0, void 0, void 0, void 0, void 0, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && h("log", e.step, "SCANCTRL[]", r, " at utils/opentype.js:10749")
                    }, ur.bind(void 0, 0), ur.bind(void 0, 1), function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = 0;
                        t.DEBUG && h("log", e.step, "GETINFO[]", n, " at utils/opentype.js:10784"), 1 & n && (a = 35), 32 & n && (a |= 4096), r.push(a)
                    }, void 0, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop(),
                            i = r.pop();
                        t.DEBUG && h("log", e.step, "ROLL[]", " at utils/opentype.js:10806"), r.push(a), r.push(n), r.push(i)
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "MAX[]", n, a, " at utils/opentype.js:10820"), r.push(Math.max(a, n))
                    }, function(e) {
                        var r = e.stack,
                            n = r.pop(),
                            a = r.pop();
                        t.DEBUG && h("log", e.step, "MIN[]", n, a, " at utils/opentype.js:10832"), r.push(Math.min(a, n))
                    }, function(e) {
                        var r = e.stack.pop();
                        t.DEBUG && h("log", e.step, "SCANTYPE[]", r, " at utils/opentype.js:10842")
                    }, function(e) {
                        var r = e.stack.pop(),
                            n = e.stack.pop();
                        switch (t.DEBUG && h("log", e.step, "INSTCTRL[]", r, n, " at utils/opentype.js:10851"), r) {
                            case 1:
                                return void(e.inhibitGridFit = !!n);
                            case 2:
                                return void(e.ignoreCvt = !!n);
                            default:
                                throw new Error("invalid INSTCTRL[] selector")
                        }
                    }, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, Xr.bind(void 0, 1), Xr.bind(void 0, 2), Xr.bind(void 0, 3), Xr.bind(void 0, 4), Xr.bind(void 0, 5), Xr.bind(void 0, 6), Xr.bind(void 0, 7), Xr.bind(void 0, 8), Nr.bind(void 0, 1), Nr.bind(void 0, 2), Nr.bind(void 0, 3), Nr.bind(void 0, 4), Nr.bind(void 0, 5), Nr.bind(void 0, 6), Nr.bind(void 0, 7), Nr.bind(void 0, 8), Hr.bind(void 0, 0, 0, 0, 0, 0), Hr.bind(void 0, 0, 0, 0, 0, 1), Hr.bind(void 0, 0, 0, 0, 0, 2), Hr.bind(void 0, 0, 0, 0, 0, 3), Hr.bind(void 0, 0, 0, 0, 1, 0), Hr.bind(void 0, 0, 0, 0, 1, 1), Hr.bind(void 0, 0, 0, 0, 1, 2), Hr.bind(void 0, 0, 0, 0, 1, 3), Hr.bind(void 0, 0, 0, 1, 0, 0), Hr.bind(void 0, 0, 0, 1, 0, 1), Hr.bind(void 0, 0, 0, 1, 0, 2), Hr.bind(void 0, 0, 0, 1, 0, 3), Hr.bind(void 0, 0, 0, 1, 1, 0), Hr.bind(void 0, 0, 0, 1, 1, 1), Hr.bind(void 0, 0, 0, 1, 1, 2), Hr.bind(void 0, 0, 0, 1, 1, 3), Hr.bind(void 0, 0, 1, 0, 0, 0), Hr.bind(void 0, 0, 1, 0, 0, 1), Hr.bind(void 0, 0, 1, 0, 0, 2), Hr.bind(void 0, 0, 1, 0, 0, 3), Hr.bind(void 0, 0, 1, 0, 1, 0), Hr.bind(void 0, 0, 1, 0, 1, 1), Hr.bind(void 0, 0, 1, 0, 1, 2), Hr.bind(void 0, 0, 1, 0, 1, 3), Hr.bind(void 0, 0, 1, 1, 0, 0), Hr.bind(void 0, 0, 1, 1, 0, 1), Hr.bind(void 0, 0, 1, 1, 0, 2), Hr.bind(void 0, 0, 1, 1, 0, 3), Hr.bind(void 0, 0, 1, 1, 1, 0), Hr.bind(void 0, 0, 1, 1, 1, 1), Hr.bind(void 0, 0, 1, 1, 1, 2), Hr.bind(void 0, 0, 1, 1, 1, 3), Hr.bind(void 0, 1, 0, 0, 0, 0), Hr.bind(void 0, 1, 0, 0, 0, 1), Hr.bind(void 0, 1, 0, 0, 0, 2), Hr.bind(void 0, 1, 0, 0, 0, 3), Hr.bind(void 0, 1, 0, 0, 1, 0), Hr.bind(void 0, 1, 0, 0, 1, 1), Hr.bind(void 0, 1, 0, 0, 1, 2), Hr.bind(void 0, 1, 0, 0, 1, 3), Hr.bind(void 0, 1, 0, 1, 0, 0), Hr.bind(void 0, 1, 0, 1, 0, 1), Hr.bind(void 0, 1, 0, 1, 0, 2), Hr.bind(void 0, 1, 0, 1, 0, 3), Hr.bind(void 0, 1, 0, 1, 1, 0), Hr.bind(void 0, 1, 0, 1, 1, 1), Hr.bind(void 0, 1, 0, 1, 1, 2), Hr.bind(void 0, 1, 0, 1, 1, 3), Hr.bind(void 0, 1, 1, 0, 0, 0), Hr.bind(void 0, 1, 1, 0, 0, 1), Hr.bind(void 0, 1, 1, 0, 0, 2), Hr.bind(void 0, 1, 1, 0, 0, 3), Hr.bind(void 0, 1, 1, 0, 1, 0), Hr.bind(void 0, 1, 1, 0, 1, 1), Hr.bind(void 0, 1, 1, 0, 1, 2), Hr.bind(void 0, 1, 1, 0, 1, 3), Hr.bind(void 0, 1, 1, 1, 0, 0), Hr.bind(void 0, 1, 1, 1, 0, 1), Hr.bind(void 0, 1, 1, 1, 0, 2), Hr.bind(void 0, 1, 1, 1, 0, 3), Hr.bind(void 0, 1, 1, 1, 1, 0), Hr.bind(void 0, 1, 1, 1, 1, 1), Hr.bind(void 0, 1, 1, 1, 1, 2), Hr.bind(void 0, 1, 1, 1, 1, 3)], zr.prototype.setState = function(e, t) {
                        return this.state[e] = t, this.activeState = {
                            key: e,
                            value: this.state[e]
                        }, this.activeState
                    }, zr.prototype.getState = function(e) {
                        return this.state[e] || null
                    }, yr.prototype.inboundIndex = function(e) {
                        return e >= 0 && e < this.tokens.length
                    }, yr.prototype.composeRUD = function(e) {
                        var t = this,
                            r = e.map((function(e) {
                                return t[e[0]].apply(t, e.slice(1).concat(!0))
                            })),
                            n = function(e) {
                                return "object" === s(e) && e.hasOwnProperty("FAIL")
                            };
                        if (r.every(n)) return {
                            FAIL: "composeRUD: one or more operations hasn't completed successfully",
                            report: r.filter(n)
                        };
                        this.dispatch("composeRUD", [r.filter((function(e) {
                            return !n(e)
                        }))])
                    }, yr.prototype.replaceRange = function(e, t, r, n) {
                        t = null !== t ? t : this.tokens.length;
                        var h = r.every((function(e) {
                            return e instanceof zr
                        }));
                        if (!isNaN(e) && this.inboundIndex(e) && h) {
                            var a = this.tokens.splice.apply(this.tokens, [e, t].concat(r));
                            return n || this.dispatch("replaceToken", [e, t, r]), [a, r]
                        }
                        return {
                            FAIL: "replaceRange: invalid tokens or startIndex."
                        }
                    }, yr.prototype.replaceToken = function(e, t, r) {
                        if (!isNaN(e) && this.inboundIndex(e) && t instanceof zr) {
                            var n = this.tokens.splice(e, 1, t);
                            return r || this.dispatch("replaceToken", [e, t]), [n[0], t]
                        }
                        return {
                            FAIL: "replaceToken: invalid token or index."
                        }
                    }, yr.prototype.removeRange = function(e, t, r) {
                        t = isNaN(t) ? this.tokens.length : t;
                        var n = this.tokens.splice(e, t);
                        return r || this.dispatch("removeRange", [n, e, t]), n
                    }, yr.prototype.removeToken = function(e, t) {
                        if (!isNaN(e) && this.inboundIndex(e)) {
                            var r = this.tokens.splice(e, 1);
                            return t || this.dispatch("removeToken", [r, e]), r
                        }
                        return {
                            FAIL: "removeToken: invalid token index."
                        }
                    }, yr.prototype.insertToken = function(e, t, r) {
                        var n = e.every((function(e) {
                            return e instanceof zr
                        }));
                        return n ? (this.tokens.splice.apply(this.tokens, [t, 0].concat(e)), r || this.dispatch("insertToken", [e, t]), e) : {
                            FAIL: "insertToken: invalid token(s)."
                        }
                    }, yr.prototype.registerModifier = function(e, t, r) {
                        this.events.newToken.subscribe((function(n, h) {
                            var a = [n, h],
                                i = null === t || !0 === t.apply(this, a),
                                c = [n, h];
                            if (i) {
                                var o = r.apply(this, c);
                                n.setState(e, o)
                            }
                        })), this.registeredModifiers.push(e)
                    }, Ir.prototype.subscribe = function(e) {
                        return "function" === typeof e ? this.subscribers.push(e) - 1 : {
                            FAIL: "invalid '" + this.eventId + "' event handler"
                        }
                    }, Ir.prototype.unsubscribe = function(e) {
                        this.subscribers.splice(e, 1)
                    }, vr.prototype.setCurrentIndex = function(e) {
                        this.index = e, this.current = this.context[e], this.backtrack = this.context.slice(0, e), this.lookahead = this.context.slice(e + 1)
                    }, vr.prototype.get = function(e) {
                        switch (!0) {
                            case 0 === e:
                                return this.current;
                            case e < 0 && Math.abs(e) <= this.backtrack.length:
                                return this.backtrack.slice(e)[0];
                            case e > 0 && e <= this.lookahead.length:
                                return this.lookahead[e - 1];
                            default:
                                return null
                        }
                    }, yr.prototype.rangeToText = function(e) {
                        if (e instanceof Qr) return this.getRangeTokens(e).map((function(e) {
                            return e.char
                        })).join("")
                    }, yr.prototype.getText = function() {
                        return this.tokens.map((function(e) {
                            return e.char
                        })).join("")
                    }, yr.prototype.getContext = function(e) {
                        var t = this.registeredContexts[e];
                        return t || null
                    }, yr.prototype.on = function(e, t) {
                        var r = this.events[e];
                        return r ? r.subscribe(t) : null
                    }, yr.prototype.dispatch = function(e, t) {
                        var r = this,
                            n = this.events[e];
                        n instanceof Ir && n.subscribers.forEach((function(e) {
                            e.apply(r, t || [])
                        }))
                    }, yr.prototype.registerContextChecker = function(e, t, r) {
                        if (this.getContext(e)) return {
                            FAIL: "context name '" + e + "' is already registered."
                        };
                        if ("function" !== typeof t) return {
                            FAIL: "missing context start check."
                        };
                        if ("function" !== typeof r) return {
                            FAIL: "missing context end check."
                        };
                        var n = new Rr(e, t, r);
                        return this.registeredContexts[e] = n, this.contextCheckers.push(n), n
                    }, yr.prototype.getRangeTokens = function(e) {
                        var t = e.startIndex + e.endOffset;
                        return [].concat(this.tokens.slice(e.startIndex, t))
                    }, yr.prototype.getContextRanges = function(e) {
                        var t = this.getContext(e);
                        return t ? t.ranges : {
                            FAIL: "context checker '" + e + "' is not registered."
                        }
                    }, yr.prototype.resetContextsRanges = function() {
                        var e = this.registeredContexts;
                        for (var t in e)
                            if (e.hasOwnProperty(t)) {
                                var r = e[t];
                                r.ranges = []
                            }
                    }, yr.prototype.updateContextsRanges = function() {
                        this.resetContextsRanges();
                        for (var e = this.tokens.map((function(e) {
                                return e.char
                            })), t = 0; t < e.length; t++) {
                            var r = new vr(e, t);
                            this.runContextCheck(r)
                        }
                        this.dispatch("updateContextsRanges", [this.registeredContexts])
                    }, yr.prototype.setEndOffset = function(e, t) {
                        var r = this.getContext(t).openRange.startIndex,
                            n = new Qr(r, e, t),
                            h = this.getContext(t).ranges;
                        return n.rangeId = t + "." + h.length, h.push(n), this.getContext(t).openRange = null, n
                    }, yr.prototype.runContextCheck = function(e) {
                        var t = this,
                            r = e.index;
                        this.contextCheckers.forEach((function(n) {
                            var h = n.contextName,
                                a = t.getContext(h).openRange;
                            if (!a && n.checkStart(e) && (a = new Qr(r, null, h), t.getContext(h).openRange = a, t.dispatch("contextStart", [h, r])), a && n.checkEnd(e)) {
                                var i = r - a.startIndex + 1,
                                    c = t.setEndOffset(i, h);
                                t.dispatch("contextEnd", [h, c])
                            }
                        }))
                    }, yr.prototype.tokenize = function(e) {
                        this.tokens = [], this.resetContextsRanges();
                        var t = Array.from(e);
                        this.dispatch("start");
                        for (var r = 0; r < t.length; r++) {
                            var n = t[r],
                                h = new vr(t, r);
                            this.dispatch("next", [h]), this.runContextCheck(h);
                            var a = new zr(n);
                            this.tokens.push(a), this.dispatch("newToken", [a, h])
                        }
                        return this.dispatch("end", [this.tokens]), this.tokens
                    }, Yr.prototype.getDefaultScriptFeaturesIndexes = function() {
                        for (var e = this.font.tables.gsub.scripts, t = 0; t < e.length; t++) {
                            var r = e[t];
                            if ("DFLT" === r.tag) return r.script.defaultLangSys.featureIndexes
                        }
                        return []
                    }, Yr.prototype.getScriptFeaturesIndexes = function(e) {
                        var t = this.font.tables;
                        if (!t.gsub) return [];
                        if (!e) return this.getDefaultScriptFeaturesIndexes();
                        for (var r = this.font.tables.gsub.scripts, n = 0; n < r.length; n++) {
                            var h = r[n];
                            if (h.tag === e && h.script.defaultLangSys) return h.script.defaultLangSys.featureIndexes;
                            var a = h.langSysRecords;
                            if (a)
                                for (var i = 0; i < a.length; i++) {
                                    var c = a[i];
                                    if (c.tag === e) {
                                        var o = c.langSys;
                                        return o.featureIndexes
                                    }
                                }
                        }
                        return this.getDefaultScriptFeaturesIndexes()
                    }, Yr.prototype.mapTagsToFeatures = function(e, t) {
                        for (var r = {}, n = 0; n < e.length; n++) {
                            var h = e[n].tag,
                                a = e[n].feature;
                            r[h] = a
                        }
                        this.features[t].tags = r
                    }, Yr.prototype.getScriptFeatures = function(e) {
                        var t = this.features[e];
                        if (this.features.hasOwnProperty(e)) return t;
                        var r = this.getScriptFeaturesIndexes(e);
                        if (!r) return null;
                        var n = this.font.tables.gsub;
                        return t = r.map((function(e) {
                            return n.features[e]
                        })), this.features[e] = t, this.mapTagsToFeatures(t, e), t
                    }, Yr.prototype.getSubstitutionType = function(e, t) {
                        var r = e.lookupType.toString(),
                            n = t.substFormat.toString();
                        return r + n
                    }, Yr.prototype.getLookupMethod = function(e, t) {
                        var r = this,
                            n = this.getSubstitutionType(e, t);
                        switch (n) {
                            case "11":
                                return function(e) {
                                    return Lr.apply(r, [e, t])
                                };
                            case "12":
                                return function(e) {
                                    return Mr.apply(r, [e, t])
                                };
                            case "63":
                                return function(e) {
                                    return Gr.apply(r, [e, t])
                                };
                            case "41":
                                return function(e) {
                                    return Er.apply(r, [e, t])
                                };
                            case "21":
                                return function(e) {
                                    return Wr.apply(r, [e, t])
                                };
                            default:
                                throw new Error("lookupType: " + e.lookupType + " - substFormat: " + t.substFormat + " is not yet supported")
                        }
                    }, Yr.prototype.lookupFeature = function(e) {
                        var t = e.contextParams,
                            r = t.index,
                            n = this.getFeature({
                                tag: e.tag,
                                script: e.script
                            });
                        if (!n) return new Error("font '" + this.font.names.fullName.en + "' doesn't support feature '" + e.tag + "' for script '" + e.script + "'.");
                        for (var h = this.getFeatureLookups(n), a = [].concat(t.context), i = 0; i < h.length; i++)
                            for (var c = h[i], o = this.getLookupSubtables(c), s = 0; s < o.length; s++) {
                                var l = o[s],
                                    p = this.getSubstitutionType(c, l),
                                    d = this.getLookupMethod(c, l),
                                    b = void 0;
                                switch (p) {
                                    case "11":
                                        b = d(t.current), b && a.splice(r, 1, new Br({
                                            id: 11,
                                            tag: e.tag,
                                            substitution: b
                                        }));
                                        break;
                                    case "12":
                                        b = d(t.current), b && a.splice(r, 1, new Br({
                                            id: 12,
                                            tag: e.tag,
                                            substitution: b
                                        }));
                                        break;
                                    case "63":
                                        b = d(t), Array.isArray(b) && b.length && a.splice(r, 1, new Br({
                                            id: 63,
                                            tag: e.tag,
                                            substitution: b
                                        }));
                                        break;
                                    case "41":
                                        b = d(t), b && a.splice(r, 1, new Br({
                                            id: 41,
                                            tag: e.tag,
                                            substitution: b
                                        }));
                                        break;
                                    case "21":
                                        b = d(t.current), b && a.splice(r, 1, new Br({
                                            id: 21,
                                            tag: e.tag,
                                            substitution: b
                                        }));
                                        break
                                }
                                t = new vr(a, r), Array.isArray(b) && !b.length || (b = null)
                            }
                        return a.length ? a : null
                    }, Yr.prototype.supports = function(e) {
                        if (!e.script) return !1;
                        this.getScriptFeatures(e.script);
                        var t = this.features.hasOwnProperty(e.script);
                        if (!e.tag) return t;
                        var r = this.features[e.script].some((function(t) {
                            return t.tag === e.tag
                        }));
                        return t && r
                    }, Yr.prototype.getLookupSubtables = function(e) {
                        return e.subtables || null
                    }, Yr.prototype.getLookupByIndex = function(e) {
                        var t = this.font.tables.gsub.lookups;
                        return t[e] || null
                    }, Yr.prototype.getFeatureLookups = function(e) {
                        return e.lookupListIndexes.map(this.getLookupByIndex.bind(this))
                    }, Yr.prototype.getFeature = function(e) {
                        if (!this.font) return {
                            FAIL: "No font was found"
                        };
                        this.features.hasOwnProperty(e.script) || this.getScriptFeatures(e.script);
                        var t = this.features[e.script];
                        return t ? t.tags[e.tag] ? this.features[e.script].tags[e.tag] : null : {
                            FAIL: "No feature for script " + e.script
                        }
                    };
                    var _r = {
                        startCheck: function(e) {
                            var t = e.current,
                                r = e.get(-1);
                            return null === r && Cr(t) || !Cr(r) && Cr(t)
                        },
                        endCheck: function(e) {
                            var t = e.get(1);
                            return null === t || !Cr(t)
                        }
                    };
                    var Jr = {
                        startCheck: function(e) {
                            var t = e.current,
                                r = e.get(-1);
                            return (Cr(t) || Dr(t)) && !Cr(r)
                        },
                        endCheck: function(e) {
                            var t = e.get(1);
                            switch (!0) {
                                case null === t:
                                    return !0;
                                case !Cr(t) && !Dr(t):
                                    var r = function(e) {
                                        return /\s/.test(e)
                                    }(t);
                                    if (!r) return !0;
                                    if (r) {
                                        var n;
                                        if (n = e.lookahead.some((function(e) {
                                                return Cr(e) || Dr(e)
                                            })), !n) return !0
                                    }
                                    break;
                                default:
                                    return !1
                            }
                        }
                    };
                    var Ur = {
                        11: function(e, t, r) {
                            t[r].setState(e.tag, e.substitution)
                        },
                        12: function(e, t, r) {
                            t[r].setState(e.tag, e.substitution)
                        },
                        63: function(e, t, r) {
                            e.substitution.forEach((function(n, h) {
                                var a = t[r + h];
                                a.setState(e.tag, n)
                            }))
                        },
                        41: function(e, t, r) {
                            var n = t[r];
                            n.setState(e.tag, e.substitution.ligGlyph);
                            for (var h = e.substitution.components.length, a = 0; a < h; a++) n = t[r + a + 1], n.setState("deleted", !0)
                        }
                    };

                    function Or(e, t, r) {
                        e instanceof Br && Ur[e.id] && Ur[e.id](e, t, r)
                    }

                    function Zr(e) {
                        var t = this,
                            r = this.featuresTags["arab"],
                            n = this.tokenizer.getRangeTokens(e);
                        if (1 !== n.length) {
                            var a = new vr(n.map((function(e) {
                                    return e.getState("glyphIndex")
                                })), 0),
                                i = new vr(n.map((function(e) {
                                    return e.char
                                })), 0);
                            n.forEach((function(e, c) {
                                if (!Dr(e.char)) {
                                    a.setCurrentIndex(c), i.setCurrentIndex(c);
                                    var o, s = 0;
                                    switch (function(e) {
                                            for (var t = [].concat(e.backtrack), r = t.length - 1; r >= 0; r--) {
                                                var n = t[r],
                                                    h = Ar(n),
                                                    a = Dr(n);
                                                if (!h && !a) return !0;
                                                if (h) return !1
                                            }
                                            return !1
                                        }(i) && (s |= 1), function(e) {
                                            if (Ar(e.current)) return !1;
                                            for (var t = 0; t < e.lookahead.length; t++) {
                                                var r = e.lookahead[t],
                                                    n = Dr(r);
                                                if (!n) return !0
                                            }
                                            return !1
                                        }(i) && (s |= 2), s) {
                                        case 1:
                                            o = "fina";
                                            break;
                                        case 2:
                                            o = "init";
                                            break;
                                        case 3:
                                            o = "medi";
                                            break
                                    }
                                    if (-1 !== r.indexOf(o)) {
                                        var l = t.query.lookupFeature({
                                            tag: o,
                                            script: "arab",
                                            contextParams: a
                                        });
                                        if (l instanceof Error) return h("info", l.message, " at utils/opentype.js:12717");
                                        l.forEach((function(e, t) {
                                            e instanceof Br && (Or(e, n, t), a.context[t] = e.substitution)
                                        }))
                                    }
                                }
                            }))
                        }
                    }

                    function Kr(e, t) {
                        var r = e.map((function(e) {
                            return e.activeState.value
                        }));
                        return new vr(r, t || 0)
                    }

                    function $r(e) {
                        var t = this,
                            r = this.tokenizer.getRangeTokens(e),
                            n = Kr(r);
                        n.context.forEach((function(e, h) {
                            n.setCurrentIndex(h);
                            var a = t.query.lookupFeature({
                                tag: "rlig",
                                script: "arab",
                                contextParams: n
                            });
                            a.length && (a.forEach((function(e) {
                                return Or(e, r, h)
                            })), n = Kr(r))
                        }))
                    }
                    var en = {
                        startCheck: function(e) {
                            var t = e.current,
                                r = e.get(-1);
                            return null === r && Sr(t) || !Sr(r) && Sr(t)
                        },
                        endCheck: function(e) {
                            var t = e.get(1);
                            return null === t || !Sr(t)
                        }
                    };

                    function tn(e, t) {
                        var r = e.map((function(e) {
                            return e.activeState.value
                        }));
                        return new vr(r, t || 0)
                    }

                    function rn(e) {
                        var t = this,
                            r = this.tokenizer.getRangeTokens(e),
                            n = tn(r);
                        n.context.forEach((function(e, h) {
                            n.setCurrentIndex(h);
                            var a = t.query.lookupFeature({
                                tag: "liga",
                                script: "latn",
                                contextParams: n
                            });
                            a.length && (a.forEach((function(e) {
                                return Or(e, r, h)
                            })), n = tn(r))
                        }))
                    }

                    function nn(e) {
                        this.baseDir = e || "ltr", this.tokenizer = new yr, this.featuresTags = {}
                    }

                    function hn(e) {
                        var t = this.contextChecks[e + "Check"];
                        return this.tokenizer.registerContextChecker(e, t.startCheck, t.endCheck)
                    }

                    function an() {
                        return hn.call(this, "latinWord"), hn.call(this, "arabicWord"), hn.call(this, "arabicSentence"), this.tokenizer.tokenize(this.text)
                    }

                    function cn() {
                        var e = this,
                            t = this.tokenizer.getContextRanges("arabicSentence");
                        t.forEach((function(t) {
                            var r = e.tokenizer.getRangeTokens(t);
                            e.tokenizer.replaceRange(t.startIndex, t.endOffset, r.reverse())
                        }))
                    }

                    function on() {
                        if (-1 === this.tokenizer.registeredModifiers.indexOf("glyphIndex")) throw new Error("glyphIndex modifier is required to apply arabic presentation features.")
                    }

                    function sn() {
                        var e = this;
                        if (this.featuresTags.hasOwnProperty("arab")) {
                            on.call(this);
                            var t = this.tokenizer.getContextRanges("arabicWord");
                            t.forEach((function(t) {
                                Zr.call(e, t)
                            }))
                        }
                    }

                    function ln() {
                        var e = this;
                        if (this.featuresTags.hasOwnProperty("arab")) {
                            var t = this.featuresTags["arab"];
                            if (-1 !== t.indexOf("rlig")) {
                                on.call(this);
                                var r = this.tokenizer.getContextRanges("arabicWord");
                                r.forEach((function(t) {
                                    $r.call(e, t)
                                }))
                            }
                        }
                    }

                    function pn() {
                        var e = this;
                        if (this.featuresTags.hasOwnProperty("latn")) {
                            var t = this.featuresTags["latn"];
                            if (-1 !== t.indexOf("liga")) {
                                on.call(this);
                                var r = this.tokenizer.getContextRanges("latinWord");
                                r.forEach((function(t) {
                                    rn.call(e, t)
                                }))
                            }
                        }
                    }

                    function dn(e) {
                        e = e || {}, e.tables = e.tables || {}, e.empty || (vt(e.familyName, "When creating a new Font object, familyName is required."), vt(e.styleName, "When creating a new Font object, styleName is required."), vt(e.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), vt(e.ascender, "When creating a new Font object, ascender is required."), vt(e.descender <= 0, "When creating a new Font object, negative descender value is required."), this.names = {
                            fontFamily: {
                                en: e.familyName || " "
                            },
                            fontSubfamily: {
                                en: e.styleName || " "
                            },
                            fullName: {
                                en: e.fullName || e.familyName + " " + e.styleName
                            },
                            postScriptName: {
                                en: e.postScriptName || (e.familyName + e.styleName).replace(/\s/g, "")
                            },
                            designer: {
                                en: e.designer || " "
                            },
                            designerURL: {
                                en: e.designerURL || " "
                            },
                            manufacturer: {
                                en: e.manufacturer || " "
                            },
                            manufacturerURL: {
                                en: e.manufacturerURL || " "
                            },
                            license: {
                                en: e.license || " "
                            },
                            licenseURL: {
                                en: e.licenseURL || " "
                            },
                            version: {
                                en: e.version || "Version 0.1"
                            },
                            description: {
                                en: e.description || " "
                            },
                            copyright: {
                                en: e.copyright || " "
                            },
                            trademark: {
                                en: e.trademark || " "
                            }
                        }, this.unitsPerEm = e.unitsPerEm || 1e3, this.ascender = e.ascender, this.descender = e.descender, this.createdTimestamp = e.createdTimestamp, this.tables = Object.assign(e.tables, {
                            os2: Object.assign({
                                usWeightClass: e.weightClass || this.usWeightClasses.MEDIUM,
                                usWidthClass: e.widthClass || this.usWidthClasses.MEDIUM,
                                fsSelection: e.fsSelection || this.fsSelectionValues.REGULAR
                            }, e.tables.os2)
                        })), this.supported = !0, this.glyphs = new ue.GlyphSet(this, e.glyphs || []), this.encoding = new ge(this), this.position = new Nt(this), this.substitution = new Ht(this), this.tables = this.tables || {}, this._push = null, this._hmtxTableData = {}, Object.defineProperty(this, "hinting", {
                            get: function() {
                                return this._hinting ? this._hinting : "truetype" === this.outlinesFormat ? this._hinting = new Lt(this) : void 0
                            }
                        })
                    }

                    function bn(e, t) {
                        var r = JSON.stringify(e),
                            n = 256;
                        for (var h in t) {
                            var a = parseInt(h);
                            if (a && !(a < 256)) {
                                if (JSON.stringify(t[h]) === r) return a;
                                n <= a && (n = a + 1)
                            }
                        }
                        return t[n] = e, n
                    }

                    function gn(e, t, r) {
                        var n = bn(t.name, r);
                        return [{
                            name: "tag_" + e,
                            type: "TAG",
                            value: t.tag
                        }, {
                            name: "minValue_" + e,
                            type: "FIXED",
                            value: t.minValue << 16
                        }, {
                            name: "defaultValue_" + e,
                            type: "FIXED",
                            value: t.defaultValue << 16
                        }, {
                            name: "maxValue_" + e,
                            type: "FIXED",
                            value: t.maxValue << 16
                        }, {
                            name: "flags_" + e,
                            type: "USHORT",
                            value: 0
                        }, {
                            name: "nameID_" + e,
                            type: "USHORT",
                            value: n
                        }]
                    }

                    function jn(e, t, r) {
                        var n = {},
                            h = new ce.Parser(e, t);
                        return n.tag = h.parseTag(), n.minValue = h.parseFixed(), n.defaultValue = h.parseFixed(), n.maxValue = h.parseFixed(), h.skip("uShort", 1), n.name = r[h.parseUShort()] || {}, n
                    }

                    function xn(e, t, r, n) {
                        for (var h = bn(t.name, n), a = [{
                                name: "nameID_" + e,
                                type: "USHORT",
                                value: h
                            }, {
                                name: "flags_" + e,
                                type: "USHORT",
                                value: 0
                            }], i = 0; i < r.length; ++i) {
                            var c = r[i].tag;
                            a.push({
                                name: "axis_" + e + " " + c,
                                type: "FIXED",
                                value: t.coordinates[c] << 16
                            })
                        }
                        return a
                    }

                    function Vn(e, t, r, n) {
                        var h = {},
                            a = new ce.Parser(e, t);
                        h.name = n[a.parseUShort()] || {}, a.skip("uShort", 1), h.coordinates = {};
                        for (var i = 0; i < r.length; ++i) h.coordinates[r[i].tag] = a.parseFixed();
                        return h
                    }
                    nn.prototype.setText = function(e) {
                        this.text = e
                    }, nn.prototype.contextChecks = {
                        latinWordCheck: en,
                        arabicWordCheck: _r,
                        arabicSentenceCheck: Jr
                    }, nn.prototype.registerFeatures = function(e, t) {
                        var r = this,
                            n = t.filter((function(t) {
                                return r.query.supports({
                                    script: e,
                                    tag: t
                                })
                            }));
                        this.featuresTags.hasOwnProperty(e) ? this.featuresTags[e] = this.featuresTags[e].concat(n) : this.featuresTags[e] = n
                    }, nn.prototype.applyFeatures = function(e, t) {
                        if (!e) throw new Error("No valid font was provided to apply features");
                        this.query || (this.query = new Yr(e));
                        for (var r = 0; r < t.length; r++) {
                            var n = t[r];
                            this.query.supports({
                                script: n.script
                            }) && this.registerFeatures(n.script, n.tags)
                        }
                    }, nn.prototype.registerModifier = function(e, t, r) {
                        this.tokenizer.registerModifier(e, t, r)
                    }, nn.prototype.checkContextReady = function(e) {
                        return !!this.tokenizer.getContext(e)
                    }, nn.prototype.applyFeaturesToContexts = function() {
                        this.checkContextReady("arabicWord") && (sn.call(this), ln.call(this)), this.checkContextReady("latinWord") && pn.call(this), this.checkContextReady("arabicSentence") && cn.call(this)
                    }, nn.prototype.processText = function(e) {
                        this.text && this.text === e || (this.setText(e), an.call(this), this.applyFeaturesToContexts())
                    }, nn.prototype.getBidiText = function(e) {
                        return this.processText(e), this.tokenizer.getText()
                    }, nn.prototype.getTextGlyphs = function(e) {
                        this.processText(e);
                        for (var t = [], r = 0; r < this.tokenizer.tokens.length; r++) {
                            var n = this.tokenizer.tokens[r];
                            if (!n.state.deleted) {
                                var h = n.activeState.value;
                                t.push(Array.isArray(h) ? h[0] : h)
                            }
                        }
                        return t
                    }, dn.prototype.hasChar = function(e) {
                        return null !== this.encoding.charToGlyphIndex(e)
                    }, dn.prototype.charToGlyphIndex = function(e) {
                        return this.encoding.charToGlyphIndex(e)
                    }, dn.prototype.charToGlyph = function(e) {
                        var t = this.charToGlyphIndex(e),
                            r = this.glyphs.get(t);
                        return r || (r = this.glyphs.get(0)), r
                    }, dn.prototype.updateFeatures = function(e) {
                        return this.defaultRenderOptions.features.map((function(t) {
                            return "latn" === t.script ? {
                                script: "latn",
                                tags: t.tags.filter((function(t) {
                                    return e[t]
                                }))
                            } : t
                        }))
                    }, dn.prototype.stringToGlyphs = function(e, t) {
                        var r = this,
                            n = new nn;
                        n.registerModifier("glyphIndex", null, (function(e) {
                            return r.charToGlyphIndex(e.char)
                        }));
                        var h = t ? this.updateFeatures(t.features) : this.defaultRenderOptions.features;
                        n.applyFeatures(this, h);
                        for (var a = n.getTextGlyphs(e), i = a.length, c = new Array(i), o = this.glyphs.get(0), s = 0; s < i; s += 1) c[s] = this.glyphs.get(a[s]) || o;
                        return c
                    }, dn.prototype.nameToGlyphIndex = function(e) {
                        return this.glyphNames.nameToGlyphIndex(e)
                    }, dn.prototype.nameToGlyph = function(e) {
                        var t = this.nameToGlyphIndex(e),
                            r = this.glyphs.get(t);
                        return r || (r = this.glyphs.get(0)), r
                    }, dn.prototype.glyphIndexToName = function(e) {
                        return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(e) : ""
                    }, dn.prototype.getKerningValue = function(e, t) {
                        e = e.index || e, t = t.index || t;
                        var r = this.position.defaultKerningTables;
                        return r ? this.position.getKerningValue(r, e, t) : this.kerningPairs[e + "," + t] || 0
                    }, dn.prototype.defaultRenderOptions = {
                        kerning: !0,
                        features: [{
                            script: "arab",
                            tags: ["init", "medi", "fina", "rlig"]
                        }, {
                            script: "latn",
                            tags: ["liga", "rlig"]
                        }]
                    }, dn.prototype.forEachGlyph = function(e, t, r, n, h, a) {
                        t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0, n = void 0 !== n ? n : 72, h = Object.assign({}, this.defaultRenderOptions, h);
                        var i, c = 1 / this.unitsPerEm * n,
                            o = this.stringToGlyphs(e, h);
                        if (h.kerning) {
                            var s = h.script || this.position.getDefaultScriptName();
                            i = this.position.getKerningTables(s, h.language)
                        }
                        for (var l = 0; l < o.length; l += 1) {
                            var p = o[l];
                            if (a.call(this, p, t, r, n, h), p.advanceWidth && (t += p.advanceWidth * c), h.kerning && l < o.length - 1) {
                                var d = i ? this.position.getKerningValue(i, p.index, o[l + 1].index) : this.getKerningValue(p, o[l + 1]);
                                t += d * c
                            }
                            h.letterSpacing ? t += h.letterSpacing * n : h.tracking && (t += h.tracking / 1e3 * n)
                        }
                        return t
                    }, dn.prototype.getPath = function(e, t, r, n, h) {
                        var a = new R;
                        return this.forEachGlyph(e, t, r, n, h, (function(e, t, r, n) {
                            var i = e.getPath(t, r, n, h, this);
                            a.extend(i)
                        })), a
                    }, dn.prototype.getPaths = function(e, t, r, n, h) {
                        var a = [];
                        return this.forEachGlyph(e, t, r, n, h, (function(e, t, r, n) {
                            var i = e.getPath(t, r, n, h, this);
                            a.push(i)
                        })), a
                    }, dn.prototype.getAdvanceWidth = function(e, t, r) {
                        return this.forEachGlyph(e, 0, 0, t, r, (function() {}))
                    }, dn.prototype.draw = function(e, t, r, n, h, a) {
                        this.getPath(t, r, n, h, a).draw(e)
                    }, dn.prototype.drawPoints = function(e, t, r, n, h, a) {
                        this.forEachGlyph(t, r, n, h, a, (function(t, r, n, h) {
                            t.drawPoints(e, r, n, h)
                        }))
                    }, dn.prototype.drawMetrics = function(e, t, r, n, h, a) {
                        this.forEachGlyph(t, r, n, h, a, (function(t, r, n, h) {
                            t.drawMetrics(e, r, n, h)
                        }))
                    }, dn.prototype.getEnglishName = function(e) {
                        var t = this.names[e];
                        if (t) return t.en
                    }, dn.prototype.validate = function() {
                        var e = this;

                        function t(t) {
                            var r = e.getEnglishName(t);
                            r && r.trim().length
                        }
                        t("fontFamily"), t("weightName"), t("manufacturer"), t("copyright"), t("version"), this.unitsPerEm
                    }, dn.prototype.toTables = function() {
                        return kt.fontToTable(this)
                    }, dn.prototype.toBuffer = function() {
                        return h("warn", "Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.", " at utils/opentype.js:13551"), this.toArrayBuffer()
                    }, dn.prototype.toArrayBuffer = function() {
                        for (var e = this.toTables(), t = e.encode(), r = new ArrayBuffer(t.length), n = new Uint8Array(r), h = 0; h < t.length; h++) n[h] = t[h];
                        return r
                    }, dn.prototype.download = function(e) {
                        var t = this.getEnglishName("fontFamily"),
                            r = this.getEnglishName("fontSubfamily");
                        e = e || t.replace(/\s/g, "") + "-" + r + ".otf";
                        var i = this.toArrayBuffer();
                        if (function() {
                                return "undefined" !== typeof window
                            }())
                            if (window.URL = window.URL || window.webkitURL, window.URL) {
                                var c = new DataView(i),
                                    o = new Blob([c], {
                                        type: "font/opentype"
                                    }),
                                    s = document.createElement("a");
                                s.href = window.URL.createObjectURL(o), s.download = e;
                                var l = document.createEvent("MouseEvents");
                                l.initEvent("click", !0, !1), s.dispatchEvent(l)
                            } else h("warn", "Font file could not be downloaded. Try using a different browser.", " at utils/opentype.js:13594");
                        else {
                            var p = n("61af"),
                                d = function(e) {
                                    for (var t = new a(e.byteLength), r = new Uint8Array(e), n = 0; n < t.length; ++n) t[n] = r[n];
                                    return t
                                }(i);
                            p.writeFileSync(e, d)
                        }
                    }, dn.prototype.fsSelectionValues = {
                        ITALIC: 1,
                        UNDERSCORE: 2,
                        NEGATIVE: 4,
                        OUTLINED: 8,
                        STRIKEOUT: 16,
                        BOLD: 32,
                        REGULAR: 64,
                        USER_TYPO_METRICS: 128,
                        WWS: 256,
                        OBLIQUE: 512
                    }, dn.prototype.usWidthClasses = {
                        ULTRA_CONDENSED: 1,
                        EXTRA_CONDENSED: 2,
                        CONDENSED: 3,
                        SEMI_CONDENSED: 4,
                        MEDIUM: 5,
                        SEMI_EXPANDED: 6,
                        EXPANDED: 7,
                        EXTRA_EXPANDED: 8,
                        ULTRA_EXPANDED: 9
                    }, dn.prototype.usWeightClasses = {
                        THIN: 100,
                        EXTRA_LIGHT: 200,
                        LIGHT: 300,
                        NORMAL: 400,
                        MEDIUM: 500,
                        SEMI_BOLD: 600,
                        BOLD: 700,
                        EXTRA_BOLD: 800,
                        BLACK: 900
                    };
                    var fn = {
                            make: function(e, t) {
                                var r = new $.Table("fvar", [{
                                    name: "version",
                                    type: "ULONG",
                                    value: 65536
                                }, {
                                    name: "offsetToData",
                                    type: "USHORT",
                                    value: 0
                                }, {
                                    name: "countSizePairs",
                                    type: "USHORT",
                                    value: 2
                                }, {
                                    name: "axisCount",
                                    type: "USHORT",
                                    value: e.axes.length
                                }, {
                                    name: "axisSize",
                                    type: "USHORT",
                                    value: 20
                                }, {
                                    name: "instanceCount",
                                    type: "USHORT",
                                    value: e.instances.length
                                }, {
                                    name: "instanceSize",
                                    type: "USHORT",
                                    value: 4 + 4 * e.axes.length
                                }]);
                                r.offsetToData = r.sizeOf();
                                for (var n = 0; n < e.axes.length; n++) r.fields = r.fields.concat(gn(n, e.axes[n], t));
                                for (var h = 0; h < e.instances.length; h++) r.fields = r.fields.concat(xn(h, e.instances[h], e.axes, t));
                                return r
                            },
                            parse: function(e, t, r) {
                                var n = new ce.Parser(e, t),
                                    h = n.parseULong();
                                w.argument(65536 === h, "Unsupported fvar table version.");
                                var a = n.parseOffset16();
                                n.skip("uShort", 1);
                                for (var i = n.parseUShort(), c = n.parseUShort(), o = n.parseUShort(), s = n.parseUShort(), l = [], p = 0; p < i; p++) l.push(jn(e, t + a + p * c, r));
                                for (var d = [], b = t + a + i * c, g = 0; g < o; g++) d.push(Vn(e, b + g * s, l, r));
                                return {
                                    axes: l,
                                    instances: d
                                }
                            }
                        },
                        Fn = function() {
                            return {
                                coverage: this.parsePointer(ae.coverage),
                                attachPoints: this.parseList(ae.pointer(ae.uShortList))
                            }
                        },
                        kn = function() {
                            var e = this.parseUShort();
                            return w.argument(1 === e || 2 === e || 3 === e, "Unsupported CaretValue table version."), 1 === e ? {
                                coordinate: this.parseShort()
                            } : 2 === e ? {
                                pointindex: this.parseShort()
                            } : 3 === e ? {
                                coordinate: this.parseShort()
                            } : void 0
                        },
                        mn = function() {
                            return this.parseList(ae.pointer(kn))
                        },
                        Pn = function() {
                            return {
                                coverage: this.parsePointer(ae.coverage),
                                ligGlyphs: this.parseList(ae.pointer(mn))
                            }
                        },
                        un = function() {
                            return this.parseUShort(), this.parseList(ae.pointer(ae.coverage))
                        };
                    var Xn = {
                            parse: function(e, t) {
                                t = t || 0;
                                var r = new ae(e, t),
                                    n = r.parseVersion(1);
                                w.argument(1 === n || 1.2 === n || 1.3 === n, "Unsupported GDEF table version.");
                                var h = {
                                    version: n,
                                    classDef: r.parsePointer(ae.classDef),
                                    attachList: r.parsePointer(Fn),
                                    ligCaretList: r.parsePointer(Pn),
                                    markAttachClassDef: r.parsePointer(ae.classDef)
                                };
                                return n >= 1.2 && (h.markGlyphSets = r.parsePointer(un)), h
                            }
                        },
                        Nn = new Array(10);
                    Nn[1] = function() {
                        var e = this.offset + this.relativeOffset,
                            t = this.parseUShort();
                        return 1 === t ? {
                            posFormat: 1,
                            coverage: this.parsePointer(ae.coverage),
                            value: this.parseValueRecord()
                        } : 2 === t ? {
                            posFormat: 2,
                            coverage: this.parsePointer(ae.coverage),
                            values: this.parseValueRecordList()
                        } : void w.assert(!1, "0x" + e.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.")
                    }, Nn[2] = function() {
                        var e = this.offset + this.relativeOffset,
                            t = this.parseUShort();
                        w.assert(1 === t || 2 === t, "0x" + e.toString(16) + ": GPOS lookup type 2 format must be 1 or 2.");
                        var r = this.parsePointer(ae.coverage),
                            n = this.parseUShort(),
                            h = this.parseUShort();
                        if (1 === t) return {
                            posFormat: t,
                            coverage: r,
                            valueFormat1: n,
                            valueFormat2: h,
                            pairSets: this.parseList(ae.pointer(ae.list((function() {
                                return {
                                    secondGlyph: this.parseUShort(),
                                    value1: this.parseValueRecord(n),
                                    value2: this.parseValueRecord(h)
                                }
                            }))))
                        };
                        if (2 === t) {
                            var a = this.parsePointer(ae.classDef),
                                i = this.parsePointer(ae.classDef),
                                c = this.parseUShort(),
                                o = this.parseUShort();
                            return {
                                posFormat: t,
                                coverage: r,
                                valueFormat1: n,
                                valueFormat2: h,
                                classDef1: a,
                                classDef2: i,
                                class1Count: c,
                                class2Count: o,
                                classRecords: this.parseList(c, ae.list(o, (function() {
                                    return {
                                        value1: this.parseValueRecord(n),
                                        value2: this.parseValueRecord(h)
                                    }
                                })))
                            }
                        }
                    }, Nn[3] = function() {
                        return {
                            error: "GPOS Lookup 3 not supported"
                        }
                    }, Nn[4] = function() {
                        return {
                            error: "GPOS Lookup 4 not supported"
                        }
                    }, Nn[5] = function() {
                        return {
                            error: "GPOS Lookup 5 not supported"
                        }
                    }, Nn[6] = function() {
                        return {
                            error: "GPOS Lookup 6 not supported"
                        }
                    }, Nn[7] = function() {
                        return {
                            error: "GPOS Lookup 7 not supported"
                        }
                    }, Nn[8] = function() {
                        return {
                            error: "GPOS Lookup 8 not supported"
                        }
                    }, Nn[9] = function() {
                        return {
                            error: "GPOS Lookup 9 not supported"
                        }
                    };
                    var Hn = new Array(10);
                    var zn = {
                        parse: function(e, t) {
                            t = t || 0;
                            var r = new ae(e, t),
                                n = r.parseVersion(1);
                            return w.argument(1 === n || 1.1 === n, "Unsupported GPOS table version " + n), 1 === n ? {
                                version: n,
                                scripts: r.parseScriptList(),
                                features: r.parseFeatureList(),
                                lookups: r.parseLookupList(Nn)
                            } : {
                                version: n,
                                scripts: r.parseScriptList(),
                                features: r.parseFeatureList(),
                                lookups: r.parseLookupList(Nn),
                                variations: r.parseFeatureVariationsList()
                            }
                        },
                        make: function(e) {
                            return new $.Table("GPOS", [{
                                name: "version",
                                type: "ULONG",
                                value: 65536
                            }, {
                                name: "scripts",
                                type: "TABLE",
                                value: new $.ScriptList(e.scripts)
                            }, {
                                name: "features",
                                type: "TABLE",
                                value: new $.FeatureList(e.features)
                            }, {
                                name: "lookups",
                                type: "TABLE",
                                value: new $.LookupList(e.lookups, Hn)
                            }])
                        }
                    };
                    var Qn = {
                        parse: function(e, t) {
                            var r = new ce.Parser(e, t),
                                n = r.parseUShort();
                            if (0 === n) return function(e) {
                                var t = {};
                                e.skip("uShort");
                                var r = e.parseUShort();
                                w.argument(0 === r, "Unsupported kern sub-table version."), e.skip("uShort", 2);
                                var n = e.parseUShort();
                                e.skip("uShort", 3);
                                for (var h = 0; h < n; h += 1) {
                                    var a = e.parseUShort(),
                                        i = e.parseUShort(),
                                        c = e.parseShort();
                                    t[a + "," + i] = c
                                }
                                return t
                            }(r);
                            if (1 === n) return function(e) {
                                var t = {};
                                e.skip("uShort");
                                var r = e.parseULong();
                                r > 1 && h("warn", "Only the first kern subtable is supported.", " at utils/opentype.js:13991"), e.skip("uLong");
                                var n = e.parseUShort(),
                                    a = 255 & n;
                                if (e.skip("uShort"), 0 === a) {
                                    var i = e.parseUShort();
                                    e.skip("uShort", 3);
                                    for (var c = 0; c < i; c += 1) {
                                        var o = e.parseUShort(),
                                            s = e.parseUShort(),
                                            l = e.parseShort();
                                        t[o + "," + s] = l
                                    }
                                }
                                return t
                            }(r);
                            throw new Error("Unsupported kern table version (" + n + ").")
                        }
                    };
                    var Rn = {
                        parse: function(e, t, r, n) {
                            for (var h = new ce.Parser(e, t), a = n ? h.parseUShort : h.parseULong, i = [], c = 0; c < r + 1; c += 1) {
                                var o = a.call(h);
                                n && (o *= 2), i.push(o)
                            }
                            return i
                        }
                    };

                    function vn(e, t) {
                        return t(null, Rt(e))
                    }

                    function In(e, t) {
                        for (var r = [], n = 12, h = 0; h < t; h += 1) {
                            var a = ce.getTag(e, n),
                                i = ce.getULong(e, n + 4),
                                c = ce.getULong(e, n + 8),
                                o = ce.getULong(e, n + 12);
                            r.push({
                                tag: a,
                                checksum: i,
                                offset: c,
                                length: o,
                                compression: !1
                            }), n += 16
                        }
                        return r
                    }

                    function wn(e, t) {
                        if ("WOFF" === t.compression) {
                            var r = new Uint8Array(e.buffer, t.offset + 2, t.compressedLength - 2),
                                n = new Uint8Array(t.length);
                            if (H(r, n), n.byteLength !== t.length) throw new Error("Decompression error: " + t.tag + " decompressed length doesn't match recorded length");
                            var h = new DataView(n.buffer, 0);
                            return {
                                data: h,
                                offset: 0
                            }
                        }
                        return {
                            data: e,
                            offset: t.offset
                        }
                    }

                    function yn(e, t) {
                        var r, n;
                        t = void 0 === t || null === t ? {} : t;
                        var h, a, i, c, o, s, l, p, d, b, g, j, x, V = new dn({
                                empty: !0
                            }),
                            f = new DataView(e, 0),
                            F = [],
                            k = ce.getTag(f, 0);
                        if (k === String.fromCharCode(0, 1, 0, 0) || "true" === k || "typ1" === k) V.outlinesFormat = "truetype", h = ce.getUShort(f, 4), F = In(f, h);
                        else if ("OTTO" === k) V.outlinesFormat = "cff", h = ce.getUShort(f, 4), F = In(f, h);
                        else {
                            if ("wOFF" !== k) throw new Error("Unsupported OpenType signature " + k);
                            var m = ce.getTag(f, 4);
                            if (m === String.fromCharCode(0, 1, 0, 0)) V.outlinesFormat = "truetype";
                            else {
                                if ("OTTO" !== m) throw new Error("Unsupported OpenType flavor " + k);
                                V.outlinesFormat = "cff"
                            }
                            h = ce.getUShort(f, 12), F = function(e, t) {
                                for (var r = [], n = 44, h = 0; h < t; h += 1) {
                                    var a = ce.getTag(e, n),
                                        i = ce.getULong(e, n + 4),
                                        c = ce.getULong(e, n + 8),
                                        o = ce.getULong(e, n + 12),
                                        s = void 0;
                                    s = c < o && "WOFF", r.push({
                                        tag: a,
                                        offset: i,
                                        compression: s,
                                        compressedLength: c,
                                        length: o
                                    }), n += 20
                                }
                                return r
                            }(f, h)
                        }
                        for (var P = 0; P < h; P += 1) {
                            var u = F[P],
                                X = void 0;
                            switch (u.tag) {
                                case "cmap":
                                    X = wn(f, u), V.tables.cmap = se.parse(X.data, X.offset), V.encoding = new je(V.tables.cmap);
                                    break;
                                case "cvt ":
                                    X = wn(f, u), x = new ce.Parser(X.data, X.offset), V.tables.cvt = x.parseShortList(u.length / 2);
                                    break;
                                case "fvar":
                                    i = u;
                                    break;
                                case "fpgm":
                                    X = wn(f, u), x = new ce.Parser(X.data, X.offset), V.tables.fpgm = x.parseByteList(u.length);
                                    break;
                                case "head":
                                    X = wn(f, u), V.tables.head = qe.parse(X.data, X.offset), V.unitsPerEm = V.tables.head.unitsPerEm, r = V.tables.head.indexToLocFormat;
                                    break;
                                case "hhea":
                                    X = wn(f, u), V.tables.hhea = Ge.parse(X.data, X.offset), V.ascender = V.tables.hhea.ascender, V.descender = V.tables.hhea.descender, V.numberOfHMetrics = V.tables.hhea.numberOfHMetrics;
                                    break;
                                case "hmtx":
                                    p = u;
                                    break;
                                case "ltag":
                                    X = wn(f, u), n = We.parse(X.data, X.offset);
                                    break;
                                case "maxp":
                                    X = wn(f, u), V.tables.maxp = _e.parse(X.data, X.offset), V.numGlyphs = V.tables.maxp.numGlyphs;
                                    break;
                                case "name":
                                    g = u;
                                    break;
                                case "OS/2":
                                    X = wn(f, u), V.tables.os2 = ct.parse(X.data, X.offset);
                                    break;
                                case "post":
                                    X = wn(f, u), V.tables.post = ot.parse(X.data, X.offset), V.glyphNames = new Ve(V.tables.post);
                                    break;
                                case "prep":
                                    X = wn(f, u), x = new ce.Parser(X.data, X.offset), V.tables.prep = x.parseByteList(u.length);
                                    break;
                                case "glyf":
                                    c = u;
                                    break;
                                case "loca":
                                    b = u;
                                    break;
                                case "CFF ":
                                    a = u;
                                    break;
                                case "kern":
                                    d = u;
                                    break;
                                case "GDEF":
                                    o = u;
                                    break;
                                case "GPOS":
                                    s = u;
                                    break;
                                case "GSUB":
                                    l = u;
                                    break;
                                case "meta":
                                    j = u;
                                    break
                            }
                        }
                        var N = wn(f, g);
                        if (V.tables.name = at.parse(N.data, N.offset, n), V.names = V.tables.name, c && b) {
                            var H = 0 === r,
                                z = wn(f, b),
                                Q = Rn.parse(z.data, z.offset, V.numGlyphs, H),
                                R = wn(f, c);
                            V.glyphs = Tt.parse(R.data, R.offset, Q, V, t)
                        } else {
                            if (!a) throw new Error("Font doesn't contain TrueType or CFF outlines.");
                            var v = wn(f, a);
                            Me.parse(v.data, v.offset, V, t)
                        }
                        var I = wn(f, p);
                        if (Ee.parse(V, I.data, I.offset, V.numberOfHMetrics, V.numGlyphs, V.glyphs, t), fe(V, t), d) {
                            var w = wn(f, d);
                            V.kerningPairs = Qn.parse(w.data, w.offset)
                        } else V.kerningPairs = {};
                        if (o) {
                            var y = wn(f, o);
                            V.tables.gdef = Xn.parse(y.data, y.offset)
                        }
                        if (s) {
                            var C = wn(f, s);
                            V.tables.gpos = zn.parse(C.data, C.offset), V.position.init()
                        }
                        if (l) {
                            var A = wn(f, l);
                            V.tables.gsub = dt.parse(A.data, A.offset)
                        }
                        if (i) {
                            var D = wn(f, i);
                            V.tables.fvar = fn.parse(D.data, D.offset, V.names)
                        }
                        if (j) {
                            var S = wn(f, j);
                            V.tables.meta = bt.parse(S.data, S.offset), V.metas = V.tables.meta
                        }
                        return V
                    }

                    function Cn(t, r, n) {
                        n = void 0 === n || null === n ? {} : n;
                        var h = vn;
                        return new Promise((function(a, i) {
                            h(t, (function(t, h) {
                                if (t) {
                                    if (r) return r(t);
                                    i(t)
                                }
                                var c;
                                try {
                                    c = yn(h, n)
                                } catch (e) {
                                    if (r) return r(e, null);
                                    i(e)
                                }
                                if (r) return r(null, c);
                                a(c)
                            }))
                        }))
                    }

                    function An(e, t) {
                        var r = n("61af"),
                            h = r.readFileSync(e);
                        return yn(Rt(h), t)
                    }
                    var Dn = Object.freeze({
                        __proto__: null,
                        Font: dn,
                        Glyph: ke,
                        Path: R,
                        BoundingBox: Q,
                        _parse: ce,
                        parse: yn,
                        load: Cn,
                        loadSync: An
                    });
                    t.BoundingBox = Q, t.Font = dn, t.Glyph = ke, t.Path = R, t._parse = ce, t.default = Dn, t.load = Cn, t.loadSync = An, t.parse = yn, Object.defineProperty(t, "__esModule", {
                        value: !0
                    })
                }))
            }).call(this, n("f3b9")["default"], n("buffer").Buffer)
        },
        "34cf": function(e, t, r) {
            var n = r("ed45"),
                h = r("7172"),
                a = r("6382"),
                i = r("dd3e");
            e.exports = function(e, t) {
                return n(e) || h(e, t) || a(e, t) || i()
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        "35ce": function(e, t) {
            var r = [
                    [1569, 65152, null, null, null],
                    [1570, 65153, null, null, 65154],
                    [1571, 65155, null, null, 65156],
                    [1572, 65157, null, null, 65158],
                    [1573, 65159, null, null, 65160],
                    [1574, 65161, 65163, 65164, 65162],
                    [1575, 65165, null, null, 65166],
                    [1576, 65167, 65169, 65170, 65168],
                    [1577, 65171, null, null, 65172],
                    [1578, 65173, 65175, 65176, 65174],
                    [1579, 65177, 65179, 65180, 65178],
                    [1580, 65181, 65183, 65184, 65182],
                    [1581, 65185, 65187, 65188, 65186],
                    [1582, 65189, 65191, 65192, 65190],
                    [1583, 65193, null, null, 65194],
                    [1584, 65195, null, null, 65196],
                    [1585, 65197, null, null, 65198],
                    [1586, 65199, null, null, 65200],
                    [1587, 65201, 65203, 65204, 65202],
                    [1588, 65205, 65207, 65208, 65206],
                    [1589, 65209, 65211, 65212, 65210],
                    [1590, 65213, 65215, 65216, 65214],
                    [1591, 65217, 65219, 65220, 65218],
                    [1592, 65221, 65223, 65224, 65222],
                    [1593, 65225, 65227, 65228, 65226],
                    [1594, 65229, 65231, 65232, 65230],
                    [1600, 1600, 1600, 1600, 1600],
                    [1601, 65233, 65235, 65236, 65234],
                    [1602, 65237, 65239, 65240, 65238],
                    [1603, 65241, 65243, 65244, 65242],
                    [1604, 65245, 65247, 65248, 65246],
                    [1605, 65249, 65251, 65252, 65250],
                    [1606, 65253, 65255, 65256, 65254],
                    [1607, 65257, 65259, 65260, 65258],
                    [1608, 65261, null, null, 65262],
                    [1609, 65263, null, null, 65264],
                    [1610, 65265, 65267, 65268, 65266],
                    [1662, 64342, 64344, 64345, 64343],
                    [1740, 64508, 64510, 64511, 64509],
                    [1670, 64378, 64380, 64381, 64379],
                    [1705, 64398, 64400, 64401, 64399],
                    [1711, 64402, 64404, 64405, 64403],
                    [1688, 64394, null, null, 64395]
                ],
                n = [
                    [
                        [1604, 1570], 65269, null, null, 65270
                    ],
                    [
                        [1604, 1571], 65271, null, null, 65272
                    ],
                    [
                        [1604, 1573], 65273, null, null, 65274
                    ],
                    [
                        [1604, 1575], 65275, null, null, 65276
                    ]
                ],
                h = [1552, 1554, 1555, 1556, 1557, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1648, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1768, 1770, 1771, 1772, 1773];

            function a(e) {
                for (var t = 0; t < r.length; ++t)
                    if (r[t][0] === e) return !0;
                return !1
            }

            function i(e) {
                for (var t = 0; t < r.length; ++t)
                    if (r[t][0] === e) return r[t];
                return !1
            }

            function c(e, t) {
                for (var r = 0; r < n.length; ++r)
                    if (n[r][0][0] === e && n[r][0][1] === t) return n[r];
                return !1
            }

            function o(e) {
                for (var t = 0; t < h.length; ++t)
                    if (h[t] === e) return !0;
                return !1
            }

            function s(e) {
                var t;
                for (t = 0; t < r.length; ++t)
                    if (r[t].indexOf(e) > -1) return String.fromCharCode(r[t][0]);
                for (t = 0; t < n.length; ++t)
                    if (n[t].indexOf(e) > -1) return String.fromCharCode(n[t][0][0]) + String.fromCharCode(n[t][0][1]);
                return String.fromCharCode(e)
            }
            e.exports = {
                convertArabic: function(e) {
                    for (var t, r, n = "", h = 0; h < e.length; ++h) {
                        var s = e.charCodeAt(h);
                        if (a(s)) {
                            for (var l = null, p = null, d = h - 1, b = h + 1; d >= 0; --d)
                                if (!o(e.charCodeAt(d))) break;
                            for (l = d >= 0 ? e.charCodeAt(d) : null, t = !!l && i(l), (!t || null == t[2] && null == t[3]) && (l = null); b < e.length; ++b)
                                if (!o(e.charCodeAt(b))) break;
                            if (p = b < e.length ? e.charCodeAt(b) : null, t = !!p && i(p), (!t || null == t[3] && null == t[4]) && (p = null), 1604 === s && null != p && (1570 === p || 1571 === p || 1573 === p || 1575 === p)) {
                                r = c(s, p), n += null != l ? String.fromCharCode(r[4]) : String.fromCharCode(r[1]), ++h;
                                continue
                            }
                            if (t = i(s), null != l && null != p && null != t[3]) {
                                n += String.fromCharCode(t[3]);
                                continue
                            }
                            if (null != l && null != t[4]) {
                                n += String.fromCharCode(t[4]);
                                continue
                            }
                            if (null != p && null != t[2]) {
                                n += String.fromCharCode(t[2]);
                                continue
                            }
                            n += String.fromCharCode(t[1])
                        } else n += String.fromCharCode(s)
                    }
                    return n
                },
                convertArabicBack: function(e) {
                    var t, r, n = "";
                    for (r = 0; r < e.length; ++r) t = e.charCodeAt(r), n += s(t);
                    return n
                }
            }
        },
        "362f": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("fe8a"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "37a7": function(e, t, r) {
            "use strict";
            var n = r("47a9");
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createAnimation = function(e, t) {
                if (!t) return;
                return clearTimeout(t.timer), new s(e, t)
            };
            var h = n(r("7ca3")),
                a = n(r("67ad")),
                i = n(r("defineClassHelper "));

            function c(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), r.push.apply(r, n)
                }
                return r
            }

            function o(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? c(Object(r), !0).forEach((function(t) {
                        (0, h.default)(e, t, r[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : c(Object(r)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                    }))
                }
                return e
            }
            var s = function() {
                    function e(t, r) {
                        (0, a.default)(this, e), this.options = t, this.animation = uni.createAnimation(t), this.currentStepAnimates = {}, this.next = 0, this.$ = r
                    }
                    return (0, i.default)(e, [{
                        key: "_nvuePushAnimates",
                        value: function(e, t) {
                            var r = this.currentStepAnimates[this.next],
                                n = {};
                            if (n = r || {
                                    styles: {},
                                    config: {}
                                }, l.includes(e)) {
                                n.styles.transform || (n.styles.transform = "");
                                var h = "";
                                "rotate" === e && (h = "deg"), n.styles.transform += "".concat(e, "(").concat(t + h, ") ")
                            } else n.styles[e] = "".concat(t);
                            this.currentStepAnimates[this.next] = n
                        }
                    }, {
                        key: "_animateRun",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                r = this.$.$refs["ani"].ref;
                            if (r) return new Promise((function(n, h) {
                                nvueAnimation.transition(r, o({
                                    styles: e
                                }, t), (function(e) {
                                    n()
                                }))
                            }))
                        }
                    }, {
                        key: "_nvueNextAnimate",
                        value: function(e) {
                            var t = this,
                                r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                n = arguments.length > 2 ? arguments[2] : void 0,
                                h = e[r];
                            if (h) {
                                var a = h.styles,
                                    i = h.config;
                                this._animateRun(a, i).then((function() {
                                    r += 1, t._nvueNextAnimate(e, r, n)
                                }))
                            } else this.currentStepAnimates = {}, "function" === typeof n && n(), this.isEnd = !0
                        }
                    }, {
                        key: "step",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            return this.animation.step(e), this
                        }
                    }, {
                        key: "run",
                        value: function(e) {
                            this.$.animationData = this.animation.export(), this.$.timer = setTimeout((function() {
                                "function" === typeof e && e()
                            }), this.$.durationTime)
                        }
                    }]), e
                }(),
                l = ["matrix", "matrix3d", "rotate", "rotate3d", "rotateX", "rotateY", "rotateZ", "scale", "scale3d", "scaleX", "scaleY", "scaleZ", "skew", "skewX", "skewY", "translate", "translate3d", "translateX", "translateY", "translateZ"];
            l.concat(["opacity", "backgroundColor"], ["width", "height", "left", "right", "top", "bottom"]).forEach((function(e) {
                s.prototype[e] = function() {
                    var t;
                    return (t = this.animation)[e].apply(t, arguments), this
                }
            }))
        },
        "384f": function(e, t, r) {
            "use strict";
            (function(e) {
                var n = r("47a9");
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var h = n(r("af34")),
                    a = n(r("762b")),
                    i = getApp(),
                    c = r("720d"),
                    o = (r("3b77"), r("c4ce")),
                    s = r("bbc7"),
                    l = {
                        data: function() {
                            var e = s.colorSeg,
                                t = c.fileClassSplitTag;
                            return {
                                screen_width: i.globalData.screen_width_str,
                                scUnit: i.globalData.screen_width_float,
                                screen_height_px: i.globalData.screen_height_page,
                                rtl: i.globalData.rtl,
                                fileClassSplitTag: t,
                                listHeight: 0,
                                btnViewHeightRem: 260,
                                ntitle: this.$t("\u5217\u8868\u7f16\u8f91"),
                                itemLoading: !1,
                                playTime: 3,
                                playListName: "",
                                drawCanvas: {
                                    w: s.defaultWith,
                                    h: s.defaultHeight
                                },
                                fileList: [],
                                tmpFileList: [],
                                colorSeg: e,
                                drawCanvasShow: !1
                            }
                        },
                        created: function() {
                            this.listHeight = this.screen_height_px - this.btnViewHeightRem * this.scUnit - 30
                        },
                        onLoad: function(t) {
                            var r = this;
                            this.playListName = t.playListName, e("log", "playListName", this.playListName, " at sub/pages/playList/playList.js:44"), this.drawCanvasShow = !0, setTimeout((function() {
                                r.getPlayList(r.playListName)
                            }), 500)
                        },
                        components: {
                            uniPopup: a.default
                        },
                        methods: {
                            playListAdd: function(t) {
                                var r = this,
                                    n = this.$refs.dragSorts.getNowList();
                                uni.navigateTo({
                                    url: "/sub/pages/files/files",
                                    events: {
                                        acceptDataFromOpenedPage: function(t) {
                                            e("log", "acceptDataFromOpenedPage", JSON.stringify(t.selectFiles), " at sub/pages/playList/playList.js:65"), r.tmpFileList = [], r.drawCanvasShow = !0, r.loadItem(0, 0), setTimeout((function() {
                                                var n = r.$refs.dragSorts.getNowList();
                                                r.loadSingleFile(n.length, 0, t.selectFiles, (function() {
                                                    var t;
                                                    r.drawCanvasShow = !1, e("log", "tmpFileList", JSON.stringify(r.tmpFileList), " at sub/pages/playList/playList.js:73");
                                                    (t = r.$refs.dragSorts).push.apply(t, (0, h.default)(r.tmpFileList));
                                                    setTimeout((function() {
                                                        r.loadItem(1, 100)
                                                    }), 0)
                                                }))
                                            }), 100)
                                        }
                                    },
                                    success: function(e) {
                                        e.eventChannel.emit("acceptDataFromOpenerPage", {
                                            callFrom: "draw",
                                            mode: "add",
                                            listCount: n.length
                                        })
                                    },
                                    fail: function(t) {
                                        e("log", t, " at sub/pages/playList/playList.js:87")
                                    }
                                })
                            },
                            playListOk: function(e) {
                                if ("" != this.playListName) {
                                    var t = this.$refs.dragSorts.getNowList();
                                    if (0 == t.length) return c.deletePlayList(this.playListName), uni.showToast({
                                        title: this.$t("\u8be5\u64ad\u653e\u5217\u8868\u5df2\u5220\u9664"),
                                        icon: "none",
                                        duration: 1300
                                    }), void setTimeout((function() {
                                        uni.navigateBack()
                                    }), 1500);
                                    for (var r = [], n = 0; n < t.length; n++) r.push({
                                        fileName: t[n].fileName,
                                        playTime: t[n].time
                                    });
                                    c.savePlayListFileData(this.playListName, r);
                                    uni.showToast({
                                        title: this.$t("\u4fdd\u5b58\u6210\u529f"),
                                        icon: "none",
                                        duration: 1300
                                    }), setTimeout((function() {
                                        uni.navigateBack()
                                    }), 1500)
                                }
                            },
                            onclick: function(e) {},
                            change: function(e) {},
                            onDelete: function(t) {
                                var r = this;
                                uni.showModal({
                                    content: this.$t("\u5220\u9664") + " " + t.row.name + "?",
                                    success: function(n) {
                                        n.confirm ? r.$refs.dragSorts.splice(t.index, 1) : n.cancel && e("log", "\u7528\u6237\u70b9\u51fb\u53d6\u6d88", " at sub/pages/playList/playList.js:143")
                                    }
                                })
                            },
                            confirm: function(e) {},
                            loadSingleFile: function(e, t, r, n) {
                                var h = this;
                                if (this.loadItem(0, t / r.length * 100), t > r.length - 1) n && n();
                                else {
                                    var a = this,
                                        i = r[t].fileName,
                                        o = r[t].playTime,
                                        s = c.getHandDrawImg(i);
                                    s && c.isImgFileExist(s.picPath, (function(c) {
                                        c ? (a.tmpFileList.push({
                                            id: e + t,
                                            name: i.split(h.fileClassSplitTag)[0],
                                            fileName: i,
                                            icon: s.picPath,
                                            time: o,
                                            unit: a.$t("\u79d2"),
                                            deleteIcon: "/static/imgs/delete.png"
                                        }), setTimeout((function() {
                                            a.loadSingleFile(e, ++t, r, n)
                                        }), 0)) : a.createImg(i, s, (function(c, s) {
                                            c && a.tmpFileList.push({
                                                id: t,
                                                name: i.split(h.fileClassSplitTag)[0],
                                                fileName: i,
                                                icon: s,
                                                time: o,
                                                unit: a.$t("\u79d2"),
                                                deleteIcon: "/static/imgs/delete.png"
                                            }), setTimeout((function() {
                                                a.loadSingleFile(e, ++t, r, n)
                                            }), 0)
                                        }))
                                    }))
                                }
                            },
                            loadItem: function(e, t) {
                                if (0 == e) {
                                    this.itemLoading = !0;
                                    var r = uni.createCanvasContext("progressCanvas", this);
                                    o.drawProgress(r, 300 * this.scUnit, Math.floor(t))
                                } else this.itemLoading = !1, this.lastCompleteTime = (new Date).getTime()
                            },
                            getPlayList: function(e) {
                                this.loadItem(0, 0);
                                var t = this;
                                t.tmpFileList = [];
                                var r = c.getPlayListFileData(e);
                                this.loadSingleFile(0, 0, r.data, (function() {
                                    t.drawCanvasShow = !1, t.fileList = t.tmpFileList, setTimeout((function() {
                                        t.loadItem(1, 100)
                                    }), 0)
                                }))
                            },
                            changeTimeClick: function(t) {
                                var r = parseFloat(this.playTime);
                                isNaN(r) && (r = 3), e("log", "changeTimeClick", r, " at sub/pages/playList/playList.js:235"), r < .1 && (r = .1), r > 25.5 && (r = 25.5), r += t, r < .1 && (r = .1), r > 25.5 && (r = 25.5), this.playTime = Math.round(10 * r) / 10
                            },
                            popupTimeChange: function(e) {},
                            onTimeBlur: function(e) {},
                            setPlayTime: function(e) {
                                this.$refs.popupTime.open("center")
                            },
                            popupTimeCancelClick: function(e) {
                                this.$refs.popupTime.close()
                            },
                            popupTimeOkClick: function(e) {
                                var t = parseFloat(this.playTime);
                                isNaN(t) || t < .1 || t > 25.5 ? uni.showToast({
                                    title: this.$t("\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57"),
                                    icon: "none",
                                    duration: 1300
                                }) : (this.playTime = Math.round(10 * t) / 10, this.$refs.popupTime.close(), this.$refs.dragSorts.setPlayTime(this.playTime))
                            },
                            createImg: function(e, t, r) {
                                var n = uni.createCanvasContext("drawCanvas", this);
                                n.setLineWidth(4);
                                var h = {
                                    ctx: n,
                                    w: this.drawCanvas.w,
                                    h: this.drawCanvas.h,
                                    draw_line_type: [],
                                    colorSeg: this.colorSeg
                                };
                                s.drawPs(t.drawPoints, h, null);
                                n.draw(!1, (function(n) {
                                    uni.canvasToTempFilePath({
                                        canvasId: "drawCanvas",
                                        destWidth: 100,
                                        destHeight: 100,
                                        success: function(n) {
                                            c.saveHandDrawImg(e, n.tempFilePath, t.drawPoints, t.pointCnt, t.pisObj, t.features), r(!0, n.tempFilePath)
                                        },
                                        fail: function(e) {
                                            r(!1, "")
                                        }
                                    })
                                }))
                            }
                        }
                    };
                t.default = l
            }).call(this, r("f3b9")["default"])
        },
        3948: function(e, t, r) {
            "use strict";
            (function(e) {
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var r = {
                    name: "uniPopup",
                    components: {},
                    emits: ["change", "maskClick"],
                    props: {
                        animation: {
                            type: Boolean,
                            default: !0
                        },
                        type: {
                            type: String,
                            default: "center"
                        },
                        isMaskClick: {
                            type: Boolean,
                            default: null
                        },
                        maskClick: {
                            type: Boolean,
                            default: null
                        },
                        backgroundColor: {
                            type: String,
                            default: "none"
                        },
                        safeArea: {
                            type: Boolean,
                            default: !0
                        },
                        maskBackgroundColor: {
                            type: String,
                            default: "rgba(0, 0, 0, 0.4)"
                        }
                    },
                    watch: {
                        type: {
                            handler: function(e) {
                                this.config[e] && this[this.config[e]](!0)
                            },
                            immediate: !0
                        },
                        isDesktop: {
                            handler: function(e) {
                                this.config[e] && this[this.config[this.type]](!0)
                            },
                            immediate: !0
                        },
                        maskClick: {
                            handler: function(e) {
                                this.mkclick = e
                            },
                            immediate: !0
                        },
                        isMaskClick: {
                            handler: function(e) {
                                this.mkclick = e
                            },
                            immediate: !0
                        },
                        showPopup: function(e) {}
                    },
                    data: function() {
                        return {
                            duration: 300,
                            ani: [],
                            showPopup: !1,
                            showTrans: !1,
                            popupWidth: 0,
                            popupHeight: 0,
                            config: {
                                top: "top",
                                bottom: "bottom",
                                center: "center",
                                left: "left",
                                right: "right",
                                message: "top",
                                dialog: "center",
                                share: "bottom"
                            },
                            maskClass: {
                                position: "fixed",
                                bottom: 0,
                                top: 0,
                                left: 0,
                                right: 0,
                                backgroundColor: "rgba(0, 0, 0, 0.4)"
                            },
                            transClass: {
                                position: "fixed",
                                left: 0,
                                right: 0
                            },
                            maskShow: !0,
                            mkclick: !0,
                            popupstyle: this.isDesktop ? "fixforpc-top" : "top"
                        }
                    },
                    computed: {
                        isDesktop: function() {
                            return this.popupWidth >= 500 && this.popupHeight >= 500
                        },
                        bg: function() {
                            return "" === this.backgroundColor || "none" === this.backgroundColor ? "transparent" : this.backgroundColor
                        }
                    },
                    mounted: function() {
                        var e = this;
                        (function() {
                            var t = uni.getSystemInfoSync(),
                                r = t.windowWidth,
                                n = t.windowHeight,
                                h = t.windowTop,
                                a = t.safeArea,
                                i = (t.screenHeight, t.safeAreaInsets);
                            e.popupWidth = r, e.popupHeight = n + (h || 0), a && e.safeArea ? e.safeAreaInsets = i.bottom : e.safeAreaInsets = 0
                        })()
                    },
                    destroyed: function() {
                        this.setH5Visible()
                    },
                    created: function() {
                        null === this.isMaskClick && null === this.maskClick ? this.mkclick = !0 : this.mkclick = null !== this.isMaskClick ? this.isMaskClick : this.maskClick, this.animation ? this.duration = 300 : this.duration = 0, this.messageChild = null, this.clearPropagation = !1, this.maskClass.backgroundColor = this.maskBackgroundColor
                    },
                    methods: {
                        setH5Visible: function() {},
                        closeMask: function() {
                            this.maskShow = !1
                        },
                        disableMask: function() {
                            this.mkclick = !1
                        },
                        clear: function(e) {
                            e.stopPropagation(), this.clearPropagation = !0
                        },
                        open: function(t) {
                            if (!this.showPopup) {
                                t && -1 !== ["top", "center", "bottom", "left", "right", "message", "dialog", "share"].indexOf(t) || (t = this.type), this.config[t] ? (this[this.config[t]](), this.$emit("change", {
                                    show: !0,
                                    type: t
                                })) : e("error", "\u7f3a\u5c11\u7c7b\u578b\uff1a", t, " at components/uni-popup/uni-popup.vue:279")
                            }
                        },
                        close: function(e) {
                            var t = this;
                            this.showTrans = !1, this.$emit("change", {
                                show: !1,
                                type: this.type
                            }), clearTimeout(this.timer), this.timer = setTimeout((function() {
                                t.showPopup = !1
                            }), 300)
                        },
                        touchstart: function() {
                            this.clearPropagation = !1
                        },
                        onTap: function() {
                            this.clearPropagation ? this.clearPropagation = !1 : (this.$emit("maskClick"), this.mkclick && this.close())
                        },
                        top: function(e) {
                            var t = this;
                            this.popupstyle = this.isDesktop ? "fixforpc-top" : "top", this.ani = ["slide-top"], this.transClass = {
                                position: "fixed",
                                left: 0,
                                right: 0,
                                backgroundColor: this.bg
                            }, e || (this.showPopup = !0, this.showTrans = !0, this.$nextTick((function() {
                                t.messageChild && "message" === t.type && t.messageChild.timerClose()
                            })))
                        },
                        bottom: function(e) {
                            this.popupstyle = "bottom", this.ani = ["slide-bottom"], this.transClass = {
                                position: "fixed",
                                left: 0,
                                right: 0,
                                bottom: 0,
                                paddingBottom: this.safeAreaInsets + "px",
                                backgroundColor: this.bg
                            }, e || (this.showPopup = !0, this.showTrans = !0)
                        },
                        center: function(e) {
                            this.popupstyle = "center", this.ani = ["zoom-out", "fade"], this.transClass = {
                                position: "fixed",
                                display: "flex",
                                flexDirection: "column",
                                bottom: 0,
                                left: 0,
                                right: 0,
                                top: 0,
                                justifyContent: "center",
                                alignItems: "center"
                            }, e || (this.showPopup = !0, this.showTrans = !0)
                        },
                        left: function(e) {
                            this.popupstyle = "left", this.ani = ["slide-left"], this.transClass = {
                                position: "fixed",
                                left: 0,
                                bottom: 0,
                                top: 0,
                                backgroundColor: this.bg,
                                display: "flex",
                                flexDirection: "column"
                            }, e || (this.showPopup = !0, this.showTrans = !0)
                        },
                        right: function(e) {
                            this.popupstyle = "right", this.ani = ["slide-right"], this.transClass = {
                                position: "fixed",
                                bottom: 0,
                                right: 0,
                                top: 0,
                                backgroundColor: this.bg,
                                display: "flex",
                                flexDirection: "column"
                            }, e || (this.showPopup = !0, this.showTrans = !0)
                        }
                    }
                };
                t.default = r
            }).call(this, r("f3b9")["default"])
        },
        "3b2d": function(e, t) {
            function r(t) {
                return e.exports = r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, e.exports.__esModule = !0, e.exports["default"] = e.exports, r(t)
            }
            e.exports = r, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        "3b77": function(e, t, r) {
            (function(t) {
                var n = r("af34");

                function h(e, t) {
                    var r = "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (!r) {
                        if (Array.isArray(e) || (r = function(e, t) {
                                if (!e) return;
                                if ("string" === typeof e) return a(e, t);
                                var r = Object.prototype.toString.call(e).slice(8, -1);
                                "Object" === r && e.constructor && (r = e.constructor.name);
                                if ("Map" === r || "Set" === r) return Array.from(e);
                                if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return a(e, t)
                            }(e)) || t && e && "number" === typeof e.length) {
                            r && (e = r);
                            var n = 0,
                                h = function() {};
                            return {
                                s: h,
                                n: function() {
                                    return n >= e.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: e[n++]
                                    }
                                },
                                e: function(e) {
                                    throw e
                                },
                                f: h
                            }
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }
                    var i, c = !0,
                        o = !1;
                    return {
                        s: function() {
                            r = r.call(e)
                        },
                        n: function() {
                            var e = r.next();
                            return c = e.done, e
                        },
                        e: function(e) {
                            o = !0, i = e
                        },
                        f: function() {
                            try {
                                c || null == r.return || r.return()
                            } finally {
                                if (o) throw i
                            }
                        }
                    }
                }

                function a(e, t) {
                    (null == t || t > e.length) && (t = e.length);
                    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
                    return n
                }

                function i(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 4,
                        r = Math.round(e);
                    r < 0 && (r = 32768 | -r);
                    var n = ("0000" + r.toString(16)).slice(-t);
                    return n
                }

                function c(e, t) {
                    var r = e << 4 | 15 & t;
                    return r
                }

                function o(e, t) {
                    for (var r = 0, n = [], h = 0, a = 0, i = 0; i < e.length; i++)
                        if (r + e[i] <= t) a += 1, n.push([h, a]), r += e[i];
                        else {
                            tempWidth = r;
                            while (1) {
                                if (tempWidth <= t) {
                                    a += 1, n.push([h, a]), r = tempWidth + e[i];
                                    break
                                }
                                if (tempWidth > t && tempWidth - e[h] < t) {
                                    a += 1, n.push([h, a]), r += e[i];
                                    break
                                }
                                tempWidth -= e[h], r -= e[h], h += 1, a -= 1
                            }
                        } return n
                }

                function s(e, t) {
                    for (var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, n = -1, h = [], a = [], c = 200, s = 0, l = 0, p = 0; p < e.length; p++) n != e[p][0] && (n = e[p][0], h.push(e[p][2] * t), s += e[p][2], a.push(e[p][3] * t), l += e[p][3]);
                    if (127 == r || 127 == r) {
                        for (var d = 0, b = [], g = 0; g < 9; g++) {
                            n++;
                            var j = [{
                                x: 0,
                                y: l / 2 + c / 2 + d,
                                z: 0
                            }];
                            b.push([n, j, c, c]), d += c, a.push(c * t)
                        }
                        for (var x = o(a, 800), V = "", f = "", F = 0; F < x.length; F++) V += i(x[F][0], 2), f += i(x[F][1], 2);
                        return [e.concat(b), V, f, -d * t / 2]
                    }
                    for (var k = 0, m = [], P = 0; P < 9; P++) {
                        n++;
                        var u = [{
                            x: s / 2 + c / 2 + k,
                            y: 0,
                            z: 0
                        }];
                        m.push([n, u, c, c]), k += c, h.push(c * t)
                    }
                    for (var X = o(h, 800), N = "", H = "", z = 0; z < X.length; z++) N += i(X[z][0], 2), H += i(X[z][1], 2);
                    return [e.concat(m), N, H, -k * t / 2]
                }

                function l(e, r, n, h) {
                    var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
                    if (0 == e.length) return null;
                    var o = 0,
                        l = 0,
                        p = -1,
                        d = "",
                        b = "",
                        g = i(a, 2),
                        j = "",
                        x = "",
                        V = 8,
                        f = .5,
                        F = V,
                        k = 0,
                        m = "00";
                    m = n.textDecimalTime ? i(Math.floor(10 * r), 2) : i(Math.floor(r), 2), t("log", "time = ", m, " at utils/funcTools.js:337"), V >= 8 && (F = 0);
                    var P = !1;
                    if (P) t("error", "20241210 - \u5f53\u524d\u4ee3\u7801\u4e3a\u5750\u6807\u8c03\u5f0f\u6a21\u5f0f\uff0c\u4e0d\u53ef\u53d1\u7248", " at utils/funcTools.js:345"), xyss = e, se1 = 0, se2 = 0, xOffset = 0;
                    else {
                        var u = s(e, f, h);
                        xyss = u[0], se1 = u[1], se2 = u[2], xOffset = u[3]
                    }
                    for (var X = 0; X < xyss.length; X++) {
                        p != xyss[X][0] && (p = xyss[X][0], l > 0 && (j += i(k, 2), k = 0), l++, x += i(Math.round(Number(xyss[X][2] * f)), 2), V >= 8 && xyss[X][1].length > 1 && F++), F >= 8 && (F = 1);
                        var N = xyss[X][1];
                        k += N.length;
                        for (var H = 0; H < N.length; H++) {
                            o++;
                            var z = N[H],
                                Q = Math.round(Number(z.x * f) + xOffset),
                                R = Math.round(Number(z.y * f)),
                                v = Number(z.z),
                                I = F;
                            0 == H && (I = 0, v = 1), H == N.length - 1 && (v = 1), 1 == N.length && (v = Number(z.z)), n.textStopTime && N.length > 1 && (0 == I ? v = 2 : (H < N.length - 1 && 0 == N[H + 1].s || H == N.length - 1) && (v = 3)), d = d + i(Q) + i(R) + i(c(I, v), 2), P && (b = b + "\n{" + Q + "," + R + "," + I + "," + v + "},")
                        }
                    }
                    return P && t("log", "\u6587\u5b57\u5750\u6807(\u7ed8\u56fe\u8f6f\u4ef6\u683c\u5f0f)", b, " at utils/funcTools.js:408"), j += i(k, 2), 0 == o ? null : {
                        cnt: o,
                        charCount: l,
                        cmd: d,
                        charWidthCmd: x,
                        charPointCmd: j,
                        se1: se1,
                        se2: se2,
                        ver: g,
                        time: m
                    }
                }

                function p(e, t) {
                    for (var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "00", n = Math.floor(e.length / 2), h = e, a = n; a < t; a++) h += r;
                    return h
                }

                function d(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1,
                        r = e - 1;
                    t > -1 && (r = t - e);
                    var n = Math.trunc(r / 16),
                        h = r % 16,
                        a = Math.pow(2, h),
                        i = 0;
                    return i = t > -1 ? 65535 & a : 65535 & ~a, {
                        idx: n,
                        val: i,
                        decBy: t
                    }
                }

                function b(e, t) {
                    var r, a = n(t),
                        i = h(e);
                    try {
                        for (i.s(); !(r = i.n()).done;) {
                            var c = r.value,
                                o = d(c, -1);
                            if (o.idx < a.length) {
                                var s = a[o.idx] & o.val;
                                if (a[o.idx] != s) {
                                    a[o.idx] = s;
                                    var l = d(c, 50);
                                    l.idx < a.length && (a[l.idx] = a[l.idx] | l.val)
                                }
                            }
                        }
                    } catch (p) {
                        i.e(p)
                    } finally {
                        i.f()
                    }
                    return a
                }

                function g(e, t) {
                    if (e.hasOwnProperty("features")) {
                        var r = e.features;
                        if (r.hasOwnProperty(t)) return r[t]
                    }
                    return null
                }

                function j(e, t, r, n) {
                    for (var h = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "00", a = "", o = "", s = 0; s < 15; s++) s <= 11 ? o += i(t.cnfValus[s], 2) : 13 == s ? g({
                        features: r
                    }, "picsPlay") ? o += i(-1 == n ? 10 * t.cnfValus[12] : 10 * n, 2) : o += "00" : 14 == s && r.textStopTime ? o += i(t.txPointTime, 2) : o += "00";
                    if ("00" == h) {
                        o += h;
                        for (var l = 0; l < e.length; l++) {
                            var p = e[l],
                                d = p[3];
                            r.textStopTime && (0 == p[2] ? d = 2 : (l < e.length - 1 && 0 == e[l + 1][2] || l == e.length - 1) && (d = 3)), a = a + i(p[0].toFixed()) + i(p[1].toFixed()) + i(c(p[2], d), 2)
                        }
                        a = o + i(e.length) + a
                    } else o += h, a = o;
                    return a
                }

                function x(e, t) {
                    var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                        n = "";
                    return n = null == r ? t.picsPlay ? "f0f1f200" + e + "f4f5f6f7" : "f0f1f2f3" + e + "f4f5f6f7" : "f0f1f2" + i(r, 2) + e + "f4f5f6f7", n.toUpperCase()
                }
                e.exports = {
                    test: function(e) {
                        return "hello---" + e
                    },
                    inArray: function(e, t, r) {
                        for (var n = 0; n < e.length; n++)
                            if (e[n][t] === r) return n;
                        return -1
                    },
                    ab2hex: function(e) {
                        var t = Array.prototype.map.call(new Uint8Array(e), (function(e) {
                            return ("00" + e.toString(16)).slice(-2) + ""
                        }));
                        return t.join("").toUpperCase()
                    },
                    ab2Str: function(e) {
                        var t = new Uint8Array(e),
                            r = String.fromCharCode.apply(null, t);
                        return r
                    },
                    stringToBytes: function(e) {
                        for (var t, r, n = [], h = 0; h < e.length; h++) {
                            t = e.charCodeAt(h), r = [];
                            do {
                                r.push(255 & t), t >>= 8
                            } while (t);
                            n = n.concat(r.reverse())
                        }
                        return n
                    },
                    getXtsCmd: function(e) {
                        for (var t = e.split("\n"), r = 0, n = "", h = 0; h < t.length; h++) {
                            var a = t[h];
                            if ("" != a) {
                                r++;
                                var i = a.split(","),
                                    c = Number(i[0]) + 400,
                                    o = Number(i[1]) + 400;
                                n = n + ("00" + c.toString(16)).slice(-4) + ("00" + o.toString(16)).slice(-4) + ("00" + Number(i[2]).toString(16)).slice(-2) + ("00" + Number(i[3]).toString(16)).slice(-2)
                            }
                        }
                        return 0 == r ? "" : (n = "55667788" + ("00" + r.toString(16)).slice(-2) + n + "88776655", n)
                    },
                    getXysCmd: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            r = 0,
                            n = 0,
                            h = -1,
                            a = "",
                            o = "",
                            l = "",
                            p = "",
                            d = i(t, 2),
                            b = 8,
                            g = .5,
                            j = b,
                            x = 0;
                        b >= 8 && (j = 0);
                        var V = s(e, g);
                        xyss = V[0], se = V[1] + V[2], xOffset = V[3];
                        for (var f = 0; f < xyss.length; f++) {
                            h != xyss[f][0] && (h = xyss[f][0], n > 0 && (l += i(x, 2), x = 0), n++, p += i(Math.round(Number(xyss[f][2] * g)), 2), b >= 8 && xyss[f][1].length > 1 && j++), j >= 8 && (j = 1);
                            var F = xyss[f][1];
                            x += F.length;
                            for (var k = 0; k < F.length; k++) {
                                r++;
                                var m = F[k],
                                    P = Math.round(Number(m.x * g) + xOffset),
                                    u = Math.round(Number(m.y * g)),
                                    X = Number(m.z),
                                    N = j;
                                0 == k && (N = 0, X = 1), k == F.length - 1 && (X = 1), 1 == F.length && (X = Number(m.z)), a = a + i(P) + i(u) + i(c(N, X), 2), o = o + "\n" + P + "," + u + ",(" + N + "," + X + "),"
                            }
                        }
                        return l += i(x, 2), 0 == r ? "" : (a = "A0A1A2A3" + i(r) + i(n, 2) + a + p + l + se + d + "A4A5A6A7", a.toUpperCase())
                    },
                    getXysCmdArr: function(e, r, n) {
                        for (var h = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, a = [], c = 0; c < e.length; c++) {
                            var o = e[c].xys,
                                s = n;
                            255 == n && null != e[c].XysRight ? o = e[c].XysRight : 127 == n && null != e[c].XysUp ? o = e[c].XysUp : 128 == n && null != e[c].XysDown ? o = e[c].XysDown : s = 0;
                            var p = l(o, e[c].time, r, s, h);
                            null != p && a.push(p)
                        }
                        if (0 == a.length) return "";
                        for (var d = 0, b = 0, g = "", j = "", x = "", V = "", f = "", F = "", k = "", m = "", P = 0; P < a.length; P++) d += a[P].cnt, b += a[P].charCount, i(a[P].cnt), g += i(a[P].charCount, 2), j += a[P].cmd, x += a[P].charWidthCmd, V += a[P].charPointCmd, f += a[P].se1, F += a[P].se2, k += a[P].ver, m += a[P].time;
                        t("log", d, b, " at utils/funcTools.js:308");
                        var u = i(a.length, 2),
                            X = "A0A1A2A3" + i(d) + i(b, 2) + j + u + g + x + V + f + F + k + m + "A4A5A6A7";
                        return X.toUpperCase()
                    },
                    getCmdStr: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                            r = i(e.curMode, 2),
                            h = i(0, 2),
                            a = i(e.textData.txColor, 2),
                            c = i(e.textData.txSize / 100 * 255, 2),
                            o = i(e.textData.txSize / 100 * 255, 2),
                            s = i(e.textData.runSpeed / 100 * 255, 2),
                            l = "00",
                            p = i(e.textData.txDist / 100 * 255, 2),
                            d = i(e.prjData.public.rdMode, 2),
                            j = i(e.prjData.public.soundVal / 100 * 255, 2),
                            x = "ffffffff0000";
                        if (null != t) {
                            if (x = "", t.hasOwnProperty("groupList"))
                                for (var V = 0; V < t.groupList.length; V++) x += i(t.groupList[V].color, 2);
                            x += "ffffffff", x = x.substring(0, 8), g(t, "textStopTime") && (x += i(e.textData.txPointTime, 2)), x += "0000", x = x.substring(0, 12)
                        }
                        var f = "",
                            F = e.prjData.prjItem;
                        for (var k in F) {
                            var m = F[k],
                                P = 0 == m.pyMode ? 0 : 128;
                            0 != P && null != t && t.hasOwnProperty("prjParm") && t.prjParm.prjIndex == k && (3 == k && g(t, "animationFix") && [2, 4, 11, 13, 19].includes(t.prjParm.selIndex) ? P |= 50 - t.prjParm.selIndex : P |= t.prjParm.selIndex);
                            var u = i(P, 2),
                                X = "",
                                N = n(m.prjSelected);
                            3 == k && g(t, "animationFix") && (N = b([2, 4, 11, 13, 19], N));
                            for (var H = 0; H < N.length; H++) X = i(N[H]) + X;
                            f = f + u + X
                        }
                        var z = "";
                        g(t, "arbPlay") && (z += i(e.textData.runDir, 2));
                        for (var Q = "", R = Math.floor(z.length / 2), v = R; v < 44; v++) Q += "00";
                        var I = "c0c1c2c3" + r + h + a + c + o + s + l + p + d + j + x + f + z + Q + "c4c5c6c7";
                        return I.toUpperCase()
                    },
                    getShakeCmdStr: function(e) {
                        var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                            n = "";
                        if (g(r, "xyCnf")) {
                            n = "00", r.hasOwnProperty("xyCnfSave") && !r.xyCnfSave && (n = "ff");
                            var a = e.subsetData.xyCnf;
                            a.auto ? n += i(a.autoValue, 2) : n += i(255 - a.autoValue, 2), n += i(a.phase, 2);
                            var c, o = h(a.xy);
                            try {
                                for (o.s(); !(c = o.n()).done;) {
                                    var s = c.value;
                                    n += i(s.value, 2)
                                }
                            } catch (d) {
                                o.e(d)
                            } finally {
                                o.f()
                            }
                            t("log", "xyCnf", JSON.stringify(a), " at utils/funcTools.js:551")
                        }
                        n = p(n, 16, "00");
                        var l = "10111213" + n + "14151617";
                        return l.toUpperCase()
                    },
                    getDrawPointStr: j,
                    getDrawCmdStr: function(e, t, r) {
                        var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "00",
                            h = j(e, t, r, -1, n);
                        return x(h, r)
                    },
                    drawPointStrToCmd: x,
                    getPisCmdStr: function(e, r) {
                        for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, h = r.cnfValus, a = "01", c = i(e, 2), o = a + c, s = 0; s <= 12; s++) o += i(h[s], 2);
                        var l = i(10 * r.playTime, 2);
                        if (o += l, g(n, "xyCnf")) {
                            for (var d = 14; d <= 18; d++) o += i(h[d], 2);
                            t("log", "13-17", h[14], h[15], h[16], h[17], h[18], " at utils/funcTools.js:516"), o = p(o, 24, "00")
                        } else o = p(o, 18, "00");
                        var b = "d0d1d2d3" + o + "d4d5d6d7";
                        return b.toUpperCase()
                    },
                    getPisListCmdStr: function(e) {
                        for (var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n = i(128 | e.length, 2), h = "FF", a = "", c = 0; c < e.length; c++) {
                            for (var o = "", s = e[c], l = 0; l <= 12; l++) o += i(s.cnfValus[l], 2);
                            var d = i(10 * s.playTime, 2);
                            if (o += d, g(r, "xyCnf")) {
                                for (var b = s.cnfValus, j = 14; j <= 18; j++) o += i(b[j], 2);
                                t("log", "pgs 14-18", b[14], b[15], b[16], b[17], b[18], " at utils/funcTools.js:488"), o = p(o, 21, "00")
                            } else o = p(o, 15, "00");
                            a = a + o + h
                        }
                        return a = "d0d1d2d3" + n + "00" + a + "d4d5d6d7", a.toUpperCase()
                    },
                    getSettingCmd: function(e) {
                        var t = i(e.valArr[0]),
                            r = i(e.ch, 2),
                            n = i(e.valArr[1], 2),
                            h = i(e.xy, 2),
                            a = i(e.valArr[2], 2),
                            c = i(e.valArr[3], 2),
                            o = i(e.valArr[4], 2),
                            s = i(e.light, 2),
                            l = i(e.cfg, 2);
                        0 == e.cfg && (a = "FF", c = "FF", o = "FF");
                        var p = i(e.lang, 2),
                            d = "00010203" + t + r + n + h + a + c + o + s + l + p + "000000000004050607";
                        return d.toUpperCase()
                    },
                    getCmdValue: function(e, r, n) {
                        var h = new RegExp(e + "(.+?)" + r),
                            a = h.exec(n);
                        return null !== a ? a[1] : (t("log", "\u672a\u5339\u914d\u5230\u7b26\u5408\u8981\u6c42\u7684\u5b57\u7b26\u4e32", e, r, " at utils/funcTools.js:7"), "")
                    },
                    getQueryCmd: function(e) {
                        for (var t = "", r = 0; r < e.length; r++) t += i(e[r], 2);
                        var n = "E0E1E2E3" + t + "E4E5E6E7";
                        return n.toUpperCase()
                    },
                    getDrawLineStr: function(e, t) {
                        for (var r = "", n = 0; n < e.length; n++) {
                            var h = e[n];
                            r = r + i(h.pt.x) + i(h.pt.y) + i(c(h.color, h.z), 2)
                        }
                        return r = "10111213" + i(t) + i(e.length, 2) + r + "14151617", r.toUpperCase()
                    },
                    getFeaturesValue: g
                }
            }).call(this, r("f3b9")["default"])
        },
        "3c74": function(e, t, r) {
            "use strict";
            var n = r("47a9");
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var h = n(r("db01")),
                a = n(r("6b9a")),
                i = n(r("ea21")),
                c = n(r("40f5")),
                o = n(r("e82e")),
                s = n(r("79fe")),
                l = n(r("cb7c")),
                p = n(r("i18nStrings ")),
                d = n(r("2029")),
                b = {
                    en: h.default,
                    fr: a.default,
                    ru: i.default,
                    vi: c.default,
                    ar: o.default,
                    de: s.default,
                    it: l.default,
                    es: p.default,
                    "zh-Hans": d.default
                };
            t.default = b
        },
        "3dd4": function(e, t, r) {
            "use strict";
            (function(e) {
                function n(e, t) {
                    var r = "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (!r) {
                        if (Array.isArray(e) || (r = function(e, t) {
                                if (!e) return;
                                if ("string" === typeof e) return h(e, t);
                                var r = Object.prototype.toString.call(e).slice(8, -1);
                                "Object" === r && e.constructor && (r = e.constructor.name);
                                if ("Map" === r || "Set" === r) return Array.from(e);
                                if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return h(e, t)
                            }(e)) || t && e && "number" === typeof e.length) {
                            r && (e = r);
                            var n = 0,
                                a = function() {};
                            return {
                                s: a,
                                n: function() {
                                    return n >= e.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: e[n++]
                                    }
                                },
                                e: function(e) {
                                    function t(t) {
                                        return e.apply(this, arguments)
                                    }
                                    return t.toString = function() {
                                        return e.toString()
                                    }, t
                                }((function(e) {
                                    throw e
                                })),
                                f: a
                            }
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }
                    var i, c = !0,
                        o = !1;
                    return {
                        s: function() {
                            r = r.call(e)
                        },
                        n: function() {
                            var e = r.next();
                            return c = e.done, e
                        },
                        e: function(e) {
                            function t(t) {
                                return e.apply(this, arguments)
                            }
                            return t.toString = function() {
                                return e.toString()
                            }, t
                        }((function(e) {
                            o = !0, i = e
                        })),
                        f: function() {
                            try {
                                c || null == r.return || r.return()
                            } finally {
                                if (o) throw i
                            }
                        }
                    }
                }

                function h(e, t) {
                    (null == t || t > e.length) && (t = e.length);
                    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
                    return n
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var a = getApp(),
                    i = (r("3315"), r("e458")),
                    c = r("3b77"),
                    o = (r("720d"), r("c4ce")),
                    s = ["pages/cnn/cnn", "pages/main/main", "pages/lang/lang", "pages/setting/setting"],
                    l = {
                        data: function() {
                            var e = a.globalData.getDeviceFeatures();
                            return {
                                screen_width: a.globalData.screen_width_str,
                                rtl: a.globalData.rtl,
                                debugTag: !1,
                                ledDevTag: !1,
                                warnTop: 20,
                                modeCmdSend: "",
                                functions: [{
                                    tag: 8,
                                    name: "\u624b\u7ed8\u6d82\u9e26",
                                    img: "2.png",
                                    show: !0
                                }, {
                                    tag: 4,
                                    name: "\u6587\u672c\u64ad\u653e",
                                    img: "3.png",
                                    show: !0
                                }, {
                                    tag: 7,
                                    name: "\u4e2a\u6027\u7f16\u7a0b",
                                    img: "4.png",
                                    show: !0
                                }, {
                                    tag: 1,
                                    name: "\u968f\u673a\u64ad\u653e",
                                    img: "5.png",
                                    show: !0
                                }, {
                                    tag: 3,
                                    name: "\u52a8\u753b\u64ad\u653e",
                                    img: "6.png",
                                    show: !0
                                }, {
                                    tag: 2,
                                    name: "\u7ebf\u6761\u64ad\u653e",
                                    img: "7.png",
                                    show: !0
                                }, {
                                    tag: 5,
                                    name: "\u5723\u8bde\u64ad\u653e",
                                    img: "8.png",
                                    show: !0
                                }, {
                                    tag: 6,
                                    name: "\u6237\u5916\u64ad\u653e",
                                    img: "9.png",
                                    show: !0
                                }, {
                                    tag: 0,
                                    name: "DMX",
                                    img: "10.png",
                                    show: !0
                                }, {
                                    tag: 5,
                                    name: "ILDA",
                                    img: "11.png",
                                    show: !1
                                }, {
                                    tag: 9,
                                    name: "\u64ad\u653e\u5217\u8868",
                                    img: "12.png",
                                    show: !0
                                }],
                                features: e,
                                deviceOn: !1,
                                statusBarHeight: 20,
                                prjIndex: -1,
                                cnnDevice: "\u672a\u8fde\u63a5",
                                cnnState: !1,
                                bluTimer: null,
                                randomCheck: [],
                                initShow: !1,
                                ctx: "null",
                                sendTimer: null,
                                lastSendTime: 0,
                                lastCmdTime: 0,
                                xyCnf: {
                                    auto: !0,
                                    autoValue: 0,
                                    phase: 0,
                                    xy: [{
                                        title: "X\u7c97\u8c03",
                                        name: "xBig",
                                        value: 0
                                    }, {
                                        title: "X\u7ec6\u8c03",
                                        name: "xSmall",
                                        value: 0
                                    }, {
                                        title: "Y\u7c97\u8c03",
                                        name: "yBig",
                                        value: 0
                                    }, {
                                        title: "Y\u7ec6\u8c03",
                                        name: "ySmall",
                                        value: 0
                                    }]
                                },
                                lastRefresh: 0,
                                chPer: 1,
                                chBeginPoint: {
                                    x: 0,
                                    y: 0
                                },
                                chEndPoint: {
                                    x: 0,
                                    y: 0
                                },
                                chDraw: {
                                    w: 0,
                                    h: 0,
                                    max: 255
                                },
                                chCanvas: {
                                    w: 0,
                                    h: 0
                                },
                                cnfIdx: 0
                            }
                        },
                        created: function() {
                            uni.setKeepScreenOn({
                                keepScreenOn: !0
                            }), a.globalData.setMainPage(this);
                            var e = uni.getSystemInfoSync();
                            this.statusBarHeight = e.statusBarHeight
                        },
                        onLoad: function() {
                            this.genRandomCheck(), a.globalData.platform.app ? this.warnTop = 12 : this.warnTop = 40
                        },
                        onShow: function() {
                            if (this.rtl = a.globalData.rtl, e("log", "onShow rtl", this.rtl, " at pages/main/main.js:85"), this.features = a.globalData.getDeviceFeatures(), this.bluTimer && uni.showLoading({
                                    title: this.$t("\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570..."),
                                    mask: !0
                                }), !this.initShow) {
                                this.initShow = !0;
                                var t = this;
                                this.$nextTick((function() {
                                    t.testShow((function() {
                                        t.bluInitPro()
                                    }))
                                }))
                            }
                        },
                        onReady: function() {
                            e("log", "main onready", " at pages/main/main.js:99"), this.ledDevTag && this.chDrawInit()
                        },
                        computed: {
                            functionsShow: function() {
                                for (var t = [], r = 0; r < this.functions.length; r++) {
                                    var n = this.functions[r];
                                    if (this.features.ilda) {
                                        if (["\u5723\u8bde\u64ad\u653e"].includes(n.name)) continue
                                    } else if (["ILDA"].includes(n.name)) continue;
                                    !this.features.picsPlay && ["\u64ad\u653e\u5217\u8868"].includes(n.name) || t.push(n)
                                }
                                return e("log", "functionsShow", JSON.stringify(t), " at pages/main/main.js:121"), t
                            }
                        },
                        methods: {
                            bluInitPro: function() {
                                a.globalData.blu_cnn_call_back = this.blu_cnn_call_back, a.globalData.blu_rec_call_back = this.blu_rec_call_back, setTimeout((function() {
                                    o.cnnPreBlu()
                                }), 10)
                            },
                            clearBluTimer: function() {
                                null != this.bluTimer && (clearTimeout(this.bluTimer), this.bluTimer = null)
                            },
                            goQueryCmd: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 3,
                                    r = this;
                                if (t > 0) "pages/main/main" == this.getCurPage() && uni.showLoading({
                                    title: r.$t("\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570..."),
                                    mask: !0
                                }), o.gosend(!1, c.getQueryCmd(this.randomCheck)), r.clearBluTimer(), r.bluTimer = setTimeout((function() {
                                    r.bluTimer = null, r.goQueryCmd(--t)
                                }), 3e3);
                                else {
                                    if (e("log", "this.debugTag", this.debugTag, " at pages/main/main.js:162"), r.clearBluTimer(), this.debugTag) return void o.setCanSend(!0);
                                    uni.showToast({
                                        title: r.$t("\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25"),
                                        icon: "none",
                                        duration: 3e3
                                    })
                                }
                            },
                            blu_cnn_call_back: function(t, r) {
                                if (1 != t) {
                                    var n = a.globalData.ble_device;
                                    if (t && n && "characteristicId" in n) e("log", "blu_cnn_call_back1", t, r, " at pages/main/main.js:191"), e("log", "\u5df2\u8fde\u63a5", n.name, " at pages/main/main.js:192"), this.cnnDevice = n.name, this.cnnState = !0, a.globalData.blu_cnn_from_page && "pages/cnn/cnn" == this.getCurPage() && uni.navigateBack(), a.globalData.blu_cnn_from_page = !1, this.goQueryCmd();
                                    else {
                                        if (e("log", "blu_cnn_call_back2", t, r, " at pages/main/main.js:202"), this.clearBluTimer(), uni.hideLoading(), this.cnnState = !1, this.deviceOn = !1, this.prjIndex = -1, a.globalData.blu_cnn_from_test) return;
                                        var h = this.getCurPage(); - 1 == s.indexOf(h) && (n && a.globalData.showModalTips(n.name + this.$t("\u5df2\u65ad\u5f00\u8fde\u63a5")), this.gotoMain())
                                    }
                                }
                            },
                            gotoMain: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!this.debugTag && (e("log", "gotoMain cnnBlu", t, this.debugTag, a.globalData.img_selecting, " at pages/main/main.js:223"), !a.globalData.appHide)) {
                                    var r = this.getCurPage();
                                    "pages/main/main" != r ? uni.reLaunch({
                                        url: "/pages/main/main"
                                    }) : t && (this.initShow = !1)
                                }
                            },
                            testShow: function(t) {
                                var r = this;
                                uni.getSystemInfo({
                                    success: function(n) {
                                        if ("ios" == n.platform) {
                                            var h = uni.createSelectorQuery().in(r),
                                                a = !0;
                                            h.select("#containerId").boundingClientRect((function(e) {
                                                a = !1
                                            })).exec();
                                            var i = setTimeout((function() {
                                                clearTimeout(i), e("log", "isRecovery", a, " at pages/main/main.js:251"), a ? plus.runtime.restart() : null != t && t()
                                            }), 500)
                                        } else null != t && t()
                                    }
                                })
                            },
                            getCurPage: function() {
                                var e = getCurrentPages();
                                return e[e.length - 1].route
                            },
                            blu_rec_call_back: function(t) {
                                e("log", "blu_rec_call_back", " at pages/main/main.js:270");
                                this.clearBluTimer(), uni.hideLoading(), this.checkRcvData(t, this.randomCheck) ? (o.setCanSend(!0), o.setCmdData(t), this.prjIndex = a.globalData.cmd.curMode) : uni.showToast({
                                    title: this.$t("\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38"),
                                    icon: "none",
                                    duration: 3e3
                                })
                            },
                            genRandomCheck: function() {
                                for (var e = 0; e < 4; e++) this.randomCheck[e] = Math.floor(256 * Math.random())
                            },
                            checkRcvData: function(e, t) {
                                if (4 != t.length || e.length < 24) return !1;
                                for (var r = e.substr(e.length - 24, 8), n = [], h = 0; h < 4; h++) {
                                    var i = 0,
                                        c = t[h];
                                    0 == h && (i = (c + 55 >> 1) - 10 & 255), 1 == h && (i = 7 + (c - 68 << 1) & 255), 2 == h && (i = 15 + (c + 97 >> 1) & 255), 3 == h && (i = 87 + (c - 127 >> 1) & 255), n.push(i)
                                }
                                for (var o = [], s = 0; s < 4; s++) {
                                    var l = r[2 * s] + r[2 * s + 1],
                                        p = parseInt(l, 16);
                                    o.push(p)
                                }
                                for (var d = 0; d < 4; d++)
                                    if (o[d] != n[d]) return !1;
                                var b = e.substr(e.length - 16, 2);
                                this.deviceOn = 0 != parseInt(b, 16);
                                var g = e.substr(e.length - 14, 2),
                                    j = e.substr(e.length - 12, 2),
                                    x = e.substr(e.length - 10, 2);
                                return this.debugTag || (a.globalData.setDeviceInfo(g, j, x), this.features = a.globalData.getDeviceFeatures()), this.features = a.globalData.getDeviceFeatures(), !0
                            },
                            voteTitle: function(e) {
                                this.sendText = e.detail.value
                            },
                            t: function(e) {
                                var t = this.$t(e);
                                return t
                            },
                            cnnLaser: function() {
                                o.cnnLaser()
                            },
                            settingClick: function(e) {
                                var t = e.currentTarget.dataset.tag;
                                if (0 != t || this.deviceOn || this.debugTag) return this.prjIndex != t && 0 == t ? (this.prjIndex = t, a.globalData.setCmdMode(t), void this.sendCmd()) : void uni.navigateTo({
                                    url: "/pages/setting/setting?dmx=" + t
                                });
                                a.globalData.showModalTips(this.$t("\u8bf7\u5148\u6253\u5f00\u8bbe\u5907"), !0)
                            },
                            onOffChange: function(t) {
                                if (o.getCanSend()) {
                                    this.deviceOn = !this.deviceOn, e("log", "this.deviceOn", this.deviceOn, " at pages/main/main.js:379");
                                    var r = "B0B1B2B300B4B5B6B7";
                                    this.deviceOn && (r = "B0B1B2B3FFB4B5B6B7"), o.gosend(!1, r)
                                } else this.cnnState ? a.globalData.showModalTips(this.$t("\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b"), !0) : a.globalData.showModalTips(this.$t("\u8bf7\u5148\u8fde\u63a5\u84dd\u7259"), !0)
                            },
                            testFunc: function() {
                                o.setCmdData("E0E1E2E3B0B1B2B300B4B5B6B7C0C1C2C30400098080800080003309FFFFFF320000000000000000000000000000000000000000000000000000000000000000000000000000FF035393C06600000000000000000000000000000000000000000000000000000000000000000000000000C4C5C6C7000102030001000A00FFFFFF020000000000000004050607D0D1D2D3820000FF28000000000000000000003200FF00FF28000000000000000000FF3200FFD4D5D6D7F0F1F2F300000000070102030405060700004466F4F5F6F743E3A317F0000000E4E5E6E7"), this.prjIndex = a.globalData.cmd.curMode
                            },
                            sendCmd: function() {
                                var e = c.getCmdStr(a.globalData.cmd, {
                                    features: this.features
                                });
                                this.modeCmdSend = e, this.doSendCmd()
                            },
                            doSendCmd: function() {
                                if ("" != this.modeCmdSend) {
                                    var e = o.gosend(!1, this.modeCmdSend),
                                        t = this;
                                    e ? this.modeCmdSend = "" : setTimeout((function() {
                                        t.doSendCmd()
                                    }), 100)
                                }
                            },
                            prjClick: function(e) {
                                var t = e.currentTarget.dataset.tag;
                                if (0 != t)
                                    if (this.deviceOn || this.debugTag) {
                                        if (this.prjIndex != t || 5 == t && this.features.ilda) return this.prjIndex = t, a.globalData.setCmdMode(t), void this.sendCmd();
                                        this.sendCmd(), 4 == t && uni.navigateTo({
                                            url: "/sub/pages/text/text"
                                        }), 7 == t && uni.navigateTo({
                                            url: "/sub2/pages/pgs/pgs"
                                        }), 8 == t && uni.navigateTo({
                                            url: "/sub/pages/draw/draw"
                                        }), 9 == t && uni.navigateTo({
                                            url: "/sub/pages/listMaster/listMaster"
                                        }), t >= 1 && t <= 6 && 4 != t && uni.navigateTo({
                                            url: "/pages/prj/prj?tag=" + t
                                        })
                                    } else a.globalData.showModalTips(this.$t("\u8bf7\u5148\u6253\u5f00\u8bbe\u5907"), !0);
                                else this.settingClick(e)
                            },
                            sendCmd2: function(t) {
                                if (e("log", "app.globalData.blu_data_cmdSending", a.globalData.blu_data_cmdSending, " at pages/main/main.js:489"), a.globalData.blu_data_cmdSending) {
                                    if (null == this.sendTimer) {
                                        var r = this;
                                        this.sendTimer = setTimeout((function() {
                                            r.sendTimer = null, r.sendCmd2(t)
                                        }), 100)
                                    }
                                } else if (!(this.lastCmdTime < this.lastSendTime)) {
                                    var n = a.globalData.getDeviceFeatures(),
                                        h = c.getShakeCmdStr(a.globalData.cmd, {
                                            features: n,
                                            xyCnfSave: t
                                        }),
                                        i = o.gosend(!1, h);
                                    i && (this.lastSendTime = (new Date).getTime())
                                }
                            },
                            sendLastCmd: function(e) {
                                this.lastCmdTime = (new Date).getTime(), this.sendCmd2(e)
                            },
                            chDrawInit: function() {
                                var e = this,
                                    t = uni.createSelectorQuery().in(e);
                                setTimeout((function() {
                                    t.select("#cvView").boundingClientRect((function(t) {
                                        e.chCanvas.w = t.width / 4, e.chCanvas.h = t.height, e.chDraw.w = .6 * e.chCanvas.w;
                                        var r = .95 * e.chCanvas.h;
                                        e.chPer = r / 255, e.chDraw.h = r, e.refreshAllChDraw()
                                    })).exec()
                                }), 200)
                            },
                            refreshAllChDraw: function() {
                                var e, t = n(this.xyCnf.xy);
                                try {
                                    for (t.s(); !(e = t.n()).done;) {
                                        var r = e.value,
                                            h = r["value"],
                                            a = "chCanvas" + r["name"],
                                            i = !this.xyCnf.auto;
                                        this.drawChCanvas(a, this.chDraw.w, this.chDraw.h, this.chDraw.max, h, i, this.callBackCh)
                                    }
                                } catch (c) {
                                    t.e(c)
                                } finally {
                                    t.f()
                                }
                            },
                            refreshChDraw: function() {
                                var e = this.xyCnf.xy[this.cnfIdx],
                                    t = e["value"],
                                    r = "chCanvas" + e["name"],
                                    n = !this.xyCnf.auto;
                                this.drawChCanvas(r, this.chDraw.w, this.chDraw.h, this.chDraw.max, t, n, this.callBackCh)
                            },
                            radioPhaseChange: function(e) {
                                var t = e.detail.value,
                                    r = parseInt(t);
                                this.$set(this.xyCnf, "phase", r), this.sendLastCmd(!0)
                            },
                            radioChange: function(e) {
                                var t = e.detail.value,
                                    r = this.xyCnf.auto;
                                "auto" == t && (r = !0), "manual" == t && (r = !1), this.$set(this.xyCnf, "auto", r), this.refreshAllChDraw(), this.sendLastCmd(!0)
                            },
                            drawChCanvas: function(e, t, r, n, h, a) {
                                var c = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
                                    o = uni.createCanvasContext(e, this),
                                    s = t / 2,
                                    l = (this.chCanvas.w - t) / 2,
                                    p = (this.chCanvas.h - r) / 2 + s,
                                    d = l + t,
                                    b = p + r - t,
                                    g = l + s,
                                    j = p,
                                    x = d - s,
                                    V = b,
                                    f = 2 * this.scUnit,
                                    F = "#24292E",
                                    k = o.createLinearGradient(x, V + s, g, j - s);
                                k.addColorStop(0, "#112233"), k.addColorStop(1, "#1E374C"), a ? o.setFillStyle(k) : o.setFillStyle(F), o.beginPath(), o.moveTo(d, b), o.arc(x, V, s, 0, 1 * Math.PI);
                                var m = r - 2 * s;
                                o.rect(d - t, b - m, t, m), o.moveTo(l, p), o.arc(g, j, s, Math.PI, 2 * Math.PI), o.fill();
                                var P = o.createLinearGradient(x, V + s, g, j - s);
                                P.addColorStop(0, "#008BD1"), P.addColorStop(1, "white"), a ? o.setFillStyle(P) : o.setFillStyle(F), o.beginPath(), o.moveTo(l, p), o.arc(g, j, s, Math.PI, 2 * Math.PI), o.moveTo(d, b), o.arc(x, V, s, 0, 1 * Math.PI), o.beginPath();
                                var u = r / n,
                                    X = u * h;
                                if (X < s) {
                                    var N = s - X,
                                        H = s - Math.sqrt(Math.pow(s, 2) - Math.pow(N, 2)),
                                        z = i.lineTheta([d, b], [x, V], [d - H, b + N]);
                                    o.moveTo(d - H, b + N), o.arc(x, V, s, z, Math.PI - z), o.fill()
                                } else if (X <= r - s) {
                                    o.moveTo(d, b), o.arc(x, V, s, 0, 1 * Math.PI);
                                    var Q = X - s;
                                    o.rect(d - t, b - Q, t, Q), o.fill()
                                } else {
                                    o.moveTo(d, b), o.arc(x, V, s, 0, 1 * Math.PI);
                                    var R = r - 2 * s;
                                    if (o.rect(d - t, b - R, t, R), h == n) o.moveTo(l, p), o.arc(g, j, s, Math.PI, 2 * Math.PI);
                                    else {
                                        var v = X - (r - s),
                                            I = s - Math.sqrt(Math.pow(s, 2) - Math.pow(v, 2)),
                                            w = i.lineTheta([l, p], [g, j], [l + I, p - v]);
                                        o.moveTo(l + I, p - v), o.arc(g, j, s, 2 * Math.PI - w, Math.PI + w)
                                    }
                                    o.fill()
                                }
                                o.beginPath();
                                var y = .5 * t;
                                if (o.setFontSize(y), a ? o.setFillStyle("white") : o.setFillStyle(F), o.setShadow(5 * f, 5 * f, 5 * f, "rgba(0, 0, 0, 0.5)"), o.fillText(h + "", x - o.measureText(h + "").width / 2, j - s + r / 2 + y / 2), o.beginPath(), y = .8 * t, o.setFontSize(y), o.fillText("+", g - o.measureText("+").width / 2, j + y / 3), o.fillText("-", x - o.measureText("-").width / 2, V + y / 3), null != c) {
                                    var C = l,
                                        A = V + s;
                                    c(o, C, A, t, r, s, n, h)
                                }
                                o.draw()
                            },
                            addCnfValusAndSend: function(e) {
                                if (!this.xyCnf.auto) {
                                    var t = this.xyCnf.xy[this.cnfIdx].value,
                                        r = t + Math.floor(e);
                                    r = r < 0 ? 0 : r, r = r > this.chDraw.max ? this.chDraw.max : r, t != r && (this.$set(this.xyCnf.xy[this.cnfIdx], "value", r), this.refreshChDraw(), this.lastCmdTime = (new Date).getTime(), this.sendLastCmd(!1))
                                }
                            },
                            chTouchstart: function(e) {
                                this.cnfIdx = e.currentTarget.dataset.idx;
                                var t = e.touches[0];
                                this.chBeginPoint = {
                                    x: t.x,
                                    y: t.y
                                }, this.chEndPoint = null, this.lastRefresh = 0
                            },
                            chTouchmove: function(e) {
                                var t = e.touches[0];
                                this.chEndPoint = {
                                    x: t.x,
                                    y: t.y
                                };
                                var r = (new Date).getTime();
                                if (r - this.lastRefresh > 100) {
                                    var n = Math.floor((this.chBeginPoint.y - this.chEndPoint.y) / this.chPer);
                                    Math.abs(n) >= 1 && (this.chBeginPoint = {
                                        x: this.chEndPoint.x,
                                        y: this.chEndPoint.y
                                    }, this.addCnfValusAndSend(n)), this.lastRefresh = r
                                }
                            },
                            chTouchend: function(e) {
                                if (null == this.chEndPoint) {
                                    var t = this.chBeginPoint.y > this.chCanvas.h / 2 ? -1 : 1;
                                    this.addCnfValusAndSend(t)
                                }
                                this.chEndPoint = null
                            }
                        }
                    };
                t.default = l
            }).call(this, r("f3b9")["default"])
        },
        "40f5": function(e) {
            e.exports = JSON.parse('{"\u8fde\u63a5\u84dd\u7259":"K\u1ebft n\u1ed1i Bluetooth","\u968f\u673a\u64ad\u653e":"Ng\u1eabu nhi\xean","\u5df2\u8fde\u63a5":"Li\xean","\u672a\u8fde\u63a5":"Ch\u01b0a k\u1ebft n\u1ed1i","\u6237\u5916\u64ad\u653e":"Ngo\u1ea1i","\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570...":"\u0110ang t\u1ea3i...","\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25":"\u0110\u1ecdc tham s\u1ed1 thi\u1ebft b\u1ecb th\u1ea5t b\u1ea1i","\u91cd\u65b0\u5237\u65b0\u5217\u8868":"L\xe0m m\u1edbi danh s\xe1ch","\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62":"\u0110ang t\xecm ki\u1ebfm, nh\u1ea5n \u0111\u1ec3 d\u1eebng","\u641c\u7d22\u84dd\u7259\u8bbe\u5907":"T\xecm ki\u1ebfm thi\u1ebft b\u1ecb Bluetooth","\u5df2\u53d1\u73b0":"\u0110\xe3 ph\xe1t hi\u1ec7n","\u7ea2":"\u0110\u1ecf","\u7eff":"X.l\xe1","\u84dd":"X.d\u01b0.","\u9ec4":"V\xe0ng","\u9752":"X.d\u01b0.","\u7d2b":"T\xedm","\u767d":"Tr\u1eafng","\u8df3\u53d8":"C.\u0111\u1ed5i","\u5168\u5f69":"\u0110.m.","\u64ad\u653e\u6a21\u5f0f":"Ch\u1ebf \u0111\u1ed9","\u81ea\u8d70":"T\u1ef1 \u0111\u1ed9ng","\u58f0\u63a7":"\xc2m thanh","\u81ea\u8d70\u901f\u5ea6":"T\u1ed1c \u0111\u1ed9","\u58f0\u63a7\u7075\u654f\u5ea6":"\u0110\u1ed9 nh\u1ea1y","\u56fe\u6848\u989c\u8272":"M\xe0u h\xecnh \u1ea3nh","\u5f53\u524d\u989c\u8272":"M\xe0u hi\u1ec7n t\u1ea1i","\u5faa\u73af\u64ad\u653e":"V\xf2ng l\u1eb7p","\u52fe\u9009\u64ad\u653e":"\u0110\xe1nh d\u1ea5u","\u5730\u5740\u7801":"\u0110\u1ecba ch\u1ec9","\u663e\u793a\u8303\u56f4":"Hi\u1ec3n th\u1ecb","\u56fe\u6848\u76f8\u4f4d":"Pha h\xecnh \u1ea3nh","\u6b63\u5e38\u663e\u793a":"B\xecnh th\u01b0\u1eddng","XY\u4e92\u6362":"Ho\xe1n \u0111\u1ed5i XY","\u8c03\u5149\u8bbe\u7f6e":"C\xe0i \u0111\u1eb7t \u0111\xe8n","\u7ea2\u5149\u8c03\u5149":"\u0110\xe8n \u0111\u1ecf","\u7eff\u5149\u8c03\u5149":"\u0110\xe8n x.","\u84dd\u5149\u8c03\u5149":"\xc1nh s. x.","\u6fc0\u5149\u5149\u6e90":"Ngu\u1ed3n s.","\u5355\u8272":"M\xe0u \u0111.","\u53cc\u8272":"M\xe0u h.","\u8c03\u5236\u6a21\u5f0f":"Ch\u1ebf \u0111\u1ed9","\u7cfb\u7edf\u8bed\u8a00":"Ng\xf4n ng\u1eef","\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...":"\u0110ang \u0111\u1ecdc ph\xf4ng ch\u1eef...","\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9...":"\u0110ang t\u1ea1o \u0111i\u1ec3m t\u1ecda \u0111\u1ed9...","\u6587\u672c\u989c\u8272":"M\xe0u v\u0103n b\u1ea3n","\u6587\u5b57\u5927\u5c0f":"K\xedch th\u01b0\u1edbc","\u663e\u793a\u89c6\u8ddd":"Kho\u1ea3. c\xe1ch","\u6d41\u6c34\u901f\u5ea6":"T\u1ed1c \u0111\u1ed9 ch\u1ea1y","\u6295\u5c04\u65b9\u5411":"H\u01b0\u1edbng chi\u1ebfu","\u6c34\u5e73\u6295\u5c04":"Chi\u1ebfu ngang","\u5782\u76f4\u6295\u5c04":"Chi\u1ebfu d\u1ecdc","\u8d85\u51fa\u6700\u5927\u70b9\u6570":"V\u01b0\u1ee3t qu\xe1 s\u1ed1 \u0111i\u1ec3m t\u1ed1i \u0111a","\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931":"M\u1ed9t ph\u1ea7n v\u01b0\u1ee3t qu\xe1 s\u1ebd b\u1ecb m\u1ea5t","\u7ebf\u6761\u989c\u8272":"M\xe0u \u0111\u01b0\u1eddng k\u1ebb","\u6e05\u7a7a":"X\xf3a","\u56de\u9000":"Quay l\u1ea1i","\u53d1\u9001":"G\u1eedi","\u6700\u591a20\u4e2a\u573a\u666f":"T\u1ed1i \u0111a 20 c\u1ea3nh","\u63d0\u793a":"Nh\u1eafc nh\u1edf","\u662f\u5426\u5220\u9664\u573a\u666f":"X\xf3a c\u1ea3nh?","\u7528\u6237\u70b9\u51fb\u53d6\u6d88":"Ng\u01b0\u1eddi d\xf9ng b\u1ea5m h\u1ee7y","-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- Danh s\xe1ch c\u1ea3nh tr\u1ed1ng r\u1ed7ng --","\u573a\u666f":"C\u1ea3nh","\u79d2":"Gi\xe2y","\u5220\u9664":"X\xf3a","\u7f16\u8f91":"Ch\u1ec9nh","\u65b0\u589e\u573a\u666f":"Th\xeam sc\xe8ne","\u56fe\u6848\u9009\u62e9":"Ch\u1ecdn m\u1eabu","\u76f4\u7ebf\u7c7b\u56fe\u6848":"M\u1eabu th\u1eb3ng","\u5706\u5f27\u7c7b\u56fe\u6848":"M\u1eabu cung","\u4eae\u70b9\u56fe\u6848":"M\u1eabu \u0111i\u1ec3m s\xe1ng","\u6253\u70b9\u56fe\u6848":"M\u1eabu ch\u1ea5m","\u5723\u8bde\u56fe\u6848":"M\u1eabu Gi\xe1ng sinh","\u52a8\u753b\u7ec4\u522b1":"Ho\u1ea1t h\xecnh 1","\u52a8\u753b\u7ec4\u522b2":"Ho\u1ea1t h\xecnh 2","\u52a8\u753b\u7ec4\u522b3":"Ho\u1ea1t h\xecnh 3","\u52a8\u753b\u7ec4\u522b4":"Ho\u1ea1t h\xecnh 4","\u52a8\u753b\u7ec4\u522b5":"Ho\u1ea1t h\xecnh 5","\u767d\u8272":"Tr\u1eafng","\u7ea2\u8272":"\u0110\u1ecf","\u84dd\u8272":"Xanh d\u01b0\u01a1ng","\u7c89\u8272":"H\u1ed3ng","\u9752\u8272":"Xanh l\u1ee5c","\u9ec4\u8272":"V\xe0ng","\u7eff\u8272":"Xanh l\xe1","\u6574\u4f53\u989c\u8272\u6362\u8272":"M\xe0u t\u1ed5ng th\u1ec3","\u4e03\u5f69\u8679\u989c\u8272":"B\u1ea3y c\u1ea7u v\u1ed3ng","2\u5206\u6bb5\u989c\u8272":"2 \u0111o\u1ea1n m\xe0u","3\u5206\u6bb5\u989c\u8272":"3 \u0111o\u1ea1n m\xe0u","4\u5206\u6bb5\u989c\u8272":"4 \u0111o\u1ea1n m\xe0u","8\u5206\u6bb5\u989c\u8272":"8 \u0111o\u1ea1n m\xe0u","16\u5206\u6bb5\u989c\u8272":"16 \u0111o\u1ea1n m\xe0u","32\u5206\u6bb5\u989c\u8272":"32 \u0111o\u1ea1n m\xe0u","\u989c\u8272\u6e10\u7ed8":"V\u1ebd m\xe0u d\u1ea7n d\u1ea7n","\u4e0d\u6d41\u6c34":"Kh\xf4ng ch\u1ea3y","\u6b63\u5411\u6d41\u6c34":"Ch\u1ea3y xu\xf4i","\u53cd\u5411\u6d41\u6c34":"Ch\u1ea3y ng\u01b0\u1ee3c","\u56fe\u6848\u5927\u5c0f":"K\xedch th\u01b0\u1edbc m\u1eabu","\u7f29\u653e\u624b\u52a8\u9009\u62e9":"C.t.l.thu nh\u1ecf","\u7531\u5c0f\u5230\u5927\u7f29\u653e":"L\u1edbn h\u01a1n","\u7531\u5927\u5230\u5c0f\u7f29\u653e":"Nh\u1ecf h\u01a1n","\u5927\u5c0f\u5faa\u73af\u7f29\u653e":"L.l.k\xedch th\u01b0\u1edbc","\u4e0d\u89c4\u5219\u7f29\u653e\u4e00":"T.n.k.\u0111\u1ec1u m\u1ed9t","\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c":"T.n.k.\u0111\u1ec1u hai","\u4e0d\u89c4\u5219\u7f29\u653e\u4e09":"T.n.k.\u0111\u1ec1u ba","\u65cb\u8f6c\u89d2\u5ea6":"G\xf3c xoay","\u6b63\u65cb\u8f6c\u901f\u5ea6":"Xoay t\xedch c\u1ef1c","\u53cd\u65cb\u8f6c\u901f\u5ea6":"Xoay ng\u01b0\u1ee3c","\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e":"V.t.l\u1eadt ngang","\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6":"T.\u0111.l\u1eadt ngang","\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e":"V\u1ecb tr\xed l\u1eadt d\u1ecdc","\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6":"T\u1ed1c \u0111\u1ed9 l\u1eadt d\u1ecdc","\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c":"X.v.t.ngang","\u6c34\u5e73\u79fb\u52a8":"D.c.ngang","\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c":"X.v.t.d\u1ecdc","\u5782\u76f4\u79fb\u52a8":"D.c.d\u1ecdc","\u65e0\u6ce2\u6d6a":"Kh\xf4ng s\xf3ng","\u6ce2\u6d6a\u5e45\u5ea61":"S\xf3ng m\u1ed9t","\u6ce2\u6d6a\u5e45\u5ea62":"S\xf3ng hai","\u6ce2\u6d6a\u5e45\u5ea63":"S\xf3ng ba","\u6ce2\u6d6a\u5e45\u5ea64":"S\xf3ng b\u1ed1n","\u6ce2\u6d6a\u5e45\u5ea65":"S\xf3ng n\u0103m","\u6ce2\u6d6a\u5e45\u5ea66":"S\xf3ng s\xe1u","\u6ce2\u6d6a\u5e45\u5ea67":"S\xf3ng b\u1ea3y","\u6ce2\u6d6a\u5e45\u5ea68":"S\xf3ng t\xe1m","\u65e0\u6e10\u7ed8":"Kh\xf4ng v\u1ebd d\u1ea7n d\u1ea7n","\u624b\u52a8\u6e10\u7ed81":"V.d.d.th\u1ee7 c\xf4ng 1","\u624b\u52a8\u6e10\u7ed82":"V.d.d.th\u1ee7 c\xf4ng 2","\u81ea\u52a8\u6e10\u7ed81":"V.d.d.t\u1ef1 \u0111\u1ed9ng 1","\u81ea\u52a8\u6e10\u7ed82":"V.d.d.t\u1ef1 \u0111\u1ed9ng 2","\u81ea\u52a8\u6e10\u7ed83":"V.d.d.t\u1ef1 \u0111\u1ed9ng 3","\u81ea\u52a8\u6e10\u7ed84":"V.d.d.t\u1ef1 \u0111\u1ed9ng 4","\u56fe\u5f62\u5206\u7ec4":"Nh\xf3m","\u56fe\u5f62":"H\xecnh","\u989c\u8272":"M\xe0u","\u989c\u8272\u6d41\u6c34":"M\xe0u","\u56fe\u5f62\u5927\u5c0f":"K\xedch c\u1ee1","\u56fe\u5f62\u7f29\u653e":"T.ph\xf3ng","\u56fe\u5f62\u65cb\u8f6c":"Xoay","\u6c34\u5e73\u7ffb\u8f6c":"L.ngang","\u5782\u76f4\u7ffb\u8f6c":"L.d\u1ecdc","\u6ce2\u6d6a":"S\xf3ng","\u6e10\u7ed8":"V\u1ebd","\u64ad\u653e\u65f6\u957f":"Th\u1eddi l\u01b0\u1ee3ng","\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62...":"\u0110ang t\u1ea3i h\xecnh...","\u53d6\u6d88":"H\u1ee7y","\u786e\u5b9a":"X\xe1c nh\u1eadn","\u9009\u62e9\u56fe\u5f62":"M\u1eabu","\u901a\u9053\u590d\u4f4d":"\u0110\u1eb7t l\u1ea1i","\u5b8b\u4f53":"SS","\u76f4\u7ebf":"Th\u1eb3ng","\u5706\u5f27":"Cong","\u4eae\u70b9":"S\xe1ng","\u6253\u70b9":"Ch\u1ea5m","\u5723\u8bde":"G.sinh","\u52a8\u753bA":"A-\u0111.\u1ea3nh","\u52a8\u753bB":"B-\u0111.\u1ea3nh","\u5f69\u8679":"C.v\u1ed3ng","\u9ed8\u8ba4":"M.\u0111\u1ecbnh","\u8f6f\u4ef6\u7248\u672c":"P.b\u1ea3n","\u8fde\u63a5":"K\u1ebft n\u1ed1i","\u8bbe\u7f6e":"C\xe0i \u0111\u1eb7t","\u624b\u7ed8\u6d82\u9e26":"V\u1ebd tay","\u6587\u672c\u64ad\u653e":"Ph\xe1t v\u0103n b\u1ea3n","\u4e2a\u6027\u7f16\u7a0b":"L\u1eadp tr\xecnh","\u52a8\u753b\u64ad\u653e":"Ph\xe1t \u0111i\u1ec7n \u1ea3nh","\u7ebf\u6761\u64ad\u653e":"D\xf2ng","\u5723\u8bde\u64ad\u653e":"Gi\xe1ng sinh","DMX":"DMX","\u914d\u7f6e":"C\u1ea5u h\xecnh","\u8fd4\u56de":"Quay l\u1ea1i","\u70b9\u6211\u8fde\u63a5":"Ch\u1ea1m \u0111\u1ec3 k\u1ebft n\u1ed1i","\u84dd\u7259\u672a\u8fde\u63a5":"Bluetooth ch\u01b0a k\u1ebft n\u1ed1i","\u8bbe\u5907":"Thi. b\u1ecb","\u8bf7\u8f93\u5165\u6587\u5b57":"Nh\u1eadp v\u0103n b\u1ea3n","\u9884\u7559\u65e0\u529f\u80fd":"\u0110\u1eb7t ph\xf2ng","\u91cd\u7f6e":"\u0110\u1eb7t l\u1ea1i","\u84dd\u7259\u8fde\u63a5":"K\u1ebft n\u1ed1i Bluetooth","\u5168\u9009":"T\u1ea5t c\u1ea3","\u53cd\u9009":"Ng\u01b0\u1ee3c","\u6e05\u9664":"X\xf3a","\u5b57\u6570":"S\u1ed1 t\u1eeb","\u70b9\u6570":"S\u1ed1 \u0111i\u1ec3m","\u9884\u89c8":"Xem tr\u01b0\u1edbc","\u573a\u666f\u7ba1\u7406":"Qu\u1ea3n l\xfd c\u1ea3nh","\u52a0\u8f7d\u4e2d":"\u0110ang t\u1ea3i","\u573a\u666f\u7f16\u8f91":"Ch\u1ec9nh s\u1eeda c\u1ea3nh","\u8bf7\u5148\u8fde\u63a5\u84dd\u7259":"Vui l\xf2ng k\u1ebft n\u1ed1i Bluetooth tr\u01b0\u1edbc","\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b":"Thi\u1ebft b\u1ecb hi\u1ec7n t\u1ea1i kh\xf4ng th\u1ec3 nh\u1eadn d\u1ea1ng","DMX\u5730\u5740\u7801":"M\xe3 \u0111\u1ecba ch\u1ec9","\u8bf7\u5148\u6253\u5f00\u8bbe\u5907":"Vui l\xf2ng m\u1edf thi\u1ebft b\u1ecb tr\u01b0\u1edbc","\u5355\u7ebf\u5b57\u4f53":"D.\u0111\u01a1n","\u6b63\u5728\u53d1\u9001":"\u0110ang g\u1eedi","\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528":"Vui l\xf2ng ki\u1ec3m tra xem Bluetooth tr\xean \u0111i\u1ec7n tho\u1ea1i c\xf3 \u0111ang b\u1eadt kh\xf4ng","\u8be5\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587\u663e\u793a":"Font n\xe0y kh\xf4ng h\u1ed7 tr\u1ee3 hi\u1ec3n th\u1ecb ti\u1ebfng Trung","\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c":"V\xec h\u1ea1n ch\u1ebf dung l\u01b0\u1ee3ng, m\u1ed9t s\u1ed1 k\xfd t\u1ef1 Trung Qu\u1ed1c kh\xf4ng \u0111\u01b0\u1ee3c bao g\u1ed3m trong th\u01b0 vi\u1ec7n k\xfd t\u1ef1, vui l\xf2ng truy c\u1eadp phi\xean b\u1ea3n \u1ee9ng d\u1ee5ng \u0111\u1ec3 c\xf3 th\u01b0 vi\u1ec7n k\xfd t\u1ef1 \u0111\u1ea7y \u0111\u1ee7","\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650":"Vui l\xf2ng c\xe0i \u0111\u1eb7t quy\u1ec1n v\u1ecb tr\xed \u1ee9ng d\u1ee5ng","\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650":"Vui l\xf2ng c\xe0i \u0111\u1eb7t quy\u1ec1n Bluetooth cho \u1ee9ng d\u1ee5ng nh\u1ecf","\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38":"L\u1ed7i \u0111\u1ecdc tham s\u1ed1 thi\u1ebft b\u1ecb","\u9009\u62e9":"Ch\u1ecdn","\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247":"C\xe0i \u0111\u1eb7t h\xecnh n\u1ec1n","\u53d1\u9001\u5931\u8d25":"G\u1eedi kh\xf4ng th\xe0nh c\xf4ng","\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165":"V\u0103n b\u1ea3n v\u01b0\u1ee3t qu\xe1 100 k\xfd t\u1ef1, vui l\xf2ng nh\u1eadp l\u1ea1i","\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165":"S\u1ed1 \u0111i\u1ec3m v\u01b0\u1ee3t qu\xe1 2048, vui l\xf2ng nh\u1eadp l\u1ea1i","\u7b2c":"Nh\xf3m ","\u7ec4\u6587\u5b57":".","\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5":"Vui l\xf2ng s\u1eeda font ho\u1eb7c v\u0103n b\u1ea3n tr\u01b0\u1edbc khi th\u1eed l\u1ea1i","\u4e0d\u652f\u6301\u6587\u672c":"Kh\xf4ng h\u1ed7 tr\u1ee3 v\u0103n b\u1ea3n","\u7ec4\u5b57\u4f53":"Nh\xf3m font","\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u53d1\u9001":"Nh\xf3m v\u0103n b\u1ea3n tr\u1ed1ng, vui l\xf2ng nh\u1eadp tr\u01b0\u1edbc khi g\u1eedi","\u662f\u5426\u5220\u9664\u7b2c":"X\xf3a nh\xf3m","\u7ec4":".","\u6700\u591a4\u4e2a\u5206\u7ec4":"T\u1ed1i \u0111a 4 nh\xf3m","\u6b63\u5728\u8fde\u63a5...":"\u0110ang k\u1ebft n\u1ed1i...","\u8fde\u63a5\u5931\u8d25":"K\u1ebft n\u1ed1i kh\xf4ng th\xe0nh c\xf4ng","\u5b57\u4f53\u9009\u62e9":"Ch\u1ecdn font","\u601d\u6e90\u9ed1\u4f53":"Noto Sans","\u601d\u6e90\u9ed1\u4f531":"Noto Sans 1","\u601d\u6e90\u9ed1\u4f532":"Noto Sans 2","\u601d\u6e90\u9ed1\u4f533":"Noto Sans 3","\u601d\u6e90\u9ed1\u4f534":"Noto Sans 4","\u601d\u6e90\u9ed1\u4f535":"Noto Sans 5","\u601d\u6e90\u9ed1\u4f536":"Noto Sans 6","\u601d\u6e90\u9ed1\u4f537":"Noto Sans 7","font_note_1001":"Ti\u1ebfng Trung, ti\u1ebfng Anh, ti\u1ebfng T\xe2y Ban Nha, ti\u1ebfng B\u1ed3 \u0110\xe0o Nha, ti\u1ebfng \u0110\u1ee9c, ti\u1ebfng Ph\xe1p","font_note_1002":"Ti\u1ebfng Anh, ti\u1ebfng T\xe2y Ban Nha, ti\u1ebfng Nga, ti\u1ebfng B\u1ed3 \u0110\xe0o Nha, ti\u1ebfng \u0110\u1ee9c, ti\u1ebfng Ph\xe1p, ti\u1ebfng Vi\u1ec7t, ti\u1ebfng Hindi, ti\u1ebfng Bangladesh","font_note_1003":"Ti\u1ebfng Anh, ti\u1ebfng Trung, ti\u1ebfng T\xe2y Ban Nha, ti\u1ebfng Nga, ti\u1ebfng B\u1ed3 \u0110\xe0o Nha, ti\u1ebfng Nh\u1eadt, ti\u1ebfng \u0110\u1ee9c","font_note_1004":"Ti\u1ebfng Trung, ti\u1ebfng Anh, ti\u1ebfng T\xe2y Ban Nha, ti\u1ebfng B\u1ed3 \u0110\xe0o Nha, ti\u1ebfng \u0110\u1ee9c, ti\u1ebfng Ph\xe1p","font_note_1005":"Ti\u1ebfng Anh, ti\u1ebfng Trung","font_note_1006":"Ti\u1ebfng Anh, ti\u1ebfng Nh\u1eadt, ti\u1ebfng H\xe0n","font_note_1007":"Ti\u1ebfng \u1ea2 R\u1eadp","\u4fdd\u7559":"Gi\u1eef nguy\xean","\u56fe\u6848\u521d\u59cb\u989c\u8272":"M\xe0u ban \u0111\u1ea7u c\u1ee7a m\u1eabu","\u6df7\u8272":"Tr\u1ed9n m\xe0u","\u7b14\u753b\u5c11\uff0c\u65e0\u95ea\u70c1\uff0c\u63a8\u8350\u4f7f\u7528":"\u0110\u1ec1 ngh\u1ecb s\u1eed d\u1ee5ng","\u5df2\u65ad\u5f00\u8fde\u63a5":"\u0110\xe3 ng\u1eaft k\u1ebft n\u1ed1i","\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c":"Vui l\xf2ng nh\u1eadp s\u1ed1 trong ph\u1ea1m vi t\u1eeb 1 \u0111\u1ebfn 255","\u6587\u5b57\u7cbe\u5ea6":"Hi\u1ec7u \u1ee9ng","\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6":"Hi\u1ec7u \u1ee9ng","\u7cbe\u5ea6":"Hi\u1ec7u \u1ee9ng","\u9009\u62e9\u56fe\u7247":"H\xecnh \u1ea3nh","\u8bbe\u4e3a\u80cc\u666f":"N\u1ec1n","\u8bc6\u522b\u56fe\u6848":"T\u1ea1o ra","\u63cf\u8fb9":"Vi\u1ec1n","\u6b63\u5728\u5904\u7406\u4e2d":"\u0110ang x\u1eed l\xfd","\u5f53\u524d\u673a\u578b":"L.m\xe1y","hand_draw_tips":" ** Vui l\xf2ng s\u1eed d\u1ee5ng ng\xf3n tay \u0111\u1ec3 vu\u1ed1t t\u1eeb khu v\u1ef1c tr\u1ed1ng \u0111\u1ebfn m\u1eabu m\u1ee5c ti\xeau \u0111\u1ec3 ch\u1ecdn \\n ** C\xf3 th\u1ec3 ph\xf3ng to, thu nh\u1ecf, di chuy\u1ec3n, thay \u0111\u1ed5i m\xe0u s\u1eafc, x\xf3a vv. tr\xean m\u1eabu \u0111\xe3 ch\u1ecdn","\u4e0d\u518d\u63d0\u793a":"Kh\xf4ng nh\u1eafc l\u1ea1i","out_door_tips1":"1-30 \u0110i\u1ec3m \u0111\u1ecbnh h\u01b0\u1edbng","out_door_tips2":"31-40 \xc1nh s\xe1ng ph\xeda B\u1eafc","out_door_tips3":"41-50 \u0110\u01b0\u1eddng h\u1ea7m th\u1eddi gian","\u6587\u4ef6\u540d":"T\xean t\u1ec7p","\u4fdd\u5b58\u6587\u4ef6":"L\u01b0u t\u1ec7p tin","\u9009\u62e9\u6587\u4ef6":"Ch\u1ecdn t\u1ec7p tin","\u8bf7\u8f93\u5165\u6587\u4ef6\u540d":"Vui l\xf2ng nh\u1eadp t\xean t\u1ec7p","\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d":"Vui l\xf2ng nh\u1eadp t\xean t\u1ec7p m\u1edbi","\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a":"T\xean t\u1ec7p kh\xf4ng \u0111\u01b0\u1ee3c \u0111\u1ec3 tr\u1ed1ng","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165":"T\u1ec7p \u0111\xe3 t\u1ed3n t\u1ea1i, vui l\xf2ng nh\u1eadp l\u1ea1i","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed":"T\u1ec7p \u0111\xe3 t\u1ed3n t\u1ea1i, ti\u1ebfp t\u1ee5c?","\u4fdd\u5b58\u6210\u529f":"L\u01b0u th\xe0nh c\xf4ng","\u4fdd\u5b58\u5931\u8d25":" L\u01b0u kh\xf4ng th\xe0nh c\xf4ng","\u4fee\u6539\u6210\u529f":"S\u1eeda \u0111\u1ed5i th\xe0nh c\xf4ng","\u4fee\u6539\u5931\u8d25":"S\u1eeda \u0111\u1ed5i th\u1ea5t b\u1ea1i","\u5220\u9664\u6210\u529f":"X\xf3a th\xe0nh c\xf4ng","\u5220\u9664\u5931\u8d25":"X\xf3a th\u1ea5t b\u1ea1i","\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301":"M\u1eabu hi\u1ec7n t\u1ea1i kh\xf4ng h\u1ed7 tr\u1ee3","text_time_range":"Ph\u1ea1m vi 1-25,5","\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848":"Nh\u1eadn d\u1ea1ng th\u1ea5t b\u1ea1i","\u8bf7\u9009\u62e9\u6587\u4ef6":"Vui l\xf2ng ch\u1ecdn t\u1eadp tin","\u6587\u4ef6\u6570":"T\u1ec7p","\u53e6\u5b58\u6587\u4ef6":"L\u01b0u d\u01b0\u1edbi d\u1ea1ng","\u5220\u9664\u6240\u9009\u6587\u4ef6":"X\xf3a t\u1ec7p \u0111\xe3 ch\u1ecdn","Select-File":"Ch\u1ecdn","\u6447\u5934\u8bbe\u7f6e":"Chuy\u1ec3n \u0110\u1ed9ng \u0110\u1ea7u","\u6447\u5934\u6a21\u5f0f":"Ch\u1ebf \u0110\u1ed9","\u6447\u5934\u76f8\u4f4d":"Giai","\u81ea\u52a8":"T\u1ef1 \u0110\u1ed9ng","\u624b\u52a8":"Th\u1ee7 C\xf4ng","X\u7c97\u8c03":"Th\xf4 X","X\u7ec6\u8c03":"Tinh X","Y\u7c97\u8c03":"Th\xf4 Y","Y\u7ec6\u8c03":"Tinh Y","\u6c34\u5e73\u7535\u673a":"Ngang","\u6c34\u5e73\u5fae\u8c03":"T.Ngang","\u5782\u76f4\u7535\u673a":"D\u1ecdc","\u5782\u76f4\u5fae\u8c03":"T.D\u1ecdc","\u7535\u673a\u901f\u5ea6":"T\u1ed1c","\u6d41\u6c34\u65b9\u5411":"H\u01b0\u1edbng","\u963f\u62c9\u4f2f\u8bed\u65b9\u5411":"\u1ea2 R\u1eadp","\u9ed8\u8ba4\u65b9\u5411":"M\u1eb7c \u0111\u1ecbnh","\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939":"L\u01b0u v\xe0o th\u01b0 m\u1ee5c","\u9009\u62e9\u5217\u8868":"Danh s\xe1ch","\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0":"Vui l\xf2ng nh\u1eadp t\xean nh\xf3m","\u64ad\u653e\u5217\u8868":"Danh s\xe1ch ph\xe1t","\u4fdd\u5b58":"L\u01b0u","\u6dfb\u52a0":"Th\xeam","\u6279\u91cf\u8bbe\u7f6e":"S\u1ed1 l\u01b0\u1ee3ng l\u1edbn","\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0":"Vui l\xf2ng nh\u1eadp t\xean danh s\xe1ch","ALL":"T\u1ea5t c\u1ea3","\u5217\u8868\u7f16\u8f91":"Ch\u1ec9nh s\u1eeda danh s\xe1ch","\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57":"Vui l\xf2ng nh\u1eadp m\u1ed9t s\u1ed1 t\u1eeb 0.1 \u0111\u1ebfn 25.5","\u6dfb\u52a0\u81f3\u65b0\u5217\u8868":"Th\xeam v\xe0o danh s\xe1ch m\u1edbi","\u7acb\u5373\u64ad\u653e":"Ph\xe1t ngay","\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed":"Danh s\xe1ch ph\xe1t t\u01b0\u01a1ng \u1ee9ng s\u1ebd b\u1ecb x\xf3a, ti\u1ebfp t\u1ee5c","-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- Danh s\xe1ch tr\u1ed1ng --"}')
        },
        4137: function(e, t) {
            var r = new function() {
                var e = this;

                function t(e, t, r) {
                    return 0 == r ? [e, t + 1] : 1 == r ? [e - 1, t + 1] : 2 == r ? [e - 1, t] : 3 == r ? [e - 1, t - 1] : 4 == r ? [e, t - 1] : 5 == r ? [e + 1, t - 1] : 6 == r ? [e + 1, t] : 7 == r ? [e + 1, t + 1] : null
                }

                function r(e, t, r, n) {
                    var h = r - e,
                        a = n - t;
                    return 0 == h && 1 == a ? 0 : -1 == h && 1 == a ? 1 : -1 == h && 0 == a ? 2 : -1 == h && -1 == a ? 3 : 0 == h && -1 == a ? 4 : 1 == h && -1 == a ? 5 : 1 == h && 0 == a ? 6 : 1 == h && 1 == a ? 7 : -1
                }

                function n(e, n, h, a, i, c, o, s) {
                    for (var l = r(a, i, c, o), p = 0; p < 8; p++) {
                        var d = (p + l + s + 16) % 8,
                            b = t(a, i, d);
                        if (0 != e[b[0] * n + b[1]]) return b
                    }
                    return null
                }

                function h(e, n, h, a, i, c, o, s) {
                    for (var l = r(a, i, c, o), p = 0; p < 8; p++) {
                        var d = (-p + l - s + 16) % 8,
                            b = t(a, i, d);
                        if (0 != e[b[0] * n + b[1]]) return b
                    }
                    return null
                }

                function a(e, t, r) {
                    var n, h, a = e[0],
                        i = e[1],
                        c = t[0],
                        o = t[1],
                        s = r[0],
                        l = r[1],
                        p = a - c,
                        d = i - o,
                        b = s - c,
                        g = l - o,
                        j = p * b + d * g,
                        x = b * b + g * g,
                        V = -1;
                    0 != x && (V = j / x), V < 0 ? (n = c, h = o) : V > 1 ? (n = s, h = l) : (n = c + V * b, h = o + V * g);
                    var f = a - n,
                        F = i - h;
                    return Math.sqrt(f * f + F * F)
                }
                e.findContours = function(e, t, r) {
                    for (var a = 1, i = 1, c = [], o = 1; o < r - 1; o++) e[o * t] = 0, e[o * t + t - 1] = 0;
                    for (var s = 0; s < t; s++) e[s] = 0, e[t * r - 1 - s] = 0;
                    for (var l = 1; l < r - 1; l++) {
                        i = 1;
                        for (var p = 1; p < t - 1; p++) {
                            var d = 0,
                                b = 0;
                            if (0 != e[l * t + p]) {
                                if (1 == e[l * t + p] && 0 == e[l * t + (p - 1)]) a++, d = l, b = p - 1;
                                else {
                                    if (!(e[l * t + p] >= 1 && 0 == e[l * t + p + 1])) {
                                        1 != e[l * t + p] && (i = Math.abs(e[l * t + p]));
                                        continue
                                    }
                                    a++, d = l, b = p + 1, e[l * t + p] > 1 && (i = e[l * t + p])
                                }
                                var g = {
                                    points: []
                                };
                                g.points.push([p, l]), g.isHole = b == p + 1, g.id = a, c.push(g);
                                for (var j = {}, x = 0; x < c.length; x++)
                                    if (c[x].id == i) {
                                        j = c[x];
                                        break
                                    } j.isHole ? g.isHole ? g.parent = j.parent : g.parent = i : g.isHole ? g.parent = i : g.parent = j.parent;
                                var V, f, F = h(e, t, 0, l, p, d, b, 0);
                                if (null != F) {
                                    V = F[0], f = F[1], d = V, b = f;
                                    var k = l,
                                        m = p;
                                    while (1) {
                                        var P = n(e, t, 0, k, m, d, b, 1),
                                            u = P[0],
                                            X = P[1];
                                        if (c[c.length - 1].points.push([X, u]), 0 == e[k * t + m + 1] ? e[k * t + m] = -a : 1 == e[k * t + m] && (e[k * t + m] = a), u == l && X == p && k == V && m == f) {
                                            1 != e[l * t + p] && (i = Math.abs(e[l * t + p]));
                                            break
                                        }
                                        d = k, b = m, k = u, m = X
                                    }
                                } else e[l * t + p] = -a, 1 != e[l * t + p] && (i = Math.abs(e[l * t + p]))
                            }
                        }
                    }
                    return c
                }, e.approxPolySimple = function(e) {
                    if (e.length <= 2) return e;
                    var t = [];
                    t.push(e[0].slice());
                    for (var r = 1; r < e.length - 1; r++) {
                        var n = a(e[r], e[r - 1], e[r + 1]);
                        n > .1 && t.push(e[r].slice())
                    }
                    return t.push(e[e.length - 1].slice()), t
                }, e.approxPolyDP = function(t, r) {
                    if (t.length <= 2) return t;
                    for (var n = 0, h = -1, i = 1; i < t.length - 1; i++) {
                        var c = a(t[i], t[0], t[t.length - 1]);
                        c > n && (n = c, h = i)
                    }
                    var o = [];
                    if (n > r) {
                        var s = e.approxPolyDP(t.slice(0, h + 1), r),
                            l = e.approxPolyDP(t.slice(h, t.length), r);
                        o = o.concat(s.slice(0, s.length - 1)).concat(l)
                    } else o.push(t[0].slice()), o.push(t[t.length - 1].slice());
                    return o
                }
            };
            e.exports = {
                FindContours: r
            }
        },
        4165: function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return n
            })), r.d(t, "c", (function() {
                return h
            })), r.d(t, "a", (function() {}));
            var n = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return e._$s(0, "i", e.isShow || e.onceRender) ? r("view", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e._$s(0, "v-show", e.isShow),
                            expression: "_$s(0,'v-show',isShow)"
                        }],
                        ref: "ani",
                        class: e._$s(0, "c", e.customClass),
                        style: e._$s(0, "s", e.transformStyles),
                        attrs: {
                            animation: e._$s(0, "a-animation", e.animationData),
                            _i: 0
                        },
                        on: {
                            click: e.onClick
                        }
                    }, [e._t("default", null, {
                        _i: 1
                    })], 2) : e._e()
                },
                h = []
        },
        4306: function(e, t, r) {
            "use strict";
            t["a"] = function(e) {
                (e.options.wxs || (e.options.wxs = {}))["drag"] = function(e) {
                    var t = {},
                        r = {},
                        n = !1,
                        h = !1;

                    function a(e) {
                        "undefined" == typeof t[e] && (t[e] = 0)
                    }
                    var i = null,
                        c = null,
                        o = null,
                        s = 0,
                        l = !1;

                    function p(e, t) {
                        k.longTouch && (n = !0, b(t, 0))
                    }
                    var d = "";

                    function b(e, n) {
                        var h = e.getState();
                        i.removeClass("hide"), i.hasClass("show") || i.addClass("show"), c.setStyle({
                            transform: "translate3d(0," + n + "px,10px)",
                            "-webkit-transform": "translate3d(0," + n + "px,10px)"
                        }), o.hasClass("hide") || o.addClass("hide"), o.removeClass("ani");
                        var a = h.shadowRowTop + n + k.rowHeight / 2,
                            l = t[k.guid],
                            p = {
                                guid: k.guid,
                                command: a < .2 * k.ListHeight ? "up" : a > k.ListHeight - .2 * k.ListHeight ? "down" : "stop",
                                scrollTop: l
                            };
                        d != p.command && (d = p.command, k.autoScroll && e.callMethod("pageScroll", p));
                        var b = n + t[k.guid] - h.initscrollTop,
                            j = function(e, t) {
                                var r = e + parseInt(t / k.rowHeight),
                                    n = t % k.rowHeight;
                                n > 0 ? (r += n / k.rowHeight >= .6 ? 1 : 0, r < g && (r = n / k.rowHeight <= .4 ? r : g)) : (r += n / k.rowHeight <= -.6 ? -1 : 0, r > g && (r = n / k.rowHeight >= -.4 ? r : g));
                                return r
                            }(s, b);
                        if ((j <= 2 || j >= k.listLength - 2) && (p.command = "stop"), (!k.autoScroll || k.isAppH5 || "stop" == p.command) && (g = null == g ? s : g, !(j < 0 || j >= k.listLength) && j != g)) {
                            g = j, h.offset = j, e.callMethod("change", {
                                index: s,
                                moveTo: h.offset
                            });
                            for (var x = 0; x < r[k.guid].length; x++) {
                                var V = r[k.guid][x].lastSort,
                                    F = r[k.guid][x].newSort;
                                if (F = V >= j && V <= s || V <= j && V >= s ? V == s ? j : V < s ? V + 1 : V - 1 : V, r[k.guid][x].newSort != F) {
                                    r[k.guid][x].newSort = F;
                                    var m = 100 * (r[k.guid][x].newSort - r[k.guid][x].sort);
                                    r[k.guid][x].rowView.hasClass("ani") || r[k.guid][x].rowView.addClass("ani"), r[k.guid][x].rowView.setStyle({
                                        transform: "translate3d(0," + m + "%,0)",
                                        "-webkit-transform": "translate3d(0," + m + "%,0)"
                                    })
                                }
                            }
                            f(e)
                        }
                    }
                    var g = null;
                    var j, x, V = "undefined" != typeof plus && "iOS" == plus.os.name;

                    function f(e) {
                        k.feedbackGenerator && (V ? setTimeout((function() {
                            x.selectionChanged()
                        }), 0) : "undefined" != typeof plus ? plus.device.vibrate(12) : e.callMethod("vibrate"))
                    }
                    V && (j = plus.ios.importClass("UISelectionFeedbackGenerator"), x = new j, x.init());
                    var F = {},
                        k = {};
                    return e.exports = {
                        receiveData: function(e, t, n) {
                            for (var h = JSON.parse(e), a = {}, i = !1, c = [], o = 0; o < h.length; o++) {
                                var s = h[o];
                                switch (s[0]) {
                                    case "sortArray":
                                        c = s[1];
                                        break;
                                    default:
                                        "guid" == s[0] && (i = !0), a[s[0]] = s[1];
                                        break
                                }
                            }
                            if (i) {
                                var l = !1;
                                "undefined" != typeof F[a.guid] && "undefined" != typeof F[a.guid].lastInitTime && F[a.guid].lastInitTime == a.lastInitTime || (l = !0), F[a.guid] = a, l && function(e, t, n) {
                                    r[e] = [];
                                    for (var h = t.selectAllComponents(".hm-row"), a = 0; a < h.length; a++) {
                                        var i = {
                                            id: h[a].getDataset().id,
                                            sort: a,
                                            lastSort: parseInt(h[a].getDataset().sort),
                                            newSort: a,
                                            rowView: h[a]
                                        };
                                        n.length > 0 && (i.lastSort = n[a], i.newSort = i.lastSort), r[e].push(i);
                                        var c = 100 * (i.lastSort - i.sort);
                                        i.rowView.setStyle({
                                            transform: "translate3d(0," + c + "%,0)",
                                            "-webkit-transform": "translate3d(0," + c + "%,0)"
                                        })
                                    }
                                }(a.guid, n, c)
                            }
                        },
                        scroll: function(e, r) {
                            var n = r.selectComponent("#dataView"),
                                h = n.getDataset();
                            a(h.guid), t[h.guid] = e.detail.scrollTop
                        },
                        longpress: p,
                        touchstart: function(e, d) {
                            if (!l) {
                                l = !0, "undefined" === typeof setTimeout && "undefined" !== typeof d.setTimeout && (setTimeout = d.setTimeout, clearTimeout = d.clearTimeout), n = !1;
                                var b = e.instance.getDataset(),
                                    g = d.getState();
                                1 == e.touches.length && (g.point = e.touches[0], g.islongTap = !0, g.rowData = b, function(e, r) {
                                    var n = r.selectComponent("#dataView"),
                                        h = n.getDataset();
                                    k = F[h.guid], a(k.guid), e.initscrollTop = t[k.guid]
                                }(g, d));
                                var j = e.instance.getComputedStyle(["height"]);
                                k.rowHeight = parseFloat(j.height), s = function(e, t) {
                                    for (var n = 0; n < r[k.guid].length; n++)
                                        if (r[k.guid][n].id == e) return o = r[k.guid][n].rowView, r[k.guid][n].lastSort
                                }(b.id);
                                var x = s * k.rowHeight;
                                x -= t[k.guid], d.callMethod("loadShadowRow", {
                                    rowSort: s
                                }), g.shadowRowTop = x, i = d.selectComponent("#shadowRowBox"), i.setStyle({
                                    top: x + "px"
                                }), c = d.selectComponent("#shadowRow"), k.longTouch && (h && clearTimeout(h), h = setTimeout((function() {
                                    p(e, d)
                                }), k.longTouchTime))
                            }
                        },
                        touchmove: function(e, t) {
                            var r = t.getState(),
                                a = (e.instance.getDataset(), e.touches[0]),
                                i = r.point,
                                c = a.pageY - i.pageY;
                            if (!k.longTouch || (Math.abs(c) > 10 && clearTimeout(h), n)) return b(t, c), e.preventDefault && e.preventDefault(), !1
                        },
                        touchend: function(e, t) {
                            if (k.longTouch && (clearTimeout(h), !n)) return g = null, void(l = !1);
                            "stop" != d && (d = "stop", k.autoScroll && t.callMethod("pageScroll", {
                                guid: k.guid,
                                command: "stop"
                            }));
                            var a = t.getState();
                            if (function(e, t) {
                                    o.removeClass("hide")
                                }(0, a.rowData.id), function(e, t) {
                                    i.removeClass("show"), i.addClass("hide"), i.setStyle({})
                                }(0, a.offset), "undefined" === typeof a.offset || s == a.offset || null == a.offset) return l = !1, f(t), !1;
                            for (var c = [], p = 0; p < r[k.guid].length; p++) r[k.guid][p].lastSort = r[k.guid][p].newSort, c.push(r[k.guid][p].newSort), r[k.guid][p].rowView.removeClass("ani");
                            return t.callMethod("sort", {
                                index: s,
                                offset: a.offset,
                                sortArray: c
                            }), a.offset = null, g = null, l = !1, f(t), !1
                        }
                    }, e.exports
                }({
                    exports: {}
                })
            }
        },
        "44c2": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            _i: 1
                        }
                    }, [r("navigation-bar", {
                        attrs: {
                            title: e.nbTitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), r("view", [r("view", [r("view", [r("view", [e._e(), r("view", [r("label", [e._v(e._$s(11, "t0-0", e._s(null == e.deviceTesting ? "\u7b49\u5f85\u6d4b\u8bd5" : e.testStatus)))]), r("label", [e._v(e._$s(12, "t0-0", e._s(null == e.deviceTesting ? "\u7b49\u5f85\u8bbe\u5907" : e.deviceTesting.showName)))]), r("view", [r("label", [e._v(e._$s(14, "t0-0", e._s(e.total)))]), r("label", [e._v(e._$s(15, "t0-0", e._s(e.notPass)))]), r("label", [e._v(e._$s(16, "t0-0", e._s(e.passCount)))])])]), r("scroll-view", {
                        attrs: {
                            _i: 17
                        }
                    }, e._l(e._$s(18, "f", {
                        forItems: e.deviceTested
                    }), (function(t, n, h, a) {
                        return r("view", {
                            key: e._$s(18, "f", {
                                forIndex: h,
                                key: n
                            }),
                            staticClass: e._$s("18-" + a, "sc", "device_item"),
                            style: e._$s("18-" + a, "s", null != e.deviceTesting && e.testingIdx == n ? "border-style: solid; border-width: 4rpx; border-color: #0067DC;" : ""),
                            attrs: {
                                id: "scroll_view",
                                "scroll-top": e._$s("18-" + a, "a-scroll-top", e.scrollTop),
                                "data-device-id": e._$s("18-" + a, "a-data-device-id", t.deviceId),
                                "data-name": e._$s("18-" + a, "a-data-name", t.showName),
                                _i: "18-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.reTest(n)
                                }
                            }
                        }, [r("view", [r("view", [e._v(e._$s("20-" + a, "t0-0", e._s(t.showName)))]), r("view", {
                            style: e._$s("21-" + a, "s", "font-size: 26rpx; color:" + ("\u5df2\u901a\u8fc7" == t.testResult ? "green" : "\u672a\u901a\u8fc7" == t.testResult ? "red" : "white")),
                            attrs: {
                                _i: "21-" + a
                            }
                        }, [e._v(e._$s("21-" + a, "t0-0", e._s(t.testResult)))])]), r("view", [e._v(e._$s("22-" + a, "t0-0", e._s(t.testMsg)))])])
                    })), 0), r("view", [r("button", {
                        staticClass: e._$s(24, "sc", "button_sps"),
                        attrs: {
                            loading: e._$s(24, "a-loading", e.misScanding),
                            _i: 24
                        },
                        on: {
                            click: e.startBluetoothDevicesDiscovery
                        }
                    }, [e._v(e._$s(24, "t0-0", e._s(e.scandbutName)))])])])])])])], 1)
                },
                a = []
        },
        "47a9": function(e, t) {
            e.exports = function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        4883: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("75a8"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "48ab": function(e, t, r) {
            "use strict";
            (function(e) {
                var n = r("47a9");
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var h = n(r("762b")),
                    a = getApp(),
                    i = r("3b77"),
                    c = r("c4ce"),
                    o = ["black", "red", "green", "blue", "yellow", "#00FFFF", "purple", "white"],
                    s = {
                        data: function() {
                            var e = a.globalData.getDeviceFeatures(),
                                t = e.xyCnf ? 18 : 12;
                            return {
                                screen_width: a.globalData.screen_width_str,
                                scUnit: a.globalData.screen_width_float,
                                rtl: a.globalData.rtl,
                                ntitle: this.$t("\u573a\u666f\u7f16\u8f91"),
                                loadObjTitel: this.$t("\u52a0\u8f7d\u4e2d") + "...",
                                imageDrawOffset: 0,
                                imageShowCount: 0,
                                features: e,
                                popupShow: !1,
                                imageListViewHeight: 0,
                                imgArrays: [],
                                lastRefresh: 0,
                                lastCmdTime: 0,
                                lastSendtime: 0,
                                chPer: 1,
                                chBeginPoint: {
                                    x: 0,
                                    y: 0
                                },
                                chEndPoint: {
                                    x: 0,
                                    y: 0
                                },
                                pisObjNote: {
                                    0: [
                                        [256, this.$t("\u56fe\u6848\u9009\u62e9")]
                                    ],
                                    1: [
                                        [25, this.$t("\u76f4\u7ebf\u7c7b\u56fe\u6848")],
                                        [25, this.$t("\u5706\u5f27\u7c7b\u56fe\u6848")],
                                        [25, this.$t("\u4eae\u70b9\u56fe\u6848")],
                                        [25, this.$t("\u6253\u70b9\u56fe\u6848")],
                                        [25, this.$t("\u5723\u8bde\u56fe\u6848")],
                                        [25, this.$t("\u52a8\u753b\u7ec4\u522b1")],
                                        [25, this.$t("\u52a8\u753b\u7ec4\u522b2")],
                                        [25, this.$t("\u52a8\u753b\u7ec4\u522b3")],
                                        [25, this.$t("\u52a8\u753b\u7ec4\u522b4")],
                                        [31, this.$t("\u52a8\u753b\u7ec4\u522b5")]
                                    ],
                                    2: [
                                        [10, this.$t("\u767d\u8272")],
                                        [10, this.$t("\u7ea2\u8272")],
                                        [10, this.$t("\u84dd\u8272")],
                                        [10, this.$t("\u7c89\u8272")],
                                        [10, this.$t("\u9752\u8272")],
                                        [10, this.$t("\u9ec4\u8272")],
                                        [10, this.$t("\u7eff\u8272")],
                                        [10, this.$t("\u6574\u4f53\u989c\u8272\u6362\u8272")],
                                        [13, this.$t("\u4e03\u5f69\u8679\u989c\u8272")],
                                        [18, this.$t("2\u5206\u6bb5\u989c\u8272")],
                                        [21, this.$t("3\u5206\u6bb5\u989c\u8272")],
                                        [18, this.$t("4\u5206\u6bb5\u989c\u8272")],
                                        [33, this.$t("8\u5206\u6bb5\u989c\u8272")],
                                        [36, this.$t("16\u5206\u6bb5\u989c\u8272")],
                                        [35, this.$t("32\u5206\u6bb5\u989c\u8272")],
                                        [2, this.$t("\u989c\u8272\u6e10\u7ed8")]
                                    ],
                                    3: [
                                        [10, this.$t("\u4e0d\u6d41\u6c34")],
                                        [118, this.$t("\u6b63\u5411\u6d41\u6c34")],
                                        [128, this.$t("\u53cd\u5411\u6d41\u6c34")]
                                    ],
                                    4: [
                                        [256, this.$t("\u56fe\u6848\u5927\u5c0f")]
                                    ],
                                    5: [
                                        [16, this.$t("\u7f29\u653e\u624b\u52a8\u9009\u62e9")],
                                        [40, this.$t("\u7531\u5c0f\u5230\u5927\u7f29\u653e")],
                                        [40, this.$t("\u7531\u5927\u5230\u5c0f\u7f29\u653e")],
                                        [40, this.$t("\u5927\u5c0f\u5faa\u73af\u7f29\u653e")],
                                        [40, this.$t("\u4e0d\u89c4\u5219\u7f29\u653e\u4e00")],
                                        [40, this.$t("\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c")],
                                        [40, this.$t("\u4e0d\u89c4\u5219\u7f29\u653e\u4e09")]
                                    ],
                                    6: [
                                        [128, this.$t("\u65cb\u8f6c\u89d2\u5ea6")],
                                        [64, this.$t("\u6b63\u65cb\u8f6c\u901f\u5ea6")],
                                        [64, this.$t("\u53cd\u65cb\u8f6c\u901f\u5ea6")]
                                    ],
                                    7: [
                                        [128, this.$t("\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e")],
                                        [128, this.$t("\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6")]
                                    ],
                                    8: [
                                        [128, this.$t("\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e")],
                                        [128, this.$t("\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6")]
                                    ],
                                    9: [
                                        [128, this.$t("\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c")],
                                        [128, this.$t("\u6c34\u5e73\u79fb\u52a8")]
                                    ],
                                    10: [
                                        [128, this.$t("\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c")],
                                        [128, this.$t("\u5782\u76f4\u79fb\u52a8")]
                                    ],
                                    11: [
                                        [2, this.$t("\u65e0\u6ce2\u6d6a")],
                                        [31, this.$t("\u6ce2\u6d6a\u5e45\u5ea61")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea62")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea63")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea64")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea65")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea66")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea67")],
                                        [31, this.$t("\u6ce2\u6d6a\u5e45\u5ea68")]
                                    ],
                                    12: [
                                        [2, this.$t("\u65e0\u6e10\u7ed8")],
                                        [62, this.$t("\u624b\u52a8\u6e10\u7ed81")],
                                        [64, this.$t("\u624b\u52a8\u6e10\u7ed82")],
                                        [26, this.$t("\u81ea\u52a8\u6e10\u7ed81")],
                                        [26, this.$t("\u81ea\u52a8\u6e10\u7ed82")],
                                        [26, this.$t("\u81ea\u52a8\u6e10\u7ed83")],
                                        [50, this.$t("\u81ea\u52a8\u6e10\u7ed84")]
                                    ],
                                    13: [
                                        [256, this.$t("\u6c34\u5e73\u7535\u673a")]
                                    ],
                                    14: [
                                        [256, this.$t("\u6c34\u5e73\u5fae\u8c03")]
                                    ],
                                    15: [
                                        [256, this.$t("\u5782\u76f4\u7535\u673a")]
                                    ],
                                    16: [
                                        [256, this.$t("\u5782\u76f4\u5fae\u8c03")]
                                    ],
                                    17: [
                                        [256, this.$t("\u7535\u673a\u901f\u5ea6")]
                                    ]
                                },
                                showPisCanvas: !0,
                                fontWidth: 100,
                                pisIdx: 0,
                                cnfIdx: 1,
                                cnfGroup: 0,
                                defaultPis: null,
                                pisObj: {
                                    playTime: 10,
                                    cnfValus: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
                                },
                                pisSelectedIdx: -1,
                                pisSelectedGroup: 0,
                                loading: 0,
                                pisObjArray: [],
                                myCanvasSize: {
                                    w: 0,
                                    h: 0
                                },
                                chDraw: {
                                    w: 0,
                                    h: 0,
                                    max: 255
                                },
                                chCanvas: {
                                    w: 0,
                                    h: 0
                                },
                                cnfList: [{
                                    name: this.$t("\u56fe\u5f62\u5206\u7ec4"),
                                    value: 255,
                                    idx: 1
                                }, {
                                    name: this.$t("\u56fe\u5f62"),
                                    value: 255,
                                    idx: 0
                                }, {
                                    name: this.$t("\u989c\u8272"),
                                    value: 255,
                                    idx: 2
                                }, {
                                    name: this.$t("\u989c\u8272\u6d41\u6c34"),
                                    value: 255,
                                    idx: 3
                                }, {
                                    name: this.$t("\u56fe\u5f62\u5927\u5c0f"),
                                    value: 255,
                                    idx: 4
                                }, {
                                    name: this.$t("\u56fe\u5f62\u7f29\u653e"),
                                    value: 255,
                                    idx: 5
                                }, {
                                    name: this.$t("\u56fe\u5f62\u65cb\u8f6c"),
                                    value: 255,
                                    idx: 6
                                }, {
                                    name: this.$t("\u6c34\u5e73\u7ffb\u8f6c"),
                                    value: 255,
                                    idx: 7
                                }, {
                                    name: this.$t("\u5782\u76f4\u7ffb\u8f6c"),
                                    value: 255,
                                    idx: 8
                                }, {
                                    name: this.$t("\u6c34\u5e73\u79fb\u52a8"),
                                    value: 255,
                                    idx: 9
                                }, {
                                    name: this.$t("\u5782\u76f4\u79fb\u52a8"),
                                    value: 255,
                                    idx: 10
                                }, {
                                    name: this.$t("\u6ce2\u6d6a"),
                                    value: 255,
                                    idx: 11
                                }, {
                                    name: this.$t("\u6e10\u7ed8"),
                                    value: 255,
                                    idx: 12
                                }, {
                                    name: this.$t("\u65f6\u95f4"),
                                    value: 255,
                                    idx: 13
                                }, {
                                    name: this.$t("\u6c34\u5e73\u7535\u673a"),
                                    value: 255,
                                    idx: 14
                                }, {
                                    name: this.$t("\u6c34\u5e73\u5fae\u8c03"),
                                    value: 255,
                                    idx: 15
                                }, {
                                    name: this.$t("\u5782\u76f4\u7535\u673a"),
                                    value: 255,
                                    idx: 16
                                }, {
                                    name: this.$t("\u5782\u76f4\u5fae\u8c03"),
                                    value: 255,
                                    idx: 17
                                }, {
                                    name: this.$t("\u7535\u673a\u901f\u5ea6"),
                                    value: 255,
                                    idx: 18
                                }],
                                showCnfEndIdx: t,
                                slCnfSended: !1,
                                slCnfChangingTimer: null
                            }
                        },
                        computed: {
                            playTime: {
                                get: function() {
                                    return this.pisObj.playTime
                                },
                                set: function(e) {
                                    var t = parseInt(e),
                                        r = this.pisObj.playTime;
                                    if (!(r > 25.5))
                                        if (this.$set(this.pisObj, "playTime", t), t > 25.5) {
                                            var n = this;
                                            setTimeout((function() {
                                                n.$set(n.pisObj, "playTime", r)
                                            }), 100)
                                        } else this.sendCmd()
                                }
                            }
                        },
                        components: {
                            uniPopup: h.default
                        },
                        onLoad: function(t) {
                            e("log", "onload", " at sub2/pages/pis/pis.js:133");
                            var r = this.getPicArray();
                            this.pisObjArray = r.getPicArrayInfo(), e("log", "pisObjArray", this.pisObjArray, " at sub2/pages/pis/pis.js:136"), this.initData();
                            var n = this,
                                h = this.getOpenerEventChannel();
                            h.on("acceptDataFromOpenerPage", (function(e) {
                                n.pisObj = e.pis, n.pisIdx = e.idx, n.imgArrays = e.imgArrays, n.defaultPis = e.defaultPis, n.$nextTick((function() {
                                    n.sendCmd(), setTimeout((function() {
                                        var e = uni.createSelectorQuery().in(n);
                                        e.select("#myCanvas").boundingClientRect((function(e) {
                                            n.myCanvasSize.w = e.width, n.myCanvasSize.h = e.height, n.myCanvasDraw()
                                        })).exec(), n.initChCanvas(), n.startImageCount()
                                    }), 100)
                                }))
                            }))
                        },
                        onUnload: function() {
                            var e = this.getOpenerEventChannel();
                            e.emit("acceptDataFromOpenedPage", {
                                pis: this.pisObj,
                                imgArrays: this.imgArrays
                            })
                        },
                        onReady: function() {},
                        onShow: function() {},
                        onHide: function() {},
                        methods: {
                            getPicArray: function() {
                                if (this.features.ilda) {
                                    var e = r("c4e5");
                                    return e
                                }
                                var t = r("8a07");
                                return t
                            },
                            sendCmd: function() {
                                var e = (new Date).getTime(),
                                    t = i.getPisCmdStr(this.pisIdx, this.pisObj, {
                                        features: this.features
                                    }),
                                    r = c.gosend(!1, t);
                                return r && (this.lastSendtime = e), r
                            },
                            initData: function() {
                                this.features.ilda && (this.pisObjNote[1] = [
                                    [25, this.$t("\u76f4\u7ebf\u7c7b\u56fe\u6848")],
                                    [25, this.$t("\u5706\u5f27\u7c7b\u56fe\u6848")],
                                    [25, this.$t("\u4eae\u70b9\u56fe\u6848")],
                                    [25, this.$t("\u6253\u70b9\u56fe\u6848")],
                                    [25, this.$t("\u4fdd\u7559")],
                                    [25, this.$t("\u52a8\u753b\u7ec4\u522b1")],
                                    [25, this.$t("\u52a8\u753b\u7ec4\u522b2")],
                                    [25, this.$t("\u52a8\u753b\u7ec4\u522b3")],
                                    [25, this.$t("\u52a8\u753b\u7ec4\u522b4")],
                                    [31, this.$t("\u52a8\u753b\u7ec4\u522b5")]
                                ], this.pisObjNote[2] = [
                                    [5, this.$t("\u767d\u8272")],
                                    [5, this.$t("\u7ea2\u8272")],
                                    [5, this.$t("\u84dd\u8272")],
                                    [5, this.$t("\u7c89\u8272")],
                                    [5, this.$t("\u9752\u8272")],
                                    [5, this.$t("\u9ec4\u8272")],
                                    [5, this.$t("\u7eff\u8272")],
                                    [5, this.$t("\u6574\u4f53\u989c\u8272\u6362\u8272")],
                                    [5, this.$t("\u56fe\u6848\u521d\u59cb\u989c\u8272")],
                                    [2, this.$t("\u4e03\u5f69\u8679\u989c\u8272")],
                                    [20, this.$t("2\u5206\u6bb5\u989c\u8272")],
                                    [30, this.$t("3\u5206\u6bb5\u989c\u8272")],
                                    [30, this.$t("4\u5206\u6bb5\u989c\u8272")],
                                    [24, this.$t("8\u5206\u6bb5\u989c\u8272")],
                                    [24, this.$t("16\u5206\u6bb5\u989c\u8272")],
                                    [40, this.$t("32\u5206\u6bb5\u989c\u8272")],
                                    [33, this.$t("\u6df7\u8272")],
                                    [8, this.$t("\u989c\u8272\u6e10\u7ed8")]
                                ])
                            },
                            initChCanvas: function() {
                                var e = this,
                                    t = uni.createSelectorQuery().in(e);
                                t.select("#chCanvas").boundingClientRect((function(t) {
                                    if (e.chCanvas.w != t.width || e.chCanvas.h != t.height) {
                                        e.chCanvas.w = t.width, e.chCanvas.h = t.height;
                                        var r = .9 * e.chCanvas.h;
                                        e.chPer = r / 255, e.chDraw.w = e.chCanvas.w / 3, e.chDraw.h = r, e.refreshChDraw(), setTimeout((function() {
                                            e.initChCanvas()
                                        }), 100)
                                    }
                                })).exec()
                            },
                            startImageCount: function() {
                                var e = this;
                                setInterval((function() {
                                    e.popupShow && 4 == e.pisSelectedGroup && (e.imageShowCount = e.imageShowCount + 1, e.imageShowCount >= 1e3 && (e.imageShowCount = 0))
                                }), 400)
                            },
                            refreshChDraw: function() {
                                var e = this.pisObj.cnfValus[this.cnfIdx];
                                this.drawChCanvas(this.chDraw.w, this.chDraw.h, this.chDraw.max, e, this.callBackCh)
                            },
                            lineTheta: function(e, t, r) {
                                var n = {
                                        x: e[0] - t[0],
                                        y: e[1] - t[1]
                                    },
                                    h = {
                                        x: r[0] - t[0],
                                        y: r[1] - t[1]
                                    },
                                    a = n.x * h.x + n.y * h.y,
                                    i = Math.sqrt(Math.pow(n.x, 2) + Math.pow(n.y, 2)),
                                    c = Math.sqrt(Math.pow(h.x, 2) + Math.pow(h.y, 2)),
                                    o = Math.acos(a / (i * c));
                                return o
                            },
                            myCanvasDraw: function() {
                                if (this.popupShow) this.myCanvasClear();
                                else {
                                    var e = this,
                                        t = uni.createCanvasContext("myCanvas", e),
                                        r = this.convertPic255ToIdx(this.pisObj.cnfValus[1], this.pisObj.cnfValus[0]),
                                        n = r.iidx,
                                        h = r.igroup;
                                    4 == h ? (this.imageDrawOffset++, this.imageDrawOffset = this.imageDrawOffset >= 1e3 ? 0 : this.imageDrawOffset, this.imageDrawOffset = 20 == n || 22 == n ? this.imageDrawOffset % 2 : 24 == n ? this.imageDrawOffset % 6 : 30 == n ? this.imageDrawOffset % 40 : -1) : this.imageDrawOffset = -1;
                                    var a = this.getPicArray(),
                                        i = a.picArray,
                                        c = e.myCanvasSize.w > e.myCanvasSize.h ? e.myCanvasSize.h : e.myCanvasSize.w,
                                        o = e.myCanvasSize.w / 2,
                                        s = e.myCanvasSize.h / 2;
                                    if (5 == h || 6 == h) {
                                        var l = this.$t(i[h].label) + n,
                                            p = c / 4;
                                        return this.drawABtag(t, l, o, s, p), void t.draw()
                                    }
                                    if (5 <= h || -1 == n || n >= i[h].arr.length) t.draw();
                                    else {
                                        var d = i[h].arr[n];
                                        this.imageDrawOffset >= 0 && (d = i[h].arr[n + this.imageDrawOffset]);
                                        var b = c / 800 * .8;
                                        this.drawObj(t, d, o, s, b), t.draw(), this.imageDrawOffset >= 0 && setTimeout((function() {
                                            e.myCanvasDraw()
                                        }), 400)
                                    }
                                }
                            },
                            drawABtag: function(e, t, r, n, h) {
                                e.beginPath(), e.setFillStyle("red"), e.setStrokeStyle("red"), e.setFontSize(h), e.strokeText(t, r - e.measureText(t).width / 2, n + h / 3), e.stroke(), e.fill()
                            },
                            sendLastCmd: function() {
                                var e = this;
                                e.lastCmdTime <= e.lastSendtime || setTimeout((function() {
                                    e.lastCmdTime <= e.lastSendtime || (e.sendCmd(), e.lastCmdTime > e.lastSendtime && e.sendLastCmd())
                                }), 10)
                            },
                            addCnfValusAndSend: function(e) {
                                var t = this.pisObj.cnfValus[this.cnfIdx] + Math.floor(e);
                                t = t < 0 ? 0 : t, t = t > this.chDraw.max ? this.chDraw.max : t, this.pisObj.cnfValus[this.cnfIdx] != t && (this.$set(this.pisObj.cnfValus, this.cnfIdx, t), this.refreshChDraw(), this.lastCmdTime = (new Date).getTime(), this.sendLastCmd(), 0 != this.cnfIdx && 1 != this.cnfIdx || this.myCanvasDraw())
                            },
                            chTouchstart: function(e) {
                                var t = e.touches[0];
                                this.chBeginPoint = {
                                    x: t.x,
                                    y: t.y
                                }, this.chEndPoint = null, this.lastRefresh = 0
                            },
                            chTouchmove: function(e) {
                                var t = e.touches[0];
                                this.chEndPoint = {
                                    x: t.x,
                                    y: t.y
                                };
                                var r = (new Date).getTime();
                                if (r - this.lastRefresh > 100) {
                                    var n = Math.floor((this.chBeginPoint.y - this.chEndPoint.y) / this.chPer);
                                    Math.abs(n) >= 1 && (this.chBeginPoint = {
                                        x: this.chEndPoint.x,
                                        y: this.chEndPoint.y
                                    }, this.addCnfValusAndSend(n)), this.lastRefresh = r
                                }
                            },
                            chTouchend: function(e) {
                                if (null == this.chEndPoint) {
                                    var t = this.chBeginPoint.y > this.chCanvas.h / 2 ? -1 : 1;
                                    this.addCnfValusAndSend(t)
                                }
                                this.chEndPoint = null
                            },
                            callBackCh: function(e, t, r, n, h, a, i, c) {
                                if (this.cnfIdx in this.pisObjNote) {
                                    var o = 2 * this.scUnit,
                                        s = 10 * o,
                                        l = .65 * s;
                                    e.beginPath(), e.setLineWidth(1), e.setShadow(0, 0, 0, "rgba(0, 0, 0, 0)"), e.setStrokeStyle("#414339"), e.setFillStyle("#928F9F"), e.setFontSize(s);
                                    var p = this.pisObjNote[this.cnfIdx],
                                        d = .8 * t;
                                    t -= 1, e.moveTo(d, r), e.lineTo(t + a - 2, r), e.stroke();
                                    for (var b = 0, g = 0, j = !1, x = 0; x < p.length; x++) {
                                        p[x][0];
                                        var V = p[x][0] * this.chPer,
                                            f = p[x][1],
                                            F = Math.round(r - V - b);
                                        F < r - h && (F = r - h);
                                        var k = 0;
                                        V + b < a ? k = Math.round(a - Math.sqrt(Math.pow(a, 2) - Math.pow(a - V - b, 2))) : V + b > h - a && V + b < h ? k = Math.round(a - Math.sqrt(Math.pow(a, 2) - Math.pow(a - h + V + b, 2))) : V + b >= h && (k = a - 2), e.moveTo(d, F), e.lineTo(t + k, F), e.stroke(), g <= c && c < g + p[x][0] && (e.beginPath(), e.setFillStyle("#FFFFFF"), j = !0), g += p[x][0];
                                        var m = s;
                                        V < s && (m = l), e.setFontSize(m), V < m ? e.fillText(f, d - e.measureText(f).width, r - b - V / 2) : e.fillText(f, d - e.measureText(f).width, r - b - (V - m / 2) / 2), b = V + b, j && (e.beginPath(), e.setFillStyle("#928F9F"))
                                    }
                                    e.stroke()
                                }
                            },
                            drawChCanvas: function(e, t, r, n) {
                                var h = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null,
                                    a = uni.createCanvasContext("chCanvas", this),
                                    i = e / 3;
                                a.setFontSize(i);
                                var c = e / 2,
                                    o = .95 * (this.chCanvas.w - e),
                                    s = (this.chCanvas.h - t) / 2 + c,
                                    l = o + e,
                                    p = s + t - e,
                                    d = o + c,
                                    b = s,
                                    g = l - c,
                                    j = p,
                                    x = 2 * this.scUnit,
                                    V = a.createLinearGradient(g, j + c, d, b - c);
                                V.addColorStop(0, "#112233"), V.addColorStop(1, "#1E374C"), a.setFillStyle(V), a.beginPath(), a.moveTo(l, p), a.arc(g, j, c, 0, 1 * Math.PI);
                                var f = t - 2 * c;
                                a.rect(l - e, p - f, e, f), a.moveTo(o, s), a.arc(d, b, c, Math.PI, 2 * Math.PI), a.fill();
                                var F = a.createLinearGradient(g, j + c, d, b - c);
                                F.addColorStop(0, "#008BD1"), F.addColorStop(1, "white"), a.setFillStyle(F), a.beginPath(), a.moveTo(o, s), a.arc(d, b, c, Math.PI, 2 * Math.PI), a.moveTo(l, p), a.arc(g, j, c, 0, 1 * Math.PI), a.beginPath();
                                var k = t / r,
                                    m = k * n;
                                if (m < c) {
                                    var P = c - m,
                                        u = c - Math.sqrt(Math.pow(c, 2) - Math.pow(P, 2)),
                                        X = this.lineTheta([l, p], [g, j], [l - u, p + P]);
                                    a.moveTo(l - u, p + P), a.arc(g, j, c, X, Math.PI - X), a.fill()
                                } else if (m <= t - c) {
                                    a.moveTo(l, p), a.arc(g, j, c, 0, 1 * Math.PI);
                                    var N = m - c;
                                    a.rect(l - e, p - N, e, N), a.fill()
                                } else {
                                    a.moveTo(l, p), a.arc(g, j, c, 0, 1 * Math.PI);
                                    var H = t - 2 * c;
                                    if (a.rect(l - e, p - H, e, H), n == r) a.moveTo(o, s), a.arc(d, b, c, Math.PI, 2 * Math.PI);
                                    else {
                                        var z = m - (t - c),
                                            Q = c - Math.sqrt(Math.pow(c, 2) - Math.pow(z, 2)),
                                            R = this.lineTheta([o, s], [d, b], [o + Q, s - z]);
                                        a.moveTo(o + Q, s - z), a.arc(d, b, c, 2 * Math.PI - R, Math.PI + R)
                                    }
                                    a.fill()
                                }
                                if (a.beginPath(), a.setFontSize(26 * x), a.setFillStyle("white"), a.setShadow(5 * x, 5 * x, 5 * x, "rgba(0, 0, 0, 0.5)"), a.fillText(n + "", g - a.measureText(n + "").width / 2, b - c + t / 2 + i / 2), a.beginPath(), a.setFontSize(40 * x), a.fillText("+", d - a.measureText("+").width / 2, b + i / 2), a.fillText("-", g - a.measureText("-").width / 2, j + i), null != h) {
                                    var v = o,
                                        I = j + c;
                                    h(a, v, I, e, t, c, r, n)
                                }
                                a.draw()
                            },
                            chClick: function(e) {
                                this.cnfIdx = e, this.refreshChDraw()
                            },
                            drawObj: function(e, t, r, n, h) {
                                e.beginPath();
                                for (var a = 0; a < t.length; a++) {
                                    var i = [];
                                    Object.assign(i, t[a]), i[0] = i[0] * h + r, i[1] = -i[1] * h + n;
                                    var c = null;
                                    a < t.length - 1 && (c = t[a + 1]), null != c && i[2] != c[2] ? (e.setStrokeStyle(o[i[2]]), 0 != i[2] && e.lineTo(i[0], i[1]), e.stroke(), e.beginPath(), e.moveTo(i[0], i[1])) : (e.lineTo(i[0], i[1]), null == c && e.setStrokeStyle(o[i[2]]))
                                }
                                e.stroke();
                                var s = null;
                                e.beginPath();
                                for (var l = 0; l < t.length; l++) {
                                    var p = [];
                                    Object.assign(p, t[l]), p[0] = p[0] * h + r, p[1] = -p[1] * h + n;
                                    var d = null;
                                    l < t.length - 1 && (d = t[l + 1]), null != d && p[2] != d[2] ? null != s && s[0] == p[0] && s[1] == p[1] && (e.setStrokeStyle(o[p[2]]), e.setFillStyle(o[p[2]]), e.moveTo(p[0], p[1]), e.arc(p[0], p[1], 1, 0, 2 * Math.PI), e.stroke(), e.fill(), e.beginPath()) : null != s && s[0] == p[0] && s[1] == p[1] && (e.setStrokeStyle(o[p[2]]), e.setFillStyle(o[p[2]]), e.moveTo(p[0], p[1]), e.arc(p[0], p[1], 1, 0, 2 * Math.PI), e.stroke()), s = p
                                }
                                e.fill()
                            },
                            pisCanvasClear: function() {
                                var e = uni.createCanvasContext("pisCanvas", this);
                                e.draw()
                            },
                            myCanvasClear: function() {
                                var e = uni.createCanvasContext("myCanvas", this);
                                e.draw()
                            },
                            createImg: function(t, r, n) {
                                if (this.pisSelectedGroup == t) {
                                    var h = this;
                                    if (0 == h.imgArrays.length)
                                        for (var a = 0; a < n.length; a++) {
                                            var i = new Array(n[a].arr.length).fill("");
                                            h.imgArrays.push(i)
                                        }
                                    if (this.popupShow)
                                        if (e("log", "group, idx, pisObjArray[group]", t, r, n[t], " at sub2/pages/pis/pis.js:643"), r >= n[t].arr.length || "" != this.imgArrays[t][this.imgArrays[t].length - 1]) h.showPisCanvas = !1;
                                        else if ("" == this.imgArrays[t][r]) {
                                        this.loading = r;
                                        var c = uni.createCanvasContext("pisCanvas", h);
                                        c.rect(0, 0, 100, 100), c.setFillStyle("#1F2B38"), c.fill();
                                        var o = n[t].arr[r];
                                        this.drawObj(c, o, 50, 50, .1), c.draw(), this.$nextTick((function() {
                                            uni.canvasToTempFilePath({
                                                canvasId: "pisCanvas",
                                                success: function(e) {
                                                    var a = e.tempFilePath;
                                                    h.generatedImage = a, h.$set(h.imgArrays[t], r, a), h.createImg(t, ++r, n)
                                                },
                                                fail: function(e) {}
                                            })
                                        }))
                                    } else h.createImg(t, ++r, n)
                                }
                            },
                            pisCanvasDraw: function(e) {
                                this.showPisCanvas && this.createImg(this.pisSelectedGroup, 0, e)
                            },
                            doPisCanvasDraw: function(e) {
                                var t = this;
                                setTimeout((function() {
                                    var r = uni.createSelectorQuery().in(t);
                                    r.select("#imageListView").boundingClientRect((function(r) {
                                        null != r ? (t.imageListViewHeight = r.height - 30, setTimeout((function() {
                                            t.pisCanvasDraw(e)
                                        }), 10)) : t.doPisCanvasDraw(e)
                                    })).exec()
                                }), 10)
                            },
                            groupBtnClick: function(e) {
                                if (this.pisSelectedGroup != e) {
                                    this.pisSelectedGroup = e, this.pisSelectedIdx = -1, this.pisSelectedGroup == this.pisObj.cnfValus[1] && (this.pisSelectedIdx = this.pisObj.cnfValus[0]), this.showPisCanvas = this.checkIfShowPis(e);
                                    var t = this.getPicArray(),
                                        r = t.picArray;
                                    this.doPisCanvasDraw(r)
                                }
                            },
                            checkIfShowPis: function(e) {
                                if (5 == e || 6 == e) return !1;
                                if (0 == this.imgArrays.length) return !0;
                                if (0 == this.imgArrays[e].length) return !0;
                                for (var t = 0; t < this.imgArrays[e].length; t++)
                                    if ("" == this.imgArrays[e][t]) return !0;
                                return !1
                            },
                            cancelBtnClick: function(e) {
                                this.popupShow = !1, this.pisCanvasClear(), this.$refs.popup.close(), this.myCanvasDraw(), this.sendCmd()
                            },
                            okBtnClick: function(e) {
                                this.popupShow = !1, this.pisCanvasClear(), this.$refs.popup.close();
                                var t = this.convertPicIdxTo255(this.pisSelectedGroup, this.pisSelectedIdx);
                                this.$set(this.pisObj.cnfValus, 0, t.idx), this.$set(this.pisObj.cnfValus, 1, t.group), this.refreshChDraw(), this.myCanvasDraw(), this.sendCmd()
                            },
                            convertPic255ToIdx: function(e, t) {
                                var r = 0,
                                    n = 0;
                                return this.features.ilda ? (r = Math.floor(e / 25), r > 9 && (r = 9), n = 0, 0 != r && 1 != r || (n = Math.floor(t / 4)), 2 != r && 3 != r || (n = Math.floor(t / 6)), 5 != r && 6 != r || (n = Math.floor(t / 5))) : (r = Math.floor(e / 25), n = 0, 0 != r && 1 != r && 5 != r && 6 != r || (n = Math.floor(t / 5)), 2 != r && 3 != r || (n = Math.floor(t / 10)), 4 == r && (n = t <= 99 ? Math.floor(t / 5) : t >= 120 && t <= 159 ? Math.floor((t - 120) / 5) + 70 : t >= 100 && t <= 104 ? 20 : t >= 105 && t <= 109 ? 22 : t >= 110 && t <= 114 ? 24 : t >= 115 && t <= 119 ? 30 : 77), 6 == r && n > 14 && (n = 14)), {
                                    igroup: r,
                                    iidx: n
                                }
                            },
                            convertPicIdxTo255: function(e, t) {
                                var r = 0,
                                    n = 0;
                                return this.features.ilda ? (r = 25 * e, n = 0, 0 != e && 1 != e || (n = 4 * t), 2 != e && 3 != e || (n = 6 * t), 5 != e && 6 != e || (n = 5 * t)) : (r = 25 * e, n = 0, 0 != e && 1 != e && 5 != e && 6 != e || (n = 5 * t), 2 != e && 3 != e || (n = 10 * t), 4 == e && (n = t <= 19 ? 5 * t : t >= 70 && t <= 77 ? 5 * (t - 70) + 120 : 20 == t ? 100 : 22 == t ? 105 : 24 == t ? 110 : 30 == t ? 115 : 160)), {
                                    group: r,
                                    idx: n
                                }
                            },
                            chResetClick: function(e) {
                                if (null != this.defaultPis) {
                                    for (var t = 0; t < this.defaultPis.cnfValus.length; t++) this.$set(this.pisObj.cnfValus, t, this.defaultPis.cnfValus[t]);
                                    this.refreshChDraw(), this.myCanvasDraw(), this.sendCmd()
                                }
                            },
                            myCanvasClick: function(e) {
                                this.popupShow = !0;
                                var t = this.convertPic255ToIdx(this.pisObj.cnfValus[1], this.pisObj.cnfValus[0]);
                                this.pisSelectedIdx = t.iidx, this.pisSelectedGroup = t.igroup, this.pisSelectedGroup >= this.pisObjArray.length && (this.pisSelectedGroup = 0, this.pisSelectedIdx = -1), this.showPisCanvas = this.checkIfShowPis(this.pisSelectedGroup), this.$refs.popup.open("bottom"), this.myCanvasClear();
                                var r = this.getPicArray(),
                                    n = r.picArray;
                                this.doPisCanvasDraw(n)
                            },
                            sendTmpCmd: function(e, t) {
                                var r = [];
                                Object.assign(r, this.pisObj.cnfValus);
                                var n = this.convertPicIdxTo255(e, t);
                                r[0] = n.idx, r[1] = n.group;
                                var h = {
                                        playTime: this.pisObj.playTime,
                                        cnfValus: r
                                    },
                                    a = i.getPisCmdStr(this.pisIdx, h, {
                                        features: this.features
                                    });
                                c.gosend(!0, a)
                            },
                            imgClick: function(e) {
                                this.pisSelectedIdx = e, this.sendTmpCmd(this.pisSelectedGroup, this.pisSelectedIdx)
                            }
                        }
                    };
                t.default = s
            }).call(this, r("f3b9")["default"])
        },
        "4d79": function(t, r, n) {
            "use strict";
            n.r(r);
            /*!
             * vue-i18n v8.28.2 
             * (c) 2022 kazuya kawaguchi
             * Released under the MIT License.
             */
            var h = ["compactDisplay", "currency", "currencyDisplay", "currencySign", "localeMatcher", "notation", "numberingSystem", "signDisplay", "style", "unit", "unitDisplay", "useGrouping", "minimumIntegerDigits", "minimumFractionDigits", "maximumFractionDigits", "minimumSignificantDigits", "maximumSignificantDigits"],
                a = ["dateStyle", "timeStyle", "calendar", "localeMatcher", "hour12", "hourCycle", "timeZone", "formatMatcher", "weekday", "era", "year", "month", "day", "hour", "minute", "second", "timeZoneName"];

            function i(e, t) {
                "undefined" !== typeof console && (console.warn("[vue-i18n] " + e), t && console.warn(t.stack))
            }
            var c = Array.isArray;

            function o(e) {
                return null !== e && "object" === typeof e
            }

            function s(e) {
                return "boolean" === typeof e
            }

            function l(e) {
                return "string" === typeof e
            }
            var p = Object.prototype.toString;

            function d(e) {
                return "[object Object]" === p.call(e)
            }

            function b(e) {
                return null === e || void 0 === e
            }

            function g(e) {
                return "function" === typeof e
            }

            function j() {
                var e = [],
                    t = arguments.length;
                while (t--) e[t] = arguments[t];
                var r = null,
                    n = null;
                return 1 === e.length ? o(e[0]) || c(e[0]) ? n = e[0] : "string" === typeof e[0] && (r = e[0]) : 2 === e.length && ("string" === typeof e[0] && (r = e[0]), (o(e[1]) || c(e[1])) && (n = e[1])), {
                    locale: r,
                    params: n
                }
            }

            function x(e) {
                return JSON.parse(JSON.stringify(e))
            }

            function V(e, t) {
                return !!~e.indexOf(t)
            }
            var f = Object.prototype.hasOwnProperty;

            function F(e, t) {
                return f.call(e, t)
            }

            function k(e) {
                for (var t = arguments, r = Object(e), n = 1; n < arguments.length; n++) {
                    var h = t[n];
                    if (void 0 !== h && null !== h) {
                        var a = void 0;
                        for (a in h) F(h, a) && (o(h[a]) ? r[a] = k(r[a], h[a]) : r[a] = h[a])
                    }
                }
                return r
            }

            function m(t, r) {
                if (t === r) return !0;
                var n = o(t),
                    h = o(r);
                if (!n || !h) return !n && !h && String(t) === String(r);
                try {
                    var a = c(t),
                        i = c(r);
                    if (a && i) return t.length === r.length && t.every((function(e, t) {
                        return m(e, r[t])
                    }));
                    if (a || i) return !1;
                    var s = Object.keys(t),
                        l = Object.keys(r);
                    return s.length === l.length && s.every((function(e) {
                        return m(t[e], r[e])
                    }))
                } catch (e) {
                    return !1
                }
            }

            function P(e) {
                return null != e && Object.keys(e).forEach((function(t) {
                    "string" == typeof e[t] && (e[t] = function(e) {
                        return e.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&apos;")
                    }(e[t]))
                })), e
            }
            var u = {
                name: "i18n",
                functional: !0,
                props: {
                    tag: {
                        type: [String, Boolean, Object],
                        default: "span"
                    },
                    path: {
                        type: String,
                        required: !0
                    },
                    locale: {
                        type: String
                    },
                    places: {
                        type: [Array, Object]
                    }
                },
                render: function(e, t) {
                    var r = t.data,
                        n = t.parent,
                        h = t.props,
                        a = t.slots,
                        i = n.$i18n;
                    if (i) {
                        var c = h.path,
                            o = h.locale,
                            s = h.places,
                            l = a(),
                            p = i.i(c, o, function(e) {
                                var t;
                                for (t in e)
                                    if ("default" !== t) return !1;
                                return Boolean(t)
                            }(l) || s ? function(e, t) {
                                var r = t ? function(e) {
                                    0;
                                    return Array.isArray(e) ? e.reduce(N, {}) : Object.assign({}, e)
                                }(t) : {};
                                if (!e) return r;
                                e = e.filter((function(e) {
                                    return e.tag || "" !== e.text.trim()
                                }));
                                var n = e.every(H);
                                0;
                                return e.reduce(n ? X : N, r)
                            }(l.default, s) : l),
                            d = h.tag && !0 !== h.tag || !1 === h.tag ? h.tag : "span";
                        return d ? e(d, r, p) : p
                    }
                }
            };

            function X(e, t) {
                return t.data && t.data.attrs && t.data.attrs.place && (e[t.data.attrs.place] = t), e
            }

            function N(e, t, r) {
                return e[r] = t, e
            }

            function H(e) {
                return Boolean(e.data && e.data.attrs && e.data.attrs.place)
            }
            var z, Q = {
                name: "i18n-n",
                functional: !0,
                props: {
                    tag: {
                        type: [String, Boolean, Object],
                        default: "span"
                    },
                    value: {
                        type: Number,
                        required: !0
                    },
                    format: {
                        type: [String, Object]
                    },
                    locale: {
                        type: String
                    }
                },
                render: function(e, t) {
                    var r = t.props,
                        n = t.parent,
                        a = t.data,
                        i = n.$i18n;
                    if (!i) return null;
                    var c = null,
                        s = null;
                    l(r.format) ? c = r.format : o(r.format) && (r.format.key && (c = r.format.key), s = Object.keys(r.format).reduce((function(e, t) {
                        var n;
                        return V(h, t) ? Object.assign({}, e, (n = {}, n[t] = r.format[t], n)) : e
                    }), null));
                    var p = r.locale || i.locale,
                        d = i._ntp(r.value, p, c, s),
                        b = d.map((function(e, t) {
                            var r, n = a.scopedSlots && a.scopedSlots[e.type];
                            return n ? n((r = {}, r[e.type] = e.value, r.index = t, r.parts = d, r)) : e.value
                        })),
                        g = r.tag && !0 !== r.tag || !1 === r.tag ? r.tag : "span";
                    return g ? e(g, {
                        attrs: a.attrs,
                        class: a["class"],
                        staticClass: a.staticClass
                    }, b) : b
                }
            };

            function R(e, t, r) {
                w(e, r) && y(e, t, r)
            }

            function v(e, t, r, n) {
                if (w(e, r)) {
                    var h = r.context.$i18n;
                    (function(e, t) {
                        var r = t.context;
                        return e._locale === r.$i18n.locale
                    })(e, r) && m(t.value, t.oldValue) && m(e._localeMessage, h.getLocaleMessage(h.locale)) || y(e, t, r)
                }
            }

            function I(e, t, r, n) {
                var h = r.context;
                if (h) {
                    var a = r.context.$i18n || {};
                    t.modifiers.preserve || a.preserveDirectiveContent || (e.textContent = ""), e._vt = void 0, delete e["_vt"], e._locale = void 0, delete e["_locale"], e._localeMessage = void 0, delete e["_localeMessage"]
                } else i("Vue instance does not exists in VNode context")
            }

            function w(e, t) {
                var r = t.context;
                return r ? !!r.$i18n || (i("VueI18n instance does not exists in Vue instance"), !1) : (i("Vue instance does not exists in VNode context"), !1)
            }

            function y(e, t, r) {
                var n, h, a = t.value,
                    c = function(e) {
                        var t, r, n, h;
                        l(e) ? t = e : d(e) && (t = e.path, r = e.locale, n = e.args, h = e.choice);
                        return {
                            path: t,
                            locale: r,
                            args: n,
                            choice: h
                        }
                    }(a),
                    o = c.path,
                    s = c.locale,
                    p = c.args,
                    b = c.choice;
                if (o || s || p)
                    if (o) {
                        var g = r.context;
                        e._vt = e.textContent = null != b ? (n = g.$i18n).tc.apply(n, [o, b].concat(C(s, p))) : (h = g.$i18n).t.apply(h, [o].concat(C(s, p))), e._locale = g.$i18n.locale, e._localeMessage = g.$i18n.getLocaleMessage(g.$i18n.locale)
                    } else i("`path` is required in v-t directive");
                else i("value type not supported")
            }

            function C(e, t) {
                var r = [];
                return e && r.push(e), t && (Array.isArray(t) || d(t)) && r.push(t), r
            }

            function A(t, r) {
                void 0 === r && (r = {
                    bridge: !1
                }), A.installed = !0, z = t;
                z.version && Number(z.version.split(".")[0]);
                (function(e) {
                    e.prototype.hasOwnProperty("$i18n") || Object.defineProperty(e.prototype, "$i18n", {
                        get: function() {
                            return this._i18n
                        }
                    }), e.prototype.$t = function(e) {
                        var t = [],
                            r = arguments.length - 1;
                        while (r-- > 0) t[r] = arguments[r + 1];
                        var n = this.$i18n;
                        return n._t.apply(n, [e, n.locale, n._getMessages(), this].concat(t))
                    }, e.prototype.$tc = function(e, t) {
                        var r = [],
                            n = arguments.length - 2;
                        while (n-- > 0) r[n] = arguments[n + 2];
                        var h = this.$i18n;
                        return h._tc.apply(h, [e, h.locale, h._getMessages(), this, t].concat(r))
                    }, e.prototype.$te = function(e, t) {
                        var r = this.$i18n;
                        return r._te(e, r.locale, r._getMessages(), t)
                    }, e.prototype.$d = function(e) {
                        var t, r = [],
                            n = arguments.length - 1;
                        while (n-- > 0) r[n] = arguments[n + 1];
                        return (t = this.$i18n).d.apply(t, [e].concat(r))
                    }, e.prototype.$n = function(e) {
                        var t, r = [],
                            n = arguments.length - 1;
                        while (n-- > 0) r[n] = arguments[n + 1];
                        return (t = this.$i18n).n.apply(t, [e].concat(r))
                    }
                })(z), z.mixin(function(t) {
                    function r() {
                        this !== this.$root && this.$options.__INTLIFY_META__ && this.$el && this.$el.setAttribute("data-intlify", this.$options.__INTLIFY_META__)
                    }
                    return void 0 === t && (t = !1), t ? {
                        mounted: r
                    } : {
                        beforeCreate: function() {
                            var t = this.$options;
                            if (t.i18n = t.i18n || (t.__i18nBridge || t.__i18n ? {} : null), t.i18n)
                                if (t.i18n instanceof Z) {
                                    if (t.__i18nBridge || t.__i18n) try {
                                        var r = t.i18n && t.i18n.messages ? t.i18n.messages : {},
                                            n = t.__i18nBridge || t.__i18n;
                                        n.forEach((function(e) {
                                            r = k(r, JSON.parse(e))
                                        })), Object.keys(r).forEach((function(e) {
                                            t.i18n.mergeLocaleMessage(e, r[e])
                                        }))
                                    } catch (e) {
                                        0
                                    }
                                    this._i18n = t.i18n, this._i18nWatcher = this._i18n.watchI18nData()
                                } else if (d(t.i18n)) {
                                var h = this.$root && this.$root.$i18n && this.$root.$i18n instanceof Z ? this.$root.$i18n : null;
                                if (h && (t.i18n.root = this.$root, t.i18n.formatter = h.formatter, t.i18n.fallbackLocale = h.fallbackLocale, t.i18n.formatFallbackMessages = h.formatFallbackMessages, t.i18n.silentTranslationWarn = h.silentTranslationWarn, t.i18n.silentFallbackWarn = h.silentFallbackWarn, t.i18n.pluralizationRules = h.pluralizationRules, t.i18n.preserveDirectiveContent = h.preserveDirectiveContent), t.__i18nBridge || t.__i18n) try {
                                    var a = t.i18n && t.i18n.messages ? t.i18n.messages : {},
                                        i = t.__i18nBridge || t.__i18n;
                                    i.forEach((function(e) {
                                        a = k(a, JSON.parse(e))
                                    })), t.i18n.messages = a
                                } catch (e) {
                                    0
                                }
                                var c = t.i18n,
                                    o = c.sharedMessages;
                                o && d(o) && (t.i18n.messages = k(t.i18n.messages, o)), this._i18n = new Z(t.i18n), this._i18nWatcher = this._i18n.watchI18nData(), (void 0 === t.i18n.sync || t.i18n.sync) && (this._localeWatcher = this.$i18n.watchLocale()), h && h.onComponentInstanceCreated(this._i18n)
                            } else 0;
                            else this.$root && this.$root.$i18n && this.$root.$i18n instanceof Z ? this._i18n = this.$root.$i18n : t.parent && t.parent.$i18n && t.parent.$i18n instanceof Z && (this._i18n = t.parent.$i18n)
                        },
                        beforeMount: function() {
                            var e = this.$options;
                            e.i18n = e.i18n || (e.__i18nBridge || e.__i18n ? {} : null), e.i18n ? (e.i18n instanceof Z || d(e.i18n)) && (this._i18n.subscribeDataChanging(this), this._subscribing = !0) : (this.$root && this.$root.$i18n && this.$root.$i18n instanceof Z || e.parent && e.parent.$i18n && e.parent.$i18n instanceof Z) && (this._i18n.subscribeDataChanging(this), this._subscribing = !0)
                        },
                        mounted: r,
                        beforeDestroy: function() {
                            if (this._i18n) {
                                var e = this;
                                this.$nextTick((function() {
                                    e._subscribing && (e._i18n.unsubscribeDataChanging(e), delete e._subscribing), e._i18nWatcher && (e._i18nWatcher(), e._i18n.destroyVM(), delete e._i18nWatcher), e._localeWatcher && (e._localeWatcher(), delete e._localeWatcher)
                                }))
                            }
                        }
                    }
                }(r.bridge)), z.directive("t", {
                    bind: R,
                    update: v,
                    unbind: I
                }), z.component(u.name, u), z.component(Q.name, Q);
                var n = z.config.optionMergeStrategies;
                n.i18n = function(e, t) {
                    return void 0 === t ? e : t
                }
            }
            var D = function() {
                this._caches = Object.create(null)
            };
            D.prototype.interpolate = function(e, t) {
                if (!t) return [e];
                var r = this._caches[e];
                return r || (r = function(e) {
                        var t = [],
                            r = 0,
                            n = "";
                        while (r < e.length) {
                            var h = e[r++];
                            if ("{" === h) {
                                n && t.push({
                                    type: "text",
                                    value: n
                                }), n = "";
                                var a = "";
                                h = e[r++];
                                while (void 0 !== h && "}" !== h) a += h, h = e[r++];
                                var i = "}" === h,
                                    c = S.test(a) ? "list" : i && Y.test(a) ? "named" : "unknown";
                                t.push({
                                    value: a,
                                    type: c
                                })
                            } else "%" === h ? "{" !== e[r] && (n += h) : n += h
                        }
                        return n && t.push({
                            type: "text",
                            value: n
                        }), t
                    }(e), this._caches[e] = r),
                    function(e, t) {
                        var r = [],
                            n = 0,
                            h = Array.isArray(t) ? "list" : o(t) ? "named" : "unknown";
                        if ("unknown" === h) return r;
                        while (n < e.length) {
                            var a = e[n];
                            switch (a.type) {
                                case "text":
                                    r.push(a.value);
                                    break;
                                case "list":
                                    r.push(t[parseInt(a.value, 10)]);
                                    break;
                                case "named":
                                    "named" === h && r.push(t[a.value]);
                                    break;
                                case "unknown":
                                    0;
                                    break
                            }
                            n++
                        }
                        return r
                    }(r, t)
            };
            var S = /^(?:\d)+/,
                Y = /^(?:\w)+/;
            var B = [];
            B[0] = {
                ws: [0],
                ident: [3, 0],
                "[": [4],
                eof: [7]
            }, B[1] = {
                ws: [1],
                ".": [2],
                "[": [4],
                eof: [7]
            }, B[2] = {
                ws: [2],
                ident: [3, 0],
                0: [3, 0],
                number: [3, 0]
            }, B[3] = {
                ident: [3, 0],
                0: [3, 0],
                number: [3, 0],
                ws: [1, 1],
                ".": [2, 1],
                "[": [4, 1],
                eof: [7, 1]
            }, B[4] = {
                "'": [5, 0],
                '"': [6, 0],
                "[": [4, 2],
                "]": [1, 3],
                eof: 8,
                else: [4, 0]
            }, B[5] = {
                "'": [4, 0],
                eof: 8,
                else: [5, 0]
            }, B[6] = {
                '"': [4, 0],
                eof: 8,
                else: [6, 0]
            };
            var T = /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;

            function L(e) {
                if (void 0 === e || null === e) return "eof";
                var t = e.charCodeAt(0);
                switch (t) {
                    case 91:
                    case 93:
                    case 46:
                    case 34:
                    case 39:
                        return e;
                    case 95:
                    case 36:
                    case 45:
                        return "ident";
                    case 9:
                    case 10:
                    case 13:
                    case 160:
                    case 65279:
                    case 8232:
                    case 8233:
                        return "ws"
                }
                return "ident"
            }

            function M(e) {
                var t = e.trim();
                return ("0" !== e.charAt(0) || !isNaN(e)) && (function(e) {
                    return T.test(e)
                }(t) ? function(e) {
                    var t = e.charCodeAt(0),
                        r = e.charCodeAt(e.length - 1);
                    return t !== r || 34 !== t && 39 !== t ? e : e.slice(1, -1)
                }(t) : "*" + t)
            }
            var q = function() {
                this._cache = Object.create(null)
            };
            q.prototype.parsePath = function(e) {
                var t = this._cache[e];
                return t || (t = function(e) {
                    var t, r, n, h, a, i, c, o = [],
                        s = -1,
                        l = 0,
                        p = 0,
                        d = [];

                    function b() {
                        var t = e[s + 1];
                        if (5 === l && "'" === t || 6 === l && '"' === t) return s++, n = "\\" + t, d[0](), !0
                    }
                    d[1] = function() {
                        void 0 !== r && (o.push(r), r = void 0)
                    }, d[0] = function() {
                        void 0 === r ? r = n : r += n
                    }, d[2] = function() {
                        d[0](), p++
                    }, d[3] = function() {
                        if (p > 0) p--, l = 4, d[0]();
                        else {
                            if (p = 0, void 0 === r) return !1;
                            if (r = M(r), !1 === r) return !1;
                            d[1]()
                        }
                    };
                    while (null !== l)
                        if (s++, t = e[s], "\\" !== t || !b()) {
                            if (h = L(t), c = B[l], a = c[h] || c["else"] || 8, 8 === a) return;
                            if (l = a[0], i = d[a[1]], i && (n = a[2], n = void 0 === n ? t : n, !1 === i())) return;
                            if (7 === l) return o
                        }
                }(e), t && (this._cache[e] = t)), t || []
            }, q.prototype.getPathValue = function(e, t) {
                if (!o(e)) return null;
                var r = this.parsePath(t);
                if (0 === r.length) return null;
                var n = r.length,
                    h = e,
                    a = 0;
                while (a < n) {
                    var i = h[r[a]];
                    if (void 0 === i || null === i) return null;
                    h = i, a++
                }
                return h
            };
            var G, E = /<\/?[\w\s="/.':;#-\/]+>/,
                W = /(?:@(?:\.[a-zA-Z]+)?:(?:[\w\-_|./]+|\([\w\-_:|./]+\)))/g,
                _ = /^@(?:\.([a-zA-Z]+))?:/,
                J = /[()]/g,
                U = {
                    upper: function(e) {
                        return e.toLocaleUpperCase()
                    },
                    lower: function(e) {
                        return e.toLocaleLowerCase()
                    },
                    capitalize: function(e) {
                        return "" + e.charAt(0).toLocaleUpperCase() + e.substr(1)
                    }
                },
                O = new D,
                Z = function(e) {
                    var t = this;
                    void 0 === e && (e = {}), !z && "undefined" !== typeof window && window.Vue && A(window.Vue);
                    var r = e.locale || "en-US",
                        n = !1 !== e.fallbackLocale && (e.fallbackLocale || "en-US"),
                        h = e.messages || {},
                        a = e.dateTimeFormats || e.datetimeFormats || {},
                        i = e.numberFormats || {};
                    this._vm = null, this._formatter = e.formatter || O, this._modifiers = e.modifiers || {}, this._missing = e.missing || null, this._root = e.root || null, this._sync = void 0 === e.sync || !!e.sync, this._fallbackRoot = void 0 === e.fallbackRoot || !!e.fallbackRoot, this._fallbackRootWithEmptyString = void 0 === e.fallbackRootWithEmptyString || !!e.fallbackRootWithEmptyString, this._formatFallbackMessages = void 0 !== e.formatFallbackMessages && !!e.formatFallbackMessages, this._silentTranslationWarn = void 0 !== e.silentTranslationWarn && e.silentTranslationWarn, this._silentFallbackWarn = void 0 !== e.silentFallbackWarn && !!e.silentFallbackWarn, this._dateTimeFormatters = {}, this._numberFormatters = {}, this._path = new q, this._dataListeners = new Set, this._componentInstanceCreatedListener = e.componentInstanceCreatedListener || null, this._preserveDirectiveContent = void 0 !== e.preserveDirectiveContent && !!e.preserveDirectiveContent, this.pluralizationRules = e.pluralizationRules || {}, this._warnHtmlInMessage = e.warnHtmlInMessage || "off", this._postTranslation = e.postTranslation || null, this._escapeParameterHtml = e.escapeParameterHtml || !1, "__VUE_I18N_BRIDGE__" in e && (this.__VUE_I18N_BRIDGE__ = e.__VUE_I18N_BRIDGE__), this.getChoiceIndex = function(e, r) {
                        var n = Object.getPrototypeOf(t);
                        if (n && n.getChoiceIndex) {
                            var h = n.getChoiceIndex;
                            return h.call(t, e, r)
                        }
                        return t.locale in t.pluralizationRules ? t.pluralizationRules[t.locale].apply(t, [e, r]) : function(e, t) {
                            return e = Math.abs(e), 2 === t ? e ? e > 1 ? 1 : 0 : 1 : e ? Math.min(e, 2) : 0
                        }(e, r)
                    }, this._exist = function(e, r) {
                        return !(!e || !r) && (!b(t._path.getPathValue(e, r)) || !!e[r])
                    }, "warn" !== this._warnHtmlInMessage && "error" !== this._warnHtmlInMessage || Object.keys(h).forEach((function(e) {
                        t._checkLocaleMessage(e, t._warnHtmlInMessage, h[e])
                    })), this._initVM({
                        locale: r,
                        fallbackLocale: n,
                        messages: h,
                        dateTimeFormats: a,
                        numberFormats: i
                    })
                },
                K = {
                    vm: {
                        configurable: !0
                    },
                    messages: {
                        configurable: !0
                    },
                    dateTimeFormats: {
                        configurable: !0
                    },
                    numberFormats: {
                        configurable: !0
                    },
                    availableLocales: {
                        configurable: !0
                    },
                    locale: {
                        configurable: !0
                    },
                    fallbackLocale: {
                        configurable: !0
                    },
                    formatFallbackMessages: {
                        configurable: !0
                    },
                    missing: {
                        configurable: !0
                    },
                    formatter: {
                        configurable: !0
                    },
                    silentTranslationWarn: {
                        configurable: !0
                    },
                    silentFallbackWarn: {
                        configurable: !0
                    },
                    preserveDirectiveContent: {
                        configurable: !0
                    },
                    warnHtmlInMessage: {
                        configurable: !0
                    },
                    postTranslation: {
                        configurable: !0
                    },
                    sync: {
                        configurable: !0
                    }
                };
            Z.prototype._checkLocaleMessage = function(e, t, r) {
                var n = function(e, t, r, h) {
                    if (d(r)) Object.keys(r).forEach((function(a) {
                        var i = r[a];
                        d(i) ? (h.push(a), h.push("."), n(e, t, i, h), h.pop(), h.pop()) : (h.push(a), n(e, t, i, h), h.pop())
                    }));
                    else if (c(r)) r.forEach((function(r, a) {
                        d(r) ? (h.push("[" + a + "]"), h.push("."), n(e, t, r, h), h.pop(), h.pop()) : (h.push("[" + a + "]"), n(e, t, r, h), h.pop())
                    }));
                    else if (l(r)) {
                        var a = E.test(r);
                        if (a) {
                            var o = "Detected HTML in message '" + r + "' of keypath '" + h.join("") + "' at '" + t + "'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp";
                            "warn" === e ? i(o) : "error" === e && function(e, t) {
                                "undefined" !== typeof console && (console.error("[vue-i18n] " + e), t && console.error(t.stack))
                            }(o)
                        }
                    }
                };
                n(t, e, r, [])
            }, Z.prototype._initVM = function(e) {
                var t = z.config.silent;
                z.config.silent = !0, this._vm = new z({
                    data: e,
                    __VUE18N__INSTANCE__: !0
                }), z.config.silent = t
            }, Z.prototype.destroyVM = function() {
                this._vm.$destroy()
            }, Z.prototype.subscribeDataChanging = function(e) {
                this._dataListeners.add(e)
            }, Z.prototype.unsubscribeDataChanging = function(e) {
                (function(e, t) {
                    if (e.delete(t));
                })(this._dataListeners, e)
            }, Z.prototype.watchI18nData = function() {
                var e = this;
                return this._vm.$watch("$data", (function() {
                    var t = function(e) {
                            var t = [];
                            return e.forEach((function(e) {
                                return t.push(e)
                            })), t
                        }(e._dataListeners),
                        r = t.length;
                    while (r--) z.nextTick((function() {
                        t[r] && t[r].$forceUpdate()
                    }))
                }), {
                    deep: !0
                })
            }, Z.prototype.watchLocale = function(e) {
                if (e) {
                    if (!this.__VUE_I18N_BRIDGE__) return null;
                    var t = this,
                        r = this._vm;
                    return this.vm.$watch("locale", (function(n) {
                        r.$set(r, "locale", n), t.__VUE_I18N_BRIDGE__ && e && (e.locale.value = n), r.$forceUpdate()
                    }), {
                        immediate: !0
                    })
                }
                if (!this._sync || !this._root) return null;
                var n = this._vm;
                return this._root.$i18n.vm.$watch("locale", (function(e) {
                    n.$set(n, "locale", e), n.$forceUpdate()
                }), {
                    immediate: !0
                })
            }, Z.prototype.onComponentInstanceCreated = function(e) {
                this._componentInstanceCreatedListener && this._componentInstanceCreatedListener(e, this)
            }, K.vm.get = function() {
                return this._vm
            }, K.messages.get = function() {
                return x(this._getMessages())
            }, K.dateTimeFormats.get = function() {
                return x(this._getDateTimeFormats())
            }, K.numberFormats.get = function() {
                return x(this._getNumberFormats())
            }, K.availableLocales.get = function() {
                return Object.keys(this.messages).sort()
            }, K.locale.get = function() {
                return this._vm.locale
            }, K.locale.set = function(e) {
                this._vm.$set(this._vm, "locale", e)
            }, K.fallbackLocale.get = function() {
                return this._vm.fallbackLocale
            }, K.fallbackLocale.set = function(e) {
                this._localeChainCache = {}, this._vm.$set(this._vm, "fallbackLocale", e)
            }, K.formatFallbackMessages.get = function() {
                return this._formatFallbackMessages
            }, K.formatFallbackMessages.set = function(e) {
                this._formatFallbackMessages = e
            }, K.missing.get = function() {
                return this._missing
            }, K.missing.set = function(e) {
                this._missing = e
            }, K.formatter.get = function() {
                return this._formatter
            }, K.formatter.set = function(e) {
                this._formatter = e
            }, K.silentTranslationWarn.get = function() {
                return this._silentTranslationWarn
            }, K.silentTranslationWarn.set = function(e) {
                this._silentTranslationWarn = e
            }, K.silentFallbackWarn.get = function() {
                return this._silentFallbackWarn
            }, K.silentFallbackWarn.set = function(e) {
                this._silentFallbackWarn = e
            }, K.preserveDirectiveContent.get = function() {
                return this._preserveDirectiveContent
            }, K.preserveDirectiveContent.set = function(e) {
                this._preserveDirectiveContent = e
            }, K.warnHtmlInMessage.get = function() {
                return this._warnHtmlInMessage
            }, K.warnHtmlInMessage.set = function(e) {
                var t = this,
                    r = this._warnHtmlInMessage;
                if (this._warnHtmlInMessage = e, r !== e && ("warn" === e || "error" === e)) {
                    var n = this._getMessages();
                    Object.keys(n).forEach((function(e) {
                        t._checkLocaleMessage(e, t._warnHtmlInMessage, n[e])
                    }))
                }
            }, K.postTranslation.get = function() {
                return this._postTranslation
            }, K.postTranslation.set = function(e) {
                this._postTranslation = e
            }, K.sync.get = function() {
                return this._sync
            }, K.sync.set = function(e) {
                this._sync = e
            }, Z.prototype._getMessages = function() {
                return this._vm.messages
            }, Z.prototype._getDateTimeFormats = function() {
                return this._vm.dateTimeFormats
            }, Z.prototype._getNumberFormats = function() {
                return this._vm.numberFormats
            }, Z.prototype._warnDefault = function(e, t, r, n, h, a) {
                if (!b(r)) return r;
                if (this._missing) {
                    var i = this._missing.apply(null, [e, t, n, h]);
                    if (l(i)) return i
                } else 0;
                if (this._formatFallbackMessages) {
                    var c = j.apply(void 0, h);
                    return this._render(t, a, c.params, t)
                }
                return t
            }, Z.prototype._isFallbackRoot = function(e) {
                return (this._fallbackRootWithEmptyString ? !e : b(e)) && !b(this._root) && this._fallbackRoot
            }, Z.prototype._isSilentFallbackWarn = function(e) {
                return this._silentFallbackWarn instanceof RegExp ? this._silentFallbackWarn.test(e) : this._silentFallbackWarn
            }, Z.prototype._isSilentFallback = function(e, t) {
                return this._isSilentFallbackWarn(t) && (this._isFallbackRoot() || e !== this.fallbackLocale)
            }, Z.prototype._isSilentTranslationWarn = function(e) {
                return this._silentTranslationWarn instanceof RegExp ? this._silentTranslationWarn.test(e) : this._silentTranslationWarn
            }, Z.prototype._interpolate = function(e, t, r, n, h, a, i) {
                if (!t) return null;
                var o, s = this._path.getPathValue(t, r);
                if (c(s) || d(s)) return s;
                if (b(s)) {
                    if (!d(t)) return null;
                    if (o = t[r], !l(o) && !g(o)) return null
                } else {
                    if (!l(s) && !g(s)) return null;
                    o = s
                }
                return l(o) && (o.indexOf("@:") >= 0 || o.indexOf("@.") >= 0) && (o = this._link(e, t, o, n, "raw", a, i)), this._render(o, h, a, r)
            }, Z.prototype._link = function(e, t, r, n, h, a, i) {
                var o = r,
                    s = o.match(W);
                for (var l in s)
                    if (s.hasOwnProperty(l)) {
                        var p = s[l],
                            d = p.match(_),
                            b = d[0],
                            g = d[1],
                            j = p.replace(b, "").replace(J, "");
                        if (V(i, j)) return o;
                        i.push(j);
                        var x = this._interpolate(e, t, j, n, "raw" === h ? "string" : h, "raw" === h ? void 0 : a, i);
                        if (this._isFallbackRoot(x)) {
                            if (!this._root) throw Error("unexpected error");
                            var f = this._root.$i18n;
                            x = f._translate(f._getMessages(), f.locale, f.fallbackLocale, j, n, h, a)
                        }
                        x = this._warnDefault(e, j, x, n, c(a) ? a : [a], h), this._modifiers.hasOwnProperty(g) ? x = this._modifiers[g](x) : U.hasOwnProperty(g) && (x = U[g](x)), i.pop(), o = x ? o.replace(p, x) : o
                    } return o
            }, Z.prototype._createMessageContext = function(e, t, r, n) {
                var h = this,
                    a = c(e) ? e : [],
                    i = o(e) ? e : {},
                    s = this._getMessages(),
                    l = this.locale;
                return {
                    list: function(e) {
                        return a[e]
                    },
                    named: function(e) {
                        return i[e]
                    },
                    values: e,
                    formatter: t,
                    path: r,
                    messages: s,
                    locale: l,
                    linked: function(e) {
                        return h._interpolate(l, s[l] || {}, e, null, n, void 0, [e])
                    }
                }
            }, Z.prototype._render = function(e, t, r, n) {
                if (g(e)) return e(this._createMessageContext(r, this._formatter || O, n, t));
                var h = this._formatter.interpolate(e, r, n);
                return h || (h = O.interpolate(e, r, n)), "string" !== t || l(h) ? h : h.join("")
            }, Z.prototype._appendItemToChain = function(e, t, r) {
                var n = !1;
                return V(e, t) || (n = !0, t && (n = "!" !== t[t.length - 1], t = t.replace(/!/g, ""), e.push(t), r && r[t] && (n = r[t]))), n
            }, Z.prototype._appendLocaleToChain = function(e, t, r) {
                var n, h = t.split("-");
                do {
                    var a = h.join("-");
                    n = this._appendItemToChain(e, a, r), h.splice(-1, 1)
                } while (h.length && !0 === n);
                return n
            }, Z.prototype._appendBlockToChain = function(e, t, r) {
                for (var n = !0, h = 0; h < t.length && s(n); h++) {
                    var a = t[h];
                    l(a) && (n = this._appendLocaleToChain(e, a, r))
                }
                return n
            }, Z.prototype._getLocaleChain = function(e, t) {
                if ("" === e) return [];
                this._localeChainCache || (this._localeChainCache = {});
                var r = this._localeChainCache[e];
                if (!r) {
                    t || (t = this.fallbackLocale), r = [];
                    var n, h = [e];
                    while (c(h)) h = this._appendBlockToChain(r, h, t);
                    n = c(t) ? t : o(t) ? t["default"] ? t["default"] : null : t, h = l(n) ? [n] : n, h && this._appendBlockToChain(r, h, null), this._localeChainCache[e] = r
                }
                return r
            }, Z.prototype._translate = function(e, t, r, n, h, a, i) {
                for (var c, o = this._getLocaleChain(t, r), s = 0; s < o.length; s++) {
                    var l = o[s];
                    if (c = this._interpolate(l, e[l], n, h, a, i, [n]), !b(c)) return c
                }
                return null
            }, Z.prototype._t = function(e, t, r, n) {
                var h, a = [],
                    i = arguments.length - 4;
                while (i-- > 0) a[i] = arguments[i + 4];
                if (!e) return "";
                var c = j.apply(void 0, a);
                this._escapeParameterHtml && (c.params = P(c.params));
                var o = c.locale || t,
                    s = this._translate(r, o, this.fallbackLocale, e, n, "string", c.params);
                if (this._isFallbackRoot(s)) {
                    if (!this._root) throw Error("unexpected error");
                    return (h = this._root).$t.apply(h, [e].concat(a))
                }
                return s = this._warnDefault(o, e, s, n, a, "string"), this._postTranslation && null !== s && void 0 !== s && (s = this._postTranslation(s, e)), s
            }, Z.prototype.t = function(e) {
                var t, r = [],
                    n = arguments.length - 1;
                while (n-- > 0) r[n] = arguments[n + 1];
                return (t = this)._t.apply(t, [e, this.locale, this._getMessages(), null].concat(r))
            }, Z.prototype._i = function(e, t, r, n, h) {
                var a = this._translate(r, t, this.fallbackLocale, e, n, "raw", h);
                if (this._isFallbackRoot(a)) {
                    if (!this._root) throw Error("unexpected error");
                    return this._root.$i18n.i(e, t, h)
                }
                return this._warnDefault(t, e, a, n, [h], "raw")
            }, Z.prototype.i = function(e, t, r) {
                return e ? (l(t) || (t = this.locale), this._i(e, t, this._getMessages(), null, r)) : ""
            }, Z.prototype._tc = function(e, t, r, n, h) {
                var a, i = [],
                    c = arguments.length - 5;
                while (c-- > 0) i[c] = arguments[c + 5];
                if (!e) return "";
                void 0 === h && (h = 1);
                var o = {
                        count: h,
                        n: h
                    },
                    s = j.apply(void 0, i);
                return s.params = Object.assign(o, s.params), i = null === s.locale ? [s.params] : [s.locale, s.params], this.fetchChoice((a = this)._t.apply(a, [e, t, r, n].concat(i)), h)
            }, Z.prototype.fetchChoice = function(e, t) {
                if (!e || !l(e)) return null;
                var r = e.split("|");
                return t = this.getChoiceIndex(t, r.length), r[t] ? r[t].trim() : e
            }, Z.prototype.tc = function(e, t) {
                var r, n = [],
                    h = arguments.length - 2;
                while (h-- > 0) n[h] = arguments[h + 2];
                return (r = this)._tc.apply(r, [e, this.locale, this._getMessages(), null, t].concat(n))
            }, Z.prototype._te = function(e, t, r) {
                var n = [],
                    h = arguments.length - 3;
                while (h-- > 0) n[h] = arguments[h + 3];
                var a = j.apply(void 0, n).locale || t;
                return this._exist(r[a], e)
            }, Z.prototype.te = function(e, t) {
                return this._te(e, this.locale, this._getMessages(), t)
            }, Z.prototype.getLocaleMessage = function(e) {
                return x(this._vm.messages[e] || {})
            }, Z.prototype.setLocaleMessage = function(e, t) {
                "warn" !== this._warnHtmlInMessage && "error" !== this._warnHtmlInMessage || this._checkLocaleMessage(e, this._warnHtmlInMessage, t), this._vm.$set(this._vm.messages, e, t)
            }, Z.prototype.mergeLocaleMessage = function(e, t) {
                "warn" !== this._warnHtmlInMessage && "error" !== this._warnHtmlInMessage || this._checkLocaleMessage(e, this._warnHtmlInMessage, t), this._vm.$set(this._vm.messages, e, k("undefined" !== typeof this._vm.messages[e] && Object.keys(this._vm.messages[e]).length ? Object.assign({}, this._vm.messages[e]) : {}, t))
            }, Z.prototype.getDateTimeFormat = function(e) {
                return x(this._vm.dateTimeFormats[e] || {})
            }, Z.prototype.setDateTimeFormat = function(e, t) {
                this._vm.$set(this._vm.dateTimeFormats, e, t), this._clearDateTimeFormat(e, t)
            }, Z.prototype.mergeDateTimeFormat = function(e, t) {
                this._vm.$set(this._vm.dateTimeFormats, e, k(this._vm.dateTimeFormats[e] || {}, t)), this._clearDateTimeFormat(e, t)
            }, Z.prototype._clearDateTimeFormat = function(e, t) {
                for (var r in t) {
                    var n = e + "__" + r;
                    this._dateTimeFormatters.hasOwnProperty(n) && delete this._dateTimeFormatters[n]
                }
            }, Z.prototype._localizeDateTime = function(e, t, r, n, h, a) {
                for (var i = t, c = n[i], o = this._getLocaleChain(t, r), s = 0; s < o.length; s++) {
                    var l = o[s];
                    if (c = n[l], i = l, !b(c) && !b(c[h])) break
                }
                if (b(c) || b(c[h])) return null;
                var p, d = c[h];
                if (a) p = new Intl.DateTimeFormat(i, Object.assign({}, d, a));
                else {
                    var g = i + "__" + h;
                    p = this._dateTimeFormatters[g], p || (p = this._dateTimeFormatters[g] = new Intl.DateTimeFormat(i, d))
                }
                return p.format(e)
            }, Z.prototype._d = function(e, t, r, n) {
                if (!r) {
                    var h = n ? new Intl.DateTimeFormat(t, n) : new Intl.DateTimeFormat(t);
                    return h.format(e)
                }
                var a = this._localizeDateTime(e, t, this.fallbackLocale, this._getDateTimeFormats(), r, n);
                if (this._isFallbackRoot(a)) {
                    if (!this._root) throw Error("unexpected error");
                    return this._root.$i18n.d(e, r, t)
                }
                return a || ""
            }, Z.prototype.d = function(e) {
                var t = [],
                    r = arguments.length - 1;
                while (r-- > 0) t[r] = arguments[r + 1];
                var n = this.locale,
                    h = null,
                    i = null;
                return 1 === t.length ? (l(t[0]) ? h = t[0] : o(t[0]) && (t[0].locale && (n = t[0].locale), t[0].key && (h = t[0].key)), i = Object.keys(t[0]).reduce((function(e, r) {
                    var n;
                    return V(a, r) ? Object.assign({}, e, (n = {}, n[r] = t[0][r], n)) : e
                }), null)) : 2 === t.length && (l(t[0]) && (h = t[0]), l(t[1]) && (n = t[1])), this._d(e, n, h, i)
            }, Z.prototype.getNumberFormat = function(e) {
                return x(this._vm.numberFormats[e] || {})
            }, Z.prototype.setNumberFormat = function(e, t) {
                this._vm.$set(this._vm.numberFormats, e, t), this._clearNumberFormat(e, t)
            }, Z.prototype.mergeNumberFormat = function(e, t) {
                this._vm.$set(this._vm.numberFormats, e, k(this._vm.numberFormats[e] || {}, t)), this._clearNumberFormat(e, t)
            }, Z.prototype._clearNumberFormat = function(e, t) {
                for (var r in t) {
                    var n = e + "__" + r;
                    this._numberFormatters.hasOwnProperty(n) && delete this._numberFormatters[n]
                }
            }, Z.prototype._getNumberFormatter = function(e, t, r, n, h, a) {
                for (var i = t, c = n[i], o = this._getLocaleChain(t, r), s = 0; s < o.length; s++) {
                    var l = o[s];
                    if (c = n[l], i = l, !b(c) && !b(c[h])) break
                }
                if (b(c) || b(c[h])) return null;
                var p, d = c[h];
                if (a) p = new Intl.NumberFormat(i, Object.assign({}, d, a));
                else {
                    var g = i + "__" + h;
                    p = this._numberFormatters[g], p || (p = this._numberFormatters[g] = new Intl.NumberFormat(i, d))
                }
                return p
            }, Z.prototype._n = function(e, t, r, n) {
                if (!Z.availabilities.numberFormat) return "";
                if (!r) {
                    var h = n ? new Intl.NumberFormat(t, n) : new Intl.NumberFormat(t);
                    return h.format(e)
                }
                var a = this._getNumberFormatter(e, t, this.fallbackLocale, this._getNumberFormats(), r, n),
                    i = a && a.format(e);
                if (this._isFallbackRoot(i)) {
                    if (!this._root) throw Error("unexpected error");
                    return this._root.$i18n.n(e, Object.assign({}, {
                        key: r,
                        locale: t
                    }, n))
                }
                return i || ""
            }, Z.prototype.n = function(e) {
                var t = [],
                    r = arguments.length - 1;
                while (r-- > 0) t[r] = arguments[r + 1];
                var n = this.locale,
                    a = null,
                    i = null;
                return 1 === t.length ? l(t[0]) ? a = t[0] : o(t[0]) && (t[0].locale && (n = t[0].locale), t[0].key && (a = t[0].key), i = Object.keys(t[0]).reduce((function(e, r) {
                    var n;
                    return V(h, r) ? Object.assign({}, e, (n = {}, n[r] = t[0][r], n)) : e
                }), null)) : 2 === t.length && (l(t[0]) && (a = t[0]), l(t[1]) && (n = t[1])), this._n(e, n, a, i)
            }, Z.prototype._ntp = function(e, t, r, n) {
                if (!Z.availabilities.numberFormat) return [];
                if (!r) {
                    var h = n ? new Intl.NumberFormat(t, n) : new Intl.NumberFormat(t);
                    return h.formatToParts(e)
                }
                var a = this._getNumberFormatter(e, t, this.fallbackLocale, this._getNumberFormats(), r, n),
                    i = a && a.formatToParts(e);
                if (this._isFallbackRoot(i)) {
                    if (!this._root) throw Error("unexpected error");
                    return this._root.$i18n._ntp(e, t, r, n)
                }
                return i || []
            }, Object.defineProperties(Z.prototype, K), Object.defineProperty(Z, "availabilities", {
                get: function() {
                    if (!G) {
                        var e = "undefined" !== typeof Intl;
                        G = {
                            dateTimeFormat: e && "undefined" !== typeof Intl.DateTimeFormat,
                            numberFormat: e && "undefined" !== typeof Intl.NumberFormat
                        }
                    }
                    return G
                }
            }), Z.install = A, Z.version = "8.28.2", r["default"] = Z
        },
        "4e7c": function(e, t, r) {
            var n = r("7ca3");

            function h(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), r.push.apply(r, n)
                }
                return r
            }

            function a(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? h(Object(r), !0).forEach((function(t) {
                        n(e, t, r[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : h(Object(r)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                    }))
                }
                return e
            }
            var i = r("e5e7"),
                c = r("27de"),
                o = r("cfa8"),
                s = a(a(a({}, i.DrawFonts), c.DrawFonts), o.DrawFonts);
            e.exports = {
                DrawFonts: s
            }
        },
        "52b4": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default,
                    uniPopup: r("762b").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [r("navigation-bar", {
                        attrs: {
                            title: e.nbTitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), r("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [r("view", [r("view", [r("view", {
                        staticClass: e._$s(6, "sc", "devices_summary"),
                        attrs: {
                            _i: 6
                        }
                    }, [e._v(e._$s(6, "t0-0", e._s(e.$t("\u5df2\u53d1\u73b0")))), r("text", [e._v(e._$s(7, "t0-0", e._s(null == e.devices ? 0 : e.devices.length)))])]), e._$s(8, "i", e.showUUID) ? r("view", {
                        staticClass: e._$s(8, "sc", "btn-view-style"),
                        attrs: {
                            _i: 8
                        }
                    }, [r("button", {
                        staticClass: e._$s(9, "sc", "button_sp"),
                        attrs: {
                            _i: 9
                        },
                        on: {
                            click: e.gotosetuuid
                        }
                    })]) : e._e(), e._$s(10, "i", e.showUUID) ? r("view", {
                        staticClass: e._$s(10, "sc", "btn-view-style"),
                        attrs: {
                            _i: 10
                        }
                    }, [r("button", {
                        staticClass: e._$s(11, "sc", "button_sp"),
                        attrs: {
                            _i: 11
                        },
                        on: {
                            click: e.testDev
                        }
                    })]) : e._e(), e._$s(12, "i", 0 == e.misScanding && null != e.devices && 0 == e.devices.length) ? r("view", {
                        staticClass: e._$s(12, "sc", "btn-view-style"),
                        attrs: {
                            _i: 12
                        }
                    }, [r("button", {
                        staticClass: e._$s(13, "sc", "button_sp"),
                        attrs: {
                            _i: 13
                        },
                        on: {
                            click: e.showCnnDeal
                        }
                    }, [e._v(e._$s(13, "t0-0", e._s(e.$t("\u641c\u7d22\u4e0d\u5230\u8bbe\u5907?"))))])]) : e._e()]), r("scroll-view", {
                        attrs: {
                            _i: 14
                        },
                        on: {
                            click: e.testTap,
                            longpress: e.testLongtap
                        }
                    }, e._l(e._$s(15, "f", {
                        forItems: e.devices
                    }), (function(t, n, h, a) {
                        return r("view", {
                            key: e._$s(15, "f", {
                                forIndex: h,
                                key: n
                            }),
                            staticClass: e._$s("15-" + a, "sc", "device_item"),
                            attrs: {
                                "data-device-id": e._$s("15-" + a, "a-data-device-id", t.deviceId),
                                "data-name": e._$s("15-" + a, "a-data-name", t.showName),
                                _i: "15-" + a
                            },
                            on: {
                                click: e.goto_Comm
                            }
                        }, [r("view", [r("view", [e._v(e._$s("17-" + a, "t0-0", e._s(t.showName)))]), r("view", [e._v(e._$s("18-" + a, "t0-0", e._s(t.RSSI)))])]), r("view", [e._v(e._$s("19-" + a, "t0-0", e._s(t.deviceId)))])])
                    })), 0), r("view", [r("button", {
                        staticClass: e._$s(21, "sc", "button_sps"),
                        attrs: {
                            loading: e._$s(21, "a-loading", 0 != e.misScanding),
                            _i: 21
                        },
                        on: {
                            click: e.startBluetoothDevicesDiscovery
                        }
                    }, [e._v(e._$s(21, "t0-0", e._s(e.misScanding ? e.$t("\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62") : e.$t("\u91cd\u65b0\u5237\u65b0\u5217\u8868"))))])])]), r("uni-popup", {
                        ref: "cnnDealPopup",
                        attrs: {
                            "mask-click": !0,
                            animation: !1,
                            _i: 22
                        }
                    }, [r("view", {
                        staticClass: e._$s(23, "sc", "container"),
                        attrs: {
                            _i: 23
                        }
                    }, [r("view", [r("view", {
                        staticClass: e._$s(25, "sc", "title"),
                        attrs: {
                            _i: 25
                        }
                    }, [e._v(e._$s(25, "t0-0", e._s(e.$t("Ins_title"))))]), r("view", {
                        staticClass: e._$s(26, "sc", "step-x"),
                        attrs: {
                            _i: 26
                        },
                        on: {
                            click: e.closeCnnDealPopup
                        }
                    })]), r("view", {
                        staticClass: e._$s(27, "sc", "step-list"),
                        attrs: {
                            _i: 27
                        }
                    }, e._l(e._$s(28, "f", {
                        forItems: e.InsCnns
                    }), (function(t, n, h, a) {
                        return r("view", {
                            key: e._$s(28, "f", {
                                forIndex: h,
                                key: n
                            }),
                            staticClass: e._$s("28-" + a, "sc", "step"),
                            attrs: {
                                _i: "28-" + a
                            }
                        }, [r("view", {
                            staticClass: e._$s("29-" + a, "sc", "step-number"),
                            attrs: {
                                _i: "29-" + a
                            }
                        }, [e._v(e._$s("29-" + a, "t0-0", e._s(n + 1)))]), r("view", {
                            staticClass: e._$s("30-" + a, "sc", "step-content"),
                            attrs: {
                                _i: "30-" + a
                            }
                        }, [r("view", {
                            staticClass: e._$s("31-" + a, "sc", "step-title"),
                            attrs: {
                                _i: "31-" + a
                            }
                        }, [e._v(e._$s("31-" + a, "t0-0", e._s(e.$t(t.title))))]), r("view", {
                            staticClass: e._$s("32-" + a, "sc", "step-desc"),
                            attrs: {
                                _i: "32-" + a
                            }
                        }, [e._v(e._$s("32-" + a, "t0-0", e._s(e.$t(t.text))))])])])
                    })), 0)])])], 1)], 1)
                },
                a = []
        },
        "531a": function(e, t, r) {
            "use strict";
            (function(e) {
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var r = getApp(),
                    n = {
                        data: function() {
                            return {
                                ntitle: this.$t("\u7cfb\u7edf\u8bed\u8a00"),
                                lang: "",
                                list: r.globalData.langs
                            }
                        },
                        onLoad: function(t) {
                            this.lang = r.globalData.getLang(), e("log", this.lang, " at pages/lang/lang.js:14")
                        },
                        methods: {
                            selectSet: function(t) {
                                var n = this;
                                this.lang = t, uni.showLoading({
                                    mask: !0
                                }), setTimeout((function() {
                                    e("log", n.lang, " at pages/lang/lang.js:24"), r.globalData.setLang(n.lang), uni.hideLoading(), uni.navigateBack()
                                }), 500)
                            },
                            OkClick: function(e) {
                                uni.navigateBack()
                            }
                        }
                    };
                t.default = n
            }).call(this, r("f3b9")["default"])
        },
        "56d8": function(e, t, r) {
            e.exports = r.p + "static/imgs/arrow-up.png"
        },
        5945: function(e, t) {
            var r = [
                [
                    [-400, 0, 0, 1],
                    [-360, 0, 1, 0],
                    [-320, 0, 1, 0],
                    [-280, 0, 1, 0],
                    [-240, 0, 4, 0],
                    [-200, 0, 4, 0],
                    [-160, 0, 4, 0],
                    [-120, 0, 2, 0],
                    [-80, 0, 2, 0],
                    [-40, 0, 2, 0],
                    [0, 0, 5, 0],
                    [40, 0, 5, 0],
                    [80, 0, 5, 0],
                    [120, 0, 6, 0],
                    [160, 0, 6, 0],
                    [200, 0, 6, 0],
                    [240, 0, 3, 0],
                    [280, 0, 3, 0],
                    [320, 0, 3, 0],
                    [360, 0, 7, 0],
                    [400, 0, 7, 1]
                ],
                [
                    [0, -400, 0, 1],
                    [0, -360, 1, 0],
                    [0, -320, 1, 0],
                    [0, -280, 1, 0],
                    [0, -240, 4, 0],
                    [0, -200, 4, 0],
                    [0, -160, 4, 0],
                    [0, -120, 2, 0],
                    [0, -80, 2, 0],
                    [0, -40, 2, 0],
                    [0, 0, 5, 0],
                    [0, 40, 5, 0],
                    [0, 80, 5, 0],
                    [0, 120, 6, 0],
                    [0, 160, 6, 0],
                    [0, 200, 6, 0],
                    [0, 240, 3, 0],
                    [0, 280, 3, 0],
                    [0, 320, 3, 0],
                    [0, 360, 7, 0],
                    [0, 400, 7, 1]
                ],
                [
                    [-400, -400, 0, 1],
                    [-360, -360, 1, 0],
                    [-320, -320, 1, 0],
                    [-280, -280, 1, 0],
                    [-240, -240, 4, 0],
                    [-200, -200, 4, 0],
                    [-160, -160, 4, 0],
                    [-120, -120, 2, 0],
                    [-80, -80, 2, 0],
                    [-40, -40, 2, 0],
                    [0, 0, 5, 0],
                    [40, 40, 5, 0],
                    [80, 80, 5, 0],
                    [120, 120, 6, 0],
                    [160, 160, 6, 0],
                    [200, 200, 6, 0],
                    [240, 240, 3, 0],
                    [280, 280, 3, 0],
                    [320, 320, 3, 0],
                    [360, 360, 7, 0],
                    [400, 400, 7, 1]
                ],
                [
                    [-400, 400, 0, 1],
                    [-360, 360, 1, 0],
                    [-320, 320, 1, 0],
                    [-280, 280, 1, 0],
                    [-240, 240, 4, 0],
                    [-200, 200, 4, 0],
                    [-160, 160, 4, 0],
                    [-120, 120, 2, 0],
                    [-80, 80, 2, 0],
                    [-40, 40, 2, 0],
                    [0, 0, 5, 0],
                    [40, 40, 5, 0],
                    [80, 80, 5, 0],
                    [120, 120, 6, 0],
                    [160, 160, 6, 0],
                    [200, 200, 6, 0],
                    [240, 240, 3, 0],
                    [280, 280, 3, 0],
                    [320, 320, 3, 0],
                    [360, 360, 7, 0],
                    [400, 400, 7, 1]
                ],
                [
                    [-403, 0, 0, 1],
                    [-336, 0, 1, 0],
                    [-269, 0, 1, 0],
                    [-202, 0, 1, 0],
                    [-134, 0, 1, 0],
                    [-67, 0, 1, 0],
                    [0, 0, 1, 1],
                    [67, 0, 2, 0],
                    [134, 0, 2, 0],
                    [202, 0, 2, 0],
                    [269, 0, 2, 0],
                    [336, 0, 2, 0],
                    [403, 0, 2, 1],
                    [0, 403, 0, 1],
                    [0, 336, 6, 0],
                    [0, 269, 6, 0],
                    [0, 202, 6, 0],
                    [0, 134, 6, 0],
                    [0, 67, 6, 0],
                    [0, 0, 6, 1],
                    [0, -67, 7, 0],
                    [0, -134, 7, 0],
                    [0, -202, 7, 0],
                    [0, -269, 7, 0],
                    [0, -336, 7, 0],
                    [0, -403, 7, 1]
                ],
                [
                    [-450, -400, 0, 1],
                    [-350, -400, 7, 1],
                    [-350, -300, 1, 1],
                    [-250, -300, 1, 1],
                    [-250, -200, 4, 1],
                    [-150, -200, 4, 1],
                    [-150, -100, 2, 1],
                    [-50, -100, 2, 1],
                    [-50, 0, 5, 1],
                    [50, 0, 5, 1],
                    [50, 100, 3, 1],
                    [150, 100, 3, 1],
                    [150, 200, 6, 1],
                    [250, 200, 6, 1],
                    [250, 300, 2, 1],
                    [350, 300, 2, 1],
                    [350, 400, 7, 1],
                    [450, 400, 7, 1]
                ],
                [
                    [-363, -210, 0, 1],
                    [-252, -210, 7, 0],
                    [-158, -210, 7, 0],
                    [-63, -210, 7, 0],
                    [32, -210, 7, 0],
                    [126, -210, 7, 0],
                    [220, -210, 7, 0],
                    [315, -210, 7, 0],
                    [363, -210, 7, 1],
                    [299, -99, 2, 0],
                    [252, -15, 2, 0],
                    [205, 65, 2, 0],
                    [158, 145, 2, 0],
                    [110, 229, 2, 0],
                    [63, 311, 2, 0],
                    [16, 392, 2, 0],
                    [0, 420, 2, 1],
                    [-47, 338, 4, 0],
                    [-94, 257, 4, 0],
                    [-142, 168, 4, 0],
                    [-189, 92, 4, 0],
                    [-236, 10, 4, 0],
                    [-284, -70, 4, 0],
                    [-339, -168, 4, 0],
                    [-363, -210, 4, 1]
                ],
                [
                    [-400, 400, 0, 1],
                    [-240, 400, 7, 0],
                    [-80, 400, 7, 0],
                    [80, 400, 7, 0],
                    [280, 400, 7, 0],
                    [400, 400, 7, 1],
                    [400, 240, 4, 0],
                    [400, 80, 4, 0],
                    [400, -80, 4, 0],
                    [400, -240, 4, 0],
                    [400, -400, 4, 1],
                    [240, -400, 5, 0],
                    [80, -400, 5, 0],
                    [-80, -400, 5, 0],
                    [-280, -400, 5, 0],
                    [-400, -400, 5, 1],
                    [-400, -240, 6, 0],
                    [-400, -80, 6, 0],
                    [-400, 80, 6, 0],
                    [-400, 240, 6, 0],
                    [-400, 400, 6, 1]
                ],
                [
                    [0, 400, 0, 3],
                    [80, 340, 7, 0],
                    [160, 278, 7, 0],
                    [240, 218, 7, 0],
                    [320, 156, 7, 0],
                    [400, 94, 7, 3],
                    [372, 2, 2, 0],
                    [344, -84, 2, 0],
                    [316, -174, 2, 0],
                    [288, -270, 2, 0],
                    [260, -360, 2, 0],
                    [248, -400, 2, 3],
                    [160, -400, 4, 0],
                    [72, -400, 4, 0],
                    [-28, -400, 4, 0],
                    [-116, -400, 4, 0],
                    [-204, -400, 4, 0],
                    [-248, -400, 4, 3],
                    [-274, -314, 5, 0],
                    [-302, -224, 5, 0],
                    [-330, -134, 5, 0],
                    [-358, -40, 5, 0],
                    [-372, 2, 5, 0],
                    [-400, 94, 5, 3],
                    [-320, 156, 6, 0],
                    [-240, 218, 6, 0],
                    [-160, 278, 6, 0],
                    [-80, 340, 6, 0],
                    [0, 400, 6, 3]
                ],
                [
                    [0, 398, 0, 3],
                    [-96, 358, 1, 0],
                    [-191, 318, 1, 0],
                    [-283, 283, 1, 3],
                    [-318, 191, 2, 0],
                    [-358, 96, 2, 0],
                    [-398, 0, 2, 3],
                    [-358, -96, 3, 0],
                    [-318, -191, 3, 0],
                    [-283, -283, 3, 3],
                    [-191, -318, 4, 0],
                    [-96, -358, 4, 0],
                    [0, -398, 4, 3],
                    [96, -358, 5, 0],
                    [191, -318, 5, 0],
                    [283, -283, 5, 3],
                    [318, -191, 6, 0],
                    [358, -96, 6, 0],
                    [398, 0, 6, 3],
                    [358, 96, 7, 0],
                    [318, 191, 7, 0],
                    [283, 283, 7, 3],
                    [191, 318, 4, 0],
                    [96, 358, 4, 0],
                    [0, 398, 4, 3]
                ],
                [
                    [0, 398, 0, 1],
                    [0, 398, 1, 1],
                    [-96, 96, 1, 1],
                    [-96, 96, 1, 1],
                    [-398, 96, 2, 1],
                    [-398, 96, 2, 1],
                    [-151, -96, 2, 1],
                    [-151, -96, 2, 1],
                    [-247, -398, 4, 1],
                    [-247, -398, 4, 1],
                    [0, -211, 4, 1],
                    [0, -211, 4, 1],
                    [247, -398, 6, 1],
                    [247, -398, 6, 1],
                    [151, -96, 6, 1],
                    [151, -96, 6, 1],
                    [398, 96, 7, 1],
                    [398, 96, 7, 1],
                    [96, 96, 7, 1],
                    [96, 96, 7, 1],
                    [0, 398, 1, 1],
                    [0, 398, 1, 1]
                ],
                [
                    [0, 400, 0, 1],
                    [56, 396, 1, 0],
                    [110, 384, 1, 0],
                    [163, 366, 1, 0],
                    [212, 339, 1, 0],
                    [257, 306, 1, 0],
                    [297, 268, 3, 0],
                    [332, 224, 3, 0],
                    [360, 175, 3, 0],
                    [380, 124, 3, 0],
                    [394, 70, 3, 0],
                    [400, 0, 6, 0],
                    [398, -42, 6, 0],
                    [388, -97, 6, 0],
                    [371, -150, 6, 0],
                    [346, -200, 6, 0],
                    [315, -246, 5, 0],
                    [278, -288, 5, 0],
                    [235, -324, 5, 0],
                    [188, -353, 5, 0],
                    [137, -376, 5, 0],
                    [83, -391, 4, 0],
                    [28, -399, 4, 0],
                    [-28, -399, 4, 0],
                    [-83, -391, 4, 0],
                    [-163, -366, 4, 0],
                    [-235, -324, 2, 0],
                    [-278, -288, 2, 0],
                    [-315, -246, 2, 0],
                    [-346, -200, 2, 0],
                    [-371, -150, 2, 0],
                    [-388, -97, 7, 0],
                    [-398, -42, 7, 0],
                    [-400, 14, 7, 0],
                    [-394, 70, 7, 0],
                    [-376, 137, 7, 0],
                    [-353, 188, 4, 0],
                    [-324, 235, 4, 0],
                    [-288, 278, 4, 0],
                    [-246, 315, 4, 0],
                    [-200, 346, 4, 0],
                    [-150, 371, 2, 0],
                    [-97, 388, 2, 0],
                    [-42, 398, 2, 0],
                    [0, 400, 2, 1]
                ],
                [
                    [-400, 0, 0, 1],
                    [-392, 20, 1, 0],
                    [-384, 35, 1, 0],
                    [-376, 40, 1, 0],
                    [-368, 35, 1, 0],
                    [-360, 20, 1, 0],
                    [-352, 0, 1, 0],
                    [-344, -20, 1, 0],
                    [-336, -35, 1, 0],
                    [-328, -40, 1, 0],
                    [-320, -35, 1, 0],
                    [-312, -20, 1, 0],
                    [-304, 0, 1, 0],
                    [-296, 20, 4, 0],
                    [-288, 35, 4, 0],
                    [-280, 40, 4, 0],
                    [-272, 35, 4, 0],
                    [-264, 20, 4, 0],
                    [-256, 0, 4, 0],
                    [-248, -20, 4, 0],
                    [-240, -35, 4, 0],
                    [-232, -40, 4, 0],
                    [-224, -35, 4, 0],
                    [-216, -20, 4, 0],
                    [-208, 0, 4, 0],
                    [-200, 20, 2, 0],
                    [-192, 35, 2, 0],
                    [-184, 40, 2, 0],
                    [-176, 35, 2, 0],
                    [-168, 20, 2, 0],
                    [-160, 0, 2, 0],
                    [-152, -20, 2, 0],
                    [-144, -35, 2, 0],
                    [-136, -40, 2, 0],
                    [-128, -35, 2, 0],
                    [-120, -20, 2, 0],
                    [-112, 0, 2, 0],
                    [-104, 20, 5, 0],
                    [-96, 35, 5, 0],
                    [-88, 40, 5, 0],
                    [-80, 35, 5, 0],
                    [-72, 20, 5, 0],
                    [-64, 0, 5, 0],
                    [-56, -20, 5, 0],
                    [-48, -35, 5, 0],
                    [-40, -40, 5, 0],
                    [-32, -35, 5, 0],
                    [-24, -20, 5, 0],
                    [-16, 0, 5, 0],
                    [-8, 20, 3, 0],
                    [0, 35, 3, 0],
                    [8, 40, 3, 0],
                    [16, 35, 3, 0],
                    [24, 20, 3, 0],
                    [32, 0, 3, 0],
                    [40, -20, 3, 0],
                    [48, -35, 3, 0],
                    [56, -40, 3, 0],
                    [64, -35, 3, 0],
                    [72, -20, 3, 0],
                    [80, 0, 3, 0],
                    [88, 20, 6, 0],
                    [96, 35, 6, 0],
                    [104, 40, 6, 0],
                    [112, 35, 6, 0],
                    [120, 20, 6, 0],
                    [128, 0, 6, 0],
                    [136, -20, 6, 0],
                    [144, -35, 6, 0],
                    [152, -40, 6, 0],
                    [160, -35, 6, 0],
                    [168, -20, 6, 0],
                    [176, 0, 6, 0],
                    [184, 20, 7, 0],
                    [192, 35, 7, 0],
                    [200, 40, 7, 0],
                    [208, 35, 7, 0],
                    [216, 20, 7, 0],
                    [224, 0, 7, 0],
                    [232, -20, 7, 0],
                    [240, -35, 7, 0],
                    [248, -40, 7, 0],
                    [256, -35, 7, 0],
                    [264, -20, 7, 0],
                    [272, 0, 7, 0],
                    [280, 20, 4, 0],
                    [288, 35, 4, 0],
                    [296, 40, 4, 0],
                    [304, 35, 4, 0],
                    [312, 20, 4, 0],
                    [320, 0, 4, 0],
                    [328, -20, 4, 0],
                    [336, -35, 4, 0],
                    [344, -40, 4, 0],
                    [352, -35, 4, 0],
                    [360, -20, 4, 0],
                    [368, 0, 4, 0],
                    [376, 20, 5, 0],
                    [384, 35, 5, 0],
                    [392, 40, 5, 0],
                    [400, 35, 5, 1]
                ],
                [
                    [-394, 0, 0, 1],
                    [-394, 0, 7, 4],
                    [-341, 0, 0, 1],
                    [-341, 0, 7, 4],
                    [-289, 0, 0, 1],
                    [-289, 0, 1, 4],
                    [-236, 0, 0, 1],
                    [-236, 0, 1, 4],
                    [-184, 0, 0, 1],
                    [-184, 0, 3, 4],
                    [-131, 0, 0, 1],
                    [-131, 0, 3, 4],
                    [-79, 0, 0, 1],
                    [-79, 0, 6, 4],
                    [-26, 0, 0, 1],
                    [-26, 0, 6, 4],
                    [26, 0, 0, 1],
                    [26, 0, 5, 4],
                    [79, 0, 0, 1],
                    [79, 0, 5, 4],
                    [131, 0, 0, 1],
                    [131, 0, 4, 4],
                    [184, 0, 0, 1],
                    [184, 0, 4, 4],
                    [236, 0, 0, 1],
                    [236, 0, 2, 4],
                    [289, 0, 0, 1],
                    [289, 0, 2, 4],
                    [341, 0, 0, 1],
                    [341, 0, 7, 4],
                    [394, 0, 0, 1],
                    [394, 0, 7, 4]
                ],
                [
                    [0, 375, 0, 1],
                    [0, 375, 1, 4],
                    [52, 371, 0, 1],
                    [52, 371, 1, 4],
                    [104, 360, 0, 1],
                    [104, 360, 1, 4],
                    [153, 343, 0, 1],
                    [153, 343, 1, 4],
                    [199, 318, 0, 1],
                    [199, 318, 1, 4],
                    [241, 287, 0, 1],
                    [241, 287, 1, 4],
                    [279, 251, 0, 1],
                    [279, 251, 4, 4],
                    [311, 210, 0, 1],
                    [311, 210, 4, 4],
                    [337, 164, 0, 1],
                    [337, 164, 4, 4],
                    [357, 116, 0, 1],
                    [357, 116, 4, 4],
                    [369, 65, 0, 1],
                    [369, 65, 4, 4],
                    [375, 13, 0, 1],
                    [375, 13, 4, 4],
                    [373, -39, 0, 1],
                    [373, -39, 4, 4],
                    [364, -91, 0, 1],
                    [364, -91, 2, 4],
                    [348, -141, 0, 1],
                    [348, -141, 2, 4],
                    [325, -188, 0, 1],
                    [325, -188, 2, 4],
                    [296, -231, 0, 1],
                    [296, -231, 2, 4],
                    [261, -270, 0, 1],
                    [261, -270, 2, 4],
                    [220, -303, 0, 1],
                    [220, -303, 2, 4],
                    [176, -331, 0, 1],
                    [176, -331, 5, 4],
                    [128, -352, 0, 1],
                    [128, -352, 5, 4],
                    [78, -367, 0, 1],
                    [78, -367, 5, 4],
                    [26, -374, 0, 1],
                    [26, -374, 5, 4],
                    [-26, -374, 0, 1],
                    [-26, -374, 5, 4],
                    [-78, -367, 0, 1],
                    [-78, -367, 5, 4],
                    [-128, -352, 0, 1],
                    [-128, -352, 5, 4],
                    [-176, -331, 0, 1],
                    [-176, -331, 3, 4],
                    [-220, -303, 0, 1],
                    [-220, -303, 3, 4],
                    [-261, -270, 0, 1],
                    [-261, -270, 3, 4],
                    [-296, -231, 0, 1],
                    [-296, -231, 3, 4],
                    [-325, -188, 0, 1],
                    [-325, -188, 3, 4],
                    [-348, -141, 0, 1],
                    [-348, -141, 3, 4],
                    [-364, -91, 0, 1],
                    [-364, -91, 6, 4],
                    [-373, -39, 0, 1],
                    [-373, -39, 6, 4],
                    [-375, 13, 0, 1],
                    [-375, 13, 6, 4],
                    [-369, 65, 0, 1],
                    [-369, 65, 6, 4],
                    [-352, 128, 0, 1],
                    [-352, 128, 6, 4],
                    [-331, 176, 0, 1],
                    [-331, 176, 6, 4],
                    [-303, 220, 0, 1],
                    [-303, 220, 7, 4],
                    [-270, 261, 0, 1],
                    [-270, 261, 7, 4],
                    [-231, 296, 0, 1],
                    [-231, 296, 7, 4],
                    [-188, 325, 0, 1],
                    [-188, 325, 7, 4],
                    [-141, 348, 0, 1],
                    [-141, 348, 7, 4],
                    [-91, 364, 0, 1],
                    [-91, 364, 7, 4],
                    [-39, 373, 0, 1],
                    [-39, 373, 7, 4]
                ],
                [
                    [0, -394, 0, 1],
                    [0, -394, 7, 4],
                    [0, -341, 0, 1],
                    [0, -341, 7, 4],
                    [0, -289, 0, 1],
                    [0, -289, 1, 4],
                    [0, -236, 0, 1],
                    [0, -236, 1, 4],
                    [0, -184, 0, 1],
                    [0, -184, 3, 4],
                    [0, -131, 0, 1],
                    [0, -131, 3, 4],
                    [0, -79, 0, 1],
                    [0, -79, 6, 4],
                    [0, -26, 0, 1],
                    [0, -26, 6, 4],
                    [0, 26, 0, 1],
                    [0, 26, 5, 4],
                    [0, 79, 0, 1],
                    [0, 79, 5, 4],
                    [0, 131, 0, 1],
                    [0, 131, 4, 4],
                    [0, 184, 0, 1],
                    [0, 184, 4, 4],
                    [0, 236, 0, 1],
                    [0, 236, 2, 4],
                    [0, 289, 0, 1],
                    [0, 289, 2, 4],
                    [0, 341, 0, 1],
                    [0, 341, 7, 4],
                    [0, 394, 0, 1],
                    [0, 394, 7, 4]
                ],
                [
                    [-394, -394, 0, 1],
                    [-394, -394, 7, 4],
                    [-341, -341, 0, 1],
                    [-341, -341, 7, 4],
                    [-289, -289, 0, 1],
                    [-289, -289, 1, 4],
                    [-236, -236, 0, 1],
                    [-236, -236, 1, 4],
                    [-184, -184, 0, 1],
                    [-184, -184, 3, 4],
                    [-131, -131, 0, 1],
                    [-131, -131, 3, 4],
                    [-79, -79, 0, 1],
                    [-79, -79, 6, 4],
                    [-26, -26, 0, 1],
                    [-26, -26, 6, 4],
                    [26, 26, 0, 1],
                    [26, 26, 5, 4],
                    [79, 79, 0, 1],
                    [79, 79, 5, 4],
                    [131, 131, 0, 1],
                    [131, 131, 4, 4],
                    [184, 184, 0, 1],
                    [184, 184, 4, 4],
                    [236, 236, 0, 1],
                    [236, 236, 2, 4],
                    [289, 289, 0, 1],
                    [289, 289, 2, 4],
                    [341, 341, 0, 1],
                    [341, 341, 7, 4],
                    [394, 394, 0, 1],
                    [394, 394, 7, 4]
                ]
            ];
            e.exports = {
                picArray: r
            }
        },
        "5a85": function(e, t, r) {
            "use strict";
            (function(e) {
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var r = getApp(),
                    n = {
                        data: function() {
                            var e = r.globalData.getDeviceInfo();
                            return {
                                items: [{
                                    name: "0",
                                    value: "\u6b63\u5f0f\u6a21\u7ec4",
                                    checked: "true"
                                }, {
                                    name: "1",
                                    value: "\u6d4b\u8bd5\u6a21\u7ec4"
                                }, {
                                    name: "2",
                                    value: "\u4e0d\u6307\u5b9a"
                                }],
                                nowsel: 0,
                                devVers: [{
                                    dev: 0,
                                    ver: 0
                                }, {
                                    dev: 0,
                                    ver: 1
                                }, {
                                    dev: 0,
                                    ver: 2
                                }, {
                                    dev: 0,
                                    ver: 3
                                }, {
                                    dev: 0,
                                    ver: 4
                                }, {
                                    dev: 0,
                                    ver: 5
                                }, {
                                    dev: 1,
                                    ver: 0
                                }, {
                                    dev: 1,
                                    ver: 1
                                }, {
                                    dev: 1,
                                    ver: 2
                                }, {
                                    dev: 1,
                                    ver: 3
                                }, {
                                    dev: 1,
                                    ver: 4
                                }, {
                                    dev: 1,
                                    ver: 5
                                }, {
                                    dev: 2,
                                    ver: 0
                                }, {
                                    dev: 2,
                                    ver: 1
                                }, {
                                    dev: 2,
                                    ver: 2
                                }, {
                                    dev: 2,
                                    ver: 3
                                }, {
                                    dev: 2,
                                    ver: 4
                                }, {
                                    dev: 2,
                                    ver: 5
                                }],
                                devInf: e
                            }
                        },
                        onLoad: function(e) {
                            this.nowsel = r.globalData.muuidSel
                        },
                        methods: {
                            radioVerChange: function(e) {
                                var t = parseInt(e.detail.value),
                                    n = this.devVers[t];
                                this.devInf.deviceType = n.dev, this.devInf.version = n.ver, r.globalData.setDeviceInfo(this.devInf.deviceType, this.devInf.version, this.devInf.userType), this.backok()
                            },
                            radioChange: function(t) {
                                e("log", "radio\u53d1\u751fchange\u4e8b\u4ef6\uff0c\u643a\u5e26value\u503c\u4e3a\uff1a", t.detail.value, " at pages/setuuid/setuuid.vue:76"), this.nowsel = parseInt(t.detail.value)
                            },
                            backok: function() {
                                r.globalData.savelastsel(this.nowsel), r.globalData.readSetting(), uni.navigateBack({
                                    delta: 1
                                })
                            }
                        }
                    };
                t.default = n
            }).call(this, r("f3b9")["default"])
        },
        6169: function(e, t, r) {
            e.exports = r.p + "static/imgs/refreshempty.png"
        },
        "61af": function(e, t) {},
        6382: function(e, t, r) {
            var n = r("6454");
            e.exports = function(e, t) {
                if (e) {
                    if ("string" === typeof e) return n(e, t);
                    var r = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? n(e, t) : void 0
                }
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        6454: function(e, t) {
            e.exports = function(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
                return n
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        "64a8": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            _i: 1
                        }
                    }, [r("navigation-bar", {
                        attrs: {
                            title: e.ntitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), r("view", [r("view", [r("scroll-view", {
                        attrs: {
                            id: "scroll_view",
                            _i: 5
                        }
                    }, e._l(e._$s(6, "f", {
                        forItems: e.list
                    }), (function(t, n, h, a) {
                        return r("view", {
                            key: e._$s(6, "f", {
                                forIndex: h,
                                key: n
                            }),
                            staticClass: e._$s("6-" + a, "sc", "display-btn-group"),
                            style: e._$s("6-" + a, "s", n == e.lang ? "background-color: #2B4863;" : ""),
                            attrs: {
                                _i: "6-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.selectSet(n)
                                }
                            }
                        }, [r("view", [r("label", {
                            staticClass: e._$s("8-" + a, "sc", "display-btn-lable"),
                            attrs: {
                                _i: "8-" + a
                            }
                        }, [e._v(e._$s("8-" + a, "t0-0", e._s(t)))])])])
                    })), 0), r("view", {
                        staticClass: e._$s(9, "sc", "item-class"),
                        attrs: {
                            _i: 9
                        }
                    }, [r("view", {
                        staticClass: e._$s(10, "sc", "opr-new"),
                        attrs: {
                            _i: 10
                        },
                        on: {
                            click: e.OkClick
                        }
                    }, [e._v(e._$s(10, "t0-0", e._s(e.$t("\u8fd4\u56de"))))])])])])], 1)
                },
                a = []
        },
        "64c9": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("52b4"),
                h = r("daf1");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        "652e": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("28e3"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "67ad": function(e, t) {
            e.exports = function(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        "6a03": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("3948"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "6b9a": function(e) {
            e.exports = JSON.parse('{"\u8fde\u63a5\u84dd\u7259":"Connecter Bluetooth","\u968f\u673a\u64ad\u653e":"Al\xe9atoire","\u5df2\u8fde\u63a5":"Connect\xe9","\u672a\u8fde\u63a5":"D\xe9connect\xe9","\u6237\u5916\u64ad\u653e":"Ext\xe9rieur","\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570...":"Chargement ...","\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25":"\xc9chec de la lecture des param\xe8tres de l\'appareil","\u91cd\u65b0\u5237\u65b0\u5217\u8868":"Actualiser la liste","\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62":"Arr\xeater la recherche","\u641c\u7d22\u84dd\u7259\u8bbe\u5907":"Rechercher des appareils Bluetooth","\u5df2\u53d1\u73b0":"D\xe9couvert","\u7ea2":"Rouge","\u7eff":"Vert","\u84dd":"Bleu","\u9ec4":"Jaune","\u9752":"Cyan","\u7d2b":"Violet","\u767d":"Blanc","\u8df3\u53d8":"Clign.","\u5168\u5f69":"Multicol.","\u64ad\u653e\u6a21\u5f0f":"Mode","\u81ea\u8d70":"Autonome","\u58f0\u63a7":"Vocal","\u81ea\u8d70\u901f\u5ea6":"Vitesse","\u58f0\u63a7\u7075\u654f\u5ea6":"Sensibilit\xe9","\u56fe\u6848\u989c\u8272":"Couleur du motif","\u5f53\u524d\u989c\u8272":"Couleur actuelle","\u5faa\u73af\u64ad\u653e":"Lecture en boucle","\u52fe\u9009\u64ad\u653e":"Lecture coch\xe9e","\u5730\u5740\u7801":"Adresse","\u663e\u793a\u8303\u56f4":"Afficher","\u56fe\u6848\u76f8\u4f4d":"Phase du motif","\u6b63\u5e38\u663e\u793a":"Affichage normal","XY\u4e92\u6362":"Inversion XY","\u8c03\u5149\u8bbe\u7f6e":"R\xe9glage de la luminosit\xe9","\u7ea2\u5149\u8c03\u5149":"Rouge","\u7eff\u5149\u8c03\u5149":"Verte","\u84dd\u5149\u8c03\u5149":"Bleue","\u6fc0\u5149\u5149\u6e90":"Laser","\u5355\u8272":"Monoch.","\u53cc\u8272":"Bicol.","\u8c03\u5236\u6a21\u5f0f":"Modulation","\u7cfb\u7edf\u8bed\u8a00":"Langue","\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...":"Lecture de la police en cours...","\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9...":"G\xe9n\xe9ration des points de coordonn\xe9es en cours...","\u6587\u672c\u989c\u8272":"Couleur du texte","\u6587\u5b57\u5927\u5c0f":"Taille","\u663e\u793a\u89c6\u8ddd":"Distance","\u6d41\u6c34\u901f\u5ea6":"Vitesse","\u6295\u5c04\u65b9\u5411":"Direction de projection","\u6c34\u5e73\u6295\u5c04":"Projection horizontale","\u5782\u76f4\u6295\u5c04":"Projection verticale","\u8d85\u51fa\u6700\u5927\u70b9\u6570":"D\xe9passement du nombre maximal de points","\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931":"Une partie sera perdue","\u7ebf\u6761\u989c\u8272":"Couleur de la ligne","\u6e05\u7a7a":"Effacer","\u56de\u9000":"Retour","\u53d1\u9001":"Envoyer","\u6700\u591a20\u4e2a\u573a\u666f":"Jusqu\'\xe0 20 sc\xe8nes","\u63d0\u793a":"Avertissement","\u662f\u5426\u5220\u9664\u573a\u666f":"Voulez-vous supprimer cette sc\xe8ne ?","\u7528\u6237\u70b9\u51fb\u53d6\u6d88":"Utilisateur a annul\xe9","-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- Aucune sc\xe8ne disponible --","\u573a\u666f":"Sc\xe8ne","\u79d2":"sec","\u5220\u9664":"Supprimer","\u7f16\u8f91":"Modifier","\u65b0\u589e\u573a\u666f":"Ajouter une sc\xe8ne","\u56fe\u6848\u9009\u62e9":"Motif","\u76f4\u7ebf\u7c7b\u56fe\u6848":"Lin\xe9aires","\u5706\u5f27\u7c7b\u56fe\u6848":"Cercle","\u4eae\u70b9\u56fe\u6848":"Points","\u6253\u70b9\u56fe\u6848":"Points","\u5723\u8bde\u56fe\u6848":"No\xebl","\u52a8\u753b\u7ec4\u522b1":"Animation 1","\u52a8\u753b\u7ec4\u522b2":"Animation 2","\u52a8\u753b\u7ec4\u522b3":"Animation 3","\u52a8\u753b\u7ec4\u522b4":"Animation 4","\u52a8\u753b\u7ec4\u522b5":"Animation 5","\u767d\u8272":"Blanc","\u7ea2\u8272":"Rouge","\u84dd\u8272":"Bleu","\u7c89\u8272":"Rose","\u9752\u8272":"Cyan","\u9ec4\u8272":"Jaune","\u7eff\u8272":"Vert","\u6574\u4f53\u989c\u8272\u6362\u8272":"Changement","\u4e03\u5f69\u8679\u989c\u8272":"Arc-en-ciel","2\u5206\u6bb5\u989c\u8272":"2 segments","3\u5206\u6bb5\u989c\u8272":"3 segments","4\u5206\u6bb5\u989c\u8272":"4 segments","8\u5206\u6bb5\u989c\u8272":"8 segments","16\u5206\u6bb5\u989c\u8272":"16 segments","32\u5206\u6bb5\u989c\u8272":"32 segments","\u989c\u8272\u6e10\u7ed8":"Progression","\u4e0d\u6d41\u6c34":"Pas de","\u6b63\u5411\u6d41\u6c34":"D\xe9fil. avant","\u53cd\u5411\u6d41\u6c34":"D\xe9fil. arri\xe8re","\u56fe\u6848\u5927\u5c0f":"Taille du motif","\u7f29\u653e\u624b\u52a8\u9009\u62e9":"Manuelle","\u7531\u5c0f\u5230\u5927\u7f29\u653e":"Agran. progr.","\u7531\u5927\u5230\u5c0f\u7f29\u653e":"R\xe9tr\xe9. progr.","\u5927\u5c0f\u5faa\u73af\u7f29\u653e":"Cycle AR","\u4e0d\u89c4\u5219\u7f29\u653e\u4e00":"Agra. irr\xe9g. 1","\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c":"Agra. irr\xe9g. 2","\u4e0d\u89c4\u5219\u7f29\u653e\u4e09":"Agra. irr\xe9g. 3","\u65cb\u8f6c\u89d2\u5ea6":"Angle","\u6b63\u65cb\u8f6c\u901f\u5ea6":"Rotat. positive","\u53cd\u65cb\u8f6c\u901f\u5ea6":"Rotat. inverse","\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e":"Posit. horiz.","\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6":"Retou. horiz.","\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e":"Posit. verti.","\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6":"Vites. verti.","\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c":"Rotat. horiz.","\u6c34\u5e73\u79fb\u52a8":"Mouve.H","\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c":"Rotat. verti.","\u5782\u76f4\u79fb\u52a8":"Mouve.V","\u65e0\u6ce2\u6d6a":"Pas de vague","\u6ce2\u6d6a\u5e45\u5ea61":"Amplitude 1","\u6ce2\u6d6a\u5e45\u5ea62":"Amplitude 2","\u6ce2\u6d6a\u5e45\u5ea63":"Amplitude 3","\u6ce2\u6d6a\u5e45\u5ea64":"Amplitude 4","\u6ce2\u6d6a\u5e45\u5ea65":"Amplitude 5","\u6ce2\u6d6a\u5e45\u5ea66":"Amplitude 6","\u6ce2\u6d6a\u5e45\u5ea67":"Amplitude 7","\u6ce2\u6d6a\u5e45\u5ea68":"Amplitude 8","\u65e0\u6e10\u7ed8":"Pas de d\xe9grad\xe9","\u624b\u52a8\u6e10\u7ed81":"Manuel 1","\u624b\u52a8\u6e10\u7ed82":"Manuel 2","\u81ea\u52a8\u6e10\u7ed81":"Automatique 1","\u81ea\u52a8\u6e10\u7ed82":"Automatique 2","\u81ea\u52a8\u6e10\u7ed83":"Automatique 3","\u81ea\u52a8\u6e10\u7ed84":"Automatique 4","\u56fe\u5f62\u5206\u7ec4":"Groupe","\u56fe\u5f62":"Forme","\u989c\u8272":"Couleur","\u989c\u8272\u6d41\u6c34":"D\xe9grad\xe9","\u56fe\u5f62\u5927\u5c0f":"Taille","\u56fe\u5f62\u7f29\u653e":"\xc9chelle","\u56fe\u5f62\u65cb\u8f6c":"Rotation","\u6c34\u5e73\u7ffb\u8f6c":"Horizontal","\u5782\u76f4\u7ffb\u8f6c":"Vertical","\u6ce2\u6d6a":"Ondulation","\u6e10\u7ed8":"Peinture","\u64ad\u653e\u65f6\u957f":"Le temps","\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62...":"Chargement du motif en cours...","\u53d6\u6d88":"Annuler","\u786e\u5b9a":"OK","\u9009\u62e9\u56fe\u5f62":"S\xe9lec.","\u901a\u9053\u590d\u4f4d":"R\xe9ini.","\u5b8b\u4f53":"SimSun","\u76f4\u7ebf":"Ligne","\u5706\u5f27":"Arc","\u4eae\u70b9":"Point","\u6253\u70b9":"Point","\u5723\u8bde":"No\xebl","\u52a8\u753bA":"Anima.A","\u52a8\u753bB":"Anima.B","\u5f69\u8679":"Rainbow","\u9ed8\u8ba4":"D\xe9faut","\u8f6f\u4ef6\u7248\u672c":"Version","\u8fde\u63a5":"Connecter","\u8bbe\u7f6e":"Param.","\u624b\u7ed8\u6d82\u9e26":"Dessin","\u6587\u672c\u64ad\u653e":"Texte","\u4e2a\u6027\u7f16\u7a0b":"Progr.","\u52a8\u753b\u64ad\u653e":"Animation","\u7ebf\u6761\u64ad\u653e":"Lignes","\u5723\u8bde\u64ad\u653e":"No\xebl","DMX":"DMX","\u914d\u7f6e":"Confi.","\u8fd4\u56de":"Retour","\u70b9\u6211\u8fde\u63a5":"Me connecter","\u84dd\u7259\u672a\u8fde\u63a5":"Bluetooth d\xe9connect\xe9","\u8bbe\u5907":"\xc9quip.","\u8bf7\u8f93\u5165\u6587\u5b57":"Entrer du texte","\u9884\u7559\u65e0\u529f\u80fd":"R\xe9serv\xe9","\u91cd\u7f6e":"R\xe9initialiser","\u84dd\u7259\u8fde\u63a5":"Connexion Bluetooth","\u5168\u9009":"Tout","\u53cd\u9009":"Inver.","\u6e05\u9664":"Effac.","\u5b57\u6570":"Mots","\u70b9\u6570":"Points","\u9884\u89c8":"Aper\xe7u","\u573a\u666f\u7ba1\u7406":"Gestion des sc\xe8nes","\u52a0\u8f7d\u4e2d":"Chargement en cours","\u573a\u666f\u7f16\u8f91":"\xc9dition de sc\xe8ne","\u8bf7\u5148\u8fde\u63a5\u84dd\u7259":"Veuillez connecter Bluetooth","\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b":"L\'appareil actuel n\'est pas reconnu","DMX\u5730\u5740\u7801":"Adresse","\u8bf7\u5148\u6253\u5f00\u8bbe\u5907":"Veuillez ouvrir l\'appareil","\u5355\u7ebf\u5b57\u4f53":"Simplicit\xe9","\u6b63\u5728\u53d1\u9001":"Envoi en cours","\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528":"Veuillez v\xe9rifier si le Bluetooth de votre t\xe9l\xe9phone est activ\xe9","\u8be5\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587\u663e\u793a":"Cette police ne prend pas en charge l\'affichage en chinois","\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c":"En raison des limitations de capacit\xe9, certains caract\xe8res chinois ne sont pas inclus dans la police, veuillez t\xe9l\xe9charger la version compl\xe8te sur l\'application","\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650":"Veuillez autoriser l\'acc\xe8s \xe0 la position de l\'application","\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650":"Veuillez autoriser l\'acc\xe8s Bluetooth de l\'application","\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38":"\xc9chec de la lecture des param\xe8tres de l\'appareil","\u9009\u62e9":"S\xe9lectionner","\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247":"D\xe9finir l\'image d\'arri\xe8re-plan","\u53d1\u9001\u5931\u8d25":"\xc9chec de l\'envoi","\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165":"La longueur du texte d\xe9passe 100, veuillez r\xe9essayer","\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165":"Le nombre de points du texte d\xe9passe 2048, veuillez r\xe9essayer","\u7b2c":"Groupe","\u7ec4\u6587\u5b57":"texte","\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5":"Veuillez modifier la police ou le texte et r\xe9essayer","\u4e0d\u652f\u6301\u6587\u672c":"Texte non pris en charge","\u7ec4\u5b57\u4f53":"Groupe de polices","\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u53d1\u9001":"Le groupe de texte est vide, veuillez entrer du texte avant d\'envoyer","\u662f\u5426\u5220\u9664\u7b2c":"Voulez-vous supprimer","\u7ec4":"Groupes","\u6700\u591a4\u4e2a\u5206\u7ec4":"Maximum de 4 groupes","\u6b63\u5728\u8fde\u63a5...":"de liaison...","\u8fde\u63a5\u5931\u8d25":"\xc9chec de la connexion","\u5b57\u4f53\u9009\u62e9":"S\xe9lection de police","\u601d\u6e90\u9ed1\u4f53":"NotoSans","\u601d\u6e90\u9ed1\u4f531":"NotoSans 1","\u601d\u6e90\u9ed1\u4f532":"NotoSans 2","\u601d\u6e90\u9ed1\u4f533":"NotoSans 3","\u601d\u6e90\u9ed1\u4f534":"NotoSans 4","\u601d\u6e90\u9ed1\u4f535":"NotoSans 5","\u601d\u6e90\u9ed1\u4f536":"NotoSans 6","\u601d\u6e90\u9ed1\u4f537":"NotoSans 7","font_note_1001":"Chinois, anglais, espagnol, portugais, allemand, fran\xe7ais","font_note_1002":"Anglais, espagnol, russe, portugais, allemand, fran\xe7ais, vietnamien, hindi, bengali","font_note_1003":"Anglais, chinois, espagnol, russe, portugais, japonais, allemand","font_note_1004":"Chinois, Anglais, espagnol, portugais, allemand, fran\xe7ais","font_note_1005":"Anglais, chinois","font_note_1006":"Anglais, japonais, cor\xe9en","font_note_1007":"Arabe","\u4fdd\u7559":"R\xe9serv\xe9","\u56fe\u6848\u521d\u59cb\u989c\u8272":"Couleur initiale du motif","\u6df7\u8272":"M\xe9langer les couleurs","\u7b14\u753b\u5c11\uff0c\u65e0\u95ea\u70c1\uff0c\u63a8\u8350\u4f7f\u7528":"Pas de scintillement, recommand\xe9","\u5df2\u65ad\u5f00\u8fde\u63a5":"D\xe9connect\xe9","\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c":"Gamme de 1 - 255","\u6587\u5b57\u7cbe\u5ea6":"Effets","\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6":"Effects","\u7cbe\u5ea6":"Effets","\u9009\u62e9\u56fe\u7247":"Seleccionar","\u8bbe\u4e3a\u80cc\u666f":"Fondo","\u8bc6\u522b\u56fe\u6848":"Reconocer","\u63cf\u8fb9":"Contorno","\u6b63\u5728\u5904\u7406\u4e2d":"En curso","\u5f53\u524d\u673a\u578b":"Mod\xe8le","hand_draw_tips":" ** Veuillez glisser de la zone vide vers le motif cible pour le s\xe9lectionner.\\n ** Vous pouvez effectuer des op\xe9rations telles que le zoom avant, le zoom arri\xe8re, le d\xe9placement, le changement de couleur et la suppression sur le motif s\xe9lectionn\xe9.","\u4e0d\u518d\u63d0\u793a":"Ne pas afficher","out_door_tips1":"1-30 Point de rep\xe8re","out_door_tips2":"31-40 Aurores bor\xe9ales","out_door_tips3":"41-50 Tunnel temporel","\u6587\u4ef6\u540d":"Nom de fichier","\u4fdd\u5b58\u6587\u4ef6":"Enregistrer le fichier","\u9009\u62e9\u6587\u4ef6":"S\xe9lectionner un fichier","\u8bf7\u8f93\u5165\u6587\u4ef6\u540d":"Nom de fichier","\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d":"Nouveau nom de fichier","\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a":"Le nom de fichier ne peut pas \xeatre vide","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165":"Le fichier existe d\xe9j\xe0, veuillez r\xe9essayer","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed":"Le fichier existe d\xe9j\xe0, continuer ?","\u4fdd\u5b58\u6210\u529f":"Sauvegarde r\xe9ussie","\u4fdd\u5b58\u5931\u8d25":"\xc9chec de la sauvegarde","\u4fee\u6539\u6210\u529f":"Modification r\xe9ussie","\u4fee\u6539\u5931\u8d25":"Modification \xe9chou\xe9e","\u5220\u9664\u6210\u529f":"Suppression r\xe9ussie","\u5220\u9664\u5931\u8d25":"Suppression \xe9chou\xe9e","\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301":"Le mod\xe8le actuel ne le prend pas en charge","text_time_range":"Plage 1-25,5","\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848":"\xc9chec de la reconnaissance","\u8bf7\u9009\u62e9\u6587\u4ef6":"Veuillez s\xe9lectionner un fichier","\u6587\u4ef6\u6570":"Fichier","\u53e6\u5b58\u6587\u4ef6":"Enregistrer sous","\u5220\u9664\u6240\u9009\u6587\u4ef6":"Supprimer le fichier s\xe9lectionn\xe9","Select-File":"S\xe9lec.","\u6447\u5934\u8bbe\u7f6e":"Param\xe8tres de Mouvement","\u6447\u5934\u6a21\u5f0f":"Mode","\u6447\u5934\u76f8\u4f4d":"Phase","\u81ea\u52a8":"Automatique","\u624b\u52a8":"Manuel","X\u7c97\u8c03":"Grossier X","X\u7ec6\u8c03":"Fin X","Y\u7c97\u8c03":"Grossier Y","Y\u7ec6\u8c03":"Fin Y","\u6c34\u5e73\u7535\u673a":"Mot. H","\u6c34\u5e73\u5fae\u8c03":"Fin Hor","\u5782\u76f4\u7535\u673a":"Mot. V","\u5782\u76f4\u5fae\u8c03":"Fin Ver","\u7535\u673a\u901f\u5ea6":"Vitesse","\u6d41\u6c34\u65b9\u5411":"Direction","\u963f\u62c9\u4f2f\u8bed\u65b9\u5411":"Arabe","\u9ed8\u8ba4\u65b9\u5411":"Par d\xe9faut","\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939":"Enregistrer dans le dossier","\u9009\u62e9\u5217\u8868":"S\xe9le. liste","\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0":"Nom du groupe","\u64ad\u653e\u5217\u8868":"Liste de lecture","\u4fdd\u5b58":"Enregistrer","\u6dfb\u52a0":"Ajouter","\u6279\u91cf\u8bbe\u7f6e":"Par lots","\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0":"Nom de la liste","ALL":"Tout","\u5217\u8868\u7f16\u8f91":"\xc9dition de la liste","\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57":"Veuillez entrer un nombre entre 0.1 et 25.5","\u6dfb\u52a0\u81f3\u65b0\u5217\u8868":"Nouvelle liste","\u7acb\u5373\u64ad\u653e":"Jouer maint.","\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed":"La playlist correspondante sera supprim\xe9e, continuer","-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- La liste est vide --"}')
        },
        7010: function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            _i: 1
                        }
                    }, [r("navigation-bar", {
                        attrs: {
                            title: e.ntitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), r("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [r("view", [r("scroll-view", {
                        attrs: {
                            id: "scroll_view",
                            _i: 5
                        }
                    }, e._l(e._$s(6, "f", {
                        forItems: e.fontList
                    }), (function(t, n, h, a) {
                        return r("view", {
                            key: e._$s(6, "f", {
                                forIndex: h,
                                key: n
                            }),
                            staticClass: e._$s("6-" + a, "sc", "display-btn-group"),
                            style: e._$s("6-" + a, "s", e.fontIdex == n ? "background-color: #2B4863;" : ""),
                            attrs: {
                                _i: "6-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.selectFont(n)
                                }
                            }
                        }, [r("view", {
                            style: e._$s("7-" + a, "s", (e.rtl ? "padding-right: 40rpx; " : "padding-left: 40rpx; ") + "margin-top: 20rpx; display: flex; align-items: center; height: 40rpx;"),
                            attrs: {
                                _i: "7-" + a
                            }
                        }, [r("image", {
                            attrs: {
                                _i: "8-" + a
                            }
                        }), r("label", {
                            staticClass: e._$s("9-" + a, "sc", "display-btn-lable"),
                            attrs: {
                                _i: "9-" + a
                            }
                        }, [e._v(e._$s("9-" + a, "t0-0", e._s(e.$t(t.name))))]), r("label", {
                            staticClass: e._$s("10-" + a, "sc", "display-btn-lable2"),
                            attrs: {
                                _i: "10-" + a
                            }
                        }, [e._v(e._$s("10-" + a, "t0-0", e._s(e.$t(t.msg))))])]), r("view", [r("label", [e._v(e._$s("12-" + a, "t0-0", e._s(e.$t(t.note))))])])])
                    })), 0), r("view", {
                        staticClass: e._$s(13, "sc", "item-class"),
                        attrs: {
                            _i: 13
                        }
                    }, [r("view", {
                        staticClass: e._$s(14, "sc", "opr-new"),
                        attrs: {
                            _i: 14
                        },
                        on: {
                            click: e.back
                        }
                    }, [e._v(e._$s(14, "t0-0", e._s(e.$t("\u8fd4\u56de"))))])])])])], 1)
                },
                a = []
        },
        7172: function(e, t) {
            e.exports = function(e, t) {
                var r = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != r) {
                    var n, h, a, i, c = [],
                        o = !0,
                        s = !1;
                    try {
                        if (a = (r = r.call(e)).next, 0 === t) {
                            if (Object(r) !== r) return;
                            o = !1
                        } else
                            for (; !(o = (n = a.call(r)).done) && (c.push(n.value), c.length !== t); o = !0);
                    } catch (e) {
                        s = !0, h = e
                    } finally {
                        try {
                            if (!o && null != r["return"] && (i = r["return"](), Object(i) !== i)) return
                        } finally {
                            if (s) throw h
                        }
                    }
                    return c
                }
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        "717a": function(e, t, r) {
            e.exports = r.p + "static/imgs/text/arrow-right.png"
        },
        "720d": function(t, r, n) {
            (function(r) {
                var h = n("34cf");

                function a(e, t) {
                    var r = "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (!r) {
                        if (Array.isArray(e) || (r = function(e, t) {
                                if (!e) return;
                                if ("string" === typeof e) return i(e, t);
                                var r = Object.prototype.toString.call(e).slice(8, -1);
                                "Object" === r && e.constructor && (r = e.constructor.name);
                                if ("Map" === r || "Set" === r) return Array.from(e);
                                if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(e, t)
                            }(e)) || t && e && "number" === typeof e.length) {
                            r && (e = r);
                            var n = 0,
                                h = function() {};
                            return {
                                s: h,
                                n: function() {
                                    return n >= e.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: e[n++]
                                    }
                                },
                                e: function(e) {
                                    throw e
                                },
                                f: h
                            }
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }
                    var a, c = !0,
                        o = !1;
                    return {
                        s: function() {
                            r = r.call(e)
                        },
                        n: function() {
                            var e = r.next();
                            return c = e.done, e
                        },
                        e: function(e) {
                            o = !0, a = e
                        },
                        f: function() {
                            try {
                                c || null == r.return || r.return()
                            } finally {
                                if (o) throw a
                            }
                        }
                    }
                }

                function i(e, t) {
                    (null == t || t > e.length) && (t = e.length);
                    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
                    return n
                }
                var c = "handdrawtag_",
                    o = ["ALL", "Group 1", "Group 2", "Group 3", "Group 4", "Group 5", "Group 6", "Group 7", "Group 8", "Group 9", "Group 10"],
                    s = 0;

                function l(e) {
                    for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2, r = e + "", n = 0; n < t; n++) {
                        if (r.length >= t) break;
                        r = "0" + r
                    }
                    return r
                }

                function p(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    return d(c, e, t)
                }

                function d(t, n) {
                    var h = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    try {
                        h || (n = t + n), n = n.toLowerCase();
                        var a = uni.getStorageSync(n);
                        return a
                    } catch (e) {
                        r("log", "getFromFile fail:", JSON.stringify(e), " at utils/funCtrl.js:187")
                    }
                    return null
                }

                function b(t, n, h) {
                    var a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                        i = V(t);
                    a || (n = t + n), n = n.toLowerCase();
                    var c = i.indexOf(n); - 1 == c && i.unshift(n);
                    try {
                        var o = x(t, i);
                        return !!o && (uni.setStorageSync(n, h), !0)
                    } catch (e) {
                        r("log", "saveToFile fail:", JSON.stringify(e), " at utils/funCtrl.js:204")
                    }
                    return !1
                }

                function g(t, n, h) {
                    var a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                    try {
                        var i = d(t, n, a);
                        return null == i || !j(t, n, a) || b(t, h, i, a)
                    } catch (e) {
                        r("log", "reNameFile fail:", JSON.stringify(e), " at utils/funCtrl.js:216")
                    }
                    return !1
                }

                function j(t, n) {
                    var h = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    try {
                        var a = !0;
                        r("log", "fileTag, fileName", t, n, " at utils/funCtrl.js:224"), h || (n = t + n), n = n.toLowerCase(), uni.removeStorageSync(n);
                        var i = V(t),
                            c = i.indexOf(n);
                        return -1 != c && (i.splice(c, 1), a = x(t, i)), a
                    } catch (e) {
                        r("log", "deleteFile fail:", JSON.stringify(e), " at utils/funCtrl.js:236")
                    }
                    return !1
                }

                function x(t, n) {
                    try {
                        var h = "fileTag_" + t;
                        return uni.setStorageSync(h, n), !0
                    } catch (e) {
                        r("log", "setSaveFilenames fail:", JSON.stringify(e), " at utils/funCtrl.js:247")
                    }
                    return !1
                }

                function V(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    try {
                        var h = "fileTag_" + t,
                            i = uni.getStorageSync(h);
                        if (r("log", "getSaveFileNames", h, i, " at utils/funCtrl.js:256"), i) {
                            if (n) {
                                var c, o = [],
                                    s = a(i);
                                try {
                                    for (s.s(); !(c = s.n()).done;) {
                                        var l = c.value;
                                        0 == l.indexOf(t) && o.push(l.replace(t, ""))
                                    }
                                } catch (p) {
                                    s.e(p)
                                } finally {
                                    s.f()
                                }
                                return o
                            }
                            return i
                        }
                    } catch (e) {
                        r("log", "getSaveFileNames fail:", JSON.stringify(e), " at utils/funCtrl.js:270")
                    }
                    return []
                }

                function f(e) {
                    var t = e.split("_split_tag_"),
                        r = {
                            name: "",
                            class: ""
                        };
                    return 2 == t.length ? (r["name"] = t[0], r["class"] = t[1]) : r["name"] = t[0], r
                }

                function F(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    return d("playlistfiletag_", e, t)
                }

                function k() {
                    var e = V("playlistfiletag_", !0),
                        t = {
                            fileNames: e,
                            noSpace: !1,
                            count: e.length
                        };
                    return t
                }
                t.exports = {
                    handDrawClassFix: ["__ALL__", "__1__", "__2__", "__3__", "__4__", "__5__", "__6__", "__7__", "__8__", "__9__", "__10__"],
                    savePlayListFileData: function(e, t) {
                        var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                            n = {
                                data: t
                            };
                        return b("playlistfiletag_", e, n, r)
                    },
                    getPlayListFileData: F,
                    getPlayListFileNames: k,
                    getNewPlayListName: function() {
                        var e = new Date,
                            t = e.getFullYear(),
                            r = e.getMonth() + 1,
                            n = e.getDate(),
                            h = "list_" + l(t) + l(r) + l(n) + "_",
                            a = 0;
                        while (1) {
                            a++;
                            var i = h + ("00" + a).slice(-2);
                            if (value = uni.getStorageSync("playlistfiletag_" + i), !value) return i
                        }
                        return h
                    },
                    deletePlayList: function(e) {
                        return j("playlistfiletag_", e)
                    },
                    getIncludePlayList: function(e) {
                        var t = k();
                        r("log", "rs", JSON.stringify(t), " at utils/funCtrl.js:397");
                        var n, h = t.fileNames,
                            i = [],
                            c = a(h);
                        try {
                            for (c.s(); !(n = c.n()).done;) {
                                var o = n.value,
                                    s = F(o);
                                if (s) {
                                    var l, p = a(s.data);
                                    try {
                                        for (p.s(); !(l = p.n()).done;) {
                                            var d = l.value;
                                            if (d.fileName == e) {
                                                i.push(o);
                                                break
                                            }
                                        }
                                    } catch (b) {
                                        p.e(b)
                                    } finally {
                                        p.f()
                                    }
                                }
                            }
                        } catch (b) {
                            c.e(b)
                        } finally {
                            c.f()
                        }
                        return i
                    },
                    drawPointsHisCount: s,
                    getFileClass: function(e) {
                        var t, r = [],
                            n = a(e);
                        try {
                            for (n.s(); !(t = n.n()).done;) {
                                var h = t.value,
                                    i = f(h),
                                    c = i.class;
                                "" != c && -1 == r.indexOf(c) && r.push(c)
                            }
                        } catch (o) {
                            n.e(o)
                        } finally {
                            n.f()
                        }
                        return r.sort((function(e, t) {
                            return t.localeCompare(e)
                        })), r.unshift("__ALL__"), r
                    },
                    splitFileClass: f,
                    combiFileName: function(e, t) {
                        return "__ALL__" == e ? t : t + "_split_tag_" + e
                    },
                    getDrawPointsHisCount: function() {
                        return s
                    },
                    updateHandDrawImgPlayTime: function(e, t) {
                        var r = p(e);
                        r.pisObj.cnfValus[12] = t, b(c, e, r, !1)
                    },
                    fileClassSplitTag: "_split_tag_",
                    handDrawTag: c,
                    getTextFileNames: function() {
                        var e = V("textfiletag_", !0),
                            t = {
                                fileNames: e,
                                noSpace: !1,
                                count: e.length
                            };
                        return t
                    },
                    getTextFileData: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                        return d("textfiletag_", e, t)
                    },
                    separateValueAndUnit: function(e) {
                        var t = {
                                value: null,
                                unit: null
                            },
                            r = e.match(/^(\d+)([a-zA-Z]+)?/);
                        return r && (t.value = parseInt(r[1]), t.unit = r[2] || ""), t
                    },
                    reNameHandDrawImg: function(e, t) {
                        return g(c, e, t)
                    },
                    pushDrawPointsHis: function(e) {
                        r("log", "pushDrawPointsHis", e, " at utils/funCtrl.js:276");
                        var t = "drawpointshistag_" + s,
                            n = {
                                data: e,
                                idx: s
                            };
                        r("log", "fileKey", t, " at utils/funCtrl.js:280"), uni.setStorageSync(t.toLowerCase(), n), s += 1
                    },
                    lineCross: function(e, t) {
                        function r(e, t, r, n) {
                            var h = (r[1] - e[1]) * (e[0] - t[0]) - (r[0] - e[0]) * (e[1] - t[1]),
                                a = (n[1] - e[1]) * (e[0] - t[0]) - (n[0] - e[0]) * (e[1] - t[1]);
                            return !(h * a > 0)
                        }
                        var n = h(e, 2),
                            a = n[0],
                            i = n[1],
                            c = h(t, 2),
                            o = c[0],
                            s = c[1];
                        return !!r(a, i, o, s) && !!r(o, s, a, i)
                    },
                    deleteHandDrawImg: function(e) {
                        return j(c, e)
                    },
                    saveTextFileData: function(e, t, r) {
                        var n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                            h = {
                                data: t,
                                dataSize: r
                            };
                        return b("textfiletag_", e, h, n)
                    },
                    getDistance: function(e) {
                        var t = e[1].x - e[0].x,
                            r = e[1].y - e[0].y;
                        return Math.sqrt(t * t + r * r)
                    },
                    getHandDrawImg: p,
                    deleteTextFileData: function(e) {
                        return j("textfiletag_", e)
                    },
                    getNewFileName: function() {
                        var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                            t = new Date,
                            r = t.getFullYear(),
                            n = t.getMonth() + 1,
                            h = t.getDate(),
                            a = "file_" + l(r) + l(n) + l(h) + "_",
                            i = "textfiletag_";
                        e && (i = c);
                        var o = 0;
                        while (1) {
                            o++;
                            var s = a + ("00" + o).slice(-2);
                            if (value = uni.getStorageSync(i + s), !value) return s
                        }
                        return a
                    },
                    isImgFileExist: function(e, t) {
                        if (!e) return r("log", "isImgFileExist picPath=", e, " at utils/funCtrl.js:88"), void t(!1);
                        uni.getImageInfo({
                            src: e,
                            success: function(e) {
                                t(!0)
                            },
                            fail: function(e) {
                                t(!1)
                            }
                        })
                    },
                    reNameTextFile: function(e, t) {
                        return g("textfiletag_", e, t)
                    },
                    popDrawPointsHis: function() {
                        s--;
                        var t = "drawpointshistag_" + s;
                        r("log", "popDrawPointsHis", t, " at utils/funCtrl.js:288");
                        var n = uni.getStorageSync(t);
                        try {
                            uni.removeStorageSync(t)
                        } catch (e) {}
                        return n
                    },
                    saveHandDrawImg: function(e, t, r, n, h, a) {
                        var i = arguments.length > 6 && void 0 !== arguments[6] && arguments[6],
                            o = {
                                picPath: t,
                                drawPoints: r,
                                pointCnt: n,
                                pisObj: h,
                                features: a
                            };
                        return b(c, e, o, i)
                    },
                    getHandDrawNames: function() {
                        var e = V(c, !0),
                            t = {
                                fileNames: e,
                                noSpace: !1,
                                count: e.length
                            };
                        return t
                    },
                    clearDrawPointsHis: function() {
                        try {
                            s = 0;
                            var t = V("drawpointshistag_");
                            if (t) {
                                var n, h = a(t);
                                try {
                                    for (h.s(); !(n = h.n()).done;) {
                                        var i = n.value;
                                        try {
                                            uni.removeStorageSync(i)
                                        } catch (e) {
                                            r("log", "delete fail:", JSON.stringify(e), " at utils/funCtrl.js:166")
                                        }
                                    }
                                } catch (c) {
                                    h.e(c)
                                } finally {
                                    h.f()
                                }
                                return uni.removeStorageSync("fileTag_drawpointshistag_"), !0
                            }
                            return !1
                        } catch (e) {
                            r("log", "clearDrawPointsHis fail:", JSON.stringify(e), " at utils/funCtrl.js:175")
                        }
                        return !1
                    },
                    saveHandDrawClassName: function(t) {
                        try {
                            return uni.setStorageSync("handDrawFileClassTag_", t), !0
                        } catch (e) {
                            r("log", "saveHandDrawClassName fail:", JSON.stringify(e), " at utils/funCtrl.js:339")
                        }
                        return !1
                    },
                    getHandDrawClassName: function() {
                        var t = [];
                        try {
                            t = uni.getStorageSync("handDrawFileClassTag_")
                        } catch (e) {
                            r("log", "getHandDrawClassName fail:", JSON.stringify(e), " at utils/funCtrl.js:349")
                        }
                        t || (t = []);
                        for (var n = t.length; n < o.length; n++) t.push(o[n]);
                        return t
                    }
                }
            }).call(this, n("f3b9")["default"])
        },
        "74ed": function(e, t, r) {
            e.exports = r.p + "static/imgs/arrow-down.png"
        },
        "75a8": function(e, t, r) {
            "use strict";
            (function(e) {
                var n = r("47a9");
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var h = n(r("762b")),
                    a = getApp(),
                    i = r("3315"),
                    c = r("textLineVectorizer "),
                    o = r("3b77"),
                    s = r("720d"),
                    l = r("c4ce"),
                    p = ["black", "red", "green", "blue", "yellow", "#00FFFF", "purple", "white"],
                    d = r("fontGeometryUtils "),
                    b = r("bbc7"),
                    g = [15, 5],
                    j = [20, 20],
                    x = {
                        data: function() {
                            var e = 0 | a.globalData.readData("draw_fontIdex"),
                                t = a.globalData.getDeviceFeatures(),
                                r = a.globalData.getTipsParm(),
                                n = s.handDrawClassFix,
                                h = 650 * a.globalData.screen_width_float;
                            return {
                                screen_width: a.globalData.screen_width_str,
                                scUnit: a.globalData.screen_width_float,
                                rtl: a.globalData.rtl,
                                ntitle: this.$t("\u624b\u7ed8\u6d82\u9e26"),
                                inputText: "",
                                inputNote: this.$t("\u8bf7\u8f93\u5165\u6587\u5b57"),
                                fontIdex: e,
                                fontNameList: [],
                                selectModeRange: [32, 32],
                                selectMode: !1,
                                selectClick: !1,
                                selectPoints: [],
                                selectLines: [],
                                selectRect: null,
                                selectDistance: null,
                                features: t,
                                showTips: r,
                                textToLeft: !0,
                                zoomObj: !1,
                                showSending: !1,
                                needReDraw: !1,
                                lineCtx: null,
                                showChineseWarn: !1,
                                lastCmdTime: 0,
                                lastSendtime: 0,
                                lastCompleteTime: 0,
                                showCanvas: !0,
                                drawMode: -1,
                                createTextPointsTimer: null,
                                drawTimerSub: null,
                                lineColor: 9,
                                subCanvasStartPoint: {
                                    x: 0,
                                    y: 0
                                },
                                subCanvasEndPoint: {
                                    x: 0,
                                    y: 0
                                },
                                lastPoint: {
                                    x: 0,
                                    y: 0
                                },
                                lastLinePts: [],
                                linePtsSendSn: 0,
                                sendLineMode: 0,
                                drawCanvas: {
                                    w: 0,
                                    h: 0
                                },
                                btnDrawGroup: {
                                    w: 0,
                                    h: 0,
                                    x: "true",
                                    y: "false",
                                    wrap: "nowrap"
                                },
                                points: [],
                                OutPts: [],
                                drawAddFileName: "",
                                currSelectedFile: "",
                                handDrawClass: n,
                                handDrawClassName: [],
                                handDrawClassIdx: 0,
                                lastRefresh: 0,
                                chPer: 1,
                                chBeginPoint: {
                                    x: 0,
                                    y: 0
                                },
                                chEndPoint: {
                                    x: 0,
                                    y: 0
                                },
                                chDraw: {
                                    w: 0,
                                    h: 0,
                                    max: 255
                                },
                                chCanvas: {
                                    w: 0,
                                    h: 0
                                },
                                cnfIdx: 4,
                                pisObj: {
                                    txPointTime: 50,
                                    cnfValus: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                                },
                                pisObjNote: {
                                    0: [
                                        [256, this.$t("\u56fe\u6848\u9009\u62e9")]
                                    ],
                                    1: [
                                        [25, this.$t("\u76f4\u7ebf\u7c7b\u56fe\u6848")],
                                        [25, this.$t("\u5706\u5f27\u7c7b\u56fe\u6848")],
                                        [25, this.$t("\u4eae\u70b9\u56fe\u6848")],
                                        [25, this.$t("\u6253\u70b9\u56fe\u6848")],
                                        [25, this.$t("\u5723\u8bde\u56fe\u6848")],
                                        [25, this.$t("\u52a8\u753b\u7ec4\u522b1")],
                                        [25, this.$t("\u52a8\u753b\u7ec4\u522b2")],
                                        [25, this.$t("\u52a8\u753b\u7ec4\u522b3")],
                                        [25, this.$t("\u52a8\u753b\u7ec4\u522b4")],
                                        [31, this.$t("\u52a8\u753b\u7ec4\u522b5")]
                                    ],
                                    2: [
                                        [10, this.$t("\u767d\u8272")],
                                        [10, this.$t("\u7ea2\u8272")],
                                        [10, this.$t("\u84dd\u8272")],
                                        [10, this.$t("\u7c89\u8272")],
                                        [10, this.$t("\u9752\u8272")],
                                        [10, this.$t("\u9ec4\u8272")],
                                        [10, this.$t("\u7eff\u8272")],
                                        [10, this.$t("\u6574\u4f53\u989c\u8272\u6362\u8272")],
                                        [13, this.$t("\u4e03\u5f69\u8679\u989c\u8272")],
                                        [18, this.$t("2\u5206\u6bb5\u989c\u8272")],
                                        [21, this.$t("3\u5206\u6bb5\u989c\u8272")],
                                        [18, this.$t("4\u5206\u6bb5\u989c\u8272")],
                                        [33, this.$t("8\u5206\u6bb5\u989c\u8272")],
                                        [36, this.$t("16\u5206\u6bb5\u989c\u8272")],
                                        [35, this.$t("32\u5206\u6bb5\u989c\u8272")],
                                        [2, this.$t("\u989c\u8272\u6e10\u7ed8")]
                                    ],
                                    3: [
                                        [10, this.$t("\u4e0d\u6d41\u6c34")],
                                        [118, this.$t("\u6b63\u5411\u6d41\u6c34")],
                                        [128, this.$t("\u53cd\u5411\u6d41\u6c34")]
                                    ],
                                    4: [
                                        [256, this.$t("\u56fe\u6848\u5927\u5c0f")]
                                    ],
                                    5: [
                                        [16, this.$t("\u7f29\u653e\u624b\u52a8\u9009\u62e9")],
                                        [40, this.$t("\u7531\u5c0f\u5230\u5927\u7f29\u653e")],
                                        [40, this.$t("\u7531\u5927\u5230\u5c0f\u7f29\u653e")],
                                        [40, this.$t("\u5927\u5c0f\u5faa\u73af\u7f29\u653e")],
                                        [120, this.$t("\u9884\u7559\u65e0\u529f\u80fd")]
                                    ],
                                    6: [
                                        [128, this.$t("\u65cb\u8f6c\u89d2\u5ea6")],
                                        [64, this.$t("\u6b63\u65cb\u8f6c\u901f\u5ea6")],
                                        [64, this.$t("\u53cd\u65cb\u8f6c\u901f\u5ea6")]
                                    ],
                                    7: [
                                        [128, this.$t("\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e")],
                                        [128, this.$t("\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6")]
                                    ],
                                    8: [
                                        [128, this.$t("\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e")],
                                        [128, this.$t("\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6")]
                                    ],
                                    9: [
                                        [128, this.$t("\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c")],
                                        [128, this.$t("\u6c34\u5e73\u79fb\u52a8")]
                                    ],
                                    10: [
                                        [128, this.$t("\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c")],
                                        [128, this.$t("\u5782\u76f4\u79fb\u52a8")]
                                    ],
                                    11: [
                                        [2, this.$t("\u65e0\u6ce2\u6d6a")],
                                        [31, this.$t("\u6ce2\u6d6a\u5e45\u5ea61")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea62")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea63")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea64")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea65")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea66")],
                                        [32, this.$t("\u6ce2\u6d6a\u5e45\u5ea67")],
                                        [31, this.$t("\u6ce2\u6d6a\u5e45\u5ea68")]
                                    ]
                                },
                                cnfList: [{
                                    name: this.$t("\u56fe\u5f62\u5927\u5c0f"),
                                    value: 255,
                                    idx: 4
                                }, {
                                    name: this.$t("\u56fe\u5f62\u7f29\u653e"),
                                    value: 255,
                                    idx: 5
                                }, {
                                    name: this.$t("\u56fe\u5f62\u65cb\u8f6c"),
                                    value: 255,
                                    idx: 6
                                }, {
                                    name: this.$t("\u6c34\u5e73\u7ffb\u8f6c"),
                                    value: 255,
                                    idx: 7
                                }, {
                                    name: this.$t("\u5782\u76f4\u7ffb\u8f6c"),
                                    value: 255,
                                    idx: 8
                                }, {
                                    name: this.$t("\u6c34\u5e73\u79fb\u52a8"),
                                    value: 255,
                                    idx: 9
                                }, {
                                    name: this.$t("\u5782\u76f4\u79fb\u52a8"),
                                    value: 255,
                                    idx: 10
                                }, {
                                    name: this.$t("\u6ce2\u6d6a"),
                                    value: 255,
                                    idx: 11
                                }],
                                colorSeg: [{
                                    color: [1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 2, 2, 2, 2, 5, 5, 5, 5, 5, 3, 3, 3, 3, 6, 6, 6, 6, 6, 7, 7, 7, 7],
                                    name: "\u5f69\u8679(8\u6bb5)"
                                }, {
                                    color: [1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 2, 2, 2, 2, 5, 5, 5, 5, 5, 3, 3, 3, 3, 6, 6, 6, 6, 6, 7, 7, 7, 7],
                                    name: "\u5f69\u8679(8\u6bb5)"
                                }, {
                                    color: [3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7],
                                    name: "PICK_3 4\u6bb5"
                                }, {
                                    color: [4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 6, 6],
                                    name: "PICK_4 4\u6bb5"
                                }, {
                                    color: [7, 7, 7, 7, 2, 2, 2, 2, 7, 7, 7, 7, 2, 2, 2, 2, 7, 7, 7, 7, 2, 2, 2, 2, 7, 7, 7, 7, 2, 2, 2, 2],
                                    name: "\u767d\u7eff\u76f8\u95f4(8\u6bb5)"
                                }, {
                                    color: [3, 3, 3, 3, 7, 7, 7, 7, 3, 3, 3, 3, 7, 7, 7, 7, 3, 3, 3, 3, 7, 7, 7, 7, 3, 3, 3, 3, 7, 7, 7, 7],
                                    name: "\u767d\u84dd\u76f8\u95f4(8\u6bb5)"
                                }, {
                                    color: [7, 7, 7, 7, 1, 1, 1, 1, 7, 7, 7, 7, 1, 1, 1, 1, 7, 7, 7, 7, 1, 1, 1, 1, 7, 7, 7, 7, 1, 1, 1, 1],
                                    name: "\u767d\u7ea2\u76f8\u95f4(8\u6bb5)"
                                }, {
                                    color: [4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5],
                                    name: "\u9752\u9ec4\u76f8\u95f4(8\u6bb5)"
                                }, {
                                    color: [7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1],
                                    name: "\u767d\u7ea2\u76f8\u95f4(16\u6bb5)"
                                }, {
                                    color: [6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5],
                                    name: "\u9752\u7d2b\u76f8\u95f4(16\u6bb5)"
                                }, {
                                    color: [6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4],
                                    name: "\u9ec4\u7d2b\u76f8\u95f4(16\u6bb5)"
                                }, {
                                    color: [4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3],
                                    name: "\u84dd\u9ec4\u76f8\u95f4(16\u6bb5)"
                                }],
                                segDisplayOrder: [{
                                    name: "PICK_3 4\u6bb5",
                                    color: "color-seg-1",
                                    order: 0,
                                    idx: 11
                                }, {
                                    name: "PICK_4 4\u6bb5",
                                    color: "color-seg-2",
                                    order: 1,
                                    idx: 12
                                }, {
                                    name: "\u767d\u7eff\u76f8\u95f4(8\u6bb5)",
                                    color: "color-seg-3",
                                    order: 2,
                                    idx: 13
                                }, {
                                    name: "\u767d\u84dd\u76f8\u95f4(8\u6bb5)",
                                    color: "color-seg-4",
                                    order: 3,
                                    idx: 14
                                }, {
                                    name: "\u767d\u7ea2\u76f8\u95f4(8\u6bb5)",
                                    color: "color-seg-5",
                                    order: 4,
                                    idx: 15
                                }, {
                                    name: "\u9752\u9ec4\u76f8\u95f4(8\u6bb5)",
                                    color: "color-seg-6",
                                    order: 5,
                                    idx: 16
                                }, {
                                    name: "\u767d\u7ea2\u76f8\u95f4(16\u6bb5)",
                                    color: "color-seg-7",
                                    order: 6,
                                    idx: 17
                                }, {
                                    name: "\u9752\u7d2b\u76f8\u95f4(16\u6bb5)",
                                    color: "color-seg-8",
                                    order: 7,
                                    idx: 18
                                }, {
                                    name: "\u9ec4\u7d2b\u76f8\u95f4(16\u6bb5)",
                                    color: "color-seg-9",
                                    order: 8,
                                    idx: 19
                                }, {
                                    name: "\u84dd\u9ec4\u76f8\u95f4(16\u6bb5)",
                                    color: "color-seg-10",
                                    order: 9,
                                    idx: 20
                                }],
                                colorDisplayOrder: [{
                                    name: "\u7ea2",
                                    color: "red",
                                    order: 0,
                                    idx: 1
                                }, {
                                    name: "\u9ec4",
                                    color: "yellow",
                                    order: 1,
                                    idx: 4
                                }, {
                                    name: "\u7eff",
                                    color: "green",
                                    order: 2,
                                    idx: 2
                                }, {
                                    name: "\u9752",
                                    color: "#00FFFF",
                                    order: 3,
                                    idx: 5
                                }, {
                                    name: "\u84dd",
                                    color: "blue",
                                    order: 4,
                                    idx: 3
                                }, {
                                    name: "\u7d2b",
                                    color: "purple",
                                    order: 5,
                                    idx: 6
                                }, {
                                    name: "\u767d",
                                    color: "white",
                                    order: 6,
                                    idx: 7
                                }, {
                                    name: "\u8df3\u53d8",
                                    color: "transparent",
                                    order: 7,
                                    idx: 8
                                }, {
                                    name: "\u9ed8\u8ba4",
                                    color: "transparent",
                                    order: 8,
                                    idx: 9
                                }, {
                                    name: "\u5f69\u8679",
                                    color: "transparent",
                                    order: 9,
                                    idx: 10
                                }],
                                MaxDrawPointCount: 800,
                                drawPointCount: 0,
                                drawPoints: [],
                                drawPointsHis: [],
                                objParm: {
                                    x0: 0,
                                    y0: 0,
                                    z: 1,
                                    ang: 0,
                                    ps: null,
                                    lineColor: 0
                                },
                                obj: [
                                    [0, 200, 0, 1],
                                    [300, -200, 2, 1],
                                    [-300, -200, 2, 1],
                                    [0, 200, 2, 1]
                                ],
                                objCount: 0,
                                xxyy: [],
                                position: {
                                    x: h,
                                    y: h
                                },
                                startPosition: {
                                    x: 0,
                                    y: 0
                                }
                            }
                        },
                        onLoad: function() {
                            var e = r("5945");
                            this.objCount = e.picArray.length;
                            var t = r("fontRegistryModule ");
                            this.fontNameList = t.getFontNameList();
                            var n = a.globalData.getCmdData("drawData");
                            this.pisObj = n.pisObj, s.clearDrawPointsHis()
                        },
                        onUnload: function() {
                            e("log", "onunload", " at sub/pages/draw/draw.js:203"), this.saveDeskTop()
                        },
                        onReady: function() {
                            var e = this;
                            setTimeout((function() {
                                e.initShow()
                            }), 20)
                        },
                        onHide: function() {
                            this.saveDeskTop()
                        },
                        onShow: function() {
                            var e = this;
                            this.needReDraw && (this.needReDraw = !1, setTimeout((function() {
                                e.reDraw(e.drawPoints)
                            }), 10))
                        },
                        components: {
                            uniPopup: h.default
                        },
                        computed: {
                            inputTextX: {
                                get: function() {
                                    return this.inputText
                                },
                                set: function(e) {
                                    var t = e.replace("\n", "");
                                    this.inputText = t, this.resetSelectMode()
                                }
                            }
                        },
                        methods: {
                            sendCmd: function() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "00",
                                    t = (new Date).getTime(),
                                    r = [];
                                "00" == e && (r = this.reDraw(this.drawPoints));
                                var n = o.getDrawCmdStr(r, this.pisObj, this.features, e),
                                    h = l.gosend("00" == e, n, this.sendComplete);
                                return h && (this.lastSendtime = t), h
                            },
                            sendLastCmd: function() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "00",
                                    t = this;
                                t.lastCmdTime <= t.lastSendtime || setTimeout((function() {
                                    t.lastCmdTime <= t.lastSendtime || (t.sendCmd(e), t.lastCmdTime > t.lastSendtime && t.sendLastCmd(e))
                                }), 10)
                            },
                            initShow: function() {
                                var e = this,
                                    t = uni.createSelectorQuery().in(e);
                                uni.showLoading({
                                    mask: !0
                                }), t.select("#drawCanvasContainer0").boundingClientRect((function(t) {
                                    e.drawCanvas.w = t.height, e.$set(e.drawCanvas, "h", t.height), setTimeout((function() {
                                        var t = uni.createSelectorQuery().in(e);
                                        t.select("#btn_draw_group").boundingClientRect((function(t) {
                                            e.setBtnDrawGroup(t.width, t.height), setTimeout((function() {
                                                e.readFontBase64(), e.setCanvasSub(), e.restoreDeskTop()
                                            }), 1e3)
                                        })).exec()
                                    }), 100)
                                })).exec()
                            },
                            inputBlur: function(e) {
                                this.createTextPoints(), this.drawMode = 9999
                            },
                            refreshTextPoints: function() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1500;
                                null != this.createTextPointsTimer && (clearTimeout(this.createTextPointsTimer), this.createTextPointsTimer);
                                var t = this;
                                this.createTextPointsTimer = setTimeout((function() {
                                    t.createTextPointsTimer, t.createTextPoints(), t.drawMode = 9999
                                }), e)
                            },
                            setBtnDrawGroup: function(e, t) {
                                var r = 2 * this.scUnit;
                                t >= 90 * r ? (this.$set(this.btnDrawGroup, "h", t), this.$set(this.btnDrawGroup, "w", e), this.$set(this.btnDrawGroup, "x", "hidden"), this.$set(this.btnDrawGroup, "y", "auto"), this.$set(this.btnDrawGroup, "wrap", "wrap")) : (t = t < 60 * r ? 50 * r : t, this.$set(this.btnDrawGroup, "x", "auto"), this.$set(this.btnDrawGroup, "y", "hidden"), this.$set(this.btnDrawGroup, "wrap", "nowrap"), this.$set(this.btnDrawGroup, "h", t), this.$set(this.btnDrawGroup, "w", e))
                            },
                            createTextPoints: function() {
                                if ("" == this.inputText) this.xxyy = [];
                                else {
                                    uni.showLoading({
                                        title: this.$t("\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9..."),
                                        mask: !0
                                    });
                                    var e = c.getXXYY(i, d.fontData, this.inputText, !1, this.textToLeft);
                                    uni.hideLoading(), this.xxyy = e.xxyy, d.ifHasChinese(e.notRec) && 1001 == d.fontData.sn && a.globalData.showModalTips(this.$t("\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c"), !0)
                                }
                            },
                            readFontBase64: function() {
                                var e = this,
                                    t = r("fontRegistryModule "),
                                    n = t.getFontList(this),
                                    h = n[this.fontIdex].file,
                                    a = n[this.fontIdex].mode,
                                    i = n[this.fontIdex].sn;
                                n = null, uni.showLoading({
                                    mask: !0,
                                    title: this.$t("\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...")
                                }), d.readTTF(h, a, (function(t, r) {
                                    d.fontData = {
                                        data: t,
                                        mode: r,
                                        sn: i
                                    }, e.createTextPoints(), uni.hideLoading()
                                }))
                            },
                            onFontChange: function(e) {
                                this.setFontIdex(e.detail.value)
                            },
                            setFontIdex: function(e) {
                                this.fontIdex != e && (this.fontIdex = e, a.globalData.saveData("draw_fontIdex", this.fontIdex), this.readFontBase64(), this.drawMode = 9999)
                            },
                            fontSelect: function(t) {
                                var r = this;
                                uni.navigateTo({
                                    url: "/sub/pages/font/font?fontIdex=" + this.fontIdex,
                                    events: {
                                        acceptDataFromOpenedPage: function(t) {
                                            e("log", "acceptDataFromOpenedPage", t, " at sub/pages/draw/draw.js:390"), r.setFontIdex(t.fontIdex)
                                        }
                                    }
                                })
                            },
                            resetSelectMode: function() {
                                return !!this.selectMode && (this.selectClick = !1, this.selectMode = !1, this.selectLines = [], this.selectRect = null, this.setCanvasSub(), this.reDraw(this.drawPoints), !0)
                            },
                            btnDrawChange: function(e) {
                                this.resetSelectMode();
                                var t = e.currentTarget.dataset.tag;
                                if (9999 == t && this.textToLeft && (this.textToLeft = !1, this.refreshTextPoints(0)), 9998 == t && (this.textToLeft || (this.textToLeft = !0, this.refreshTextPoints(0)), t = 9999), t >= 0 && t < 9999) {
                                    var n = r("5945"),
                                        h = n.picArray;
                                    this.obj = c.dealObjLines(h[t], !1)
                                }
                                this.drawMode = t
                            },
                            getCurrentPointCount: function() {
                                return -1 == this.drawMode ? b.getPointCount(this.drawMode, this.points, !0) : 9999 == this.drawMode ? b.getPointCount(this.drawMode, this.xxyy) : b.getPointCount(this.drawMode, this.obj)
                            },
                            dealTouchEnd: function() {
                                if (-1 == this.drawMode) this.points = d.dealLine(this.points, !1);
                                else if (Math.abs(this.subCanvasStartPoint.x - this.subCanvasEndPoint.x) < 20 && 8888 != this.drawMode && Math.abs(this.subCanvasStartPoint.y - this.subCanvasEndPoint.y) < 20) return !1;
                                8888 == this.drawMode && (this.drawMode = 8887);
                                var e = this.getCurrentPointCount();
                                if (this.drawPointCount + e > 800) return a.globalData.showModalTips(this.$t("\u8d85\u51fa\u6700\u5927\u70b9\u6570") + 800 + "\uff0c" + this.$t("\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931"), !1), !1;
                                if (this.drawPointCount = this.drawPointCount + e, -1 == this.drawMode) return this.touchEnd(null), !0;
                                this.addToHis();
                                var t = uni.createCanvasContext("drawCanvas", this),
                                    r = (this.objParm.x0, this.objParm.y0, this.objParm.z, this.objParm.ang, this.lineColor, {
                                        ctx: t,
                                        w: this.drawCanvas.w,
                                        h: this.drawCanvas.h,
                                        draw_line_type: j,
                                        colorSeg: this.colorSeg
                                    });
                                return this.objParm.lineColor = this.lineColor, 9999 == this.drawMode ? (this.objParm.drawMode = 9999, this.objParm.ps = this.xxyy, b.drawText(r, this.objParm), this.drawPoints.push(this.objParm)) : (this.objParm.drawMode = 2, this.objParm.ps = this.obj, b.drawObj(r, this.objParm), this.drawPoints.push(this.objParm)), t.draw(!0), !0
                            },
                            addToHis: function() {
                                if (!(this.drawPoints.length <= 0)) {
                                    for (var e = [], t = 0; t < this.drawPoints.length; t++) {
                                        var r = this.drawPoints[t];
                                        e.push({
                                            drawMode: r.drawMode,
                                            ps: r.ps,
                                            x0: r.x0,
                                            y0: r.y0,
                                            z: r.z,
                                            ang: r.ang,
                                            lineColor: r.lineColor
                                        })
                                    }
                                    s.pushDrawPointsHis(e)
                                }
                            },
                            setCanvasSub: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                                e("log", "setCanvasSub", " at sub/pages/draw/draw.js:501");
                                var r = !1;
                                t || (t = uni.createCanvasContext("drawCanvasSub", this), t.clearRect(0, 0, this.drawCanvas.w, this.drawCanvas.h), r = !0), t.setFillStyle("white"), t.setFontSize(10), t.fillText(this.drawPointCount + "/800", .01 * this.drawCanvas.w, .99 * this.drawCanvas.h);
                                var n = 16;
                                t.setFontSize(n), t.setLineDash(g);
                                var h = this.drawCanvas.w - 12,
                                    a = this.drawCanvas.h - 12,
                                    i = 10;
                                t.moveTo(h + i, a), t.arc(h, a, i, 0, 2 * Math.PI);
                                var c = this.$t("\u7f16\u8f91") + " ",
                                    o = t.measureText(c).width;
                                Number.isNaN(o) && (o = t.measureText(c).width), this.selectModeRange[0] = this.drawCanvas.w - (h - i - o + i), t.fillText(c, h - i - o, (2 * i - n) / 2 + a - i + n), t.setStrokeStyle("white"), t.stroke(), this.selectMode && null == this.selectRect && (t.beginPath(), t.arc(h, a, i - 3, 0, 2 * Math.PI), t.setFillStyle("yellow"), t.fill()), r && t.draw()
                            },
                            drawSelectRect: function() {
                                var e = null,
                                    t = null != this.selectRect ? this.selectRect : this.getRect(this.drawPoints);
                                if (this.selectRect = t, null != t) {
                                    "ang" in this.selectRect == 0 && (this.selectRect["ang"] = 0, this.selectRect["startAng"] = 0, this.selectRect["lastAng"] = 0);
                                    var r = b.getSelectRectInfo(t);
                                    this.selectRect["x0"] = r.x0, this.selectRect["y0"] = r.y0, e = uni.createCanvasContext("drawCanvasSub", this), e.clearRect(0, 0, this.drawCanvas.w, this.drawCanvas.h);
                                    var n = t.lastAng - t.startAng + t.ang,
                                        h = b.getCenterCorss(n, r.x0, r.y0, 20);
                                    e.beginPath(), e.setLineDash(g), e.setStrokeStyle("#51D1EA"), e.setLineWidth(1), e.moveTo(r.p1.x, r.p1.y), e.lineTo(r.p2.x, r.p2.y), e.lineTo(r.p3.x, r.p3.y), e.lineTo(r.p4.x, r.p4.y), e.lineTo(r.p1.x, r.p1.y), e.stroke(), e.beginPath(), e.setLineDash([]), e.setStrokeStyle("yellow"), e.setLineWidth(1), e.moveTo(h.p1.x, h.p1.y), e.lineTo(h.p2.x, h.p2.y), e.moveTo(h.p11.x, h.p11.y), e.lineTo(h.p1.x, h.p1.y), e.lineTo(h.p12.x, h.p12.y), e.moveTo(h.p21.x, h.p21.y), e.lineTo(h.p2.x, h.p2.y), e.lineTo(h.p22.x, h.p22.y), e.moveTo(h.p3.x, h.p3.y), e.lineTo(h.p4.x, h.p4.y), e.moveTo(h.p31.x, h.p31.y), e.lineTo(h.p3.x, h.p3.y), e.lineTo(h.p32.x, h.p32.y), e.moveTo(h.p41.x, h.p41.y), e.lineTo(h.p4.x, h.p4.y), e.lineTo(h.p42.x, h.p42.y), e.stroke(), e.beginPath()
                                }
                                this.setCanvasSub(e), null != e && e.draw()
                            },
                            touchEndSub: function(e) {
                                var t = this;
                                null != this.drawTimerSub && (clearInterval(this.drawTimerSub), this.drawTimerSub = null);
                                var r = this;
                                if (!this.selectClick && !this.selectMode && this.drawMode >= -1 && this.dealTouchEnd() && this.setDrawPointsSelect(!0), !this.selectClick && this.selectMode) {
                                    var n = this.selectRect;
                                    null != n && Math.abs(this.subCanvasStartPoint.x - this.subCanvasEndPoint.x) < 4 && Math.abs(this.subCanvasStartPoint.y - this.subCanvasEndPoint.y) < 4 && (this.subCanvasStartPoint.x < n.left + n.mx || this.subCanvasStartPoint.x > n.left + n.mx + n.width * n.z || this.subCanvasStartPoint.y < n.top + n.my || this.subCanvasStartPoint.y > n.top + n.my + n.height * n.z) && this.resetSelectMode()
                                }
                                setTimeout((function() {
                                    if (r.selectMode) {
                                        r.drawSelectRect();
                                        var e = t.selectRect;
                                        null == e || 0 == e.mx && 0 == e.my && 1 == e.z && e.lastAng - e.startAng == 0 || r.addToHis(), r.reDraw(r.drawPoints)
                                    } else r.setCanvasSub()
                                }), 1)
                            },
                            touchMoveSub: function(e) {
                                if (!this.selectClick) {
                                    var t = e.touches[0],
                                        r = t.x,
                                        n = t.y;
                                    if (-1 != this.drawMode || this.selectMode) {
                                        var h = this.drawCanvas;
                                        r = r < 0 ? 0 : r, r = r > h.w ? h.w : r, n = n < 0 ? 0 : n, n = n > h.h ? h.h : n;
                                        var a = r - this.subCanvasEndPoint.x,
                                            i = n - this.subCanvasEndPoint.y;
                                        if (!(Math.abs(a) < 5 && Math.abs(i) < 5)) {
                                            this.subCanvasEndPoint.x = r, this.subCanvasEndPoint.y = n;
                                            var c = {
                                                    w: this.drawCanvas.w - 8,
                                                    h: this.drawCanvas.h - 8
                                                },
                                                o = 0,
                                                l = 0;
                                            if (this.selectMode && null != this.selectRect) {
                                                var p = this.selectRect.z,
                                                    d = this.selectRect.mx,
                                                    g = this.selectRect.my,
                                                    j = b.getSelectRectInfo(this.selectRect, 0),
                                                    x = b.getUiRectSize(j),
                                                    V = 1;
                                                if (2 === e.touches.length) {
                                                    var f = s.getDistance(e.touches);
                                                    V = f / this.selectDistance, this.selectDistance = f;
                                                    var F = V,
                                                        k = V;
                                                    x.width * V > c.w && (F = c.w / x.width), x.height * V > c.h && (k = c.h / x.height), V = Math.min(F, k), a = this.selectRect.width * p / 2 * (1 - V), i = this.selectRect.height * p / 2 * (1 - V)
                                                } else {
                                                    if (this.zoomObj) return;
                                                    if (this.selectRect.rotate) {
                                                        var m = b.calcAngle(this.selectRect.x0, this.selectRect.y0, r, n),
                                                            P = this.selectRect.lastAng;
                                                        this.selectRect.lastAng = m;
                                                        var u = b.getSelectRectInfo(this.selectRect, 0),
                                                            X = b.getUiRectSize(u);
                                                        this.selectRect.lastAng = P;
                                                        if (X.left < 4 && (o = 4 - X.left), X.left + X.width > this.drawCanvas.w - 4) {
                                                            if (0 != o) return;
                                                            o = this.drawCanvas.w - 4 - (X.left + X.width)
                                                        }
                                                        if (X.top < 4 && (l = 4 - X.top), X.top + X.height > this.drawCanvas.h - 4) {
                                                            if (0 != l) return;
                                                            l = this.drawCanvas.h - 4 - (X.top + X.height)
                                                        }
                                                        this.selectRect.lastAng = m, a = 0, i = 0
                                                    }
                                                }
                                                var N = x.left + a,
                                                    H = x.top + i;
                                                N = Math.max(N, 4), H = Math.max(H, 4);
                                                var z = x.width * V,
                                                    Q = x.height * V,
                                                    R = N + z,
                                                    v = H + Q;
                                                N = Math.min(this.drawCanvas.w - 4, R) - z, H = Math.min(this.drawCanvas.h - 4, v) - Q, d = N - x.left + d + o, g = H - x.top + g + l;
                                                var I = this.selectRect.lastAng - this.selectRect.startAng;
                                                this.selectRect.mx == d && this.selectRect.my == g && 1 == V && 0 == I || (this.selectRect.mx = d, this.selectRect.my = g, this.selectRect.z = p * V, this.drawSelectRect())
                                            }
                                        }
                                    } else this.touchMove(e)
                                }
                            },
                            touchStartSub: function(e) {
                                var t = this;
                                null != this.drawTimerSub && (clearInterval(this.drawTimerSub), this.drawTimerSub = null);
                                var r = this,
                                    n = e.touches[0],
                                    h = n.x,
                                    a = n.y;
                                if (this.subCanvasStartPoint.x = h, this.subCanvasStartPoint.y = a, this.subCanvasEndPoint.x = h, this.subCanvasEndPoint.y = a, this.zoomObj = !1, 2 === e.touches.length && (this.selectDistance = s.getDistance(e.touches), this.zoomObj = !0), this.selectClick = !1, this.drawCanvas.w - this.selectModeRange[0] < h && this.drawCanvas.h - this.selectModeRange[1] < a) return this.selectClick = !0, this.selectDistance = null, null != this.selectRect ? this.selectMode = !0 : this.selectMode = !this.selectMode, this.selectLines = [], this.selectRect = null, void(this.selectMode && this.tipOpen());
                                if (this.selectMode) {
                                    if (null != this.selectRect) {
                                        this.selectRect["rotate"] = !1;
                                        var i = b.getSelectRectInfo(this.selectRect);
                                        this.selectRect["x0"] = i.x0, this.selectRect["y0"] = i.y0, this.selectRect.ang = this.selectRect.ang + this.selectRect.lastAng - this.selectRect.startAng, this.selectRect.startAng = 0, this.selectRect.lastAng = 0;
                                        if (Math.abs(h - i.x0) < 30 && Math.abs(a - i.y0) < 30) return;
                                        return this.selectRect["rotate"] = !0, this.selectRect.startAng = b.calcAngle(this.selectRect.x0, this.selectRect.y0, h, a), void(this.selectRect.lastAng = this.selectRect.startAng)
                                    }
                                    return this.selectPoints = [
                                        [h, a]
                                    ], this.selectLines = [], void(this.drawTimerSub = setInterval((function() {
                                        if (null != t.selectPoints) {
                                            var e = r.selectPoints[r.selectPoints.length - 1];
                                            if (!(Math.abs(e[0] - r.subCanvasEndPoint.x) < 4 && Math.abs(e[1] - r.subCanvasEndPoint.y) < 4)) {
                                                r.selectPoints.push([r.subCanvasEndPoint.x, r.subCanvasEndPoint.y]);
                                                var n = uni.createCanvasContext("drawCanvasSub", r);
                                                n.setStrokeStyle("yellow"), n.setLineDash([]);
                                                for (var h = r.selectPoints.length - 2; h < r.selectPoints.length; h++) 0 == h ? n.moveTo(r.selectPoints[h][0], r.selectPoints[h][1]) : n.lineTo(r.selectPoints[h][0], r.selectPoints[h][1]);
                                                n.stroke(), n.draw(!0), r.checkObjectSelect(r.drawPoints)
                                            }
                                        }
                                    }), 20))
                                }
                                this.drawMode < -1 || (-1 != this.drawMode ? this.drawTimerSub = setInterval((function() {
                                    var e = r.subCanvasEndPoint.x - r.subCanvasStartPoint.x,
                                        n = r.subCanvasEndPoint.y - r.subCanvasStartPoint.y;
                                    if (!(Math.abs(e) + Math.abs(n) < 15)) {
                                        var h = {
                                            w: 800,
                                            h: 800
                                        };
                                        9999 == r.drawMode && (h = b.getTextLineSize(r.xxyy, r.textToLeft));
                                        var a = r.subCanvasStartPoint.x + e / 2,
                                            i = r.subCanvasStartPoint.y + n / 2,
                                            c = Math.abs(e / h.w),
                                            o = Math.abs(n / h.h),
                                            s = c > o ? o : c;
                                        r.objParm = {
                                            x0: a,
                                            y0: i,
                                            z: s,
                                            ang: 0,
                                            ps: null,
                                            lineColor: r.lineColor
                                        };
                                        var l = uni.createCanvasContext("drawCanvasSub", r),
                                            p = {
                                                ctx: l,
                                                w: t.drawCanvas.w,
                                                h: t.drawCanvas.h,
                                                draw_line_type: j,
                                                colorSeg: t.colorSeg
                                            };
                                        l.clearRect(0, 0, r.drawCanvas.w, r.drawCanvas.h), 9999 == r.drawMode ? (r.objParm.ps = r.xxyy, b.drawText(p, r.objParm)) : (r.objParm.ps = r.obj, b.drawObj(p, r.objParm)), l.closePath(), l.beginPath(), l.setLineDash(g), l.setStrokeStyle("#51D1EA"), l.setLineWidth(1);
                                        var d = r.subCanvasStartPoint.x < r.subCanvasEndPoint.x ? r.subCanvasStartPoint.x : r.subCanvasEndPoint.x,
                                            x = r.subCanvasStartPoint.y < r.subCanvasEndPoint.y ? r.subCanvasStartPoint.y : r.subCanvasEndPoint.y;
                                        l.strokeRect(d, x, Math.abs(e), Math.abs(n)), l.stroke(), t.setCanvasSub(l), l.draw()
                                    }
                                }), 50) : this.touchStart(e))
                            },
                            checkObjectSelect: function(e) {
                                if (0 != e.length && 0 != this.selectPoints.length)
                                    for (var t = [this.selectPoints[this.selectPoints.length - 2], this.selectPoints[this.selectPoints.length - 1]], r = 0; r < e.length; r++)
                                        if (this.selectLines.length < r + 1 && this.selectLines.push({
                                                sel: !1,
                                                mx0: 0,
                                                my0: 0,
                                                color: null
                                            }), !this.selectLines[r].sel) {
                                            var n = e[r],
                                                h = n.x0,
                                                a = n.y0,
                                                i = n.z,
                                                c = n.ps,
                                                o = n.ang;
                                            if (-1 == n.drawMode) {
                                                var s = b.calcLinesAngXY(c, o);
                                                this.selectLines[r].sel = b.checkLine(s, h, a, i, t)
                                            } else if (9999 == n.drawMode) {
                                                var l = b.calcTextAngXY(n);
                                                this.selectLines[r].sel = b.checkText(l, h, a, i, t)
                                            } else {
                                                var p = b.calcObjAngXY(c, o);
                                                this.selectLines[r].sel = b.checkObj(p, h, a, i, t)
                                            }
                                        }
                            },
                            setDrawPointsSelect: function() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    t = this.drawPoints;
                                if (0 != t.length) {
                                    this.selectRect = null, this.selectLines = [];
                                    for (var r = 0; r < t.length; r++) this.selectLines.length < r + 1 && this.selectLines.push({
                                        sel: !1,
                                        mx0: 0,
                                        my0: 0,
                                        color: null
                                    }), e ? r == t.length - 1 && (this.selectLines[r].sel = !0) : this.selectLines[r].sel = !0;
                                    this.selectMode = !0
                                }
                            },
                            getRect: function(e) {
                                if (this.selectDistance = null, 0 == e.length) return null;
                                if (this.selectLines.length != e.length) return null;
                                for (var t = !1, r = {
                                        left: 99999,
                                        top: 99999,
                                        right: -99999,
                                        bottom: -99999
                                    }, n = 0; n < e.length; n++)
                                    if (this.selectLines[n].sel) {
                                        t = !0;
                                        var h = e[n];
                                        r = -1 == h.drawMode ? b.getLineRect(h, r) : 9999 == h.drawMode ? b.getTextRect(h, r) : b.getObjRect(h, r)
                                    } if (t) {
                                    for (var a = (r.right - r.left) / 2 + r.left, i = (r.bottom - r.top) / 2 + r.top, c = 0; c < e.length; c++)
                                        if (this.selectLines[c].sel) {
                                            var o = e[c];
                                            this.selectLines[c].mx0 = o.x0 - a, this.selectLines[c].my0 = o.y0 - i
                                        } var s = {
                                        left: r.left,
                                        top: r.top,
                                        width: r.right - r.left,
                                        height: r.bottom - r.top,
                                        mx: 0,
                                        my: 0,
                                        z: 1
                                    };
                                    return s
                                }
                                return null
                            },
                            operateAciton: function(e) {
                                this.selectLines.length > 0 ? this.deleteObj() : this.clearDraw(null)
                            },
                            deleteObj: function() {
                                this.addToHis();
                                for (var t = this.drawPoints.length - 1; t >= 0; t--) {
                                    var r = this.selectLines.length > t && this.selectLines[t].sel & this.selectMode;
                                    r && null != this.selectRect && (this.drawPoints.splice(t, 1), e("log", "drawPoints", this.drawPoints, " at sub/pages/draw/draw.js:950"))
                                }
                                this.resetSelectMode() || this.reDraw(this.drawPoints)
                            },
                            clearDraw: function(e) {
                                s.clearDrawPointsHis(), this.points = [], this.drawPoints = [], this.drawPointCount = 0, this.linePtsSendSn = 0;
                                var t = uni.createCanvasContext("imgCanvas", this);
                                t.draw();
                                var r = uni.createCanvasContext("drawCanvas", this);
                                r.draw(), this.resetSelectMode() || this.setCanvasSub()
                            },
                            backDraw: function(t) {
                                if (s.getDrawPointsHisCount() <= 0) return this.resetSelectMode(), void this.clearDraw();
                                var r = s.popDrawPointsHis();
                                e("log", "his", r, " at sub/pages/draw/draw.js:981"), this.drawPoints = r.data, this.drawPointCount = b.getdrawPointsCnt(this.drawPoints), this.resetSelectMode() || this.reDraw(this.drawPoints)
                            },
                            reDraw: function(e) {
                                var t = uni.createCanvasContext("drawCanvas", this);
                                t.setLineWidth(1);
                                var r = {
                                        ctx: t,
                                        w: this.drawCanvas.w,
                                        h: this.drawCanvas.h,
                                        draw_line_type: j,
                                        colorSeg: this.colorSeg
                                    },
                                    n = {
                                        selectRect: this.selectRect,
                                        selectLines: this.selectLines,
                                        selectMode: this.selectMode
                                    },
                                    h = b.drawPs(e, r, n);
                                return t.draw(!0), this.selectMode || this.setCanvasSub(), h
                            },
                            btnColorChange: function(e) {
                                var t = parseInt(e.currentTarget.dataset.tag);
                                this.lineColor = t;
                                for (var r = 0; r < this.selectLines.length; r++) this.selectLines[r].color = this.lineColor;
                                this.selectLines.length > 0 && (this.selectRect.ang = this.selectRect.lastAng - this.selectRect.startAng + this.selectRect.ang, this.selectRect.startAng = this.selectRect.lastAng, this.reDraw(this.drawPoints))
                            },
                            touchStart: function(e) {
                                this.points = null, this.points = [], this.lastLinePts = [];
                                var t = e.touches[0];
                                this.lastPoint.x = t.x, this.lastPoint.y = t.y, this.lastPoint.time = 0;
                                var r = uni.createCanvasContext("drawCanvasSub", this);
                                this.lineCtx = r, r.setLineDash([]);
                                var n = this.lineColor >= 8 ? 1 : this.lineColor;
                                r.setStrokeStyle(p[n]), r.setFillStyle(p[n]), this.points.push([this.lastPoint.x, this.lastPoint.y]);
                                var h = {
                                    x: this.lastPoint.x,
                                    y: this.lastPoint.y
                                };
                                this.lastLinePts.push({
                                    pt: h,
                                    color: 0,
                                    z: 1,
                                    time: (new Date).getTime()
                                }), r.moveTo(this.lastPoint.x, this.lastPoint.y)
                            },
                            touchMove: function(e) {
                                var t = e.touches[0],
                                    r = {
                                        x: t.x,
                                        y: t.y
                                    };
                                if (0 == this.lastPoint.time) return this.lastPoint.x = t.x, this.lastPoint.y = t.y, this.lastPoint.time = (new Date).getTime(), this.points = [], this.points.push([this.lastPoint.x, this.lastPoint.y]), void this.lineCtx.moveTo(this.lastPoint.x, this.lastPoint.y);
                                var n = (new Date).getTime();
                                if (!(n - this.lastPoint.time <= 2) && !(Math.abs(r.x - this.lastPoint.x) + Math.abs(r.y - this.lastPoint.y) < 3)) {
                                    this.lastPoint = {
                                        x: r.x,
                                        y: r.y,
                                        time: (new Date).getTime()
                                    }, this.sendLinePts(this.lastLinePts) && (this.lastLinePts = []);
                                    var h = this.lineColor >= 8 ? 1 : this.lineColor;
                                    this.lastLinePts.push({
                                        pt: r,
                                        color: h,
                                        z: 0,
                                        time: (new Date).getTime()
                                    }), this.points.push([this.lastPoint.x, this.lastPoint.y]), this.lineCtx.lineTo(this.lastPoint.x, this.lastPoint.y), this.lineCtx.stroke(), this.lineCtx.draw(!0), this.lineCtx.moveTo(this.lastPoint.x, this.lastPoint.y)
                                }
                            },
                            sendLinePts: function(t) {
                                var r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                if (1 != this.sendLineMode) return !0;
                                if (t.length > 0 && (r || (new Date).getTime() - t[0].time > 50)) {
                                    if (r) {
                                        if (1 == t.length) {
                                            var n = this.lineColor >= 8 ? 1 : this.lineColor;
                                            t.push({
                                                pt: t[0].pt,
                                                color: n,
                                                z: 1
                                            })
                                        }
                                        t[t.length - 1].z = 1, e("log", "sendLinePts", t, " at sub/pages/draw/draw.js:1072")
                                    }
                                    var h = o.getDrawLineStr(t, this.linePtsSendSn),
                                        a = this.sendLineCmd(h, r);
                                    return e("log", "sendLinePts", t.length, a, this.linePtsSendSn, " at sub/pages/draw/draw.js:1076"), a
                                }
                                return !1
                            },
                            sendLineCmd: function(e, t) {
                                var r = this,
                                    n = l.gosend(!1, e);
                                return n && (this.linePtsSendSn = this.linePtsSendSn + 1), !t || n ? n : (setTimeout((function() {
                                    r.sendLineCmd(e, t)
                                }), 10), !1)
                            },
                            touchEnd: function(t) {
                                this.addToHis(), this.sendLinePts(this.lastLinePts, !0);
                                var r = uni.createCanvasContext("drawCanvas", this),
                                    n = b.covertPoints(this.points, this.lineColor, this.drawCanvas);
                                n["ang"] = 0, e("log", "res", n, " at sub/pages/draw/draw.js:1097");
                                var h = {
                                    ctx: r,
                                    w: this.drawCanvas.w,
                                    h: this.drawCanvas.h,
                                    draw_line_type: j,
                                    colorSeg: this.colorSeg
                                };
                                b.drawLine(h, n), this.drawPoints.push(n), r.draw(!0)
                            },
                            sendComplete: function(e, t) {
                                if (0 == e) {
                                    this.showSending = !0;
                                    var r = uni.createCanvasContext("progressCanvas", this);
                                    l.drawProgress(r, 300 * this.scUnit, t)
                                } else this.showSending = !1, this.lastCompleteTime = (new Date).getTime()
                            },
                            parmClose: function(e) {
                                this.$refs.popup.close(), this.showCanvas = !0, this.lastCmdTime = (new Date).getTime(), this.sendLastCmd("88")
                            },
                            chClick: function(e) {
                                this.cnfIdx = e, this.refreshChDraw()
                            },
                            drawChCanvas: function(e, t, r, n) {
                                var h = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null,
                                    a = uni.createCanvasContext("chCanvas", this),
                                    i = e / 3;
                                a.setFontSize(i);
                                var c = e / 2,
                                    o = .95 * (this.chCanvas.w - e),
                                    s = (this.chCanvas.h - t) / 2 + c,
                                    l = o + e,
                                    p = s + t - e,
                                    d = o + c,
                                    g = s,
                                    j = l - c,
                                    x = p,
                                    V = 2 * this.scUnit,
                                    f = a.createLinearGradient(j, x + c, d, g - c);
                                f.addColorStop(0, "#112233"), f.addColorStop(1, "#1E374C"), a.setFillStyle(f), a.beginPath(), a.moveTo(l, p), a.arc(j, x, c, 0, 1 * Math.PI);
                                var F = t - 2 * c;
                                a.rect(l - e, p - F, e, F), a.moveTo(o, s), a.arc(d, g, c, Math.PI, 2 * Math.PI), a.fill();
                                var k = a.createLinearGradient(j, x + c, d, g - c);
                                k.addColorStop(0, "#008BD1"), k.addColorStop(1, "white"), a.setFillStyle(k), a.beginPath(), a.moveTo(o, s), a.arc(d, g, c, Math.PI, 2 * Math.PI), a.moveTo(l, p), a.arc(j, x, c, 0, 1 * Math.PI), a.beginPath();
                                var m = t / r,
                                    P = m * n;
                                if (P < c) {
                                    var u = c - P,
                                        X = c - Math.sqrt(Math.pow(c, 2) - Math.pow(u, 2)),
                                        N = b.lineTheta([l, p], [j, x], [l - X, p + u]);
                                    a.moveTo(l - X, p + u), a.arc(j, x, c, N, Math.PI - N), a.fill()
                                } else if (P <= t - c) {
                                    a.moveTo(l, p), a.arc(j, x, c, 0, 1 * Math.PI);
                                    var H = P - c;
                                    a.rect(l - e, p - H, e, H), a.fill()
                                } else {
                                    a.moveTo(l, p), a.arc(j, x, c, 0, 1 * Math.PI);
                                    var z = t - 2 * c;
                                    if (a.rect(l - e, p - z, e, z), n == r) a.moveTo(o, s), a.arc(d, g, c, Math.PI, 2 * Math.PI);
                                    else {
                                        var Q = P - (t - c),
                                            R = c - Math.sqrt(Math.pow(c, 2) - Math.pow(Q, 2)),
                                            v = b.lineTheta([o, s], [d, g], [o + R, s - Q]);
                                        a.moveTo(o + R, s - Q), a.arc(d, g, c, 2 * Math.PI - v, Math.PI + v)
                                    }
                                    a.fill()
                                }
                                if (a.beginPath(), a.setFontSize(26 * V), a.setFillStyle("white"), a.setShadow(5 * V, 5 * V, 5 * V, "rgba(0, 0, 0, 0.5)"), a.fillText(n + "", j - a.measureText(n + "").width / 2, g - c + t / 2 + i / 2), a.beginPath(), a.setFontSize(40 * V), a.fillText("+", d - a.measureText("+").width / 2, g + i / 2), a.fillText("-", j - a.measureText("-").width / 2, x + i), null != h) {
                                    var I = o,
                                        w = x + c;
                                    h(a, I, w, e, t, c, r, n)
                                }
                                a.draw()
                            },
                            addCnfValusAndSend: function(e) {
                                var t = this.pisObj.cnfValus[this.cnfIdx] + Math.floor(e);
                                t = t < 0 ? 0 : t, t = t > this.chDraw.max ? this.chDraw.max : t, this.pisObj.cnfValus[this.cnfIdx] != t && (this.$set(this.pisObj.cnfValus, this.cnfIdx, t), this.refreshChDraw(), this.lastCmdTime = (new Date).getTime(), this.sendLastCmd("66"))
                            },
                            callBackCh: function(e, t, r, n, h, a, i, c) {
                                if (this.cnfIdx in this.pisObjNote) {
                                    var o = 2 * this.scUnit,
                                        s = 10 * o;
                                    e.beginPath(), e.setLineWidth(1), e.setShadow(0, 0, 0, "rgba(0, 0, 0, 0)"), e.setStrokeStyle("#414339"), e.setFillStyle("#928F9F"), e.setFontSize(s);
                                    var l = this.pisObjNote[this.cnfIdx],
                                        p = .8 * t;
                                    t -= 1, e.moveTo(p, r), e.lineTo(t + a - 2, r), e.stroke();
                                    for (var d = 0, b = 0, g = !1, j = 0; j < l.length; j++) {
                                        l[j][0];
                                        var x = l[j][0] * this.chPer,
                                            V = l[j][1],
                                            f = Math.round(r - x - d);
                                        f < r - h && (f = r - h);
                                        var F = 0;
                                        x + d < a ? F = Math.round(a - Math.sqrt(Math.pow(a, 2) - Math.pow(a - x - d, 2))) : x + d > h - a && x + d < h ? F = Math.round(a - Math.sqrt(Math.pow(a, 2) - Math.pow(a - h + x + d, 2))) : x + d >= h && (F = a - 2), e.moveTo(p, f), e.lineTo(t + F, f), e.stroke(), b <= c && c < b + l[j][0] && (e.beginPath(), e.setFillStyle("#FFFFFF"), g = !0), b += l[j][0], e.fillText(V, p - e.measureText(V).width, r - d - (x - s / 2) / 2), d = x + d, g && (e.beginPath(), e.setFillStyle("#928F9F"))
                                    }
                                    e.stroke()
                                }
                            },
                            refreshChDraw: function() {
                                var e = this.pisObj.cnfValus[this.cnfIdx];
                                this.drawChCanvas(this.chDraw.w, this.chDraw.h, this.chDraw.max, e, this.callBackCh)
                            },
                            chTouchstart: function(e) {
                                var t = e.touches[0];
                                this.chBeginPoint = {
                                    x: t.x,
                                    y: t.y
                                }, this.chEndPoint = null, this.lastRefresh = 0
                            },
                            chTouchmove: function(e) {
                                var t = e.touches[0];
                                this.chEndPoint = {
                                    x: t.x,
                                    y: t.y
                                };
                                var r = (new Date).getTime();
                                if (r - this.lastRefresh > 100) {
                                    var n = Math.floor((this.chBeginPoint.y - this.chEndPoint.y) / this.chPer);
                                    Math.abs(n) >= 1 && (this.chBeginPoint = {
                                        x: this.chEndPoint.x,
                                        y: this.chEndPoint.y
                                    }, this.addCnfValusAndSend(n)), this.lastRefresh = r
                                }
                            },
                            chTouchend: function(e) {
                                if (null == this.chEndPoint) {
                                    var t = this.chBeginPoint.y > this.chCanvas.h / 2 ? -1 : 1;
                                    this.addCnfValusAndSend(t)
                                }
                                this.chEndPoint = null
                            },
                            slPointTimeChange: function(e) {
                                var t = e.detail.value;
                                this.pisObj.txPointTime = t, this.lastCmdTime = (new Date).getTime(), this.sendLastCmd("88")
                            },
                            parmReset: function(e) {
                                this.$set(this.pisObj, "cnfValus", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), this.refreshChDraw(), this.lastCmdTime = (new Date).getTime(), this.sendLastCmd("66")
                            },
                            drawDone: function(t) {
                                if (!(this.drawPointCount <= 0)) {
                                    var r = (new Date).getTime();
                                    this.resetSelectMode(), e("log", "Send click time", r - this.lastCompleteTime, " at sub/pages/draw/draw.js:1355"), r - this.lastCompleteTime > 300 ? this.sendCmd() : e("log", "Send click too frequently", " at sub/pages/draw/draw.js:1357")
                                }
                            },
                            parmSet: function(e) {
                                this.showCanvas = !1, this.$refs.popup.open("bottom");
                                var t = this,
                                    r = uni.createSelectorQuery().in(t);
                                this.$nextTick((function() {
                                    r.select("#chCanvas").boundingClientRect((function(e) {
                                        t.chCanvas.w = e.width, t.chCanvas.h = e.height;
                                        var r = .9 * t.chCanvas.h;
                                        t.chPer = r / 255, t.chDraw.w = t.chCanvas.w / 3, t.chDraw.h = r, t.refreshChDraw()
                                    })).exec()
                                }))
                            },
                            drawAddClick: function(t) {
                                var r = this,
                                    n = [this.$t("\u53e6\u5b58\u6587\u4ef6"), this.$t("\u9009\u62e9\u6587\u4ef6")];
                                this.currSelectedFile && n.push(this.$t("\u4fdd\u5b58\u6587\u4ef6")), uni.showActionSheet({
                                    itemList: n,
                                    success: function(e) {
                                        0 == e.tapIndex && r.drawAddAddClick(), 1 == e.tapIndex && r.drawAddSelectClick(), 2 == e.tapIndex && r.drawAddSaveClick()
                                    },
                                    fail: function(t) {
                                        e("log", t.errMsg, " at sub/pages/draw/draw.js:1392")
                                    }
                                })
                            },
                            saveDrawPic: function(t) {
                                var r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -1;
                                e("log", "saveDrawPic", t, JSON.stringify(this.pisObj), " at sub/pages/draw/draw.js:1398");
                                var h = this,
                                    i = b.reSizeDrawPoints(h.drawPoints, this.drawCanvas.w, this.drawCanvas.h),
                                    c = JSON.parse(JSON.stringify(h.pisObj));
                                n >= 0 && (c.cnfValus[12] = n), s.saveHandDrawImg(t, "", i, h.drawPointCount, c, h.features, r), r || (a.globalData.showModalTips(h.$t("\u4fdd\u5b58\u6210\u529f")), h.currSelectedFile = t)
                            },
                            saveDeskTop: function() {
                                this.saveDrawPic("saveDeskTopFile_001", !0)
                            },
                            restoreDeskTop: function() {
                                var e = this.getDrawByName("saveDeskTopFile_001", !0);
                                e && (this.needReDraw = !1, this.reDraw(this.drawPoints))
                            },
                            picNameInputCancelClick: function(e) {
                                this.showCanvas = !0, this.$refs.classNamePopup.close()
                            },
                            picNameNewInput: function(e) {
                                this.drawAddFileName = e.detail.value
                            },
                            picNameInputOkClick: function(e) {
                                var t = s.combiFileName(this.handDrawClass[this.handDrawClassIdx], this.drawAddFileName);
                                if ("" == t) uni.showModal({
                                    content: this.$t("\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a"),
                                    showCancel: !1,
                                    success: function(e) {},
                                    fail: function(e) {},
                                    complete: function() {}
                                });
                                else {
                                    var r = s.getHandDrawImg(t);
                                    r ? uni.showModal({
                                        content: this.$t("\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165"),
                                        showCancel: !1,
                                        success: function(e) {},
                                        fail: function(e) {}
                                    }) : (this.saveDrawPic(t, !1, 3), this.picNameInputCancelClick(null))
                                }
                            },
                            checkAndAddImagFile: function(t) {
                                var r = this;
                                uni.showModal({
                                    title: this.$t("\u8bf7\u8f93\u5165\u6587\u4ef6\u540d"),
                                    placeholderText: t,
                                    editable: !0,
                                    success: function(n) {
                                        if (n.confirm) {
                                            var h = "" == n.content ? t : n.content;
                                            if ("" == h) uni.showModal({
                                                content: r.$t("\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a"),
                                                showCancel: !1,
                                                success: function(e) {},
                                                fail: function(e) {},
                                                complete: function() {
                                                    r.checkAndAddImagFile(t)
                                                }
                                            });
                                            else {
                                                var a = s.getHandDrawImg(h);
                                                a ? uni.showModal({
                                                    content: r.$t("\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed"),
                                                    showCancel: !0,
                                                    success: function(e) {
                                                        e.confirm ? r.saveDrawPic(h) : r.checkAndAddImagFile(t)
                                                    },
                                                    fail: function(e) {}
                                                }) : r.saveDrawPic(h)
                                            }
                                        } else n.cancel && e("log", "\u7528\u6237\u70b9\u51fb\u53d6\u6d88", " at sub/pages/draw/draw.js:1501")
                                    }
                                })
                            },
                            drawAddAddClick: function() {
                                if (0 != this.drawPointCount) {
                                    var e = s.getHandDrawNames();
                                    e.count >= 50 ? a.globalData.showModalTips(this.$t("\u5df2\u8d85\u8fc7\u6700\u5927\u6587\u4ef6\u6570\u91cf ") + 50, !0) : e.noSpace ? a.globalData.showModalTips(this.$t("\u5b58\u50a8\u7a7a\u95f4\u4e0d\u8db3"), !0) : (this.handDrawClassName = s.getHandDrawClassName(), this.$set(this, "handDrawClassIdx", 0), this.drawAddFileName = s.getNewFileName(), this.showCanvas = !1, this.$refs.classNamePopup.open("center"))
                                } else a.globalData.showModalTips(this.$t("\u8bf7\u5148\u7ed8\u5236\u56fe\u6848"))
                            },
                            handDrawClassPickerChange: function(e) {
                                this.handDrawClassIdx = parseInt(e.detail.value)
                            },
                            getDrawByName: function(e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    r = s.getHandDrawImg(e, t);
                                if (r) {
                                    if (r.pointCnt <= 0) return !1;
                                    if (r.pointCnt > 800) return a.globalData.showModalTips(this.$t("\u8d85\u51fa\u6700\u5927\u70b9\u6570") + 800, !0), !1;
                                    this.drawPointCount = r.pointCnt, this.addToHis();
                                    var n = b.reSizeDrawPoints(r.drawPoints, b.defaultWith, b.defaultHeight, this.drawCanvas.w, this.drawCanvas.h);
                                    return this.drawPoints = n, r.pisObj && this.$set(this, "pisObj", r.pisObj), this.selectLines = [], this.selectMode = !1, this.needReDraw = !0, !0
                                }
                                return !1
                            },
                            drawAddSaveClick: function() {
                                if (0 != this.drawPointCount) {
                                    var e = this;
                                    uni.showModal({
                                        content: e.$t("\u4fdd\u5b58\u6587\u4ef6") + this.currSelectedFile + "?",
                                        showCancel: !0,
                                        success: function(t) {
                                            t.confirm && e.saveDrawPic(e.currSelectedFile)
                                        },
                                        fail: function(e) {}
                                    })
                                } else a.globalData.showModalTips(this.$t("\u8bf7\u5148\u7ed8\u5236\u56fe\u6848"))
                            },
                            drawAddSelectClick: function() {
                                var t = this;
                                uni.navigateTo({
                                    url: "/sub/pages/files/files",
                                    events: {
                                        acceptDataFromOpenedPage: function(r) {
                                            e("log", "acceptDataFromOpenedPage", r, " at sub/pages/draw/draw.js:1580"), t.currSelectedFile = r.fileName, t.getDrawByName(r.fileName)
                                        }
                                    },
                                    success: function(e) {
                                        e.eventChannel.emit("acceptDataFromOpenerPage", {
                                            callFrom: "draw"
                                        })
                                    },
                                    fail: function(t) {
                                        e("log", t, " at sub/pages/draw/draw.js:1589")
                                    }
                                })
                            },
                            tipsCheckboxChange: function(e) {
                                var t = e.detail.value;
                                this.showTips = !t.includes("tips"), a.globalData.saveTipsParm(this.showTips)
                            },
                            tipOpen: function() {
                                this.showTips && (this.showCanvas = !1, this.$refs.tips.open("center"))
                            },
                            tipsClose: function(e) {
                                this.$refs.tips.close(), this.showCanvas = !0
                            },
                            onBtnSetTouchStart: function(e) {
                                this.startPosition.x = e.touches[0].clientX - this.position.x, this.startPosition.y = e.touches[0].clientY - this.position.y
                            },
                            onBtnSetTouchMove: function(e) {
                                this.position.x = e.touches[0].clientX - this.startPosition.x, this.position.y = e.touches[0].clientY - this.startPosition.y
                            },
                            onBtnSetTouchEnd: function() {},
                            onBtnSetClick: function(e) {
                                uni.navigateTo({
                                    url: "/pages/subset/subset"
                                })
                            },
                            chooseImag: function(t) {
                                var r = this;
                                this.resetSelectMode(), a.globalData.img_selecting = !0, uni.chooseImage({
                                    count: 1,
                                    sizeType: ["original", "compressed"],
                                    sourceType: ["album", "camera"],
                                    success: function(e) {
                                        var t = e.tempFilePaths[0];
                                        uni.navigateTo({
                                            url: "/sub/pages/cover/cover",
                                            events: {
                                                acceptDataFromOpenedPage: function(e) {
                                                    if (null != e) {
                                                        if (0 == e.mode && null != e.data) {
                                                            var t = uni.createCanvasContext("imgCanvas", r);
                                                            t.drawImage(e.data, 0, 0, r.drawCanvas.w, r.drawCanvas.h), t.draw()
                                                        }
                                                        if (1 == e.mode && null != e.data) {
                                                            r.obj = c.dealImgLines(e.data), r.drawMode = 8888;
                                                            var n = r.drawCanvas.w / e.size * .8;
                                                            r.objParm = {
                                                                x0: r.drawCanvas.w / 2,
                                                                y0: r.drawCanvas.w / 2,
                                                                z: n,
                                                                ang: 0,
                                                                ps: r.obj,
                                                                lineColor: r.lineColor
                                                            }, r.touchEndSub()
                                                        }
                                                    }
                                                }
                                            },
                                            success: function(e) {
                                                e.eventChannel.emit("acceptDataFromOpenerPage", t)
                                            }
                                        })
                                    },
                                    complete: function(t) {
                                        e("log", "app.globalData.img_selecting", a.globalData.img_selecting, " at sub/pages/draw/draw.js:1668"), a.globalData.img_selecting = !1
                                    }
                                })
                            }
                        }
                    };
                t.default = x
            }).call(this, r("f3b9")["default"])
        },
        "762b": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("91e0"),
                h = r("6a03");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        "780d": function(e, t, r) {
            (function(t) {
                var n = r("289d"),
                    h = r("cefd"),
                    a = r("4137");

                function i(e) {
                    var t = e[3],
                        r = e[0] / 255,
                        n = e[1] / 255,
                        h = e[2] / 255,
                        a = Math.max(r, n, h),
                        i = Math.min(r, n, h),
                        c = 255 * a,
                        o = 0;
                    0 !== a && (o = (a - i) / a * 255);
                    var s = 0;
                    if (a === i) s = 0;
                    else {
                        var l = a - i;
                        s = a === r ? (n - h) / l * 60 : a === n ? 60 * (2 + (h - r) / l) : 60 * (4 + (r - n) / l), s < 0 && (s += 360), s /= 2
                    }
                    return {
                        h: s,
                        s: o,
                        v: c,
                        a: t
                    }
                }

                function c(e) {
                    for (var t = [
                            [156, 180],
                            [35, 77],
                            [100, 124],
                            [11, 34],
                            [78, 99],
                            [125, 155],
                            [0, 180]
                        ], r = 1; r < t.length - 2; r++)
                        if (e.h >= t[r][0] && e.h <= t[r][1] && e.s >= 43 && e.s <= 255 && e.v >= 46 && e.v <= 255) return r;
                    return (e.h >= 0 && e.h <= 10 || e.h >= 156 && e.h <= 180) && e.s >= 43 && e.s <= 255 && e.v >= 46 && e.v <= 255 ? 0 : 6
                }

                function o(e, t, r) {
                    var n = e.width,
                        h = n * r * 4 + 4 * t,
                        a = e.data,
                        i = [a[h], a[h + 1], a[h + 2], a[h + 3]];
                    return i
                }

                function s(e, t, r) {
                    for (var n = new Array(7).fill(0), h = 0, a = [
                            [0, 0],
                            [0, 1],
                            [1, 1],
                            [1, 0],
                            [-1, 0],
                            [0, -1],
                            [-1, -1],
                            [-1, 1],
                            [1, -1]
                        ]; h < a.length; h++) {
                        var s = a[h],
                            l = t + 1 * s[0],
                            p = r + 1 * s[1];
                        if (!(l < 0 || l > e.width - 1 || p < 0 || p > e.height - 1)) {
                            var d = o(e, l, p),
                                b = i(d),
                                g = c(b);
                            n[g] += 1
                        }
                    }
                    for (var j = -1, x = -1, V = -1, f = -1, F = 0; F < n.length; F++) n[F] > j && (x = F, j = n[F]), n[F] > V && 6 != F && (f = F, V = n[F]);
                    return V > 0 ? f : x
                }

                function l(e) {
                    if (0 == e.length) return e;
                    var t = [],
                        r = [],
                        n = [-800, 0];
                    t.push(e[0]);
                    while (1) {
                        for (var h = [-1, 9999, 1], a = 1; a < e.length; a++)
                            if (-1 === r.indexOf(a)) {
                                var i = e[a][0],
                                    c = e[a][e[a].length - 1],
                                    o = Math.abs(n[0] - i[0]) + Math.abs(n[1] - i[1]),
                                    s = Math.abs(n[0] - c[0]) + Math.abs(n[1] - c[1]),
                                    l = Math.min(o, s);
                                h[1] > l && (h[2] = o < s ? 1 : -1, h[0] = a, h[1] = l)
                            } if (-1 == h[0]) break;
                        var p = h[0];
                        r.push(p), -1 == h[2] && e[p].reverse(), n = e[p][e[p].length - 1], t.push(e[p])
                    }
                    return t
                }
                e.exports = {
                    imgToline: function(e, r, i, c) {
                        var o = (new Date).getTime(),
                            p = new n.matrix_t(r, i, n.U8C1_t);
                        n.imgproc.grayscale(e, r, i, p), c.double && function(e) {
                            n.imgproc.gaussian_blur(e, e, 5, 0)
                        }(p);
                        var d = null;
                        c.double ? (n.imgproc.canny(p, p, 50, 103), d = h.zs.main(p.data, r, i, 128)) : d = h.zs.main(p.data, r, i, c.effects2);
                        for (var b = h.extractLinesFromMatrix(d), g = 0, j = function(e) {
                                var t = e / 10 * 4;
                                return t
                            }(c.effects), x = b.length - 1; x >= 0; x--) b[x] = a.FindContours.approxPolyDP(b[x], j), b[x].length < 2 ? b.splice(x, 1) : g += b[x].length;
                        var V = function(e, r) {
                            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 600,
                                h = 2,
                                a = -9999,
                                i = 9999,
                                c = -9999,
                                o = 9999;
                            if (e.centerXY)
                                for (var p = 0; p < r.length; p++)
                                    for (var d = r[p], b = 0; b < d.length; b++) {
                                        var g = d[b][0],
                                            j = d[b][1];
                                        a < g && (a = g), i > g && (i = g), c < j && (c = j), o > j && (o = j)
                                    } else i = 0, a = e.width, o = 0, c = e.height;
                            var x = a - i,
                                V = c - o,
                                f = 1;
                            f = x > V ? n / x : n / V;
                            for (var F = x / 2, k = V / 2, m = n / 2, P = n / 2, u = [], X = 0; X < r.length; X++) {
                                for (var N = r[X], H = [], z = [], Q = 0; Q < N.length; Q++) {
                                    var R = N[Q][0],
                                        v = N[Q][1],
                                        I = (R - F - i) * f + m,
                                        w = (v - k - o) * f + P;
                                    if (0 != z.length && Math.abs(z[0] - I) + Math.abs(z[1] - w) < h) {
                                        if (Q != N.length - 1) continue;
                                        H.pop()
                                    }
                                    var y = s(e, R, v);
                                    H.push([I, w, y, 1]), z = [I, w]
                                }
                                u.push(H)
                            }
                            t("log", "newLines", u, " at sub/pages/utils/autopst.js:218");
                            var C = l(u);
                            return C
                        }({
                            data: e,
                            width: r,
                            height: i,
                            centerXY: c.centerXY
                        }, b, c.lineSize);
                        return t("log", "time cost:", ((new Date).getTime() - o) / 1e3, "linesCount:", V.length, "pointCount:", g, " at sub/pages/utils/autopst.js:254"), {
                            lines: V,
                            double: c.double
                        }
                    }
                }
            }).call(this, r("f3b9")["default"])
        },
        7854: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("ac2c"),
                h = r("f48d");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        7943: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("placeholderComponent"),
                h = r("d8a6");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        "794a": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("e2c2"),
                h = r("362f");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        7978: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("8d15"),
                h = r("bb3d");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, "de445fbe", null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        "79fe": function(e) {
            e.exports = JSON.parse('{"\u8fde\u63a5\u84dd\u7259":"Bluetooth verbinden","\u968f\u673a\u64ad\u653e":"Zuf\xe4llig","\u5df2\u8fde\u63a5":"Verbunden","\u672a\u8fde\u63a5":"Nicht verbunden","\u6237\u5916\u64ad\u653e":"Drau\xdfen","\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570...":"Lese Ger\xe4teparameter","\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25":"Fehler beim Lesen der Ger\xe4teparameter","\u91cd\u65b0\u5237\u65b0\u5217\u8868":"Liste erneut aktualisieren","\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62":"Suche / Stoppen","\u641c\u7d22\u84dd\u7259\u8bbe\u5907":"Suche","\u5df2\u53d1\u73b0":"Gefunden","\u7ea2":"Rot","\u7eff":"Gr\xfcn","\u84dd":"Blau","\u9ec4":"Gelb","\u9752":"Cyan","\u7d2b":"Lila","\u767d":"Wei\xdf","\u8df3\u53d8":"Sprung","\u5168\u5f69":"RGB","\u64ad\u653e\u6a21\u5f0f":"Spielen","\u81ea\u8d70":"Auto","\u58f0\u63a7":"Musik","\u81ea\u8d70\u901f\u5ea6":"Geschw.","\u58f0\u63a7\u7075\u654f\u5ea6":"Sprach.","\u56fe\u6848\u989c\u8272":"Muster","\u5f53\u524d\u989c\u8272":"Aktuell","\u5faa\u73af\u64ad\u653e":"Schleife","\u52fe\u9009\u64ad\u653e":"Ernennung","\u5730\u5740\u7801":"Adresse","\u663e\u793a\u8303\u56f4":"Bereich","\u56fe\u6848\u76f8\u4f4d":"Phase","\u6b63\u5e38\u663e\u793a":"Normal","XY\u4e92\u6362":"Tauschen","\u8c03\u5149\u8bbe\u7f6e":"Dimmeinstellungen","\u7ea2\u5149\u8c03\u5149":"Rot","\u7eff\u5149\u8c03\u5149":"Gr\xfcn","\u84dd\u5149\u8c03\u5149":"Blau","\u6fc0\u5149\u5149\u6e90":"Laser","\u5355\u8272":"Ein.","\u53cc\u8272":"Zwe.","\u8c03\u5236\u6a21\u5f0f":"Muster","\u7cfb\u7edf\u8bed\u8a00":"Sprache","\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...":"Lese Schriftarten","\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9...":"Erzeuge Koordinaten...","\u6587\u672c\u989c\u8272":"Textfarbe","\u6587\u5b57\u5927\u5c0f":"Textgr\xf6\xdfe","\u663e\u793a\u89c6\u8ddd":"Entfernung","\u6d41\u6c34\u901f\u5ea6":"Str\xf6mung","\u6295\u5c04\u65b9\u5411":"Richtung","\u6c34\u5e73\u6295\u5c04":"Horizontal","\u5782\u76f4\u6295\u5c04":"Vertikal","\u8d85\u51fa\u6700\u5927\u70b9\u6570":"Maximale Punkte","\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931":"\xdcbersch\xfcssige Teile werden verloren gehen","\u7ebf\u6761\u989c\u8272":"Linienfarbe","\u6e05\u7a7a":"Leeren","\u56de\u9000":"Zur\xfcck","\u53d1\u9001":"Senden","\u6700\u591a20\u4e2a\u573a\u666f":"Bis zu 20 Szenen","\u63d0\u793a":"Hinweis","\u662f\u5426\u5220\u9664\u573a\u666f":"M\xf6chten Sie die Szene l\xf6schen ","\u7528\u6237\u70b9\u51fb\u53d6\u6d88":"Benutzer klickt auf Abbrechen","-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"--Die Szenenliste ist leer--","\u573a\u666f":"Szene","\u79d2":"Sek.","\u5220\u9664":"L\xf6schen","\u7f16\u8f91":"Bearbeiten","\u65b0\u589e\u573a\u666f":"Neue Szene erstellen","\u56fe\u6848\u9009\u62e9":"Muster","\u76f4\u7ebf\u7c7b\u56fe\u6848":"Linear","\u5706\u5f27\u7c7b\u56fe\u6848":"Kreisbogen","\u4eae\u70b9\u56fe\u6848":"H\xf6hepunkt","\u6253\u70b9\u56fe\u6848":"Punkt","\u5723\u8bde\u56fe\u6848":"Weihnachten","\u52a8\u753b\u7ec4\u522b1":"Animation 1","\u52a8\u753b\u7ec4\u522b2":"Animation 2","\u52a8\u753b\u7ec4\u522b3":"Animation 3","\u52a8\u753b\u7ec4\u522b4":"Animation 4","\u52a8\u753b\u7ec4\u522b5":"Animation 5","\u767d\u8272":"Wei\xdf","\u7ea2\u8272":"Rot","\u84dd\u8272":"Blau","\u7c89\u8272":"Pink","\u9752\u8272":"Cyan","\u9ec4\u8272":"Gelb","\u7eff\u8272":"Gr\xfcn","\u6574\u4f53\u989c\u8272\u6362\u8272":"Gesamt","\u4e03\u5f69\u8679\u989c\u8272":"Regenbogen","2\u5206\u6bb5\u989c\u8272":"2 Segmentiert","3\u5206\u6bb5\u989c\u8272":"3 Segmentiert","4\u5206\u6bb5\u989c\u8272":"4 Segmentiert","8\u5206\u6bb5\u989c\u8272":"8 Segmentiert","16\u5206\u6bb5\u989c\u8272":"16 Segmentiert","32\u5206\u6bb5\u989c\u8272":"32 Segmentiert","\u989c\u8272\u6e10\u7ed8":"Farbverlauf","\u4e0d\u6d41\u6c34":"Kein Flie\xdfen","\u6b63\u5411\u6d41\u6c34":"Vorw\xe4rtsfluss","\u53cd\u5411\u6d41\u6c34":"R\xfcckw\xe4rtsfluss","\u56fe\u6848\u5927\u5c0f":"Mustergr\xf6\xdfe","\u7f29\u653e\u624b\u52a8\u9009\u62e9":"Zoom manuell","\u7531\u5c0f\u5230\u5927\u7f29\u653e":"Klein zu Gro\xdf","\u7531\u5927\u5230\u5c0f\u7f29\u653e":"Gro\xdf zu Klein","\u5927\u5c0f\u5faa\u73af\u7f29\u653e":"Gr\xf6\xdfen-Skalierung","\u4e0d\u89c4\u5219\u7f29\u653e\u4e00":"Unrege. Zoom 1","\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c":"Unrege. Zoom 2","\u4e0d\u89c4\u5219\u7f29\u653e\u4e09":"Unrege. Zoom 3","\u65cb\u8f6c\u89d2\u5ea6":"Winkel","\u6b63\u65cb\u8f6c\u901f\u5ea6":"Positiv","\u53cd\u65cb\u8f6c\u901f\u5ea6":"R\xfcckw\xe4rts","\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e":"H Position","\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6":"H Geschwindigkeit","\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e":"V Position","\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6":"V Geschwindigkeit","\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c":"H Rotation","\u6c34\u5e73\u79fb\u52a8":"H Bew.","\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c":"V Rot.","\u5782\u76f4\u79fb\u52a8":"V Bew.","\u65e0\u6ce2\u6d6a":"Keine Wellen","\u6ce2\u6d6a\u5e45\u5ea61":"Welle 1","\u6ce2\u6d6a\u5e45\u5ea62":"Welle 2","\u6ce2\u6d6a\u5e45\u5ea63":"Welle 3","\u6ce2\u6d6a\u5e45\u5ea64":"Welle 4","\u6ce2\u6d6a\u5e45\u5ea65":"Welle 5","\u6ce2\u6d6a\u5e45\u5ea66":"Welle 6","\u6ce2\u6d6a\u5e45\u5ea67":"Welle 7","\u6ce2\u6d6a\u5e45\u5ea68":"Welle 8","\u65e0\u6e10\u7ed8":"Kein Verlauf","\u624b\u52a8\u6e10\u7ed81":"Manuell 1","\u624b\u52a8\u6e10\u7ed82":"Manuell 2","\u81ea\u52a8\u6e10\u7ed81":"Automatisch 1","\u81ea\u52a8\u6e10\u7ed82":"Automatisch 2","\u81ea\u52a8\u6e10\u7ed83":"Automatisch 3","\u81ea\u52a8\u6e10\u7ed84":"Automatisch 4","\u56fe\u5f62\u5206\u7ec4":"Gruppe","\u56fe\u5f62":"Grafik","\u989c\u8272":"Farbe","\u989c\u8272\u6d41\u6c34":"Flie\xdfende","\u56fe\u5f62\u5927\u5c0f":"Gr\xf6\xdfen","\u56fe\u5f62\u7f29\u653e":"Zoom","\u56fe\u5f62\u65cb\u8f6c":"Rotation","\u6c34\u5e73\u7ffb\u8f6c":"H Flip","\u5782\u76f4\u7ffb\u8f6c":"V Flip","\u6ce2\u6d6a":"Welle","\u6e10\u7ed8":"Verlauf","\u64ad\u653e\u65f6\u957f":"Zeit","\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62...":"Lade ...","\u53d6\u6d88":"Abbr.","\u786e\u5b9a":"Best\xe4tigen","\u9009\u62e9\u56fe\u5f62":"Grafisch","\u901a\u9053\u590d\u4f4d":"Zur\xfcc.","\u5b8b\u4f53":"Songt","\u76f4\u7ebf":"Linie","\u5706\u5f27":"Bogen","\u4eae\u70b9":"Punkt","\u6253\u70b9":"Verwalten","\u5723\u8bde":"Weihna.","\u52a8\u753bA":"AnimA","\u52a8\u753bB":"AnimB","\u5f69\u8679":"Rege.","\u9ed8\u8ba4":"Standard","\u8f6f\u4ef6\u7248\u672c":"Version","\u8fde\u63a5":"Verbinden","\u8bbe\u7f6e":"Einstellungen","\u624b\u7ed8\u6d82\u9e26":"Zeichnung","\u6587\u672c\u64ad\u653e":"Text","\u4e2a\u6027\u7f16\u7a0b":"Programm","\u52a8\u753b\u64ad\u653e":"Animation","\u7ebf\u6761\u64ad\u653e":"Linie","\u5723\u8bde\u64ad\u653e":"Weihnachten","DMX":"DMX","\u914d\u7f6e":"Justieren","\u8fd4\u56de":"Zur\xfcck","\u70b9\u6211\u8fde\u63a5":"Bluetooth verbinden","\u84dd\u7259\u672a\u8fde\u63a5":"Nicht verbunden","\u8bbe\u5907":"Ger\xe4t","\u8bf7\u8f93\u5165\u6587\u5b57":"Bitte Text eingeben","\u9884\u7559\u65e0\u529f\u80fd":"Reserviert","\u91cd\u7f6e":"Zur\xfccksetzen","\u84dd\u7259\u8fde\u63a5":"Bluetooth-Verbindung","\u5168\u9009":"Ganz","\u53cd\u9009":"Umk.","\u6e05\u9664":"L\xf6s.","\u5b57\u6570":"Text","\u70b9\u6570":"Punkte","\u9884\u89c8":"Vorschau","\u573a\u666f\u7ba1\u7406":"Szenenverwaltung","\u52a0\u8f7d\u4e2d":"Wird geladen","\u573a\u666f\u7f16\u8f91":"Szenenbearbeitung","\u8bf7\u5148\u8fde\u63a5\u84dd\u7259":"Bitte verbinden Sie zuerst Bluetooth","\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b":"Das aktuelle Ger\xe4t wird nicht erkannt","DMX\u5730\u5740\u7801":"DMX-Adresse","\u8bf7\u5148\u6253\u5f00\u8bbe\u5907":"Bitte schalten Sie das Ger\xe4t zuerst ein","\u5355\u7ebf\u5b57\u4f53":"Einfach","\u6b63\u5728\u53d1\u9001":"Wird gesendet","\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528":"Bitte \xfcberpr\xfcfen Sie, ob Bluetooth auf Ihrem Telefon aktiviert ist","\u8be5\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587\u663e\u793a":"Diese Schriftart unterst\xfctzt keine chinesische Anzeige","\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c":"Aufgrund von Kapazit\xe4tsbeschr\xe4nkungen wurden einige chinesische Schriftzeichen nicht in die Schriftbibliothek aufgenommen. Bitte gehen Sie zur APP-Version f\xfcr eine vollst\xe4ndige Schriftbibliothek","\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650":"Bitte stellen Sie die Standortberechtigungen der App ein","\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650":"Bitte stellen Sie die Bluetooth-Berechtigungen f\xfcr das Mini-Programm ein","\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38":"Abnormales Lesen der Ger\xe4teparameter","\u9009\u62e9":"Ausw\xe4hlen","\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247":"Hintergrundbild einstellen","\u53d1\u9001\u5931\u8d25":"Senden fehlgeschlagen","\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165":"Die Textl\xe4nge hat 100 \xfcberschritten, bitte geben Sie den Text erneut ein","\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165":"Die Anzahl der Textkoordinatenpunkte hat 2048 \xfcberschritten, bitte geben Sie den Text erneut ein","\u7b2c":"Nr.","\u7ec4\u6587\u5b57":"Gruppe","\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5":"Bitte \xe4ndern Sie die Schriftart oder den Text und versuchen Sie es erneut","\u4e0d\u652f\u6301\u6587\u672c":"Nicht unterst\xfctzt","\u7ec4\u5b57\u4f53":"Schriftart der Gruppe","\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u53d1\u9001":"Gruppentext ist leer, bitte eingeben und dann senden","\u662f\u5426\u5220\u9664\u7b2c":"L\xf6schen Nr.","\u7ec4":"Gruppe","\u6700\u591a4\u4e2a\u5206\u7ec4":"Maximal 4 Gruppen","\u6b63\u5728\u8fde\u63a5...":"Wird verbunden...","\u8fde\u63a5\u5931\u8d25":"Verbindung fehlgeschlagen","\u5b57\u4f53\u9009\u62e9":"Schriftart ausw\xe4hlen","\u601d\u6e90\u9ed1\u4f53":"NotoSans","\u601d\u6e90\u9ed1\u4f531":"NotoSans1","\u601d\u6e90\u9ed1\u4f532":"NotoSans2","\u601d\u6e90\u9ed1\u4f533":"NotoSans3","\u601d\u6e90\u9ed1\u4f534":"NotoSans4","\u601d\u6e90\u9ed1\u4f535":"NotoSans5","\u601d\u6e90\u9ed1\u4f536":"NotoSans6","\u601d\u6e90\u9ed1\u4f537":"NotoSans7","font_note_1001":"Chinesisch, Englisch, Spanisch, Portugiesisch, Deutsch, Franz\xf6sisch","font_note_1002":"Englisch, Spanisch, Russisch, Portugiesisch, Deutsch, Franz\xf6sisch, Vietnamesisch, Hindi, Bengali","font_note_1003":"Englisch, Chinesisch, Spanisch, Russisch, Portugiesisch, Japanisch, Deutsch","font_note_1004":"Chinesisch, Englisch, Spanisch, Portugiesisch, Deutsch, Franz\xf6sisch","font_note_1005":"Englisch, Chinesisch","font_note_1006":"Englisch, Japanisch, Koreanisch","font_note_1007":"Arabisch","\u4fdd\u7559":"Reserviert","\u56fe\u6848\u521d\u59cb\u989c\u8272":"Initialfarbe","\u6df7\u8272":"Mischen","\u7b14\u753b\u5c11\uff0c\u65e0\u95ea\u70c1\uff0c\u63a8\u8350\u4f7f\u7528":"Empfohlen, bessere Leistung","\u5df2\u65ad\u5f00\u8fde\u63a5":"Verbindung getrennt","\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c":"Bitte einen Wert im Bereich von 1-255 eingeben","\u6587\u5b57\u7cbe\u5ea6":"Text-Effekte","\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6":"Effekte","\u7cbe\u5ea6":"Effekte","\u9009\u62e9\u56fe\u7247":"Wahl","\u8bbe\u4e3a\u80cc\u666f":"Hintergrund","\u8bc6\u522b\u56fe\u6848":"Extrakt","\u63cf\u8fb9":"Kontur","\u6b63\u5728\u5904\u7406\u4e2d":"Wird bearbeitet","\u5f53\u524d\u673a\u578b":"Modell","hand_draw_tips":" ** Bitte wischen Sie vom leeren Bereich zum Zielmuster, um auszuw\xe4hlen.\\n ** Sie k\xf6nnen Operationen wie Zoomen, Verschieben, Farbanpassungen und L\xf6schen auf dem ausgew\xe4hlten Muster durchf\xfchren.","\u4e0d\u518d\u63d0\u793a":"Nie wieder anzeigen","out_door_tips1":"1-30 Wahrzeichen","out_door_tips2":"31-40 Nordlichter","out_door_tips3":"41-50 Zeit-Tunnel","\u6587\u4ef6\u540d":"Dateiname","\u4fdd\u5b58\u6587\u4ef6":"Datei speichern","\u9009\u62e9\u6587\u4ef6":"Datei ausw\xe4hlen","\u8bf7\u8f93\u5165\u6587\u4ef6\u540d":"Dateinamen","\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d":"Neuer Dateiname","\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a":"Dateiname darf nicht leer sein","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165":"Datei existiert bereits, bitte erneut eingeben","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed":"Datei existiert bereits, fortfahren?","\u4fdd\u5b58\u6210\u529f":"Speichern erfolgreich","\u4fdd\u5b58\u5931\u8d25":"Speichern fehlgeschlagen","\u4fee\u6539\u6210\u529f":"\xc4nderung erfolgreich","\u4fee\u6539\u5931\u8d25":"\xc4nderung fehlgeschlagen","\u5220\u9664\u6210\u529f":"L\xf6schen erfolgreich","\u5220\u9664\u5931\u8d25":"L\xf6schen fehlgeschlagen","\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301":"Das aktuelle Modell wird nicht unterst\xfctzt","text_time_range":"Bereich 1-25.5","\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848":"Erkennung fehlgeschlagen","\u8bf7\u9009\u62e9\u6587\u4ef6":"Bitte Datei ausw\xe4hlen","\u6587\u4ef6\u6570":"Dateien","\u53e6\u5b58\u6587\u4ef6":"Speichern unter","\u5220\u9664\u6240\u9009\u6587\u4ef6":"Ausgew\xe4hlte Dateien l\xf6schen","Select-File":"Ausw.","\u6447\u5934\u8bbe\u7f6e":"Bewegungseinstellungen","\u6447\u5934\u6a21\u5f0f":"Modus","\u6447\u5934\u76f8\u4f4d":"Phase","\u81ea\u52a8":"Automatisch","\u624b\u52a8":"Manuell","X\u7c97\u8c03":"X Grob.","X\u7ec6\u8c03":"X Fein.","Y\u7c97\u8c03":"Y Grob.","Y\u7ec6\u8c03":"Y Fein.","\u6c34\u5e73\u7535\u673a":"H Motor","\u6c34\u5e73\u5fae\u8c03":"H Fein.","\u5782\u76f4\u7535\u673a":"V Motor","\u5782\u76f4\u5fae\u8c03":"V Fein.","\u7535\u673a\u901f\u5ea6":"Gesch.","\u6d41\u6c34\u65b9\u5411":"Richtung","\u963f\u62c9\u4f2f\u8bed\u65b9\u5411":"Arabisch","\u9ed8\u8ba4\u65b9\u5411":"Standard","\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939":"In Ordner speichern","\u9009\u62e9\u5217\u8868":"Liste","\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0":"Gruppenname","\u64ad\u653e\u5217\u8868":"Wiedergabeliste","\u4fdd\u5b58":"Speichern","\u6dfb\u52a0":"Hinzuf\xfcgen","\u6279\u91cf\u8bbe\u7f6e":"Menge","\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0":"Listenname","ALL":"Alle","\u5217\u8868\u7f16\u8f91":"Listenbearbeitung","\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57":"Bitte eine Zahl zwischen 0.1 und 25.5 eingeben","\u6dfb\u52a0\u81f3\u65b0\u5217\u8868":"Neue Liste","\u7acb\u5373\u64ad\u653e":"Abspielen","\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed":"Die entsprechende Wiedergabeliste wird gel\xf6scht, fortfahren","-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- Liste ist leer --"}')
        },
        "7aa1": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("9573"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "7ca3": function(e, t, r) {
            var n = r("d551");
            e.exports = function(e, t, r) {
                return t = n(t), t in e ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r, e
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        "7e7e": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("view", [n("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [n("navigation-bar", {
                        attrs: {
                            title: e.ntitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), n("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [n("view", [n("view", [n("scroll-view", {
                        attrs: {
                            id: "scroll_view",
                            "scroll-top": e._$s(6, "a-scroll-top", e.scrollTop),
                            _i: 6
                        },
                        on: {
                            scroll: e.onscroll
                        }
                    }, [e._$s(7, "i", 0 == e.pisList.length) ? n("view", {
                        attrs: {
                            _i: 7
                        }
                    }, [n("text", [e._v(e._$s(8, "t0-0", e._s(e.$t("-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --"))))])]) : e._l(e._$s(9, "f", {
                        forItems: e.pisList
                    }), (function(t, r, h, a) {
                        return n("view", {
                            key: e._$s(9, "f", {
                                forIndex: h,
                                key: r
                            }),
                            staticClass: e._$s("9-" + a, "sc", "display-btn-group"),
                            attrs: {
                                _i: "9-" + a
                            }
                        }, [n("view", [n("label", {
                            staticClass: e._$s("11-" + a, "sc", "display-btn-lable"),
                            attrs: {
                                _i: "11-" + a
                            }
                        }, [e._v(e._$s("11-" + a, "t0-0", e._s(e.$t("\u573a\u666f"))) + e._$s("11-" + a, "t0-1", e._s(r)))]), n("view", {
                            style: e._$s("12-" + a, "s", (e.rtl ? "align-items: flex-end; justify-content: flex-end; margin-left: 20rem;" : "align-items: flex-end; justify-content: flex-end; margin-right: 20rem;") + "display: flex;flex: 1; "),
                            attrs: {
                                _i: "12-" + a
                            }
                        }, [n("label", {
                            style: e._$s("13-" + a, "s", (e.rtl ? "margin-right: 30rem; " : "margin-left: 30rem; ") + "font-size: 30rem; color: #928F9F;"),
                            attrs: {
                                _i: "13-" + a
                            }
                        }, [e._v(e._$s("13-" + a, "t0-0", e._s(e.$t("\u64ad\u653e\u65f6\u957f"))))]), n("input", {
                            staticClass: e._$s("14-" + a, "sc", "time-input"),
                            attrs: {
                                value: e._$s("14-" + a, "a-value", t.playTime),
                                "data-tag": e._$s("14-" + a, "a-data-tag", r),
                                _i: "14-" + a
                            },
                            on: {
                                input: e.timeInput,
                                blur: e.onInputBlur
                            }
                        }), n("text", [e._v(e._$s("15-" + a, "t0-0", e._s(e.$t("\u79d2"))))])])]), n("view", [n("view", {
                            staticClass: e._$s("17-" + a, "sc", "opr-btn-img"),
                            style: e._$s("17-" + a, "s", (e.rtl ? "margin-right: 40rem; " : "margin-left: 40rem; ") + "width: 30rem; height: 30rem;"),
                            attrs: {
                                _i: "17-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.oprDelete(r)
                                }
                            }
                        }), n("view", {
                            staticClass: e._$s("18-" + a, "sc", "btn-view-style"),
                            attrs: {
                                _i: "18-" + a
                            }
                        }, [n("view", {
                            staticClass: e._$s("19-" + a, "sc", "opr-btn"),
                            attrs: {
                                _i: "19-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.oprEdit(r)
                                }
                            }
                        }, [e._v(e._$s("19-" + a, "t0-0", e._s(e.$t("\u7f16\u8f91"))))])])])])
                    }))], 2), n("view", {
                        staticClass: e._$s(20, "sc", "item-class"),
                        attrs: {
                            _i: 20
                        }
                    }, [n("view", {
                        staticClass: e._$s(21, "sc", "opr-new"),
                        attrs: {
                            _i: 21
                        },
                        on: {
                            click: e.oprNew
                        }
                    }, [e._v(e._$s(21, "t0-0", e._s(e.$t("\u65b0\u589e\u573a\u666f"))))])])])]), e._$s(22, "i", e.features.xyCnf) ? n("button", {
                        staticClass: e._$s(22, "sc", "floating-button"),
                        style: e._$s(22, "s", {
                            left: e.position.x + "px",
                            top: e.position.y + "px"
                        }),
                        attrs: {
                            _i: 22
                        },
                        on: {
                            touchstart: e.onBtnSetTouchStart,
                            touchmove: e.onBtnSetTouchMove,
                            touchend: e.onBtnSetTouchEnd,
                            click: e.onBtnSetClick
                        }
                    }, [n("image", {
                        attrs: {
                            src: e._$s(23, "a-src", r("18cf")),
                            _i: 23
                        }
                    })]) : e._e()])], 1)
                },
                a = []
        },
        "811d": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default,
                    uniPopup: r("762b").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("view", [n("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [n("navigation-bar", {
                        attrs: {
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            title: e.ntitle,
                            _i: 2
                        }
                    })], 1), n("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [n("view", [n("view", [n("view", {
                        staticClass: e._$s(6, "sc", "display-color-group"),
                        attrs: {
                            _i: 6
                        }
                    }, [n("view", e._l(3, (function(t, r, h, a) {
                        return n("view", {
                            key: r,
                            staticClass: e._$s("8-" + a, "sc", "btn-color-group"),
                            attrs: {
                                _i: "8-" + a
                            }
                        }, e._l(3, (function(t, h, i, c) {
                            return n("view", {
                                key: h
                            }, [e._$s("10-" + a + "-" + c, "i", 3 * r + h <= 8) ? [n("view", {
                                staticClass: e._$s("11-" + a + "-" + c, "sc", "btn-view-style"),
                                attrs: {
                                    "data-tag": e._$s("11-" + a + "-" + c, "a-data-tag", e.colorDisplayOrder[3 * r + h].idx),
                                    _i: "11-" + a + "-" + c
                                },
                                on: {
                                    click: e.btnColorChange
                                }
                            }, [n("view", {
                                staticClass: e._$s("12-" + a + "-" + c, "sc", "btn-view-sub"),
                                attrs: {
                                    _i: "12-" + a + "-" + c
                                }
                            }, [e._$s("13-" + a + "-" + c, "i", 3 * r + h < 7) ? n("view", {
                                staticClass: e._$s("13-" + a + "-" + c, "sc", "btn-view-color"),
                                style: e._$s("13-" + a + "-" + c, "s", "background-color: " + e.colorDisplayOrder[3 * r + h].color + ";"),
                                attrs: {
                                    _i: "13-" + a + "-" + c
                                }
                            }) : e._e(), n("label", {
                                staticClass: e._$s("14-" + a + "-" + c, "sc", "btn-color-text"),
                                attrs: {
                                    _i: "14-" + a + "-" + c
                                }
                            }, [e._v(e._$s("14-" + a + "-" + c, "t0-0", e._s(e.$t(e.colorDisplayOrder[3 * r + h].name))))])])]), n("view", {
                                directives: [{
                                    name: "show",
                                    rawName: "v-show",
                                    value: e._$s("15-" + a + "-" + c, "v-show", e.textData.txColor == e.colorDisplayOrder[3 * r + h].idx),
                                    expression: "_$s((\"15-\"+$30+'-'+$31),'v-show',textData.txColor == colorDisplayOrder[i * 3 + n].idx)"
                                }],
                                staticClass: e._$s("15-" + a + "-" + c, "sc", "btn-color-title"),
                                attrs: {
                                    _i: "15-" + a + "-" + c
                                }
                            })] : e._e()], 2)
                        })), 0)
                    })), 0)]), n("view", [n("view", {
                        staticClass: e._$s(17, "sc", "display-text-input"),
                        attrs: {
                            _i: 17
                        }
                    }, [n("view", {
                        attrs: {
                            _i: 18
                        },
                        on: {
                            click: e.fontSelect
                        }
                    }, [n("view", {
                        staticClass: e._$s(19, "sc", "fun-radio"),
                        style: e._$s(19, "s", e.rtl ? "justify-content: right;" : ""),
                        attrs: {
                            _i: 19
                        }
                    }, [n("image", {
                        attrs: {
                            _i: 20
                        }
                    }), n("text", [e._v(e._$s(21, "t0-0", e._s(e.fontNameList[e.fontIdex] ? e.$t(e.fontNameList[e.fontIdex].name) : "")))])])]), n("view", {
                        style: e._$s(22, "s", (e.rtl ? "margin-left: 10rem; " : "margin-right: 10rem; ") + "display: flex; align-items: center; justify-content: center; width: 50rem; height: 50rem; border-radius: 25rem;"),
                        attrs: {
                            _i: 22
                        },
                        on: {
                            click: e.fileAddClick
                        }
                    }, [n("image", {
                        attrs: {
                            _i: 23
                        }
                    })]), n("input", {
                        staticClass: e._$s(24, "sc", "text-input"),
                        style: e._$s(24, "s", e.rtl ? "text-align: right;" : ""),
                        attrs: {
                            focus: e._$s(24, "a-focus", e.textInput),
                            placeholder: e._$s(24, "a-placeholder", e.inputNote),
                            value: e._$s(24, "a-value", e.textData.groupList[e.textData.groupIdex].text),
                            _i: 24
                        },
                        on: {
                            input: e.inputEvent
                        }
                    }), e._$s(25, "i", !e.features.textModeFix01) ? n("view", {
                        style: e._$s(25, "s", (e.rtl ? "margin-right: 10rem;" : "margin-left: 10rem;") + "display: flex; justify-content: center; align-items: center;"),
                        attrs: {
                            _i: 25
                        },
                        on: {
                            click: e.addGroup
                        }
                    }, [n("label")]) : e._e()]), n("view", [n("canvas", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e._$s(28, "v-show", e.canvasShow),
                            expression: "_$s(28,'v-show',canvasShow)"
                        }],
                        attrs: {
                            id: "myCanvas",
                            _i: 28
                        }
                    })]), n("view", {
                        staticClass: e._$s(29, "sc", "display-text-group"),
                        attrs: {
                            _i: 29
                        }
                    }, [n("uni-popup", {
                        ref: "popupTime",
                        attrs: {
                            "mask-click": !0,
                            animation: !0,
                            _i: 30
                        }
                    }, [n("view", [n("view", [n("button", {
                        attrs: {
                            _i: 33
                        },
                        on: {
                            click: function(t) {
                                return e.changeTimeClick(-1, e.popupTimeIndex)
                            }
                        }
                    }), e._$s(34, "i", !e.features.textDecimalTime) ? n("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.textData.groupList[e.popupTimeIndex].time,
                            expression: "textData.groupList[popupTimeIndex].time"
                        }],
                        staticClass: e._$s(34, "sc", "popup-input"),
                        attrs: {
                            _i: 34
                        },
                        domProps: {
                            value: e._$s(34, "v-model", e.textData.groupList[e.popupTimeIndex].time)
                        },
                        on: {
                            blur: function(t) {
                                return e.onTimeBlur(e.popupTimeIndex)
                            },
                            input: function(t) {
                                t.target.composing || e.$set(e.textData.groupList[e.popupTimeIndex], "time", t.target.value)
                            }
                        }
                    }) : e._e(), e._$s(35, "i", e.features.textDecimalTime) ? n("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.textData.groupList[e.popupTimeIndex].time,
                            expression: "textData.groupList[popupTimeIndex].time"
                        }],
                        staticClass: e._$s(35, "sc", "popup-input"),
                        attrs: {
                            _i: 35
                        },
                        domProps: {
                            value: e._$s(35, "v-model", e.textData.groupList[e.popupTimeIndex].time)
                        },
                        on: {
                            blur: function(t) {
                                return e.onTimeBlur(e.popupTimeIndex)
                            },
                            input: function(t) {
                                t.target.composing || e.$set(e.textData.groupList[e.popupTimeIndex], "time", t.target.value)
                            }
                        }
                    }) : e._e(), n("button", {
                        attrs: {
                            _i: 36
                        },
                        on: {
                            click: function(t) {
                                return e.changeTimeClick(1, e.popupTimeIndex)
                            }
                        }
                    })])])]), e._l(e._$s(37, "f", {
                        forItems: e.textData.groupList
                    }), (function(t, r, h, a) {
                        return n("view", {
                            key: e._$s(37, "f", {
                                forIndex: h,
                                key: r
                            }),
                            staticClass: e._$s("37-" + a, "sc", "display-text-group-item"),
                            style: e._$s("37-" + a, "s", r == e.textData.groupIdex ? "background-color: #0164D6;" : ""),
                            attrs: {
                                _i: "37-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.oprEdit(r)
                                }
                            }
                        }, [n("label", {
                            staticClass: e._$s("38-" + a, "sc", "display-btn-lable"),
                            style: e._$s("38-" + a, "s", r == e.textData.groupIdex ? "color: black;" : ""),
                            attrs: {
                                _i: "38-" + a
                            }
                        }, [e._v(e._$s("38-" + a, "t0-0", e._s(e.$t("\u7b2c") + (r + 1) + e.$t("\u7ec4\u6587\u5b57"))))]), n("view", [n("text", [e._v(e._$s("40-" + a, "t0-0", e._s(t.text.length > e.maxStrCount ? t.text.substring(0, e.maxStrCount - 1) + "..." : t.text)))])]), n("view", {
                            attrs: {
                                _i: "41-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.setTimeInput(r)
                                }
                            }
                        }, [n("label", {
                            staticClass: e._$s("42-" + a, "sc", "display-btn-lable"),
                            style: e._$s("42-" + a, "s", "width: auto; " + (r == e.textData.groupIdex ? "color: black;" : "")),
                            attrs: {
                                _i: "42-" + a
                            }
                        }, [e._v(e._$s("42-" + a, "t0-0", e._s(e.$t("\u64ad\u653e\u65f6\u957f"))))]), n("label", {
                            staticClass: e._$s("43-" + a, "sc", "time-input"),
                            attrs: {
                                _i: "43-" + a
                            }
                        }, [e._v(e._$s("43-" + a, "t0-0", e._s(e.textTime[r])))]), n("label", {
                            staticClass: e._$s("44-" + a, "sc", "display-btn-lable"),
                            style: e._$s("44-" + a, "s", "width: auto; " + (r == e.textData.groupIdex ? "color: black;" : "")),
                            attrs: {
                                _i: "44-" + a
                            }
                        }, [e._v(e._$s("44-" + a, "t0-0", e._s(e.$t("\u79d2"))))])]), n("view", {
                            class: e._$s("45-" + a, "c", 1 == e.textData.groupList.length ? "" : "opr-btn-img"),
                            attrs: {
                                _i: "45-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.deleteGroup(r)
                                }
                            }
                        })])
                    }))], 2)]), n("view", [e._$s(47, "i", e.features.textStopTime) ? n("view", {
                        staticClass: e._$s(47, "sc", "display-btn-group"),
                        attrs: {
                            _i: 47
                        }
                    }, [n("label", {
                        staticClass: e._$s(48, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 48
                        }
                    }, [e._v(e._$s(48, "t0-0", e._s(e.$t("\u6587\u5b57\u7cbe\u5ea6"))))]), n("slider", {
                        staticClass: e._$s(49, "sc", "fun-slider"),
                        attrs: {
                            value: e._$s(49, "a-value", e.textData.txPointTime),
                            _i: 49
                        },
                        on: {
                            change: e.slPointTimeChange
                        }
                    })]) : e._e(), e._$s(50, "i", !e.features.textModeFix01) ? n("view", {
                        staticClass: e._$s(50, "sc", "display-btn-group"),
                        attrs: {
                            _i: 50
                        }
                    }, [n("label", {
                        staticClass: e._$s(51, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 51
                        }
                    }, [e._v(e._$s(51, "t0-0", e._s(e.$t("\u6587\u5b57\u5927\u5c0f"))))]), n("slider", {
                        staticClass: e._$s(52, "sc", "fun-slider"),
                        attrs: {
                            value: e._$s(52, "a-value", e.textData.txSize),
                            _i: 52
                        },
                        on: {
                            change: e.slTxSizeChange
                        }
                    })]) : e._e(), n("view", {
                        staticClass: e._$s(53, "sc", "display-btn-group"),
                        attrs: {
                            _i: 53
                        }
                    }, [n("text", {
                        staticClass: e._$s(54, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 54
                        }
                    }, [e._v(e._$s(54, "t0-0", e._s(e.$t("\u663e\u793a\u89c6\u8ddd"))))]), n("slider", {
                        staticClass: e._$s(55, "sc", "fun-slider"),
                        attrs: {
                            value: e._$s(55, "a-value", e.textData.txDist),
                            _i: 55
                        },
                        on: {
                            change: e.slTxDistChange
                        }
                    })]), n("view", {
                        staticClass: e._$s(56, "sc", "display-btn-group"),
                        attrs: {
                            _i: 56
                        }
                    }, [n("text", {
                        staticClass: e._$s(57, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 57
                        }
                    }, [e._v(e._$s(57, "t0-0", e._s(e.$t("\u6d41\u6c34\u901f\u5ea6"))))]), n("slider", {
                        staticClass: e._$s(58, "sc", "fun-slider"),
                        attrs: {
                            value: e._$s(58, "a-value", e.textData.runSpeed),
                            _i: 58
                        },
                        on: {
                            change: e.slRunSpeedChange
                        }
                    })]), e._$s(59, "i", e.features.arbPlay || e.features.textUpDown) ? n("radio-group", {
                        staticClass: e._$s(59, "sc", "display-btn-group"),
                        attrs: {
                            _i: 59
                        },
                        on: {
                            change: e.radioRunDirectionChange
                        }
                    }, [n("text", {
                        staticClass: e._$s(60, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 60
                        }
                    }, [e._v(e._$s(60, "t0-0", e._s(e.$t("\u6d41\u6c34\u65b9\u5411"))))]), n("label", {
                        staticClass: e._$s(61, "sc", "fun-radio"),
                        attrs: {
                            _i: 61
                        }
                    }, [n("radio", {
                        attrs: {
                            disabled: e._$s(62, "a-disabled", !e.lastSendTxtCmdComplete),
                            checked: e._$s(62, "a-checked", 0 == e.textData.runDir),
                            _i: 62
                        }
                    }), n("image", {
                        attrs: {
                            src: e._$s(63, "a-src", r("2a89")),
                            _i: 63
                        }
                    })]), e._$s(64, "i", e.features.arbPlay) ? n("label", {
                        staticClass: e._$s(64, "sc", "fun-radio"),
                        style: e._$s(64, "s", e.rtl ? "justify-content: right;flex: 1.7;" : "flex: 2.3;"),
                        attrs: {
                            _i: 64
                        }
                    }, [n("radio", {
                        attrs: {
                            disabled: e._$s(65, "a-disabled", !e.lastSendTxtCmdComplete),
                            checked: e._$s(65, "a-checked", 255 == e.textData.runDir),
                            _i: 65
                        }
                    }), n("image", {
                        attrs: {
                            src: e._$s(66, "a-src", r("717a")),
                            _i: 66
                        }
                    }), n("text", {
                        style: e._$s(67, "s", (255 == e.textData.runDir ? "color: #51D1EA;" : "color: #687C8E;") + " font-size: 26rem;"),
                        attrs: {
                            _i: 67
                        }
                    }, [e._v(e._$s(67, "t0-0", e._s(e.$t("\u963f\u62c9\u4f2f\u8bed"))))])]) : e._e(), e._$s(68, "i", e.features.textUpDown) ? n("label", {
                        staticClass: e._$s(68, "sc", "fun-radio"),
                        attrs: {
                            _i: 68
                        }
                    }, [n("radio", {
                        attrs: {
                            disabled: e._$s(69, "a-disabled", !e.lastSendTxtCmdComplete),
                            checked: e._$s(69, "a-checked", 127 == e.textData.runDir),
                            _i: 69
                        }
                    }), n("image", {
                        attrs: {
                            src: e._$s(70, "a-src", r("abb8")),
                            _i: 70
                        }
                    })]) : e._e(), e._$s(71, "i", e.features.textUpDown) ? n("label", {
                        staticClass: e._$s(71, "sc", "fun-radio"),
                        attrs: {
                            _i: 71
                        }
                    }, [n("radio", {
                        attrs: {
                            disabled: e._$s(72, "a-disabled", !e.lastSendTxtCmdComplete),
                            checked: e._$s(72, "a-checked", 128 == e.textData.runDir),
                            _i: 72
                        }
                    }), n("image", {
                        attrs: {
                            src: e._$s(73, "a-src", r("179d")),
                            _i: 73
                        }
                    })]) : e._e()]) : e._e(), e._e()]), n("view", [n("view", {
                        staticClass: e._$s(83, "sc", "opr-btn"),
                        attrs: {
                            _i: 83
                        },
                        on: {
                            click: e.previwBtn
                        }
                    }, [e._v(e._$s(83, "t0-0", e._s(e.$t("\u9884\u89c8"))))]), n("view", {
                        staticClass: e._$s(84, "sc", "opr-btn btn-linear"),
                        style: e._$s(84, "s", e.lastSendTxtCmdComplete ? "" : "opacity: 0.3;"),
                        attrs: {
                            _i: 84
                        },
                        on: {
                            click: e.sendCmdBtn
                        }
                    }, [e._v(e._$s(84, "t0-0", e._s(e.$t("\u53d1\u9001"))))])])])]), e._$s(85, "i", e.showSending) ? [n("view"), n("canvas", {
                        attrs: {
                            id: "progressCanvas",
                            _i: 87
                        }
                    })] : e._e(), e._$s(88, "i", e.features.xyCnf) ? n("button", {
                        staticClass: e._$s(88, "sc", "floating-button"),
                        style: e._$s(88, "s", {
                            left: e.position.x + "px",
                            top: e.position.y + "px"
                        }),
                        attrs: {
                            _i: 88
                        },
                        on: {
                            touchstart: e.onBtnSetTouchStart,
                            touchmove: e.onBtnSetTouchMove,
                            touchend: e.onBtnSetTouchEnd,
                            click: e.onBtnSetClick
                        }
                    }, [n("image", {
                        attrs: {
                            src: e._$s(89, "a-src", r("18cf")),
                            _i: 89
                        }
                    })]) : e._e()], 2)], 1)
                },
                a = []
        },
        "828b": function(e, t, r) {
            "use strict";

            function n(e, t, r, n, h, a, i, c, o, s) {
                var l, p = "function" === typeof e ? e.options : e;
                if (o) {
                    p.components || (p.components = {});
                    var d = Object.prototype.hasOwnProperty;
                    for (var b in o) d.call(o, b) && !d.call(p.components, b) && (p.components[b] = o[b])
                }
                if (s && ("function" === typeof s.beforeCreate && (s.beforeCreate = [s.beforeCreate]), (s.beforeCreate || (s.beforeCreate = [])).unshift((function() {
                        this[s.__module] = this
                    })), (p.mixins || (p.mixins = [])).push(s)), t && (p.render = t, p.staticRenderFns = r, p._compiled = !0), n && (p.functional = !0), a && (p._scopeId = "data-v-" + a), i ? (l = function(e) {
                        e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, e || "undefined" === typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), h && h.call(this, e), e && e._registeredComponents && e._registeredComponents.add(i)
                    }, p._ssrRegister = l) : h && (l = c ? function() {
                        h.call(this, this.$root.$options.shadowRoot)
                    } : h), l)
                    if (p.functional) {
                        p._injectStyles = l;
                        var g = p.render;
                        p.render = function(e, t) {
                            return l.call(t), g(e, t)
                        }
                    } else {
                        var j = p.beforeCreate;
                        p.beforeCreate = j ? [].concat(j, l) : [l]
                    } return {
                    exports: e,
                    options: p
                }
            }
            r.d(t, "a", (function() {
                return n
            }))
        },
        "85c1": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("textPlaybackPageComponent "),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        8880: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("d439"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "8a07": function(e, t) {
            var r = [{
                label: "\u76f4\u7ebf",
                arr: [
                    [
                        [-400, 0, 0, 1],
                        [-392, 0, 7],
                        [-383, 0, 7],
                        [-374, 0, 7],
                        [-365, 0, 7],
                        [-356, 0, 7],
                        [-347, 0, 7],
                        [-338, 0, 7],
                        [-329, 0, 1],
                        [-320, 0, 1],
                        [-312, 0, 1],
                        [-303, 0, 1],
                        [-294, 0, 1],
                        [-285, 0, 1],
                        [-276, 0, 1],
                        [-267, 0, 1],
                        [-258, 0, 7],
                        [-249, 0, 7],
                        [-240, 0, 7],
                        [-231, 0, 7],
                        [-222, 0, 7],
                        [-214, 0, 7],
                        [-205, 0, 7],
                        [-196, 0, 2],
                        [-187, 0, 2],
                        [-178, 0, 2],
                        [-169, 0, 2],
                        [-160, 0, 2],
                        [-151, 0, 2],
                        [-142, 0, 2],
                        [-134, 0, 2],
                        [-125, 0, 7],
                        [-116, 0, 7],
                        [-107, 0, 7],
                        [-98, 0, 7],
                        [-89, 0, 7],
                        [-80, 0, 7],
                        [-71, 0, 7],
                        [-62, 0, 3],
                        [-53, 0, 3],
                        [-44, 0, 3],
                        [-36, 0, 3],
                        [-27, 0, 3],
                        [-18, 0, 3],
                        [-9, 0, 3],
                        [0, 0, 3],
                        [9, 0, 7],
                        [18, 0, 7],
                        [27, 0, 7],
                        [36, 0, 7],
                        [44, 0, 7],
                        [53, 0, 7],
                        [62, 0, 7],
                        [71, 0, 1],
                        [80, 0, 1],
                        [89, 0, 1],
                        [98, 0, 1],
                        [107, 0, 1],
                        [116, 0, 1],
                        [125, 0, 1],
                        [134, 0, 1],
                        [142, 0, 7],
                        [151, 0, 7],
                        [160, 0, 7],
                        [169, 0, 7],
                        [178, 0, 7],
                        [187, 0, 7],
                        [196, 0, 7],
                        [205, 0, 2],
                        [214, 0, 2],
                        [222, 0, 2],
                        [231, 0, 2],
                        [240, 0, 2],
                        [249, 0, 2],
                        [258, 0, 2],
                        [267, 0, 2],
                        [276, 0, 7],
                        [285, 0, 7],
                        [294, 0, 7],
                        [303, 0, 7],
                        [312, 0, 7],
                        [320, 0, 7],
                        [329, 0, 7],
                        [338, 0, 3],
                        [347, 0, 3],
                        [356, 0, 3],
                        [365, 0, 3],
                        [374, 0, 3],
                        [383, 0, 3],
                        [392, 0, 3],
                        [400, 0, 3, 1]
                    ],
                    [
                        [-400, -400, 0, 1],
                        [-390, -390, 4, 0],
                        [-380, -380, 4, 0],
                        [-370, -370, 4, 0],
                        [-360, -360, 4, 0],
                        [-350, -350, 4, 0],
                        [-340, -340, 5, 0],
                        [-330, -330, 5, 0],
                        [-320, -320, 5, 0],
                        [-310, -310, 5, 0],
                        [-300, -300, 5, 0],
                        [-290, -290, 5, 0],
                        [-280, -280, 6, 0],
                        [-270, -270, 6, 0],
                        [-260, -260, 6, 0],
                        [-250, -250, 6, 0],
                        [-240, -240, 5, 0],
                        [-230, -230, 5, 0],
                        [-220, -220, 5, 0],
                        [-210, -210, 5, 0],
                        [-200, -200, 5, 0],
                        [-190, -190, 5, 0],
                        [-180, -180, 4, 0],
                        [-170, -170, 4, 0],
                        [-160, -160, 4, 0],
                        [-150, -150, 4, 0],
                        [-140, -140, 5, 0],
                        [-130, -130, 5, 0],
                        [-120, -120, 5, 0],
                        [-110, -110, 5, 0],
                        [-100, -100, 5, 0],
                        [-90, -90, 5, 0],
                        [-80, -80, 6, 0],
                        [-70, -70, 6, 0],
                        [-60, -60, 6, 0],
                        [-50, -50, 6, 0],
                        [-40, -40, 5, 0],
                        [-30, -30, 5, 0],
                        [-20, -20, 5, 0],
                        [-10, -10, 5, 0],
                        [0, 0, 5, 0],
                        [10, 10, 5, 0],
                        [20, 20, 4, 0],
                        [30, 30, 4, 0],
                        [40, 40, 4, 0],
                        [50, 50, 4, 0],
                        [60, 60, 5, 0],
                        [70, 70, 5, 0],
                        [80, 80, 5, 0],
                        [90, 90, 5, 0],
                        [100, 100, 5, 0],
                        [110, 110, 5, 0],
                        [120, 120, 6, 0],
                        [130, 130, 6, 0],
                        [140, 140, 6, 0],
                        [150, 150, 6, 0],
                        [160, 160, 6, 0],
                        [170, 170, 5, 0],
                        [180, 180, 5, 0],
                        [190, 190, 5, 0],
                        [200, 200, 5, 0],
                        [210, 210, 5, 0],
                        [220, 220, 5, 0],
                        [230, 230, 4, 0],
                        [240, 240, 4, 0],
                        [250, 250, 4, 0],
                        [260, 260, 4, 0],
                        [270, 270, 5, 0],
                        [280, 280, 5, 0],
                        [290, 290, 5, 0],
                        [300, 300, 5, 0],
                        [310, 310, 5, 0],
                        [320, 320, 5, 0],
                        [330, 330, 6, 0],
                        [340, 340, 6, 0],
                        [350, 350, 6, 0],
                        [360, 360, 6, 0],
                        [370, 370, 5, 0],
                        [380, 380, 5, 0],
                        [390, 390, 5, 0],
                        [400, 400, 5, 2]
                    ],
                    [
                        [0, 0, 0, 1],
                        [10, 0, 7, 0],
                        [20, 0, 7, 0],
                        [30, 0, 7, 0],
                        [40, 0, 7, 0],
                        [50, 0, 7, 0],
                        [60, 0, 7, 0],
                        [70, 0, 7, 0],
                        [80, 0, 7, 0],
                        [90, 0, 7, 0],
                        [100, 0, 7, 0],
                        [110, 0, 3, 0],
                        [120, 0, 3, 0],
                        [130, 0, 3, 0],
                        [140, 0, 3, 0],
                        [150, 0, 3, 0],
                        [160, 0, 3, 0],
                        [170, 0, 3, 0],
                        [180, 0, 3, 0],
                        [190, 0, 3, 0],
                        [200, 0, 3, 0],
                        [210, 0, 7, 0],
                        [220, 0, 7, 0],
                        [230, 0, 7, 0],
                        [240, 0, 7, 0],
                        [250, 0, 7, 0],
                        [260, 0, 7, 0],
                        [270, 0, 7, 0],
                        [280, 0, 7, 0],
                        [290, 0, 7, 0],
                        [300, 0, 7, 0],
                        [310, 0, 4, 0],
                        [320, 0, 4, 0],
                        [330, 0, 4, 0],
                        [340, 0, 4, 0],
                        [350, 0, 4, 0],
                        [360, 0, 4, 0],
                        [370, 0, 4, 0],
                        [380, 0, 4, 0],
                        [390, 0, 4, 0],
                        [400, 0, 4, 2]
                    ],
                    [
                        [0, 0, 0, 2],
                        [10, 10, 4, 0],
                        [20, 20, 4, 0],
                        [30, 30, 4, 0],
                        [40, 40, 4, 0],
                        [50, 50, 4, 0],
                        [60, 60, 4, 0],
                        [70, 70, 4, 0],
                        [80, 80, 5, 0],
                        [90, 90, 5, 0],
                        [100, 100, 5, 0],
                        [110, 110, 5, 0],
                        [120, 120, 5, 0],
                        [130, 130, 5, 0],
                        [140, 140, 4, 0],
                        [150, 150, 4, 0],
                        [160, 160, 4, 0],
                        [170, 170, 4, 0],
                        [180, 180, 4, 0],
                        [190, 190, 4, 0],
                        [200, 200, 5, 0],
                        [210, 210, 5, 0],
                        [220, 220, 5, 0],
                        [230, 230, 5, 0],
                        [240, 240, 5, 0],
                        [250, 250, 4, 0],
                        [260, 260, 4, 0],
                        [270, 270, 4, 0],
                        [280, 280, 4, 0],
                        [290, 290, 4, 0],
                        [300, 300, 5, 0],
                        [310, 310, 5, 0],
                        [320, 320, 5, 0],
                        [330, 330, 5, 0],
                        [340, 340, 5, 0],
                        [350, 350, 5, 0],
                        [360, 360, 4, 0],
                        [370, 370, 4, 0],
                        [380, 380, 4, 0],
                        [390, 390, 4, 0],
                        [400, 400, 4, 2]
                    ],
                    [
                        [-400, 400, 0, 1],
                        [-390, 390, 4, 0],
                        [-380, 380, 4, 0],
                        [-370, 370, 4, 0],
                        [-360, 360, 4, 0],
                        [-350, 350, 4, 0],
                        [-340, 340, 7, 0],
                        [-330, 330, 7, 0],
                        [-320, 320, 7, 0],
                        [-310, 310, 7, 0],
                        [-300, 300, 7, 0],
                        [-290, 290, 7, 0],
                        [-280, 280, 6, 0],
                        [-270, 270, 6, 0],
                        [-260, 260, 6, 0],
                        [-250, 250, 6, 0],
                        [-240, 240, 7, 0],
                        [-230, 230, 7, 0],
                        [-220, 220, 7, 0],
                        [-210, 210, 7, 0],
                        [-200, 200, 7, 0],
                        [-190, 190, 7, 0],
                        [-180, 180, 4, 0],
                        [-170, 170, 4, 0],
                        [-160, 160, 4, 0],
                        [-150, 150, 4, 0],
                        [-140, 140, 7, 0],
                        [-130, 130, 7, 0],
                        [-120, 120, 7, 0],
                        [-110, 110, 7, 0],
                        [-100, 100, 7, 0],
                        [-90, 90, 7, 0],
                        [-80, 80, 6, 0],
                        [-70, 70, 6, 0],
                        [-60, 60, 6, 0],
                        [-50, 50, 6, 0],
                        [-40, 40, 7, 0],
                        [-30, 30, 7, 0],
                        [-20, 20, 7, 0],
                        [-10, 10, 7, 0],
                        [0, 0, 7, 1],
                        [10, 10, 4, 0],
                        [20, 20, 4, 0],
                        [30, 30, 4, 0],
                        [40, 40, 4, 0],
                        [50, 50, 4, 0],
                        [60, 60, 7, 0],
                        [70, 70, 7, 0],
                        [80, 80, 7, 0],
                        [90, 90, 7, 0],
                        [100, 100, 7, 0],
                        [110, 110, 7, 0],
                        [120, 120, 6, 0],
                        [130, 130, 6, 0],
                        [140, 140, 6, 0],
                        [150, 150, 6, 0],
                        [160, 160, 6, 0],
                        [170, 170, 7, 0],
                        [180, 180, 7, 0],
                        [190, 190, 7, 0],
                        [200, 200, 7, 0],
                        [210, 210, 7, 0],
                        [220, 220, 7, 0],
                        [230, 230, 4, 0],
                        [240, 240, 4, 0],
                        [250, 250, 4, 0],
                        [260, 260, 4, 0],
                        [270, 270, 7, 0],
                        [280, 280, 7, 0],
                        [290, 290, 7, 0],
                        [300, 300, 7, 0],
                        [310, 310, 7, 0],
                        [320, 320, 7, 0],
                        [330, 330, 6, 0],
                        [340, 340, 6, 0],
                        [350, 350, 6, 0],
                        [360, 360, 6, 0],
                        [370, 370, 7, 0],
                        [380, 380, 7, 0],
                        [390, 390, 7, 0],
                        [400, 400, 7, 2]
                    ],
                    [
                        [-450, -400, 0, 1],
                        [-350, -400, 7, 1],
                        [-350, -300, 1, 1],
                        [-250, -300, 1, 1],
                        [-250, -200, 4, 1],
                        [-150, -200, 4, 1],
                        [-150, -100, 2, 1],
                        [-50, -100, 2, 1],
                        [-50, 0, 5, 1],
                        [50, 0, 5, 1],
                        [50, 100, 3, 1],
                        [150, 100, 3, 1],
                        [150, 200, 6, 1],
                        [250, 200, 6, 1],
                        [250, 300, 2, 1],
                        [350, 300, 2, 1],
                        [350, 400, 7, 1],
                        [450, 400, 7, 1]
                    ],
                    [
                        [-400, 400, 0, 1],
                        [-390, 400, 7, 0],
                        [-380, 400, 7, 0],
                        [-370, 400, 7, 0],
                        [-360, 400, 7, 0],
                        [-350, 400, 7, 0],
                        [-340, 400, 7, 0],
                        [-330, 400, 7, 0],
                        [-320, 400, 7, 0],
                        [-310, 400, 7, 0],
                        [-300, 400, 7, 0],
                        [-290, 400, 1, 0],
                        [-280, 400, 1, 0],
                        [-270, 400, 1, 0],
                        [-260, 400, 1, 0],
                        [-250, 400, 1, 0],
                        [-240, 400, 1, 0],
                        [-230, 400, 1, 0],
                        [-220, 400, 1, 0],
                        [-210, 400, 1, 0],
                        [-200, 400, 1, 0],
                        [-190, 400, 5, 0],
                        [-180, 400, 5, 0],
                        [-170, 400, 5, 0],
                        [-160, 400, 5, 0],
                        [-150, 400, 5, 0],
                        [-140, 400, 5, 0],
                        [-130, 400, 5, 0],
                        [-120, 400, 5, 0],
                        [-110, 400, 5, 0],
                        [-100, 400, 5, 0],
                        [-90, 400, 2, 0],
                        [-80, 400, 2, 0],
                        [-70, 400, 2, 0],
                        [-60, 400, 2, 0],
                        [-50, 400, 2, 0],
                        [-40, 400, 2, 0],
                        [-30, 400, 2, 0],
                        [-20, 400, 2, 0],
                        [-10, 400, 2, 0],
                        [0, 400, 2, 0],
                        [10, 400, 6, 0],
                        [20, 400, 6, 0],
                        [30, 400, 6, 0],
                        [40, 400, 6, 0],
                        [50, 400, 6, 0],
                        [60, 400, 6, 0],
                        [70, 400, 6, 0],
                        [80, 400, 6, 0],
                        [90, 400, 6, 0],
                        [100, 400, 6, 0],
                        [110, 400, 3, 0],
                        [120, 400, 3, 0],
                        [130, 400, 3, 0],
                        [140, 400, 3, 0],
                        [150, 400, 3, 0],
                        [160, 400, 3, 0],
                        [170, 400, 3, 0],
                        [180, 400, 3, 0],
                        [190, 400, 3, 0],
                        [200, 400, 3, 0],
                        [210, 400, 4, 0],
                        [220, 400, 4, 0],
                        [230, 400, 4, 0],
                        [240, 400, 4, 0],
                        [250, 400, 4, 0],
                        [260, 400, 4, 0],
                        [270, 400, 4, 0],
                        [280, 400, 4, 0],
                        [290, 400, 4, 0],
                        [300, 400, 4, 0],
                        [310, 400, 7, 0],
                        [320, 400, 7, 0],
                        [330, 400, 7, 0],
                        [340, 400, 7, 0],
                        [350, 400, 7, 0],
                        [360, 400, 7, 0],
                        [370, 400, 7, 0],
                        [380, 400, 7, 0],
                        [390, 400, 7, 0],
                        [400, 400, 7, 2],
                        [-400, -400, 0, 1],
                        [-390, -400, 7, 0],
                        [-380, -400, 7, 0],
                        [-370, -400, 7, 0],
                        [-360, -400, 7, 0],
                        [-350, -400, 7, 0],
                        [-340, -400, 7, 0],
                        [-330, -400, 7, 0],
                        [-320, -400, 7, 0],
                        [-310, -400, 7, 0],
                        [-300, -400, 7, 0],
                        [-290, -400, 1, 0],
                        [-280, -400, 1, 0],
                        [-270, -400, 1, 0],
                        [-260, -400, 1, 0],
                        [-250, -400, 1, 0],
                        [-240, -400, 1, 0],
                        [-230, -400, 1, 0],
                        [-220, -400, 1, 0],
                        [-210, -400, 1, 0],
                        [-200, -400, 1, 0],
                        [-190, -400, 5, 0],
                        [-180, -400, 5, 0],
                        [-170, -400, 5, 0],
                        [-160, -400, 5, 0],
                        [-150, -400, 5, 0],
                        [-140, -400, 5, 0],
                        [-130, -400, 5, 0],
                        [-120, -400, 5, 0],
                        [-110, -400, 5, 0],
                        [-100, -400, 5, 0],
                        [-90, -400, 2, 0],
                        [-80, -400, 2, 0],
                        [-70, -400, 2, 0],
                        [-60, -400, 2, 0],
                        [-50, -400, 2, 0],
                        [-40, -400, 2, 0],
                        [-30, -400, 2, 0],
                        [-20, -400, 2, 0],
                        [-10, -400, 2, 0],
                        [0, -400, 2, 0],
                        [10, -400, 6, 0],
                        [20, -400, 6, 0],
                        [30, -400, 6, 0],
                        [40, -400, 6, 0],
                        [50, -400, 6, 0],
                        [60, -400, 6, 0],
                        [70, -400, 6, 0],
                        [80, -400, 6, 0],
                        [90, -400, 6, 0],
                        [100, -400, 6, 0],
                        [110, -400, 3, 0],
                        [120, -400, 3, 0],
                        [130, -400, 3, 0],
                        [140, -400, 3, 0],
                        [150, -400, 3, 0],
                        [160, -400, 3, 0],
                        [170, -400, 3, 0],
                        [180, -400, 3, 0],
                        [190, -400, 3, 0],
                        [200, -400, 3, 0],
                        [210, -400, 4, 0],
                        [220, -400, 4, 0],
                        [230, -400, 4, 0],
                        [240, -400, 4, 0],
                        [250, -400, 4, 0],
                        [260, -400, 4, 0],
                        [270, -400, 4, 0],
                        [280, -400, 4, 0],
                        [290, -400, 4, 0],
                        [300, -400, 4, 0],
                        [310, -400, 7, 0],
                        [320, -400, 7, 0],
                        [330, -400, 7, 0],
                        [340, -400, 7, 0],
                        [350, -400, 7, 0],
                        [360, -400, 7, 0],
                        [370, -400, 7, 0],
                        [380, -400, 7, 0],
                        [390, -400, 7, 0],
                        [400, -400, 7, 2]
                    ],
                    [
                        [-400, 0, 0, 2],
                        [-350, 0, 7, 0],
                        [-300, 0, 7, 0],
                        [-250, 0, 7, 0],
                        [-200, 0, 7, 0],
                        [-150, 0, 7, 0],
                        [-100, 0, 7, 0],
                        [-50, 0, 7, 1],
                        [50, 0, 0, 2],
                        [100, 0, 2, 0],
                        [150, 0, 2, 0],
                        [200, 0, 2, 0],
                        [250, 0, 2, 0],
                        [300, 0, 2, 0],
                        [350, 0, 2, 0],
                        [400, 0, 2, 1]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-372, 0, 4, 0],
                        [-346, 0, 4, 0],
                        [-319, 0, 4, 0],
                        [-293, 0, 4, 0],
                        [-266, 0, 4, 0],
                        [-239, 0, 4, 0],
                        [-213, 0, 4, 0],
                        [-186, 0, 4, 2],
                        [-106, 0, 0, 1],
                        [-80, 0, 5, 0],
                        [-53, 0, 5, 0],
                        [-27, 0, 5, 0],
                        [0, 0, 5, 0],
                        [27, 0, 5, 0],
                        [53, 0, 5, 0],
                        [80, 0, 5, 0],
                        [106, 0, 5, 2],
                        [186, 0, 0, 1],
                        [213, 0, 6, 0],
                        [239, 0, 6, 0],
                        [266, 0, 6, 0],
                        [293, 0, 6, 0],
                        [319, 0, 6, 0],
                        [346, 0, 6, 0],
                        [372, 0, 6, 0],
                        [399, 0, 6, 2]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-372, 0, 2, 0],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 0],
                        [-266, 0, 2, 0],
                        [-239, 0, 2, 0],
                        [-213, 0, 2, 2],
                        [-186, 0, 0, 1],
                        [-160, 0, 6, 0],
                        [-133, 0, 6, 0],
                        [-106, 0, 6, 0],
                        [-80, 0, 6, 0],
                        [-53, 0, 6, 0],
                        [-27, 0, 6, 0],
                        [-13, 0, 6, 2],
                        [13, 0, 0, 1],
                        [27, 0, 2, 0],
                        [53, 0, 2, 0],
                        [80, 0, 2, 0],
                        [106, 0, 2, 0],
                        [133, 0, 2, 0],
                        [160, 0, 2, 0],
                        [186, 0, 2, 2],
                        [213, 0, 0, 1],
                        [239, 0, 6, 0],
                        [266, 0, 6, 0],
                        [293, 0, 6, 0],
                        [319, 0, 6, 0],
                        [346, 0, 6, 0],
                        [372, 0, 6, 0],
                        [399, 0, 6, 2]
                    ],
                    [
                        [-372, 0, 0, 1],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 2],
                        [-239, 0, 0, 1],
                        [-213, 0, 6, 0],
                        [-186, 0, 6, 0],
                        [-160, 0, 6, 2],
                        [-106, 0, 0, 1],
                        [-80, 0, 1, 0],
                        [-53, 0, 1, 0],
                        [-27, 0, 1, 2],
                        [27, 0, 0, 1],
                        [53, 0, 4, 0],
                        [80, 0, 4, 0],
                        [106, 0, 4, 2],
                        [160, 0, 0, 1],
                        [186, 0, 3, 0],
                        [213, 0, 3, 0],
                        [239, 0, 3, 2],
                        [293, 0, 0, 1],
                        [319, 0, 5, 0],
                        [346, 0, 5, 0],
                        [372, 0, 5, 2]
                    ],
                    [
                        [-412, 0, 0, 1],
                        [-386, 0, 2, 0],
                        [-359, 0, 2, 0],
                        [-332, 0, 2, 2],
                        [-306, 0, 0, 1],
                        [-279, 0, 7, 0],
                        [-253, 0, 7, 0],
                        [-226, 0, 7, 2],
                        [-200, 0, 0, 1],
                        [-173, 0, 1, 0],
                        [-146, 0, 1, 0],
                        [-120, 0, 1, 2],
                        [-93, 0, 0, 1],
                        [-66, 0, 4, 0],
                        [-40, 0, 4, 0],
                        [-13, 0, 4, 2],
                        [13, 0, 0, 1],
                        [40, 0, 3, 0],
                        [66, 0, 3, 0],
                        [93, 0, 3, 2],
                        [120, 0, 0, 1],
                        [146, 0, 6, 0],
                        [173, 0, 6, 0],
                        [200, 0, 6, 2],
                        [226, 0, 0, 1],
                        [253, 0, 2, 0],
                        [279, 0, 2, 0],
                        [306, 0, 2, 2],
                        [332, 0, 0, 1],
                        [359, 0, 5, 0],
                        [386, 0, 5, 0],
                        [412, 0, 5, 2]
                    ],
                    [
                        [-405, 0, 0, 1],
                        [-382, 0, 7, 0],
                        [-360, 0, 7, 0],
                        [-338, 0, 7, 2],
                        [-322, 0, 0, 1],
                        [-300, 0, 1, 0],
                        [-278, 0, 1, 0],
                        [-255, 0, 1, 2],
                        [-240, 0, 0, 1],
                        [-218, 0, 6, 0],
                        [-195, 0, 6, 0],
                        [-172, 0, 6, 2],
                        [-158, 0, 0, 1],
                        [-135, 0, 2, 0],
                        [-112, 0, 2, 0],
                        [-90, 0, 2, 2],
                        [-75, 0, 0, 1],
                        [-52, 0, 4, 0],
                        [-30, 0, 4, 0],
                        [-8, 0, 4, 2],
                        [8, 0, 0, 1],
                        [30, 0, 3, 0],
                        [52, 0, 3, 0],
                        [75, 0, 3, 2],
                        [90, 0, 0, 1],
                        [112, 0, 5, 0],
                        [135, 0, 5, 0],
                        [158, 0, 5, 2],
                        [172, 0, 0, 1],
                        [195, 0, 4, 0],
                        [218, 0, 4, 0],
                        [240, 0, 4, 2],
                        [255, 0, 0, 1],
                        [278, 0, 2, 0],
                        [300, 0, 2, 0],
                        [322, 0, 2, 2],
                        [338, 0, 0, 1],
                        [360, 0, 7, 0],
                        [382, 0, 7, 0],
                        [405, 0, 7, 2]
                    ],
                    [
                        [-392, 0, 0, 1],
                        [-366, 0, 7, 0],
                        [-339, 0, 7, 2],
                        [-326, 0, 0, 1],
                        [-299, 0, 1, 0],
                        [-273, 0, 1, 2],
                        [-259, 0, 0, 1],
                        [-233, 0, 7, 0],
                        [-206, 0, 7, 2],
                        [-193, 0, 0, 1],
                        [-166, 0, 2, 0],
                        [-140, 0, 2, 2],
                        [-126, 0, 0, 1],
                        [-100, 0, 7, 0],
                        [-73, 0, 7, 2],
                        [-60, 0, 0, 1],
                        [-33, 0, 3, 0],
                        [-7, 0, 3, 2],
                        [7, 0, 0, 1],
                        [33, 0, 7, 0],
                        [60, 0, 7, 2],
                        [73, 0, 0, 1],
                        [100, 0, 4, 0],
                        [126, 0, 4, 2],
                        [140, 0, 0, 1],
                        [166, 0, 7, 0],
                        [193, 0, 7, 2],
                        [206, 0, 0, 1],
                        [233, 0, 5, 0],
                        [259, 0, 5, 2],
                        [273, 0, 0, 1],
                        [299, 0, 7, 0],
                        [326, 0, 7, 2],
                        [339, 0, 0, 1],
                        [366, 0, 6, 0],
                        [392, 0, 6, 2]
                    ],
                    [
                        [-399, 399, 0, 1],
                        [-372, 399, 4, 0],
                        [-346, 399, 4, 0],
                        [-319, 399, 4, 0],
                        [-293, 399, 4, 0],
                        [-266, 399, 4, 1],
                        [-133, 399, 0, 1],
                        [-106, 399, 4, 0],
                        [-80, 399, 4, 0],
                        [-53, 399, 4, 0],
                        [-27, 399, 4, 0],
                        [0, 399, 4, 1],
                        [133, 399, 0, 1],
                        [160, 399, 4, 0],
                        [186, 399, 4, 0],
                        [213, 399, 4, 0],
                        [239, 399, 4, 0],
                        [266, 399, 4, 1],
                        [0, -399, 0, 1],
                        [27, -399, 5, 0],
                        [53, -399, 5, 0],
                        [80, -399, 5, 0],
                        [106, -399, 5, 0],
                        [133, -399, 5, 1],
                        [-266, -399, 0, 1],
                        [-239, -399, 5, 0],
                        [-213, -399, 5, 0],
                        [-186, -399, 5, 0],
                        [-160, -399, 5, 0],
                        [-133, -399, 5, 1],
                        [266, -399, 0, 1],
                        [293, -399, 5, 0],
                        [319, -399, 5, 0],
                        [346, -399, 5, 0],
                        [372, -399, 5, 0],
                        [399, -399, 5, 1]
                    ],
                    [
                        [-400, 320, 0, 1],
                        [-380, 320, 2, 0],
                        [-360, 320, 2, 0],
                        [-340, 320, 2, 0],
                        [-320, 320, 2, 0],
                        [-300, 320, 2, 0],
                        [-280, 320, 2, 0],
                        [-260, 320, 2, 0],
                        [-240, 320, 2, 1],
                        [-240, 160, 0, 1],
                        [-220, 160, 7, 0],
                        [-200, 160, 7, 0],
                        [-180, 160, 7, 0],
                        [-160, 160, 7, 0],
                        [-140, 160, 7, 0],
                        [-120, 160, 7, 0],
                        [-100, 160, 7, 0],
                        [-80, 160, 7, 1],
                        [-80, 0, 0, 1],
                        [-60, 0, 4, 0],
                        [-40, 0, 4, 0],
                        [-20, 0, 4, 0],
                        [0, 0, 4, 0],
                        [20, 0, 4, 0],
                        [40, 0, 4, 0],
                        [60, 0, 4, 0],
                        [80, 0, 4, 1],
                        [80, -160, 0, 1],
                        [100, -160, 5, 0],
                        [120, -160, 5, 0],
                        [140, -160, 5, 0],
                        [160, -160, 5, 0],
                        [180, -160, 5, 0],
                        [200, -160, 5, 0],
                        [220, -160, 5, 0],
                        [240, -160, 5, 1],
                        [240, -320, 0, 1],
                        [260, -320, 6, 0],
                        [280, -320, 6, 0],
                        [300, -320, 6, 0],
                        [320, -320, 6, 0],
                        [340, -320, 6, 0],
                        [360, -320, 6, 0],
                        [380, -320, 6, 0],
                        [400, -320, 6, 1]
                    ],
                    [
                        [0, -400, 0, 3],
                        [0, -390, 4, 0],
                        [0, -380, 4, 0],
                        [0, -370, 4, 0],
                        [0, -360, 4, 0],
                        [0, -350, 4, 3],
                        [0, -340, 4, 0],
                        [0, -330, 4, 0],
                        [0, -320, 4, 0],
                        [0, -310, 4, 0],
                        [0, -300, 4, 3],
                        [0, -290, 4, 0],
                        [0, -280, 4, 0],
                        [0, -270, 4, 0],
                        [0, -260, 4, 0],
                        [0, -250, 4, 3],
                        [0, -240, 4, 0],
                        [0, -230, 4, 0],
                        [0, -220, 4, 0],
                        [0, -210, 4, 0],
                        [0, -200, 4, 3],
                        [0, -190, 4, 0],
                        [0, -180, 4, 0],
                        [0, -170, 4, 0],
                        [0, -160, 4, 0],
                        [0, -150, 4, 3],
                        [0, -140, 4, 0],
                        [0, -130, 4, 0],
                        [0, -120, 4, 0],
                        [0, -110, 4, 0],
                        [0, -100, 4, 3],
                        [0, -90, 4, 0],
                        [0, -80, 4, 0],
                        [0, -70, 4, 0],
                        [0, -60, 4, 0],
                        [0, -50, 4, 3],
                        [0, -40, 4, 0],
                        [0, -30, 4, 0],
                        [0, -20, 4, 0],
                        [0, -10, 4, 0],
                        [0, 0, 4, 3],
                        [0, 10, 4, 0],
                        [0, 20, 4, 0],
                        [0, 30, 4, 0],
                        [0, 40, 4, 0],
                        [0, 50, 4, 3],
                        [0, 60, 4, 0],
                        [0, 70, 4, 0],
                        [0, 80, 4, 0],
                        [0, 90, 4, 0],
                        [0, 100, 4, 3],
                        [0, 110, 4, 0],
                        [0, 120, 4, 0],
                        [0, 130, 4, 0],
                        [0, 140, 4, 0],
                        [0, 150, 4, 3],
                        [0, 160, 4, 0],
                        [0, 170, 4, 0],
                        [0, 180, 4, 0],
                        [0, 190, 4, 0],
                        [0, 200, 4, 3],
                        [0, 210, 4, 0],
                        [0, 220, 4, 0],
                        [0, 230, 4, 0],
                        [0, 240, 4, 0],
                        [0, 250, 4, 3],
                        [0, 260, 4, 0],
                        [0, 270, 4, 0],
                        [0, 280, 4, 0],
                        [0, 290, 4, 0],
                        [0, 300, 4, 3],
                        [0, 310, 4, 0],
                        [0, 320, 4, 0],
                        [0, 330, 4, 0],
                        [0, 340, 4, 0],
                        [0, 350, 4, 3],
                        [0, 360, 4, 0],
                        [0, 370, 4, 0],
                        [0, 380, 4, 0],
                        [0, 390, 4, 0],
                        [0, 400, 4, 3]
                    ],
                    [
                        [-413, 0, 0, 1],
                        [-413, 0, 7, 3],
                        [-405, 0, 0, 1],
                        [-382, 0, 4, 0],
                        [-360, 0, 4, 0],
                        [-338, 0, 4, 2],
                        [-330, 0, 0, 1],
                        [-330, 0, 7, 3],
                        [-322, 0, 0, 1],
                        [-300, 0, 4, 0],
                        [-278, 0, 4, 0],
                        [-255, 0, 4, 2],
                        [-247, 0, 0, 1],
                        [-247, 0, 7, 3],
                        [-240, 0, 0, 1],
                        [-218, 0, 4, 0],
                        [-195, 0, 4, 0],
                        [-172, 0, 4, 2],
                        [-164, 0, 0, 1],
                        [-164, 0, 7, 3],
                        [-158, 0, 0, 1],
                        [-135, 0, 4, 0],
                        [-112, 0, 4, 0],
                        [-90, 0, 4, 2],
                        [-82, 0, 0, 1],
                        [-82, 0, 7, 3],
                        [-75, 0, 0, 1],
                        [-52, 0, 4, 0],
                        [-30, 0, 4, 0],
                        [-8, 0, 4, 2],
                        [0, 0, 0, 1],
                        [0, 0, 7, 3],
                        [8, 0, 0, 1],
                        [30, 0, 4, 0],
                        [52, 0, 4, 0],
                        [75, 0, 4, 2],
                        [83, 0, 0, 1],
                        [83, 0, 7, 3],
                        [90, 0, 0, 1],
                        [112, 0, 4, 0],
                        [135, 0, 4, 0],
                        [158, 0, 4, 2],
                        [166, 0, 0, 1],
                        [166, 0, 7, 3],
                        [172, 0, 0, 1],
                        [195, 0, 4, 0],
                        [218, 0, 4, 0],
                        [240, 0, 4, 2],
                        [248, 0, 0, 1],
                        [248, 0, 7, 3],
                        [255, 0, 0, 1],
                        [278, 0, 4, 0],
                        [300, 0, 4, 0],
                        [322, 0, 4, 2],
                        [330, 0, 0, 1],
                        [330, 0, 7, 3],
                        [338, 0, 0, 1],
                        [360, 0, 4, 0],
                        [382, 0, 4, 0],
                        [405, 0, 4, 2],
                        [413, 0, 0, 1],
                        [413, 0, 7, 3]
                    ],
                    [
                        [400, 100, 0, 1],
                        [400, -100, 6, 1],
                        [300, 100, 0, 1],
                        [300, -100, 2, 1],
                        [200, 100, 0, 1],
                        [200, -100, 6, 1],
                        [100, 100, 0, 1],
                        [100, -100, 2, 1],
                        [0, 100, 0, 1],
                        [0, -100, 6, 1],
                        [-100, 100, 0, 1],
                        [-100, -100, 2, 1],
                        [-200, 100, 0, 1],
                        [-200, -100, 6, 1],
                        [-300, 100, 0, 1],
                        [-300, -100, 2, 1],
                        [-400, 100, 0, 1],
                        [-400, -100, 6, 1]
                    ],
                    [
                        [0, 161, 0, 1],
                        [0, 242, 5, 0],
                        [0, 323, 5, 0],
                        [0, 403, 5, 1],
                        [-139, -81, 0, 1],
                        [-210, -121, 4, 0],
                        [-279, -161, 4, 0],
                        [-349, -202, 4, 1],
                        [139, -81, 0, 1],
                        [210, -121, 7, 0],
                        [279, -161, 7, 0],
                        [349, -202, 7, 1]
                    ],
                    [
                        [-403, 0, 0, 1],
                        [-336, 0, 4, 0],
                        [-269, 0, 4, 0],
                        [-202, 0, 4, 0],
                        [-134, 0, 4, 1],
                        [134, 0, 0, 1],
                        [202, 0, 2, 0],
                        [269, 0, 2, 0],
                        [336, 0, 2, 0],
                        [403, 0, 2, 1],
                        [0, 403, 0, 1],
                        [0, 336, 6, 0],
                        [0, 269, 6, 0],
                        [0, 202, 6, 0],
                        [0, 134, 6, 1],
                        [0, -134, 0, 1],
                        [0, -202, 7, 0],
                        [0, -269, 7, 0],
                        [0, -336, 7, 0],
                        [0, -403, 7, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [0, 0, 2, 1],
                        [0, 81, 2, 0],
                        [0, 161, 2, 0],
                        [0, 242, 2, 0],
                        [0, 323, 2, 0],
                        [0, 403, 2, 1],
                        [0, 323, 2, 0],
                        [0, 242, 2, 0],
                        [0, 161, 2, 0],
                        [0, 81, 2, 0],
                        [0, 0, 2, 1],
                        [-71, -40, 4, 0],
                        [-139, -81, 4, 0],
                        [-210, -121, 4, 0],
                        [-279, -161, 4, 0],
                        [-349, -202, 4, 1],
                        [-279, -161, 4, 0],
                        [-210, -121, 4, 0],
                        [-139, -81, 4, 0],
                        [-71, -40, 4, 0],
                        [0, 0, 4, 1],
                        [71, -40, 7, 0],
                        [139, -81, 7, 0],
                        [210, -121, 7, 0],
                        [279, -161, 7, 0],
                        [349, -202, 7, 1],
                        [279, -161, 7, 0],
                        [210, -121, 7, 0],
                        [139, -81, 7, 0],
                        [71, -40, 7, 0],
                        [0, 0, 7, 1]
                    ],
                    [
                        [-403, 0, 0, 1],
                        [-336, 0, 1, 0],
                        [-269, 0, 1, 0],
                        [-202, 0, 1, 0],
                        [-134, 0, 1, 0],
                        [-67, 0, 1, 0],
                        [0, 0, 1, 1],
                        [67, 0, 2, 0],
                        [134, 0, 2, 0],
                        [202, 0, 2, 0],
                        [269, 0, 2, 0],
                        [336, 0, 2, 0],
                        [403, 0, 2, 1],
                        [0, 403, 0, 1],
                        [0, 336, 6, 0],
                        [0, 269, 6, 0],
                        [0, 202, 6, 0],
                        [0, 134, 6, 0],
                        [0, 67, 6, 0],
                        [0, 0, 6, 1],
                        [0, -67, 7, 0],
                        [0, -134, 7, 0],
                        [0, -202, 7, 0],
                        [0, -269, 7, 0],
                        [0, -336, 7, 0],
                        [0, -403, 7, 1]
                    ],
                    [
                        [-390, 390, 0, 1],
                        [-390, 390, 2, 0],
                        [-312, 312, 2, 0],
                        [-234, 234, 2, 0],
                        [-156, 156, 2, 0],
                        [-78, 78, 2, 0],
                        [0, 0, 2, 1],
                        [78, -78, 7, 0],
                        [156, -156, 7, 0],
                        [234, -234, 7, 0],
                        [312, -312, 7, 0],
                        [390, -390, 7, 1],
                        [390, 390, 0, 1],
                        [390, 390, 5, 0],
                        [312, 312, 5, 0],
                        [234, 234, 5, 0],
                        [156, 156, 5, 0],
                        [78, 78, 5, 0],
                        [0, 0, 5, 1],
                        [-78, -78, 6, 0],
                        [-156, -156, 6, 0],
                        [-234, -234, 6, 0],
                        [-312, -312, 6, 0],
                        [-390, -390, 6, 1]
                    ],
                    [
                        [-252, 403, 0, 1],
                        [-252, 403, 7, 0],
                        [-126, 403, 7, 0],
                        [0, 403, 7, 0],
                        [126, 403, 7, 0],
                        [252, 403, 7, 1],
                        [403, 252, 0, 1],
                        [403, 252, 6, 0],
                        [403, 126, 6, 0],
                        [403, 0, 6, 0],
                        [403, -126, 6, 0],
                        [403, -252, 6, 1],
                        [252, -403, 0, 1],
                        [252, -403, 5, 0],
                        [126, -403, 5, 0],
                        [0, -403, 5, 0],
                        [-126, -403, 5, 0],
                        [-252, -403, 5, 1],
                        [-403, -252, 0, 1],
                        [-403, -252, 4, 0],
                        [-403, -126, 4, 0],
                        [-403, 0, 4, 0],
                        [-403, 126, 4, 0],
                        [-403, 252, 4, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [405, 132, 2, 1],
                        [0, 0, 0, 1],
                        [0, 425, 4, 1],
                        [0, 0, 0, 1],
                        [-405, 132, 6, 1],
                        [0, 0, 0, 1],
                        [-250, -344, 5, 1],
                        [0, 0, 0, 1],
                        [241, -344, 7, 1]
                    ],
                    [
                        [-363, -210, 0, 1],
                        [-315, -210, 7, 0],
                        [-284, -210, 7, 0],
                        [-252, -210, 7, 0],
                        [-220, -210, 7, 0],
                        [-189, -210, 7, 0],
                        [-158, -210, 7, 0],
                        [-126, -210, 7, 0],
                        [-94, -210, 7, 0],
                        [-63, -210, 7, 0],
                        [-32, -210, 7, 0],
                        [0, -210, 7, 0],
                        [32, -210, 7, 0],
                        [63, -210, 7, 0],
                        [94, -210, 7, 0],
                        [126, -210, 7, 0],
                        [158, -210, 7, 0],
                        [189, -210, 7, 0],
                        [220, -210, 7, 0],
                        [252, -210, 7, 0],
                        [284, -210, 7, 0],
                        [315, -210, 7, 0],
                        [363, -210, 7, 1],
                        [339, -168, 2, 0],
                        [315, -126, 2, 0],
                        [299, -99, 2, 0],
                        [284, -70, 2, 0],
                        [268, -44, 2, 0],
                        [252, -15, 2, 0],
                        [236, 10, 2, 0],
                        [220, 39, 2, 0],
                        [205, 65, 2, 0],
                        [189, 92, 2, 0],
                        [173, 119, 2, 0],
                        [158, 145, 2, 0],
                        [142, 168, 2, 0],
                        [126, 203, 2, 0],
                        [110, 229, 2, 0],
                        [94, 257, 2, 0],
                        [79, 285, 2, 0],
                        [63, 311, 2, 0],
                        [47, 338, 2, 0],
                        [32, 365, 2, 0],
                        [16, 392, 2, 0],
                        [0, 420, 2, 1],
                        [-16, 392, 4, 0],
                        [-32, 365, 4, 0],
                        [-47, 338, 4, 0],
                        [-63, 311, 4, 0],
                        [-79, 285, 4, 0],
                        [-94, 257, 4, 0],
                        [-110, 229, 4, 0],
                        [-126, 203, 4, 0],
                        [-142, 168, 4, 0],
                        [-158, 145, 4, 0],
                        [-173, 119, 4, 0],
                        [-189, 92, 4, 0],
                        [-205, 65, 4, 0],
                        [-220, 39, 4, 0],
                        [-236, 10, 4, 0],
                        [-252, -15, 4, 0],
                        [-268, -44, 4, 0],
                        [-284, -70, 4, 0],
                        [-299, -99, 4, 0],
                        [-315, -126, 4, 0],
                        [-339, -168, 4, 0],
                        [-363, -210, 4, 1]
                    ],
                    [
                        [-400, 400, 0, 1],
                        [-360, 400, 7, 0],
                        [-320, 400, 7, 0],
                        [-280, 400, 7, 0],
                        [-240, 400, 7, 0],
                        [-200, 400, 7, 0],
                        [-160, 400, 7, 0],
                        [-120, 400, 7, 0],
                        [-80, 400, 7, 0],
                        [-40, 400, 7, 0],
                        [0, 400, 7, 0],
                        [40, 400, 7, 0],
                        [80, 400, 7, 0],
                        [120, 400, 7, 0],
                        [160, 400, 7, 0],
                        [240, 400, 7, 0],
                        [280, 400, 7, 0],
                        [320, 400, 7, 0],
                        [360, 400, 7, 0],
                        [400, 400, 7, 1],
                        [400, 360, 4, 0],
                        [400, 320, 4, 0],
                        [400, 280, 4, 0],
                        [400, 240, 4, 0],
                        [400, 200, 4, 0],
                        [400, 160, 4, 0],
                        [400, 120, 4, 0],
                        [400, 80, 4, 0],
                        [400, 40, 4, 0],
                        [400, 0, 4, 0],
                        [400, -40, 4, 0],
                        [400, -80, 4, 0],
                        [400, -120, 4, 0],
                        [400, -160, 4, 0],
                        [400, -200, 4, 0],
                        [400, -240, 4, 0],
                        [400, -280, 4, 0],
                        [400, -320, 4, 0],
                        [400, -360, 4, 0],
                        [400, -400, 4, 1],
                        [360, -400, 5, 0],
                        [320, -400, 5, 0],
                        [280, -400, 5, 0],
                        [240, -400, 5, 0],
                        [200, -400, 5, 0],
                        [160, -400, 5, 0],
                        [120, -400, 5, 0],
                        [80, -400, 5, 0],
                        [40, -400, 5, 0],
                        [0, -400, 5, 0],
                        [-40, -400, 5, 0],
                        [-80, -400, 5, 0],
                        [-120, -400, 5, 0],
                        [-160, -400, 5, 0],
                        [-240, -400, 5, 0],
                        [-280, -400, 5, 0],
                        [-320, -400, 5, 0],
                        [-360, -400, 5, 0],
                        [-400, -400, 5, 1],
                        [-400, -360, 6, 0],
                        [-400, -320, 6, 0],
                        [-400, -280, 6, 0],
                        [-400, -240, 6, 0],
                        [-400, -200, 6, 0],
                        [-400, -160, 6, 0],
                        [-400, -120, 6, 0],
                        [-400, -80, 6, 0],
                        [-400, -40, 6, 0],
                        [-400, 0, 6, 0],
                        [-400, 40, 6, 0],
                        [-400, 80, 6, 0],
                        [-400, 120, 6, 0],
                        [-400, 160, 6, 0],
                        [-400, 200, 6, 0],
                        [-400, 240, 6, 0],
                        [-400, 280, 6, 0],
                        [-400, 320, 6, 0],
                        [-400, 360, 6, 0],
                        [-400, 400, 6, 1]
                    ],
                    [
                        [-400, 0, 7, 1],
                        [-392, 8, 7, 0],
                        [-384, 16, 7, 0],
                        [-376, 24, 7, 0],
                        [-368, 32, 7, 0],
                        [-360, 40, 7, 0],
                        [-352, 48, 2, 0],
                        [-344, 56, 2, 0],
                        [-336, 64, 2, 0],
                        [-328, 72, 2, 0],
                        [-320, 80, 2, 0],
                        [-312, 88, 7, 0],
                        [-304, 96, 7, 0],
                        [-296, 104, 7, 0],
                        [-288, 112, 7, 0],
                        [-280, 120, 7, 0],
                        [-272, 128, 2, 0],
                        [-264, 136, 2, 0],
                        [-256, 144, 2, 0],
                        [-248, 152, 2, 0],
                        [-240, 160, 2, 0],
                        [-232, 168, 7, 0],
                        [-224, 176, 7, 0],
                        [-216, 184, 7, 0],
                        [-208, 192, 7, 0],
                        [-200, 200, 7, 0],
                        [-192, 208, 2, 0],
                        [-184, 216, 2, 0],
                        [-176, 224, 2, 0],
                        [-168, 232, 2, 0],
                        [-160, 240, 2, 0],
                        [-152, 248, 7, 0],
                        [-144, 256, 7, 0],
                        [-136, 264, 7, 0],
                        [-128, 272, 7, 0],
                        [-120, 280, 7, 0],
                        [-112, 288, 2, 0],
                        [-104, 296, 2, 0],
                        [-96, 304, 2, 0],
                        [-88, 312, 2, 0],
                        [-80, 320, 2, 0],
                        [-72, 328, 7, 0],
                        [-64, 336, 7, 0],
                        [-56, 344, 7, 0],
                        [-48, 352, 7, 0],
                        [-40, 360, 7, 0],
                        [-32, 368, 2, 0],
                        [-24, 376, 2, 0],
                        [-16, 384, 2, 0],
                        [-8, 392, 2, 0],
                        [0, 400, 2, 1],
                        [8, 392, 7, 0],
                        [16, 384, 7, 0],
                        [24, 376, 7, 0],
                        [32, 368, 7, 0],
                        [40, 360, 7, 0],
                        [48, 352, 2, 0],
                        [56, 344, 2, 0],
                        [64, 336, 2, 0],
                        [72, 328, 2, 0],
                        [80, 320, 2, 0],
                        [88, 312, 7, 0],
                        [96, 304, 7, 0],
                        [104, 296, 7, 0],
                        [112, 288, 7, 0],
                        [120, 280, 7, 0],
                        [128, 272, 2, 0],
                        [136, 264, 2, 0],
                        [144, 256, 2, 0],
                        [152, 248, 2, 0],
                        [160, 240, 2, 0],
                        [168, 232, 7, 0],
                        [176, 224, 7, 0],
                        [184, 216, 7, 0],
                        [192, 208, 7, 0],
                        [200, 200, 7, 0],
                        [208, 192, 2, 0],
                        [216, 184, 2, 0],
                        [224, 176, 2, 0],
                        [232, 168, 2, 0],
                        [240, 160, 2, 0],
                        [248, 152, 7, 0],
                        [256, 144, 7, 0],
                        [264, 136, 7, 0],
                        [272, 128, 7, 0],
                        [280, 120, 7, 0],
                        [288, 112, 2, 0],
                        [296, 104, 2, 0],
                        [304, 96, 2, 0],
                        [312, 88, 2, 0],
                        [320, 80, 2, 0],
                        [328, 72, 7, 0],
                        [336, 64, 7, 0],
                        [344, 56, 7, 0],
                        [352, 48, 7, 0],
                        [360, 40, 7, 0],
                        [368, 32, 2, 0],
                        [376, 24, 2, 0],
                        [384, 16, 2, 0],
                        [392, 8, 2, 0],
                        [400, 0, 2, 1],
                        [392, -8, 7, 0],
                        [384, -16, 7, 0],
                        [376, -24, 7, 0],
                        [368, -32, 7, 0],
                        [360, -40, 7, 0],
                        [352, -48, 2, 0],
                        [344, -56, 2, 0],
                        [336, -64, 2, 0],
                        [328, -72, 2, 0],
                        [320, -80, 2, 0],
                        [312, -88, 7, 0],
                        [304, -96, 7, 0],
                        [296, -104, 7, 0],
                        [288, -112, 7, 0],
                        [280, -120, 7, 0],
                        [272, -128, 2, 0],
                        [264, -136, 2, 0],
                        [256, -144, 2, 0],
                        [248, -152, 2, 0],
                        [240, -160, 2, 0],
                        [232, -168, 7, 0],
                        [224, -176, 7, 0],
                        [216, -184, 7, 0],
                        [208, -192, 7, 0],
                        [200, -200, 7, 0],
                        [192, -208, 2, 0],
                        [184, -216, 2, 0],
                        [176, -224, 2, 0],
                        [168, -232, 2, 0],
                        [160, -240, 2, 0],
                        [152, -248, 7, 0],
                        [144, -256, 7, 0],
                        [136, -264, 7, 0],
                        [128, -272, 7, 0],
                        [120, -280, 7, 0],
                        [112, -288, 2, 0],
                        [104, -296, 2, 0],
                        [96, -304, 2, 0],
                        [88, -312, 2, 0],
                        [80, -320, 2, 0],
                        [72, -328, 7, 0],
                        [64, -336, 7, 0],
                        [56, -344, 7, 0],
                        [48, -352, 7, 0],
                        [40, -360, 7, 0],
                        [32, -368, 2, 0],
                        [24, -376, 2, 0],
                        [16, -384, 2, 0],
                        [8, -392, 2, 0],
                        [0, -400, 2, 1],
                        [-8, -392, 7, 0],
                        [-16, -384, 7, 0],
                        [-24, -376, 7, 0],
                        [-32, -368, 7, 0],
                        [-40, -360, 7, 0],
                        [-48, -352, 2, 0],
                        [-56, -344, 2, 0],
                        [-64, -336, 2, 0],
                        [-72, -328, 2, 0],
                        [-80, -320, 2, 0],
                        [-88, -312, 7, 0],
                        [-96, -304, 7, 0],
                        [-104, -296, 7, 0],
                        [-112, -288, 7, 0],
                        [-120, -280, 7, 0],
                        [-128, -272, 2, 0],
                        [-136, -264, 2, 0],
                        [-144, -256, 2, 0],
                        [-152, -248, 2, 0],
                        [-160, -240, 2, 0],
                        [-168, -232, 7, 0],
                        [-176, -224, 7, 0],
                        [-184, -216, 7, 0],
                        [-192, -208, 7, 0],
                        [-200, -200, 7, 0],
                        [-208, -192, 2, 0],
                        [-216, -184, 2, 0],
                        [-224, -176, 2, 0],
                        [-232, -168, 2, 0],
                        [-240, -160, 2, 0],
                        [-248, -152, 7, 0],
                        [-256, -144, 7, 0],
                        [-264, -136, 7, 0],
                        [-272, -128, 7, 0],
                        [-280, -120, 7, 0],
                        [-288, -112, 2, 0],
                        [-296, -104, 2, 0],
                        [-304, -96, 2, 0],
                        [-312, -88, 2, 0],
                        [-320, -80, 2, 0],
                        [-328, -72, 7, 0],
                        [-336, -64, 7, 0],
                        [-344, -56, 7, 0],
                        [-352, -48, 7, 0],
                        [-360, -40, 7, 0],
                        [-368, -32, 2, 0],
                        [-376, -24, 2, 0],
                        [-384, -16, 2, 0],
                        [-392, -8, 2, 0],
                        [-400, 0, 2, 1]
                    ],
                    [
                        [0, 400, 0, 3],
                        [40, 370, 7, 0],
                        [80, 340, 7, 0],
                        [120, 310, 7, 0],
                        [160, 278, 7, 0],
                        [200, 248, 7, 0],
                        [240, 218, 7, 0],
                        [280, 188, 7, 0],
                        [320, 156, 7, 0],
                        [360, 126, 7, 0],
                        [400, 94, 7, 3],
                        [386, 48, 2, 0],
                        [372, 2, 2, 0],
                        [358, -40, 2, 0],
                        [344, -84, 2, 0],
                        [330, -134, 2, 0],
                        [316, -174, 2, 0],
                        [302, -224, 2, 0],
                        [288, -270, 2, 0],
                        [274, -314, 2, 0],
                        [260, -360, 2, 0],
                        [248, -400, 2, 3],
                        [204, -400, 4, 0],
                        [160, -400, 4, 0],
                        [116, -400, 4, 0],
                        [72, -400, 4, 0],
                        [28, -400, 4, 0],
                        [-28, -400, 4, 0],
                        [-72, -400, 4, 0],
                        [-116, -400, 4, 0],
                        [-160, -400, 4, 0],
                        [-204, -400, 4, 0],
                        [-248, -400, 4, 3],
                        [-260, -360, 5, 0],
                        [-274, -314, 5, 0],
                        [-288, -270, 5, 0],
                        [-302, -224, 5, 0],
                        [-316, -174, 5, 0],
                        [-330, -134, 5, 0],
                        [-344, -84, 5, 0],
                        [-358, -40, 5, 0],
                        [-372, 2, 5, 0],
                        [-372, 2, 5, 0],
                        [-386, 48, 5, 0],
                        [-400, 94, 5, 3],
                        [-360, 126, 6, 0],
                        [-320, 156, 6, 0],
                        [-280, 188, 6, 0],
                        [-240, 218, 6, 0],
                        [-200, 248, 6, 0],
                        [-160, 278, 6, 0],
                        [-120, 310, 6, 0],
                        [-80, 340, 6, 0],
                        [-40, 370, 6, 0],
                        [0, 400, 6, 3]
                    ],
                    [
                        [0, 398, 0, 3],
                        [-96, 358, 1, 0],
                        [-191, 318, 1, 0],
                        [-283, 283, 1, 3],
                        [-318, 191, 2, 0],
                        [-358, 96, 2, 0],
                        [-398, 0, 2, 3],
                        [-358, -96, 3, 0],
                        [-318, -191, 3, 0],
                        [-283, -283, 3, 3],
                        [-191, -318, 4, 0],
                        [-96, -358, 4, 0],
                        [0, -398, 4, 3],
                        [96, -358, 5, 0],
                        [191, -318, 5, 0],
                        [283, -283, 5, 3],
                        [318, -191, 6, 0],
                        [358, -96, 6, 0],
                        [398, 0, 6, 3],
                        [358, 96, 7, 0],
                        [318, 191, 7, 0],
                        [283, 283, 7, 3],
                        [191, 318, 4, 0],
                        [96, 358, 4, 0],
                        [0, 398, 4, 3]
                    ],
                    [
                        [0, 0, 0, 1],
                        [132, 60, 2, 1],
                        [398, -62, 2, 1],
                        [0, 0, 2, 1, 0, 0, 2, 1],
                        [-30, 175, 4, 1],
                        [192, 392, 4, 1],
                        [0, 0, 4, 1, 0, 0, 4, 1],
                        [-178, 52, 5, 1],
                        [-298, 340, 5, 1],
                        [0, 0, 5, 1, 0, 0, 5, 1],
                        [-75, -125, 6, 1],
                        [-405, -168, 6, 1],
                        [0, 0, 6, 1, 0, 0, 6, 1],
                        [90, -90, 7, 1],
                        [38, -405, 7, 1],
                        [0, 0, 7, 1]
                    ],
                    [
                        [-400, 240, 0, 1],
                        [-400, 400, 4, 1],
                        [-240, 400, 4, 1],
                        [240, 400, 0, 1],
                        [400, 400, 5, 1],
                        [400, 240, 5, 1],
                        [400, -240, 0, 1],
                        [400, -400, 6, 1],
                        [240, -400, 6, 1],
                        [-240, -400, 0, 1],
                        [-400, -400, 7, 1],
                        [-400, -240, 7, 1]
                    ],
                    [
                        [42, 42, 0, 1],
                        [403, 0, 2, 1],
                        [42, -42, 2, 1],
                        [0, -403, 7, 1],
                        [-42, -42, 7, 1],
                        [-403, 0, 4, 1],
                        [-42, 42, 4, 1],
                        [0, 403, 6, 1],
                        [42, 42, 6, 1]
                    ],
                    [
                        [0, 398, 0, 1],
                        [0, 398, 1, 1],
                        [-96, 96, 1, 1],
                        [-96, 96, 1, 1],
                        [-398, 96, 2, 1],
                        [-398, 96, 2, 1],
                        [-151, -96, 2, 1],
                        [-151, -96, 2, 1],
                        [-247, -398, 4, 1],
                        [-247, -398, 4, 1],
                        [0, -211, 4, 1],
                        [0, -211, 4, 1],
                        [247, -398, 6, 1],
                        [247, -398, 6, 1],
                        [151, -96, 6, 1],
                        [151, -96, 6, 1],
                        [398, 96, 7, 1],
                        [398, 96, 7, 1],
                        [96, 96, 7, 1],
                        [96, 96, 7, 1],
                        [0, 398, 1, 1],
                        [0, 398, 1, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [405, 132, 2, 1],
                        [360, 225, 2, 1],
                        [0, 0, 2, 1],
                        [0, 425, 4, 1],
                        [-103, 412, 4, 1],
                        [0, 0, 4, 1],
                        [-405, 132, 6, 1],
                        [-424, 30, 6, 1],
                        [0, 0, 6, 1],
                        [-250, -344, 5, 1],
                        [-159, -394, 5, 1],
                        [0, 0, 5, 1],
                        [250, -344, 7, 1],
                        [326, -273, 7, 1],
                        [0, 0, 7, 1]
                    ],
                    [
                        [-2, 395, 0, 1],
                        [-245, -395, 4, 1],
                        [391, 92, 4, 1],
                        [-396, 92, 4, 1],
                        [241, -395, 4, 1],
                        [-2, 395, 4, 1]
                    ],
                    [
                        [-70, 169, 0, 1],
                        [0, 417, 1, 1],
                        [69, 170, 1, 1],
                        [292, 296, 4, 1],
                        [165, 71, 4, 1],
                        [414, 3, 2, 1],
                        [164, -65, 2, 1],
                        [293, -290, 5, 1],
                        [68, -162, 5, 1],
                        [0, -410, 3, 1],
                        [-69, -163, 3, 1],
                        [-294, -289, 6, 1],
                        [-166, -64, 6, 1],
                        [-416, 3, 7, 1],
                        [-166, 71, 7, 1],
                        [-293, 296, 5, 1],
                        [-70, 169, 5, 1]
                    ],
                    [
                        [-49, 181, 0, 1],
                        [0, 412, 1, 1],
                        [48, 181, 1, 1],
                        [207, 357, 4, 1],
                        [131, 130, 4, 1],
                        [357, 205, 2, 1],
                        [180, 46, 2, 1],
                        [413, -3, 5, 1],
                        [180, -51, 5, 1],
                        [357, -209, 3, 1],
                        [131, -134, 3, 1],
                        [207, -358, 6, 1],
                        [47, -182, 6, 1],
                        [1, -414, 1, 1],
                        [-49, -183, 1, 1],
                        [-206, -360, 4, 1],
                        [-132, -134, 4, 1],
                        [-360, -209, 2, 1],
                        [-182, -51, 2, 1],
                        [-414, -3, 5, 1],
                        [-182, 45, 5, 1],
                        [-359, 205, 3, 1],
                        [-133, 132, 3, 1],
                        [-208, 358, 6, 1],
                        [-49, 181, 6, 1]
                    ],
                    [
                        [0, 418, 0, 1],
                        [0, -1, 7, 1],
                        [1, -418, 4, 1],
                        [295, -296, 0, 1],
                        [0, -1, 2, 1],
                        [-295, 295, 3, 1],
                        [-419, -1, 0, 1],
                        [-1, -1, 5, 1],
                        [417, -2, 1, 1],
                        [295, 294, 0, 1],
                        [0, -1, 6, 1],
                        [-296, -297, 7, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [-176, 176, 4, 0],
                        [-352, 352, 4, 1],
                        [-352, 176, 4, 0],
                        [-352, 0, 4, 1],
                        [-176, 0, 4, 0],
                        [0, 0, 4, 1],
                        [176, -176, 6, 0],
                        [352, -352, 6, 1],
                        [352, -176, 6, 0],
                        [352, 0, 6, 1],
                        [176, 0, 6, 0],
                        [0, 0, 6, 1],
                        [-176, -176, 5, 0],
                        [-352, -352, 5, 1],
                        [-176, -352, 5, 0],
                        [0, -352, 5, 1],
                        [0, -176, 5, 0],
                        [0, 0, 5, 1],
                        [176, 176, 7, 0],
                        [352, 352, 7, 1],
                        [176, 352, 7, 0],
                        [0, 352, 7, 1],
                        [0, 176, 7, 0],
                        [0, 0, 7, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [136, 374, 7, 1],
                        [-136, 374, 7, 1],
                        [0, 0, 7, 1],
                        [-392, -70, 4, 1],
                        [-255, -306, 4, 1],
                        [0, 0, 4, 1],
                        [256, -305, 5, 1],
                        [392, -69, 5, 1],
                        [0, 0, 5, 1]
                    ],
                    [
                        [77, 235, 0, 1],
                        [102, 217, 5, 0],
                        [127, 197, 5, 0],
                        [149, 181, 5, 0],
                        [183, 157, 4, 0],
                        [218, 130, 4, 0],
                        [253, 105, 4, 0],
                        [288, 79, 4, 0],
                        [319, 55, 4, 0],
                        [345, 37, 5, 0],
                        [372, 18, 5, 0],
                        [395, 0, 5, 1],
                        [248, -1, 0, 1],
                        [237, -36, 5, 0],
                        [228, -66, 5, 0],
                        [218, -97, 5, 0],
                        [199, -153, 4, 0],
                        [181, -207, 4, 0],
                        [158, -276, 4, 0],
                        [146, -312, 5, 0],
                        [134, -348, 5, 0],
                        [123, -378, 5, 1],
                        [76, -236, 0, 1],
                        [39, -237, 5, 0],
                        [-3, -237, 5, 0],
                        [-44, -237, 5, 0],
                        [-82, -237, 4, 0],
                        [-122, -237, 4, 0],
                        [-179, -237, 4, 0],
                        [-231, -237, 4, 0],
                        [-257, -237, 5, 0],
                        [-281, -237, 5, 0],
                        [-319, -237, 5, 1],
                        [-203, -144, 0, 1],
                        [-208, -126, 5, 0],
                        [-214, -105, 5, 0],
                        [-221, -85, 5, 0],
                        [-230, -57, 4, 0],
                        [-245, -9, 4, 0],
                        [-262, 44, 4, 0],
                        [-280, 102, 4, 0],
                        [-289, 131, 4, 0],
                        [-299, 164, 5, 0],
                        [-309, 194, 5, 0],
                        [-321, 231, 5, 1],
                        [-201, 145, 0, 1],
                        [-167, 169, 5, 0],
                        [-136, 190, 5, 0],
                        [-114, 207, 5, 0],
                        [-62, 244, 4, 0],
                        [-13, 278, 4, 0],
                        [43, 318, 4, 0],
                        [68, 337, 5, 0],
                        [94, 356, 5, 0],
                        [122, 377, 5, 0]
                    ],
                    [
                        [34, 67, 0, 1],
                        [34, 151, 2, 0],
                        [34, 235, 2, 0],
                        [34, 319, 2, 0],
                        [34, 403, 2, 1],
                        [-34, 403, 2, 1],
                        [-34, 319, 2, 0],
                        [-34, 235, 2, 0],
                        [-34, 151, 2, 0],
                        [-34, 67, 2, 1],
                        [34, 67, 2, 1],
                        [-76, -3, 0, 1],
                        [-146, -45, 4, 0],
                        [-217, -86, 4, 0],
                        [-287, -126, 4, 0],
                        [-360, -168, 4, 1],
                        [-324, -227, 4, 1],
                        [-254, -186, 4, 0],
                        [-183, -146, 4, 0],
                        [-113, -104, 4, 0],
                        [-42, -64, 4, 1],
                        [-76, -3, 4, 1],
                        [76, -3, 0, 1],
                        [146, -45, 6, 0],
                        [217, -86, 6, 0],
                        [287, -126, 6, 0],
                        [360, -168, 6, 1],
                        [324, -227, 6, 1],
                        [254, -186, 6, 0],
                        [183, -146, 6, 0],
                        [113, -104, 6, 0],
                        [42, -64, 6, 1],
                        [76, -3, 6, 1]
                    ],
                    [
                        [-98, 98, 0, 1],
                        [-390, 98, 4, 1],
                        [-390, -98, 4, 1],
                        [-98, -98, 4, 1],
                        [-98, -390, 5, 1],
                        [98, -390, 5, 1],
                        [98, -98, 5, 1],
                        [390, -98, 6, 1],
                        [390, 98, 6, 1],
                        [98, 98, 6, 1],
                        [98, 390, 7, 1],
                        [-98, 390, 7, 1],
                        [-98, 98, 7, 1]
                    ],
                    [
                        [0, 40, 0, 1],
                        [-360, 400, 7, 1],
                        [360, 400, 7, 1],
                        [0, 40, 7, 1],
                        [0, 40, 7, 1],
                        [0, -40, 0, 1],
                        [-360, -400, 6, 1],
                        [360, -400, 6, 1],
                        [0, -40, 6, 1],
                        [0, -40, 6, 1]
                    ],
                    [
                        [-185, 185, 0, 1],
                        [-185, 296, 4, 1],
                        [-296, 296, 4, 1],
                        [-296, 185, 4, 1],
                        [-185, 185, 4, 1],
                        [-185, -185, 0, 1],
                        [-185, -296, 5, 1],
                        [-296, -296, 5, 1],
                        [-296, -185, 5, 1],
                        [-185, -185, 5, 1],
                        [185, -185, 0, 1],
                        [185, -296, 6, 1],
                        [296, -296, 6, 1],
                        [296, -185, 6, 1],
                        [185, -185, 6, 1],
                        [185, 185, 0, 1],
                        [185, 296, 7, 1],
                        [296, 296, 7, 1],
                        [296, 185, 7, 1],
                        [185, 185, 7, 1]
                    ],
                    [
                        [-375, 15, 0, 1],
                        [-345, 15, 7, 1],
                        [-345, -15, 7, 1],
                        [-375, -15, 7, 1],
                        [-375, 15, 7, 1],
                        [-285, 15, 0, 1],
                        [-255, 15, 7, 1],
                        [-255, -15, 7, 1],
                        [-285, -15, 7, 1],
                        [-285, 15, 7, 1],
                        [-195, 15, 0, 1],
                        [-165, 15, 2, 1],
                        [-165, -15, 2, 1],
                        [-195, -15, 2, 1],
                        [-195, 15, 2, 1],
                        [-105, 15, 0, 1],
                        [-75, 15, 2, 1],
                        [-75, -15, 2, 1],
                        [-105, -15, 2, 1],
                        [-105, 15, 2, 1],
                        [-15, 15, 0, 1],
                        [15, 15, 7, 1],
                        [15, -15, 7, 1],
                        [-15, -15, 7, 1],
                        [-15, 15, 7, 1],
                        [75, 15, 0, 1],
                        [105, 15, 4, 1],
                        [105, -15, 4, 1],
                        [75, -15, 4, 1],
                        [75, 15, 4, 1],
                        [165, 15, 0, 1],
                        [195, 15, 4, 1],
                        [195, -15, 4, 1],
                        [165, -15, 4, 1],
                        [165, 15, 4, 1],
                        [255, 15, 0, 1],
                        [285, 15, 6, 1],
                        [285, -15, 6, 1],
                        [255, -15, 6, 1],
                        [255, 15, 6, 1],
                        [345, 15, 0, 1],
                        [375, 15, 6, 1],
                        [375, -15, 6, 1],
                        [345, -15, 6, 1],
                        [345, 15, 6, 1]
                    ],
                    [
                        [-403, -20, 0, 1],
                        [-336, -20, 5, 0],
                        [-269, -20, 5, 0],
                        [-202, -20, 5, 0],
                        [-134, -20, 5, 0],
                        [-67, -20, 5, 0],
                        [0, -20, 5, 0],
                        [67, -20, 5, 0],
                        [134, -20, 5, 0],
                        [202, -20, 5, 0],
                        [269, -20, 5, 0],
                        [336, -20, 5, 0],
                        [403, -20, 5, 1],
                        [403, 20, 7, 1],
                        [336, 20, 2, 0],
                        [269, 20, 2, 0],
                        [202, 20, 2, 0],
                        [134, 20, 2, 0],
                        [67, 20, 2, 0],
                        [0, 20, 2, 0],
                        [-67, 20, 2, 0],
                        [-134, 20, 2, 0],
                        [-202, 20, 2, 0],
                        [-269, 20, 2, 0],
                        [-336, 20, 2, 0],
                        [-403, 20, 2, 1],
                        [-403, -20, 7, 1]
                    ],
                    [
                        [-20, 0, 0, 1],
                        [20, 0, 7, 1],
                        [20, 1, 7, 1],
                        [-20, 1, 7, 1],
                        [-20, 2, 7, 1],
                        [20, 2, 7, 1],
                        [20, 3, 7, 1],
                        [-20, 3, 7, 1],
                        [-20, 4, 7, 1],
                        [20, 4, 7, 1],
                        [20, 5, 7, 1],
                        [-20, 5, 7, 1],
                        [-20, 6, 7, 1],
                        [20, 6, 7, 1],
                        [20, 7, 7, 1],
                        [-20, 7, 7, 1],
                        [-20, 8, 7, 1],
                        [20, 8, 7, 1],
                        [20, 9, 7, 1],
                        [-20, 9, 7, 1],
                        [-20, 10, 7, 1],
                        [20, 10, 7, 1],
                        [20, 11, 7, 1],
                        [-20, 11, 7, 1],
                        [-20, 12, 0, 1],
                        [20, 12, 7, 1],
                        [20, 13, 7, 1],
                        [-20, 13, 7, 1],
                        [-20, 14, 7, 1],
                        [20, 14, 7, 1],
                        [20, 15, 7, 1],
                        [-20, 15, 7, 1],
                        [-20, 16, 7, 1],
                        [20, 16, 7, 1],
                        [20, 17, 7, 1],
                        [-20, 17, 7, 1],
                        [-20, 18, 7, 1],
                        [20, 18, 7, 1],
                        [20, 19, 7, 1],
                        [-20, 19, 7, 1],
                        [-20, 20, 7, 1],
                        [20, 20, 7, 1],
                        [20, 21, 7, 1],
                        [-20, 21, 7, 1],
                        [-20, 22, 7, 1],
                        [20, 22, 7, 1],
                        [20, 23, 7, 1],
                        [-20, 23, 7, 1],
                        [-20, 24, 7, 1],
                        [20, 24, 7, 1],
                        [20, 25, 7, 1],
                        [-20, 25, 7, 1],
                        [-20, 26, 7, 1],
                        [20, 26, 7, 1],
                        [20, 27, 7, 1],
                        [-20, 28, 7, 1],
                        [-20, 28, 7, 1],
                        [20, 28, 7, 1],
                        [20, 29, 7, 1],
                        [-20, 29, 7, 1],
                        [-20, 30, 7, 1],
                        [20, 30, 7, 1],
                        [20, 31, 7, 1],
                        [-20, 31, 7, 1],
                        [-20, 32, 7, 1],
                        [20, 32, 7, 1],
                        [20, 33, 7, 1],
                        [-20, 33, 7, 1],
                        [-20, 34, 7, 1],
                        [20, 34, 7, 1],
                        [20, 35, 7, 1],
                        [-20, 35, 7, 1],
                        [-20, 36, 7, 1],
                        [20, 36, 7, 1],
                        [20, 37, 7, 1],
                        [-20, 37, 7, 1],
                        [-20, 38, 7, 1],
                        [20, 38, 7, 1],
                        [20, 39, 7, 1],
                        [-20, 39, 7, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [0, 100, 1, 1],
                        [100, 100, 1, 1],
                        [100, 200, 4, 1],
                        [200, 200, 4, 1],
                        [200, 300, 2, 1],
                        [300, 300, 2, 1],
                        [300, 400, 7, 1],
                        [400, 400, 7, 1]
                    ],
                    [
                        [-450, 400, 0, 1],
                        [-350, 400, 7, 1],
                        [-350, 300, 1, 1],
                        [-250, 300, 1, 1],
                        [-250, 200, 4, 1],
                        [-150, 200, 4, 1],
                        [-150, 100, 2, 1],
                        [-50, 100, 2, 1],
                        [-50, 0, 5, 1],
                        [50, 0, 5, 1],
                        [50, 100, 3, 1],
                        [150, 100, 3, 1],
                        [150, 200, 6, 1],
                        [250, 200, 6, 1],
                        [250, 300, 2, 1],
                        [350, 300, 2, 1],
                        [350, 400, 7, 1],
                        [450, 400, 7, 1]
                    ]
                ]
            }, {
                label: "\u5706\u5f27",
                arr: [
                    [
                        [0, 400, 0, 1],
                        [28, 399, 1, 0],
                        [56, 396, 1, 0],
                        [83, 391, 1, 0],
                        [110, 384, 1, 0],
                        [137, 376, 1, 0],
                        [163, 366, 1, 0],
                        [188, 353, 1, 0],
                        [212, 339, 1, 0],
                        [235, 324, 1, 0],
                        [257, 306, 1, 0],
                        [278, 288, 3, 0],
                        [297, 268, 3, 0],
                        [315, 246, 3, 0],
                        [332, 224, 3, 0],
                        [346, 200, 3, 0],
                        [360, 175, 3, 0],
                        [371, 150, 3, 0],
                        [380, 124, 3, 0],
                        [388, 97, 3, 0],
                        [394, 70, 3, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 0],
                        [400, -14, 6, 0],
                        [398, -42, 6, 0],
                        [394, -70, 6, 0],
                        [388, -97, 6, 0],
                        [380, -124, 6, 0],
                        [371, -150, 6, 0],
                        [360, -175, 6, 0],
                        [346, -200, 6, 0],
                        [332, -224, 5, 0],
                        [315, -246, 5, 0],
                        [297, -268, 5, 0],
                        [278, -288, 5, 0],
                        [257, -306, 5, 0],
                        [235, -324, 5, 0],
                        [212, -339, 5, 0],
                        [188, -353, 5, 0],
                        [163, -366, 5, 0],
                        [137, -376, 5, 0],
                        [110, -384, 4, 0],
                        [83, -391, 4, 0],
                        [56, -396, 4, 0],
                        [28, -399, 4, 0],
                        [0, -400, 4, 0],
                        [-28, -399, 4, 0],
                        [-56, -396, 4, 0],
                        [-83, -391, 4, 0],
                        [-124, -380, 4, 0],
                        [-163, -366, 4, 0],
                        [-200, -346, 2, 0],
                        [-235, -324, 2, 0],
                        [-257, -306, 2, 0],
                        [-278, -288, 2, 0],
                        [-297, -268, 2, 0],
                        [-315, -246, 2, 0],
                        [-332, -224, 2, 0],
                        [-346, -200, 2, 0],
                        [-360, -175, 2, 0],
                        [-371, -150, 2, 0],
                        [-380, -124, 7, 0],
                        [-388, -97, 7, 0],
                        [-394, -70, 7, 0],
                        [-398, -42, 7, 0],
                        [-400, 0, 7, 0],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 4, 0],
                        [-353, 188, 4, 0],
                        [-339, 212, 4, 0],
                        [-324, 235, 4, 0],
                        [-306, 257, 4, 0],
                        [-288, 278, 4, 0],
                        [-268, 297, 4, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 2, 0],
                        [-150, 371, 2, 0],
                        [-124, 380, 2, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 1]
                    ],
                    [
                        [300, 180, 0, 1],
                        [269, 184, 5, 0],
                        [240, 196, 5, 0],
                        [215, 215, 5, 0],
                        [196, 240, 5, 0],
                        [184, 269, 5, 0],
                        [180, 300, 5, 0],
                        [184, 331, 5, 0],
                        [196, 360, 5, 0],
                        [215, 385, 5, 0],
                        [240, 404, 5, 0],
                        [269, 416, 5, 0],
                        [300, 420, 5, 0],
                        [300, 420, 5, 0],
                        [331, 416, 5, 0],
                        [360, 404, 5, 0],
                        [385, 385, 5, 0],
                        [404, 360, 5, 0],
                        [416, 331, 5, 0],
                        [420, 300, 5, 0],
                        [416, 269, 5, 0],
                        [404, 240, 5, 0],
                        [385, 215, 5, 0],
                        [360, 196, 5, 0],
                        [331, 184, 5, 0],
                        [300, 180, 5, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [0, 7, 4, 0],
                        [1, 21, 4, 0],
                        [3, 35, 4, 0],
                        [8, 55, 4, 0],
                        [12, 68, 4, 0],
                        [17, 81, 4, 0],
                        [23, 94, 4, 0],
                        [30, 106, 4, 0],
                        [38, 118, 4, 0],
                        [47, 129, 4, 0],
                        [56, 139, 4, 0],
                        [66, 149, 4, 0],
                        [77, 158, 4, 0],
                        [88, 166, 2, 0],
                        [100, 173, 2, 0],
                        [112, 180, 2, 0],
                        [125, 185, 2, 0],
                        [138, 190, 2, 0],
                        [152, 194, 2, 0],
                        [165, 197, 2, 0],
                        [179, 199, 2, 0],
                        [193, 200, 2, 0],
                        [200, 200, 2, 0],
                        [214, 200, 1, 0],
                        [228, 198, 1, 0],
                        [242, 196, 1, 0],
                        [255, 192, 1, 0],
                        [268, 188, 1, 0],
                        [281, 183, 1, 0],
                        [294, 177, 1, 0],
                        [306, 170, 1, 0],
                        [318, 162, 1, 0],
                        [329, 153, 1, 0],
                        [339, 144, 3, 0],
                        [349, 134, 3, 0],
                        [358, 123, 3, 0],
                        [366, 112, 3, 0],
                        [373, 100, 3, 0],
                        [380, 88, 3, 0],
                        [385, 75, 3, 0],
                        [390, 62, 3, 0],
                        [394, 48, 3, 0],
                        [397, 35, 3, 0],
                        [399, 21, 6, 0],
                        [400, 0, 6, 0],
                        [400, -7, 6, 0],
                        [399, -21, 6, 0],
                        [397, -35, 6, 0],
                        [394, -48, 6, 0],
                        [390, -62, 6, 0],
                        [385, -75, 6, 0],
                        [380, -88, 6, 0],
                        [373, -100, 6, 0],
                        [366, -112, 5, 0],
                        [358, -123, 5, 0],
                        [349, -134, 5, 0],
                        [339, -144, 5, 0],
                        [329, -153, 5, 0],
                        [318, -162, 5, 0],
                        [306, -170, 5, 0],
                        [294, -177, 5, 0],
                        [281, -183, 5, 0],
                        [268, -188, 5, 0],
                        [255, -192, 4, 0],
                        [242, -196, 4, 0],
                        [228, -198, 4, 0],
                        [214, -200, 4, 0],
                        [200, -200, 4, 0],
                        [186, -200, 4, 0],
                        [172, -198, 4, 0],
                        [158, -196, 4, 0],
                        [138, -190, 4, 0],
                        [119, -183, 4, 0],
                        [100, -173, 2, 0],
                        [82, -162, 2, 0],
                        [71, -153, 2, 0],
                        [61, -144, 2, 0],
                        [51, -134, 2, 0],
                        [42, -123, 2, 0],
                        [34, -112, 2, 0],
                        [27, -100, 2, 0],
                        [20, -88, 2, 0],
                        [15, -75, 2, 0],
                        [10, -62, 7, 0],
                        [6, -48, 7, 0],
                        [3, -35, 7, 0],
                        [1, -21, 7, 0],
                        [0, 0, 7, 1]
                    ],
                    [
                        [-250, 0, 0, 2],
                        [-253, -21, 7, 0],
                        [-261, -40, 7, 0],
                        [-273, -57, 7, 0],
                        [-290, -69, 7, 0],
                        [-309, -77, 7, 0],
                        [-330, -80, 7, 0],
                        [-351, -77, 7, 0],
                        [-370, -69, 7, 0],
                        [-387, -57, 7, 0],
                        [-399, -40, 7, 0],
                        [-407, -21, 7, 0],
                        [-410, 0, 7, 0],
                        [-407, 21, 7, 0],
                        [-399, 40, 7, 0],
                        [-387, 57, 7, 0],
                        [-370, 69, 7, 0],
                        [-351, 77, 7, 0],
                        [-330, 80, 7, 0],
                        [-330, 80, 7, 0],
                        [-309, 77, 7, 0],
                        [-290, 69, 7, 0],
                        [-273, 57, 7, 0],
                        [-261, 40, 7, 0],
                        [-253, 21, 7, 0],
                        [-250, 0, 7, 2],
                        [250, 0, 0, 2],
                        [253, 21, 6, 0],
                        [261, 40, 6, 0],
                        [273, 57, 6, 0],
                        [290, 69, 6, 0],
                        [309, 77, 6, 0],
                        [330, 80, 6, 0],
                        [330, 80, 6, 0],
                        [351, 77, 6, 0],
                        [370, 69, 6, 0],
                        [387, 57, 6, 0],
                        [399, 40, 6, 0],
                        [407, 21, 6, 0],
                        [410, 0, 6, 0],
                        [407, -21, 6, 0],
                        [399, -40, 6, 0],
                        [387, -57, 6, 0],
                        [370, -69, 6, 0],
                        [351, -77, 6, 0],
                        [330, -80, 6, 0],
                        [309, -77, 6, 0],
                        [290, -69, 6, 0],
                        [273, -57, 6, 0],
                        [261, -40, 6, 0],
                        [253, -21, 6, 0],
                        [250, 0, 6, 2]
                    ],
                    [
                        [0, 250, 0, 1],
                        [-21, 253, 5, 0],
                        [-40, 261, 5, 0],
                        [-57, 273, 5, 0],
                        [-69, 290, 5, 0],
                        [-77, 309, 5, 0],
                        [-80, 330, 5, 0],
                        [-77, 351, 5, 0],
                        [-69, 370, 5, 0],
                        [-57, 387, 5, 0],
                        [-40, 399, 5, 0],
                        [-21, 407, 5, 0],
                        [0, 410, 5, 0],
                        [0, 410, 5, 0],
                        [21, 407, 5, 0],
                        [40, 399, 5, 0],
                        [57, 387, 5, 0],
                        [69, 370, 5, 0],
                        [77, 351, 5, 0],
                        [80, 330, 5, 0],
                        [77, 309, 5, 0],
                        [69, 290, 5, 0],
                        [57, 273, 5, 0],
                        [40, 261, 5, 0],
                        [21, 253, 5, 0],
                        [0, 250, 5, 1],
                        [0, -250, 4, 1],
                        [0, -250, 5, 0],
                        [21, -253, 5, 0],
                        [40, -261, 5, 0],
                        [57, -273, 5, 0],
                        [69, -290, 5, 0],
                        [77, -309, 5, 0],
                        [80, -330, 5, 0],
                        [77, -351, 5, 0],
                        [69, -370, 5, 0],
                        [57, -387, 5, 0],
                        [40, -399, 5, 0],
                        [21, -407, 5, 0],
                        [0, -410, 5, 0],
                        [-21, -407, 5, 0],
                        [-40, -399, 5, 0],
                        [-57, -387, 5, 0],
                        [-69, -370, 5, 0],
                        [-77, -351, 5, 0],
                        [-80, -330, 5, 0],
                        [-77, -309, 5, 0],
                        [-69, -290, 5, 0],
                        [-57, -273, 5, 0],
                        [-40, -261, 5, 0],
                        [-21, -253, 5, 0],
                        [0, -250, 5, 1]
                    ],
                    [
                        [-330, 72, 0, 1],
                        [-311, 70, 7, 0],
                        [-294, 62, 7, 0],
                        [-279, 51, 7, 0],
                        [-268, 36, 7, 0],
                        [-260, 19, 7, 0],
                        [-258, 0, 7, 0],
                        [-260, -19, 7, 0],
                        [-268, -36, 7, 0],
                        [-279, -51, 7, 0],
                        [-294, -62, 7, 0],
                        [-311, -70, 7, 0],
                        [-330, -72, 7, 0],
                        [-349, -70, 7, 0],
                        [-366, -62, 7, 0],
                        [-381, -51, 7, 0],
                        [-392, -36, 7, 0],
                        [-400, -19, 7, 0],
                        [-402, 0, 7, 0],
                        [-400, 19, 7, 0],
                        [-392, 36, 7, 0],
                        [-381, 51, 7, 0],
                        [-366, 62, 7, 0],
                        [-349, 70, 7, 0],
                        [-330, 72, 7, 1],
                        [0, 72, 0, 1],
                        [19, 70, 6, 0],
                        [36, 62, 6, 0],
                        [51, 51, 6, 0],
                        [62, 36, 6, 0],
                        [70, 19, 6, 0],
                        [72, 0, 6, 0],
                        [70, -19, 6, 0],
                        [62, -36, 6, 0],
                        [51, -51, 6, 0],
                        [36, -62, 6, 0],
                        [19, -70, 6, 0],
                        [0, -72, 6, 0],
                        [-19, -70, 6, 0],
                        [-36, -62, 6, 0],
                        [-51, -51, 6, 0],
                        [-62, -36, 6, 0],
                        [-70, -19, 6, 0],
                        [-72, 0, 6, 0],
                        [-70, 19, 6, 0],
                        [-62, 36, 6, 0],
                        [-51, 51, 6, 0],
                        [-36, 62, 6, 0],
                        [-19, 70, 6, 0],
                        [0, 72, 6, 1],
                        [330, 72, 0, 1],
                        [349, 70, 5, 0],
                        [366, 62, 5, 0],
                        [381, 51, 5, 0],
                        [392, 36, 5, 0],
                        [400, 19, 5, 0],
                        [402, 0, 5, 0],
                        [400, -19, 5, 0],
                        [392, -36, 5, 0],
                        [381, -51, 5, 0],
                        [366, -62, 5, 0],
                        [349, -70, 5, 0],
                        [330, -72, 5, 0],
                        [311, -70, 5, 0],
                        [294, -62, 5, 0],
                        [279, -51, 5, 0],
                        [268, -36, 5, 0],
                        [260, -19, 5, 0],
                        [258, 0, 5, 0],
                        [260, 19, 5, 0],
                        [268, 36, 5, 0],
                        [279, 51, 5, 0],
                        [294, 62, 5, 0],
                        [311, 70, 5, 0],
                        [330, 72, 5, 1]
                    ],
                    [
                        [-330, 72, 0, 1],
                        [-311, 70, 7, 0],
                        [-294, 62, 7, 0],
                        [-279, 51, 7, 0],
                        [-268, 36, 7, 0],
                        [-260, 19, 7, 0],
                        [-258, 0, 7, 0],
                        [-260, -19, 7, 0],
                        [-268, -36, 7, 0],
                        [-279, -51, 7, 0],
                        [-294, -62, 7, 0],
                        [-311, -70, 7, 0],
                        [-330, -72, 7, 0],
                        [-349, -70, 7, 0],
                        [-366, -62, 7, 0],
                        [-381, -51, 7, 0],
                        [-392, -36, 7, 0],
                        [-400, -19, 7, 0],
                        [-402, 0, 7, 0],
                        [-400, 19, 7, 0],
                        [-392, 36, 7, 0],
                        [-381, 51, 7, 0],
                        [-366, 62, 7, 0],
                        [-349, 70, 7, 0],
                        [-330, 72, 7, 1],
                        [-110, 72, 0, 1],
                        [-91, 70, 6, 0],
                        [-74, 62, 6, 0],
                        [-59, 51, 6, 0],
                        [-48, 36, 6, 0],
                        [-40, 19, 6, 0],
                        [-38, 0, 6, 0],
                        [-40, -19, 6, 0],
                        [-48, -36, 6, 0],
                        [-59, -51, 6, 0],
                        [-74, -62, 6, 0],
                        [-91, -70, 6, 0],
                        [-110, -72, 6, 0],
                        [-129, -70, 6, 0],
                        [-146, -62, 6, 0],
                        [-161, -51, 6, 0],
                        [-172, -36, 6, 0],
                        [-180, -19, 6, 0],
                        [-182, 0, 6, 0],
                        [-180, 19, 6, 0],
                        [-172, 36, 6, 0],
                        [-161, 51, 6, 0],
                        [-146, 62, 6, 0],
                        [-129, 70, 6, 0],
                        [-110, 72, 6, 1],
                        [110, 72, 0, 1],
                        [129, 70, 5, 0],
                        [146, 62, 5, 0],
                        [161, 51, 5, 0],
                        [172, 36, 5, 0],
                        [180, 19, 5, 0],
                        [182, 0, 5, 0],
                        [180, -19, 5, 0],
                        [172, -36, 5, 0],
                        [161, -51, 5, 0],
                        [146, -62, 5, 0],
                        [129, -70, 5, 0],
                        [110, -72, 5, 0],
                        [91, -70, 5, 0],
                        [74, -62, 5, 0],
                        [59, -51, 5, 0],
                        [48, -36, 5, 0],
                        [40, -19, 5, 0],
                        [38, 0, 5, 0],
                        [40, 19, 5, 0],
                        [48, 36, 5, 0],
                        [59, 51, 5, 0],
                        [74, 62, 5, 0],
                        [91, 70, 5, 0],
                        [110, 72, 5, 1],
                        [330, 72, 0, 1],
                        [349, 70, 4, 0],
                        [366, 62, 4, 0],
                        [381, 51, 4, 0],
                        [392, 36, 4, 0],
                        [400, 19, 4, 0],
                        [402, 0, 4, 0],
                        [400, -19, 4, 0],
                        [392, -36, 4, 0],
                        [381, -51, 4, 0],
                        [366, -62, 4, 0],
                        [349, -70, 4, 0],
                        [330, -72, 4, 0],
                        [311, -70, 4, 0],
                        [294, -62, 4, 0],
                        [279, -51, 4, 0],
                        [268, -36, 4, 0],
                        [260, -19, 4, 0],
                        [258, 0, 4, 0],
                        [260, 19, 4, 0],
                        [268, 36, 4, 0],
                        [279, 51, 4, 0],
                        [294, 62, 4, 0],
                        [311, 70, 4, 0],
                        [330, 72, 4, 1]
                    ],
                    [
                        [-350, 50, 0, 1],
                        [-337, 48, 7, 0],
                        [-325, 43, 7, 0],
                        [-315, 35, 7, 0],
                        [-307, 25, 7, 0],
                        [-302, 13, 7, 0],
                        [-300, 0, 7, 0],
                        [-302, -13, 7, 0],
                        [-307, -25, 7, 0],
                        [-315, -35, 7, 0],
                        [-325, -43, 7, 0],
                        [-337, -48, 7, 0],
                        [-350, -50, 7, 0],
                        [-363, -48, 7, 0],
                        [-375, -43, 7, 0],
                        [-385, -35, 7, 0],
                        [-393, -25, 7, 0],
                        [-398, -13, 7, 0],
                        [-400, 0, 7, 0],
                        [-398, 13, 7, 0],
                        [-393, 25, 7, 0],
                        [-385, 35, 7, 0],
                        [-375, 43, 7, 0],
                        [-363, 48, 7, 0],
                        [-350, 50, 7, 1],
                        [-210, 50, 0, 1],
                        [-197, 48, 2, 0],
                        [-185, 43, 2, 0],
                        [-175, 35, 2, 0],
                        [-167, 25, 2, 0],
                        [-162, 13, 2, 0],
                        [-160, 0, 2, 0],
                        [-162, -13, 2, 0],
                        [-167, -25, 2, 0],
                        [-175, -35, 2, 0],
                        [-185, -43, 2, 0],
                        [-197, -48, 2, 0],
                        [-210, -50, 2, 0],
                        [-223, -48, 2, 0],
                        [-235, -43, 2, 0],
                        [-245, -35, 2, 0],
                        [-253, -25, 2, 0],
                        [-258, -13, 2, 0],
                        [-260, 0, 2, 0],
                        [-258, 13, 2, 0],
                        [-253, 25, 2, 0],
                        [-245, 35, 2, 0],
                        [-235, 43, 2, 0],
                        [-223, 48, 2, 0],
                        [-210, 50, 2, 1],
                        [-70, 50, 0, 1],
                        [-57, 48, 6, 0],
                        [-45, 43, 6, 0],
                        [-35, 35, 6, 0],
                        [-27, 25, 6, 0],
                        [-22, 13, 6, 0],
                        [-20, 0, 6, 0],
                        [-22, -13, 6, 0],
                        [-27, -25, 6, 0],
                        [-35, -35, 6, 0],
                        [-45, -43, 6, 0],
                        [-57, -48, 6, 0],
                        [-70, -50, 6, 0],
                        [-83, -48, 6, 0],
                        [-95, -43, 6, 0],
                        [-105, -35, 6, 0],
                        [-113, -25, 6, 0],
                        [-118, -13, 6, 0],
                        [-120, 0, 6, 0],
                        [-118, 13, 6, 0],
                        [-113, 25, 6, 0],
                        [-105, 35, 6, 0],
                        [-95, 43, 6, 0],
                        [-83, 48, 6, 0],
                        [-70, 50, 6, 1],
                        [70, 50, 0, 1],
                        [83, 48, 1, 0],
                        [95, 43, 1, 0],
                        [105, 35, 1, 0],
                        [113, 25, 1, 0],
                        [118, 13, 1, 0],
                        [120, 0, 1, 0],
                        [118, -13, 1, 0],
                        [113, -25, 1, 0],
                        [105, -35, 1, 0],
                        [95, -43, 1, 0],
                        [83, -48, 1, 0],
                        [70, -50, 1, 0],
                        [57, -48, 1, 0],
                        [45, -43, 1, 0],
                        [35, -35, 1, 0],
                        [27, -25, 1, 0],
                        [22, -13, 1, 0],
                        [20, 0, 1, 0],
                        [22, 13, 1, 0],
                        [27, 25, 1, 0],
                        [35, 35, 1, 0],
                        [45, 43, 1, 0],
                        [57, 48, 1, 0],
                        [70, 50, 1, 1],
                        [210, 50, 0, 1],
                        [223, 48, 4, 0],
                        [235, 43, 4, 0],
                        [245, 35, 4, 0],
                        [253, 25, 4, 0],
                        [258, 13, 4, 0],
                        [260, 0, 4, 0],
                        [258, -13, 4, 0],
                        [253, -25, 4, 0],
                        [245, -35, 4, 0],
                        [235, -43, 4, 0],
                        [223, -48, 4, 0],
                        [210, -50, 4, 0],
                        [197, -48, 4, 0],
                        [185, -43, 4, 0],
                        [175, -35, 4, 0],
                        [167, -25, 4, 0],
                        [162, -13, 4, 0],
                        [160, 0, 4, 0],
                        [162, 13, 4, 0],
                        [167, 25, 4, 0],
                        [175, 35, 4, 0],
                        [185, 43, 4, 0],
                        [197, 48, 4, 0],
                        [210, 50, 4, 1],
                        [350, 50, 0, 1],
                        [363, 48, 5, 0],
                        [375, 43, 5, 0],
                        [385, 35, 5, 0],
                        [393, 25, 5, 0],
                        [398, 13, 5, 0],
                        [400, 0, 5, 0],
                        [398, -13, 5, 0],
                        [393, -25, 5, 0],
                        [385, -35, 5, 0],
                        [375, -43, 5, 0],
                        [363, -48, 5, 0],
                        [350, -50, 5, 0],
                        [337, -48, 5, 0],
                        [325, -43, 5, 0],
                        [315, -35, 5, 0],
                        [307, -25, 5, 0],
                        [302, -13, 5, 0],
                        [300, 0, 5, 0],
                        [302, 13, 5, 0],
                        [307, 25, 5, 0],
                        [315, 35, 5, 0],
                        [325, 43, 5, 0],
                        [337, 48, 5, 0],
                        [350, 50, 5, 1]
                    ],
                    [
                        [0, 455, 0, 1],
                        [40, 444, 7, 0],
                        [69, 415, 7, 0],
                        [80, 375, 7, 0],
                        [69, 335, 7, 0],
                        [40, 306, 7, 0],
                        [0, 295, 7, 0],
                        [-40, 306, 7, 0],
                        [-69, 335, 7, 0],
                        [-80, 375, 7, 0],
                        [-69, 415, 7, 0],
                        [-40, 444, 7, 0],
                        [0, 455, 7, 1],
                        [-346, -120, 0, 1],
                        [-306, -131, 6, 0],
                        [-277, -160, 6, 0],
                        [-266, -200, 6, 0],
                        [-277, -240, 6, 0],
                        [-306, -269, 6, 0],
                        [-346, -280, 6, 0],
                        [-386, -269, 6, 0],
                        [-415, -240, 6, 0],
                        [-426, -200, 6, 0],
                        [-415, -160, 6, 0],
                        [-386, -131, 6, 0],
                        [-346, -120, 6, 1],
                        [346, -120, 0, 1],
                        [386, -131, 4, 0],
                        [415, -160, 4, 0],
                        [426, -200, 4, 0],
                        [415, -240, 4, 0],
                        [386, -269, 4, 0],
                        [346, -280, 4, 0],
                        [306, -269, 4, 0],
                        [277, -240, 4, 0],
                        [266, -200, 4, 0],
                        [277, -160, 4, 0],
                        [306, -131, 4, 0],
                        [346, -120, 4, 1]
                    ],
                    [
                        [-330, 410, 0, 1],
                        [-290, 399, 7, 0],
                        [-261, 370, 7, 0],
                        [-250, 330, 7, 0],
                        [-261, 290, 7, 0],
                        [-290, 261, 7, 0],
                        [-330, 250, 7, 0],
                        [-370, 261, 7, 0],
                        [-399, 290, 7, 0],
                        [-410, 330, 7, 0],
                        [-399, 370, 7, 0],
                        [-370, 399, 7, 0],
                        [-330, 410, 7, 1],
                        [330, 410, 0, 1],
                        [370, 399, 7, 0],
                        [399, 370, 7, 0],
                        [410, 330, 7, 0],
                        [399, 290, 7, 0],
                        [370, 261, 7, 0],
                        [330, 250, 7, 0],
                        [290, 261, 7, 0],
                        [261, 290, 7, 0],
                        [250, 330, 7, 0],
                        [261, 370, 7, 0],
                        [290, 399, 7, 0],
                        [330, 410, 7, 1],
                        [330, -250, 0, 1],
                        [370, -261, 7, 0],
                        [399, -290, 7, 0],
                        [410, -330, 7, 0],
                        [399, -370, 7, 0],
                        [370, -399, 7, 0],
                        [330, -410, 7, 0],
                        [290, -399, 7, 0],
                        [261, -370, 7, 0],
                        [250, -330, 7, 0],
                        [261, -290, 7, 0],
                        [290, -261, 7, 0],
                        [330, -250, 7, 1],
                        [-330, -250, 0, 1],
                        [-290, -261, 7, 0],
                        [-261, -290, 7, 0],
                        [-250, -330, 7, 0],
                        [-261, -370, 7, 0],
                        [-290, -399, 7, 0],
                        [-330, -410, 7, 0],
                        [-370, -399, 7, 0],
                        [-399, -370, 7, 0],
                        [-410, -330, 7, 0],
                        [-399, -290, 7, 0],
                        [-370, -261, 7, 0],
                        [-330, -250, 7, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [20, 395, 7, 0],
                        [35, 380, 7, 0],
                        [40, 360, 7, 0],
                        [35, 340, 7, 0],
                        [20, 325, 7, 0],
                        [0, 320, 7, 0],
                        [-20, 325, 7, 0],
                        [-35, 340, 7, 0],
                        [-40, 360, 7, 0],
                        [-35, 380, 7, 0],
                        [-20, 395, 7, 0],
                        [0, 400, 7, 1],
                        [138, 373, 0, 1],
                        [158, 367, 1, 0],
                        [173, 353, 1, 0],
                        [178, 333, 1, 0],
                        [173, 313, 1, 0],
                        [158, 298, 1, 0],
                        [138, 293, 1, 0],
                        [118, 298, 1, 0],
                        [103, 313, 1, 0],
                        [98, 333, 1, 0],
                        [103, 353, 1, 0],
                        [118, 367, 1, 0],
                        [138, 373, 1, 1],
                        [255, 295, 0, 1],
                        [275, 289, 4, 0],
                        [289, 275, 4, 0],
                        [295, 255, 4, 0],
                        [289, 235, 4, 0],
                        [275, 220, 4, 0],
                        [255, 215, 4, 0],
                        [235, 220, 4, 0],
                        [220, 235, 4, 0],
                        [215, 255, 4, 0],
                        [220, 275, 4, 0],
                        [235, 289, 4, 0],
                        [255, 295, 4, 1],
                        [333, 178, 0, 1],
                        [353, 173, 2, 0],
                        [367, 158, 2, 0],
                        [373, 138, 2, 0],
                        [367, 118, 2, 0],
                        [353, 103, 2, 0],
                        [333, 98, 2, 0],
                        [313, 103, 2, 0],
                        [298, 118, 2, 0],
                        [293, 138, 2, 0],
                        [298, 158, 2, 0],
                        [313, 173, 2, 0],
                        [333, 178, 2, 1],
                        [360, 40, 0, 1],
                        [380, 35, 5, 0],
                        [395, 20, 5, 0],
                        [400, 0, 5, 0],
                        [395, -20, 5, 0],
                        [380, -35, 5, 0],
                        [360, -40, 5, 0],
                        [340, -35, 5, 0],
                        [325, -20, 5, 0],
                        [320, 0, 5, 0],
                        [325, 20, 5, 0],
                        [340, 35, 5, 0],
                        [360, 40, 5, 1],
                        [333, -98, 0, 1],
                        [353, -103, 6, 0],
                        [367, -118, 6, 0],
                        [373, -138, 6, 0],
                        [367, -158, 6, 0],
                        [353, -173, 6, 0],
                        [333, -178, 6, 0],
                        [313, -173, 6, 0],
                        [298, -158, 6, 0],
                        [293, -138, 6, 0],
                        [298, -118, 6, 0],
                        [313, -103, 6, 0],
                        [333, -98, 6, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [52, 397, 7, 0],
                        [104, 386, 7, 0],
                        [153, 370, 7, 1],
                        [200, 346, 0, 1],
                        [244, 317, 6, 0],
                        [283, 283, 6, 0],
                        [317, 244, 6, 1],
                        [346, 200, 0, 1],
                        [370, 153, 7, 0],
                        [386, 104, 7, 0],
                        [397, 52, 7, 1],
                        [400, 0, 0, 1],
                        [397, -52, 2, 0],
                        [386, -104, 2, 0],
                        [370, -153, 2, 1],
                        [346, -200, 0, 1],
                        [317, -244, 7, 0],
                        [283, -283, 7, 0],
                        [244, -317, 7, 1],
                        [200, -346, 0, 1],
                        [153, -370, 4, 0],
                        [104, -386, 4, 0],
                        [52, -397, 4, 1],
                        [0, -400, 0, 1],
                        [-52, -397, 7, 0],
                        [-104, -386, 7, 0],
                        [-153, -370, 7, 1],
                        [-200, -346, 0, 1],
                        [-244, -317, 1, 0],
                        [-283, -283, 1, 0],
                        [-317, -244, 1, 1],
                        [-346, -200, 0, 1],
                        [-370, -153, 7, 0],
                        [-386, -104, 7, 0],
                        [-397, -52, 7, 1],
                        [-400, 0, 0, 1],
                        [-397, 52, 3, 0],
                        [-386, 104, 3, 0],
                        [-370, 153, 3, 1],
                        [-346, 200, 0, 1],
                        [-317, 244, 7, 0],
                        [-283, 283, 7, 0],
                        [-244, 317, 7, 1],
                        [-200, 346, 0, 1],
                        [-153, 370, 5, 0],
                        [-104, 386, 5, 0],
                        [-52, 397, 5, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [52, 397, 4, 0],
                        [104, 386, 4, 0],
                        [153, 370, 4, 0],
                        [200, 346, 4, 0],
                        [244, 317, 4, 0],
                        [283, 283, 4, 1],
                        [346, -200, 0, 1],
                        [317, -244, 5, 0],
                        [283, -283, 5, 0],
                        [244, -317, 5, 0],
                        [200, -346, 5, 0],
                        [153, -370, 5, 0],
                        [104, -386, 5, 1],
                        [-317, -244, 0, 1],
                        [-346, -200, 7, 0],
                        [-370, -153, 7, 0],
                        [-386, -104, 7, 0],
                        [-397, -52, 7, 0],
                        [-400, 0, 7, 0],
                        [-397, 52, 7, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [52, 397, 2, 0],
                        [104, 386, 2, 0],
                        [153, 370, 2, 0],
                        [200, 346, 2, 0],
                        [244, 317, 2, 0],
                        [283, 283, 2, 1],
                        [400, 0, 0, 1],
                        [397, -52, 6, 0],
                        [386, -104, 6, 0],
                        [370, -153, 6, 0],
                        [346, -200, 6, 0],
                        [317, -244, 6, 0],
                        [283, -283, 6, 1],
                        [0, -400, 0, 1],
                        [-52, -397, 2, 0],
                        [-104, -386, 2, 0],
                        [-153, -370, 2, 0],
                        [-200, -346, 2, 0],
                        [-244, -317, 2, 0],
                        [-283, -283, 2, 1],
                        [-400, 0, 0, 1],
                        [-397, 52, 6, 0],
                        [-386, 104, 6, 0],
                        [-370, 153, 6, 0],
                        [-346, 200, 6, 0],
                        [-317, 244, 6, 0],
                        [-283, 283, 6, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [52, 397, 1, 0],
                        [104, 386, 1, 0],
                        [153, 370, 1, 0],
                        [200, 346, 1, 0],
                        [244, 317, 1, 0],
                        [283, 283, 1, 0],
                        [317, 244, 1, 0],
                        [346, 200, 1, 0],
                        [370, 153, 1, 0],
                        [386, 104, 1, 0],
                        [397, 52, 1, 0],
                        [400, 0, 1, 1],
                        [0, -400, 0, 1],
                        [-52, -397, 1, 0],
                        [-104, -386, 1, 0],
                        [-153, -370, 1, 0],
                        [-200, -346, 1, 0],
                        [-244, -317, 1, 0],
                        [-283, -283, 1, 0],
                        [-317, -244, 1, 0],
                        [-346, -200, 1, 0],
                        [-370, -153, 1, 0],
                        [-386, -104, 1, 0],
                        [-397, -52, 1, 0],
                        [-400, 0, 1, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [52, 397, 1, 0],
                        [104, 386, 1, 0],
                        [153, 370, 1, 0],
                        [200, 346, 1, 0],
                        [244, 317, 2, 0],
                        [283, 283, 2, 0],
                        [317, 244, 2, 0],
                        [346, 200, 2, 0],
                        [370, 153, 3, 0],
                        [386, 104, 3, 0],
                        [397, 52, 3, 0],
                        [400, 0, 3, 0],
                        [397, -52, 1, 0],
                        [386, -104, 1, 0],
                        [370, -153, 1, 0],
                        [346, -200, 1, 0],
                        [317, -244, 2, 0],
                        [283, -283, 2, 0],
                        [244, -317, 2, 0],
                        [200, -346, 2, 0],
                        [153, -370, 3, 0],
                        [104, -386, 3, 0],
                        [52, -397, 3, 0],
                        [0, -400, 3, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [52, 397, 3, 0],
                        [104, 386, 3, 0],
                        [153, 370, 3, 0],
                        [200, 346, 3, 0],
                        [244, 317, 3, 0],
                        [283, 283, 3, 0],
                        [317, 244, 3, 0],
                        [346, 200, 3, 0],
                        [370, 153, 3, 0],
                        [386, 104, 3, 0],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 7, 0],
                        [-353, 188, 1, 0],
                        [-339, 212, 1, 0],
                        [-324, 235, 1, 0],
                        [-306, 257, 1, 0],
                        [-288, 278, 1, 0],
                        [-268, 297, 1, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 4, 0],
                        [-150, 371, 4, 0],
                        [-124, 380, 4, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 0],
                        [0, 400, 2, 0],
                        [28, 399, 7, 0],
                        [56, 396, 7, 0],
                        [83, 391, 7, 0],
                        [110, 384, 7, 0],
                        [137, 376, 7, 0],
                        [163, 366, 7, 0],
                        [188, 353, 3, 0],
                        [212, 339, 3, 0],
                        [235, 324, 3, 0],
                        [257, 306, 3, 0],
                        [278, 288, 3, 0],
                        [297, 268, 5, 0],
                        [315, 246, 5, 0],
                        [332, 224, 5, 0],
                        [346, 200, 5, 0],
                        [360, 175, 5, 0],
                        [371, 150, 5, 0],
                        [380, 124, 6, 0],
                        [388, 97, 6, 0],
                        [394, 70, 6, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 1]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 7, 0],
                        [-353, 188, 1, 0],
                        [-339, 212, 1, 0],
                        [-324, 235, 1, 0],
                        [-306, 257, 1, 0],
                        [-288, 278, 1, 0],
                        [-268, 297, 1, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 4, 0],
                        [-150, 371, 4, 0],
                        [-124, 380, 4, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 0],
                        [0, 400, 2, 0],
                        [28, 399, 7, 0],
                        [56, 396, 7, 0],
                        [83, 391, 7, 0],
                        [110, 384, 7, 0],
                        [137, 376, 7, 0],
                        [163, 366, 7, 0],
                        [188, 353, 3, 0],
                        [212, 339, 3, 0],
                        [235, 324, 3, 0],
                        [257, 306, 3, 0],
                        [278, 288, 3, 0],
                        [297, 268, 5, 0],
                        [315, 246, 5, 0],
                        [332, 224, 5, 0],
                        [346, 200, 5, 0],
                        [360, 175, 5, 0],
                        [371, 150, 5, 0],
                        [380, 124, 6, 0],
                        [388, 97, 6, 0],
                        [394, 70, 6, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 1],
                        [-360, 0, 0, 1],
                        [-360, 13, 7, 0],
                        [-358, 38, 7, 0],
                        [-355, 63, 7, 0],
                        [-346, 99, 7, 0],
                        [-338, 123, 7, 0],
                        [-329, 147, 7, 0],
                        [-318, 169, 1, 0],
                        [-305, 191, 1, 0],
                        [-291, 212, 1, 0],
                        [-276, 231, 1, 0],
                        [-259, 250, 1, 0],
                        [-241, 267, 1, 0],
                        [-222, 284, 4, 0],
                        [-201, 298, 4, 0],
                        [-180, 312, 4, 0],
                        [-158, 324, 4, 0],
                        [-135, 334, 4, 0],
                        [-111, 342, 4, 0],
                        [-87, 349, 2, 0],
                        [-63, 355, 2, 0],
                        [-38, 358, 2, 0],
                        [-13, 360, 2, 0],
                        [0, 360, 2, 0],
                        [0, 360, 2, 0],
                        [25, 359, 7, 0],
                        [50, 356, 7, 0],
                        [75, 352, 7, 0],
                        [99, 346, 7, 0],
                        [123, 338, 7, 0],
                        [147, 329, 7, 0],
                        [169, 318, 3, 0],
                        [191, 305, 3, 0],
                        [212, 291, 3, 0],
                        [231, 276, 3, 0],
                        [250, 259, 3, 0],
                        [267, 241, 5, 0],
                        [284, 222, 5, 0],
                        [298, 201, 5, 0],
                        [312, 180, 5, 0],
                        [324, 158, 5, 0],
                        [334, 135, 5, 0],
                        [342, 111, 6, 0],
                        [349, 87, 6, 0],
                        [355, 63, 6, 0],
                        [358, 38, 6, 0],
                        [360, 0, 6, 1]
                    ],
                    [
                        [24, 0, 0, 1],
                        [28, 16, 1, 0],
                        [19, 33, 1, 0],
                        [0, 46, 1, 0],
                        [-26, 46, 1, 0],
                        [-51, 30, 1, 0],
                        [-66, 0, 1, 0],
                        [-68, -18, 1, 0],
                        [-63, -37, 1, 0],
                        [-54, -54, 1, 0],
                        [-40, -70, 1, 0],
                        [-21, -80, 1, 0],
                        [0, -88, 1, 0],
                        [23, -88, 1, 0],
                        [47, -82, 1, 0],
                        [70, -70, 1, 0],
                        [88, -51, 1, 0],
                        [102, -28, 1, 0],
                        [108, 0, 1, 0],
                        [108, 30, 4, 0],
                        [100, 58, 4, 0],
                        [84, 84, 4, 0],
                        [61, 107, 4, 0],
                        [33, 122, 4, 0],
                        [0, 130, 4, 0],
                        [-35, 128, 4, 0],
                        [-68, 119, 4, 0],
                        [-100, 100, 4, 0],
                        [-124, 72, 4, 0],
                        [-142, 38, 4, 0],
                        [-150, 0, 4, 0],
                        [-149, -40, 4, 0],
                        [-136, -79, 4, 0],
                        [-114, -114, 4, 0],
                        [-82, -142, 4, 0],
                        [-44, -163, 4, 0],
                        [0, -172, 4, 0],
                        [46, -170, 4, 0],
                        [89, -154, 4, 0],
                        [130, -130, 4, 0],
                        [161, -93, 4, 0],
                        [182, -49, 4, 0],
                        [192, 0, 4, 0],
                        [189, 51, 2, 0],
                        [173, 100, 2, 0],
                        [144, 144, 2, 0],
                        [103, 178, 2, 0],
                        [54, 203, 2, 0],
                        [0, 214, 2, 0],
                        [-56, 210, 2, 0],
                        [-110, 191, 2, 0],
                        [-159, 159, 2, 0],
                        [-198, 114, 2, 0],
                        [-224, 60, 2, 0],
                        [-234, 0, 2, 0],
                        [-229, -61, 2, 0],
                        [-210, -121, 2, 0],
                        [-173, -173, 2, 0],
                        [-124, -215, 2, 0],
                        [-65, -243, 2, 0],
                        [0, -256, 2, 0],
                        [66, -250, 2, 0],
                        [131, -228, 2, 0],
                        [187, -187, 2, 0],
                        [233, -135, 2, 0],
                        [264, -70, 2, 0],
                        [276, 0, 2, 0],
                        [271, 72, 5, 0],
                        [245, 142, 5, 0],
                        [203, 203, 5, 0],
                        [145, 252, 5, 0],
                        [75, 284, 5, 0],
                        [0, 298, 5, 0],
                        [-79, 290, 5, 0],
                        [-152, 264, 5, 0],
                        [-217, 217, 5, 0],
                        [-270, 156, 5, 0],
                        [-304, 82, 5, 0],
                        [-318, 0, 5, 0],
                        [-312, -84, 5, 0],
                        [-282, -163, 5, 0],
                        [-233, -233, 5, 0],
                        [-166, -289, 5, 0],
                        [-88, -324, 5, 0],
                        [0, -340, 5, 0],
                        [89, -331, 5, 0],
                        [173, -299, 5, 0],
                        [247, -247, 5, 0],
                        [306, -177, 5, 0],
                        [345, -93, 5, 0],
                        [360, 0, 5, 0],
                        [352, 94, 7, 0],
                        [318, 184, 7, 0],
                        [262, 262, 7, 0],
                        [187, 324, 7, 0],
                        [98, 366, 7, 0],
                        [0, 382, 7, 0],
                        [-100, 373, 7, 0],
                        [-194, 336, 7, 0],
                        [-276, 276, 7, 0],
                        [-343, 198, 7, 0],
                        [-385, 103, 7, 0],
                        [-402, 0, 7, 1]
                    ],
                    [
                        [-323, 0, 0, 1],
                        [-322, 4, 1, 0],
                        [-324, 10, 1, 0],
                        [-330, 13, 1, 0],
                        [-338, 13, 1, 0],
                        [-344, 8, 1, 0],
                        [-349, 0, 1, 0],
                        [-350, -5, 1, 0],
                        [-348, -10, 1, 0],
                        [-346, -16, 1, 0],
                        [-342, -20, 1, 0],
                        [-336, -23, 1, 0],
                        [-330, -25, 1, 0],
                        [-324, -25, 1, 0],
                        [-316, -24, 1, 0],
                        [-310, -20, 1, 0],
                        [-305, -14, 1, 0],
                        [-301, -8, 1, 0],
                        [-299, 0, 1, 0],
                        [-299, 8, 4, 0],
                        [-302, 16, 4, 0],
                        [-306, 24, 4, 0],
                        [-312, 30, 4, 0],
                        [-320, 35, 4, 0],
                        [-330, 37, 4, 0],
                        [-340, 36, 4, 0],
                        [-350, 34, 4, 0],
                        [-358, 28, 4, 0],
                        [-366, 20, 4, 0],
                        [-370, 11, 4, 0],
                        [-373, 0, 4, 0],
                        [-372, -12, 4, 0],
                        [-369, -22, 4, 0],
                        [-362, -32, 4, 0],
                        [-354, -40, 4, 0],
                        [-342, -46, 4, 0],
                        [-330, -49, 4, 0],
                        [-317, -48, 4, 0],
                        [-304, -44, 4, 0],
                        [-293, -37, 4, 0],
                        [-284, -26, 4, 0],
                        [-278, -14, 4, 0],
                        [-275, 0, 4, 0],
                        [-276, 14, 2, 0],
                        [-280, 28, 2, 0],
                        [-289, 41, 2, 0],
                        [-300, 51, 2, 0],
                        [-314, 58, 2, 0],
                        [-330, 61, 2, 0],
                        [-346, 60, 2, 0],
                        [-362, 54, 2, 0],
                        [-376, 46, 2, 0],
                        [-386, 32, 2, 0],
                        [-394, 17, 2, 0],
                        [-397, 0, 2, 0],
                        [-396, -18, 2, 0],
                        [-390, -34, 2, 0],
                        [-380, -50, 2, 0],
                        [-366, -62, 2, 0],
                        [-348, -70, 2, 0],
                        [-330, -73, 2, 0],
                        [-311, -72, 2, 0],
                        [-292, -65, 2, 0],
                        [-276, -54, 2, 0],
                        [-264, -38, 2, 0],
                        [-254, -20, 2, 0],
                        [-251, 0, 2, 0],
                        [-252, 20, 5, 0],
                        [-260, 40, 5, 0],
                        [-272, 58, 5, 0],
                        [-288, 72, 5, 0],
                        [-308, 81, 5, 0],
                        [-330, 85, 5, 0],
                        [-352, 83, 5, 0],
                        [-374, 76, 5, 0],
                        [-392, 62, 5, 0],
                        [-407, 44, 5, 0],
                        [-417, 24, 5, 0],
                        [-421, 0, 5, 0],
                        [-419, -24, 5, 0],
                        [-410, -46, 5, 0],
                        [-396, -66, 5, 0],
                        [-378, -82, 5, 0],
                        [-355, -92, 5, 0],
                        [-330, -97, 5, 0],
                        [-304, -94, 5, 0],
                        [-280, -86, 5, 0],
                        [-260, -70, 5, 0],
                        [-242, -50, 5, 0],
                        [-232, -26, 5, 0],
                        [-227, 0, 5, 0],
                        [-230, 27, 7, 0],
                        [-239, 52, 7, 0],
                        [-255, 75, 7, 0],
                        [-276, 92, 7, 0],
                        [-302, 104, 7, 0],
                        [-330, 109, 7, 0],
                        [-358, 106, 7, 0],
                        [-386, 96, 7, 0],
                        [-409, 79, 7, 0],
                        [-428, 56, 7, 0],
                        [-440, 30, 7, 0],
                        [-445, 0, 7, 1],
                        [337, 0, 0, 1],
                        [338, 4, 1, 0],
                        [336, 10, 1, 0],
                        [330, 13, 1, 0],
                        [322, 13, 1, 0],
                        [316, 8, 1, 0],
                        [311, 0, 1, 0],
                        [310, -5, 1, 0],
                        [312, -10, 1, 0],
                        [314, -16, 1, 0],
                        [318, -20, 1, 0],
                        [324, -23, 1, 0],
                        [330, -25, 1, 0],
                        [336, -25, 1, 0],
                        [344, -24, 1, 0],
                        [350, -20, 1, 0],
                        [355, -14, 1, 0],
                        [359, -8, 1, 0],
                        [361, 0, 1, 0],
                        [361, 8, 4, 0],
                        [358, 16, 4, 0],
                        [354, 24, 4, 0],
                        [348, 30, 4, 0],
                        [340, 35, 4, 0],
                        [330, 37, 4, 0],
                        [320, 36, 4, 0],
                        [310, 34, 4, 0],
                        [302, 28, 4, 0],
                        [294, 20, 4, 0],
                        [290, 11, 4, 0],
                        [287, 0, 4, 0],
                        [288, -12, 4, 0],
                        [291, -22, 4, 0],
                        [298, -32, 4, 0],
                        [306, -40, 4, 0],
                        [318, -46, 4, 0],
                        [330, -49, 4, 0],
                        [343, -48, 4, 0],
                        [356, -44, 4, 0],
                        [367, -37, 4, 0],
                        [376, -26, 4, 0],
                        [382, -14, 4, 0],
                        [385, 0, 4, 0],
                        [384, 14, 2, 0],
                        [380, 28, 2, 0],
                        [371, 41, 2, 0],
                        [360, 51, 2, 0],
                        [346, 58, 2, 0],
                        [330, 61, 2, 0],
                        [314, 60, 2, 0],
                        [298, 54, 2, 0],
                        [284, 46, 2, 0],
                        [274, 32, 2, 0],
                        [266, 17, 2, 0],
                        [263, 0, 2, 0],
                        [264, -18, 2, 0],
                        [270, -34, 2, 0],
                        [280, -50, 2, 0],
                        [294, -62, 2, 0],
                        [312, -70, 2, 0],
                        [330, -73, 2, 0],
                        [349, -72, 2, 0],
                        [368, -65, 2, 0],
                        [384, -54, 2, 0],
                        [396, -38, 2, 0],
                        [406, -20, 2, 0],
                        [409, 0, 2, 0],
                        [408, 20, 5, 0],
                        [400, 40, 5, 0],
                        [388, 58, 5, 0],
                        [372, 72, 5, 0],
                        [352, 81, 5, 0],
                        [330, 85, 5, 0],
                        [308, 83, 5, 0],
                        [286, 76, 5, 0],
                        [268, 62, 5, 0],
                        [253, 44, 5, 0],
                        [243, 24, 5, 0],
                        [239, 0, 5, 0],
                        [241, -24, 5, 0],
                        [250, -46, 5, 0],
                        [264, -66, 5, 0],
                        [282, -82, 5, 0],
                        [305, -92, 5, 0],
                        [330, -97, 5, 0],
                        [356, -94, 5, 0],
                        [380, -86, 5, 0],
                        [400, -70, 5, 0],
                        [418, -50, 5, 0],
                        [428, -26, 5, 0],
                        [433, 0, 5, 0],
                        [430, 27, 7, 0],
                        [421, 52, 7, 0],
                        [405, 75, 7, 0],
                        [384, 92, 7, 0],
                        [358, 104, 7, 0],
                        [330, 109, 7, 0],
                        [302, 106, 7, 0],
                        [274, 96, 7, 0],
                        [251, 79, 7, 0],
                        [232, 56, 7, 0],
                        [220, 30, 7, 0],
                        [215, 0, 7, 1]
                    ],
                    [
                        [-323, 0, 0, 1],
                        [-322, 4, 1, 0],
                        [-324, 10, 1, 0],
                        [-330, 13, 1, 0],
                        [-338, 13, 1, 0],
                        [-344, 8, 1, 0],
                        [-349, 0, 1, 0],
                        [-350, -5, 1, 0],
                        [-348, -10, 1, 0],
                        [-346, -16, 1, 0],
                        [-342, -20, 1, 0],
                        [-336, -23, 1, 0],
                        [-330, -25, 1, 0],
                        [-324, -25, 1, 0],
                        [-316, -24, 1, 0],
                        [-310, -20, 1, 0],
                        [-305, -14, 1, 0],
                        [-301, -8, 1, 0],
                        [-299, 0, 1, 0],
                        [-299, 8, 4, 0],
                        [-302, 16, 4, 0],
                        [-306, 24, 4, 0],
                        [-312, 30, 4, 0],
                        [-320, 35, 4, 0],
                        [-330, 37, 4, 0],
                        [-340, 36, 4, 0],
                        [-350, 34, 4, 0],
                        [-358, 28, 4, 0],
                        [-366, 20, 4, 0],
                        [-370, 11, 4, 0],
                        [-373, 0, 4, 0],
                        [-372, -12, 4, 0],
                        [-369, -22, 4, 0],
                        [-362, -32, 4, 0],
                        [-354, -40, 4, 0],
                        [-342, -46, 4, 0],
                        [-330, -49, 4, 0],
                        [-317, -48, 4, 0],
                        [-304, -44, 4, 0],
                        [-293, -37, 4, 0],
                        [-284, -26, 4, 0],
                        [-278, -14, 4, 0],
                        [-275, 0, 4, 0],
                        [-276, 14, 2, 0],
                        [-280, 28, 2, 0],
                        [-289, 41, 2, 0],
                        [-300, 51, 2, 0],
                        [-314, 58, 2, 0],
                        [-330, 61, 2, 0],
                        [-346, 60, 2, 0],
                        [-362, 54, 2, 0],
                        [-376, 46, 2, 0],
                        [-386, 32, 2, 0],
                        [-394, 17, 2, 0],
                        [-397, 0, 2, 0],
                        [-396, -18, 2, 0],
                        [-390, -34, 2, 0],
                        [-380, -50, 2, 0],
                        [-366, -62, 2, 0],
                        [-348, -70, 2, 0],
                        [-330, -73, 2, 0],
                        [-311, -72, 2, 0],
                        [-292, -65, 2, 0],
                        [-276, -54, 2, 0],
                        [-264, -38, 2, 0],
                        [-254, -20, 2, 0],
                        [-251, 0, 2, 0],
                        [-252, 20, 5, 0],
                        [-260, 40, 5, 0],
                        [-272, 58, 5, 0],
                        [-288, 72, 5, 0],
                        [-308, 81, 5, 0],
                        [-330, 85, 5, 0],
                        [-352, 83, 5, 0],
                        [-374, 76, 5, 0],
                        [-392, 62, 5, 0],
                        [-407, 44, 5, 0],
                        [-417, 24, 5, 0],
                        [-421, 0, 5, 0],
                        [-419, -24, 5, 0],
                        [-410, -46, 5, 0],
                        [-396, -66, 5, 0],
                        [-378, -82, 5, 0],
                        [-355, -92, 5, 0],
                        [-330, -97, 5, 0],
                        [-304, -94, 5, 0],
                        [-280, -86, 5, 0],
                        [-260, -70, 5, 0],
                        [-242, -50, 5, 0],
                        [-232, -26, 5, 0],
                        [-227, 0, 5, 0],
                        [-230, 27, 7, 0],
                        [-239, 52, 7, 0],
                        [-255, 75, 7, 0],
                        [-276, 92, 7, 0],
                        [-302, 104, 7, 0],
                        [-330, 109, 7, 0],
                        [-358, 106, 7, 0],
                        [-386, 96, 7, 0],
                        [-409, 79, 7, 0],
                        [-428, 56, 7, 0],
                        [-440, 30, 7, 0],
                        [-445, 0, 7, 1],
                        [337, 0, 0, 1],
                        [338, 4, 1, 0],
                        [336, 10, 1, 0],
                        [330, 13, 1, 0],
                        [322, 13, 1, 0],
                        [316, 8, 1, 0],
                        [311, 0, 1, 0],
                        [310, -5, 1, 0],
                        [312, -10, 1, 0],
                        [314, -16, 1, 0],
                        [318, -20, 1, 0],
                        [324, -23, 1, 0],
                        [330, -25, 1, 0],
                        [336, -25, 1, 0],
                        [344, -24, 1, 0],
                        [350, -20, 1, 0],
                        [355, -14, 1, 0],
                        [359, -8, 1, 0],
                        [361, 0, 1, 0],
                        [361, 8, 4, 0],
                        [358, 16, 4, 0],
                        [354, 24, 4, 0],
                        [348, 30, 4, 0],
                        [340, 35, 4, 0],
                        [330, 37, 4, 0],
                        [320, 36, 4, 0],
                        [310, 34, 4, 0],
                        [302, 28, 4, 0],
                        [294, 20, 4, 0],
                        [290, 11, 4, 0],
                        [287, 0, 4, 0],
                        [288, -12, 4, 0],
                        [291, -22, 4, 0],
                        [298, -32, 4, 0],
                        [306, -40, 4, 0],
                        [318, -46, 4, 0],
                        [330, -49, 4, 0],
                        [343, -48, 4, 0],
                        [356, -44, 4, 0],
                        [367, -37, 4, 0],
                        [376, -26, 4, 0],
                        [382, -14, 4, 0],
                        [385, 0, 4, 0],
                        [384, 14, 2, 0],
                        [380, 28, 2, 0],
                        [371, 41, 2, 0],
                        [360, 51, 2, 0],
                        [346, 58, 2, 0],
                        [330, 61, 2, 0],
                        [314, 60, 2, 0],
                        [298, 54, 2, 0],
                        [284, 46, 2, 0],
                        [274, 32, 2, 0],
                        [266, 17, 2, 0],
                        [263, 0, 2, 0],
                        [264, -18, 2, 0],
                        [270, -34, 2, 0],
                        [280, -50, 2, 0],
                        [294, -62, 2, 0],
                        [312, -70, 2, 0],
                        [330, -73, 2, 0],
                        [349, -72, 2, 0],
                        [368, -65, 2, 0],
                        [384, -54, 2, 0],
                        [396, -38, 2, 0],
                        [406, -20, 2, 0],
                        [409, 0, 2, 0],
                        [408, 20, 5, 0],
                        [400, 40, 5, 0],
                        [388, 58, 5, 0],
                        [372, 72, 5, 0],
                        [352, 81, 5, 0],
                        [330, 85, 5, 0],
                        [308, 83, 5, 0],
                        [286, 76, 5, 0],
                        [268, 62, 5, 0],
                        [253, 44, 5, 0],
                        [243, 24, 5, 0],
                        [239, 0, 5, 0],
                        [241, -24, 5, 0],
                        [250, -46, 5, 0],
                        [264, -66, 5, 0],
                        [282, -82, 5, 0],
                        [305, -92, 5, 0],
                        [330, -97, 5, 0],
                        [356, -94, 5, 0],
                        [380, -86, 5, 0],
                        [400, -70, 5, 0],
                        [418, -50, 5, 0],
                        [428, -26, 5, 0],
                        [433, 0, 5, 0],
                        [430, 27, 7, 0],
                        [421, 52, 7, 0],
                        [405, 75, 7, 0],
                        [384, 92, 7, 0],
                        [358, 104, 7, 0],
                        [330, 109, 7, 0],
                        [302, 106, 7, 0],
                        [274, 96, 7, 0],
                        [251, 79, 7, 0],
                        [232, 56, 7, 0],
                        [220, 30, 7, 0],
                        [215, 0, 7, 1],
                        [337, 0, 0, 1],
                        [-323, 0, 7, 1]
                    ],
                    [
                        [7, 360, 0, 1],
                        [8, 364, 4, 0],
                        [6, 370, 4, 0],
                        [0, 373, 4, 0],
                        [-8, 373, 4, 0],
                        [-14, 368, 4, 0],
                        [-19, 360, 4, 0],
                        [-20, 355, 4, 0],
                        [-18, 350, 4, 0],
                        [-16, 344, 4, 0],
                        [-12, 340, 4, 0],
                        [-6, 337, 4, 0],
                        [0, 335, 4, 0],
                        [6, 335, 4, 0],
                        [14, 336, 4, 0],
                        [20, 340, 4, 0],
                        [25, 346, 4, 0],
                        [29, 352, 4, 0],
                        [31, 360, 4, 0],
                        [31, 368, 4, 0],
                        [28, 376, 4, 0],
                        [24, 384, 4, 0],
                        [18, 390, 4, 0],
                        [10, 395, 4, 0],
                        [0, 397, 4, 0],
                        [-10, 396, 4, 0],
                        [-20, 394, 4, 0],
                        [-28, 388, 4, 0],
                        [-36, 380, 4, 0],
                        [-40, 371, 4, 0],
                        [-43, 360, 4, 0],
                        [-42, 348, 4, 0],
                        [-39, 338, 4, 0],
                        [-32, 328, 4, 0],
                        [-24, 320, 4, 0],
                        [-12, 314, 4, 0],
                        [0, 311, 4, 0],
                        [13, 312, 4, 0],
                        [26, 316, 4, 0],
                        [37, 323, 4, 0],
                        [46, 334, 4, 0],
                        [52, 346, 4, 0],
                        [55, 360, 4, 0],
                        [54, 374, 4, 0],
                        [50, 388, 4, 0],
                        [41, 401, 4, 0],
                        [30, 411, 4, 0],
                        [16, 418, 4, 0],
                        [0, 421, 4, 0],
                        [-16, 420, 4, 0],
                        [-32, 414, 4, 0],
                        [-46, 406, 4, 0],
                        [-56, 392, 4, 0],
                        [-64, 377, 4, 0],
                        [-67, 360, 4, 0],
                        [-66, 342, 4, 0],
                        [-60, 326, 4, 0],
                        [-50, 310, 4, 0],
                        [-36, 298, 4, 0],
                        [-18, 290, 4, 0],
                        [0, 287, 4, 0],
                        [19, 288, 4, 0],
                        [38, 295, 4, 0],
                        [54, 306, 4, 0],
                        [66, 322, 4, 0],
                        [76, 340, 4, 0],
                        [79, 360, 4, 0],
                        [78, 380, 4, 0],
                        [70, 400, 4, 0],
                        [58, 418, 4, 0],
                        [42, 432, 4, 0],
                        [22, 441, 4, 0],
                        [0, 445, 4, 0],
                        [-22, 443, 4, 0],
                        [-44, 436, 4, 0],
                        [-62, 422, 4, 0],
                        [-77, 404, 4, 0],
                        [-87, 384, 4, 0],
                        [-91, 360, 4, 0],
                        [-89, 336, 4, 0],
                        [-80, 314, 4, 0],
                        [-66, 294, 4, 0],
                        [-48, 278, 4, 0],
                        [-25, 268, 4, 0],
                        [0, 263, 4, 0],
                        [26, 266, 4, 0],
                        [50, 274, 4, 0],
                        [70, 290, 4, 0],
                        [88, 310, 4, 0],
                        [98, 334, 4, 0],
                        [103, 360, 4, 0],
                        [100, 387, 4, 0],
                        [91, 412, 4, 0],
                        [75, 435, 4, 0],
                        [54, 452, 4, 0],
                        [28, 464, 4, 0],
                        [0, 469, 4, 0],
                        [-28, 466, 4, 0],
                        [-56, 456, 4, 0],
                        [-79, 439, 4, 0],
                        [-98, 416, 4, 0],
                        [-110, 390, 4, 0],
                        [-115, 360, 4, 1],
                        [-305, -180, 0, 1],
                        [-304, -176, 5, 0],
                        [-306, -170, 5, 0],
                        [-312, -167, 5, 0],
                        [-320, -167, 5, 0],
                        [-326, -172, 5, 0],
                        [-331, -180, 5, 0],
                        [-332, -185, 5, 0],
                        [-330, -190, 5, 0],
                        [-328, -196, 5, 0],
                        [-324, -200, 5, 0],
                        [-318, -203, 5, 0],
                        [-312, -205, 5, 0],
                        [-306, -205, 5, 0],
                        [-298, -204, 5, 0],
                        [-292, -200, 5, 0],
                        [-287, -194, 5, 0],
                        [-283, -188, 5, 0],
                        [-281, -180, 5, 0],
                        [-281, -172, 5, 0],
                        [-284, -164, 5, 0],
                        [-288, -156, 5, 0],
                        [-294, -150, 5, 0],
                        [-302, -145, 5, 0],
                        [-312, -143, 5, 0],
                        [-322, -144, 5, 0],
                        [-332, -146, 5, 0],
                        [-340, -152, 5, 0],
                        [-348, -160, 5, 0],
                        [-352, -169, 5, 0],
                        [-355, -180, 5, 0],
                        [-354, -192, 5, 0],
                        [-351, -202, 5, 0],
                        [-344, -212, 5, 0],
                        [-336, -220, 5, 0],
                        [-324, -226, 5, 0],
                        [-312, -229, 5, 0],
                        [-299, -228, 5, 0],
                        [-286, -224, 5, 0],
                        [-275, -217, 5, 0],
                        [-266, -206, 5, 0],
                        [-260, -194, 5, 0],
                        [-257, -180, 5, 0],
                        [-258, -166, 5, 0],
                        [-262, -152, 5, 0],
                        [-271, -139, 5, 0],
                        [-282, -129, 5, 0],
                        [-296, -122, 5, 0],
                        [-312, -119, 5, 0],
                        [-328, -120, 5, 0],
                        [-344, -126, 5, 0],
                        [-358, -134, 5, 0],
                        [-368, -148, 5, 0],
                        [-376, -163, 5, 0],
                        [-379, -180, 5, 0],
                        [-378, -198, 5, 0],
                        [-372, -214, 5, 0],
                        [-362, -230, 5, 0],
                        [-348, -242, 5, 0],
                        [-330, -250, 5, 0],
                        [-312, -253, 5, 0],
                        [-293, -252, 5, 0],
                        [-274, -245, 5, 0],
                        [-258, -234, 5, 0],
                        [-246, -218, 5, 0],
                        [-236, -200, 5, 0],
                        [-233, -180, 5, 0],
                        [-234, -160, 5, 0],
                        [-242, -140, 5, 0],
                        [-254, -122, 5, 0],
                        [-270, -108, 5, 0],
                        [-290, -99, 5, 0],
                        [-312, -95, 5, 0],
                        [-334, -97, 5, 0],
                        [-356, -104, 5, 0],
                        [-374, -118, 5, 0],
                        [-389, -136, 5, 0],
                        [-399, -156, 5, 0],
                        [-403, -180, 5, 0],
                        [-401, -204, 5, 0],
                        [-392, -226, 5, 0],
                        [-378, -246, 5, 0],
                        [-360, -262, 5, 0],
                        [-337, -272, 5, 0],
                        [-312, -277, 5, 0],
                        [-286, -274, 5, 0],
                        [-262, -266, 5, 0],
                        [-242, -250, 5, 0],
                        [-224, -230, 5, 0],
                        [-214, -206, 5, 0],
                        [-209, -180, 5, 0],
                        [-212, -153, 5, 0],
                        [-221, -128, 5, 0],
                        [-237, -105, 5, 0],
                        [-258, -88, 5, 0],
                        [-284, -76, 5, 0],
                        [-312, -71, 5, 0],
                        [-340, -74, 5, 0],
                        [-368, -84, 5, 0],
                        [-391, -101, 5, 0],
                        [-410, -124, 5, 0],
                        [-422, -150, 5, 0],
                        [-427, -180, 5, 1],
                        [319, -180, 0, 1],
                        [320, -176, 6, 0],
                        [318, -170, 6, 0],
                        [312, -167, 6, 0],
                        [304, -167, 6, 0],
                        [298, -172, 6, 0],
                        [293, -180, 6, 0],
                        [292, -185, 6, 0],
                        [294, -190, 6, 0],
                        [296, -196, 6, 0],
                        [300, -200, 6, 0],
                        [306, -203, 6, 0],
                        [312, -205, 6, 0],
                        [318, -205, 6, 0],
                        [326, -204, 6, 0],
                        [332, -200, 6, 0],
                        [337, -194, 6, 0],
                        [341, -188, 6, 0],
                        [343, -180, 6, 0],
                        [343, -172, 6, 0],
                        [340, -164, 6, 0],
                        [336, -156, 6, 0],
                        [330, -150, 6, 0],
                        [322, -145, 6, 0],
                        [312, -143, 6, 0],
                        [302, -144, 6, 0],
                        [292, -146, 6, 0],
                        [284, -152, 6, 0],
                        [276, -160, 6, 0],
                        [272, -169, 6, 0],
                        [269, -180, 6, 0],
                        [270, -192, 6, 0],
                        [273, -202, 6, 0],
                        [280, -212, 6, 0],
                        [288, -220, 6, 0],
                        [300, -226, 6, 0],
                        [312, -229, 6, 0],
                        [325, -228, 6, 0],
                        [338, -224, 6, 0],
                        [349, -217, 6, 0],
                        [358, -206, 6, 0],
                        [364, -194, 6, 0],
                        [367, -180, 6, 0],
                        [366, -166, 6, 0],
                        [362, -152, 6, 0],
                        [353, -139, 6, 0],
                        [342, -129, 6, 0],
                        [328, -122, 6, 0],
                        [312, -119, 6, 0],
                        [296, -120, 6, 0],
                        [280, -126, 6, 0],
                        [266, -134, 6, 0],
                        [256, -148, 6, 0],
                        [248, -163, 6, 0],
                        [245, -180, 6, 0],
                        [246, -198, 6, 0],
                        [252, -214, 6, 0],
                        [262, -230, 6, 0],
                        [276, -242, 6, 0],
                        [294, -250, 6, 0],
                        [312, -253, 6, 0],
                        [331, -252, 6, 0],
                        [350, -245, 6, 0],
                        [366, -234, 6, 0],
                        [378, -218, 6, 0],
                        [388, -200, 6, 0],
                        [391, -180, 6, 0],
                        [390, -160, 6, 0],
                        [382, -140, 6, 0],
                        [370, -122, 6, 0],
                        [354, -108, 6, 0],
                        [334, -99, 6, 0],
                        [312, -95, 6, 0],
                        [290, -97, 6, 0],
                        [268, -104, 6, 0],
                        [250, -118, 6, 0],
                        [235, -136, 6, 0],
                        [225, -156, 6, 0],
                        [221, -180, 6, 0],
                        [223, -204, 6, 0],
                        [232, -226, 6, 0],
                        [246, -246, 6, 0],
                        [264, -262, 6, 0],
                        [287, -272, 6, 0],
                        [312, -277, 6, 0],
                        [338, -274, 6, 0],
                        [362, -266, 6, 0],
                        [382, -250, 6, 0],
                        [400, -230, 6, 0],
                        [410, -206, 6, 0],
                        [415, -180, 6, 0],
                        [412, -153, 6, 0],
                        [403, -128, 6, 0],
                        [387, -105, 6, 0],
                        [366, -88, 6, 0],
                        [340, -76, 6, 0],
                        [312, -71, 6, 0],
                        [284, -74, 6, 0],
                        [256, -84, 6, 0],
                        [233, -101, 6, 0],
                        [214, -124, 6, 0],
                        [202, -150, 6, 0],
                        [197, -180, 6, 1]
                    ],
                    [
                        [-346, 0, 0, 1],
                        [-345, 3, 7, 0],
                        [-347, 6, 7, 0],
                        [-350, 8, 7, 0],
                        [-354, 8, 7, 0],
                        [-359, 5, 7, 0],
                        [-361, 0, 7, 0],
                        [-362, -3, 7, 0],
                        [-361, -6, 7, 0],
                        [-359, -9, 7, 0],
                        [-357, -12, 7, 0],
                        [-354, -14, 7, 0],
                        [-350, -15, 7, 0],
                        [-346, -15, 7, 0],
                        [-342, -14, 7, 0],
                        [-338, -12, 7, 0],
                        [-335, -9, 7, 0],
                        [-333, -5, 7, 0],
                        [-331, 0, 7, 0],
                        [-331, 5, 7, 0],
                        [-333, 10, 7, 0],
                        [-336, 14, 7, 0],
                        [-340, 18, 7, 0],
                        [-344, 21, 7, 0],
                        [-350, 22, 7, 0],
                        [-356, 22, 7, 0],
                        [-362, 20, 7, 0],
                        [-367, 17, 7, 0],
                        [-371, 12, 7, 0],
                        [-374, 7, 7, 0],
                        [-376, 0, 7, 0],
                        [-376, -7, 7, 0],
                        [-373, -14, 7, 0],
                        [-370, -20, 7, 0],
                        [-364, -24, 7, 0],
                        [-358, -28, 7, 0],
                        [-350, -29, 7, 0],
                        [-342, -29, 7, 0],
                        [-335, -26, 7, 0],
                        [-328, -22, 7, 0],
                        [-322, -16, 7, 0],
                        [-319, -8, 7, 0],
                        [-317, 0, 7, 0],
                        [-318, 9, 7, 0],
                        [-320, 17, 7, 0],
                        [-325, 25, 7, 0],
                        [-332, 31, 7, 0],
                        [-341, 35, 7, 0],
                        [-350, 37, 7, 0],
                        [-360, 36, 7, 0],
                        [-369, 33, 7, 0],
                        [-377, 27, 7, 0],
                        [-384, 20, 7, 0],
                        [-388, 10, 7, 0],
                        [-390, 0, 7, 0],
                        [-389, -10, 7, 0],
                        [-386, -21, 7, 0],
                        [-380, -30, 7, 0],
                        [-371, -37, 7, 0],
                        [-361, -42, 7, 0],
                        [-350, -44, 7, 0],
                        [-339, -43, 7, 0],
                        [-328, -39, 7, 0],
                        [-318, -32, 7, 0],
                        [-310, -23, 7, 0],
                        [-305, -12, 7, 0],
                        [-303, 0, 7, 0],
                        [-304, 12, 7, 0],
                        [-308, 24, 7, 0],
                        [-315, 35, 7, 0],
                        [-325, 43, 7, 0],
                        [-337, 49, 7, 0],
                        [-350, 51, 7, 0],
                        [-364, 50, 7, 0],
                        [-376, 45, 7, 0],
                        [-387, 37, 7, 0],
                        [-396, 27, 7, 0],
                        [-402, 14, 7, 0],
                        [-405, 0, 7, 0],
                        [-403, -14, 7, 0],
                        [-398, -28, 7, 0],
                        [-390, -40, 7, 0],
                        [-378, -50, 7, 0],
                        [-365, -56, 7, 0],
                        [-350, -58, 7, 0],
                        [-335, -57, 7, 0],
                        [-320, -51, 7, 0],
                        [-308, -42, 7, 0],
                        [-298, -30, 7, 0],
                        [-291, -16, 7, 0],
                        [-288, 0, 7, 0],
                        [-290, 16, 7, 0],
                        [-295, 32, 7, 0],
                        [-305, 45, 7, 0],
                        [-318, 56, 7, 0],
                        [-333, 63, 7, 0],
                        [-350, 65, 7, 0],
                        [-367, 64, 7, 0],
                        [-383, 58, 7, 0],
                        [-397, 47, 7, 0],
                        [-409, 34, 7, 0],
                        [-416, 18, 7, 0],
                        [-419, 0, 7, 1],
                        [-206, 0, 0, 1],
                        [-205, 3, 1, 0],
                        [-207, 6, 1, 0],
                        [-210, 8, 1, 0],
                        [-214, 8, 1, 0],
                        [-219, 5, 1, 0],
                        [-221, 0, 1, 0],
                        [-222, -3, 1, 0],
                        [-221, -6, 1, 0],
                        [-219, -9, 1, 0],
                        [-217, -12, 1, 0],
                        [-214, -14, 1, 0],
                        [-210, -15, 1, 0],
                        [-206, -15, 1, 0],
                        [-202, -14, 1, 0],
                        [-198, -12, 1, 0],
                        [-195, -9, 1, 0],
                        [-193, -5, 1, 0],
                        [-191, 0, 1, 0],
                        [-191, 5, 1, 0],
                        [-193, 10, 1, 0],
                        [-196, 14, 1, 0],
                        [-200, 18, 1, 0],
                        [-204, 21, 1, 0],
                        [-210, 22, 1, 0],
                        [-216, 22, 1, 0],
                        [-222, 20, 1, 0],
                        [-227, 17, 1, 0],
                        [-231, 12, 1, 0],
                        [-234, 7, 1, 0],
                        [-236, 0, 1, 0],
                        [-236, -7, 1, 0],
                        [-233, -14, 1, 0],
                        [-230, -20, 1, 0],
                        [-224, -24, 1, 0],
                        [-218, -28, 1, 0],
                        [-210, -29, 1, 0],
                        [-202, -29, 1, 0],
                        [-195, -26, 1, 0],
                        [-188, -22, 1, 0],
                        [-182, -16, 1, 0],
                        [-179, -8, 1, 0],
                        [-177, 0, 1, 0],
                        [-178, 9, 1, 0],
                        [-180, 17, 1, 0],
                        [-185, 25, 1, 0],
                        [-192, 31, 1, 0],
                        [-201, 35, 1, 0],
                        [-210, 37, 1, 0],
                        [-220, 36, 1, 0],
                        [-229, 33, 1, 0],
                        [-237, 27, 1, 0],
                        [-244, 20, 1, 0],
                        [-248, 10, 1, 0],
                        [-250, 0, 1, 0],
                        [-249, -10, 1, 0],
                        [-246, -21, 1, 0],
                        [-240, -30, 1, 0],
                        [-231, -37, 1, 0],
                        [-221, -42, 1, 0],
                        [-210, -44, 1, 0],
                        [-199, -43, 1, 0],
                        [-188, -39, 1, 0],
                        [-178, -32, 1, 0],
                        [-170, -23, 1, 0],
                        [-165, -12, 1, 0],
                        [-163, 0, 1, 0],
                        [-164, 12, 1, 0],
                        [-168, 24, 1, 0],
                        [-175, 35, 1, 0],
                        [-185, 43, 1, 0],
                        [-197, 49, 1, 0],
                        [-210, 51, 1, 0],
                        [-224, 50, 1, 0],
                        [-236, 45, 1, 0],
                        [-247, 37, 1, 0],
                        [-256, 27, 1, 0],
                        [-262, 14, 1, 0],
                        [-265, 0, 1, 0],
                        [-263, -14, 1, 0],
                        [-258, -28, 1, 0],
                        [-250, -40, 1, 0],
                        [-238, -50, 1, 0],
                        [-225, -56, 1, 0],
                        [-210, -58, 1, 0],
                        [-195, -57, 1, 0],
                        [-180, -51, 1, 0],
                        [-168, -42, 1, 0],
                        [-158, -30, 1, 0],
                        [-151, -16, 1, 0],
                        [-148, 0, 1, 0],
                        [-150, 16, 1, 0],
                        [-155, 32, 1, 0],
                        [-165, 45, 1, 0],
                        [-178, 56, 1, 0],
                        [-193, 63, 1, 0],
                        [-210, 65, 1, 0],
                        [-227, 64, 1, 0],
                        [-243, 58, 1, 0],
                        [-257, 47, 1, 0],
                        [-269, 34, 1, 0],
                        [-276, 18, 1, 0],
                        [-279, 0, 1, 1],
                        [-66, 0, 0, 1],
                        [-65, 3, 4, 0],
                        [-67, 6, 4, 0],
                        [-70, 8, 4, 0],
                        [-74, 8, 4, 0],
                        [-79, 5, 4, 0],
                        [-81, 0, 4, 0],
                        [-82, -3, 4, 0],
                        [-81, -6, 4, 0],
                        [-79, -9, 4, 0],
                        [-77, -12, 4, 0],
                        [-74, -14, 4, 0],
                        [-70, -15, 4, 0],
                        [-66, -15, 4, 0],
                        [-62, -14, 4, 0],
                        [-58, -12, 4, 0],
                        [-55, -9, 4, 0],
                        [-53, -5, 4, 0],
                        [-51, 0, 4, 0],
                        [-51, 5, 4, 0],
                        [-53, 10, 4, 0],
                        [-56, 14, 4, 0],
                        [-60, 18, 4, 0],
                        [-64, 21, 4, 0],
                        [-70, 22, 4, 0],
                        [-76, 22, 4, 0],
                        [-82, 20, 4, 0],
                        [-87, 17, 4, 0],
                        [-91, 12, 4, 0],
                        [-94, 7, 4, 0],
                        [-96, 0, 4, 0],
                        [-96, -7, 4, 0],
                        [-93, -14, 4, 0],
                        [-90, -20, 4, 0],
                        [-84, -24, 4, 0],
                        [-78, -28, 4, 0],
                        [-70, -29, 4, 0],
                        [-62, -29, 4, 0],
                        [-55, -26, 4, 0],
                        [-48, -22, 4, 0],
                        [-42, -16, 4, 0],
                        [-39, -8, 4, 0],
                        [-37, 0, 4, 0],
                        [-38, 9, 4, 0],
                        [-40, 17, 4, 0],
                        [-45, 25, 4, 0],
                        [-52, 31, 4, 0],
                        [-61, 35, 4, 0],
                        [-70, 37, 4, 0],
                        [-80, 36, 4, 0],
                        [-89, 33, 4, 0],
                        [-97, 27, 4, 0],
                        [-104, 20, 4, 0],
                        [-108, 10, 4, 0],
                        [-110, 0, 4, 0],
                        [-109, -10, 4, 0],
                        [-106, -21, 4, 0],
                        [-100, -30, 4, 0],
                        [-91, -37, 4, 0],
                        [-81, -42, 4, 0],
                        [-70, -44, 4, 0],
                        [-59, -43, 4, 0],
                        [-48, -39, 4, 0],
                        [-38, -32, 4, 0],
                        [-30, -23, 4, 0],
                        [-25, -12, 4, 0],
                        [-23, 0, 4, 0],
                        [-24, 12, 4, 0],
                        [-28, 24, 4, 0],
                        [-35, 35, 4, 0],
                        [-45, 43, 4, 0],
                        [-57, 49, 4, 0],
                        [-70, 51, 4, 0],
                        [-84, 50, 4, 0],
                        [-96, 45, 4, 0],
                        [-107, 37, 4, 0],
                        [-116, 27, 4, 0],
                        [-122, 14, 4, 0],
                        [-125, 0, 4, 0],
                        [-123, -14, 4, 0],
                        [-118, -28, 4, 0],
                        [-110, -40, 4, 0],
                        [-98, -50, 4, 0],
                        [-85, -56, 4, 0],
                        [-70, -58, 4, 0],
                        [-55, -57, 4, 0],
                        [-40, -51, 4, 0],
                        [-28, -42, 4, 0],
                        [-18, -30, 4, 0],
                        [-11, -16, 4, 0],
                        [-8, 0, 4, 0],
                        [-10, 16, 4, 0],
                        [-15, 32, 4, 0],
                        [-25, 45, 4, 0],
                        [-38, 56, 4, 0],
                        [-53, 63, 4, 0],
                        [-70, 65, 4, 0],
                        [-87, 64, 4, 0],
                        [-103, 58, 4, 0],
                        [-117, 47, 4, 0],
                        [-129, 34, 4, 0],
                        [-136, 18, 4, 0],
                        [-139, 0, 4, 1],
                        [74, 0, 0, 1],
                        [75, 3, 2, 0],
                        [73, 6, 2, 0],
                        [70, 8, 2, 0],
                        [66, 8, 2, 0],
                        [61, 5, 2, 0],
                        [59, 0, 2, 0],
                        [58, -3, 2, 0],
                        [59, -6, 2, 0],
                        [61, -9, 2, 0],
                        [63, -12, 2, 0],
                        [66, -14, 2, 0],
                        [70, -15, 2, 0],
                        [74, -15, 2, 0],
                        [78, -14, 2, 0],
                        [82, -12, 2, 0],
                        [85, -9, 2, 0],
                        [87, -5, 2, 0],
                        [89, 0, 2, 0],
                        [89, 5, 2, 0],
                        [87, 10, 2, 0],
                        [84, 14, 2, 0],
                        [80, 18, 2, 0],
                        [76, 21, 2, 0],
                        [70, 22, 2, 0],
                        [64, 22, 2, 0],
                        [58, 20, 2, 0],
                        [53, 17, 2, 0],
                        [49, 12, 2, 0],
                        [46, 7, 2, 0],
                        [44, 0, 2, 0],
                        [44, -7, 2, 0],
                        [47, -14, 2, 0],
                        [50, -20, 2, 0],
                        [56, -24, 2, 0],
                        [62, -28, 2, 0],
                        [70, -29, 2, 0],
                        [78, -29, 2, 0],
                        [85, -26, 2, 0],
                        [92, -22, 2, 0],
                        [98, -16, 2, 0],
                        [101, -8, 2, 0],
                        [103, 0, 2, 0],
                        [102, 9, 2, 0],
                        [100, 17, 2, 0],
                        [95, 25, 2, 0],
                        [88, 31, 2, 0],
                        [79, 35, 2, 0],
                        [70, 37, 2, 0],
                        [60, 36, 2, 0],
                        [51, 33, 2, 0],
                        [43, 27, 2, 0],
                        [36, 20, 2, 0],
                        [32, 10, 2, 0],
                        [30, 0, 2, 0],
                        [31, -10, 2, 0],
                        [34, -21, 2, 0],
                        [40, -30, 2, 0],
                        [49, -37, 2, 0],
                        [59, -42, 2, 0],
                        [70, -44, 2, 0],
                        [81, -43, 2, 0],
                        [92, -39, 2, 0],
                        [102, -32, 2, 0],
                        [110, -23, 2, 0],
                        [115, -12, 2, 0],
                        [117, 0, 2, 0],
                        [116, 12, 2, 0],
                        [112, 24, 2, 0],
                        [105, 35, 2, 0],
                        [95, 43, 2, 0],
                        [83, 49, 2, 0],
                        [70, 51, 2, 0],
                        [56, 50, 2, 0],
                        [44, 45, 2, 0],
                        [33, 37, 2, 0],
                        [24, 27, 2, 0],
                        [18, 14, 2, 0],
                        [15, 0, 2, 0],
                        [17, -14, 2, 0],
                        [22, -28, 2, 0],
                        [30, -40, 2, 0],
                        [42, -50, 2, 0],
                        [55, -56, 2, 0],
                        [70, -58, 2, 0],
                        [85, -57, 2, 0],
                        [100, -51, 2, 0],
                        [112, -42, 2, 0],
                        [122, -30, 2, 0],
                        [129, -16, 2, 0],
                        [132, 0, 2, 0],
                        [130, 16, 2, 0],
                        [125, 32, 2, 0],
                        [115, 45, 2, 0],
                        [102, 56, 2, 0],
                        [87, 63, 2, 0],
                        [70, 65, 2, 0],
                        [53, 64, 2, 0],
                        [37, 58, 2, 0],
                        [23, 47, 2, 0],
                        [11, 34, 2, 0],
                        [4, 18, 2, 0],
                        [1, 0, 2, 1],
                        [214, 0, 0, 1],
                        [215, 3, 3, 0],
                        [213, 6, 3, 0],
                        [210, 8, 3, 0],
                        [206, 8, 3, 0],
                        [201, 5, 3, 0],
                        [199, 0, 3, 0],
                        [198, -3, 3, 0],
                        [199, -6, 3, 0],
                        [201, -9, 3, 0],
                        [203, -12, 3, 0],
                        [206, -14, 3, 0],
                        [210, -15, 3, 0],
                        [214, -15, 3, 0],
                        [218, -14, 3, 0],
                        [222, -12, 3, 0],
                        [225, -9, 3, 0],
                        [227, -5, 3, 0],
                        [229, 0, 3, 0],
                        [229, 5, 3, 0],
                        [227, 10, 3, 0],
                        [224, 14, 3, 0],
                        [220, 18, 3, 0],
                        [216, 21, 3, 0],
                        [210, 22, 3, 0],
                        [204, 22, 3, 0],
                        [198, 20, 3, 0],
                        [193, 17, 3, 0],
                        [189, 12, 3, 0],
                        [186, 7, 3, 0],
                        [184, 0, 3, 0],
                        [184, -7, 3, 0],
                        [187, -14, 3, 0],
                        [190, -20, 3, 0],
                        [196, -24, 3, 0],
                        [202, -28, 3, 0],
                        [210, -29, 3, 0],
                        [218, -29, 3, 0],
                        [225, -26, 3, 0],
                        [232, -22, 3, 0],
                        [238, -16, 3, 0],
                        [241, -8, 3, 0],
                        [243, 0, 3, 0],
                        [242, 9, 3, 0],
                        [240, 17, 3, 0],
                        [235, 25, 3, 0],
                        [228, 31, 3, 0],
                        [219, 35, 3, 0],
                        [210, 37, 3, 0],
                        [200, 36, 3, 0],
                        [191, 33, 3, 0],
                        [183, 27, 3, 0],
                        [176, 20, 3, 0],
                        [172, 10, 3, 0],
                        [170, 0, 3, 0],
                        [171, -10, 3, 0],
                        [174, -21, 3, 0],
                        [180, -30, 3, 0],
                        [189, -37, 3, 0],
                        [199, -42, 3, 0],
                        [210, -44, 3, 0],
                        [221, -43, 3, 0],
                        [232, -39, 3, 0],
                        [242, -32, 3, 0],
                        [250, -23, 3, 0],
                        [255, -12, 3, 0],
                        [257, 0, 3, 0],
                        [256, 12, 3, 0],
                        [252, 24, 3, 0],
                        [245, 35, 3, 0],
                        [235, 43, 3, 0],
                        [223, 49, 3, 0],
                        [210, 51, 3, 0],
                        [196, 50, 3, 0],
                        [184, 45, 3, 0],
                        [173, 37, 3, 0],
                        [164, 27, 3, 0],
                        [158, 14, 3, 0],
                        [155, 0, 3, 0],
                        [157, -14, 3, 0],
                        [162, -28, 3, 0],
                        [170, -40, 3, 0],
                        [182, -50, 3, 0],
                        [195, -56, 3, 0],
                        [210, -58, 3, 0],
                        [225, -57, 3, 0],
                        [240, -51, 3, 0],
                        [252, -42, 3, 0],
                        [262, -30, 3, 0],
                        [269, -16, 3, 0],
                        [272, 0, 3, 0],
                        [270, 16, 3, 0],
                        [265, 32, 3, 0],
                        [255, 45, 3, 0],
                        [242, 56, 3, 0],
                        [227, 63, 3, 0],
                        [210, 65, 3, 0],
                        [193, 64, 3, 0],
                        [177, 58, 3, 0],
                        [163, 47, 3, 0],
                        [151, 34, 3, 0],
                        [144, 18, 3, 0],
                        [141, 0, 3, 1],
                        [354, 0, 0, 1],
                        [355, 3, 6, 0],
                        [353, 6, 6, 0],
                        [350, 8, 6, 0],
                        [346, 8, 6, 0],
                        [341, 5, 6, 0],
                        [339, 0, 6, 0],
                        [338, -3, 6, 0],
                        [339, -6, 6, 0],
                        [341, -9, 6, 0],
                        [343, -12, 6, 0],
                        [346, -14, 6, 0],
                        [350, -15, 6, 0],
                        [354, -15, 6, 0],
                        [358, -14, 6, 0],
                        [362, -12, 6, 0],
                        [365, -9, 6, 0],
                        [367, -5, 6, 0],
                        [369, 0, 6, 0],
                        [369, 5, 6, 0],
                        [367, 10, 6, 0],
                        [364, 14, 6, 0],
                        [360, 18, 6, 0],
                        [356, 21, 6, 0],
                        [350, 22, 6, 0],
                        [344, 22, 6, 0],
                        [338, 20, 6, 0],
                        [333, 17, 6, 0],
                        [329, 12, 6, 0],
                        [326, 7, 6, 0],
                        [324, 0, 6, 0],
                        [324, -7, 6, 0],
                        [327, -14, 6, 0],
                        [330, -20, 6, 0],
                        [336, -24, 6, 0],
                        [342, -28, 6, 0],
                        [350, -29, 6, 0],
                        [358, -29, 6, 0],
                        [365, -26, 6, 0],
                        [372, -22, 6, 0],
                        [378, -16, 6, 0],
                        [381, -8, 6, 0],
                        [383, 0, 6, 0],
                        [382, 9, 6, 0],
                        [380, 17, 6, 0],
                        [375, 25, 6, 0],
                        [368, 31, 6, 0],
                        [359, 35, 6, 0],
                        [350, 37, 6, 0],
                        [340, 36, 6, 0],
                        [331, 33, 6, 0],
                        [323, 27, 6, 0],
                        [316, 20, 6, 0],
                        [312, 10, 6, 0],
                        [310, 0, 6, 0],
                        [311, -10, 6, 0],
                        [314, -21, 6, 0],
                        [320, -30, 6, 0],
                        [329, -37, 6, 0],
                        [339, -42, 6, 0],
                        [350, -44, 6, 0],
                        [361, -43, 6, 0],
                        [372, -39, 6, 0],
                        [382, -32, 6, 0],
                        [390, -23, 6, 0],
                        [395, -12, 6, 0],
                        [397, 0, 6, 0],
                        [396, 12, 6, 0],
                        [392, 24, 6, 0],
                        [385, 35, 6, 0],
                        [375, 43, 6, 0],
                        [363, 49, 6, 0],
                        [350, 51, 6, 0],
                        [336, 50, 6, 0],
                        [324, 45, 6, 0],
                        [313, 37, 6, 0],
                        [304, 27, 6, 0],
                        [298, 14, 6, 0],
                        [295, 0, 6, 0],
                        [297, -14, 6, 0],
                        [302, -28, 6, 0],
                        [310, -40, 6, 0],
                        [322, -50, 6, 0],
                        [335, -56, 6, 0],
                        [350, -58, 6, 0],
                        [365, -57, 6, 0],
                        [380, -51, 6, 0],
                        [392, -42, 6, 0],
                        [402, -30, 6, 0],
                        [409, -16, 6, 0],
                        [412, 0, 6, 0],
                        [410, 16, 6, 0],
                        [405, 32, 6, 0],
                        [395, 45, 6, 0],
                        [382, 56, 6, 0],
                        [367, 63, 6, 0],
                        [350, 65, 6, 0],
                        [333, 64, 6, 0],
                        [317, 58, 6, 0],
                        [303, 47, 6, 0],
                        [291, 34, 6, 0],
                        [284, 18, 6, 0],
                        [281, 0, 6, 1]
                    ],
                    [
                        [4, 360, 0, 1],
                        [5, 363, 4, 0],
                        [3, 366, 4, 0],
                        [0, 368, 4, 0],
                        [-4, 368, 4, 0],
                        [-9, 365, 4, 0],
                        [-11, 360, 4, 0],
                        [-12, 357, 4, 0],
                        [-11, 354, 4, 0],
                        [-9, 351, 4, 0],
                        [-7, 348, 4, 0],
                        [-4, 346, 4, 0],
                        [0, 345, 4, 0],
                        [4, 345, 4, 0],
                        [8, 346, 4, 0],
                        [12, 348, 4, 0],
                        [15, 351, 4, 0],
                        [17, 355, 4, 0],
                        [19, 360, 4, 0],
                        [19, 365, 4, 0],
                        [17, 370, 4, 0],
                        [14, 374, 4, 0],
                        [10, 378, 4, 0],
                        [6, 381, 4, 0],
                        [0, 382, 4, 0],
                        [-6, 382, 4, 0],
                        [-12, 380, 4, 0],
                        [-17, 377, 4, 0],
                        [-21, 372, 4, 0],
                        [-24, 367, 4, 0],
                        [-26, 360, 4, 0],
                        [-26, 353, 4, 0],
                        [-23, 346, 4, 0],
                        [-20, 340, 4, 0],
                        [-14, 336, 4, 0],
                        [-8, 332, 4, 0],
                        [0, 331, 4, 0],
                        [8, 331, 4, 0],
                        [15, 334, 4, 0],
                        [22, 338, 4, 0],
                        [28, 344, 4, 0],
                        [31, 352, 4, 0],
                        [33, 360, 4, 0],
                        [32, 369, 4, 0],
                        [30, 377, 4, 0],
                        [25, 385, 4, 0],
                        [18, 391, 4, 0],
                        [9, 395, 4, 0],
                        [0, 397, 4, 0],
                        [-10, 396, 4, 0],
                        [-19, 393, 4, 0],
                        [-27, 387, 4, 0],
                        [-34, 380, 4, 0],
                        [-38, 370, 4, 0],
                        [-40, 360, 4, 0],
                        [-39, 350, 4, 0],
                        [-36, 339, 4, 0],
                        [-30, 330, 4, 0],
                        [-21, 323, 4, 0],
                        [-11, 318, 4, 0],
                        [0, 316, 4, 0],
                        [11, 317, 4, 0],
                        [22, 321, 4, 0],
                        [32, 328, 4, 0],
                        [40, 337, 4, 0],
                        [45, 348, 4, 0],
                        [47, 360, 4, 0],
                        [46, 372, 4, 0],
                        [42, 384, 4, 0],
                        [35, 395, 4, 0],
                        [25, 403, 4, 0],
                        [13, 409, 4, 0],
                        [0, 411, 4, 0],
                        [-14, 410, 4, 0],
                        [-26, 405, 4, 0],
                        [-37, 397, 4, 0],
                        [-46, 387, 4, 0],
                        [-52, 374, 4, 0],
                        [-55, 360, 4, 0],
                        [-53, 346, 4, 0],
                        [-48, 332, 4, 0],
                        [-40, 320, 4, 0],
                        [-28, 310, 4, 0],
                        [-15, 304, 4, 0],
                        [0, 302, 4, 0],
                        [15, 303, 4, 0],
                        [30, 309, 4, 0],
                        [42, 318, 4, 0],
                        [52, 330, 4, 0],
                        [59, 344, 4, 0],
                        [62, 360, 4, 0],
                        [60, 376, 4, 0],
                        [55, 392, 4, 0],
                        [45, 405, 4, 0],
                        [32, 416, 4, 0],
                        [17, 423, 4, 0],
                        [0, 425, 4, 0],
                        [-17, 424, 4, 0],
                        [-33, 418, 4, 0],
                        [-47, 407, 4, 0],
                        [-59, 394, 4, 0],
                        [-66, 378, 4, 0],
                        [-69, 360, 4, 1],
                        [184, 312, 0, 1],
                        [185, 315, 2, 0],
                        [183, 318, 2, 0],
                        [180, 320, 2, 0],
                        [176, 320, 2, 0],
                        [171, 317, 2, 0],
                        [169, 312, 2, 0],
                        [168, 309, 2, 0],
                        [169, 306, 2, 0],
                        [171, 303, 2, 0],
                        [173, 300, 2, 0],
                        [176, 298, 2, 0],
                        [180, 297, 2, 0],
                        [184, 297, 2, 0],
                        [188, 298, 2, 0],
                        [192, 300, 2, 0],
                        [195, 303, 2, 0],
                        [197, 307, 2, 0],
                        [199, 312, 2, 0],
                        [199, 317, 2, 0],
                        [197, 322, 2, 0],
                        [194, 326, 2, 0],
                        [190, 330, 2, 0],
                        [186, 333, 2, 0],
                        [180, 334, 2, 0],
                        [174, 334, 2, 0],
                        [168, 332, 2, 0],
                        [163, 329, 2, 0],
                        [159, 324, 2, 0],
                        [156, 319, 2, 0],
                        [154, 312, 2, 0],
                        [154, 305, 2, 0],
                        [157, 298, 2, 0],
                        [160, 292, 2, 0],
                        [166, 288, 2, 0],
                        [172, 284, 2, 0],
                        [180, 283, 2, 0],
                        [188, 283, 2, 0],
                        [195, 286, 2, 0],
                        [202, 290, 2, 0],
                        [208, 296, 2, 0],
                        [211, 304, 2, 0],
                        [213, 312, 2, 0],
                        [212, 321, 2, 0],
                        [210, 329, 2, 0],
                        [205, 337, 2, 0],
                        [198, 343, 2, 0],
                        [189, 347, 2, 0],
                        [180, 349, 2, 0],
                        [170, 348, 2, 0],
                        [161, 345, 2, 0],
                        [153, 339, 2, 0],
                        [146, 332, 2, 0],
                        [142, 322, 2, 0],
                        [140, 312, 2, 0],
                        [141, 302, 2, 0],
                        [144, 291, 2, 0],
                        [150, 282, 2, 0],
                        [159, 275, 2, 0],
                        [169, 270, 2, 0],
                        [180, 268, 2, 0],
                        [191, 269, 2, 0],
                        [202, 273, 2, 0],
                        [212, 280, 2, 0],
                        [220, 289, 2, 0],
                        [225, 300, 2, 0],
                        [227, 312, 2, 0],
                        [226, 324, 2, 0],
                        [222, 336, 2, 0],
                        [215, 347, 2, 0],
                        [205, 355, 2, 0],
                        [193, 361, 2, 0],
                        [180, 363, 2, 0],
                        [166, 362, 2, 0],
                        [154, 357, 2, 0],
                        [143, 349, 2, 0],
                        [134, 339, 2, 0],
                        [128, 326, 2, 0],
                        [125, 312, 2, 0],
                        [127, 298, 2, 0],
                        [132, 284, 2, 0],
                        [140, 272, 2, 0],
                        [152, 262, 2, 0],
                        [165, 256, 2, 0],
                        [180, 254, 2, 0],
                        [195, 255, 2, 0],
                        [210, 261, 2, 0],
                        [222, 270, 2, 0],
                        [232, 282, 2, 0],
                        [239, 296, 2, 0],
                        [242, 312, 2, 0],
                        [240, 328, 2, 0],
                        [235, 344, 2, 0],
                        [225, 357, 2, 0],
                        [212, 368, 2, 0],
                        [197, 375, 2, 0],
                        [180, 377, 2, 0],
                        [163, 376, 2, 0],
                        [147, 370, 2, 0],
                        [133, 359, 2, 0],
                        [121, 346, 2, 0],
                        [114, 330, 2, 0],
                        [111, 312, 2, 1],
                        [316, 180, 0, 1],
                        [317, 183, 5, 0],
                        [315, 186, 5, 0],
                        [312, 188, 5, 0],
                        [308, 188, 5, 0],
                        [303, 185, 5, 0],
                        [301, 180, 5, 0],
                        [300, 177, 5, 0],
                        [301, 174, 5, 0],
                        [303, 171, 5, 0],
                        [305, 168, 5, 0],
                        [308, 166, 5, 0],
                        [312, 165, 5, 0],
                        [316, 165, 5, 0],
                        [320, 166, 5, 0],
                        [324, 168, 5, 0],
                        [327, 171, 5, 0],
                        [329, 175, 5, 0],
                        [331, 180, 5, 0],
                        [331, 185, 5, 0],
                        [329, 190, 5, 0],
                        [326, 194, 5, 0],
                        [322, 198, 5, 0],
                        [318, 201, 5, 0],
                        [312, 202, 5, 0],
                        [306, 202, 5, 0],
                        [300, 200, 5, 0],
                        [295, 197, 5, 0],
                        [291, 192, 5, 0],
                        [288, 187, 5, 0],
                        [286, 180, 5, 0],
                        [286, 173, 5, 0],
                        [289, 166, 5, 0],
                        [292, 160, 5, 0],
                        [298, 156, 5, 0],
                        [304, 152, 5, 0],
                        [312, 151, 5, 0],
                        [320, 151, 5, 0],
                        [327, 154, 5, 0],
                        [334, 158, 5, 0],
                        [340, 164, 5, 0],
                        [343, 172, 5, 0],
                        [345, 180, 5, 0],
                        [344, 189, 5, 0],
                        [342, 197, 5, 0],
                        [337, 205, 5, 0],
                        [330, 211, 5, 0],
                        [321, 215, 5, 0],
                        [312, 217, 5, 0],
                        [302, 216, 5, 0],
                        [293, 213, 5, 0],
                        [285, 207, 5, 0],
                        [278, 200, 5, 0],
                        [274, 190, 5, 0],
                        [272, 180, 5, 0],
                        [273, 170, 5, 0],
                        [276, 159, 5, 0],
                        [282, 150, 5, 0],
                        [291, 143, 5, 0],
                        [301, 138, 5, 0],
                        [312, 136, 5, 0],
                        [323, 137, 5, 0],
                        [334, 141, 5, 0],
                        [344, 148, 5, 0],
                        [352, 157, 5, 0],
                        [357, 168, 5, 0],
                        [359, 180, 5, 0],
                        [358, 192, 5, 0],
                        [354, 204, 5, 0],
                        [347, 215, 5, 0],
                        [337, 223, 5, 0],
                        [325, 229, 5, 0],
                        [312, 231, 5, 0],
                        [298, 230, 5, 0],
                        [286, 225, 5, 0],
                        [275, 217, 5, 0],
                        [266, 207, 5, 0],
                        [260, 194, 5, 0],
                        [257, 180, 5, 0],
                        [259, 166, 5, 0],
                        [264, 152, 5, 0],
                        [272, 140, 5, 0],
                        [284, 130, 5, 0],
                        [297, 124, 5, 0],
                        [312, 122, 5, 0],
                        [327, 123, 5, 0],
                        [342, 129, 5, 0],
                        [354, 138, 5, 0],
                        [364, 150, 5, 0],
                        [371, 164, 5, 0],
                        [374, 180, 5, 0],
                        [372, 196, 5, 0],
                        [367, 212, 5, 0],
                        [357, 225, 5, 0],
                        [344, 236, 5, 0],
                        [329, 243, 5, 0],
                        [312, 245, 5, 0],
                        [295, 244, 5, 0],
                        [279, 238, 5, 0],
                        [265, 227, 5, 0],
                        [253, 214, 5, 0],
                        [246, 198, 5, 0],
                        [243, 180, 5, 1],
                        [364, 0, 0, 1],
                        [365, 3, 6, 0],
                        [363, 6, 6, 0],
                        [360, 8, 6, 0],
                        [356, 8, 6, 0],
                        [351, 5, 6, 0],
                        [349, 0, 6, 0],
                        [348, -3, 6, 0],
                        [349, -6, 6, 0],
                        [351, -9, 6, 0],
                        [353, -12, 6, 0],
                        [356, -14, 6, 0],
                        [360, -15, 6, 0],
                        [364, -15, 6, 0],
                        [368, -14, 6, 0],
                        [372, -12, 6, 0],
                        [375, -9, 6, 0],
                        [377, -5, 6, 0],
                        [379, 0, 6, 0],
                        [379, 5, 6, 0],
                        [377, 10, 6, 0],
                        [374, 14, 6, 0],
                        [370, 18, 6, 0],
                        [366, 21, 6, 0],
                        [360, 22, 6, 0],
                        [354, 22, 6, 0],
                        [348, 20, 6, 0],
                        [343, 17, 6, 0],
                        [339, 12, 6, 0],
                        [336, 7, 6, 0],
                        [334, 0, 6, 0],
                        [334, -7, 6, 0],
                        [337, -14, 6, 0],
                        [340, -20, 6, 0],
                        [346, -24, 6, 0],
                        [352, -28, 6, 0],
                        [360, -29, 6, 0],
                        [368, -29, 6, 0],
                        [375, -26, 6, 0],
                        [382, -22, 6, 0],
                        [388, -16, 6, 0],
                        [391, -8, 6, 0],
                        [393, 0, 6, 0],
                        [392, 9, 6, 0],
                        [390, 17, 6, 0],
                        [385, 25, 6, 0],
                        [378, 31, 6, 0],
                        [369, 35, 6, 0],
                        [360, 37, 6, 0],
                        [350, 36, 6, 0],
                        [341, 33, 6, 0],
                        [333, 27, 6, 0],
                        [326, 20, 6, 0],
                        [322, 10, 6, 0],
                        [320, 0, 6, 0],
                        [321, -10, 6, 0],
                        [324, -21, 6, 0],
                        [330, -30, 6, 0],
                        [339, -37, 6, 0],
                        [349, -42, 6, 0],
                        [360, -44, 6, 0],
                        [371, -43, 6, 0],
                        [382, -39, 6, 0],
                        [392, -32, 6, 0],
                        [400, -23, 6, 0],
                        [405, -12, 6, 0],
                        [407, 0, 6, 0],
                        [406, 12, 6, 0],
                        [402, 24, 6, 0],
                        [395, 35, 6, 0],
                        [385, 43, 6, 0],
                        [373, 49, 6, 0],
                        [360, 51, 6, 0],
                        [346, 50, 6, 0],
                        [334, 45, 6, 0],
                        [323, 37, 6, 0],
                        [314, 27, 6, 0],
                        [308, 14, 6, 0],
                        [305, 0, 6, 0],
                        [307, -14, 6, 0],
                        [312, -28, 6, 0],
                        [320, -40, 6, 0],
                        [332, -50, 6, 0],
                        [345, -56, 6, 0],
                        [360, -58, 6, 0],
                        [375, -57, 6, 0],
                        [390, -51, 6, 0],
                        [402, -42, 6, 0],
                        [412, -30, 6, 0],
                        [419, -16, 6, 0],
                        [422, 0, 6, 0],
                        [420, 16, 6, 0],
                        [415, 32, 6, 0],
                        [405, 45, 6, 0],
                        [392, 56, 6, 0],
                        [377, 63, 6, 0],
                        [360, 65, 6, 0],
                        [343, 64, 6, 0],
                        [327, 58, 6, 0],
                        [313, 47, 6, 0],
                        [301, 34, 6, 0],
                        [294, 18, 6, 0],
                        [291, 0, 6, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [13, -6, 3, 0],
                        [28, -13, 3, 0],
                        [40, -18, 3, 0],
                        [58, -6, 3, 0],
                        [71, 16, 3, 0],
                        [79, 31, 3, 0],
                        [89, 38, 3, 0],
                        [101, 31, 3, 0],
                        [112, 13, 3, 0],
                        [119, 1, 3, 0],
                        [127, -10, 3, 0],
                        [139, -6, 3, 0],
                        [149, 11, 3, 0],
                        [158, 31, 3, 0],
                        [167, 49, 3, 0],
                        [176, 59, 3, 0],
                        [187, 49, 3, 0],
                        [197, 31, 3, 0],
                        [208, 10, 3, 0],
                        [217, -4, 3, 0],
                        [227, 2, 3, 0],
                        [236, 26, 3, 0],
                        [246, 46, 3, 0],
                        [256, 66, 3, 0],
                        [263, 72, 3, 0],
                        [274, 65, 3, 0],
                        [281, 47, 3, 0],
                        [289, 29, 3, 0],
                        [298, 10, 3, 0],
                        [306, 2, 3, 0],
                        [316, 12, 3, 0],
                        [325, 35, 3, 0],
                        [334, 61, 3, 0],
                        [340, 85, 3, 0],
                        [350, 97, 3, 0],
                        [364, 79, 3, 0],
                        [374, 52, 3, 0],
                        [379, 29, 3, 0],
                        [386, 16, 3, 0],
                        [391, 8, 3, 0],
                        [404, 22, 3, 0],
                        [413, 50, 3, 0],
                        [420, 78, 3, 0],
                        [431, 100, 3, 0],
                        [439, 108, 3, 0],
                        [449, 97, 3, 0],
                        [457, 78, 3, 0],
                        [472, 47, 3, 0],
                        [484, 19, 3, 1]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-392, 20, 1, 0],
                        [-384, 35, 1, 0],
                        [-376, 40, 1, 0],
                        [-368, 35, 1, 0],
                        [-360, 20, 1, 0],
                        [-352, 0, 1, 0],
                        [-344, -20, 1, 0],
                        [-336, -35, 1, 0],
                        [-328, -40, 1, 0],
                        [-320, -35, 1, 0],
                        [-312, -20, 1, 0],
                        [-304, 0, 1, 0],
                        [-296, 20, 4, 0],
                        [-288, 35, 4, 0],
                        [-280, 40, 4, 0],
                        [-272, 35, 4, 0],
                        [-264, 20, 4, 0],
                        [-256, 0, 4, 0],
                        [-248, -20, 4, 0],
                        [-240, -35, 4, 0],
                        [-232, -40, 4, 0],
                        [-224, -35, 4, 0],
                        [-216, -20, 4, 0],
                        [-208, 0, 4, 0],
                        [-200, 20, 2, 0],
                        [-192, 35, 2, 0],
                        [-184, 40, 2, 0],
                        [-176, 35, 2, 0],
                        [-168, 20, 2, 0],
                        [-160, 0, 2, 0],
                        [-152, -20, 2, 0],
                        [-144, -35, 2, 0],
                        [-136, -40, 2, 0],
                        [-128, -35, 2, 0],
                        [-120, -20, 2, 0],
                        [-112, 0, 2, 0],
                        [-104, 20, 5, 0],
                        [-96, 35, 5, 0],
                        [-88, 40, 5, 0],
                        [-80, 35, 5, 0],
                        [-72, 20, 5, 0],
                        [-64, 0, 5, 0],
                        [-56, -20, 5, 0],
                        [-48, -35, 5, 0],
                        [-40, -40, 5, 0],
                        [-32, -35, 5, 0],
                        [-24, -20, 5, 0],
                        [-16, 0, 5, 0],
                        [-8, 20, 3, 0],
                        [0, 35, 3, 0],
                        [8, 40, 3, 0],
                        [16, 35, 3, 0],
                        [24, 20, 3, 0],
                        [32, 0, 3, 0],
                        [40, -20, 3, 0],
                        [48, -35, 3, 0],
                        [56, -40, 3, 0],
                        [64, -35, 3, 0],
                        [72, -20, 3, 0],
                        [80, 0, 3, 0],
                        [88, 20, 6, 0],
                        [96, 35, 6, 0],
                        [104, 40, 6, 0],
                        [112, 35, 6, 0],
                        [120, 20, 6, 0],
                        [128, 0, 6, 0],
                        [136, -20, 6, 0],
                        [144, -35, 6, 0],
                        [152, -40, 6, 0],
                        [160, -35, 6, 0],
                        [168, -20, 6, 0],
                        [176, 0, 6, 0],
                        [184, 20, 7, 0],
                        [192, 35, 7, 0],
                        [200, 40, 7, 0],
                        [208, 35, 7, 0],
                        [216, 20, 7, 0],
                        [224, 0, 7, 0],
                        [232, -20, 7, 0],
                        [240, -35, 7, 0],
                        [248, -40, 7, 0],
                        [256, -35, 7, 0],
                        [264, -20, 7, 0],
                        [272, 0, 7, 0],
                        [280, 20, 4, 0],
                        [288, 35, 4, 0],
                        [296, 40, 4, 0],
                        [304, 35, 4, 0],
                        [312, 20, 4, 0],
                        [320, 0, 4, 0],
                        [328, -20, 4, 0],
                        [336, -35, 4, 0],
                        [344, -40, 4, 0],
                        [352, -35, 4, 0],
                        [360, -20, 4, 0],
                        [368, 0, 4, 0],
                        [376, 20, 5, 0],
                        [384, 35, 5, 0],
                        [392, 40, 5, 0],
                        [400, 35, 5, 1]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-392, 4, 1, 0],
                        [-384, 7, 1, 0],
                        [-376, 8, 1, 0],
                        [-368, 7, 1, 0],
                        [-360, 4, 1, 0],
                        [-352, 0, 1, 0],
                        [-344, -4, 1, 0],
                        [-336, -7, 1, 0],
                        [-328, -8, 1, 0],
                        [-320, -7, 1, 0],
                        [-312, -4, 1, 0],
                        [-304, 0, 1, 0],
                        [-296, 4, 4, 0],
                        [-288, 7, 4, 0],
                        [-280, 8, 4, 0],
                        [-272, 7, 4, 0],
                        [-264, 4, 4, 0],
                        [-256, 0, 4, 0],
                        [-248, -4, 4, 0],
                        [-240, -7, 4, 0],
                        [-232, -8, 4, 0],
                        [-224, -7, 4, 0],
                        [-216, -4, 4, 0],
                        [-208, 0, 4, 0],
                        [-200, 4, 2, 0],
                        [-192, 7, 2, 0],
                        [-184, 8, 2, 0],
                        [-176, 7, 2, 0],
                        [-168, 4, 2, 0],
                        [-160, 0, 2, 0],
                        [-152, -4, 2, 0],
                        [-144, -7, 2, 0],
                        [-136, -8, 2, 0],
                        [-128, -7, 2, 0],
                        [-120, -4, 2, 0],
                        [-112, 0, 2, 0],
                        [-104, 4, 5, 0],
                        [-96, 7, 5, 0],
                        [-88, 8, 5, 0],
                        [-80, 7, 5, 0],
                        [-72, 4, 5, 0],
                        [-64, 0, 5, 0],
                        [-56, -4, 5, 0],
                        [-48, -7, 5, 0],
                        [-40, -8, 5, 0],
                        [-32, -7, 5, 0],
                        [-24, -4, 5, 0],
                        [-16, 0, 5, 0],
                        [-8, 4, 3, 0],
                        [0, 7, 3, 0],
                        [8, 8, 3, 0],
                        [16, 7, 3, 0],
                        [24, 4, 3, 0],
                        [32, 0, 3, 0],
                        [40, -4, 3, 0],
                        [48, -7, 3, 0],
                        [56, -8, 3, 0],
                        [64, -7, 3, 0],
                        [72, -4, 3, 0],
                        [80, 0, 3, 0],
                        [88, 4, 6, 0],
                        [96, 7, 6, 0],
                        [104, 8, 6, 0],
                        [112, 7, 6, 0],
                        [120, 4, 6, 0],
                        [128, 0, 6, 0],
                        [136, -4, 6, 0],
                        [144, -7, 6, 0],
                        [152, -8, 6, 0],
                        [160, -7, 6, 0],
                        [168, -4, 6, 0],
                        [176, 0, 6, 0],
                        [184, 4, 7, 0],
                        [192, 7, 7, 0],
                        [200, 8, 7, 0],
                        [208, 7, 7, 0],
                        [216, 4, 7, 0],
                        [224, 0, 7, 0],
                        [232, -4, 7, 0],
                        [240, -7, 7, 0],
                        [248, -8, 7, 0],
                        [256, -7, 7, 0],
                        [264, -4, 7, 0],
                        [272, 0, 7, 0],
                        [280, 4, 4, 0],
                        [288, 7, 4, 0],
                        [296, 8, 4, 0],
                        [304, 7, 4, 0],
                        [312, 4, 4, 0],
                        [320, 0, 4, 0],
                        [328, -4, 4, 0],
                        [336, -7, 4, 0],
                        [344, -8, 4, 0],
                        [352, -7, 4, 0],
                        [360, -4, 4, 0],
                        [368, 0, 5, 0],
                        [376, 4, 5, 0],
                        [384, 7, 5, 0],
                        [392, 8, 5, 0],
                        [400, 7, 5, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [20, 8, 1, 0],
                        [35, 16, 1, 0],
                        [40, 24, 1, 0],
                        [35, 32, 1, 0],
                        [20, 40, 1, 0],
                        [0, 48, 1, 0],
                        [-20, 56, 1, 0],
                        [-35, 64, 1, 0],
                        [-40, 72, 1, 0],
                        [-35, 80, 1, 0],
                        [-20, 88, 1, 0],
                        [0, 96, 1, 0],
                        [20, 104, 4, 0],
                        [35, 112, 4, 0],
                        [40, 120, 4, 0],
                        [35, 128, 4, 0],
                        [20, 136, 4, 0],
                        [0, 144, 4, 0],
                        [-20, 152, 4, 0],
                        [-35, 160, 4, 0],
                        [-40, 168, 4, 0],
                        [-35, 176, 4, 0],
                        [-20, 184, 4, 0],
                        [0, 192, 4, 0],
                        [20, 200, 2, 0],
                        [35, 208, 2, 0],
                        [40, 216, 2, 0],
                        [35, 224, 2, 0],
                        [20, 232, 2, 0],
                        [0, 240, 2, 0],
                        [-20, 248, 2, 0],
                        [-35, 256, 2, 0],
                        [-40, 264, 2, 0],
                        [-35, 272, 2, 0],
                        [-20, 280, 2, 0],
                        [0, 288, 2, 0],
                        [20, 296, 5, 0],
                        [35, 304, 5, 0],
                        [40, 312, 5, 0],
                        [35, 320, 5, 0],
                        [20, 328, 5, 0],
                        [0, 336, 5, 0],
                        [-20, 344, 5, 0],
                        [-35, 352, 5, 0],
                        [-40, 360, 5, 0],
                        [-35, 368, 5, 0],
                        [-20, 376, 5, 0],
                        [0, 384, 5, 0],
                        [20, 392, 3, 0],
                        [35, 400, 3, 0],
                        [40, 408, 3, 0],
                        [35, 416, 3, 0],
                        [20, 424, 3, 0],
                        [0, 432, 3, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [20, 8, 1, 0],
                        [35, 16, 1, 0],
                        [40, 24, 1, 0],
                        [35, 32, 1, 0],
                        [20, 40, 1, 0],
                        [0, 48, 1, 0],
                        [-20, 56, 1, 0],
                        [-35, 64, 1, 0],
                        [-40, 72, 1, 0],
                        [-35, 80, 1, 0],
                        [-20, 88, 1, 0],
                        [0, 96, 1, 0],
                        [20, 104, 4, 0],
                        [35, 112, 4, 0],
                        [40, 120, 4, 0],
                        [35, 128, 4, 0],
                        [20, 136, 4, 0],
                        [0, 144, 4, 0],
                        [-20, 152, 4, 0],
                        [-35, 160, 4, 0],
                        [-40, 168, 4, 0],
                        [-35, 176, 4, 0],
                        [-20, 184, 4, 0],
                        [0, 192, 4, 0],
                        [20, 200, 2, 0],
                        [35, 208, 2, 0],
                        [40, 216, 2, 0],
                        [35, 224, 2, 0],
                        [20, 232, 2, 0],
                        [0, 240, 2, 0],
                        [-20, 248, 2, 0],
                        [-35, 256, 2, 0],
                        [-40, 264, 2, 0],
                        [-35, 272, 2, 0],
                        [-20, 280, 2, 0],
                        [0, 288, 2, 0],
                        [20, 296, 5, 0],
                        [35, 304, 5, 0],
                        [40, 312, 5, 0],
                        [35, 320, 5, 0],
                        [20, 328, 5, 0],
                        [0, 336, 5, 0],
                        [-20, 344, 5, 0],
                        [-35, 352, 5, 0],
                        [-40, 360, 5, 0],
                        [-35, 368, 5, 0],
                        [-20, 376, 5, 0],
                        [0, 384, 5, 0],
                        [20, 392, 3, 0],
                        [35, 400, 3, 0],
                        [40, 408, 3, 0],
                        [35, 416, 3, 0],
                        [20, 424, 3, 0],
                        [0, 432, 3, 1],
                        [0, 0, 0, 1],
                        [-17, 13, 7, 0],
                        [-31, 22, 7, 0],
                        [-41, 23, 7, 0],
                        [-45, 14, 7, 0],
                        [-45, -3, 7, 0],
                        [-42, -24, 7, 0],
                        [-38, -45, 7, 0],
                        [-38, -62, 7, 0],
                        [-42, -71, 7, 0],
                        [-52, -70, 7, 0],
                        [-66, -61, 7, 0],
                        [-83, -48, 7, 0],
                        [-100, -35, 7, 0],
                        [-114, -26, 7, 0],
                        [-124, -25, 7, 0],
                        [-128, -34, 7, 0],
                        [-128, -51, 7, 0],
                        [-125, -72, 7, 0],
                        [-122, -93, 7, 0],
                        [-121, -110, 7, 0],
                        [-125, -119, 7, 0],
                        [-135, -118, 7, 0],
                        [-149, -109, 7, 0],
                        [-166, -96, 7, 0],
                        [-183, -83, 7, 0],
                        [-197, -74, 7, 0],
                        [-207, -73, 7, 0],
                        [-211, -82, 7, 0],
                        [-211, -99, 7, 0],
                        [-208, -120, 7, 0],
                        [-205, -141, 7, 0],
                        [-204, -158, 7, 0],
                        [-209, -167, 7, 0],
                        [-218, -166, 7, 0],
                        [-232, -157, 7, 0],
                        [-249, -144, 7, 0],
                        [-266, -131, 7, 0],
                        [-281, -122, 7, 0],
                        [-290, -121, 7, 0],
                        [-294, -130, 7, 0],
                        [-294, -147, 7, 0],
                        [-291, -168, 7, 0],
                        [-288, -189, 7, 0],
                        [-288, -206, 7, 0],
                        [-292, -215, 7, 0],
                        [-301, -214, 7, 0],
                        [-316, -205, 7, 0],
                        [-333, -192, 7, 0],
                        [-349, -179, 7, 0],
                        [-364, -170, 7, 0],
                        [-373, -169, 7, 0],
                        [-378, -178, 7, 0],
                        [-377, -195, 7, 0],
                        [-374, -216, 7, 1],
                        [0, 0, 0, 1],
                        [-3, -21, 7, 0],
                        [-3, -38, 7, 0],
                        [1, -47, 7, 0],
                        [10, -46, 7, 0],
                        [25, -37, 7, 0],
                        [42, -24, 7, 0],
                        [58, -11, 7, 0],
                        [73, -2, 7, 0],
                        [82, -1, 7, 0],
                        [87, -10, 7, 0],
                        [86, -27, 7, 0],
                        [83, -48, 7, 0],
                        [80, -69, 7, 0],
                        [80, -86, 7, 0],
                        [84, -95, 7, 0],
                        [94, -94, 7, 0],
                        [108, -85, 7, 0],
                        [125, -72, 7, 0],
                        [142, -59, 7, 0],
                        [156, -50, 7, 0],
                        [165, -49, 7, 0],
                        [170, -58, 7, 0],
                        [169, -75, 7, 0],
                        [166, -96, 7, 0],
                        [163, -117, 7, 0],
                        [163, -134, 7, 0],
                        [167, -143, 7, 0],
                        [177, -142, 7, 0],
                        [191, -133, 7, 0],
                        [208, -120, 7, 0],
                        [225, -107, 7, 0],
                        [239, -98, 7, 0],
                        [249, -97, 7, 0],
                        [253, -106, 7, 0],
                        [252, -123, 7, 0],
                        [249, -144, 7, 0],
                        [246, -165, 7, 0],
                        [246, -182, 7, 0],
                        [250, -191, 7, 0],
                        [260, -190, 7, 0],
                        [274, -181, 7, 0],
                        [291, -168, 7, 0],
                        [308, -155, 7, 0],
                        [322, -146, 7, 0],
                        [332, -145, 7, 0],
                        [336, -154, 7, 0],
                        [336, -171, 7, 0],
                        [333, -192, 7, 0],
                        [329, -213, 7, 0],
                        [329, -230, 7, 0],
                        [333, -239, 7, 0],
                        [343, -238, 7, 0],
                        [357, -229, 7, 0],
                        [374, -216, 7, 1]
                    ],
                    [
                        [0, 60, 0, 1],
                        [30, 52, 5, 0],
                        [52, 30, 5, 0],
                        [60, 0, 5, 0],
                        [52, -30, 5, 0],
                        [30, -52, 5, 0],
                        [0, -60, 5, 0],
                        [-30, -52, 5, 0],
                        [-52, -30, 5, 0],
                        [-60, 0, 5, 0],
                        [-52, 30, 5, 0],
                        [-30, 52, 5, 0],
                        [0, 60, 5, 1],
                        [0, 0, 0, 1],
                        [0, 0, 7, 10]
                    ],
                    [
                        [-163, 223, 0, 1],
                        [-6, 107, 7, 1],
                        [157, 219, 7, 1],
                        [96, 31, 7, 1],
                        [256, -80, 7, 1],
                        [57, -86, 7, 1],
                        [1, -277, 7, 1],
                        [-67, -85, 7, 1],
                        [-267, -82, 7, 1],
                        [-104, 31, 7, 1],
                        [-163, 223, 7, 1],
                        [-236, 322, 2, 1],
                        [-177, 362, 2, 0],
                        [-107, 386, 2, 0],
                        [-27, 398, 2, 0],
                        [59, 395, 2, 0],
                        [141, 376, 2, 0],
                        [216, 334, 2, 0],
                        [275, 287, 2, 0],
                        [335, 217, 2, 0],
                        [376, 135, 2, 0],
                        [394, 36, 2, 0],
                        [390, -69, 2, 0],
                        [362, -158, 2, 0],
                        [303, -251, 2, 0],
                        [226, -319, 2, 0],
                        [158, -359, 2, 0],
                        [76, -386, 2, 0],
                        [-1, -391, 2, 0],
                        [-104, -379, 2, 0],
                        [-194, -344, 2, 0],
                        [-264, -295, 2, 0],
                        [-334, -211, 2, 0],
                        [-379, -120, 2, 0],
                        [-398, -21, 2, 0],
                        [-392, 78, 2, 0],
                        [-356, 190, 2, 0],
                        [-302, 264, 2, 0],
                        [-238, 324, 2, 1],
                        [-377, -117, 0, 1],
                        [-269, -83, 2, 1],
                        [-1, -280, 0, 1],
                        [-1, -386, 2, 1],
                        [373, -120, 0, 1],
                        [254, -80, 2, 1],
                        [156, 222, 0, 1],
                        [231, 324, 2, 1]
                    ],
                    [
                        [42, -23, 0, 1],
                        [60, -8, 7, 0],
                        [72, 13, 7, 0],
                        [78, 42, 7, 0],
                        [71, 86, 7, 0],
                        [47, 122, 7, 0],
                        [20, 148, 7, 0],
                        [-6, 166, 7, 0],
                        [-38, 179, 7, 0],
                        [-88, 188, 7, 0],
                        [-122, 191, 7, 0],
                        [-175, 196, 7, 0],
                        [-232, 203, 7, 0],
                        [-275, 206, 7, 0],
                        [-305, 211, 7, 0],
                        [-352, 214, 7, 0],
                        [-378, 218, 7, 1],
                        [41, 25, 0, 1],
                        [41, 35, 1, 0],
                        [37, 49, 1, 0],
                        [29, 62, 1, 0],
                        [10, 82, 1, 0],
                        [-10, 92, 1, 0],
                        [-40, 102, 1, 0],
                        [-71, 102, 1, 0],
                        [-100, 97, 1, 0],
                        [-140, 80, 1, 0],
                        [-170, 60, 1, 0],
                        [-194, 35, 1, 0],
                        [-215, 10, 1, 0],
                        [-265, -61, 1, 0],
                        [-298, -104, 1, 0],
                        [-346, -178, 1, 0],
                        [-379, -221, 1, 1],
                        [-1, 50, 0, 1],
                        [-18, 55, 4, 0],
                        [-48, 54, 4, 0],
                        [-74, 46, 4, 0],
                        [-107, 20, 4, 0],
                        [-128, -14, 4, 0],
                        [-138, -46, 4, 0],
                        [-142, -85, 4, 0],
                        [-137, -130, 4, 0],
                        [-101, -215, 4, 0],
                        [-67, -284, 4, 0],
                        [-32, -365, 4, 0],
                        [-1, -437, 4, 1],
                        [-43, 23, 0, 1],
                        [-58, 12, 2, 0],
                        [-67, -5, 2, 0],
                        [-74, -29, 2, 0],
                        [-76, -50, 2, 0],
                        [-73, -68, 2, 0],
                        [-66, -94, 2, 0],
                        [-54, -113, 2, 0],
                        [-35, -136, 2, 0],
                        [-10, -158, 2, 0],
                        [25, -174, 2, 0],
                        [62, -185, 2, 0],
                        [96, -190, 2, 0],
                        [136, -193, 2, 0],
                        [192, -199, 2, 0],
                        [268, -210, 2, 0],
                        [374, -221, 2, 1],
                        [-41, -23, 0, 1],
                        [-40, -35, 5, 0],
                        [-36, -50, 5, 0],
                        [-28, -66, 5, 0],
                        [-12, -79, 5, 0],
                        [6, -91, 5, 0],
                        [24, -98, 5, 0],
                        [65, -104, 5, 0],
                        [98, -100, 5, 0],
                        [136, -84, 5, 0],
                        [164, -66, 5, 0],
                        [224, 1, 5, 0],
                        [248, 44, 5, 0],
                        [288, 94, 5, 0],
                        [346, 175, 5, 0],
                        [378, 217, 5, 1],
                        [-1, -48, 0, 1],
                        [11, -53, 6, 0],
                        [34, -58, 6, 0],
                        [56, -53, 6, 0],
                        [83, -41, 6, 0],
                        [103, -24, 6, 0],
                        [118, -5, 6, 0],
                        [133, 28, 6, 0],
                        [139, 61, 6, 0],
                        [138, 102, 6, 0],
                        [130, 143, 6, 0],
                        [90, 233, 6, 0],
                        [59, 301, 6, 0],
                        [28, 372, 6, 0],
                        [0, 437, 6, 1]
                    ],
                    [
                        [0, 354, 0, 1],
                        [44, 438, 7, 0],
                        [82, 342, 7, 0],
                        [142, 422, 7, 0],
                        [154, 316, 7, 0],
                        [236, 368, 7, 0],
                        [226, 264, 7, 0],
                        [316, 300, 7, 0],
                        [276, 204, 7, 0],
                        [378, 210, 7, 0],
                        [320, 126, 7, 0],
                        [420, 110, 7, 0],
                        [342, 40, 7, 0],
                        [428, 0, 2, 0],
                        [342, -40, 2, 0],
                        [420, -110, 2, 0],
                        [320, -126, 2, 0],
                        [378, -210, 2, 0],
                        [276, -204, 2, 0],
                        [316, -300, 2, 0],
                        [226, -264, 2, 0],
                        [236, -368, 2, 0],
                        [154, -316, 2, 0],
                        [142, -422, 2, 0],
                        [82, -342, 2, 0],
                        [44, -438, 2, 0],
                        [0, -354, 2, 1],
                        [-44, -438, 5, 0],
                        [-82, -342, 5, 0],
                        [-142, -422, 5, 0],
                        [-154, -316, 5, 0],
                        [-236, -368, 5, 0],
                        [-226, -264, 5, 0],
                        [-316, -300, 5, 0],
                        [-276, -204, 5, 0],
                        [-378, -210, 5, 0],
                        [-320, -126, 5, 0],
                        [-420, -110, 5, 0],
                        [-342, -40, 5, 0],
                        [-428, 0, 5, 0],
                        [-342, 40, 6, 0],
                        [-420, 110, 6, 0],
                        [-320, 126, 6, 0],
                        [-378, 210, 6, 0],
                        [-276, 204, 6, 0],
                        [-316, 300, 6, 0],
                        [-226, 264, 6, 0],
                        [-236, 368, 6, 0],
                        [-154, 316, 6, 0],
                        [-142, 422, 6, 0],
                        [-82, 342, 6, 0],
                        [-44, 438, 6, 0],
                        [0, 354, 6, 1]
                    ],
                    [
                        [394, 40, 0, 1],
                        [256, -101, 7, 1],
                        [304, 274, 1, 1],
                        [270, 83, 7, 1],
                        [83, 405, 2, 1],
                        [176, 227, 7, 1],
                        [-164, 382, 3, 1],
                        [7, 295, 7, 1],
                        [-358, 216, 4, 1],
                        [-162, 248, 7, 1],
                        [-414, -29, 5, 1],
                        [-274, 108, 7, 1],
                        [-313, -266, 6, 1],
                        [-284, -76, 7, 1],
                        [-97, -396, 1, 1],
                        [-184, -220, 7, 1],
                        [153, -374, 2, 1],
                        [-22, -286, 7, 1],
                        [344, -205, 3, 1],
                        [151, -234, 7, 1],
                        [394, 40, 4, 1]
                    ],
                    [
                        [-360, 60, 0, 1],
                        [-330, 52, 7, 0],
                        [-308, 30, 7, 0],
                        [-300, 0, 7, 0],
                        [-308, -30, 7, 0],
                        [-330, -52, 7, 0],
                        [-360, -60, 7, 0],
                        [-390, -52, 7, 0],
                        [-412, -30, 7, 0],
                        [-420, 0, 7, 0],
                        [-412, 30, 7, 0],
                        [-390, 52, 7, 0],
                        [-360, 60, 7, 1],
                        [-269, 329, 0, 1],
                        [-239, 321, 2, 0],
                        [-217, 299, 2, 0],
                        [-209, 269, 2, 0],
                        [-217, 239, 2, 0],
                        [-239, 217, 2, 0],
                        [-269, 209, 2, 0],
                        [-299, 217, 2, 0],
                        [-321, 239, 2, 0],
                        [-329, 269, 2, 0],
                        [-321, 299, 2, 0],
                        [-299, 321, 2, 0],
                        [-269, 329, 2, 1],
                        [0, 440, 0, 1],
                        [30, 432, 7, 0],
                        [52, 410, 7, 0],
                        [60, 380, 7, 0],
                        [52, 350, 7, 0],
                        [30, 328, 7, 0],
                        [0, 320, 7, 0],
                        [-30, 328, 7, 0],
                        [-52, 350, 7, 0],
                        [-60, 380, 7, 0],
                        [-52, 410, 7, 0],
                        [-30, 432, 7, 0],
                        [0, 440, 7, 1],
                        [269, 329, 0, 1],
                        [299, 321, 4, 0],
                        [321, 299, 4, 0],
                        [329, 269, 4, 0],
                        [321, 239, 4, 0],
                        [299, 217, 4, 0],
                        [269, 209, 4, 0],
                        [239, 217, 4, 0],
                        [217, 239, 4, 0],
                        [209, 269, 4, 0],
                        [217, 299, 4, 0],
                        [239, 321, 4, 0],
                        [269, 329, 4, 1],
                        [360, 60, 0, 1],
                        [390, 52, 7, 0],
                        [412, 30, 7, 0],
                        [420, 0, 7, 0],
                        [412, -30, 7, 0],
                        [390, -52, 7, 0],
                        [360, -60, 7, 0],
                        [330, -52, 7, 0],
                        [308, -30, 7, 0],
                        [300, 0, 7, 0],
                        [308, 30, 7, 0],
                        [330, 52, 7, 0],
                        [360, 60, 7, 1],
                        [269, -209, 0, 1],
                        [299, -217, 5, 0],
                        [321, -239, 5, 0],
                        [329, -269, 5, 0],
                        [321, -299, 5, 0],
                        [299, -321, 5, 0],
                        [269, -329, 5, 0],
                        [239, -321, 5, 0],
                        [217, -299, 5, 0],
                        [209, -269, 5, 0],
                        [217, -239, 5, 0],
                        [239, -217, 5, 0],
                        [269, -209, 5, 1],
                        [0, -320, 0, 1],
                        [30, -328, 7, 0],
                        [52, -350, 7, 0],
                        [60, -380, 7, 0],
                        [52, -410, 7, 0],
                        [30, -432, 7, 0],
                        [0, -440, 7, 0],
                        [-30, -432, 7, 0],
                        [-52, -410, 7, 0],
                        [-60, -380, 7, 0],
                        [-52, -350, 7, 0],
                        [-30, -328, 7, 0],
                        [0, -320, 7, 1],
                        [-269, -209, 0, 1],
                        [-239, -217, 6, 0],
                        [-217, -239, 6, 0],
                        [-209, -269, 6, 0],
                        [-217, -299, 6, 0],
                        [-239, -321, 6, 0],
                        [-269, -329, 6, 0],
                        [-299, -321, 6, 0],
                        [-321, -299, 6, 0],
                        [-329, -269, 6, 0],
                        [-321, -239, 6, 0],
                        [-299, -217, 6, 0],
                        [-269, -209, 6, 1]
                    ],
                    [
                        [400, 0, 0, 1],
                        [144, 38, 6, 0],
                        [346, 200, 6, 0],
                        [106, 106, 6, 0],
                        [200, 346, 6, 0],
                        [38, 144, 6, 0],
                        [0, 400, 6, 0],
                        [-38, 144, 6, 0],
                        [-200, 346, 6, 0],
                        [-106, 106, 6, 0],
                        [-346, 200, 6, 0],
                        [-144, 38, 6, 0],
                        [-400, 0, 6, 0],
                        [-144, -38, 6, 0],
                        [-346, -200, 6, 0],
                        [-106, -106, 6, 0],
                        [-200, -346, 6, 0],
                        [-38, -144, 6, 0],
                        [0, -400, 6, 0],
                        [38, -144, 6, 0],
                        [200, -346, 6, 0],
                        [106, -106, 6, 0],
                        [346, -200, 6, 0],
                        [144, -38, 6, 0],
                        [400, 0, 6, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [31, 392, 2, 0],
                        [43, 385, 2, 0],
                        [102, 330, 2, 0],
                        [135, 312, 2, 0],
                        [170, 308, 2, 0],
                        [232, 305, 2, 0],
                        [260, 297, 2, 0],
                        [285, 277, 2, 0],
                        [303, 234, 2, 0],
                        [305, 182, 2, 0],
                        [308, 148, 2, 0],
                        [324, 111, 2, 0],
                        [367, 68, 2, 0],
                        [392, 31, 2, 0],
                        [400, 0, 2, 1],
                        [392, -31, 4, 0],
                        [367, -68, 4, 0],
                        [324, -111, 4, 0],
                        [308, -148, 4, 0],
                        [305, -182, 4, 0],
                        [303, -234, 4, 0],
                        [285, -277, 4, 0],
                        [260, -297, 4, 0],
                        [232, -305, 4, 0],
                        [170, -308, 4, 0],
                        [135, -312, 4, 0],
                        [102, -330, 4, 0],
                        [43, -385, 4, 0],
                        [31, -392, 4, 0],
                        [0, -400, 4, 1],
                        [-31, -392, 7, 0],
                        [-43, -385, 7, 0],
                        [-102, -330, 7, 0],
                        [-135, -312, 7, 0],
                        [-170, -308, 7, 0],
                        [-232, -305, 7, 0],
                        [-260, -297, 7, 0],
                        [-285, -277, 7, 0],
                        [-303, -234, 7, 0],
                        [-305, -182, 7, 0],
                        [-308, -148, 7, 0],
                        [-324, -111, 7, 0],
                        [-367, -68, 7, 0],
                        [-392, -31, 7, 0],
                        [-400, 0, 7, 1],
                        [-392, 31, 5, 0],
                        [-367, 68, 5, 0],
                        [-324, 111, 5, 0],
                        [-308, 148, 5, 0],
                        [-305, 182, 5, 0],
                        [-303, 234, 5, 0],
                        [-285, 277, 5, 0],
                        [-260, 297, 5, 0],
                        [-232, 305, 5, 0],
                        [-170, 308, 5, 0],
                        [-135, 312, 5, 0],
                        [-102, 330, 5, 0],
                        [-43, 385, 5, 0],
                        [-31, 392, 5, 0],
                        [0, 400, 5, 1]
                    ],
                    [
                        [-360, 60, 0, 1],
                        [-330, 52, 5, 0],
                        [-308, 30, 5, 0],
                        [-300, 0, 5, 0],
                        [-308, -30, 5, 0],
                        [-330, -52, 5, 0],
                        [-360, -60, 5, 0],
                        [-390, -52, 5, 0],
                        [-412, -30, 5, 0],
                        [-420, 0, 5, 0],
                        [-412, 30, 5, 0],
                        [-390, 52, 5, 0],
                        [-360, 60, 5, 1],
                        [-360, 0, 0, 1],
                        [-360, 0, 7, 10],
                        [-255, 315, 0, 1],
                        [-225, 306, 2, 0],
                        [-203, 285, 2, 0],
                        [-195, 255, 2, 0],
                        [-203, 225, 2, 0],
                        [-225, 203, 2, 0],
                        [-255, 195, 2, 0],
                        [-285, 203, 2, 0],
                        [-306, 225, 2, 0],
                        [-315, 255, 2, 0],
                        [-306, 285, 2, 0],
                        [-285, 306, 2, 0],
                        [-255, 315, 2, 1],
                        [-255, 255, 0, 1],
                        [-255, 255, 7, 10],
                        [0, 420, 0, 1],
                        [30, 412, 3, 0],
                        [52, 390, 3, 0],
                        [60, 360, 3, 0],
                        [52, 330, 3, 0],
                        [30, 308, 3, 0],
                        [0, 300, 3, 0],
                        [-30, 308, 3, 0],
                        [-52, 330, 3, 0],
                        [-60, 360, 3, 0],
                        [-52, 390, 3, 0],
                        [-30, 412, 3, 0],
                        [0, 420, 3, 1],
                        [0, 360, 0, 1],
                        [0, 360, 7, 10],
                        [255, 315, 0, 1],
                        [285, 306, 6, 0],
                        [306, 285, 6, 0],
                        [315, 255, 6, 0],
                        [306, 225, 6, 0],
                        [285, 203, 6, 0],
                        [255, 195, 6, 0],
                        [225, 203, 6, 0],
                        [203, 225, 6, 0],
                        [195, 255, 6, 0],
                        [203, 285, 6, 0],
                        [225, 306, 6, 0],
                        [255, 315, 6, 1],
                        [255, 255, 0, 1],
                        [255, 255, 7, 10]
                    ],
                    [
                        [0, 99, 0, 1],
                        [5, 144, 1, 0],
                        [15, 174, 1, 0],
                        [28, 199, 1, 0],
                        [48, 229, 1, 0],
                        [80, 259, 1, 0],
                        [132, 289, 1, 0],
                        [188, 299, 1, 0],
                        [225, 299, 1, 0],
                        [250, 294, 1, 0],
                        [300, 272, 1, 0],
                        [350, 232, 1, 0],
                        [380, 186, 1, 0],
                        [395, 136, 1, 0],
                        [398, 74, 1, 0],
                        [350, -24, 1, 0],
                        [222, -158, 1, 0],
                        [75, -284, 1, 0],
                        [38, -326, 1, 0],
                        [15, -358, 1, 0],
                        [0, -401, 1, 1],
                        [-15, -358, 1, 0],
                        [-38, -326, 1, 0],
                        [-75, -284, 1, 0],
                        [-222, -158, 1, 0],
                        [-350, -24, 1, 0],
                        [-398, 74, 1, 0],
                        [-395, 136, 1, 0],
                        [-380, 186, 1, 0],
                        [-350, 232, 1, 0],
                        [-300, 272, 1, 0],
                        [-250, 294, 1, 0],
                        [-225, 299, 1, 0],
                        [-188, 299, 1, 0],
                        [-132, 289, 1, 0],
                        [-80, 259, 1, 0],
                        [-48, 229, 1, 0],
                        [-28, 199, 1, 0],
                        [-15, 174, 1, 0],
                        [-5, 144, 1, 0],
                        [0, 99, 1, 1]
                    ],
                    [
                        [19, 94, 0, 1],
                        [48, 80, 7, 0],
                        [70, 50, 7, 0],
                        [81, 11, 7, 0],
                        [73, -22, 7, 0],
                        [56, -50, 7, 0],
                        [21, -71, 7, 0],
                        [-21, -73, 7, 0],
                        [-60, -55, 7, 0],
                        [-81, -19, 7, 0],
                        [-87, 25, 7, 0],
                        [-72, 61, 7, 0],
                        [-45, 87, 7, 0],
                        [-9, 95, 7, 0],
                        [19, 94, 7, 1],
                        [37, 145, 7, 0],
                        [57, 201, 7, 0],
                        [72, 258, 7, 0],
                        [76, 313, 7, 0],
                        [62, 348, 7, 0],
                        [39, 379, 7, 0],
                        [2, 391, 7, 0],
                        [-24, 391, 7, 0],
                        [-63, 377, 7, 0],
                        [-90, 329, 7, 0],
                        [-95, 292, 7, 0],
                        [-88, 244, 7, 0],
                        [-64, 172, 7, 0],
                        [-33, 90, 7, 1],
                        [-54, 80, 0, 1],
                        [-61, 118, 1, 0],
                        [-87, 173, 1, 0],
                        [-117, 228, 1, 0],
                        [-157, 283, 1, 0],
                        [-215, 303, 1, 0],
                        [-267, 291, 1, 0],
                        [-290, 261, 1, 0],
                        [-300, 221, 1, 0],
                        [-291, 178, 1, 0],
                        [-258, 139, 1, 0],
                        [-210, 110, 1, 0],
                        [-142, 75, 1, 0],
                        [-77, 47, 1, 1],
                        [-85, 33, 0, 1],
                        [-117, 45, 2, 0],
                        [-184, 69, 2, 0],
                        [-274, 94, 2, 0],
                        [-336, 88, 2, 0],
                        [-374, 55, 2, 0],
                        [-382, 12, 2, 0],
                        [-372, -40, 2, 0],
                        [-334, -66, 2, 0],
                        [-281, -77, 2, 0],
                        [-214, -58, 2, 0],
                        [-152, -39, 2, 0],
                        [-108, -22, 2, 0],
                        [-83, -12, 2, 1],
                        [-78, -30, 0, 1],
                        [-134, -55, 3, 0],
                        [-194, -87, 3, 0],
                        [-262, -132, 3, 0],
                        [-290, -189, 3, 0],
                        [-279, -240, 3, 0],
                        [-253, -266, 3, 0],
                        [-221, -272, 3, 0],
                        [-181, -267, 3, 0],
                        [-149, -241, 3, 0],
                        [-118, -200, 3, 0],
                        [-97, -161, 3, 0],
                        [-77, -122, 3, 0],
                        [-58, -78, 3, 0],
                        [-51, -60, 3, 1],
                        [-24, -70, 0, 1],
                        [-43, -114, 4, 0],
                        [-64, -192, 4, 0],
                        [-79, -252, 4, 0],
                        [-80, -300, 4, 0],
                        [-51, -341, 4, 0],
                        [-18, -358, 4, 0],
                        [19, -356, 4, 0],
                        [45, -340, 4, 0],
                        [65, -309, 4, 0],
                        [76, -259, 4, 0],
                        [62, -211, 4, 0],
                        [43, -149, 4, 0],
                        [25, -100, 4, 0],
                        [13, -70, 4, 1],
                        [39, -59, 0, 1],
                        [65, -126, 1, 0],
                        [108, -206, 1, 0],
                        [148, -254, 1, 0],
                        [199, -270, 1, 0],
                        [251, -259, 1, 0],
                        [274, -236, 1, 0],
                        [281, -199, 1, 0],
                        [274, -155, 1, 0],
                        [226, -107, 1, 0],
                        [164, -70, 1, 0],
                        [107, -47, 1, 0],
                        [67, -32, 1, 1],
                        [77, -9, 0, 1],
                        [100, -17, 6, 0],
                        [145, -28, 6, 0],
                        [200, -40, 6, 0],
                        [275, -58, 6, 0],
                        [327, -46, 6, 0],
                        [358, -12, 6, 0],
                        [366, 19, 6, 0],
                        [351, 60, 6, 0],
                        [320, 85, 6, 0],
                        [284, 94, 6, 0],
                        [217, 85, 6, 0],
                        [152, 63, 6, 0],
                        [92, 39, 6, 0],
                        [75, 34, 6, 1],
                        [67, 59, 0, 1],
                        [111, 81, 5, 0],
                        [175, 111, 5, 0],
                        [230, 144, 5, 0],
                        [260, 180, 5, 0],
                        [272, 225, 5, 0],
                        [258, 271, 5, 0],
                        [221, 299, 5, 0],
                        [186, 301, 5, 0],
                        [150, 290, 5, 0],
                        [131, 263, 5, 0],
                        [102, 236, 5, 0],
                        [76, 174, 5, 0],
                        [53, 132, 5, 0],
                        [33, 88, 5, 1]
                    ],
                    [
                        [22, 7, 0, 1],
                        [20, 12, 5, 0],
                        [22, 19, 5, 0],
                        [27, 24, 5, 0],
                        [31, 28, 5, 0],
                        [31, 34, 5, 0],
                        [29, 38, 5, 0],
                        [22, 44, 5, 0],
                        [14, 48, 5, 0],
                        [11, 50, 5, 0],
                        [13, 54, 5, 0],
                        [22, 56, 5, 0],
                        [32, 60, 5, 0],
                        [43, 65, 5, 0],
                        [49, 68, 5, 0],
                        [49, 74, 5, 0],
                        [43, 82, 5, 0],
                        [32, 86, 5, 0],
                        [16, 91, 5, 0],
                        [9, 94, 5, 0],
                        [2, 96, 5, 0],
                        [11, 97, 5, 0],
                        [23, 98, 5, 0],
                        [38, 100, 5, 0],
                        [52, 103, 5, 0],
                        [61, 108, 5, 0],
                        [68, 115, 5, 0],
                        [65, 121, 5, 0],
                        [58, 126, 5, 0],
                        [45, 131, 5, 0],
                        [32, 134, 5, 0],
                        [23, 138, 5, 0],
                        [9, 140, 5, 0],
                        [-2, 140, 5, 0],
                        [-7, 139, 5, 0],
                        [-2, 139, 5, 0],
                        [9, 138, 5, 0],
                        [18, 138, 5, 0],
                        [36, 139, 5, 0],
                        [45, 140, 5, 0],
                        [65, 144, 5, 0],
                        [79, 151, 5, 0],
                        [85, 157, 5, 0],
                        [83, 162, 5, 0],
                        [79, 168, 5, 0],
                        [67, 174, 5, 0],
                        [49, 179, 5, 0],
                        [25, 184, 5, 0],
                        [4, 186, 5, 0],
                        [-14, 185, 5, 0],
                        [-16, 182, 5, 0],
                        [-9, 181, 5, 0],
                        [13, 180, 5, 0],
                        [29, 180, 5, 0],
                        [52, 181, 5, 0],
                        [70, 185, 5, 0],
                        [90, 190, 5, 0],
                        [99, 196, 5, 0],
                        [103, 204, 5, 0],
                        [95, 211, 5, 0],
                        [79, 218, 5, 0],
                        [58, 223, 5, 0],
                        [41, 226, 5, 0],
                        [18, 229, 5, 0],
                        [4, 230, 5, 0],
                        [-18, 230, 5, 0],
                        [-25, 227, 5, 0],
                        [-20, 223, 5, 0],
                        [-9, 223, 5, 0],
                        [0, 221, 5, 0],
                        [22, 221, 5, 0],
                        [43, 221, 5, 0],
                        [74, 223, 5, 0],
                        [94, 227, 5, 0],
                        [110, 233, 5, 0],
                        [119, 238, 5, 0],
                        [121, 244, 5, 0],
                        [115, 253, 5, 0],
                        [103, 259, 5, 0],
                        [88, 264, 5, 0],
                        [70, 268, 5, 0],
                        [52, 272, 5, 0],
                        [25, 275, 5, 0],
                        [-5, 276, 5, 0],
                        [-22, 275, 5, 0],
                        [-32, 274, 5, 0],
                        [-36, 271, 5, 0],
                        [-29, 269, 5, 0],
                        [-18, 265, 5, 0],
                        [0, 263, 5, 0],
                        [31, 262, 5, 0],
                        [49, 262, 5, 0],
                        [68, 262, 5, 0],
                        [83, 264, 5, 0],
                        [103, 266, 5, 0],
                        [121, 271, 5, 0],
                        [131, 276, 5, 0],
                        [139, 283, 5, 0],
                        [135, 294, 5, 0],
                        [121, 302, 5, 0],
                        [106, 308, 5, 0],
                        [81, 314, 5, 0],
                        [56, 319, 5, 0],
                        [29, 320, 5, 0],
                        [0, 322, 5, 0],
                        [-25, 320, 5, 0],
                        [-40, 317, 5, 0],
                        [-43, 313, 5, 0],
                        [-38, 310, 5, 0],
                        [-18, 306, 5, 0],
                        [11, 302, 5, 0],
                        [40, 301, 5, 0],
                        [70, 302, 5, 0],
                        [97, 306, 5, 0],
                        [126, 311, 5, 0],
                        [148, 317, 5, 0],
                        [157, 324, 5, 0],
                        [157, 332, 5, 0],
                        [151, 338, 5, 0],
                        [140, 344, 5, 0],
                        [115, 354, 5, 0],
                        [88, 360, 5, 0],
                        [61, 364, 5, 0],
                        [29, 367, 5, 0],
                        [-2, 368, 5, 0],
                        [-25, 367, 5, 0],
                        [-43, 365, 5, 0],
                        [-54, 360, 5, 0],
                        [-52, 355, 5, 0],
                        [-43, 352, 5, 0],
                        [-23, 347, 5, 0],
                        [5, 346, 5, 0],
                        [34, 344, 5, 0],
                        [63, 343, 5, 0],
                        [88, 344, 5, 0],
                        [108, 346, 5, 0],
                        [124, 349, 5, 0],
                        [149, 353, 5, 0],
                        [166, 359, 5, 0],
                        [175, 368, 5, 0],
                        [169, 380, 5, 0],
                        [149, 394, 5, 0],
                        [130, 398, 5, 0],
                        [92, 407, 5, 0],
                        [65, 410, 5, 0],
                        [22, 413, 5, 0],
                        [-22, 413, 5, 0],
                        [-54, 409, 5, 0],
                        [-65, 406, 5, 0],
                        [-58, 398, 5, 0],
                        [-47, 394, 5, 0],
                        [-27, 390, 5, 0],
                        [-2, 388, 5, 0],
                        [34, 385, 5, 0],
                        [74, 385, 5, 0],
                        [119, 388, 5, 0],
                        [144, 391, 5, 0],
                        [176, 400, 5, 0],
                        [193, 410, 5, 0],
                        [189, 424, 5, 0],
                        [176, 432, 5, 0],
                        [155, 442, 5, 0],
                        [119, 449, 5, 0],
                        [81, 455, 5, 0],
                        [34, 460, 5, 0],
                        [-5, 460, 5, 0],
                        [-38, 460, 5, 0],
                        [-56, 456, 5, 0],
                        [-70, 452, 5, 1]
                    ],
                    [
                        [53, 355, 0, 1],
                        [-21, 356, 4, 0],
                        [-135, 334, 4, 0],
                        [-210, 293, 4, 0],
                        [-286, 228, 4, 0],
                        [-332, 159, 4, 0],
                        [-365, 73, 4, 0],
                        [-376, -12, 4, 0],
                        [-370, -98, 4, 0],
                        [-345, -172, 4, 0],
                        [-313, -234, 4, 0],
                        [-264, -289, 4, 0],
                        [-208, -336, 4, 0],
                        [-138, -372, 4, 0],
                        [-60, -392, 4, 0],
                        [-9, -392, 4, 0],
                        [49, -392, 4, 0],
                        [142, -369, 4, 0],
                        [228, -319, 4, 0],
                        [296, -251, 4, 0],
                        [337, -178, 4, 0],
                        [367, -101, 4, 0],
                        [374, -28, 4, 0],
                        [363, 71, 4, 0],
                        [330, 159, 4, 0],
                        [281, 228, 4, 0],
                        [215, 287, 4, 0],
                        [160, 321, 4, 0],
                        [132, 333, 4, 1],
                        [128, 290, 2, 0],
                        [104, 251, 2, 0],
                        [74, 225, 2, 0],
                        [43, 209, 2, 0],
                        [-1, 201, 2, 0],
                        [-27, 199, 2, 0],
                        [-42, 199, 2, 0],
                        [-23, 169, 2, 0],
                        [17, 100, 2, 0],
                        [122, -77, 2, 0],
                        [158, -141, 2, 0],
                        [164, -188, 2, 0],
                        [146, -249, 2, 0],
                        [99, -301, 2, 0],
                        [37, -332, 2, 0],
                        [-39, -339, 2, 0],
                        [-112, -319, 2, 0],
                        [-151, -284, 2, 0],
                        [-171, -238, 2, 0],
                        [-174, -182, 2, 0],
                        [-145, -120, 2, 0],
                        [-103, -80, 2, 0],
                        [-34, -51, 2, 0],
                        [15, -49, 2, 0],
                        [53, -54, 2, 1],
                        [28, -12, 2, 0],
                        [-23, 59, 2, 0],
                        [-73, 127, 2, 0],
                        [-125, 203, 2, 0],
                        [-145, 230, 2, 0],
                        [-144, 255, 2, 0],
                        [-123, 284, 2, 0],
                        [-100, 302, 2, 0],
                        [-63, 321, 2, 0],
                        [-20, 332, 2, 0],
                        [30, 345, 2, 0],
                        [72, 357, 2, 0],
                        [105, 376, 2, 0],
                        [122, 395, 2, 1],
                        [129, 374, 2, 0],
                        [132, 354, 2, 0],
                        [132, 333, 2, 1]
                    ],
                    [
                        [360, 0, 0, 1],
                        [396, 24, 1, 1],
                        [396, -24, 1, 1],
                        [360, 0, 1, 1],
                        [312, 180, 0, 1],
                        [331, 218, 2, 1],
                        [355, 178, 2, 1],
                        [312, 180, 2, 1],
                        [180, 312, 0, 1],
                        [178, 355, 5, 1],
                        [218, 331, 5, 1],
                        [180, 312, 5, 1],
                        [0, 360, 0, 1],
                        [-24, 396, 4, 1],
                        [24, 396, 4, 1],
                        [0, 360, 4, 1],
                        [-180, 312, 0, 1],
                        [-218, 331, 3, 1],
                        [-178, 355, 3, 1],
                        [-180, 312, 3, 1],
                        [-312, 180, 0, 1],
                        [-355, 178, 7, 1],
                        [-331, 218, 7, 1],
                        [-312, 180, 7, 1],
                        [-360, 0, 0, 1],
                        [-396, -24, 2, 1],
                        [-396, 24, 2, 1],
                        [-360, 0, 2, 1],
                        [-312, -180, 0, 1],
                        [-331, -218, 6, 1],
                        [-355, -178, 6, 1],
                        [-312, -180, 6, 1],
                        [-180, -312, 0, 1],
                        [-178, -355, 4, 1],
                        [-218, -331, 4, 1],
                        [-180, -312, 4, 1],
                        [0, -360, 0, 1],
                        [24, -396, 3, 1],
                        [-24, -396, 3, 1],
                        [0, -360, 3, 1],
                        [180, -312, 0, 1],
                        [218, -331, 5, 1],
                        [178, -355, 5, 1],
                        [180, -312, 5, 1],
                        [312, -180, 0, 1],
                        [355, -178, 7, 1],
                        [331, -218, 7, 1],
                        [312, -180, 7, 1]
                    ],
                    [
                        [-55, 134, 0, 1],
                        [-55, 134, 7, 0],
                        [-99, 238, 7, 0],
                        [-154, 321, 7, 0],
                        [-222, 339, 7, 0],
                        [-288, 304, 7, 0],
                        [-295, 242, 7, 0],
                        [-264, 165, 7, 0],
                        [-198, 110, 7, 0],
                        [-123, 46, 7, 0],
                        [-229, 110, 7, 0],
                        [-348, 97, 7, 0],
                        [-400, 33, 7, 0],
                        [-405, -29, 7, 0],
                        [-341, -99, 7, 0],
                        [-222, -103, 7, 0],
                        [-114, -53, 7, 0],
                        [-233, -132, 7, 0],
                        [-279, -196, 7, 0],
                        [-284, -271, 7, 0],
                        [-224, -328, 7, 0],
                        [-130, -279, 7, 0],
                        [-46, -125, 7, 0],
                        [-97, -235, 7, 0],
                        [-70, -370, 7, 0],
                        [0, -409, 7, 0],
                        [68, -381, 7, 0],
                        [99, -317, 7, 0],
                        [84, -202, 7, 0],
                        [40, -119, 7, 0],
                        [121, -238, 7, 0],
                        [205, -277, 7, 0],
                        [275, -246, 7, 0],
                        [288, -163, 7, 0],
                        [233, -90, 7, 0],
                        [110, -48, 7, 0],
                        [244, -86, 7, 0],
                        [352, -51, 7, 0],
                        [378, 9, 7, 0],
                        [328, 95, 7, 0],
                        [220, 99, 7, 0],
                        [112, 51, 7, 0],
                        [235, 132, 7, 0],
                        [301, 244, 7, 0],
                        [286, 308, 7, 0],
                        [202, 332, 7, 0],
                        [110, 264, 7, 0],
                        [42, 132, 7, 0],
                        [79, 264, 7, 0],
                        [73, 365, 7, 0],
                        [-9, 422, 7, 0],
                        [-81, 374, 7, 0],
                        [-101, 253, 7, 0],
                        [-55, 134, 7, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [48, 101, 4, 0],
                        [128, 216, 4, 0],
                        [235, 312, 4, 0],
                        [293, 317, 4, 0],
                        [299, 268, 4, 0],
                        [284, 227, 4, 0],
                        [198, 119, 4, 0],
                        [125, 62, 4, 0],
                        [0, 0, 4, 0],
                        [-84, -40, 4, 0],
                        [-185, -112, 4, 0],
                        [-257, -191, 4, 0],
                        [-297, -257, 4, 0],
                        [-293, -319, 4, 0],
                        [-240, -319, 4, 0],
                        [-147, -244, 4, 0],
                        [-64, -132, 4, 0],
                        [0, 0, 4, 1],
                        [11, 110, 6, 0],
                        [-11, 264, 6, 0],
                        [-64, 372, 6, 0],
                        [-128, 414, 6, 0],
                        [-152, 361, 6, 0],
                        [-143, 282, 6, 0],
                        [-99, 156, 6, 0],
                        [-51, 73, 6, 0],
                        [0, 0, 6, 0],
                        [64, -97, 6, 0],
                        [123, -222, 6, 0],
                        [150, -321, 6, 0],
                        [154, -356, 6, 0],
                        [150, -385, 6, 0],
                        [130, -414, 6, 0],
                        [73, -389, 6, 0],
                        [11, -262, 6, 0],
                        [-9, -143, 6, 0],
                        [0, 0, 6, 1],
                        [154, 7, 7, 0],
                        [317, -18, 7, 0],
                        [372, -40, 7, 0],
                        [422, -97, 7, 0],
                        [370, -130, 7, 0],
                        [249, -128, 7, 0],
                        [130, -88, 7, 0],
                        [0, 0, 7, 0],
                        [-84, 59, 7, 0],
                        [-229, 117, 7, 0],
                        [-352, 132, 7, 0],
                        [-420, 101, 7, 0],
                        [-403, 57, 7, 0],
                        [-334, 20, 7, 0],
                        [-68, -9, 7, 0],
                        [0, 0, 7, 1]
                    ],
                    [
                        [-2, 6, 0, 1],
                        [1, 58, 1, 0],
                        [12, 104, 1, 0],
                        [32, 151, 1, 0],
                        [61, 199, 1, 0],
                        [95, 234, 1, 0],
                        [133, 265, 1, 0],
                        [178, 292, 1, 0],
                        [226, 310, 1, 0],
                        [275, 314, 1, 0],
                        [304, 318, 1, 0],
                        [305, 296, 1, 0],
                        [301, 260, 1, 0],
                        [287, 206, 1, 0],
                        [265, 161, 1, 0],
                        [233, 116, 1, 0],
                        [200, 82, 1, 0],
                        [154, 48, 1, 0],
                        [107, 29, 1, 0],
                        [60, 13, 1, 0],
                        [24, 7, 1, 0],
                        [-1, 6, 1, 1],
                        [23, 34, 4, 0],
                        [68, 61, 4, 0],
                        [103, 76, 4, 0],
                        [155, 94, 4, 0],
                        [208, 100, 4, 0],
                        [250, 98, 4, 0],
                        [301, 90, 4, 0],
                        [348, 73, 4, 0],
                        [376, 56, 4, 0],
                        [409, 35, 4, 0],
                        [437, 11, 4, 0],
                        [420, -6, 4, 0],
                        [390, -31, 4, 0],
                        [340, -56, 4, 0],
                        [292, -72, 4, 0],
                        [242, -82, 4, 0],
                        [192, -83, 4, 0],
                        [148, -76, 4, 0],
                        [102, -61, 4, 0],
                        [67, -46, 4, 0],
                        [29, -22, 4, 0],
                        [0, 5, 4, 1],
                        [19, 6, 2, 0],
                        [61, 0, 2, 0],
                        [110, -12, 2, 0],
                        [149, -34, 2, 0],
                        [193, -60, 2, 0],
                        [235, -102, 2, 0],
                        [263, -139, 2, 0],
                        [280, -173, 2, 0],
                        [295, -216, 2, 0],
                        [306, -257, 2, 0],
                        [311, -301, 2, 0],
                        [292, -302, 2, 0],
                        [256, -296, 2, 0],
                        [212, -287, 2, 0],
                        [161, -265, 2, 0],
                        [113, -235, 2, 0],
                        [77, -199, 2, 0],
                        [43, -156, 2, 0],
                        [23, -118, 2, 0],
                        [12, -86, 2, 0],
                        [5, -58, 2, 0],
                        [0, -25, 2, 0],
                        [-1, 4, 2, 1],
                        [16, -12, 5, 0],
                        [35, -38, 5, 0],
                        [58, -79, 5, 0],
                        [76, -122, 5, 0],
                        [88, -166, 5, 0],
                        [91, -211, 5, 0],
                        [88, -271, 5, 0],
                        [76, -324, 5, 0],
                        [55, -362, 5, 0],
                        [32, -398, 5, 0],
                        [13, -421, 5, 0],
                        [1, -436, 5, 0],
                        [-19, -410, 5, 0],
                        [-54, -365, 5, 0],
                        [-74, -317, 5, 0],
                        [-86, -269, 5, 0],
                        [-92, -222, 5, 0],
                        [-91, -176, 5, 0],
                        [-79, -127, 5, 0],
                        [-66, -82, 5, 0],
                        [-47, -49, 5, 0],
                        [-32, -31, 5, 0],
                        [-17, -10, 5, 0],
                        [-2, 4, 5, 1],
                        [-5, -31, 3, 0],
                        [-7, -64, 3, 0],
                        [-16, -91, 3, 0],
                        [-32, -133, 3, 0],
                        [-50, -166, 3, 0],
                        [-72, -196, 3, 0],
                        [-118, -238, 3, 0],
                        [-146, -257, 3, 0],
                        [-175, -276, 3, 0],
                        [-204, -288, 3, 0],
                        [-236, -296, 3, 0],
                        [-263, -304, 3, 0],
                        [-296, -307, 3, 0],
                        [-311, -308, 3, 0],
                        [-308, -282, 3, 0],
                        [-301, -227, 3, 0],
                        [-286, -185, 3, 0],
                        [-253, -128, 3, 0],
                        [-228, -92, 3, 0],
                        [-194, -65, 3, 0],
                        [-160, -36, 3, 0],
                        [-126, -22, 3, 0],
                        [-96, -7, 3, 0],
                        [-70, -1, 3, 0],
                        [-44, 2, 3, 0],
                        [-1, 5, 3, 1],
                        [-16, -8, 6, 0],
                        [-31, -20, 6, 0],
                        [-50, -32, 6, 0],
                        [-80, -53, 6, 0],
                        [-126, -71, 6, 0],
                        [-179, -84, 6, 0],
                        [-209, -86, 6, 0],
                        [-248, -86, 6, 0],
                        [-302, -78, 6, 0],
                        [-354, -59, 6, 0],
                        [-396, -37, 6, 0],
                        [-421, -16, 6, 0],
                        [-442, 2, 6, 0],
                        [-424, 22, 6, 0],
                        [-388, 48, 6, 0],
                        [-346, 70, 6, 0],
                        [-313, 82, 6, 0],
                        [-281, 90, 6, 0],
                        [-218, 92, 6, 0],
                        [-158, 89, 6, 0],
                        [-125, 80, 6, 0],
                        [-70, 56, 6, 0],
                        [-47, 41, 6, 0],
                        [-28, 29, 6, 0],
                        [-2, 6, 6, 1],
                        [-13, 7, 4, 0],
                        [-44, 8, 4, 0],
                        [-79, 14, 4, 0],
                        [-112, 25, 4, 0],
                        [-164, 47, 4, 0],
                        [-191, 67, 4, 0],
                        [-218, 91, 4, 0],
                        [-248, 122, 4, 0],
                        [-272, 160, 4, 0],
                        [-293, 197, 4, 0],
                        [-306, 233, 4, 0],
                        [-314, 269, 4, 0],
                        [-317, 302, 4, 0],
                        [-316, 314, 4, 0],
                        [-284, 314, 4, 0],
                        [-244, 308, 4, 0],
                        [-209, 296, 4, 0],
                        [-170, 281, 4, 0],
                        [-134, 258, 4, 0],
                        [-94, 223, 4, 0],
                        [-67, 192, 4, 0],
                        [-41, 155, 4, 0],
                        [-23, 115, 4, 0],
                        [-12, 76, 4, 0],
                        [-5, 46, 4, 0],
                        [-1, 6, 4, 1],
                        [-23, 25, 7, 0],
                        [-40, 49, 7, 0],
                        [-55, 72, 7, 0],
                        [-79, 122, 7, 0],
                        [-90, 162, 7, 0],
                        [-96, 216, 7, 0],
                        [-94, 264, 7, 0],
                        [-79, 323, 7, 0],
                        [-66, 359, 7, 0],
                        [-46, 397, 7, 0],
                        [-29, 421, 7, 0],
                        [-14, 437, 7, 0],
                        [-6, 446, 7, 0],
                        [7, 431, 7, 0],
                        [28, 406, 7, 0],
                        [65, 340, 7, 0],
                        [82, 288, 7, 0],
                        [86, 230, 7, 0],
                        [86, 182, 7, 0],
                        [78, 140, 7, 0],
                        [64, 103, 7, 0],
                        [47, 72, 7, 0],
                        [29, 43, 7, 0],
                        [16, 25, 7, 0],
                        [5, 13, 7, 0],
                        [-1, 5, 7, 1]
                    ],
                    [
                        [-281, 260, 0, 1],
                        [-231, 298, 5, 0],
                        [-191, 322, 5, 0],
                        [-136, 343, 5, 0],
                        [-94, 357, 5, 0],
                        [-57, 364, 5, 0],
                        [0, 370, 5, 0],
                        [57, 364, 5, 0],
                        [94, 357, 5, 0],
                        [136, 343, 5, 0],
                        [191, 322, 5, 0],
                        [231, 298, 5, 0],
                        [281, 260, 5, 0],
                        [296, 256, 5, 0],
                        [306, 253, 5, 0],
                        [317, 253, 5, 0],
                        [329, 257, 5, 0],
                        [340, 265, 5, 0],
                        [348, 274, 5, 0],
                        [351, 282, 5, 0],
                        [354, 292, 5, 0],
                        [353, 302, 5, 0],
                        [350, 312, 5, 0],
                        [343, 320, 5, 0],
                        [301, 347, 5, 0],
                        [250, 366, 5, 0],
                        [200, 383, 5, 0],
                        [160, 389, 5, 0],
                        [100, 397, 5, 0],
                        [60, 398, 5, 0],
                        [10, 396, 5, 0],
                        [-30, 388, 5, 0],
                        [-70, 379, 5, 0],
                        [-120, 362, 5, 0],
                        [-160, 344, 5, 0],
                        [-200, 324, 5, 0],
                        [-230, 304, 5, 0],
                        [-255, 285, 5, 0],
                        [-270, 274, 5, 0],
                        [-281, 260, 5, 1],
                        [281, -260, 0, 1],
                        [231, -298, 4, 0],
                        [191, -322, 4, 0],
                        [136, -343, 4, 0],
                        [94, -357, 4, 0],
                        [57, -364, 4, 0],
                        [0, -370, 4, 0],
                        [-57, -364, 4, 0],
                        [-94, -357, 4, 0],
                        [-136, -343, 4, 0],
                        [-191, -322, 4, 0],
                        [-231, -298, 4, 0],
                        [-281, -260, 4, 0],
                        [-296, -256, 4, 0],
                        [-306, -253, 4, 0],
                        [-317, -253, 4, 0],
                        [-329, -257, 4, 0],
                        [-340, -265, 4, 0],
                        [-348, -274, 4, 0],
                        [-351, -282, 4, 0],
                        [-354, -292, 4, 0],
                        [-353, -302, 4, 0],
                        [-350, -312, 4, 0],
                        [-343, -320, 4, 0],
                        [-301, -347, 4, 0],
                        [-250, -366, 4, 0],
                        [-200, -383, 4, 0],
                        [-160, -389, 4, 0],
                        [-100, -397, 4, 0],
                        [-60, -398, 4, 0],
                        [-10, -396, 4, 0],
                        [30, -388, 4, 0],
                        [70, -379, 4, 0],
                        [120, -362, 4, 0],
                        [160, -344, 4, 0],
                        [200, -324, 4, 0],
                        [230, -304, 4, 0],
                        [255, -285, 4, 0],
                        [270, -274, 4, 0],
                        [281, -260, 4, 1]
                    ],
                    [
                        [-440, 440, 0, 1],
                        [440, 440, 7, 1],
                        [440, -440, 7, 1],
                        [-440, -440, 7, 1],
                        [-440, 440, 7, 1],
                        [-440, 0, 0, 1],
                        [440, 0, 7, 1],
                        [407, 22, 0, 1],
                        [440, 0, 7, 1],
                        [407, -22, 7, 1],
                        [394, 21, 0, 1],
                        [361, 67, 7, 1],
                        [394, 67, 0, 1],
                        [361, 21, 7, 1],
                        [0, -440, 0, 1],
                        [0, 440, 7, 1],
                        [-22, 407, 0, 1],
                        [0, 440, 7, 1],
                        [22, 407, 7, 2],
                        [22, 396, 0, 1],
                        [38, 375, 7, 1],
                        [38, 352, 7, 1],
                        [38, 375, 0, 1],
                        [55, 396, 7, 1],
                        [-154, 198, 0, 1],
                        [-154, 238, 1, 1],
                        [-138, 238, 1, 0],
                        [-131, 235, 1, 0],
                        [-128, 230, 1, 0],
                        [-128, 227, 1, 0],
                        [-131, 221, 1, 0],
                        [-140, 219, 1, 0],
                        [-154, 219, 1, 1],
                        [-141, 219, 0, 1],
                        [-128, 198, 1, 1],
                        [-90, 228, 0, 1],
                        [-92, 232, 2, 0],
                        [-96, 235, 2, 0],
                        [-107, 238, 2, 0],
                        [-111, 237, 2, 0],
                        [-114, 232, 2, 0],
                        [-117, 228, 2, 0],
                        [-119, 222, 2, 0],
                        [-119, 213, 2, 0],
                        [-117, 208, 2, 0],
                        [-114, 204, 2, 0],
                        [-112, 200, 2, 0],
                        [-107, 198, 2, 0],
                        [-100, 198, 2, 0],
                        [-97, 200, 2, 0],
                        [-92, 204, 2, 0],
                        [-90, 208, 2, 0],
                        [-90, 213, 2, 1],
                        [-100, 213, 2, 1],
                        [-81, 238, 0, 1],
                        [-65, 238, 3, 0],
                        [-59, 235, 3, 0],
                        [-57, 233, 3, 0],
                        [-55, 231, 3, 0],
                        [-55, 227, 3, 0],
                        [-57, 222, 3, 0],
                        [-58, 221, 3, 0],
                        [-65, 219, 3, 0],
                        [-81, 219, 3, 1],
                        [-65, 219, 3, 0],
                        [-58, 217, 3, 0],
                        [-57, 215, 3, 0],
                        [-55, 211, 3, 0],
                        [-55, 206, 3, 0],
                        [-59, 200, 3, 0],
                        [-64, 198, 3, 0],
                        [-81, 198, 3, 1],
                        [-81, 238, 3, 1]
                    ],
                    [
                        [-1, 49, 0, 1],
                        [30, 38, 7, 0],
                        [43, 19, 7, 0],
                        [50, 0, 7, 0],
                        [42, -23, 7, 0],
                        [25, -40, 7, 0],
                        [0, -50, 7, 0],
                        [-25, -42, 7, 0],
                        [-42, -26, 7, 0],
                        [-50, 0, 7, 0],
                        [-44, 22, 7, 0],
                        [-29, 39, 7, 0],
                        [0, 50, 7, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [0, 400, 7, 1]
                    ],
                    [
                        [-15, 138, 0, 1],
                        [-15, 162, 7, 1],
                        [5, 162, 0, 1],
                        [22, 162, 7, 1],
                        [22, 150, 7, 1],
                        [5, 150, 7, 1],
                        [5, 138, 7, 1],
                        [22, 138, 7, 1],
                        [75, 130, 0, 1],
                        [75, 130, 6, 1],
                        [130, 75, 0, 1],
                        [130, 75, 6, 1],
                        [140, 15, 0, 1],
                        [160, 15, 7, 1],
                        [160, -15, 7, 1],
                        [140, -15, 7, 1],
                        [140, 0, 0, 1],
                        [160, 0, 7, 1],
                        [130, -75, 0, 1],
                        [130, -75, 6, 1],
                        [75, -130, 0, 1],
                        [75, -130, 6, 1],
                        [12, -138, 0, 1],
                        [-12, -138, 7, 1],
                        [-12, -162, 7, 1],
                        [12, -162, 7, 1],
                        [12, -150, 7, 1],
                        [-12, -150, 7, 1],
                        [-75, -130, 0, 1],
                        [-75, -130, 6, 1],
                        [-130, -75, 0, 1],
                        [-130, -75, 6, 1],
                        [-160, -15, 0, 1],
                        [-140, -15, 7, 1],
                        [-140, 15, 7, 1],
                        [-160, 15, 7, 1],
                        [-160, 0, 7, 1],
                        [-140, 0, 7, 1],
                        [-130, 75, 0, 1],
                        [-130, 75, 6, 1],
                        [-75, 130, 0, 1],
                        [-75, 130, 6, 1]
                    ]
                ]
            }, {
                label: "\u4eae\u70b9",
                arr: [
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 7, 29],
                        [-372, 0, 2, 0],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 0],
                        [-266, 0, 2, 0],
                        [-239, 0, 2, 0],
                        [-213, 0, 2, 0],
                        [-186, 0, 2, 0],
                        [-160, 0, 2, 0],
                        [-133, 0, 2, 0],
                        [-106, 0, 2, 0],
                        [-80, 0, 2, 0],
                        [-53, 0, 2, 0],
                        [-27, 0, 2, 0],
                        [0, 0, 2, 0],
                        [27, 0, 2, 0],
                        [53, 0, 2, 0],
                        [80, 0, 2, 0],
                        [106, 0, 2, 0],
                        [133, 0, 2, 0],
                        [160, 0, 2, 0],
                        [186, 0, 2, 0],
                        [213, 0, 2, 0],
                        [239, 0, 2, 0],
                        [266, 0, 2, 0],
                        [293, 0, 2, 0],
                        [319, 0, 2, 0],
                        [346, 0, 2, 0],
                        [372, 0, 2, 0],
                        [399, 0, 2, 1],
                        [399, 0, 7, 29]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 7, 29],
                        [-372, 0, 2, 0],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 0],
                        [-266, 0, 2, 0],
                        [-239, 0, 2, 0],
                        [-213, 0, 2, 0],
                        [-186, 0, 2, 0],
                        [-160, 0, 2, 0],
                        [-133, 0, 2, 0],
                        [-106, 0, 2, 0],
                        [-80, 0, 2, 0],
                        [-53, 0, 2, 0],
                        [-27, 0, 2, 0],
                        [0, 0, 2, 0],
                        [27, 0, 2, 0],
                        [53, 0, 2, 0],
                        [80, 0, 2, 0],
                        [106, 0, 2, 0],
                        [133, 0, 2, 0],
                        [160, 0, 2, 0],
                        [186, 0, 2, 0],
                        [213, 0, 2, 0],
                        [239, 0, 2, 0],
                        [266, 0, 2, 0],
                        [293, 0, 2, 0],
                        [319, 0, 2, 0],
                        [346, 0, 2, 0],
                        [372, 0, 2, 0],
                        [399, 0, 2, 1],
                        [399, 0, 7, 29]
                    ],
                    [
                        [-426, 0, 0, 1],
                        [-426, 0, 7, 20],
                        [-399, 0, 2, 0],
                        [-372, 0, 2, 0],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 1],
                        [-319, 0, 7, 20],
                        [-293, 0, 2, 0],
                        [-266, 0, 2, 0],
                        [-239, 0, 2, 0],
                        [-213, 0, 2, 1],
                        [-213, 0, 7, 20],
                        [-186, 0, 2, 0],
                        [-160, 0, 2, 0],
                        [-133, 0, 2, 0],
                        [-106, 0, 2, 1],
                        [-106, 0, 7, 20],
                        [-80, 0, 2, 0],
                        [-53, 0, 2, 0],
                        [-27, 0, 2, 0],
                        [0, 0, 2, 1],
                        [0, 0, 7, 20],
                        [27, 0, 2, 0],
                        [53, 0, 2, 0],
                        [80, 0, 2, 0],
                        [106, 0, 2, 1],
                        [106, 0, 7, 20],
                        [133, 0, 2, 0],
                        [160, 0, 2, 0],
                        [186, 0, 2, 0],
                        [213, 0, 2, 1],
                        [213, 0, 7, 20],
                        [239, 0, 2, 0],
                        [266, 0, 2, 0],
                        [293, 0, 2, 0],
                        [319, 0, 2, 1],
                        [319, 0, 7, 20],
                        [346, 0, 2, 0],
                        [372, 0, 2, 0],
                        [399, 0, 2, 0],
                        [426, 0, 2, 1],
                        [426, 0, 7, 20]
                    ],
                    [
                        [-380, 0, 0, 1],
                        [-380, 0, 7, 12],
                        [-366, 0, 6, 0],
                        [-353, 0, 6, 0],
                        [-340, 0, 6, 0],
                        [-327, 0, 6, 0],
                        [-313, 0, 6, 1],
                        [-313, 0, 7, 12],
                        [313, 0, 0, 1],
                        [313, 0, 7, 12],
                        [327, 0, 6, 0],
                        [340, 0, 6, 0],
                        [353, 0, 6, 0],
                        [366, 0, 6, 0],
                        [380, 0, 6, 1],
                        [380, 0, 7, 12]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 7, 20],
                        [-372, 0, 4, 0],
                        [-346, 0, 4, 0],
                        [-319, 0, 4, 0],
                        [-293, 0, 4, 0],
                        [-266, 0, 4, 0],
                        [-239, 0, 4, 0],
                        [-213, 0, 4, 0],
                        [-186, 0, 4, 1],
                        [-186, 0, 7, 20],
                        [-106, 0, 0, 1],
                        [-106, 0, 7, 20],
                        [-80, 0, 5, 0],
                        [-53, 0, 5, 0],
                        [-27, 0, 5, 0],
                        [0, 0, 5, 0],
                        [27, 0, 5, 0],
                        [53, 0, 5, 0],
                        [80, 0, 5, 0],
                        [106, 0, 5, 1],
                        [106, 0, 7, 20],
                        [186, 0, 0, 1],
                        [186, 0, 7, 20],
                        [213, 0, 6, 0],
                        [239, 0, 6, 0],
                        [266, 0, 6, 0],
                        [293, 0, 6, 0],
                        [319, 0, 6, 0],
                        [346, 0, 6, 0],
                        [372, 0, 6, 0],
                        [399, 0, 6, 1],
                        [399, 0, 7, 20]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 7, 20],
                        [-372, 0, 2, 0],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 0],
                        [-266, 0, 2, 0],
                        [-239, 0, 2, 0],
                        [-213, 0, 2, 1],
                        [-213, 0, 7, 20],
                        [-186, 0, 0, 1],
                        [-186, 0, 7, 20],
                        [-160, 0, 6, 0],
                        [-133, 0, 6, 0],
                        [-106, 0, 6, 0],
                        [-80, 0, 6, 0],
                        [-53, 0, 6, 0],
                        [-27, 0, 6, 0],
                        [-13, 0, 6, 1],
                        [-13, 0, 7, 20],
                        [13, 0, 0, 1],
                        [13, 0, 7, 20],
                        [27, 0, 2, 0],
                        [53, 0, 2, 0],
                        [80, 0, 2, 0],
                        [106, 0, 2, 0],
                        [133, 0, 2, 0],
                        [160, 0, 2, 0],
                        [186, 0, 2, 1],
                        [186, 0, 7, 20],
                        [213, 0, 0, 1],
                        [213, 0, 7, 20],
                        [239, 0, 6, 0],
                        [266, 0, 6, 0],
                        [293, 0, 6, 0],
                        [319, 0, 6, 0],
                        [346, 0, 6, 0],
                        [372, 0, 6, 0],
                        [399, 0, 6, 1],
                        [399, 0, 7, 20]
                    ],
                    [
                        [-372, 0, 0, 1],
                        [-372, 0, 7, 20],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 1],
                        [-293, 0, 7, 20],
                        [-239, 0, 0, 1],
                        [-239, 0, 7, 20],
                        [-213, 0, 6, 0],
                        [-186, 0, 6, 0],
                        [-160, 0, 6, 1],
                        [-160, 0, 7, 20],
                        [-106, 0, 0, 1],
                        [-106, 0, 7, 20],
                        [-80, 0, 1, 0],
                        [-53, 0, 1, 0],
                        [-27, 0, 1, 1],
                        [-27, 0, 7, 20],
                        [27, 0, 0, 1],
                        [27, 0, 7, 20],
                        [53, 0, 4, 0],
                        [80, 0, 4, 0],
                        [106, 0, 4, 1],
                        [106, 0, 7, 20],
                        [160, 0, 0, 1],
                        [160, 0, 7, 20],
                        [186, 0, 3, 0],
                        [213, 0, 3, 0],
                        [239, 0, 3, 1],
                        [239, 0, 7, 20],
                        [293, 0, 0, 1],
                        [293, 0, 7, 20],
                        [319, 0, 5, 0],
                        [346, 0, 5, 0],
                        [372, 0, 5, 1],
                        [372, 0, 7, 20]
                    ],
                    [
                        [-412, 0, 0, 1],
                        [-412, 0, 7, 20],
                        [-386, 0, 2, 0],
                        [-359, 0, 2, 0],
                        [-332, 0, 2, 1],
                        [-332, 0, 7, 20],
                        [-306, 0, 0, 1],
                        [-306, 0, 7, 20],
                        [-279, 0, 7, 0],
                        [-253, 0, 7, 0],
                        [-226, 0, 7, 1],
                        [-226, 0, 7, 20],
                        [-200, 0, 0, 1],
                        [-200, 0, 7, 20],
                        [-173, 0, 1, 0],
                        [-146, 0, 1, 0],
                        [-120, 0, 1, 1],
                        [-120, 0, 7, 20],
                        [-93, 0, 0, 1],
                        [-93, 0, 7, 20],
                        [-66, 0, 4, 0],
                        [-40, 0, 4, 0],
                        [-13, 0, 4, 1],
                        [-13, 0, 7, 20],
                        [13, 0, 0, 1],
                        [13, 0, 7, 20],
                        [40, 0, 3, 0],
                        [66, 0, 3, 0],
                        [93, 0, 3, 1],
                        [93, 0, 7, 20],
                        [120, 0, 0, 1],
                        [120, 0, 7, 20],
                        [146, 0, 6, 0],
                        [173, 0, 6, 0],
                        [200, 0, 6, 1],
                        [200, 0, 7, 20],
                        [226, 0, 0, 1],
                        [226, 0, 7, 20],
                        [253, 0, 2, 0],
                        [279, 0, 2, 0],
                        [306, 0, 2, 1],
                        [306, 0, 7, 20],
                        [332, 0, 0, 1],
                        [332, 0, 7, 20],
                        [359, 0, 5, 0],
                        [386, 0, 5, 0],
                        [412, 0, 5, 1],
                        [412, 0, 7, 20]
                    ],
                    [
                        [-412, 0, 0, 1],
                        [-412, 0, 7, 18],
                        [-386, 0, 1, 0],
                        [-359, 0, 1, 0],
                        [-332, 0, 1, 1],
                        [-332, 0, 7, 18],
                        [-306, 0, 0, 1],
                        [-306, 0, 7, 18],
                        [-279, 0, 1, 0],
                        [-253, 0, 1, 0],
                        [-226, 0, 1, 1],
                        [-226, 0, 7, 18],
                        [-200, 0, 0, 1],
                        [-200, 0, 7, 18],
                        [-173, 0, 4, 0],
                        [-146, 0, 4, 0],
                        [-120, 0, 4, 1],
                        [-120, 0, 7, 18],
                        [-93, 0, 0, 1],
                        [-93, 0, 7, 18],
                        [-66, 0, 4, 0],
                        [-40, 0, 4, 0],
                        [-13, 0, 4, 1],
                        [-13, 0, 7, 18],
                        [13, 0, 0, 1],
                        [13, 0, 7, 18],
                        [40, 0, 2, 0],
                        [66, 0, 2, 0],
                        [93, 0, 2, 1],
                        [93, 0, 7, 18],
                        [120, 0, 0, 1],
                        [120, 0, 7, 18],
                        [146, 0, 2, 0],
                        [173, 0, 2, 0],
                        [200, 0, 2, 1],
                        [200, 0, 7, 18],
                        [226, 0, 0, 1],
                        [226, 0, 7, 18],
                        [253, 0, 6, 0],
                        [279, 0, 6, 0],
                        [306, 0, 6, 1],
                        [306, 0, 7, 18],
                        [332, 0, 0, 1],
                        [332, 0, 7, 18],
                        [359, 0, 6, 0],
                        [386, 0, 6, 0],
                        [412, 0, 6, 1],
                        [412, 0, 7, 18]
                    ],
                    [
                        [-405, 0, 0, 1],
                        [-405, 0, 7, 15],
                        [-382, 0, 7, 0],
                        [-360, 0, 7, 0],
                        [-338, 0, 7, 1],
                        [-338, 0, 7, 15],
                        [-322, 0, 0, 1],
                        [-322, 0, 7, 15],
                        [-300, 0, 1, 0],
                        [-278, 0, 1, 0],
                        [-255, 0, 1, 1],
                        [-255, 0, 7, 15],
                        [-240, 0, 0, 1],
                        [-240, 0, 7, 15],
                        [-218, 0, 7, 0],
                        [-195, 0, 7, 0],
                        [-172, 0, 7, 1],
                        [-172, 0, 7, 15],
                        [-158, 0, 0, 1],
                        [-158, 0, 7, 15],
                        [-135, 0, 1, 0],
                        [-112, 0, 1, 0],
                        [-90, 0, 1, 1],
                        [-90, 0, 7, 15],
                        [-75, 0, 0, 1],
                        [-75, 0, 7, 15],
                        [-52, 0, 7, 0],
                        [-30, 0, 7, 0],
                        [-8, 0, 7, 1],
                        [-8, 0, 7, 15],
                        [8, 0, 0, 1],
                        [8, 0, 7, 15],
                        [30, 0, 1, 0],
                        [52, 0, 1, 0],
                        [75, 0, 1, 1],
                        [75, 0, 7, 15],
                        [90, 0, 0, 1],
                        [90, 0, 7, 15],
                        [112, 0, 7, 0],
                        [135, 0, 7, 0],
                        [158, 0, 7, 1],
                        [158, 0, 7, 15],
                        [172, 0, 0, 1],
                        [172, 0, 7, 15],
                        [195, 0, 1, 0],
                        [218, 0, 1, 0],
                        [240, 0, 1, 1],
                        [240, 0, 7, 15],
                        [255, 0, 0, 1],
                        [255, 0, 7, 15],
                        [278, 0, 7, 0],
                        [300, 0, 7, 0],
                        [322, 0, 7, 1],
                        [322, 0, 7, 15],
                        [338, 0, 0, 1],
                        [338, 0, 7, 15],
                        [360, 0, 1, 0],
                        [382, 0, 1, 0],
                        [405, 0, 1, 1],
                        [405, 0, 7, 15]
                    ],
                    [
                        [-392, 0, 0, 1],
                        [-392, 0, 7, 12],
                        [-366, 0, 4, 0],
                        [-339, 0, 4, 1],
                        [-339, 0, 7, 12],
                        [-326, 0, 0, 1],
                        [-326, 0, 7, 12],
                        [-299, 0, 3, 0],
                        [-273, 0, 3, 1],
                        [-273, 0, 7, 12],
                        [-259, 0, 0, 1],
                        [-259, 0, 7, 12],
                        [-233, 0, 4, 0],
                        [-206, 0, 4, 1],
                        [-206, 0, 7, 12],
                        [-193, 0, 0, 1],
                        [-193, 0, 7, 12],
                        [-166, 0, 3, 0],
                        [-140, 0, 3, 1],
                        [-140, 0, 7, 12],
                        [-126, 0, 0, 1],
                        [-126, 0, 7, 12],
                        [-100, 0, 4, 0],
                        [-73, 0, 4, 1],
                        [-73, 0, 7, 12],
                        [-60, 0, 0, 1],
                        [-60, 0, 7, 12],
                        [-33, 0, 3, 0],
                        [-7, 0, 3, 1],
                        [-7, 0, 7, 12],
                        [7, 0, 0, 1],
                        [7, 0, 7, 12],
                        [33, 0, 4, 0],
                        [60, 0, 4, 1],
                        [60, 0, 7, 12],
                        [73, 0, 0, 1],
                        [73, 0, 7, 12],
                        [100, 0, 3, 0],
                        [126, 0, 3, 1],
                        [126, 0, 7, 12],
                        [140, 0, 0, 1],
                        [140, 0, 7, 12],
                        [166, 0, 4, 0],
                        [193, 0, 4, 1],
                        [193, 0, 7, 12],
                        [206, 0, 0, 1],
                        [206, 0, 7, 12],
                        [233, 0, 3, 0],
                        [259, 0, 3, 1],
                        [259, 0, 7, 12],
                        [273, 0, 0, 1],
                        [273, 0, 7, 12],
                        [299, 0, 4, 0],
                        [326, 0, 4, 1],
                        [326, 0, 7, 12],
                        [339, 0, 0, 1],
                        [339, 0, 7, 12],
                        [366, 0, 3, 0],
                        [392, 0, 3, 1],
                        [392, 0, 7, 12]
                    ],
                    [
                        [-406, 0, 0, 1],
                        [-406, 0, 7, 15],
                        [-377, 0, 2, 0],
                        [-348, 0, 2, 1],
                        [-348, 0, 7, 15],
                        [-319, 0, 2, 0],
                        [-290, 0, 2, 1],
                        [-290, 0, 7, 15],
                        [-261, 0, 2, 0],
                        [-232, 0, 2, 1],
                        [-232, 0, 7, 15],
                        [-203, 0, 2, 0],
                        [-174, 0, 2, 1],
                        [-174, 0, 7, 15],
                        [-145, 0, 2, 0],
                        [-116, 0, 2, 1],
                        [-116, 0, 7, 15],
                        [-87, 0, 2, 0],
                        [-58, 0, 2, 1],
                        [-58, 0, 7, 15],
                        [-29, 0, 2, 0],
                        [0, 0, 2, 1],
                        [0, 0, 7, 15],
                        [29, 0, 2, 0],
                        [58, 0, 2, 1],
                        [58, 0, 7, 15],
                        [87, 0, 2, 0],
                        [116, 0, 2, 1],
                        [116, 0, 7, 15],
                        [145, 0, 2, 0],
                        [174, 0, 2, 1],
                        [174, 0, 7, 15],
                        [203, 0, 2, 0],
                        [232, 0, 2, 1],
                        [232, 0, 7, 15],
                        [261, 0, 2, 0],
                        [290, 0, 2, 1],
                        [290, 0, 7, 15],
                        [319, 0, 2, 0],
                        [348, 0, 2, 1],
                        [348, 0, 7, 15],
                        [377, 0, 2, 0],
                        [406, 0, 2, 1],
                        [406, 0, 7, 15]
                    ],
                    [
                        [-300, -400, 0, 1],
                        [-300, -400, 7, 11],
                        [-290, -400, 7, 0],
                        [-280, -400, 7, 0],
                        [-270, -400, 7, 0],
                        [-260, -400, 7, 0],
                        [-250, -400, 7, 0],
                        [-240, -400, 7, 0],
                        [-230, -400, 7, 1],
                        [-230, -400, 7, 11],
                        [-200, -400, 0, 1],
                        [-200, -400, 7, 11],
                        [-190, -400, 2, 0],
                        [-180, -400, 2, 0],
                        [-170, -400, 2, 0],
                        [-160, -400, 2, 0],
                        [-150, -400, 2, 0],
                        [-140, -400, 2, 0],
                        [-130, -400, 2, 1],
                        [-130, -400, 7, 11],
                        [-100, -400, 0, 1],
                        [-100, -400, 7, 11],
                        [-90, -400, 4, 0],
                        [-80, -400, 4, 0],
                        [-70, -400, 4, 0],
                        [-60, -400, 4, 0],
                        [-50, -400, 4, 0],
                        [-40, -400, 4, 0],
                        [-30, -400, 4, 0],
                        [-20, -400, 4, 1],
                        [-20, -400, 7, 11],
                        [10, -400, 0, 1],
                        [10, -400, 7, 11],
                        [20, -400, 5, 0],
                        [30, -400, 5, 0],
                        [40, -400, 5, 0],
                        [50, -400, 5, 0],
                        [60, -400, 5, 0],
                        [70, -400, 5, 0],
                        [80, -400, 5, 1],
                        [80, -400, 7, 11],
                        [110, -400, 0, 1],
                        [110, -400, 7, 11],
                        [120, -400, 6, 0],
                        [130, -400, 6, 0],
                        [140, -400, 6, 0],
                        [150, -400, 6, 0],
                        [160, -400, 6, 0],
                        [170, -400, 6, 0],
                        [180, -400, 6, 1],
                        [180, -400, 7, 11],
                        [210, -400, 0, 1],
                        [210, -400, 7, 11],
                        [220, -400, 7, 0],
                        [230, -400, 7, 0],
                        [240, -400, 7, 0],
                        [250, -400, 7, 0],
                        [260, -400, 7, 0],
                        [270, -400, 7, 0],
                        [280, -400, 7, 1],
                        [280, -400, 7, 11],
                        [-300, 400, 0, 1],
                        [-300, 400, 7, 11],
                        [-290, 400, 7, 0],
                        [-280, 400, 7, 0],
                        [-270, 400, 7, 0],
                        [-260, 400, 7, 0],
                        [-250, 400, 7, 0],
                        [-240, 400, 7, 0],
                        [-230, 400, 7, 1],
                        [-230, 400, 7, 11],
                        [-200, 400, 0, 1],
                        [-200, 400, 7, 11],
                        [-190, 400, 2, 0],
                        [-180, 400, 2, 0],
                        [-170, 400, 2, 0],
                        [-160, 400, 2, 0],
                        [-150, 400, 2, 0],
                        [-140, 400, 2, 0],
                        [-130, 400, 2, 1],
                        [-130, 400, 7, 11],
                        [-100, 400, 0, 1],
                        [-100, 400, 7, 11],
                        [-90, 400, 4, 0],
                        [-80, 400, 4, 0],
                        [-70, 400, 4, 0],
                        [-60, 400, 4, 0],
                        [-50, 400, 4, 0],
                        [-40, 400, 4, 0],
                        [-30, 400, 4, 0],
                        [-20, 400, 4, 1],
                        [-20, 400, 7, 11],
                        [10, 400, 0, 1],
                        [10, 400, 7, 11],
                        [20, 400, 5, 0],
                        [30, 400, 5, 0],
                        [40, 400, 5, 0],
                        [50, 400, 5, 0],
                        [60, 400, 5, 0],
                        [70, 400, 5, 0],
                        [80, 400, 5, 1],
                        [80, 400, 7, 11],
                        [110, 400, 0, 1],
                        [110, 400, 7, 11],
                        [120, 400, 6, 0],
                        [130, 400, 6, 0],
                        [140, 400, 6, 0],
                        [150, 400, 6, 0],
                        [160, 400, 6, 0],
                        [170, 400, 6, 0],
                        [180, 400, 6, 1],
                        [180, 400, 7, 11],
                        [210, 400, 0, 1],
                        [210, 400, 7, 11],
                        [220, 400, 7, 0],
                        [230, 400, 7, 0],
                        [240, 400, 7, 0],
                        [250, 400, 7, 0],
                        [260, 400, 7, 0],
                        [270, 400, 7, 0],
                        [280, 400, 7, 1],
                        [280, 400, 7, 11]
                    ],
                    [
                        [0, 403, 0, 1],
                        [-59, 302, 4, 0],
                        [-118, 198, 4, 0],
                        [-176, 97, 4, 0],
                        [-235, -3, 4, 0],
                        [-294, -106, 4, 0],
                        [-349, -202, 4, 1],
                        [-349, -202, 7, 29],
                        [-234, -202, 4, 0],
                        [-116, -202, 4, 0],
                        [0, -202, 4, 0],
                        [116, -202, 4, 0],
                        [234, -202, 4, 0],
                        [349, -202, 4, 1],
                        [349, -202, 7, 29],
                        [294, -106, 4, 0],
                        [235, -3, 4, 0],
                        [176, 97, 4, 0],
                        [118, 198, 4, 0],
                        [59, 302, 4, 0],
                        [0, 403, 4, 1],
                        [0, 403, 7, 29]
                    ],
                    [
                        [-400, 400, 0, 1],
                        [-320, 400, 2, 0],
                        [-240, 400, 2, 0],
                        [-160, 400, 2, 0],
                        [-80, 400, 2, 0],
                        [0, 400, 2, 0],
                        [80, 400, 2, 0],
                        [160, 400, 2, 0],
                        [240, 400, 2, 0],
                        [320, 400, 2, 0],
                        [400, 400, 2, 1],
                        [400, 400, 7, 29],
                        [400, 320, 2, 0],
                        [400, 240, 2, 0],
                        [400, 160, 2, 0],
                        [400, 80, 2, 0],
                        [400, 0, 2, 0],
                        [400, -80, 2, 0],
                        [400, -160, 2, 0],
                        [400, -240, 2, 0],
                        [400, -320, 2, 0],
                        [400, -400, 2, 1],
                        [400, -400, 7, 29],
                        [320, -400, 2, 0],
                        [240, -400, 2, 0],
                        [160, -400, 2, 0],
                        [80, -400, 2, 0],
                        [0, -400, 2, 0],
                        [-80, -400, 2, 0],
                        [-160, -400, 2, 0],
                        [-240, -400, 2, 0],
                        [-320, -400, 2, 0],
                        [-400, -400, 2, 1],
                        [-400, -400, 7, 29],
                        [-400, -320, 2, 0],
                        [-400, -240, 2, 0],
                        [-400, -160, 2, 0],
                        [-400, -80, 2, 0],
                        [-400, 0, 2, 0],
                        [-400, 80, 2, 0],
                        [-400, 160, 2, 0],
                        [-400, 240, 2, 0],
                        [-400, 320, 2, 0],
                        [-400, 400, 2, 1],
                        [-400, 400, 7, 29]
                    ],
                    [
                        [385, 126, 0, 1],
                        [0, 405, 1, 1],
                        [0, 405, 7, 29],
                        [-385, 126, 1, 1],
                        [-385, 126, 7, 29],
                        [-238, -328, 1, 1],
                        [-238, -328, 7, 29],
                        [238, -328, 1, 1],
                        [238, -328, 7, 29],
                        [385, 126, 1, 1],
                        [385, 126, 7, 29]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 29],
                        [400, 200, 2, 1],
                        [400, 200, 7, 29],
                        [400, -200, 2, 1],
                        [400, -200, 7, 29],
                        [0, -400, 2, 1],
                        [0, -400, 7, 29],
                        [-400, -200, 2, 1],
                        [-400, -200, 7, 29],
                        [-400, 200, 2, 1],
                        [-400, 200, 7, 29],
                        [0, 400, 2, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 25],
                        [282, 282, 3, 1],
                        [282, 282, 7, 25],
                        [400, 0, 3, 1],
                        [400, 0, 7, 25],
                        [282, -282, 3, 1],
                        [282, -282, 7, 25],
                        [0, -400, 3, 1],
                        [0, -400, 7, 25],
                        [-282, -282, 3, 1],
                        [-282, -282, 7, 25],
                        [-400, 0, 3, 1],
                        [-400, 0, 7, 25],
                        [-282, 282, 3, 1],
                        [-282, 282, 7, 25],
                        [0, 400, 3, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 15],
                        [52, 397, 1, 0],
                        [104, 386, 1, 0],
                        [153, 370, 1, 0],
                        [200, 346, 1, 1],
                        [200, 346, 7, 15],
                        [244, 317, 2, 0],
                        [283, 283, 2, 0],
                        [317, 244, 2, 0],
                        [346, 200, 2, 1],
                        [346, 200, 7, 15],
                        [370, 153, 1, 0],
                        [386, 104, 1, 0],
                        [397, 52, 1, 0],
                        [400, 0, 1, 1],
                        [400, 0, 7, 15],
                        [397, -52, 2, 0],
                        [386, -104, 2, 0],
                        [370, -153, 2, 0],
                        [346, -200, 2, 1],
                        [346, -200, 7, 15],
                        [317, -244, 1, 0],
                        [283, -283, 1, 0],
                        [244, -317, 1, 0],
                        [200, -346, 1, 1],
                        [200, -346, 7, 15],
                        [153, -370, 2, 0],
                        [104, -386, 2, 0],
                        [52, -397, 2, 0],
                        [0, -400, 2, 1],
                        [0, -400, 7, 15],
                        [-52, -397, 1, 0],
                        [-104, -386, 1, 0],
                        [-153, -370, 1, 0],
                        [-200, -346, 1, 1],
                        [-200, -346, 7, 15],
                        [-244, -317, 2, 0],
                        [-283, -283, 2, 0],
                        [-317, -244, 2, 0],
                        [-346, -200, 2, 1],
                        [-346, -200, 7, 15],
                        [-370, -153, 1, 0],
                        [-386, -104, 1, 0],
                        [-397, -52, 1, 0],
                        [-400, 0, 1, 1],
                        [-400, 0, 7, 15],
                        [-397, 52, 2, 0],
                        [-386, 104, 2, 0],
                        [-370, 153, 2, 0],
                        [-346, 200, 2, 1],
                        [-346, 200, 7, 15],
                        [-317, 244, 1, 0],
                        [-283, 283, 1, 0],
                        [-244, 317, 1, 0],
                        [-200, 346, 1, 1],
                        [-200, 346, 7, 15],
                        [-153, 370, 2, 0],
                        [-104, 386, 2, 0],
                        [-52, 397, 2, 0],
                        [0, 400, 2, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 15],
                        [52, 397, 1, 0],
                        [104, 386, 1, 0],
                        [153, 370, 1, 0],
                        [200, 346, 1, 1],
                        [200, 346, 7, 15],
                        [283, 283, 0, 1],
                        [283, 283, 7, 15],
                        [317, 244, 3, 0],
                        [346, 200, 3, 0],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 15],
                        [400, 0, 0, 1],
                        [400, 0, 7, 15],
                        [397, -52, 1, 0],
                        [386, -104, 1, 0],
                        [370, -153, 1, 0],
                        [346, -200, 1, 1],
                        [346, -200, 7, 15],
                        [283, -283, 0, 1],
                        [283, -283, 7, 15],
                        [244, -317, 3, 0],
                        [200, -346, 3, 0],
                        [153, -370, 3, 0],
                        [104, -386, 3, 1],
                        [104, -386, 7, 15],
                        [0, -400, 0, 1],
                        [0, -400, 7, 15],
                        [-52, -397, 1, 0],
                        [-104, -386, 1, 0],
                        [-153, -370, 1, 0],
                        [-200, -346, 1, 1],
                        [-200, -346, 7, 15],
                        [-283, -283, 0, 1],
                        [-283, -283, 7, 15],
                        [-317, -244, 3, 0],
                        [-346, -200, 3, 0],
                        [-370, -153, 3, 0],
                        [-386, -104, 3, 1],
                        [-386, -104, 7, 15],
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 15],
                        [-397, 52, 1, 0],
                        [-386, 104, 1, 0],
                        [-370, 153, 1, 0],
                        [-346, 200, 1, 1],
                        [-346, 200, 7, 15],
                        [-283, 283, 0, 1],
                        [-283, 283, 7, 15],
                        [-244, 317, 3, 0],
                        [-200, 346, 3, 0],
                        [-153, 370, 3, 0],
                        [-104, 386, 3, 1],
                        [-104, 386, 7, 15]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 2, 0],
                        [104, 386, 2, 0],
                        [153, 370, 2, 0],
                        [200, 346, 2, 0],
                        [244, 317, 2, 0],
                        [283, 283, 2, 1],
                        [283, 283, 7, 20],
                        [400, 0, 0, 1],
                        [400, 0, 7, 20],
                        [397, -52, 6, 0],
                        [386, -104, 6, 0],
                        [370, -153, 6, 0],
                        [346, -200, 6, 0],
                        [317, -244, 6, 0],
                        [283, -283, 6, 1],
                        [283, -283, 7, 20],
                        [0, -400, 0, 1],
                        [0, -400, 7, 20],
                        [-52, -397, 2, 0],
                        [-104, -386, 2, 0],
                        [-153, -370, 2, 0],
                        [-200, -346, 2, 0],
                        [-244, -317, 2, 0],
                        [-283, -283, 2, 1],
                        [-283, -283, 7, 20],
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 20],
                        [-397, 52, 6, 0],
                        [-386, 104, 6, 0],
                        [-370, 153, 6, 0],
                        [-346, 200, 6, 0],
                        [-317, 244, 6, 0],
                        [-283, 283, 6, 1],
                        [-283, 283, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 15],
                        [52, 397, 1, 0],
                        [104, 386, 1, 1],
                        [104, 386, 7, 15],
                        [153, 370, 1, 0],
                        [200, 346, 1, 1],
                        [200, 346, 7, 15],
                        [244, 317, 1, 0],
                        [283, 283, 1, 1],
                        [283, 283, 7, 15],
                        [317, 244, 1, 0],
                        [346, 200, 1, 1],
                        [346, 200, 7, 15],
                        [370, 153, 1, 0],
                        [386, 104, 1, 1],
                        [386, 104, 7, 15],
                        [397, 52, 1, 0],
                        [400, 0, 1, 1],
                        [400, 0, 7, 15],
                        [0, -400, 0, 1],
                        [0, -400, 7, 15],
                        [-52, -397, 1, 0],
                        [-104, -386, 1, 1],
                        [-104, -386, 7, 15],
                        [-153, -370, 1, 0],
                        [-200, -346, 1, 1],
                        [-200, -346, 7, 15],
                        [-244, -317, 1, 0],
                        [-283, -283, 1, 1],
                        [-283, -283, 7, 15],
                        [-317, -244, 1, 0],
                        [-346, -200, 1, 1],
                        [-346, -200, 7, 15],
                        [-370, -153, 1, 0],
                        [-386, -104, 1, 1],
                        [-386, -104, 7, 15],
                        [-397, -52, 1, 0],
                        [-400, 0, 1, 1],
                        [-400, 0, 7, 15]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 15],
                        [52, 397, 1, 0],
                        [104, 386, 1, 1],
                        [104, 386, 7, 15],
                        [153, 370, 1, 0],
                        [200, 346, 1, 1],
                        [200, 346, 7, 15],
                        [244, 317, 2, 0],
                        [283, 283, 2, 1],
                        [283, 283, 7, 15],
                        [317, 244, 2, 0],
                        [346, 200, 2, 1],
                        [346, 200, 7, 15],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 15],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 15],
                        [397, -52, 1, 0],
                        [386, -104, 1, 1],
                        [386, -104, 7, 15],
                        [370, -153, 1, 0],
                        [346, -200, 1, 1],
                        [346, -200, 7, 15],
                        [317, -244, 2, 0],
                        [283, -283, 2, 1],
                        [283, -283, 7, 15],
                        [244, -317, 2, 0],
                        [200, -346, 2, 1],
                        [200, -346, 7, 15],
                        [153, -370, 3, 0],
                        [104, -386, 3, 1],
                        [104, -386, 7, 15],
                        [52, -397, 3, 0],
                        [0, -400, 3, 1],
                        [0, -400, 7, 15]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 29],
                        [52, 397, 1, 0],
                        [104, 386, 1, 0],
                        [153, 370, 1, 0],
                        [200, 346, 1, 0],
                        [244, 317, 2, 0],
                        [283, 283, 2, 0],
                        [317, 244, 2, 0],
                        [346, 200, 2, 0],
                        [370, 153, 3, 0],
                        [386, 104, 3, 0],
                        [397, 52, 3, 0],
                        [400, 0, 3, 0],
                        [397, -52, 1, 0],
                        [386, -104, 1, 0],
                        [370, -153, 1, 0],
                        [346, -200, 1, 0],
                        [317, -244, 2, 0],
                        [283, -283, 2, 0],
                        [244, -317, 2, 0],
                        [200, -346, 2, 0],
                        [153, -370, 3, 0],
                        [104, -386, 3, 0],
                        [52, -397, 3, 0],
                        [0, -400, 3, 1],
                        [0, -400, 7, 29]
                    ],
                    [
                        [-400, 80, 0, 1],
                        [-400, 80, 7, 20],
                        [-300, 160, 4, 1],
                        [-300, 160, 7, 20],
                        [-200, 80, 5, 1],
                        [-200, 80, 7, 20],
                        [-100, 160, 4, 1],
                        [-100, 160, 7, 20],
                        [0, 80, 5, 1],
                        [0, 80, 7, 20],
                        [100, 160, 4, 1],
                        [100, 160, 7, 20],
                        [200, 80, 5, 1],
                        [200, 80, 7, 20],
                        [300, 160, 4, 1],
                        [300, 160, 7, 20],
                        [400, 80, 5, 1],
                        [400, 80, 7, 20]
                    ]
                ]
            }, {
                label: "\u6253\u70b9",
                arr: [
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 10],
                        [-400, 0, 7, 10],
                        [-400, 0, 7, 10],
                        [-400, 0, 7, 10],
                        [400, 0, 0, 1],
                        [400, 0, 6, 10],
                        [400, 0, 6, 10],
                        [400, 0, 6, 10],
                        [400, 0, 6, 10]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 8],
                        [400, 0, 0, 1],
                        [400, 0, 6, 8]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 10],
                        [-400, 0, 7, 10],
                        [-130, 0, 0, 1],
                        [-130, 0, 6, 10],
                        [-130, 0, 6, 10],
                        [130, 0, 0, 1],
                        [130, 0, 4, 10],
                        [130, 0, 4, 10],
                        [400, 0, 0, 1],
                        [400, 0, 5, 10],
                        [400, 0, 5, 10]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 10],
                        [-240, 0, 0, 1],
                        [-240, 0, 1, 10],
                        [-80, 0, 0, 1],
                        [-80, 0, 3, 10],
                        [80, 0, 0, 1],
                        [80, 0, 6, 10],
                        [240, 0, 0, 1],
                        [240, 0, 5, 10],
                        [400, 0, 0, 1],
                        [400, 0, 4, 10]
                    ],
                    [
                        [-404, 0, 0, 1],
                        [-404, 0, 7, 10],
                        [-289, 0, 0, 1],
                        [-289, 0, 1, 10],
                        [-173, 0, 0, 1],
                        [-173, 0, 3, 10],
                        [-58, 0, 0, 1],
                        [-58, 0, 6, 10],
                        [58, 0, 0, 1],
                        [58, 0, 5, 10],
                        [173, 0, 0, 1],
                        [173, 0, 4, 10],
                        [289, 0, 0, 1],
                        [289, 0, 2, 10],
                        [404, 0, 0, 1],
                        [404, 0, 7, 10]
                    ],
                    [
                        [-404, 0, 0, 1],
                        [-404, 0, 7, 6],
                        [-331, 0, 0, 1],
                        [-331, 0, 7, 6],
                        [-257, 0, 0, 1],
                        [-257, 0, 7, 6],
                        [-184, 0, 0, 1],
                        [-184, 0, 7, 6],
                        [-110, 0, 0, 1],
                        [-110, 0, 7, 6],
                        [-37, 0, 0, 1],
                        [-37, 0, 7, 6],
                        [37, 0, 0, 1],
                        [37, 0, 7, 6],
                        [110, 0, 0, 1],
                        [110, 0, 7, 6],
                        [184, 0, 0, 1],
                        [184, 0, 7, 6],
                        [257, 0, 0, 1],
                        [257, 0, 7, 6],
                        [331, 0, 0, 1],
                        [331, 0, 7, 6],
                        [404, 0, 0, 1],
                        [404, 0, 7, 6]
                    ],
                    [
                        [-394, 0, 0, 1],
                        [-394, 0, 7, 4],
                        [-341, 0, 0, 1],
                        [-341, 0, 7, 4],
                        [-289, 0, 0, 1],
                        [-289, 0, 1, 4],
                        [-236, 0, 0, 1],
                        [-236, 0, 1, 4],
                        [-184, 0, 0, 1],
                        [-184, 0, 3, 4],
                        [-131, 0, 0, 1],
                        [-131, 0, 3, 4],
                        [-79, 0, 0, 1],
                        [-79, 0, 6, 4],
                        [-26, 0, 0, 1],
                        [-26, 0, 6, 4],
                        [26, 0, 0, 1],
                        [26, 0, 5, 4],
                        [79, 0, 0, 1],
                        [79, 0, 5, 4],
                        [131, 0, 0, 1],
                        [131, 0, 4, 4],
                        [184, 0, 0, 1],
                        [184, 0, 4, 4],
                        [236, 0, 0, 1],
                        [236, 0, 2, 4],
                        [289, 0, 0, 1],
                        [289, 0, 2, 4],
                        [341, 0, 0, 1],
                        [341, 0, 7, 4],
                        [394, 0, 0, 1],
                        [394, 0, 7, 4]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 5, 4],
                        [-357, 0, 0, 1],
                        [-357, 0, 5, 4],
                        [-315, 0, 0, 1],
                        [-315, 0, 7, 4],
                        [-273, 0, 0, 1],
                        [-273, 0, 7, 4],
                        [-231, 0, 0, 1],
                        [-231, 0, 1, 4],
                        [-189, 0, 0, 1],
                        [-189, 0, 1, 4],
                        [-147, 0, 0, 1],
                        [-147, 0, 3, 4],
                        [-105, 0, 0, 1],
                        [-105, 0, 3, 4],
                        [-63, 0, 0, 1],
                        [-63, 0, 6, 4],
                        [-21, 0, 0, 1],
                        [-21, 0, 6, 4],
                        [21, 0, 0, 1],
                        [21, 0, 5, 4],
                        [63, 0, 0, 1],
                        [63, 0, 5, 4],
                        [105, 0, 0, 1],
                        [105, 0, 4, 4],
                        [147, 0, 0, 1],
                        [147, 0, 4, 4],
                        [189, 0, 0, 1],
                        [189, 0, 2, 4],
                        [231, 0, 0, 1],
                        [231, 0, 2, 4],
                        [273, 0, 0, 1],
                        [273, 0, 7, 4],
                        [315, 0, 0, 1],
                        [315, 0, 7, 4],
                        [357, 0, 0, 1],
                        [357, 0, 6, 4],
                        [399, 0, 0, 1],
                        [393, 0, 6, 4]
                    ],
                    [
                        [-402, 0, 0, 1],
                        [-402, 0, 5, 3],
                        [-368, 0, 0, 1],
                        [-368, 0, 5, 3],
                        [-332, 0, 0, 1],
                        [-332, 0, 2, 3],
                        [-298, 0, 0, 1],
                        [-298, 0, 2, 3],
                        [-262, 0, 0, 1],
                        [-262, 0, 7, 3],
                        [-228, 0, 0, 1],
                        [-228, 0, 7, 3],
                        [-192, 0, 0, 1],
                        [-192, 0, 1, 3],
                        [-158, 0, 0, 1],
                        [-158, 0, 1, 3],
                        [-122, 0, 0, 1],
                        [-122, 0, 3, 3],
                        [-88, 0, 0, 1],
                        [-88, 0, 3, 3],
                        [-52, 0, 0, 1],
                        [-52, 0, 6, 3],
                        [-18, 0, 0, 1],
                        [-18, 0, 6, 3],
                        [18, 0, 0, 1],
                        [18, 0, 5, 3],
                        [52, 0, 0, 1],
                        [52, 0, 5, 3],
                        [88, 0, 0, 1],
                        [88, 0, 4, 3],
                        [122, 0, 0, 1],
                        [122, 0, 4, 3],
                        [158, 0, 0, 1],
                        [158, 0, 2, 3],
                        [192, 0, 0, 1],
                        [192, 0, 2, 3],
                        [228, 0, 0, 1],
                        [228, 0, 7, 3],
                        [262, 0, 0, 1],
                        [262, 0, 7, 3],
                        [298, 0, 0, 1],
                        [298, 0, 2, 3],
                        [332, 0, 0, 1],
                        [328, 0, 2, 3],
                        [368, 0, 0, 1],
                        [368, 0, 5, 3],
                        [402, 0, 0, 1],
                        [402, 0, 5, 3]
                    ],
                    [
                        [-412, 0, 0, 1],
                        [-412, 0, 0, 3],
                        [-386, 0, 0, 1],
                        [-386, 0, 1, 3],
                        [-359, 0, 0, 1],
                        [-359, 0, 1, 3],
                        [-332, 0, 0, 1],
                        [-332, 0, 1, 3],
                        [-306, 0, 0, 1],
                        [-306, 0, 0, 3],
                        [-279, 0, 0, 1],
                        [-279, 0, 2, 3],
                        [-253, 0, 0, 1],
                        [-253, 0, 2, 3],
                        [-226, 0, 0, 1],
                        [-226, 0, 2, 3],
                        [-200, 0, 0, 1],
                        [-200, 0, 0, 3],
                        [-173, 0, 0, 1],
                        [-173, 0, 4, 3],
                        [-146, 0, 0, 1],
                        [-146, 0, 4, 3],
                        [-120, 0, 0, 1],
                        [-120, 0, 4, 3],
                        [-93, 0, 0, 1],
                        [-93, 0, 0, 3],
                        [-66, 0, 0, 1],
                        [-66, 0, 6, 3],
                        [-40, 0, 0, 1],
                        [-40, 0, 6, 3],
                        [-13, 0, 0, 1],
                        [-13, 0, 6, 3],
                        [13, 0, 0, 1],
                        [13, 0, 0, 3],
                        [40, 0, 0, 1],
                        [40, 0, 5, 3],
                        [66, 0, 0, 1],
                        [66, 0, 5, 3],
                        [93, 0, 0, 1],
                        [93, 0, 5, 3],
                        [120, 0, 0, 1],
                        [120, 0, 0, 3],
                        [146, 0, 0, 1],
                        [146, 0, 3, 3],
                        [173, 0, 0, 1],
                        [173, 0, 3, 3],
                        [200, 0, 0, 1],
                        [200, 0, 3, 3],
                        [226, 0, 0, 1],
                        [226, 0, 0, 3],
                        [253, 0, 0, 1],
                        [253, 0, 6, 3],
                        [279, 0, 0, 1],
                        [279, 0, 6, 3],
                        [306, 0, 0, 1],
                        [306, 0, 6, 3],
                        [332, 0, 0, 1],
                        [332, 0, 0, 3],
                        [359, 0, 0, 1],
                        [359, 0, 7, 3],
                        [386, 0, 0, 1],
                        [386, 0, 7, 3],
                        [412, 0, 0, 1],
                        [412, 0, 7, 3]
                    ],
                    [
                        [0, 410, 0, 1],
                        [0, 410, 7, 10],
                        [0, 410, 7, 10],
                        [-350, -206, 0, 1],
                        [-350, -206, 2, 10],
                        [-350, -206, 2, 10],
                        [350, -206, 0, 1],
                        [350, -206, 6, 10],
                        [350, -206, 6, 10]
                    ],
                    [
                        [0, 351, 0, 1],
                        [0, 351, 4, 5],
                        [-75, 219, 0, 1],
                        [-75, 219, 4, 5],
                        [-150, 87, 0, 1],
                        [-150, 87, 4, 5],
                        [-225, -45, 0, 1],
                        [-225, -45, 4, 5],
                        [-300, -177, 0, 1],
                        [-300, -177, 5, 5],
                        [-150, -177, 0, 1],
                        [-150, -177, 5, 5],
                        [0, -177, 0, 1],
                        [0, -177, 5, 5],
                        [150, -177, 0, 1],
                        [150, -177, 5, 5],
                        [300, -177, 0, 1],
                        [300, -177, 6, 5],
                        [225, -45, 0, 1],
                        [225, -45, 6, 5],
                        [150, 87, 0, 1],
                        [150, 87, 6, 5],
                        [75, 219, 0, 1],
                        [75, 219, 6, 5]
                    ],
                    [
                        [-346, -200, 0, 1],
                        [-346, -200, 5, 2],
                        [-270, -200, 0, 1],
                        [-270, -200, 5, 2],
                        [-210, -200, 0, 1],
                        [-210, -200, 5, 2],
                        [-150, -200, 0, 1],
                        [-150, -200, 5, 2],
                        [-90, -200, 0, 1],
                        [-90, -200, 5, 2],
                        [-30, -200, 0, 1],
                        [-30, -200, 5, 2],
                        [30, -200, 0, 1],
                        [30, -200, 5, 2],
                        [90, -200, 0, 1],
                        [90, -200, 5, 2],
                        [150, -200, 0, 1],
                        [150, -200, 5, 2],
                        [210, -200, 0, 1],
                        [210, -200, 5, 2],
                        [270, -200, 0, 1],
                        [270, -200, 5, 2],
                        [346, -200, 0, 1],
                        [346, -200, 5, 2],
                        [300, -120, 0, 1],
                        [300, -120, 6, 2],
                        [270, -67, 0, 1],
                        [270, -67, 6, 2],
                        [240, -14, 0, 1],
                        [240, -14, 6, 2],
                        [210, 37, 0, 1],
                        [210, 37, 6, 2],
                        [180, 88, 0, 1],
                        [180, 88, 6, 2],
                        [150, 138, 0, 1],
                        [150, 138, 6, 2],
                        [120, 193, 0, 1],
                        [120, 193, 6, 2],
                        [90, 245, 0, 1],
                        [90, 245, 6, 2],
                        [60, 296, 0, 1],
                        [60, 296, 6, 2],
                        [30, 348, 0, 1],
                        [30, 348, 6, 2],
                        [0, 400, 0, 1],
                        [0, 400, 6, 2],
                        [-30, 348, 0, 1],
                        [-30, 348, 7, 2],
                        [-60, 296, 0, 1],
                        [-60, 296, 7, 2],
                        [-90, 245, 0, 1],
                        [-90, 245, 7, 2],
                        [-120, 193, 0, 1],
                        [-120, 193, 7, 2],
                        [-150, 138, 0, 1],
                        [-150, 138, 7, 2],
                        [-180, 88, 0, 1],
                        [-180, 88, 7, 2],
                        [-210, 37, 0, 1],
                        [-210, 37, 7, 2],
                        [-240, -14, 0, 1],
                        [-240, -14, 7, 2],
                        [-270, -67, 0, 1],
                        [-270, -67, 7, 2],
                        [-300, -120, 0, 1],
                        [-300, -120, 7, 2],
                        [-346, -200, 0, 1],
                        [-346, -200, 7, 2]
                    ],
                    [
                        [-360, 360, 0, 1],
                        [-360, 360, 4, 10],
                        [-360, 360, 4, 10],
                        [360, 360, 0, 1],
                        [360, 360, 5, 10],
                        [360, 360, 5, 10],
                        [360, -360, 0, 1],
                        [360, -360, 6, 10],
                        [360, -360, 6, 10],
                        [-360, -360, 0, 1],
                        [-360, -360, 7, 10],
                        [-360, -360, 7, 10]
                    ],
                    [
                        [-360, 360, 0, 1],
                        [-360, 360, 4, 2],
                        [-288, 360, 0, 1],
                        [-288, 360, 4, 2],
                        [-216, 360, 0, 1],
                        [-216, 360, 4, 2],
                        [-144, 360, 0, 1],
                        [-144, 360, 4, 2],
                        [-72, 360, 0, 1],
                        [-72, 360, 4, 2],
                        [0, 360, 0, 1],
                        [0, 360, 4, 2],
                        [72, 360, 0, 1],
                        [72, 360, 4, 2],
                        [144, 360, 0, 1],
                        [144, 360, 4, 2],
                        [216, 360, 0, 1],
                        [216, 360, 4, 2],
                        [288, 360, 0, 1],
                        [288, 360, 4, 2],
                        [360, 360, 0, 1],
                        [360, 360, 4, 2],
                        [360, 288, 0, 1],
                        [360, 288, 5, 2],
                        [360, 216, 0, 1],
                        [360, 216, 5, 2],
                        [360, 144, 0, 1],
                        [360, 144, 5, 2],
                        [360, 72, 0, 1],
                        [360, 72, 5, 2],
                        [360, 0, 0, 1],
                        [360, 0, 5, 2],
                        [360, -72, 0, 1],
                        [360, -72, 5, 2],
                        [360, -144, 0, 1],
                        [360, -144, 5, 2],
                        [360, -216, 0, 1],
                        [360, -216, 5, 2],
                        [360, -288, 0, 1],
                        [360, -288, 5, 2],
                        [360, -360, 0, 1],
                        [360, -360, 6, 2],
                        [288, -360, 0, 1],
                        [288, -360, 6, 2],
                        [216, -360, 0, 1],
                        [216, -360, 6, 2],
                        [144, -360, 0, 1],
                        [144, -360, 6, 2],
                        [72, -360, 0, 1],
                        [72, -360, 6, 2],
                        [0, -360, 0, 1],
                        [0, -360, 6, 2],
                        [-72, -360, 0, 1],
                        [-72, -360, 6, 2],
                        [-144, -360, 0, 1],
                        [-144, -360, 6, 2],
                        [-216, -360, 0, 1],
                        [-216, -360, 6, 2],
                        [-288, -360, 0, 1],
                        [-288, -360, 6, 2],
                        [-360, -360, 0, 1],
                        [-360, -360, 7, 2],
                        [-360, -288, 0, 1],
                        [-360, -288, 7, 2],
                        [-360, -216, 0, 1],
                        [-360, -216, 7, 2],
                        [-360, -144, 0, 1],
                        [-360, -144, 7, 2],
                        [-360, -72, 0, 1],
                        [-360, -72, 7, 2],
                        [-360, 0, 0, 1],
                        [-360, 0, 7, 2],
                        [-360, 72, 0, 1],
                        [-360, 72, 7, 2],
                        [-360, 144, 0, 1],
                        [-360, 144, 7, 2],
                        [-360, 216, 0, 1],
                        [-360, 216, 7, 2],
                        [-360, 288, 0, 1],
                        [-360, 288, 7, 2],
                        [-360, 360, 0, 1],
                        [-360, 360, 7, 2]
                    ],
                    [
                        [0, 72, 0, 1],
                        [0, 72, 7, 2],
                        [19, 70, 0, 1],
                        [19, 70, 7, 2],
                        [36, 62, 0, 1],
                        [36, 62, 7, 2],
                        [51, 51, 0, 1],
                        [51, 51, 7, 2],
                        [62, 36, 0, 1],
                        [62, 36, 7, 2],
                        [70, 19, 0, 1],
                        [70, 19, 7, 2],
                        [72, 0, 0, 1],
                        [72, 0, 7, 2],
                        [70, -19, 0, 1],
                        [70, -19, 7, 2],
                        [62, -36, 0, 1],
                        [62, -36, 7, 2],
                        [51, -51, 0, 1],
                        [51, -51, 7, 2],
                        [36, -62, 0, 1],
                        [36, -62, 7, 2],
                        [19, -70, 0, 1],
                        [19, -70, 7, 2],
                        [0, -72, 0, 1],
                        [0, -72, 7, 2],
                        [-19, -70, 0, 1],
                        [-19, -70, 7, 2],
                        [-36, -62, 0, 1],
                        [-36, -62, 7, 2],
                        [-51, -51, 0, 1],
                        [-51, -51, 7, 2],
                        [-62, -36, 0, 1],
                        [-62, -36, 7, 2],
                        [-70, -19, 0, 1],
                        [-70, -19, 7, 2],
                        [-72, 0, 0, 1],
                        [-72, 0, 7, 2],
                        [-70, 19, 0, 1],
                        [-70, 19, 7, 2],
                        [-62, 36, 0, 1],
                        [-62, 36, 7, 2],
                        [-51, 51, 0, 1],
                        [-51, 51, 7, 2],
                        [-36, 62, 0, 1],
                        [-36, 62, 7, 2],
                        [-19, 70, 0, 1],
                        [-19, 70, 7, 2]
                    ],
                    [
                        [-330, 72, 0, 1],
                        [-330, 72, 7, 2],
                        [-311, 70, 0, 1],
                        [-311, 70, 7, 2],
                        [-294, 62, 0, 1],
                        [-294, 62, 7, 2],
                        [-279, 51, 0, 1],
                        [-279, 51, 7, 2],
                        [-268, 36, 0, 1],
                        [-268, 36, 7, 2],
                        [-260, 19, 0, 1],
                        [-260, 19, 7, 2],
                        [-258, 0, 0, 1],
                        [-258, 0, 7, 2],
                        [-260, -19, 0, 1],
                        [-260, -19, 7, 2],
                        [-268, -36, 0, 1],
                        [-268, -36, 7, 2],
                        [-279, -51, 0, 1],
                        [-279, -51, 7, 2],
                        [-294, -62, 0, 1],
                        [-294, -62, 7, 2],
                        [-311, -70, 0, 1],
                        [-311, -70, 7, 2],
                        [-330, -72, 0, 1],
                        [-330, -72, 7, 2],
                        [-349, -70, 0, 1],
                        [-349, -70, 7, 2],
                        [-366, -62, 0, 1],
                        [-366, -62, 7, 2],
                        [-381, -51, 0, 1],
                        [-381, -51, 7, 2],
                        [-392, -36, 0, 1],
                        [-392, -36, 7, 2],
                        [-400, -19, 0, 1],
                        [-400, -19, 7, 2],
                        [-402, 0, 0, 1],
                        [-402, 0, 7, 2],
                        [-400, 19, 0, 1],
                        [-400, 19, 7, 2],
                        [-392, 36, 0, 1],
                        [-392, 36, 7, 2],
                        [-381, 51, 0, 1],
                        [-381, 51, 7, 2],
                        [-366, 62, 0, 1],
                        [-366, 62, 7, 2],
                        [-349, 70, 0, 1],
                        [-349, 70, 7, 2],
                        [330, 72, 0, 1],
                        [330, 72, 6, 2],
                        [349, 70, 0, 1],
                        [349, 70, 6, 2],
                        [366, 62, 0, 1],
                        [366, 62, 6, 2],
                        [381, 51, 0, 1],
                        [381, 51, 6, 2],
                        [392, 36, 0, 1],
                        [392, 36, 6, 2],
                        [400, 19, 0, 1],
                        [400, 19, 6, 2],
                        [402, 0, 0, 1],
                        [402, 0, 6, 2],
                        [400, -19, 0, 1],
                        [400, -19, 6, 2],
                        [392, -36, 0, 1],
                        [392, -36, 6, 2],
                        [381, -51, 0, 1],
                        [381, -51, 6, 2],
                        [366, -62, 0, 1],
                        [366, -62, 6, 2],
                        [349, -70, 0, 1],
                        [349, -70, 6, 2],
                        [330, -72, 0, 1],
                        [330, -72, 6, 2],
                        [311, -70, 0, 1],
                        [311, -70, 6, 2],
                        [294, -62, 0, 1],
                        [294, -62, 6, 2],
                        [279, -51, 0, 1],
                        [279, -51, 6, 2],
                        [268, -36, 0, 1],
                        [268, -36, 6, 2],
                        [260, -19, 0, 1],
                        [260, -19, 6, 2],
                        [258, 0, 0, 1],
                        [258, 0, 6, 2],
                        [260, 19, 0, 1],
                        [260, 19, 6, 2],
                        [268, 36, 0, 1],
                        [268, 36, 6, 2],
                        [279, 51, 0, 1],
                        [279, 51, 6, 2],
                        [294, 62, 0, 1],
                        [294, 62, 6, 2],
                        [311, 70, 0, 1],
                        [311, 70, 6, 2]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 1, 4],
                        [56, 396, 0, 1],
                        [56, 396, 1, 4],
                        [110, 384, 0, 1],
                        [110, 384, 2, 4],
                        [163, 366, 0, 1],
                        [163, 366, 2, 4],
                        [212, 339, 0, 1],
                        [212, 339, 4, 4],
                        [257, 306, 0, 1],
                        [257, 306, 4, 4],
                        [297, 268, 0, 1],
                        [297, 268, 5, 4],
                        [332, 224, 0, 1],
                        [332, 224, 5, 4],
                        [360, 175, 0, 1],
                        [360, 175, 6, 4],
                        [380, 124, 0, 1],
                        [380, 124, 6, 4],
                        [394, 70, 0, 1],
                        [394, 70, 7, 4],
                        [400, 14, 0, 1],
                        [400, 14, 7, 4]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 1, 3],
                        [56, 396, 0, 1],
                        [56, 396, 1, 3],
                        [110, 384, 0, 1],
                        [110, 384, 2, 3],
                        [163, 366, 0, 1],
                        [163, 366, 2, 3],
                        [212, 339, 0, 1],
                        [212, 339, 4, 3],
                        [257, 306, 0, 1],
                        [257, 306, 4, 3],
                        [297, 268, 0, 1],
                        [297, 268, 5, 3],
                        [332, 224, 0, 1],
                        [332, 224, 5, 3],
                        [360, 175, 0, 1],
                        [360, 175, 6, 3],
                        [380, 124, 0, 1],
                        [380, 124, 6, 3],
                        [394, 70, 0, 1],
                        [394, 70, 7, 3],
                        [400, 14, 0, 1],
                        [400, 14, 7, 3],
                        [0, 350, 0, 1],
                        [0, 350, 1, 3],
                        [49, 346, 0, 1],
                        [49, 346, 1, 3],
                        [97, 336, 0, 1],
                        [97, 336, 2, 3],
                        [142, 320, 0, 1],
                        [142, 320, 2, 3],
                        [186, 297, 0, 1],
                        [186, 297, 4, 3],
                        [225, 268, 0, 1],
                        [225, 268, 4, 3],
                        [260, 234, 0, 1],
                        [260, 234, 5, 3],
                        [290, 196, 0, 1],
                        [290, 196, 5, 3],
                        [315, 153, 0, 1],
                        [315, 153, 6, 3],
                        [333, 108, 0, 1],
                        [333, 108, 6, 3],
                        [345, 61, 0, 1],
                        [345, 61, 7, 3],
                        [350, 12, 0, 1],
                        [350, 12, 7, 3]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 2, 3],
                        [56, 396, 0, 1],
                        [56, 396, 2, 3],
                        [110, 384, 0, 1],
                        [110, 384, 2, 3],
                        [163, 366, 0, 1],
                        [163, 366, 2, 3],
                        [212, 339, 0, 1],
                        [212, 339, 2, 3],
                        [257, 306, 0, 1],
                        [257, 306, 2, 3],
                        [297, 268, 0, 1],
                        [297, 268, 2, 3],
                        [332, 224, 0, 1],
                        [332, 224, 2, 3],
                        [360, 175, 0, 1],
                        [360, 175, 2, 3],
                        [380, 124, 0, 1],
                        [380, 124, 2, 3],
                        [394, 70, 0, 1],
                        [394, 70, 2, 3],
                        [400, 14, 0, 1],
                        [400, 14, 2, 3],
                        [0, -400, 0, 1],
                        [0, -400, 7, 3],
                        [-56, -396, 0, 1],
                        [-56, -396, 7, 3],
                        [-110, -384, 0, 1],
                        [-110, -384, 7, 3],
                        [-163, -366, 0, 1],
                        [-163, -366, 7, 3],
                        [-212, -339, 0, 1],
                        [-212, -339, 7, 3],
                        [-257, -306, 0, 1],
                        [-257, -306, 7, 3],
                        [-297, -268, 0, 1],
                        [-297, -268, 7, 3],
                        [-332, -224, 0, 1],
                        [-332, -224, 7, 3],
                        [-360, -175, 0, 1],
                        [-360, -175, 7, 3],
                        [-380, -124, 0, 1],
                        [-380, -124, 7, 3],
                        [-394, -70, 0, 1],
                        [-394, -70, 7, 3],
                        [-400, -14, 0, 1],
                        [-400, -14, 7, 3]
                    ],
                    [
                        [0, -400, 0, 1],
                        [0, -400, 1, 5],
                        [104, -386, 0, 1],
                        [104, -386, 1, 5],
                        [200, -346, 0, 1],
                        [200, -346, 1, 5],
                        [283, -283, 0, 1],
                        [283, -283, 4, 5],
                        [346, -200, 0, 1],
                        [346, -200, 4, 5],
                        [386, -104, 0, 1],
                        [386, -104, 2, 5],
                        [400, 0, 0, 1],
                        [400, 0, 2, 5],
                        [386, 104, 0, 1],
                        [386, 104, 2, 5],
                        [346, 200, 0, 1],
                        [346, 200, 6, 5],
                        [283, 283, 0, 1],
                        [283, 283, 6, 5],
                        [200, 346, 0, 1],
                        [200, 346, 6, 5],
                        [104, 386, 0, 1],
                        [104, 386, 7, 5],
                        [0, 400, 0, 1],
                        [0, 400, 7, 5]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 3],
                        [104, 386, 0, 1],
                        [104, 386, 7, 3],
                        [200, 346, 0, 1],
                        [200, 346, 7, 3],
                        [283, 283, 0, 1],
                        [283, 283, 7, 3],
                        [346, 200, 0, 1],
                        [346, 200, 7, 3],
                        [386, 104, 0, 1],
                        [386, 104, 7, 3],
                        [400, 0, 0, 1],
                        [400, 0, 7, 3],
                        [386, -104, 0, 1],
                        [386, -104, 7, 3],
                        [346, -200, 0, 1],
                        [346, -200, 7, 3],
                        [283, -283, 0, 1],
                        [283, -283, 7, 3],
                        [200, -346, 0, 1],
                        [200, -346, 7, 3],
                        [104, -386, 0, 1],
                        [104, -386, 7, 3],
                        [0, -400, 0, 1],
                        [0, -400, 7, 3],
                        [-104, -386, 0, 1],
                        [-104, -386, 7, 3],
                        [-200, -346, 0, 1],
                        [-200, -346, 7, 3],
                        [-283, -283, 0, 1],
                        [-283, -283, 7, 3],
                        [-346, -200, 0, 1],
                        [-346, -200, 7, 3],
                        [-386, -104, 0, 1],
                        [-386, -104, 7, 3],
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 3],
                        [-386, 104, 0, 1],
                        [-386, 104, 7, 3],
                        [-346, 200, 0, 1],
                        [-346, 200, 7, 3],
                        [-283, 283, 0, 1],
                        [-283, 283, 7, 3],
                        [-200, 346, 0, 1],
                        [-200, 346, 7, 3],
                        [-104, 386, 0, 1],
                        [-104, 386, 7, 3]
                    ],
                    [
                        [0, 375, 0, 1],
                        [0, 375, 2, 4],
                        [52, 371, 0, 1],
                        [52, 371, 1, 4],
                        [104, 360, 0, 1],
                        [104, 360, 78, 4],
                        [153, 343, 0, 1],
                        [153, 343, 80, 4],
                        [199, 318, 0, 1],
                        [199, 318, 82, 4],
                        [241, 287, 0, 1],
                        [241, 287, 84, 4],
                        [279, 251, 0, 1],
                        [279, 251, 85, 4],
                        [311, 210, 0, 1],
                        [311, 210, 87, 4],
                        [337, 164, 0, 1],
                        [337, 164, 89, 4],
                        [357, 116, 0, 1],
                        [357, 116, 91, 4],
                        [369, 65, 0, 1],
                        [369, 65, 93, 4],
                        [375, 13, 0, 1],
                        [375, 13, 95, 4],
                        [373, -39, 0, 1],
                        [373, -39, 96, 4],
                        [364, -91, 0, 1],
                        [364, -91, 98, 4],
                        [348, -141, 0, 1],
                        [348, -141, 100, 4],
                        [325, -188, 0, 1],
                        [325, -188, 102, 4],
                        [296, -231, 0, 1],
                        [296, -231, 104, 4],
                        [261, -270, 0, 1],
                        [261, -270, 106, 4],
                        [220, -303, 0, 1],
                        [220, -303, 107, 4],
                        [176, -331, 0, 1],
                        [176, -331, 109, 4],
                        [128, -352, 0, 1],
                        [128, -352, 111, 4],
                        [78, -367, 0, 1],
                        [78, -367, 113, 4],
                        [26, -374, 0, 1],
                        [26, -374, 115, 4],
                        [-26, -374, 0, 1],
                        [-26, -374, 117, 4],
                        [-78, -367, 0, 1],
                        [-78, -367, 118, 4],
                        [-128, -352, 0, 1],
                        [-128, -352, 120, 4],
                        [-176, -331, 0, 1],
                        [-176, -331, 121, 4],
                        [-220, -303, 0, 1],
                        [-220, -303, 122, 4],
                        [-261, -270, 0, 1],
                        [-261, -270, 124, 4],
                        [-296, -231, 0, 1],
                        [-296, -231, 126, 4],
                        [-325, -188, 0, 1],
                        [-325, -188, 128, 4],
                        [-348, -141, 0, 1],
                        [-348, -141, 129, 4],
                        [-364, -91, 0, 1],
                        [-364, -91, 131, 4],
                        [-373, -39, 0, 1],
                        [-373, -39, 133, 4],
                        [-375, 13, 0, 1],
                        [-375, 13, 135, 4],
                        [-369, 65, 0, 1],
                        [-369, 65, 137, 4],
                        [-352, 128, 0, 1],
                        [-352, 128, 139, 4],
                        [-331, 176, 0, 1],
                        [-331, 176, 141, 4],
                        [-303, 220, 0, 1],
                        [-303, 220, 143, 4],
                        [-270, 261, 0, 1],
                        [-270, 261, 145, 4],
                        [-231, 296, 0, 1],
                        [-231, 296, 147, 4],
                        [-188, 325, 0, 1],
                        [-188, 325, 239, 4],
                        [-141, 348, 0, 1],
                        [-141, 348, 237, 4],
                        [-91, 364, 0, 1],
                        [-91, 364, 235, 4],
                        [-39, 373, 0, 1],
                        [-39, 373, 233, 4]
                    ],
                    [
                        [0, 405, 0, 1],
                        [0, 405, 2, 10],
                        [-385, 126, 0, 1],
                        [-385, 126, 4, 10],
                        [-238, -328, 0, 1],
                        [-238, -328, 5, 10],
                        [238, -328, 0, 1],
                        [238, -328, 6, 10],
                        [385, 126, 0, 1],
                        [385, 126, 7, 10]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 1, 10],
                        [400, 200, 0, 1],
                        [400, 200, 2, 10],
                        [400, -200, 0, 1],
                        [400, -200, 3, 10],
                        [0, -400, 0, 1],
                        [0, -400, 1, 10],
                        [-400, -200, 0, 1],
                        [-400, -200, 2, 10],
                        [-400, 200, 0, 1],
                        [-400, 200, 3, 10]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 10],
                        [282, 282, 0, 1],
                        [282, 282, 5, 10],
                        [400, 0, 0, 1],
                        [400, 0, 6, 10],
                        [282, -282, 0, 1],
                        [282, -282, 7, 10],
                        [0, -400, 0, 1],
                        [0, -400, 4, 10],
                        [-282, -282, 0, 1],
                        [-282, -282, 5, 10],
                        [-400, 0, 0, 1],
                        [-400, 0, 6, 10],
                        [-282, 282, 0, 1],
                        [-282, 282, 7, 10]
                    ]
                ]
            }, {
                label: "\u5723\u8bde",
                arr: [
                    [
                        [-325, 56, 0, 1],
                        [-331, 55, 4, 0],
                        [-332, 49, 4, 0],
                        [-330, 43, 4, 0],
                        [-324, 40, 4, 0],
                        [-318, 37, 4, 0],
                        [-309, 37, 4, 0],
                        [-298, 39, 4, 0],
                        [-289, 44, 4, 0],
                        [-279, 52, 4, 0],
                        [-270, 61, 4, 0],
                        [-263, 72, 4, 0],
                        [-256, 82, 4, 0],
                        [-251, 92, 4, 0],
                        [-244, 102, 4, 0],
                        [-238, 113, 4, 0],
                        [-233, 120, 4, 0],
                        [-228, 124, 4, 0],
                        [-224, 126, 4, 0],
                        [-227, 120, 4, 0],
                        [-232, 112, 4, 0],
                        [-236, 101, 4, 0],
                        [-240, 89, 4, 0],
                        [-243, 79, 4, 0],
                        [-249, 65, 4, 0],
                        [-253, 55, 4, 0],
                        [-258, 47, 4, 0],
                        [-265, 41, 4, 0],
                        [-268, 38, 4, 0],
                        [-259, 41, 4, 0],
                        [-248, 50, 4, 0],
                        [-239, 62, 4, 0],
                        [-230, 73, 4, 0],
                        [-221, 86, 4, 0],
                        [-209, 100, 4, 0],
                        [-197, 114, 4, 0],
                        [-187, 121, 4, 0],
                        [-175, 126, 4, 0],
                        [-172, 124, 4, 0],
                        [-178, 120, 4, 0],
                        [-189, 110, 4, 0],
                        [-197, 99, 4, 0],
                        [-204, 85, 4, 0],
                        [-210, 74, 4, 0],
                        [-218, 62, 4, 0],
                        [-225, 49, 4, 0],
                        [-233, 43, 4, 0],
                        [-241, 39, 4, 0],
                        [-240, 37, 4, 0],
                        [-235, 37, 4, 0],
                        [-224, 37, 4, 0],
                        [-218, 40, 4, 0],
                        [-210, 45, 4, 0],
                        [-205, 53, 4, 0],
                        [-201, 55, 4, 0],
                        [-193, 57, 4, 0],
                        [-183, 59, 4, 0],
                        [-176, 61, 4, 0],
                        [-169, 68, 4, 0],
                        [-169, 74, 4, 0],
                        [-176, 75, 4, 0],
                        [-183, 71, 4, 0],
                        [-192, 64, 4, 0],
                        [-196, 59, 4, 0],
                        [-199, 51, 4, 0],
                        [-200, 45, 4, 0],
                        [-198, 40, 4, 0],
                        [-193, 38, 4, 0],
                        [-183, 41, 4, 0],
                        [-176, 48, 4, 0],
                        [-169, 56, 4, 0],
                        [-160, 67, 4, 0],
                        [-155, 73, 4, 0],
                        [-151, 75, 4, 0],
                        [-148, 74, 4, 0],
                        [-147, 69, 4, 0],
                        [-150, 63, 4, 0],
                        [-154, 55, 4, 0],
                        [-158, 48, 4, 0],
                        [-161, 42, 4, 0],
                        [-163, 39, 4, 0],
                        [-161, 43, 4, 0],
                        [-156, 52, 4, 0],
                        [-147, 58, 4, 0],
                        [-140, 66, 4, 0],
                        [-133, 69, 4, 0],
                        [-130, 73, 4, 0],
                        [-133, 75, 4, 0],
                        [-138, 70, 4, 0],
                        [-143, 63, 4, 0],
                        [-143, 56, 4, 0],
                        [-143, 51, 4, 0],
                        [-139, 51, 4, 0],
                        [-133, 53, 4, 0],
                        [-128, 59, 4, 0],
                        [-123, 66, 4, 0],
                        [-116, 74, 4, 0],
                        [-110, 74, 4, 0],
                        [-109, 67, 4, 0],
                        [-114, 58, 4, 0],
                        [-119, 50, 4, 0],
                        [-124, 43, 4, 0],
                        [-126, 38, 4, 0],
                        [-120, 47, 4, 0],
                        [-113, 57, 4, 0],
                        [-106, 61, 4, 0],
                        [-97, 67, 4, 0],
                        [-92, 70, 4, 0],
                        [-91, 75, 4, 0],
                        [-96, 74, 4, 0],
                        [-102, 69, 4, 0],
                        [-106, 57, 4, 0],
                        [-105, 52, 4, 0],
                        [-101, 50, 4, 0],
                        [-94, 53, 4, 0],
                        [-87, 60, 4, 0],
                        [-81, 70, 4, 0],
                        [-78, 75, 4, 0],
                        [-82, 67, 4, 0],
                        [-87, 57, 4, 0],
                        [-93, 46, 4, 0],
                        [-91, 40, 4, 0],
                        [-87, 39, 4, 0],
                        [-78, 45, 4, 0],
                        [-71, 50, 4, 0],
                        [-64, 61, 4, 0],
                        [-60, 70, 4, 0],
                        [-57, 74, 4, 0],
                        [-63, 61, 4, 0],
                        [-71, 50, 4, 0],
                        [-82, 30, 4, 0],
                        [-87, 21, 4, 0],
                        [-95, 8, 4, 0],
                        [-101, 1, 4, 0],
                        [-108, -1, 4, 0],
                        [-118, -1, 4, 0],
                        [-122, 2, 4, 0],
                        [-119, 10, 4, 0],
                        [-107, 20, 4, 0],
                        [-94, 27, 4, 0],
                        [-75, 35, 4, 0],
                        [-58, 45, 4, 0],
                        [-48, 57, 4, 0],
                        [-36, 66, 4, 0],
                        [-23, 75, 4, 0],
                        [-5, 85, 4, 0],
                        [14, 95, 4, 0],
                        [32, 102, 4, 0],
                        [49, 111, 4, 0],
                        [58, 117, 4, 0],
                        [58, 119, 4, 0],
                        [50, 119, 4, 0],
                        [38, 117, 4, 0],
                        [22, 110, 4, 0],
                        [9, 103, 4, 0],
                        [-2, 92, 4, 0],
                        [-11, 76, 4, 0],
                        [-13, 55, 4, 0],
                        [-6, 42, 4, 0],
                        [5, 36, 4, 0],
                        [20, 36, 4, 0],
                        [36, 43, 4, 0],
                        [49, 57, 4, 0],
                        [61, 74, 4, 0],
                        [70, 85, 4, 0],
                        [79, 95, 4, 0],
                        [85, 103, 4, 0],
                        [89, 110, 4, 0],
                        [91, 113, 4, 0],
                        [88, 106, 4, 0],
                        [85, 98, 4, 0],
                        [80, 90, 4, 0],
                        [76, 82, 4, 0],
                        [70, 72, 4, 0],
                        [66, 63, 4, 0],
                        [59, 51, 4, 0],
                        [56, 44, 4, 0],
                        [53, 39, 4, 0],
                        [51, 36, 4, 0],
                        [56, 44, 4, 0],
                        [61, 52, 4, 0],
                        [69, 62, 4, 0],
                        [74, 69, 4, 0],
                        [81, 74, 4, 0],
                        [87, 74, 4, 0],
                        [89, 69, 4, 0],
                        [86, 61, 4, 0],
                        [82, 52, 4, 0],
                        [79, 44, 4, 0],
                        [80, 39, 4, 0],
                        [83, 39, 4, 0],
                        [89, 43, 4, 0],
                        [95, 49, 4, 0],
                        [103, 60, 4, 0],
                        [108, 67, 4, 0],
                        [113, 72, 4, 0],
                        [120, 74, 4, 0],
                        [121, 70, 4, 0],
                        [118, 60, 4, 0],
                        [113, 52, 4, 0],
                        [109, 44, 4, 0],
                        [106, 39, 4, 0],
                        [111, 45, 4, 0],
                        [117, 54, 4, 0],
                        [126, 63, 4, 0],
                        [132, 68, 4, 0],
                        [136, 71, 4, 0],
                        [138, 73, 4, 0],
                        [137, 74, 4, 0],
                        [133, 73, 4, 0],
                        [129, 67, 4, 0],
                        [125, 59, 4, 0],
                        [125, 54, 4, 0],
                        [128, 50, 4, 0],
                        [136, 52, 4, 0],
                        [143, 60, 4, 0],
                        [152, 75, 4, 0],
                        [150, 69, 4, 0],
                        [147, 63, 4, 0],
                        [142, 54, 4, 0],
                        [138, 45, 4, 0],
                        [138, 40, 4, 0],
                        [141, 38, 4, 0],
                        [145, 39, 4, 0],
                        [154, 46, 4, 0],
                        [170, 62, 4, 0],
                        [183, 75, 4, 0],
                        [187, 79, 4, 0],
                        [190, 85, 4, 0],
                        [185, 89, 4, 0],
                        [179, 85, 4, 0],
                        [178, 80, 4, 0],
                        [178, 75, 4, 0],
                        [179, 69, 4, 0],
                        [179, 60, 4, 0],
                        [179, 53, 4, 0],
                        [173, 43, 4, 0],
                        [166, 38, 4, 0],
                        [158, 39, 4, 0],
                        [156, 46, 4, 0],
                        [156, 53, 4, 0],
                        [162, 58, 4, 0],
                        [181, 69, 4, 0],
                        [197, 76, 4, 0],
                        [211, 86, 4, 0],
                        [202, 74, 4, 0],
                        [196, 63, 4, 0],
                        [190, 52, 4, 0],
                        [188, 45, 4, 0],
                        [189, 40, 4, 0],
                        [194, 39, 4, 0],
                        [200, 41, 4, 0],
                        [206, 49, 4, 0],
                        [214, 60, 4, 0],
                        [224, 71, 4, 0],
                        [229, 74, 4, 0],
                        [233, 72, 4, 0],
                        [230, 64, 4, 0],
                        [226, 57, 4, 0],
                        [221, 48, 4, 0],
                        [216, 40, 4, 0],
                        [222, 47, 4, 0],
                        [228, 57, 4, 0],
                        [233, 64, 4, 0],
                        [241, 71, 4, 0],
                        [247, 74, 4, 0],
                        [251, 73, 4, 0],
                        [252, 66, 4, 0],
                        [248, 59, 4, 0],
                        [243, 51, 4, 0],
                        [239, 44, 4, 0],
                        [236, 40, 4, 0],
                        [246, 53, 4, 0],
                        [254, 62, 4, 0],
                        [261, 70, 4, 0],
                        [270, 74, 4, 0],
                        [275, 72, 4, 0],
                        [273, 65, 4, 0],
                        [267, 55, 4, 0],
                        [263, 45, 4, 0],
                        [264, 39, 4, 0],
                        [269, 39, 4, 0],
                        [275, 44, 4, 0],
                        [289, 59, 4, 0],
                        [299, 69, 4, 0],
                        [311, 74, 4, 0],
                        [318, 74, 4, 0],
                        [319, 70, 4, 0],
                        [316, 74, 4, 0],
                        [307, 72, 4, 0],
                        [297, 62, 4, 0],
                        [290, 54, 4, 0],
                        [288, 46, 4, 0],
                        [288, 40, 4, 0],
                        [294, 39, 4, 0],
                        [304, 47, 4, 0],
                        [311, 54, 4, 0],
                        [318, 65, 4, 0],
                        [319, 69, 4, 0],
                        [323, 74, 4, 0],
                        [322, 70, 4, 0],
                        [318, 62, 4, 0],
                        [312, 50, 4, 0],
                        [310, 44, 4, 0],
                        [310, 40, 4, 0],
                        [315, 39, 4, 0],
                        [321, 41, 4, 0],
                        [326, 46, 4, 0],
                        [339, 58, 4, 0],
                        [350, 70, 4, 0],
                        [359, 79, 4, 0],
                        [364, 86, 4, 0],
                        [362, 89, 4, 0],
                        [356, 89, 4, 0],
                        [351, 88, 4, 0],
                        [349, 84, 4, 0],
                        [348, 79, 4, 0],
                        [351, 72, 4, 0],
                        [352, 64, 4, 0],
                        [352, 54, 4, 0],
                        [351, 45, 4, 0],
                        [347, 40, 4, 0],
                        [341, 39, 4, 0],
                        [330, 39, 4, 0],
                        [327, 44, 4, 0],
                        [326, 51, 4, 0],
                        [329, 55, 4, 0],
                        [161, 87, 0, 1],
                        [161, 87, 4, 1],
                        [193, 75, 0, 1],
                        [200, 75, 4, 0],
                        [206, 75, 4, 0],
                        [214, 75, 4, 0],
                        [217, 74, 4, 1]
                    ],
                    [
                        [-24, 307, 0, 1],
                        [-39, 300, 4, 1],
                        [-36, 335, 4, 1],
                        [-55, 357, 4, 1],
                        [-26, 358, 4, 1],
                        [-10, 388, 4, 1],
                        [3, 358, 4, 1],
                        [37, 357, 4, 1],
                        [12, 333, 4, 1],
                        [18, 302, 4, 1],
                        [-8, 317, 4, 1],
                        [-23, 308, 4, 1],
                        [-59, 235, 4, 0],
                        [-84, 203, 4, 0],
                        [-105, 177, 4, 0],
                        [-124, 155, 4, 0],
                        [-137, 143, 4, 0],
                        [-148, 130, 4, 0],
                        [-150, 120, 4, 0],
                        [-148, 116, 4, 0],
                        [-141, 116, 4, 0],
                        [-134, 120, 4, 0],
                        [-124, 126, 4, 0],
                        [-121, 129, 4, 0],
                        [-125, 122, 4, 0],
                        [-127, 114, 4, 0],
                        [-126, 110, 4, 0],
                        [-119, 110, 4, 0],
                        [-108, 113, 4, 0],
                        [-97, 117, 4, 0],
                        [-89, 123, 4, 0],
                        [-88, 117, 4, 0],
                        [-82, 114, 4, 0],
                        [-76, 113, 4, 1],
                        [-115, 110, 0, 1],
                        [-122, 90, 4, 0],
                        [-139, 57, 4, 0],
                        [-165, 15, 4, 0],
                        [-185, -6, 4, 0],
                        [-199, -19, 4, 0],
                        [-201, -22, 4, 0],
                        [-197, -22, 4, 0],
                        [-187, -20, 4, 0],
                        [-179, -17, 4, 0],
                        [-189, -26, 4, 0],
                        [-197, -41, 4, 0],
                        [-207, -56, 4, 0],
                        [-209, -58, 4, 0],
                        [-199, -56, 4, 0],
                        [-185, -51, 4, 0],
                        [-171, -41, 4, 0],
                        [-166, -37, 4, 0],
                        [-171, -47, 4, 0],
                        [-172, -57, 4, 0],
                        [-169, -61, 4, 0],
                        [-162, -59, 4, 0],
                        [-155, -54, 4, 0],
                        [-145, -45, 4, 0],
                        [-141, -39, 4, 0],
                        [-144, -48, 4, 0],
                        [-145, -58, 4, 0],
                        [-145, -62, 4, 0],
                        [-139, -62, 4, 0],
                        [-131, -59, 4, 0],
                        [-121, -50, 4, 1],
                        [-172, -47, 0, 1],
                        [-194, -78, 4, 0],
                        [-240, -145, 4, 0],
                        [-268, -180, 4, 0],
                        [-284, -196, 4, 0],
                        [-276, -196, 4, 0],
                        [-262, -190, 4, 0],
                        [-257, -189, 4, 0],
                        [-257, -195, 4, 0],
                        [-276, -212, 4, 0],
                        [-290, -231, 4, 0],
                        [-290, -235, 4, 0],
                        [-277, -233, 4, 0],
                        [-265, -230, 4, 0],
                        [-268, -233, 4, 0],
                        [-275, -239, 4, 0],
                        [-281, -249, 4, 0],
                        [-279, -257, 4, 0],
                        [-272, -261, 4, 0],
                        [-255, -261, 4, 0],
                        [-236, -258, 4, 0],
                        [-219, -252, 4, 0],
                        [-203, -246, 4, 0],
                        [-199, -243, 4, 0],
                        [-203, -249, 4, 0],
                        [-205, -259, 4, 0],
                        [-202, -269, 4, 0],
                        [-195, -274, 4, 0],
                        [-185, -276, 4, 0],
                        [-172, -273, 4, 0],
                        [-162, -269, 4, 0],
                        [-155, -266, 4, 0],
                        [-151, -264, 4, 0],
                        [-151, -270, 4, 0],
                        [-146, -274, 4, 0],
                        [-136, -272, 4, 0],
                        [-112, -264, 4, 0],
                        [-98, -256, 4, 0],
                        [-89, -247, 4, 0],
                        [-90, -255, 4, 0],
                        [-88, -267, 4, 0],
                        [-82, -277, 4, 0],
                        [-69, -281, 4, 0],
                        [-58, -282, 4, 0],
                        [-34, -275, 4, 0],
                        [-17, -265, 4, 0],
                        [-12, -258, 4, 0],
                        [-9, -254, 4, 0],
                        [0, -264, 4, 0],
                        [19, -273, 4, 0],
                        [39, -281, 4, 0],
                        [55, -281, 4, 0],
                        [65, -276, 4, 0],
                        [71, -261, 4, 0],
                        [76, -249, 4, 1],
                        [81, -387, 4, 1],
                        [-65, -389, 0, 1],
                        [-65, -282, 4, 1],
                        [76, -251, 0, 1],
                        [94, -264, 4, 0],
                        [108, -274, 4, 0],
                        [123, -276, 4, 0],
                        [134, -274, 4, 0],
                        [139, -266, 4, 0],
                        [142, -261, 4, 0],
                        [146, -270, 4, 0],
                        [156, -275, 4, 0],
                        [180, -278, 4, 0],
                        [191, -279, 4, 0],
                        [195, -274, 4, 0],
                        [190, -261, 4, 0],
                        [184, -249, 4, 0],
                        [181, -243, 4, 0],
                        [187, -244, 4, 0],
                        [201, -253, 4, 0],
                        [229, -258, 4, 0],
                        [244, -262, 4, 0],
                        [260, -259, 4, 0],
                        [265, -249, 4, 0],
                        [257, -232, 4, 0],
                        [249, -222, 4, 0],
                        [255, -224, 4, 0],
                        [262, -230, 4, 0],
                        [268, -233, 4, 0],
                        [273, -233, 4, 0],
                        [272, -225, 4, 0],
                        [259, -208, 4, 0],
                        [248, -193, 4, 0],
                        [250, -190, 4, 0],
                        [254, -193, 4, 0],
                        [263, -197, 4, 0],
                        [271, -197, 4, 0],
                        [257, -184, 4, 0],
                        [224, -156, 4, 0],
                        [201, -123, 4, 0],
                        [179, -85, 4, 0],
                        [165, -57, 4, 0],
                        [160, -47, 4, 1],
                        [109, -51, 0, 1],
                        [116, -57, 4, 0],
                        [127, -62, 4, 0],
                        [132, -62, 4, 0],
                        [135, -60, 4, 0],
                        [134, -57, 4, 0],
                        [133, -51, 4, 0],
                        [132, -45, 4, 0],
                        [132, -41, 4, 0],
                        [136, -47, 4, 0],
                        [140, -52, 4, 0],
                        [143, -56, 4, 0],
                        [152, -61, 4, 0],
                        [154, -61, 4, 0],
                        [159, -60, 4, 0],
                        [158, -53, 4, 0],
                        [158, -50, 4, 0],
                        [157, -45, 4, 0],
                        [156, -39, 4, 0],
                        [155, -37, 4, 0],
                        [163, -45, 4, 0],
                        [168, -51, 4, 0],
                        [178, -55, 4, 0],
                        [187, -57, 4, 0],
                        [199, -58, 4, 0],
                        [205, -58, 4, 0],
                        [193, -50, 4, 0],
                        [188, -47, 4, 0],
                        [179, -36, 4, 0],
                        [176, -29, 4, 0],
                        [174, -23, 4, 0],
                        [175, -23, 4, 0],
                        [179, -23, 4, 0],
                        [188, -24, 4, 0],
                        [194, -25, 4, 0],
                        [190, -21, 4, 0],
                        [180, -17, 4, 0],
                        [149, 21, 4, 0],
                        [125, 53, 4, 0],
                        [107, 90, 4, 0],
                        [101, 105, 4, 0],
                        [95, 108, 4, 0],
                        [88, 110, 4, 0],
                        [80, 112, 4, 0],
                        [71, 115, 4, 0],
                        [69, 121, 4, 0],
                        [73, 117, 4, 0],
                        [79, 112, 4, 0],
                        [93, 110, 4, 0],
                        [102, 108, 4, 0],
                        [110, 108, 4, 0],
                        [117, 107, 4, 0],
                        [114, 111, 4, 0],
                        [110, 115, 4, 0],
                        [108, 119, 4, 0],
                        [107, 123, 4, 0],
                        [116, 120, 4, 0],
                        [135, 116, 4, 0],
                        [139, 116, 4, 0],
                        [137, 122, 4, 0],
                        [127, 130, 4, 0],
                        [54, 215, 4, 0],
                        [18, 277, 4, 0],
                        [3, 311, 4, 1]
                    ],
                    [
                        [-55, -233, 0, 1],
                        [-89, -232, 2, 0],
                        [-148, -222, 2, 0],
                        [-181, -209, 2, 0],
                        [-207, -194, 2, 0],
                        [-217, -182, 2, 0],
                        [-218, -171, 2, 0],
                        [-210, -158, 2, 0],
                        [-195, -136, 2, 0],
                        [-174, -110, 2, 0],
                        [-165, -101, 2, 0],
                        [-162, -97, 2, 0],
                        [-156, -90, 2, 0],
                        [-161, -88, 2, 0],
                        [-167, -85, 2, 0],
                        [-173, -81, 2, 0],
                        [-182, -74, 2, 0],
                        [-186, -64, 2, 0],
                        [-179, -53, 2, 0],
                        [-166, -31, 2, 0],
                        [-149, -9, 2, 0],
                        [-144, -3, 2, 0],
                        [-142, 0, 2, 0],
                        [-137, 6, 2, 0],
                        [-132, 12, 2, 0],
                        [-136, 14, 2, 0],
                        [-139, 16, 2, 0],
                        [-144, 17, 2, 0],
                        [-150, 20, 2, 0],
                        [-160, 29, 2, 0],
                        [-164, 35, 2, 0],
                        [-162, 46, 2, 0],
                        [-129, 103, 2, 0],
                        [-81, 182, 2, 0],
                        [-67, 209, 2, 0],
                        [-60, 221, 2, 1],
                        [-55, 244, 4, 0],
                        [-52, 270, 4, 0],
                        [-65, 283, 4, 0],
                        [-82, 298, 4, 0],
                        [-88, 306, 4, 0],
                        [-76, 308, 4, 0],
                        [-52, 309, 4, 0],
                        [-38, 311, 4, 0],
                        [-29, 328, 4, 0],
                        [-20, 347, 4, 0],
                        [-15, 360, 4, 0],
                        [-5, 341, 4, 0],
                        [4, 323, 4, 0],
                        [8, 313, 4, 0],
                        [17, 311, 4, 0],
                        [30, 309, 4, 0],
                        [49, 307, 4, 0],
                        [58, 306, 4, 0],
                        [45, 293, 4, 0],
                        [34, 280, 4, 0],
                        [23, 269, 4, 0],
                        [24, 257, 4, 0],
                        [29, 236, 4, 0],
                        [33, 218, 4, 0],
                        [14, 229, 4, 0],
                        [-2, 238, 4, 0],
                        [-13, 243, 4, 0],
                        [-28, 235, 4, 0],
                        [-40, 229, 4, 0],
                        [-58, 221, 4, 1],
                        [25, 261, 0, 1],
                        [90, 141, 2, 0],
                        [125, 83, 2, 0],
                        [140, 57, 2, 0],
                        [148, 47, 2, 0],
                        [148, 37, 2, 0],
                        [139, 28, 2, 0],
                        [129, 20, 2, 0],
                        [124, 18, 2, 0],
                        [118, 14, 2, 0],
                        [113, 12, 2, 0],
                        [118, 9, 2, 0],
                        [123, 4, 2, 0],
                        [133, -8, 2, 0],
                        [149, -27, 2, 0],
                        [163, -51, 2, 0],
                        [168, -62, 2, 0],
                        [167, -73, 2, 0],
                        [159, -80, 2, 0],
                        [153, -84, 2, 0],
                        [147, -88, 2, 0],
                        [141, -92, 2, 0],
                        [145, -96, 2, 0],
                        [155, -109, 2, 0],
                        [149, -103, 2, 0],
                        [167, -123, 2, 0],
                        [185, -140, 2, 0],
                        [198, -162, 2, 0],
                        [203, -174, 2, 0],
                        [197, -189, 2, 0],
                        [183, -199, 2, 0],
                        [158, -210, 2, 0],
                        [100, -227, 2, 0],
                        [58, -232, 2, 0],
                        [45, -231, 2, 0],
                        [38, -231, 2, 0],
                        [38, -237, 6, 0],
                        [39, -257, 6, 0],
                        [38, -292, 6, 0],
                        [40, -355, 6, 1],
                        [391, -365, 0, 1],
                        [321, -380, 3, 0],
                        [229, -351, 3, 0],
                        [169, -367, 3, 0],
                        [124, -355, 3, 0],
                        [86, -380, 3, 0],
                        [53, -363, 3, 0],
                        [19, -356, 3, 0],
                        [-25, -372, 3, 0],
                        [-69, -360, 3, 0],
                        [-104, -376, 3, 0],
                        [-161, -366, 3, 0],
                        [-221, -355, 3, 0],
                        [-284, -377, 3, 0],
                        [-381, -365, 3, 1],
                        [-55, -366, 0, 1],
                        [-55, -291, 6, 0],
                        [-55, -255, 6, 0],
                        [-55, -234, 6, 1],
                        [-200, -142, 0, 1],
                        [-175, -150, 7, 0],
                        [-132, -155, 7, 0],
                        [-83, -160, 7, 0],
                        [-25, -157, 7, 0],
                        [49, -144, 7, 0],
                        [95, -129, 7, 0],
                        [139, -103, 7, 0],
                        [157, -87, 7, 0],
                        [167, -74, 7, 0],
                        [166, -62, 7, 0],
                        [162, -53, 7, 0],
                        [139, -58, 7, 0],
                        [84, -60, 7, 0],
                        [28, -59, 7, 0],
                        [-26, -49, 7, 0],
                        [-75, -24, 7, 0],
                        [-113, -2, 7, 0],
                        [-129, 12, 7, 0],
                        [-152, 32, 7, 0],
                        [-161, 46, 7, 0],
                        [-152, 48, 7, 0],
                        [-129, 47, 7, 0],
                        [-87, 44, 7, 0],
                        [-4, 52, 7, 0],
                        [48, 66, 7, 0],
                        [85, 84, 7, 0],
                        [102, 106, 7, 0],
                        [102, 115, 7, 0],
                        [103, 124, 7, 0],
                        [91, 120, 7, 0],
                        [72, 112, 7, 0],
                        [34, 103, 7, 0],
                        [-5, 104, 7, 0],
                        [-45, 113, 7, 0],
                        [-77, 128, 7, 0],
                        [-105, 140, 7, 1]
                    ],
                    [
                        [-194, 130, 0, 1],
                        [182, 223, 2, 1],
                        [136, 352, 2, 1],
                        [-236, 239, 2, 1],
                        [-194, 130, 2, 1],
                        [-171, 135, 2, 1],
                        [-163, 115, 1, 0],
                        [-120, 30, 1, 0],
                        [-90, -28, 1, 0],
                        [-74, -51, 1, 0],
                        [-65, -70, 1, 0],
                        [-62, -86, 1, 0],
                        [-67, -98, 1, 0],
                        [-75, -107, 1, 0],
                        [-86, -115, 1, 0],
                        [-103, -119, 1, 0],
                        [-129, -122, 1, 0],
                        [-147, -127, 1, 0],
                        [-170, -135, 1, 0],
                        [-186, -146, 1, 0],
                        [-191, -150, 1, 1],
                        [-206, -164, 7, 0],
                        [-229, -197, 7, 0],
                        [-240, -216, 7, 0],
                        [-244, -241, 7, 0],
                        [-237, -263, 7, 0],
                        [-220, -294, 7, 0],
                        [-201, -312, 7, 0],
                        [-166, -336, 7, 0],
                        [-126, -346, 7, 0],
                        [-95, -346, 7, 1],
                        [-101, -318, 7, 0],
                        [-111, -279, 7, 0],
                        [-125, -235, 7, 0],
                        [-140, -202, 7, 0],
                        [-162, -173, 7, 0],
                        [-181, -156, 7, 0],
                        [-191, -150, 7, 1],
                        [-94, -347, 0, 1],
                        [-75, -348, 1, 0],
                        [-42, -347, 1, 0],
                        [10, -338, 1, 0],
                        [47, -327, 1, 0],
                        [97, -312, 1, 0],
                        [106, -310, 1, 1],
                        [133, -302, 7, 0],
                        [162, -288, 7, 0],
                        [190, -270, 7, 0],
                        [213, -252, 7, 0],
                        [235, -228, 7, 0],
                        [245, -198, 7, 0],
                        [247, -170, 7, 0],
                        [239, -145, 7, 0],
                        [235, -123, 7, 0],
                        [230, -106, 7, 0],
                        [224, -93, 7, 1],
                        [202, -108, 7, 0],
                        [171, -134, 7, 0],
                        [144, -163, 7, 0],
                        [123, -194, 7, 0],
                        [110, -231, 7, 0],
                        [105, -260, 7, 0],
                        [106, -290, 7, 0],
                        [106, -310, 7, 1],
                        [224, -91, 0, 1],
                        [220, -71, 1, 0],
                        [205, -16, 1, 0],
                        [186, 67, 1, 0],
                        [174, 136, 1, 0],
                        [156, 216, 1, 1]
                    ],
                    [
                        [-21, 380, 0, 1],
                        [-18, -14, 5, 1],
                        [-76, -128, 4, 1],
                        [-209, -148, 4, 1],
                        [-114, -237, 4, 1],
                        [-138, -366, 4, 1],
                        [-18, -306, 4, 1],
                        [98, -367, 4, 1],
                        [77, -239, 4, 1],
                        [173, -149, 4, 1],
                        [40, -129, 4, 1],
                        [-18, -14, 4, 1]
                    ],
                    [
                        [-6, 300, 0, 1],
                        [-4, 3, 7, 1],
                        [18, -1, 1, 0],
                        [42, -8, 1, 0],
                        [66, -21, 1, 0],
                        [86, -38, 1, 0],
                        [105, -67, 1, 0],
                        [115, -99, 1, 0],
                        [116, -133, 1, 0],
                        [103, -172, 1, 0],
                        [86, -198, 1, 0],
                        [62, -219, 1, 0],
                        [36, -232, 1, 0],
                        [3, -237, 1, 0],
                        [-27, -235, 1, 0],
                        [-66, -221, 1, 0],
                        [-99, -192, 1, 0],
                        [-118, -149, 1, 0],
                        [-120, -97, 1, 0],
                        [-105, -55, 1, 0],
                        [-75, -21, 1, 0],
                        [-48, -7, 1, 0],
                        [-22, 1, 1, 0],
                        [-4, 3, 1, 1],
                        [-3, -48, 0, 1]
                    ],
                    [
                        [-18, 107, 0, 1],
                        [0, 89, 7, 1],
                        [19, 106, 7, 1],
                        [0, 135, 0, 1],
                        [1, -132, 7, 1],
                        [-18, -105, 0, 1],
                        [0, -87, 7, 1],
                        [19, -105, 7, 1],
                        [63, -87, 0, 1],
                        [63, -61, 7, 1],
                        [89, -61, 7, 1],
                        [94, -91, 0, 1],
                        [-92, 93, 7, 1],
                        [-62, 91, 0, 1],
                        [-62, 64, 7, 1],
                        [-89, 63, 7, 1],
                        [-106, 19, 0, 1],
                        [-89, 1, 7, 1],
                        [-106, -17, 7, 1],
                        [-133, 1, 0, 1],
                        [134, 1, 7, 1],
                        [107, -17, 0, 1],
                        [89, 1, 7, 1],
                        [107, 17, 7, 1],
                        [90, 63, 0, 1],
                        [63, 63, 7, 1],
                        [63, 90, 7, 1],
                        [94, 94, 0, 1],
                        [-92, -92, 7, 1],
                        [-62, -88, 0, 1],
                        [-62, -62, 7, 1],
                        [-89, -62, 7, 1]
                    ],
                    [
                        [-30, 41, 0, 1],
                        [-157, 112, 1, 1],
                        [-198, 260, 1, 1],
                        [-232, 249, 1, 1],
                        [-202, 139, 1, 1],
                        [-308, 199, 1, 1],
                        [-326, 170, 1, 1],
                        [-220, 108, 1, 1],
                        [-333, 76, 1, 1],
                        [-322, 43, 1, 1],
                        [-176, 81, 1, 1],
                        [-47, 10, 1, 1],
                        [-174, -67, 1, 1],
                        [-323, -29, 1, 1],
                        [-331, -61, 1, 1],
                        [-221, -91, 1, 1],
                        [-326, -155, 1, 1],
                        [-308, -185, 1, 1],
                        [-203, -121, 1, 1],
                        [-231, -230, 1, 1],
                        [-197, -242, 1, 1],
                        [-160, -98, 1, 1],
                        [-29, -23, 1, 1],
                        [-29, -170, 1, 1],
                        [-137, -279, 1, 1],
                        [-109, -305, 1, 1],
                        [-30, -222, 1, 1],
                        [-29, -345, 1, 1],
                        [7, -345, 1, 1],
                        [7, -221, 1, 1],
                        [85, -299, 1, 1],
                        [112, -276, 1, 1],
                        [8, -175, 1, 1],
                        [6, -23, 1, 1],
                        [136, -99, 1, 1],
                        [174, -244, 1, 1],
                        [210, -233, 1, 1],
                        [179, -123, 1, 1],
                        [285, -183, 1, 1],
                        [303, -154, 1, 1],
                        [194, -92, 1, 1],
                        [306, -61, 1, 1],
                        [301, -29, 1, 1],
                        [152, -67, 1, 1],
                        [23, 8, 1, 1],
                        [152, 83, 1, 1],
                        [298, 43, 1, 1],
                        [307, 76, 1, 1],
                        [197, 108, 1, 1],
                        [304, 169, 1, 1],
                        [284, 199, 1, 1],
                        [180, 140, 1, 1],
                        [209, 248, 1, 1],
                        [174, 257, 1, 1],
                        [137, 113, 1, 1],
                        [5, 39, 1, 1],
                        [6, 188, 1, 1],
                        [109, 291, 1, 1],
                        [90, 318, 1, 1],
                        [5, 236, 1, 1],
                        [4, 361, 1, 1],
                        [-32, 359, 1, 1],
                        [-29, 239, 1, 1],
                        [-110, 317, 1, 1],
                        [-136, 295, 1, 1],
                        [-29, 189, 1, 1],
                        [-29, 37, 1, 1]
                    ],
                    [
                        [-6, 300, 0, 1],
                        [-4, 3, 7, 1],
                        [18, -1, 1, 0],
                        [42, -8, 1, 0],
                        [66, -21, 1, 0],
                        [86, -38, 1, 0],
                        [105, -67, 1, 0],
                        [115, -99, 1, 0],
                        [116, -133, 1, 0],
                        [103, -172, 1, 0],
                        [86, -198, 1, 0],
                        [62, -219, 1, 0],
                        [36, -232, 1, 0],
                        [3, -237, 1, 0],
                        [-27, -235, 1, 0],
                        [-66, -221, 1, 0],
                        [-99, -192, 1, 0],
                        [-118, -149, 1, 0],
                        [-120, -97, 1, 0],
                        [-105, -55, 1, 0],
                        [-75, -21, 1, 0],
                        [-48, -7, 1, 0],
                        [-22, 1, 1, 0],
                        [-4, 3, 1, 1],
                        [-3, -48, 0, 1],
                        [-3, -188, 4, 1],
                        [-53, -165, 0, 1],
                        [47, -68, 4, 1],
                        [68, -118, 0, 1],
                        [-74, -117, 4, 1],
                        [-54, -68, 0, 1],
                        [48, -168, 4, 1],
                        [29, -168, 0, 1],
                        [29, -149, 4, 1],
                        [48, -149, 4, 1],
                        [54, -130, 0, 1],
                        [42, -118, 4, 1],
                        [55, -106, 4, 1],
                        [46, -86, 0, 1],
                        [29, -86, 4, 1],
                        [29, -70, 4, 1],
                        [10, -61, 0, 1],
                        [-3, -73, 4, 1],
                        [-15, -61, 4, 1],
                        [-34, -68, 0, 1],
                        [-35, -86, 4, 1],
                        [-53, -87, 4, 1],
                        [-59, -103, 0, 1],
                        [-49, -117, 4, 1],
                        [-59, -131, 4, 1],
                        [-52, -150, 0, 1],
                        [-37, -149, 4, 1],
                        [-35, -168, 4, 1],
                        [-15, -175, 0, 1],
                        [-3, -162, 4, 1],
                        [10, -176, 4, 1]
                    ],
                    [
                        [-21, 380, 0, 1],
                        [-18, -14, 5, 1],
                        [-76, -128, 4, 1],
                        [-209, -148, 4, 1],
                        [-114, -237, 4, 1],
                        [-138, -366, 4, 1],
                        [-18, -306, 4, 1],
                        [98, -367, 4, 1],
                        [77, -239, 4, 1],
                        [173, -149, 4, 1],
                        [40, -129, 4, 1],
                        [-18, -14, 4, 1]
                    ],
                    [
                        [106, 187, 0, 1],
                        [114, 208, 7, 0],
                        [126, 220, 7, 0],
                        [145, 228, 7, 0],
                        [167, 225, 7, 0],
                        [185, 215, 7, 0],
                        [196, 196, 7, 0],
                        [193, 172, 7, 0],
                        [182, 157, 7, 0],
                        [165, 151, 7, 0],
                        [144, 151, 7, 0],
                        [122, 159, 7, 0],
                        [109, 170, 7, 0],
                        [107, 187, 7, 0],
                        [97, 193, 1, 0],
                        [64, 197, 1, 0],
                        [20, 197, 1, 0],
                        [-31, 185, 1, 0],
                        [-68, 163, 1, 0],
                        [-106, 134, 1, 0],
                        [-133, 103, 1, 0],
                        [-159, 53, 1, 0],
                        [-175, 12, 1, 0],
                        [-188, -60, 1, 0],
                        [-189, -104, 1, 0],
                        [-189, -132, 1, 0],
                        [-189, -145, 1, 0],
                        [-188, -148, 1, 0],
                        [-184, -151, 1, 0],
                        [-179, -152, 1, 0],
                        [-166, -155, 1, 0],
                        [-131, -160, 1, 0],
                        [-93, -166, 1, 0],
                        [-39, -165, 1, 0],
                        [57, -149, 1, 0],
                        [102, -132, 1, 0],
                        [137, -114, 1, 0],
                        [157, -101, 1, 0],
                        [166, -95, 1, 0],
                        [171, -92, 1, 0],
                        [166, -83, 1, 0],
                        [157, -69, 1, 0],
                        [130, -28, 1, 0],
                        [105, 17, 1, 0],
                        [85, 68, 1, 0],
                        [81, 86, 1, 0],
                        [80, 113, 1, 0],
                        [81, 127, 1, 0],
                        [90, 137, 1, 0],
                        [102, 152, 1, 0],
                        [108, 158, 1, 0],
                        [115, 164, 1, 1],
                        [171, -91, 0, 1],
                        [176, -86, 7, 0],
                        [181, -83, 7, 0],
                        [186, -83, 7, 0],
                        [190, -88, 7, 0],
                        [208, -111, 7, 0],
                        [222, -138, 7, 0],
                        [228, -152, 7, 0],
                        [229, -167, 7, 0],
                        [225, -177, 7, 0],
                        [203, -201, 7, 0],
                        [181, -215, 7, 0],
                        [137, -238, 7, 0],
                        [64, -269, 7, 0],
                        [3, -277, 7, 0],
                        [-71, -278, 7, 0],
                        [-141, -276, 7, 0],
                        [-175, -268, 7, 0],
                        [-202, -257, 7, 0],
                        [-211, -246, 7, 0],
                        [-217, -231, 7, 0],
                        [-219, -200, 7, 0],
                        [-217, -176, 7, 0],
                        [-214, -160, 7, 0],
                        [-211, -151, 7, 0],
                        [-206, -144, 7, 0],
                        [-203, -142, 7, 0],
                        [-199, -144, 7, 0],
                        [-188, -147, 7, 1]
                    ],
                    [
                        [0, 130, 0, 1],
                        [0, 130, 4, 0],
                        [0, 130, 4, 0],
                        [0, 130, 4, 0],
                        [26, 158, 4, 0],
                        [47, 170, 4, 0],
                        [77, 175, 4, 0],
                        [98, 170, 4, 0],
                        [115, 159, 4, 0],
                        [127, 143, 4, 0],
                        [133, 125, 4, 0],
                        [134, 88, 4, 1],
                        [130, 139, 0, 1],
                        [144, 158, 4, 0],
                        [154, 180, 4, 0],
                        [157, 206, 4, 0],
                        [152, 225, 4, 0],
                        [133, 250, 4, 0],
                        [99, 258, 4, 0],
                        [86, 256, 4, 0],
                        [34, 214, 4, 0],
                        [5, 150, 4, 0],
                        [-1, 128, 4, 0],
                        [-1, 128, 4, 0],
                        [-1, 128, 4, 0],
                        [-1, 128, 4, 0],
                        [-1, 128, 4, 0],
                        [-24, 164, 4, 0],
                        [-50, 193, 4, 0],
                        [-70, 201, 4, 0],
                        [-90, 203, 4, 0],
                        [-139, 178, 4, 0],
                        [-154, 142, 4, 0],
                        [-141, 99, 4, 0],
                        [-119, 80, 4, 0],
                        [-92, 68, 4, 0],
                        [-47, 62, 4, 0],
                        [-47, 62, 4, 0],
                        [-47, 62, 4, 0],
                        [-47, 62, 4, 0],
                        [-47, 62, 4, 0],
                        [-85, 60, 4, 0],
                        [-110, 56, 4, 0],
                        [-133, 42, 4, 0],
                        [-148, 15, 4, 0],
                        [-154, -27, 4, 0],
                        [-159, -75, 4, 0],
                        [-165, -94, 4, 0],
                        [-172, -103, 4, 0],
                        [-204, -133, 4, 0],
                        [-226, -152, 4, 0],
                        [-246, -174, 4, 0],
                        [-252, -190, 4, 0],
                        [-252, -190, 4, 0],
                        [-252, -190, 4, 0],
                        [-248, -200, 4, 0],
                        [-248, -200, 4, 0],
                        [-248, -200, 4, 0],
                        [-226, -220, 4, 0],
                        [-160, -242, 4, 0],
                        [-136, -246, 4, 0],
                        [-72, -251, 4, 0],
                        [-38, -250, 4, 0],
                        [-20, -247, 4, 0],
                        [-10, -245, 4, 0],
                        [9, -238, 4, 0],
                        [9, -238, 4, 0],
                        [9, -238, 4, 0],
                        [9, -238, 4, 0],
                        [9, -238, 4, 1],
                        [-245, -189, 0, 1],
                        [-233, -187, 4, 0],
                        [-183, -187, 4, 0],
                        [-140, -191, 4, 0],
                        [-114, -197, 4, 0],
                        [-63, -221, 4, 0],
                        [-30, -234, 4, 0],
                        [-20, -236, 4, 0],
                        [18, -238, 4, 0],
                        [64, -237, 4, 0],
                        [94, -234, 4, 0],
                        [120, -230, 4, 0],
                        [152, -221, 4, 0],
                        [198, -201, 4, 0],
                        [221, -187, 4, 0],
                        [234, -177, 4, 0],
                        [234, -177, 4, 0],
                        [234, -177, 4, 0],
                        [234, -177, 4, 0],
                        [234, -177, 4, 0],
                        [226, -164, 4, 0],
                        [197, -112, 4, 0],
                        [175, -49, 4, 0],
                        [148, 49, 4, 0],
                        [142, 68, 4, 0],
                        [133, 93, 4, 0],
                        [133, 93, 4, 0],
                        [133, 93, 4, 0],
                        [120, 108, 4, 0],
                        [110, 116, 4, 0],
                        [70, 133, 4, 0],
                        [34, 135, 4, 0],
                        [17, 134, 4, 0],
                        [0, 129, 4, 0],
                        [-4, 127, 4, 0],
                        [-15, 118, 4, 0],
                        [-29, 103, 4, 0],
                        [-39, 87, 4, 0],
                        [-44, 77, 4, 0],
                        [-49, 65, 4, 0],
                        [-48, 55, 4, 0],
                        [-50, -19, 4, 0],
                        [-56, -160, 4, 0],
                        [-58, -224, 4, 0],
                        [-58, -224, 4, 0],
                        [-58, -224, 4, 0],
                        [-58, -224, 4, 0],
                        [-58, -224, 4, 0],
                        [-10, -200, 4, 0],
                        [69, -177, 4, 0],
                        [111, -169, 4, 0],
                        [171, -167, 4, 0],
                        [217, -171, 4, 0],
                        [234, -176, 4, 0],
                        [234, -176, 4, 0],
                        [234, -176, 4, 0],
                        [188, -91, 0, 1],
                        [165, -79, 4, 0],
                        [151, -73, 4, 0],
                        [131, -68, 4, 0],
                        [100, -64, 4, 0],
                        [68, -65, 4, 0],
                        [18, -71, 4, 0],
                        [-17, -82, 4, 0],
                        [-45, -98, 4, 0],
                        [-53, -104, 4, 0],
                        [-53, -104, 4, 0],
                        [-53, -104, 4, 0],
                        [-86, -92, 4, 0],
                        [-107, -88, 4, 0],
                        [-110, -88, 4, 0],
                        [-133, -88, 4, 0],
                        [-146, -90, 4, 0],
                        [-165, -93, 4, 1],
                        [-211, -195, 0, 1],
                        [-204, -206, 7, 0],
                        [-190, -213, 7, 0],
                        [-169, -215, 7, 0],
                        [-153, -211, 7, 0],
                        [-144, -205, 7, 1],
                        [-10, -204, 0, 1],
                        [-1, -212, 7, 0],
                        [12, -216, 7, 0],
                        [26, -215, 7, 0],
                        [45, -209, 7, 0],
                        [55, -200, 7, 1]
                    ],
                    [
                        [0, 130, 0, 1],
                        [0, 130, 4, 0],
                        [0, 130, 4, 0],
                        [0, 130, 4, 0],
                        [26, 158, 4, 0],
                        [47, 170, 4, 0],
                        [77, 175, 4, 0],
                        [98, 170, 4, 0],
                        [115, 159, 4, 0],
                        [127, 143, 4, 0],
                        [133, 125, 4, 0],
                        [134, 88, 4, 1],
                        [130, 139, 0, 1],
                        [144, 158, 4, 0],
                        [154, 180, 4, 0],
                        [157, 206, 4, 0],
                        [152, 225, 4, 0],
                        [133, 250, 4, 0],
                        [99, 258, 4, 0],
                        [86, 256, 4, 0],
                        [34, 214, 4, 0],
                        [5, 150, 4, 0],
                        [-1, 128, 4, 0],
                        [-1, 128, 4, 0],
                        [-1, 128, 4, 0],
                        [-1, 128, 4, 0],
                        [-1, 128, 4, 0],
                        [-24, 164, 4, 0],
                        [-50, 193, 4, 0],
                        [-70, 201, 4, 0],
                        [-90, 203, 4, 0],
                        [-139, 178, 4, 0],
                        [-154, 142, 4, 0],
                        [-141, 99, 4, 0],
                        [-119, 80, 4, 0],
                        [-92, 68, 4, 0],
                        [-47, 62, 4, 0],
                        [-47, 62, 4, 0],
                        [-47, 62, 4, 0],
                        [-47, 62, 4, 0],
                        [-47, 62, 4, 0],
                        [-85, 60, 4, 0],
                        [-110, 56, 4, 0],
                        [-133, 42, 4, 0],
                        [-148, 15, 4, 0],
                        [-154, -27, 4, 0],
                        [-159, -75, 4, 0],
                        [-165, -94, 4, 0],
                        [-172, -103, 4, 0],
                        [-204, -133, 4, 0],
                        [-226, -152, 4, 0],
                        [-246, -174, 4, 0],
                        [-252, -190, 4, 0],
                        [-252, -190, 4, 0],
                        [-252, -190, 4, 0],
                        [-248, -200, 4, 0],
                        [-248, -200, 4, 0],
                        [-248, -200, 4, 0],
                        [-226, -220, 4, 0],
                        [-160, -242, 4, 0],
                        [-136, -246, 4, 0],
                        [-72, -251, 4, 0],
                        [-38, -250, 4, 0],
                        [-20, -247, 4, 0],
                        [-10, -245, 4, 0],
                        [9, -238, 4, 0],
                        [9, -238, 4, 0],
                        [9, -238, 4, 0],
                        [9, -238, 4, 0],
                        [9, -238, 4, 1],
                        [-245, -189, 0, 1],
                        [-233, -187, 4, 0],
                        [-183, -187, 4, 0],
                        [-140, -191, 4, 0],
                        [-114, -197, 4, 0],
                        [-63, -221, 4, 0],
                        [-30, -234, 4, 0],
                        [-20, -236, 4, 0],
                        [18, -238, 4, 0],
                        [64, -237, 4, 0],
                        [94, -234, 4, 0],
                        [120, -230, 4, 0],
                        [152, -221, 4, 0],
                        [198, -201, 4, 0],
                        [221, -187, 4, 0],
                        [234, -177, 4, 0],
                        [234, -177, 4, 0],
                        [234, -177, 4, 0],
                        [234, -177, 4, 0],
                        [234, -177, 4, 0],
                        [226, -164, 4, 0],
                        [197, -112, 4, 0],
                        [175, -49, 4, 0],
                        [148, 49, 4, 0],
                        [142, 68, 4, 0],
                        [133, 93, 4, 0],
                        [133, 93, 4, 0],
                        [133, 93, 4, 0],
                        [120, 108, 4, 0],
                        [110, 116, 4, 0],
                        [70, 133, 4, 0],
                        [34, 135, 4, 0],
                        [17, 134, 4, 0],
                        [0, 129, 4, 0],
                        [-4, 127, 4, 0],
                        [-15, 118, 4, 0],
                        [-29, 103, 4, 0],
                        [-39, 87, 4, 0],
                        [-44, 77, 4, 0],
                        [-49, 65, 4, 0],
                        [-48, 55, 4, 0],
                        [-50, -19, 4, 0],
                        [-56, -160, 4, 0],
                        [-58, -224, 4, 0],
                        [-58, -224, 4, 0],
                        [-58, -224, 4, 0],
                        [-58, -224, 4, 0],
                        [-58, -224, 4, 0],
                        [-10, -200, 4, 0],
                        [69, -177, 4, 0],
                        [111, -169, 4, 0],
                        [171, -167, 4, 0],
                        [217, -171, 4, 0],
                        [234, -176, 4, 0],
                        [234, -176, 4, 0],
                        [234, -176, 4, 0],
                        [188, -91, 0, 1],
                        [165, -79, 4, 0],
                        [151, -73, 4, 0],
                        [131, -68, 4, 0],
                        [100, -64, 4, 0],
                        [68, -65, 4, 0],
                        [18, -71, 4, 0],
                        [-17, -82, 4, 0],
                        [-45, -98, 4, 0],
                        [-53, -104, 4, 0],
                        [-53, -104, 4, 0],
                        [-53, -104, 4, 0],
                        [-86, -92, 4, 0],
                        [-107, -88, 4, 0],
                        [-110, -88, 4, 0],
                        [-133, -88, 4, 0],
                        [-146, -90, 4, 0],
                        [-165, -93, 4, 1],
                        [-141, -205, 0, 1],
                        [-134, -216, 7, 0],
                        [-120, -223, 7, 0],
                        [-99, -225, 7, 0],
                        [-83, -221, 7, 0],
                        [-74, -215, 7, 1],
                        [60, -199, 0, 1],
                        [69, -207, 7, 0],
                        [82, -211, 7, 0],
                        [96, -210, 7, 0],
                        [115, -204, 7, 0],
                        [125, -195, 7, 1]
                    ],
                    [
                        [-117, -143, 0, 1],
                        [-143, -168, 7, 0],
                        [-162, -187, 7, 0],
                        [-170, -200, 7, 0],
                        [-176, -212, 7, 0],
                        [-175, -224, 7, 0],
                        [-169, -239, 7, 0],
                        [-157, -259, 7, 0],
                        [-141, -279, 7, 0],
                        [-126, -296, 7, 0],
                        [-119, -301, 7, 0],
                        [-107, -299, 7, 0],
                        [-99, -292, 7, 0],
                        [-93, -281, 7, 0],
                        [-90, -269, 7, 0],
                        [-90, -260, 7, 0],
                        [-98, -255, 7, 0],
                        [-109, -248, 7, 0],
                        [-127, -234, 7, 0],
                        [-134, -219, 7, 0],
                        [-133, -208, 7, 0],
                        [-124, -193, 7, 0],
                        [-106, -169, 7, 1],
                        [-66, -205, 0, 1],
                        [-66, -228, 7, 0],
                        [-68, -252, 7, 0],
                        [-73, -279, 7, 0],
                        [-80, -305, 7, 0],
                        [-91, -334, 7, 0],
                        [-96, -341, 7, 0],
                        [-91, -349, 7, 0],
                        [-81, -354, 7, 0],
                        [-63, -357, 7, 0],
                        [-49, -357, 7, 0],
                        [-43, -353, 7, 0],
                        [-41, -340, 7, 0],
                        [-36, -306, 7, 0],
                        [-34, -260, 7, 0],
                        [-34, -217, 7, 1],
                        [60, -230, 0, 1],
                        [56, -259, 7, 0],
                        [49, -294, 7, 0],
                        [39, -314, 7, 0],
                        [37, -324, 7, 0],
                        [38, -329, 7, 0],
                        [44, -335, 7, 0],
                        [59, -340, 7, 0],
                        [71, -339, 7, 0],
                        [79, -336, 7, 0],
                        [83, -322, 7, 0],
                        [86, -290, 7, 0],
                        [88, -228, 7, 1],
                        [116, -222, 0, 1],
                        [121, -242, 7, 0],
                        [128, -280, 7, 0],
                        [129, -316, 7, 0],
                        [126, -338, 7, 0],
                        [124, -353, 7, 0],
                        [126, -359, 7, 0],
                        [138, -364, 7, 0],
                        [151, -362, 7, 0],
                        [164, -362, 7, 0],
                        [171, -357, 7, 0],
                        [172, -348, 7, 0],
                        [171, -315, 7, 0],
                        [165, -277, 7, 0],
                        [145, -208, 7, 1],
                        [163, -197, 6, 0],
                        [177, -179, 6, 0],
                        [186, -153, 6, 0],
                        [182, -128, 6, 0],
                        [178, -107, 6, 0],
                        [158, -86, 6, 0],
                        [139, -76, 6, 0],
                        [101, -67, 6, 0],
                        [73, -61, 6, 0],
                        [44, -56, 6, 0],
                        [31, -45, 6, 0],
                        [24, -27, 6, 0],
                        [19, -5, 6, 0],
                        [14, 10, 6, 0],
                        [8, 26, 6, 0],
                        [10, 41, 6, 0],
                        [19, 74, 6, 0],
                        [20, 96, 6, 0],
                        [17, 125, 6, 0],
                        [8, 158, 6, 0],
                        [-8, 181, 6, 0],
                        [-37, 193, 6, 0],
                        [-59, 198, 6, 0],
                        [-87, 191, 6, 0],
                        [-108, 181, 6, 0],
                        [-120, 166, 6, 0],
                        [-131, 148, 6, 0],
                        [-140, 127, 6, 0],
                        [-154, 109, 6, 0],
                        [-162, 87, 6, 0],
                        [-167, 66, 6, 0],
                        [-165, 43, 6, 0],
                        [-158, 26, 6, 0],
                        [-143, 10, 6, 0],
                        [-130, -2, 6, 0],
                        [-108, -9, 6, 0],
                        [-78, -14, 6, 0],
                        [-50, -13, 6, 0],
                        [-27, -4, 6, 0],
                        [-8, 10, 6, 0],
                        [6, 28, 6, 1],
                        [4, 43, 5, 0],
                        [-3, 58, 5, 0],
                        [-25, 75, 5, 0],
                        [-43, 83, 5, 1],
                        [-45, 87, 1, 0],
                        [-53, 96, 1, 0],
                        [-62, 101, 1, 0],
                        [-78, 102, 1, 0],
                        [-90, 101, 1, 0],
                        [-101, 93, 1, 0],
                        [-104, 86, 1, 0],
                        [-102, 78, 1, 0],
                        [-96, 71, 1, 0],
                        [-88, 66, 1, 0],
                        [-72, 63, 1, 0],
                        [-60, 64, 1, 0],
                        [-50, 68, 1, 0],
                        [-45, 75, 1, 0],
                        [-43, 83, 1, 1],
                        [-103, 93, 0, 1],
                        [-121, 91, 5, 0],
                        [-140, 85, 5, 0],
                        [-156, 74, 5, 0],
                        [-167, 59, 5, 1],
                        [-106, 143, 0, 0],
                        [-112, 136, 3, 0],
                        [-113, 126, 3, 0],
                        [-112, 115, 3, 0],
                        [-107, 110, 3, 0],
                        [-99, 110, 3, 0],
                        [-92, 115, 3, 0],
                        [-86, 125, 3, 0],
                        [-86, 136, 3, 0],
                        [-89, 142, 3, 0],
                        [-96, 144, 3, 0],
                        [-106, 143, 3, 1],
                        [-32, 144, 0, 1],
                        [-38, 137, 3, 0],
                        [-41, 127, 3, 0],
                        [-41, 115, 3, 0],
                        [-35, 106, 3, 0],
                        [-26, 102, 3, 0],
                        [-17, 101, 3, 0],
                        [-11, 109, 3, 0],
                        [-10, 126, 3, 0],
                        [-15, 137, 3, 0],
                        [-23, 142, 3, 0],
                        [-32, 144, 3, 1],
                        [-9, 182, 0, 1],
                        [11, 188, 4, 0],
                        [47, 200, 4, 0],
                        [96, 227, 4, 0],
                        [122, 252, 4, 0],
                        [133, 293, 4, 0],
                        [135, 325, 4, 0],
                        [134, 339, 4, 0],
                        [128, 344, 4, 0],
                        [118, 342, 4, 0],
                        [114, 336, 4, 0],
                        [111, 325, 4, 0],
                        [111, 303, 4, 0],
                        [108, 286, 4, 0],
                        [105, 267, 4, 0],
                        [94, 258, 4, 0],
                        [86, 255, 4, 0],
                        [81, 260, 4, 0],
                        [85, 273, 4, 0],
                        [85, 289, 4, 0],
                        [86, 303, 4, 0],
                        [81, 315, 4, 0],
                        [67, 316, 4, 0],
                        [60, 310, 4, 0],
                        [57, 300, 4, 0],
                        [57, 283, 4, 0],
                        [58, 265, 4, 0],
                        [56, 250, 4, 0],
                        [54, 244, 4, 0],
                        [49, 239, 4, 0],
                        [38, 238, 4, 0],
                        [30, 238, 4, 0],
                        [29, 246, 4, 0],
                        [33, 259, 4, 0],
                        [30, 278, 4, 0],
                        [27, 286, 4, 0],
                        [23, 291, 4, 0],
                        [11, 293, 4, 0],
                        [6, 288, 4, 0],
                        [4, 276, 4, 0],
                        [5, 249, 4, 0],
                        [0, 234, 4, 0],
                        [-4, 221, 4, 0],
                        [-9, 211, 4, 0],
                        [-15, 205, 4, 0],
                        [-22, 200, 4, 0],
                        [-33, 197, 4, 0],
                        [-43, 196, 4, 0],
                        [-68, 199, 4, 0],
                        [-83, 200, 4, 0],
                        [-93, 212, 4, 0],
                        [-96, 227, 4, 0],
                        [-98, 247, 4, 0],
                        [-94, 270, 4, 0],
                        [-92, 290, 4, 0],
                        [-95, 300, 4, 0],
                        [-106, 301, 4, 0],
                        [-115, 300, 4, 0],
                        [-118, 288, 4, 0],
                        [-120, 265, 4, 0],
                        [-121, 252, 4, 0],
                        [-122, 239, 4, 0],
                        [-125, 239, 4, 0],
                        [-130, 241, 4, 0],
                        [-139, 248, 4, 0],
                        [-142, 261, 4, 0],
                        [-140, 287, 4, 0],
                        [-136, 317, 4, 0],
                        [-136, 333, 4, 0],
                        [-149, 334, 4, 0],
                        [-160, 333, 4, 0],
                        [-164, 320, 4, 0],
                        [-165, 304, 4, 0],
                        [-169, 285, 4, 0],
                        [-169, 272, 4, 0],
                        [-174, 271, 4, 0],
                        [-180, 276, 4, 0],
                        [-191, 285, 4, 0],
                        [-191, 314, 4, 0],
                        [-191, 338, 4, 0],
                        [-191, 346, 4, 0],
                        [-200, 357, 4, 0],
                        [-214, 357, 4, 0],
                        [-217, 348, 4, 0],
                        [-218, 332, 4, 0],
                        [-218, 313, 4, 0],
                        [-217, 292, 4, 0],
                        [-209, 264, 4, 0],
                        [-199, 245, 4, 0],
                        [-180, 229, 4, 0],
                        [-152, 211, 4, 0],
                        [-126, 196, 4, 0],
                        [-101, 186, 4, 1],
                        [-117, 170, 0, 1],
                        [-128, 180, 6, 0],
                        [-139, 191, 6, 0],
                        [-148, 194, 6, 0],
                        [-170, 195, 6, 0],
                        [-190, 195, 6, 0],
                        [-206, 197, 6, 0],
                        [-212, 197, 6, 0],
                        [-210, 189, 6, 0],
                        [-202, 174, 6, 0],
                        [-189, 156, 6, 0],
                        [-182, 151, 6, 0],
                        [-170, 147, 6, 0],
                        [-156, 148, 6, 0],
                        [-143, 151, 6, 0],
                        [-128, 154, 6, 1],
                        [6, 162, 0, 1],
                        [15, 167, 6, 0],
                        [23, 173, 6, 0],
                        [34, 177, 6, 0],
                        [49, 177, 6, 0],
                        [67, 177, 6, 0],
                        [80, 176, 6, 0],
                        [94, 175, 6, 0],
                        [99, 173, 6, 0],
                        [98, 168, 6, 0],
                        [94, 158, 6, 0],
                        [86, 149, 6, 0],
                        [76, 141, 6, 0],
                        [64, 135, 6, 0],
                        [50, 132, 6, 0],
                        [33, 134, 6, 0],
                        [21, 137, 6, 0],
                        [12, 141, 6, 1],
                        [22, -23, 0, 0],
                        [22, -42, 7, 0],
                        [22, -67, 7, 0],
                        [21, -86, 7, 0],
                        [16, -96, 7, 0],
                        [11, -94, 7, 0],
                        [8, -88, 7, 0],
                        [4, -85, 7, 0],
                        [2, -87, 7, 0],
                        [2, -95, 7, 0],
                        [0, -109, 7, 0],
                        [-3, -114, 7, 0],
                        [-10, -122, 7, 0],
                        [-15, -127, 7, 0],
                        [-17, -128, 7, 0],
                        [-19, -121, 7, 0],
                        [-21, -117, 7, 0],
                        [-24, -116, 7, 0],
                        [-26, -122, 7, 0],
                        [-29, -136, 7, 0],
                        [-36, -142, 7, 0],
                        [-39, -149, 7, 0],
                        [-41, -151, 7, 0],
                        [-44, -151, 7, 0],
                        [-47, -148, 7, 0],
                        [-50, -142, 7, 0],
                        [-55, -145, 7, 0],
                        [-57, -151, 7, 0],
                        [-59, -160, 7, 0],
                        [-60, -166, 7, 0],
                        [-68, -165, 7, 0],
                        [-79, -156, 7, 0],
                        [-90, -147, 7, 0],
                        [-95, -136, 7, 0],
                        [-100, -123, 7, 0],
                        [-105, -121, 7, 0],
                        [-106, -127, 7, 0],
                        [-106, -135, 7, 0],
                        [-107, -140, 7, 0],
                        [-115, -133, 7, 0],
                        [-120, -106, 7, 0],
                        [-122, -94, 7, 0],
                        [-124, -89, 7, 0],
                        [-129, -97, 7, 0],
                        [-129, -103, 7, 0],
                        [-131, -106, 7, 0],
                        [-136, -99, 7, 0],
                        [-136, -85, 7, 0],
                        [-137, -72, 7, 0],
                        [-138, -58, 7, 0],
                        [-138, -54, 7, 0],
                        [-143, -52, 7, 0],
                        [-145, -57, 7, 0],
                        [-148, -57, 7, 0],
                        [-150, -52, 7, 0],
                        [-148, -30, 7, 0],
                        [-142, -10, 7, 0],
                        [-134, 2, 7, 1],
                        [44, -119, 0, 1],
                        [35, -118, 4, 0],
                        [28, -128, 4, 0],
                        [30, -143, 4, 0],
                        [40, -147, 4, 0],
                        [51, -142, 4, 0],
                        [57, -133, 4, 0],
                        [53, -123, 4, 0],
                        [43, -118, 4, 1],
                        [86, -81, 0, 1],
                        [96, -78, 4, 0],
                        [110, -82, 4, 0],
                        [121, -87, 4, 0],
                        [125, -100, 4, 0],
                        [121, -109, 4, 0],
                        [110, -114, 4, 0],
                        [93, -115, 4, 0],
                        [82, -107, 4, 0],
                        [78, -97, 4, 0],
                        [78, -89, 4, 0],
                        [85, -83, 4, 1],
                        [150, -128, 0, 1],
                        [160, -132, 4, 0],
                        [160, -141, 4, 0],
                        [153, -147, 4, 0],
                        [141, -145, 4, 0],
                        [138, -135, 4, 0],
                        [144, -129, 4, 0],
                        [149, -128, 4, 1],
                        [162, -89, 0, 1],
                        [174, -87, 6, 0],
                        [188, -79, 6, 0],
                        [197, -71, 6, 0],
                        [210, -58, 6, 0],
                        [220, -48, 6, 0],
                        [223, -41, 6, 0],
                        [227, -32, 6, 0],
                        [228, -26, 6, 0],
                        [229, -24, 6, 0],
                        [231, -36, 6, 0],
                        [233, -51, 6, 0],
                        [229, -75, 6, 0],
                        [220, -87, 6, 0],
                        [208, -102, 6, 0],
                        [202, -113, 6, 0],
                        [192, -123, 6, 0],
                        [182, -129, 6, 0],
                        [146, -208, 0, 0],
                        [137, -213, 6, 0],
                        [128, -217, 6, 0],
                        [116, -222, 6, 0],
                        [88, -226, 6, 0],
                        [59, -229, 6, 0],
                        [1, -227, 6, 0],
                        [-36, -215, 6, 0],
                        [-68, -203, 6, 0],
                        [-90, -189, 6, 0],
                        [-102, -176, 6, 0],
                        [-108, -166, 6, 0],
                        [-115, -143, 6, 0],
                        [-116, -132, 6, 1],
                        [-107, 24, 0, 1],
                        [-101, 21, 6, 0],
                        [-86, 22, 6, 0],
                        [-68, 24, 6, 0],
                        [-54, 27, 6, 0],
                        [-49, 26, 6, 0],
                        [-50, 19, 6, 0],
                        [-59, 14, 6, 0],
                        [-65, 10, 6, 0],
                        [-82, 11, 6, 0],
                        [-90, 15, 6, 0],
                        [-94, 19, 6, 0],
                        [-99, 21, 6, 1]
                    ],
                    [
                        [34, 367, 0, 1],
                        [23, -80, 7, 1],
                        [12, -78, 7, 0],
                        [-12, -78, 7, 0],
                        [-38, -82, 7, 0],
                        [-57, -87, 7, 0],
                        [-75, -94, 7, 0],
                        [-91, -103, 7, 0],
                        [-107, -117, 7, 0],
                        [-118, -126, 7, 0],
                        [-129, -141, 7, 0],
                        [-139, -152, 7, 0],
                        [-142, -159, 7, 0],
                        [-133, -167, 7, 0],
                        [-122, -175, 7, 0],
                        [-105, -177, 7, 0],
                        [-87, -176, 7, 0],
                        [-71, -171, 7, 0],
                        [-60, -164, 7, 0],
                        [-52, -156, 7, 0],
                        [-44, -150, 7, 0],
                        [-41, -145, 7, 0],
                        [-37, -146, 7, 0],
                        [-40, -155, 7, 0],
                        [-43, -170, 7, 0],
                        [-43, -187, 7, 0],
                        [-41, -205, 7, 0],
                        [-36, -214, 7, 0],
                        [-29, -222, 7, 0],
                        [-19, -226, 7, 0],
                        [-9, -224, 7, 0],
                        [-3, -220, 7, 0],
                        [5, -213, 7, 0],
                        [12, -202, 7, 0],
                        [19, -191, 7, 0],
                        [23, -181, 7, 0],
                        [24, -174, 7, 0],
                        [25, -171, 7, 0],
                        [27, -176, 7, 0],
                        [28, -188, 7, 0],
                        [31, -202, 7, 0],
                        [38, -216, 7, 0],
                        [47, -224, 7, 0],
                        [57, -227, 7, 0],
                        [67, -225, 7, 0],
                        [73, -219, 7, 0],
                        [78, -207, 7, 0],
                        [79, -193, 7, 0],
                        [79, -183, 7, 0],
                        [77, -170, 7, 0],
                        [75, -164, 7, 0],
                        [83, -173, 7, 0],
                        [95, -191, 7, 0],
                        [108, -197, 7, 0],
                        [124, -199, 7, 0],
                        [132, -197, 7, 0],
                        [132, -190, 7, 0],
                        [127, -174, 7, 0],
                        [113, -147, 7, 0],
                        [101, -131, 7, 0],
                        [85, -113, 7, 0],
                        [69, -101, 7, 0],
                        [53, -92, 7, 0],
                        [25, -80, 7, 1],
                        [132, -192, 0, 1],
                        [135, -203, 2, 0],
                        [135, -223, 2, 0],
                        [134, -250, 2, 0],
                        [123, -288, 2, 0],
                        [109, -311, 2, 0],
                        [86, -334, 2, 0],
                        [58, -355, 2, 0],
                        [18, -370, 2, 0],
                        [-32, -372, 2, 0],
                        [-74, -358, 2, 0],
                        [-110, -330, 2, 0],
                        [-141, -290, 2, 0],
                        [-154, -245, 2, 0],
                        [-155, -196, 2, 0],
                        [-148, -175, 2, 0],
                        [-141, -157, 2, 1],
                        [-103, -220, 0, 1],
                        [-79, -231, 4, 1],
                        [-58, -215, 4, 1],
                        [-55, -245, 4, 1],
                        [-34, -254, 4, 1],
                        [-62, -261, 4, 1],
                        [-66, -288, 4, 1],
                        [-80, -263, 4, 1],
                        [-108, -269, 4, 1],
                        [-91, -248, 4, 1],
                        [-103, -220, 4, 1],
                        [12, -242, 0, 1],
                        [33, -275, 4, 1],
                        [70, -273, 4, 1],
                        [47, -300, 4, 1],
                        [63, -334, 4, 1],
                        [27, -319, 4, 1],
                        [-2, -341, 4, 1],
                        [1, -305, 4, 1],
                        [-29, -284, 4, 1],
                        [9, -277, 4, 1],
                        [13, -242, 4, 1]
                    ],
                    [
                        [-193, 223, 0, 1],
                        [-274, 64, 7, 0],
                        [-279, 56, 7, 0],
                        [-280, 52, 7, 0],
                        [-282, 48, 7, 0],
                        [-277, 43, 7, 0],
                        [-270, 42, 7, 0],
                        [-257, 42, 7, 0],
                        [151, 40, 7, 0],
                        [160, 40, 7, 0],
                        [174, 40, 7, 0],
                        [185, 40, 7, 0],
                        [191, 42, 7, 0],
                        [193, 48, 7, 0],
                        [188, 61, 7, 0],
                        [183, 72, 7, 0],
                        [107, 217, 7, 0],
                        [106, 221, 7, 0],
                        [104, 223, 7, 0],
                        [100, 223, 7, 0],
                        [95, 223, 7, 0],
                        [-193, 223, 7, 1],
                        [-250, 107, 0, 1],
                        [-244, 103, 5, 0],
                        [-238, 97, 5, 0],
                        [-230, 90, 5, 0],
                        [-217, 89, 5, 0],
                        [-205, 93, 5, 0],
                        [-188, 103, 5, 0],
                        [-169, 115, 5, 0],
                        [-157, 120, 5, 0],
                        [-145, 119, 5, 0],
                        [-128, 107, 5, 0],
                        [-115, 96, 5, 0],
                        [-100, 87, 5, 0],
                        [-87, 85, 5, 0],
                        [-76, 88, 5, 0],
                        [-62, 98, 5, 0],
                        [-51, 110, 5, 0],
                        [-40, 118, 5, 0],
                        [-33, 123, 5, 0],
                        [-24, 118, 5, 0],
                        [-16, 111, 5, 0],
                        [-8, 103, 5, 0],
                        [0, 98, 5, 0],
                        [8, 100, 5, 0],
                        [19, 108, 5, 0],
                        [28, 118, 5, 0],
                        [35, 125, 5, 0],
                        [44, 129, 5, 0],
                        [51, 129, 5, 0],
                        [59, 122, 5, 0],
                        [67, 117, 5, 0],
                        [76, 112, 5, 0],
                        [82, 109, 5, 0],
                        [91, 111, 5, 0],
                        [95, 119, 5, 0],
                        [101, 121, 5, 0],
                        [107, 119, 5, 0],
                        [114, 115, 5, 0],
                        [123, 106, 5, 0],
                        [135, 99, 5, 0],
                        [149, 96, 5, 0],
                        [167, 102, 5, 1],
                        [151, 40, 0, 1],
                        [150, -92, 5, 1],
                        [223, -91, 0, 1],
                        [226, -79, 7, 0],
                        [230, -66, 7, 0],
                        [236, -54, 7, 0],
                        [244, -43, 7, 0],
                        [250, -36, 7, 0],
                        [256, -34, 7, 0],
                        [255, -33, 7, 0],
                        [247, -31, 7, 0],
                        [239, -24, 7, 0],
                        [236, -16, 7, 0],
                        [234, -5, 7, 0],
                        [236, 8, 7, 0],
                        [246, 21, 7, 0],
                        [260, 29, 7, 0],
                        [277, 31, 7, 0],
                        [291, 28, 7, 0],
                        [301, 21, 7, 0],
                        [309, 13, 7, 0],
                        [314, -3, 7, 0],
                        [312, -13, 7, 0],
                        [307, -23, 7, 0],
                        [298, -30, 7, 0],
                        [292, -34, 7, 0],
                        [290, -34, 7, 0],
                        [297, -38, 7, 0],
                        [302, -45, 7, 0],
                        [309, -53, 7, 0],
                        [316, -70, 7, 0],
                        [319, -85, 7, 0],
                        [320, -93, 7, 1],
                        [268, -12, 0, 1],
                        [269, -9, 3, 0],
                        [270, -4, 3, 0],
                        [266, -1, 3, 0],
                        [261, -2, 3, 0],
                        [259, -6, 3, 0],
                        [261, -10, 3, 0],
                        [266, -12, 3, 1],
                        [239, -24, 0, 1],
                        [214, -12, 1, 1],
                        [235, 0, 1, 1],
                        [268, 30, 0, 1],
                        [302, 67, 1, 1],
                        [305, 18, 1, 1],
                        [366, -96, 0, 1],
                        [-350, -99, 7, 1],
                        [-236, -96, 0, 1],
                        [-234, 42, 5, 1],
                        [-194, 20, 0, 1],
                        [-184, 20, 1, 0],
                        [-155, 20, 1, 0],
                        [-121, 20, 1, 0],
                        [-94, 19, 1, 0],
                        [-74, 19, 1, 0],
                        [-65, 19, 1, 0],
                        [-61, 14, 1, 0],
                        [-58, 4, 1, 0],
                        [-59, -4, 1, 0],
                        [-65, -6, 1, 0],
                        [-73, -1, 1, 0],
                        [-80, 4, 1, 0],
                        [-86, 6, 1, 0],
                        [-91, 2, 1, 0],
                        [-96, -6, 1, 0],
                        [-102, -9, 1, 0],
                        [-117, -6, 1, 0],
                        [-123, 3, 1, 0],
                        [-129, 5, 1, 0],
                        [-139, 2, 1, 0],
                        [-144, -6, 1, 0],
                        [-152, -9, 1, 0],
                        [-157, -4, 1, 0],
                        [-161, 2, 1, 0],
                        [-168, 6, 1, 0],
                        [-172, 7, 1, 0],
                        [-182, 3, 1, 0],
                        [-189, -4, 1, 0],
                        [-198, -8, 1, 0],
                        [-204, -6, 1, 0],
                        [-202, 3, 1, 0],
                        [-194, 21, 1, 1],
                        [-193, -4, 0, 1],
                        [-192, -48, 3, 1],
                        [-70, -50, 3, 1],
                        [-70, -2, 3, 1],
                        [-7, -95, 0, 1],
                        [-8, 4, 3, 1],
                        [75, 3, 3, 1],
                        [77, -96, 3, 1],
                        [77, -101, 5, 0],
                        [72, -106, 5, 0],
                        [67, -113, 5, 0],
                        [60, -121, 5, 0],
                        [56, -130, 5, 0],
                        [56, -139, 5, 0],
                        [61, -149, 5, 0],
                        [69, -154, 5, 0],
                        [79, -162, 5, 0],
                        [87, -168, 5, 0],
                        [93, -176, 5, 0],
                        [96, -185, 5, 0],
                        [96, -195, 5, 0],
                        [92, -201, 5, 0],
                        [80, -214, 5, 0],
                        [71, -227, 5, 0],
                        [61, -238, 5, 0],
                        [56, -249, 5, 0],
                        [53, -261, 5, 0],
                        [55, -268, 5, 0],
                        [60, -275, 5, 0],
                        [68, -282, 5, 0],
                        [77, -290, 5, 0],
                        [85, -300, 5, 0],
                        [90, -307, 5, 0],
                        [89, -315, 5, 0],
                        [88, -322, 5, 0],
                        [83, -327, 5, 1],
                        [-148, -329, 0, 1],
                        [-136, -321, 5, 0],
                        [-127, -309, 5, 0],
                        [-121, -302, 5, 0],
                        [-114, -298, 5, 0],
                        [-114, -289, 5, 0],
                        [-119, -282, 5, 0],
                        [-123, -273, 5, 0],
                        [-126, -265, 5, 0],
                        [-131, -254, 5, 0],
                        [-131, -245, 5, 0],
                        [-121, -239, 5, 0],
                        [-105, -224, 5, 0],
                        [-87, -211, 5, 0],
                        [-68, -194, 5, 0],
                        [-57, -185, 5, 0],
                        [-53, -175, 5, 0],
                        [-57, -167, 5, 0],
                        [-62, -155, 5, 0],
                        [-66, -140, 5, 0],
                        [-68, -132, 5, 0],
                        [-58, -123, 5, 0],
                        [-47, -111, 5, 0],
                        [-40, -105, 5, 0],
                        [-33, -97, 5, 1],
                        [61, -43, 0, 1],
                        [58, -45, 6, 0],
                        [57, -49, 6, 0],
                        [59, -52, 6, 0],
                        [64, -53, 6, 0],
                        [65, -45, 6, 0],
                        [61, -42, 6, 1]
                    ],
                    [
                        [-2, 124, 0, 1],
                        [-37, 42, 4, 1],
                        [-125, 39, 4, 1],
                        [-58, -20, 4, 1],
                        [-82, -104, 4, 1],
                        [-6, -60, 4, 1],
                        [66, -108, 4, 1],
                        [47, -23, 4, 1],
                        [121, 34, 4, 1],
                        [32, 42, 4, 1],
                        [-2, 122, 4, 1],
                        [-3, -3, 4, 1],
                        [-82, -104, 4, 1],
                        [66, -108, 0, 1],
                        [-3, -3, 4, 1],
                        [120, 34, 4, 1],
                        [-3, -4, 0, 1],
                        [-125, 39, 4, 1]
                    ],
                    [
                        [-21, 380, 0, 1],
                        [-18, -14, 5, 1],
                        [-76, -128, 4, 1],
                        [-209, -148, 4, 1],
                        [-114, -237, 4, 1],
                        [-138, -366, 4, 1],
                        [-18, -306, 4, 1],
                        [98, -367, 4, 1],
                        [77, -239, 4, 1],
                        [173, -149, 4, 1],
                        [40, -129, 4, 1],
                        [-18, -14, 4, 1]
                    ],
                    [
                        [-18, 107, 0, 1],
                        [0, 89, 7, 1],
                        [19, 106, 7, 1],
                        [0, 135, 0, 1],
                        [1, -132, 7, 1],
                        [-18, -105, 0, 1],
                        [0, -87, 7, 1],
                        [19, -105, 7, 1],
                        [63, -87, 0, 1],
                        [63, -61, 7, 1],
                        [89, -61, 7, 1],
                        [94, -91, 0, 1],
                        [-92, 93, 7, 1],
                        [-62, 91, 0, 1],
                        [-62, 64, 7, 1],
                        [-89, 63, 7, 1],
                        [-106, 19, 0, 1],
                        [-89, 1, 7, 1],
                        [-106, -17, 7, 1],
                        [-133, 1, 0, 1],
                        [134, 1, 7, 1],
                        [107, -17, 0, 1],
                        [89, 1, 7, 1],
                        [107, 17, 7, 1],
                        [90, 63, 0, 1],
                        [63, 63, 7, 1],
                        [63, 90, 7, 1],
                        [94, 94, 0, 1],
                        [-92, -92, 7, 1],
                        [-62, -88, 0, 1],
                        [-62, -62, 7, 1],
                        [-89, -62, 7, 1]
                    ],
                    [
                        [-18, 107, 0, 1],
                        [0, 89, 7, 1],
                        [19, 106, 7, 1],
                        [0, 135, 0, 1],
                        [1, -132, 7, 1],
                        [-18, -105, 0, 1],
                        [0, -87, 7, 1],
                        [19, -105, 7, 1],
                        [63, -87, 0, 1],
                        [63, -61, 7, 1],
                        [89, -61, 7, 1],
                        [94, -91, 0, 1],
                        [-92, 93, 7, 1],
                        [-62, 91, 0, 1],
                        [-62, 64, 7, 1],
                        [-89, 63, 7, 1],
                        [-106, 19, 0, 1],
                        [-89, 1, 7, 1],
                        [-106, -17, 7, 1],
                        [-133, 1, 0, 1],
                        [134, 1, 7, 1],
                        [107, -17, 0, 1],
                        [89, 1, 7, 1],
                        [107, 17, 7, 1],
                        [90, 63, 0, 1],
                        [63, 63, 7, 1],
                        [63, 90, 7, 1],
                        [94, 94, 0, 1],
                        [-92, -92, 7, 1],
                        [-62, -88, 0, 1],
                        [-62, -62, 7, 1],
                        [-89, -62, 7, 1]
                    ],
                    [
                        [-23, 137, 0, 1],
                        [-23, 137, 0, 1],
                        [-19, 145, 7, 0],
                        [-12, 144, 7, 0],
                        [5, 150, 0, 1],
                        [5, 150, 0, 1],
                        [8, 154, 7, 0],
                        [12, 152, 7, 0],
                        [18, 149, 7, 1],
                        [17, 143, 0, 1],
                        [12, 145, 7, 0],
                        [8, 140, 7, 1],
                        [12, 131, 0, 1],
                        [17, 126, 7, 1],
                        [14, 122, 7, 1],
                        [10, 124, 7, 1],
                        [1, 120, 0, 1],
                        [-5, 118, 7, 0],
                        [-4, 124, 7, 1],
                        [-6, 131, 0, 1],
                        [-14, 132, 7, 0],
                        [-18, 128, 7, 1],
                        [-10, 136, 0, 1],
                        [-16, 137, 7, 0],
                        [-20, 131, 7, 1],
                        [-19, 108, 0, 1],
                        [-8, 112, 7, 0],
                        [-1, 116, 7, 0],
                        [7, 116, 7, 1],
                        [12, 120, 7, 0],
                        [25, 119, 7, 0],
                        [36, 118, 7, 1],
                        [19, 114, 7, 0],
                        [7, 116, 7, 1],
                        [-4, 108, 7, 1],
                        [-5, 107, 7, 0],
                        [-19, 108, 1, 1],
                        [-4, 108, 7, 1],
                        [8, 106, 7, 0],
                        [19, 112, 7, 1],
                        [46, 110, 0, 1],
                        [55, 100, 7, 0],
                        [55, 100, 7, 0],
                        [53, 82, 7, 0],
                        [53, 82, 7, 0],
                        [48, 77, 7, 0],
                        [42, 71, 7, 0],
                        [22, 62, 7, 0],
                        [8, 67, 7, 1],
                        [2, 60, 7, 0],
                        [-14, 62, 7, 0],
                        [-24, 73, 7, 1],
                        [-14, 74, 7, 0],
                        [-11, 82, 7, 1],
                        [-23, 82, 7, 1],
                        [-20, 92, 7, 0],
                        [-24, 97, 7, 0],
                        [-24, 97, 7, 1],
                        [-36, 95, 7, 0],
                        [-36, 95, 7, 0],
                        [-36, 95, 7, 0],
                        [-46, 103, 7, 0],
                        [-42, 112, 7, 0],
                        [-47, 128, 7, 1],
                        [-53, 126, 7, 1],
                        [-47, 149, 7, 0],
                        [-31, 163, 7, 0],
                        [-19, 168, 7, 1],
                        [-34, 168, 7, 1],
                        [-8, 180, 7, 0],
                        [10, 182, 7, 0],
                        [28, 172, 7, 0],
                        [32, 162, 7, 0],
                        [14, 164, 7, 0],
                        [-22, 148, 7, 0],
                        [-29, 139, 7, 0],
                        [-28, 120, 7, 0],
                        [-18, 113, 7, 0],
                        [-28, 120, 7, 0],
                        [-42, 112, 7, 0],
                        [32, 162, 0, 0],
                        [47, 150, 7, 0],
                        [43, 145, 7, 0],
                        [53, 139, 7, 0],
                        [53, 132, 7, 0],
                        [41, 124, 7, 0],
                        [56, 114, 7, 0],
                        [60, 119, 7, 0],
                        [62, 118, 7, 0],
                        [60, 109, 7, 0],
                        [54, 108, 7, 0],
                        [46, 110, 7, 0],
                        [61, 109, 0, 0],
                        [76, 101, 1, 0],
                        [86, 88, 1, 0],
                        [106, 100, 1, 0],
                        [103, 108, 7, 0],
                        [112, 118, 7, 0],
                        [120, 116, 7, 0],
                        [127, 127, 7, 0],
                        [119, 139, 7, 0],
                        [119, 139, 7, 0],
                        [119, 139, 7, 0],
                        [124, 146, 7, 0],
                        [124, 146, 7, 0],
                        [124, 146, 7, 0],
                        [134, 140, 7, 0],
                        [139, 139, 7, 0],
                        [138, 122, 7, 0],
                        [138, 122, 7, 0],
                        [138, 122, 7, 0],
                        [146, 134, 7, 0],
                        [146, 134, 7, 0],
                        [146, 134, 7, 0],
                        [156, 156, 7, 0],
                        [156, 156, 7, 0],
                        [162, 156, 7, 0],
                        [162, 156, 7, 0],
                        [163, 148, 7, 0],
                        [163, 148, 7, 0],
                        [157, 134, 7, 0],
                        [157, 134, 7, 0],
                        [157, 134, 7, 0],
                        [157, 134, 7, 0],
                        [157, 134, 7, 0],
                        [157, 134, 7, 0],
                        [166, 132, 7, 0],
                        [170, 124, 7, 0],
                        [176, 120, 7, 0],
                        [170, 110, 7, 0],
                        [164, 108, 7, 0],
                        [150, 112, 7, 0],
                        [144, 119, 7, 0],
                        [144, 119, 7, 0],
                        [144, 119, 7, 0],
                        [155, 124, 7, 0],
                        [155, 124, 7, 0],
                        [157, 134, 7, 0],
                        [157, 134, 7, 0],
                        [157, 134, 7, 0],
                        [120, 116, 0, 0],
                        [126, 103, 7, 0],
                        [150, 100, 7, 0],
                        [154, 91, 7, 0],
                        [146, 77, 7, 0],
                        [137, 84, 7, 0],
                        [138, 77, 7, 0],
                        [114, 90, 7, 0],
                        [106, 100, 7, 0],
                        [142, 78, 1, 0],
                        [97, 44, 1, 0],
                        [61, 56, 1, 0],
                        [80, 18, 1, 0],
                        [79, -6, 1, 0],
                        [92, -10, 1, 0],
                        [84, -34, 1, 0],
                        [109, -67, 1, 0],
                        [98, -96, 1, 0],
                        [106, -96, 7, 0],
                        [108, -102, 7, 0],
                        [103, -113, 7, 0],
                        [85, -121, 7, 0],
                        [88, -116, 7, 0],
                        [61, -113, 7, 0],
                        [66, -122, 7, 0],
                        [44, -114, 7, 0],
                        [40, -100, 7, 0],
                        [49, -88, 7, 0],
                        [72, -106, 7, 0],
                        [79, -106, 7, 0],
                        [73, -96, 7, 0],
                        [84, -102, 7, 0],
                        [106, -96, 7, 0],
                        [88, -121, 4, 0],
                        [91, -130, 4, 0],
                        [120, -143, 4, 0],
                        [120, -166, 4, 0],
                        [76, -173, 4, 0],
                        [61, -148, 4, 0],
                        [43, -143, 4, 0],
                        [42, -130, 4, 0],
                        [47, -116, 4, 0],
                        [2, -120, 0, 0],
                        [10, -127, 4, 0],
                        [10, -145, 4, 0],
                        [8, -151, 4, 0],
                        [-5, -154, 4, 0],
                        [-8, -162, 4, 0],
                        [-32, -179, 4, 0],
                        [-59, -179, 4, 0],
                        [-71, -166, 4, 0],
                        [-73, -155, 4, 0],
                        [-60, -137, 4, 0],
                        [-36, -136, 4, 0],
                        [-38, -128, 4, 0],
                        [-53, -126, 7, 0],
                        [-62, -112, 7, 0],
                        [-58, -102, 7, 0],
                        [-48, -110, 7, 0],
                        [-31, -110, 7, 0],
                        [-12, -106, 7, 0],
                        [-4, -97, 7, 0],
                        [-1, -92, 7, 0],
                        [13, -106, 7, 0],
                        [-11, -127, 7, 0],
                        [-31, -125, 7, 0],
                        [-25, -132, 7, 0],
                        [-38, -128, 7, 0],
                        [-56, -101, 7, 0],
                        [-70, -70, 1, 0],
                        [-60, -44, 1, 0],
                        [-5, -97, 0, 0],
                        [-5, -97, 0, 0],
                        [-5, -97, 0, 0],
                        [-10, -80, 1, 0],
                        [-10, -80, 1, 0],
                        [-10, -80, 1, 0],
                        [5, -65, 1, 0],
                        [5, -65, 1, 0],
                        [5, -65, 1, 0],
                        [53, -91, 0, 0],
                        [53, -91, 0, 0],
                        [53, -91, 0, 0],
                        [60, -77, 1, 0],
                        [41, -61, 1, 0],
                        [84, -34, 1, 0],
                        [38, -62, 1, 0],
                        [23, -53, 1, 0],
                        [10, -65, 1, 0],
                        [-40, -58, 1, 0],
                        [-59, -44, 1, 0],
                        [-65, -35, 1, 0],
                        [-55, -25, 1, 0],
                        [-54, -10, 1, 0],
                        [-20, -31, 4, 0],
                        [7, -34, 4, 0],
                        [6, -25, 4, 0],
                        [30, -24, 4, 0],
                        [31, -29, 4, 0],
                        [60, -14, 4, 0],
                        [79, 4, 4, 0],
                        [79, 4, 4, 0],
                        [79, 4, 4, 0],
                        [77, -11, 4, 0],
                        [77, -11, 4, 0],
                        [77, -11, 4, 0],
                        [77, -11, 4, 0],
                        [59, -30, 4, 0],
                        [34, -41, 4, 0],
                        [32, -48, 4, 0],
                        [17, -52, 4, 0],
                        [5, -49, 4, 0],
                        [4, -42, 4, 0],
                        [-29, -38, 4, 0],
                        [-47, -32, 4, 0],
                        [-54, -26, 4, 0],
                        [-54, -26, 4, 0],
                        [-54, -26, 4, 0],
                        [-54, -10, 1, 0],
                        [-54, -10, 1, 0],
                        [-64, 18, 1, 0],
                        [-55, 44, 1, 0],
                        [-43, 61, 1, 0],
                        [18, -20, 0, 1],
                        [24, 23, 1, 0],
                        [11, 56, 1, 1],
                        [-48, 64, 0, 0],
                        [-62, 38, 1, 0],
                        [-92, 24, 1, 0],
                        [-118, 40, 1, 0],
                        [-114, 59, 0, 0],
                        [-122, 35, 7, 0],
                        [-136, 40, 7, 0],
                        [-136, 30, 7, 0],
                        [-144, 36, 7, 0],
                        [-152, 50, 7, 0],
                        [-145, 55, 7, 0],
                        [-168, 61, 7, 0],
                        [-175, 67, 7, 0],
                        [-175, 80, 7, 0],
                        [-161, 96, 7, 0],
                        [-144, 94, 7, 0],
                        [-138, 86, 7, 0],
                        [-146, 68, 7, 0],
                        [-154, 64, 7, 0],
                        [-161, 64, 7, 0],
                        [-158, 74, 7, 0],
                        [-170, 76, 7, 0],
                        [-150, 96, 7, 0],
                        [-156, 101, 7, 0],
                        [-156, 113, 7, 0],
                        [-150, 112, 7, 0],
                        [-138, 98, 7, 0],
                        [-132, 96, 7, 0],
                        [-125, 72, 7, 0],
                        [-138, 50, 7, 0],
                        [-149, 50, 7, 0],
                        [-124, 72, 7, 0],
                        [-125, 83, 7, 0],
                        [-112, 80, 7, 0],
                        [-106, 73, 7, 0],
                        [-102, 56, 7, 0],
                        [-113, 46, 7, 0],
                        [-114, 58, 7, 0],
                        [-104, 76, 0, 0],
                        [-86, 67, 1, 0],
                        [-64, 92, 1, 0],
                        [-43, 101, 1, 0],
                        [-44, 115, 0, 0],
                        [-61, 102, 1, 0],
                        [-108, 96, 1, 0],
                        [-112, 90, 0, 0],
                        [-124, 90, 7, 0],
                        [-127, 97, 7, 0],
                        [-125, 100, 7, 0],
                        [-132, 108, 7, 0],
                        [-122, 107, 7, 0],
                        [-125, 115, 7, 0],
                        [-109, 112, 7, 0],
                        [-108, 96, 7, 0],
                        [-82, 109, 1, 0],
                        [-67, 152, 1, 0],
                        [-37, 180, 1, 0],
                        [-5, 182, 1, 0]
                    ],
                    [
                        [116, 154, 0, 1],
                        [121, 148, 7, 0],
                        [122, 131, 7, 0],
                        [124, 138, 7, 0],
                        [121, 136, 7, 0],
                        [119, 133, 7, 0],
                        [119, 133, 7, 0],
                        [124, 132, 7, 0],
                        [125, 122, 7, 0],
                        [122, 119, 7, 0],
                        [116, 116, 7, 0],
                        [112, 116, 7, 0],
                        [108, 116, 7, 0],
                        [113, 108, 7, 0],
                        [115, 103, 7, 0],
                        [119, 102, 7, 0],
                        [115, 103, 7, 0],
                        [122, 104, 7, 0],
                        [122, 104, 7, 0],
                        [126, 101, 7, 0],
                        [126, 101, 7, 0],
                        [114, 89, 7, 0],
                        [108, 80, 7, 0],
                        [97, 74, 7, 0],
                        [96, 70, 7, 0],
                        [86, 65, 7, 0],
                        [72, 66, 7, 0],
                        [62, 68, 7, 0],
                        [55, 74, 7, 0],
                        [55, 74, 7, 0],
                        [55, 74, 7, 0],
                        [48, 72, 7, 0],
                        [48, 72, 7, 0],
                        [35, 82, 7, 0],
                        [29, 90, 7, 0],
                        [29, 96, 7, 0],
                        [38, 92, 7, 0],
                        [44, 98, 7, 0],
                        [34, 104, 7, 0],
                        [40, 112, 7, 0],
                        [40, 118, 7, 0],
                        [29, 119, 7, 0],
                        [20, 127, 7, 0],
                        [20, 127, 7, 0],
                        [26, 145, 7, 0],
                        [30, 155, 7, 0],
                        [23, 155, 7, 0],
                        [32, 167, 7, 0],
                        [41, 174, 7, 0],
                        [50, 179, 7, 0],
                        [58, 180, 7, 0],
                        [70, 180, 7, 0],
                        [58, 186, 7, 0],
                        [73, 188, 7, 0],
                        [84, 187, 7, 0],
                        [91, 187, 7, 0],
                        [103, 184, 7, 0],
                        [109, 175, 7, 0],
                        [114, 167, 7, 0],
                        [118, 161, 7, 0],
                        [116, 154, 7, 0],
                        [109, 158, 7, 0],
                        [100, 163, 7, 0],
                        [84, 164, 7, 0],
                        [72, 163, 7, 0],
                        [58, 162, 7, 0],
                        [50, 156, 7, 0],
                        [44, 142, 7, 0],
                        [44, 142, 7, 0],
                        [49, 131, 7, 0],
                        [55, 154, 0, 1],
                        [59, 157, 7, 0],
                        [66, 158, 7, 0],
                        [70, 156, 7, 0],
                        [85, 155, 0, 1],
                        [91, 156, 7, 0],
                        [95, 152, 7, 0],
                        [97, 149, 7, 0],
                        [95, 140, 0, 1],
                        [92, 145, 7, 0],
                        [92, 145, 7, 0],
                        [85, 144, 7, 0],
                        [85, 144, 7, 0],
                        [68, 143, 0, 1],
                        [62, 145, 7, 0],
                        [62, 145, 7, 0],
                        [58, 143, 7, 0],
                        [58, 143, 7, 0],
                        [67, 149, 0, 1],
                        [61, 150, 7, 0],
                        [55, 148, 7, 1],
                        [68, 134, 0, 1],
                        [64, 128, 7, 0],
                        [65, 126, 7, 0],
                        [71, 128, 7, 0],
                        [80, 128, 0, 1],
                        [86, 126, 7, 0],
                        [86, 126, 7, 0],
                        [86, 134, 7, 0],
                        [86, 134, 7, 0],
                        [49, 124, 0, 1],
                        [59, 125, 7, 0],
                        [70, 125, 7, 0],
                        [76, 122, 7, 1],
                        [82, 118, 7, 0],
                        [91, 113, 7, 0],
                        [102, 113, 7, 0],
                        [90, 120, 7, 0],
                        [84, 125, 7, 0],
                        [78, 125, 7, 0],
                        [76, 122, 7, 1],
                        [65, 122, 7, 0],
                        [56, 120, 7, 0],
                        [49, 124, 7, 1],
                        [61, 119, 0, 1],
                        [68, 113, 7, 0],
                        [77, 113, 7, 0],
                        [85, 115, 7, 0],
                        [125, 97, 0, 1],
                        [136, 89, 1, 0],
                        [139, 70, 1, 0],
                        [150, 77, 1, 0],
                        [162, 76, 1, 1],
                        [161, 83, 7, 0],
                        [161, 83, 7, 0],
                        [168, 86, 7, 0],
                        [161, 83, 7, 0],
                        [168, 86, 7, 0],
                        [173, 91, 7, 0],
                        [182, 88, 7, 0],
                        [186, 91, 7, 0],
                        [190, 96, 7, 0],
                        [188, 103, 7, 0],
                        [193, 115, 7, 0],
                        [198, 112, 7, 0],
                        [202, 106, 7, 0],
                        [204, 98, 7, 0],
                        [200, 89, 7, 0],
                        [210, 96, 7, 0],
                        [216, 102, 7, 0],
                        [222, 110, 7, 0],
                        [228, 115, 7, 0],
                        [232, 113, 7, 0],
                        [232, 106, 7, 0],
                        [232, 100, 7, 0],
                        [226, 100, 7, 0],
                        [221, 95, 7, 0],
                        [216, 84, 7, 0],
                        [211, 82, 7, 0],
                        [204, 83, 7, 0],
                        [204, 83, 7, 0],
                        [206, 76, 7, 0],
                        [212, 71, 7, 0],
                        [220, 67, 7, 0],
                        [220, 67, 7, 0],
                        [227, 67, 7, 0],
                        [230, 72, 7, 0],
                        [234, 76, 7, 0],
                        [229, 82, 7, 0],
                        [227, 89, 7, 0],
                        [221, 92, 7, 0],
                        [220, 67, 0, 1],
                        [204, 61, 7, 1],
                        [182, 88, 0, 1],
                        [180, 79, 7, 0],
                        [182, 73, 7, 0],
                        [192, 67, 7, 0],
                        [204, 61, 7, 0],
                        [204, 54, 7, 0],
                        [193, 43, 7, 0],
                        [186, 44, 7, 0],
                        [174, 53, 7, 0],
                        [168, 60, 7, 0],
                        [163, 70, 7, 0],
                        [162, 76, 7, 0],
                        [182, 49, 0, 1],
                        [167, 36, 1, 0],
                        [150, 29, 1, 0],
                        [133, 26, 1, 0],
                        [121, 36, 1, 0],
                        [109, 46, 1, 0],
                        [104, 53, 1, 0],
                        [102, 62, 1, 0],
                        [104, 53, 1, 0],
                        [109, 43, 1, 0],
                        [113, 28, 1, 0],
                        [113, 17, 1, 0],
                        [113, 6, 1, 0],
                        [108, -6, 1, 0],
                        [103, -16, 1, 0],
                        [103, -16, 1, 0],
                        [109, -19, 1, 0],
                        [116, -23, 1, 0],
                        [108, -34, 1, 0],
                        [98, -43, 1, 0],
                        [84, -49, 1, 0],
                        [72, -54, 1, 0],
                        [53, -56, 1, 0],
                        [38, -52, 1, 0],
                        [36, -42, 1, 0],
                        [36, -42, 1, 0],
                        [-22, -49, 1, 0],
                        [-1, -41, 1, 0],
                        [-22, -29, 1, 0],
                        [-34, -19, 1, 0],
                        [-37, -14, 1, 0],
                        [-43, -22, 1, 0],
                        [-52, -32, 1, 0],
                        [-60, -44, 1, 1],
                        [-24, -88, 0, 1],
                        [10, -52, 1, 1],
                        [52, -62, 0, 1],
                        [64, -101, 1, 1],
                        [98, -42, 0, 1],
                        [107, -62, 1, 0],
                        [113, -79, 1, 0],
                        [108, -94, 1, 0],
                        [104, -108, 1, 0],
                        [112, -104, 0, 1],
                        [109, -118, 7, 0],
                        [102, -125, 7, 0],
                        [43, -120, 7, 1],
                        [46, -109, 7, 0],
                        [49, -101, 7, 0],
                        [58, -101, 7, 0],
                        [77, -104, 7, 0],
                        [92, -107, 7, 0],
                        [104, -107, 7, 0],
                        [112, -104, 7, 0],
                        [100, -127, 0, 0],
                        [115, -132, 4, 0],
                        [126, -142, 4, 0],
                        [134, -157, 4, 0],
                        [119, -166, 4, 0],
                        [92, -175, 4, 0],
                        [68, -158, 4, 0],
                        [50, -158, 4, 0],
                        [44, -148, 4, 0],
                        [53, -122, 4, 0],
                        [-44, -103, 0, 1],
                        [-52, -116, 4, 0],
                        [-54, -125, 4, 0],
                        [-85, -116, 4, 0],
                        [-106, -109, 4, 0],
                        [-119, -98, 4, 0],
                        [-126, -80, 4, 0],
                        [-121, -64, 4, 0],
                        [-107, -56, 4, 0],
                        [-92, -61, 4, 0],
                        [-82, -71, 4, 0],
                        [-74, -92, 4, 0],
                        [-73, -76, 4, 0],
                        [-79, -64, 7, 0],
                        [-79, -64, 7, 0],
                        [-71, -43, 7, 0],
                        [-65, -49, 7, 0],
                        [-56, -67, 7, 0],
                        [-47, -76, 7, 0],
                        [-37, -85, 7, 0],
                        [-24, -90, 7, 0],
                        [-25, -96, 7, 0],
                        [-26, -106, 7, 0],
                        [-37, -104, 7, 0],
                        [-53, -95, 7, 0],
                        [-68, -84, 7, 0],
                        [-73, -76, 7, 1],
                        [-29, 6, 0, 1],
                        [19, -32, 4, 1],
                        [46, -40, 4, 0],
                        [55, -38, 4, 0],
                        [104, -16, 4, 1],
                        [107, -6, 4, 1],
                        [50, -22, 4, 1],
                        [37, -20, 4, 0],
                        [25, -18, 4, 0],
                        [-24, 18, 4, 1],
                        [-37, -14, 0, 1],
                        [-40, -6, 1, 0],
                        [-41, 1, 1, 0],
                        [-35, 5, 1, 0],
                        [-29, 7, 1, 0],
                        [-25, 19, 1, 0],
                        [-26, 32, 1, 0],
                        [-24, 47, 1, 0],
                        [-18, 62, 1, 0],
                        [-16, 71, 1, 0],
                        [-11, 79, 1, 0],
                        [-2, 84, 1, 0],
                        [6, 90, 0, 1],
                        [43, -6, 0, 1],
                        [54, 12, 1, 0],
                        [60, 68, 1, 1],
                        [6, 90, 0, 1],
                        [-4, 89, 1, 0],
                        [-19, 82, 1, 0],
                        [-40, 80, 1, 0],
                        [-59, 86, 1, 0],
                        [-79, 102, 7, 0],
                        [-92, 102, 7, 0],
                        [-98, 108, 7, 0],
                        [-102, 118, 7, 0],
                        [-92, 121, 7, 0],
                        [-83, 125, 7, 0],
                        [-74, 132, 7, 0],
                        [-68, 140, 7, 0],
                        [-61, 145, 7, 0],
                        [-55, 139, 7, 0],
                        [-52, 134, 7, 0],
                        [-55, 125, 7, 0],
                        [-76, 106, 7, 1],
                        [-96, 124, 0, 1],
                        [-104, 133, 7, 0],
                        [-114, 140, 7, 0],
                        [-119, 149, 7, 0],
                        [-116, 161, 7, 0],
                        [-107, 167, 7, 0],
                        [-97, 170, 7, 0],
                        [-92, 168, 7, 0],
                        [-86, 167, 7, 0],
                        [-90, 185, 7, 0],
                        [-91, 180, 7, 0],
                        [-90, 185, 7, 0],
                        [-84, 185, 7, 0],
                        [-80, 174, 7, 0],
                        [-76, 168, 7, 0],
                        [-70, 163, 7, 0],
                        [-70, 158, 7, 0],
                        [-70, 150, 7, 1],
                        [-53, 148, 0, 1],
                        [-36, 121, 1, 0],
                        [-12, 120, 1, 0],
                        [4, 122, 1, 0],
                        [22, 125, 1, 0],
                        [26, 142, 0, 1],
                        [10, 138, 1, 0],
                        [-8, 138, 1, 0],
                        [-36, 146, 1, 1],
                        [-44, 148, 7, 0],
                        [-53, 151, 7, 0],
                        [-56, 157, 7, 0],
                        [-50, 161, 7, 0],
                        [-54, 172, 7, 0],
                        [-47, 167, 7, 0],
                        [-44, 174, 7, 0],
                        [-41, 173, 7, 0],
                        [-34, 166, 7, 0],
                        [-35, 160, 7, 0],
                        [-36, 146, 7, 1],
                        [-20, 150, 1, 0],
                        [7, 152, 1, 0],
                        [8, 172, 1, 0],
                        [28, 188, 1, 0],
                        [54, 199, 1, 0],
                        [71, 197, 1, 0],
                        [89, 188, 1, 1]
                    ],
                    [
                        [-155, 364, 0, 1],
                        [-175, 377, 7, 0],
                        [-206, 380, 7, 0],
                        [-227, 368, 7, 0],
                        [-238, 347, 7, 0],
                        [-234, 316, 7, 0],
                        [-206, 301, 7, 0],
                        [-179, 300, 7, 0],
                        [-163, 311, 7, 0],
                        [-152, 328, 7, 0],
                        [-149, 339, 7, 1],
                        [-129, 337, 1, 0],
                        [-108, 326, 1, 0],
                        [-102, 301, 1, 0],
                        [-106, 273, 1, 0],
                        [-115, 232, 1, 1],
                        [-133, 220, 7, 0],
                        [-151, 202, 7, 0],
                        [-163, 176, 7, 0],
                        [-160, 141, 7, 0],
                        [-154, 128, 7, 0],
                        [-142, 122, 7, 0],
                        [-131, 120, 7, 0],
                        [-132, 104, 7, 0],
                        [-131, 77, 7, 0],
                        [-121, 43, 7, 0],
                        [-105, 16, 7, 0],
                        [-84, 2, 7, 0],
                        [-54, -8, 7, 0],
                        [-6, -18, 7, 0],
                        [41, -15, 7, 0],
                        [92, -8, 7, 0],
                        [141, 17, 7, 0],
                        [159, 30, 7, 0],
                        [168, 51, 7, 0],
                        [179, 81, 7, 0],
                        [178, 104, 7, 0],
                        [176, 128, 7, 0],
                        [172, 145, 7, 0],
                        [170, 149, 7, 0],
                        [176, 149, 7, 0],
                        [184, 151, 7, 0],
                        [192, 156, 7, 0],
                        [199, 165, 7, 0],
                        [205, 180, 7, 0],
                        [203, 203, 7, 0],
                        [194, 220, 7, 0],
                        [174, 242, 7, 0],
                        [149, 258, 7, 0],
                        [119, 265, 7, 0],
                        [72, 271, 7, 0],
                        [22, 271, 7, 0],
                        [-25, 266, 7, 0],
                        [-58, 256, 7, 0],
                        [-86, 249, 7, 0],
                        [-103, 240, 7, 0],
                        [-116, 232, 7, 1],
                        [-153, 364, 0, 1],
                        [-135, 366, 1, 0],
                        [-99, 370, 1, 0],
                        [-43, 369, 1, 0],
                        [15, 354, 1, 0],
                        [59, 334, 1, 0],
                        [94, 310, 1, 0],
                        [115, 284, 1, 0],
                        [127, 263, 1, 1],
                        [-130, 120, 0, 1],
                        [-97, 139, 7, 0],
                        [-48, 162, 7, 0],
                        [20, 174, 7, 0],
                        [82, 174, 7, 0],
                        [126, 167, 7, 0],
                        [157, 152, 7, 0],
                        [172, 147, 7, 1],
                        [117, 125, 0, 1],
                        [98, 132, 4, 0],
                        [80, 130, 4, 0],
                        [69, 124, 4, 0],
                        [62, 120, 4, 1],
                        [-22, 111, 0, 1],
                        [-30, 117, 4, 0],
                        [-48, 119, 4, 0],
                        [-64, 114, 4, 0],
                        [-75, 106, 4, 1],
                        [-12, 46, 0, 1],
                        [1, 34, 4, 0],
                        [22, 27, 4, 0],
                        [48, 27, 4, 0],
                        [71, 33, 4, 0],
                        [84, 44, 4, 0],
                        [90, 58, 4, 1],
                        [-117, 31, 0, 1],
                        [-137, 16, 1, 0],
                        [-137, 0, 1, 0],
                        [-144, -12, 1, 0],
                        [-148, -25, 1, 0],
                        [-143, -37, 1, 0],
                        [-119, -50, 1, 0],
                        [-54, -73, 1, 0],
                        [18, -80, 1, 0],
                        [50, -79, 1, 0],
                        [64, -78, 1, 0],
                        [61, -93, 1, 0],
                        [59, -123, 1, 0],
                        [52, -179, 1, 0],
                        [64, -180, 1, 0],
                        [84, -180, 1, 0],
                        [112, -178, 1, 0],
                        [111, -190, 1, 0],
                        [111, -205, 1, 0],
                        [104, -271, 1, 0],
                        [126, -272, 1, 0],
                        [159, -271, 1, 0],
                        [192, -267, 1, 0],
                        [212, -260, 1, 0],
                        [195, -182, 1, 0],
                        [181, -128, 1, 0],
                        [165, -77, 1, 0],
                        [159, -57, 1, 0],
                        [145, -62, 1, 0],
                        [113, -70, 1, 0],
                        [84, -73, 1, 0],
                        [60, -78, 1, 0],
                        [75, -77, 1, 0],
                        [159, -60, 1, 0],
                        [184, -45, 1, 0],
                        [205, -29, 1, 0],
                        [198, -13, 1, 0],
                        [190, 5, 1, 0],
                        [189, 19, 1, 0],
                        [179, 26, 1, 0],
                        [170, 30, 1, 0],
                        [158, 31, 1, 1],
                        [202, -34, 0, 1],
                        [220, -73, 7, 0],
                        [245, -132, 7, 0],
                        [258, -209, 7, 0],
                        [243, -271, 7, 0],
                        [207, -312, 7, 0],
                        [158, -343, 7, 0],
                        [96, -364, 7, 0],
                        [40, -370, 7, 0],
                        [-13, -370, 7, 0],
                        [-74, -354, 7, 0],
                        [-135, -325, 7, 0],
                        [-175, -289, 7, 0],
                        [-199, -246, 7, 0],
                        [-203, -194, 7, 0],
                        [-192, -141, 7, 0],
                        [-176, -92, 7, 0],
                        [-147, -33, 7, 1],
                        [-234, -74, 6, 0],
                        [-248, -77, 6, 0],
                        [-258, -62, 6, 0],
                        [-263, -53, 6, 0],
                        [-274, -61, 6, 0],
                        [-275, -69, 6, 0],
                        [-284, -70, 6, 0],
                        [-304, -65, 6, 0],
                        [-318, -63, 6, 0],
                        [-314, -74, 6, 0],
                        [-308, -84, 6, 0],
                        [-321, -82, 6, 0],
                        [-333, -82, 6, 0],
                        [-340, -84, 6, 0],
                        [-344, -93, 6, 0],
                        [-344, -103, 6, 0],
                        [-338, -119, 6, 0],
                        [-329, -134, 6, 0],
                        [-313, -141, 6, 0],
                        [-280, -135, 6, 0],
                        [-253, -113, 6, 0],
                        [-236, -120, 6, 0],
                        [-225, -119, 6, 0],
                        [-228, -104, 6, 0],
                        [-237, -97, 6, 0],
                        [-241, -88, 6, 0],
                        [-206, -76, 6, 0],
                        [-176, -62, 6, 0],
                        [-157, -50, 6, 1],
                        [219, -65, 0, 1],
                        [235, -70, 6, 0],
                        [255, -80, 6, 0],
                        [277, -86, 6, 0],
                        [286, -90, 6, 0],
                        [280, -99, 6, 0],
                        [274, -111, 6, 0],
                        [272, -116, 6, 0],
                        [291, -121, 6, 0],
                        [299, -119, 6, 0],
                        [305, -121, 6, 0],
                        [326, -132, 6, 0],
                        [351, -138, 6, 0],
                        [365, -136, 6, 0],
                        [379, -124, 6, 0],
                        [389, -98, 6, 0],
                        [388, -84, 6, 0],
                        [379, -79, 6, 0],
                        [366, -81, 6, 0],
                        [358, -84, 6, 0],
                        [353, -83, 6, 0],
                        [361, -74, 6, 0],
                        [365, -63, 6, 0],
                        [355, -58, 6, 0],
                        [344, -68, 6, 0],
                        [326, -79, 6, 0],
                        [319, -71, 6, 0],
                        [315, -60, 6, 0],
                        [308, -49, 6, 0],
                        [298, -67, 6, 0],
                        [292, -76, 6, 0],
                        [284, -74, 6, 0],
                        [253, -61, 6, 0],
                        [206, -33, 6, 1],
                        [86, 93, 0, 1],
                        [72, 98, 5, 0],
                        [47, 103, 5, 0],
                        [28, 106, 5, 0],
                        [21, 108, 5, 0],
                        [15, 103, 5, 0],
                        [10, 93, 5, 0],
                        [10, 85, 5, 0],
                        [14, 77, 5, 0],
                        [17, 72, 5, 0],
                        [20, 69, 5, 0],
                        [32, 72, 5, 0],
                        [57, 81, 5, 0],
                        [74, 87, 5, 0],
                        [87, 93, 5, 1]
                    ],
                    [
                        [-155, 364, 0, 1],
                        [-175, 377, 7, 0],
                        [-206, 380, 7, 0],
                        [-227, 368, 7, 0],
                        [-238, 347, 7, 0],
                        [-234, 316, 7, 0],
                        [-206, 301, 7, 0],
                        [-179, 300, 7, 0],
                        [-163, 311, 7, 0],
                        [-152, 328, 7, 0],
                        [-149, 339, 7, 1],
                        [-129, 337, 1, 0],
                        [-108, 326, 1, 0],
                        [-102, 301, 1, 0],
                        [-106, 273, 1, 0],
                        [-115, 232, 1, 1],
                        [-133, 220, 7, 0],
                        [-151, 202, 7, 0],
                        [-163, 176, 7, 0],
                        [-160, 141, 7, 0],
                        [-154, 128, 7, 0],
                        [-142, 122, 7, 0],
                        [-131, 120, 7, 0],
                        [-132, 104, 7, 0],
                        [-131, 77, 7, 0],
                        [-121, 43, 7, 0],
                        [-105, 16, 7, 0],
                        [-84, 2, 7, 0],
                        [-54, -8, 7, 0],
                        [-6, -18, 7, 0],
                        [41, -15, 7, 0],
                        [92, -8, 7, 0],
                        [141, 17, 7, 0],
                        [159, 30, 7, 0],
                        [168, 51, 7, 0],
                        [179, 81, 7, 0],
                        [178, 104, 7, 0],
                        [176, 128, 7, 0],
                        [172, 145, 7, 0],
                        [170, 149, 7, 0],
                        [176, 149, 7, 0],
                        [184, 151, 7, 0],
                        [192, 156, 7, 0],
                        [199, 165, 7, 0],
                        [205, 180, 7, 0],
                        [203, 203, 7, 0],
                        [194, 220, 7, 0],
                        [174, 242, 7, 0],
                        [149, 258, 7, 0],
                        [119, 265, 7, 0],
                        [72, 271, 7, 0],
                        [22, 271, 7, 0],
                        [-25, 266, 7, 0],
                        [-58, 256, 7, 0],
                        [-86, 249, 7, 0],
                        [-103, 240, 7, 0],
                        [-116, 232, 7, 1],
                        [-153, 364, 0, 1],
                        [-135, 366, 1, 0],
                        [-99, 370, 1, 0],
                        [-43, 369, 1, 0],
                        [15, 354, 1, 0],
                        [59, 334, 1, 0],
                        [94, 310, 1, 0],
                        [115, 284, 1, 0],
                        [127, 263, 1, 1],
                        [-130, 120, 0, 1],
                        [-97, 139, 7, 0],
                        [-48, 162, 7, 0],
                        [20, 174, 7, 0],
                        [82, 174, 7, 0],
                        [126, 167, 7, 0],
                        [157, 152, 7, 0],
                        [172, 147, 7, 1],
                        [117, 125, 0, 1],
                        [98, 132, 4, 0],
                        [80, 130, 4, 0],
                        [69, 124, 4, 0],
                        [62, 120, 4, 1],
                        [-22, 111, 0, 1],
                        [-30, 117, 4, 0],
                        [-48, 119, 4, 0],
                        [-64, 114, 4, 0],
                        [-75, 106, 4, 1],
                        [-12, 46, 0, 1],
                        [1, 34, 4, 0],
                        [22, 27, 4, 0],
                        [48, 27, 4, 0],
                        [71, 33, 4, 0],
                        [84, 44, 4, 0],
                        [90, 58, 4, 1],
                        [-117, 31, 0, 1],
                        [-137, 16, 1, 0],
                        [-137, 0, 1, 0],
                        [-144, -12, 1, 0],
                        [-148, -25, 1, 0],
                        [-143, -37, 1, 0],
                        [-119, -50, 1, 0],
                        [-54, -73, 1, 0],
                        [18, -80, 1, 0],
                        [50, -79, 1, 0],
                        [64, -78, 1, 0],
                        [61, -93, 1, 0],
                        [59, -123, 1, 0],
                        [52, -179, 1, 0],
                        [64, -180, 1, 0],
                        [84, -180, 1, 0],
                        [112, -178, 1, 0],
                        [111, -190, 1, 0],
                        [111, -205, 1, 0],
                        [104, -271, 1, 0],
                        [126, -272, 1, 0],
                        [159, -271, 1, 0],
                        [192, -267, 1, 0],
                        [212, -260, 1, 0],
                        [195, -182, 1, 0],
                        [181, -128, 1, 0],
                        [165, -77, 1, 0],
                        [159, -57, 1, 0],
                        [145, -62, 1, 0],
                        [113, -70, 1, 0],
                        [84, -73, 1, 0],
                        [60, -78, 1, 0],
                        [75, -77, 1, 0],
                        [159, -60, 1, 0],
                        [184, -45, 1, 0],
                        [205, -29, 1, 0],
                        [198, -13, 1, 0],
                        [190, 5, 1, 0],
                        [189, 19, 1, 0],
                        [179, 26, 1, 0],
                        [170, 30, 1, 0],
                        [158, 31, 1, 1],
                        [202, -34, 0, 1],
                        [220, -73, 7, 0],
                        [245, -132, 7, 0],
                        [258, -209, 7, 0],
                        [243, -271, 7, 0],
                        [207, -312, 7, 0],
                        [158, -343, 7, 0],
                        [96, -364, 7, 0],
                        [40, -370, 7, 0],
                        [-13, -370, 7, 0],
                        [-74, -354, 7, 0],
                        [-135, -325, 7, 0],
                        [-175, -289, 7, 0],
                        [-199, -246, 7, 0],
                        [-203, -194, 7, 0],
                        [-192, -141, 7, 0],
                        [-176, -92, 7, 0],
                        [-147, -33, 7, 1],
                        [-234, -44, 6, 0],
                        [-248, -17, 6, 0],
                        [-258, -2, 6, 0],
                        [-263, 7, 6, 0],
                        [-274, -1, 6, 0],
                        [-275, -9, 6, 0],
                        [-284, -10, 6, 0],
                        [-304, -5, 6, 0],
                        [-318, -3, 6, 0],
                        [-314, -14, 6, 0],
                        [-308, -24, 6, 0],
                        [-321, -22, 6, 0],
                        [-333, -22, 6, 0],
                        [-340, -24, 6, 0],
                        [-344, -33, 6, 0],
                        [-344, -43, 6, 0],
                        [-338, -59, 6, 0],
                        [-329, -74, 6, 0],
                        [-313, -81, 6, 0],
                        [-280, -75, 6, 0],
                        [-253, -53, 6, 0],
                        [-236, -60, 6, 0],
                        [-225, -59, 6, 0],
                        [-228, -44, 6, 0],
                        [-237, -37, 6, 0],
                        [-241, -58, 6, 0],
                        [-206, -46, 6, 0],
                        [-176, -42, 6, 0],
                        [-157, -50, 6, 1],
                        [219, -65, 0, 1],
                        [235, -60, 6, 0],
                        [255, -60, 6, 0],
                        [277, -56, 6, 0],
                        [286, -30, 6, 0],
                        [280, -39, 6, 0],
                        [274, -51, 6, 0],
                        [272, -56, 6, 0],
                        [291, -61, 6, 0],
                        [299, -59, 6, 0],
                        [305, -61, 6, 0],
                        [326, -72, 6, 0],
                        [351, -78, 6, 0],
                        [365, -76, 6, 0],
                        [379, -64, 6, 0],
                        [389, -38, 6, 0],
                        [388, -24, 6, 0],
                        [379, -19, 6, 0],
                        [366, -21, 6, 0],
                        [358, -24, 6, 0],
                        [353, -23, 6, 0],
                        [361, -14, 6, 0],
                        [365, -3, 6, 0],
                        [355, 2, 6, 0],
                        [344, -8, 6, 0],
                        [326, -19, 6, 0],
                        [319, -11, 6, 0],
                        [315, 0, 6, 0],
                        [308, 11, 6, 0],
                        [298, -7, 6, 0],
                        [292, -16, 6, 0],
                        [284, -44, 6, 0],
                        [253, -41, 6, 0],
                        [206, -33, 6, 1],
                        [86, 93, 0, 1],
                        [72, 98, 5, 0],
                        [47, 103, 5, 0],
                        [28, 106, 5, 0],
                        [21, 108, 5, 0],
                        [15, 103, 5, 0],
                        [10, 93, 5, 0],
                        [10, 85, 5, 0],
                        [14, 77, 5, 0],
                        [17, 72, 5, 0],
                        [20, 69, 5, 0],
                        [32, 72, 5, 0],
                        [57, 81, 5, 0],
                        [74, 87, 5, 0],
                        [87, 93, 5, 1]
                    ],
                    [
                        [-9, -40, 0, 1],
                        [-17, -40, 1, 0],
                        [-22, -40, 1, 0],
                        [-27, -40, 1, 0],
                        [-30, -40, 1, 0],
                        [-35, -45, 1, 0],
                        [-47, -54, 1, 0],
                        [-56, -61, 1, 0],
                        [-63, -66, 1, 0],
                        [-63, -68, 1, 0],
                        [-54, -70, 1, 0],
                        [-34, -72, 1, 0],
                        [-17, -73, 1, 0],
                        [-1, -72, 1, 0],
                        [19, -68, 1, 0],
                        [35, -63, 1, 0],
                        [52, -55, 1, 0],
                        [66, -45, 1, 0],
                        [77, -34, 1, 0],
                        [82, -25, 1, 0],
                        [82, -12, 1, 0],
                        [79, -8, 1, 0],
                        [69, -7, 1, 0],
                        [57, -9, 1, 0],
                        [36, -21, 1, 0],
                        [12, -35, 1, 0],
                        [-3, -44, 1, 0],
                        [-11, -48, 1, 0],
                        [-17, -54, 1, 0],
                        [-15, -64, 1, 0],
                        [-12, -72, 1, 0],
                        [-7, -73, 1, 0],
                        [0, -73, 1, 0],
                        [12, -74, 1, 0],
                        [31, -74, 1, 0],
                        [44, -74, 1, 0],
                        [50, -72, 1, 0],
                        [54, -67, 1, 0],
                        [63, -61, 1, 0],
                        [89, -43, 1, 0],
                        [112, -20, 1, 0],
                        [132, 0, 1, 0],
                        [146, 18, 1, 0],
                        [149, 24, 1, 0],
                        [149, 36, 1, 0],
                        [144, 48, 1, 0],
                        [131, 54, 1, 0],
                        [104, 54, 1, 0],
                        [75, 45, 1, 1],
                        [-11, -47, 0, 1],
                        [33, 5, 1, 0],
                        [62, 40, 1, 0],
                        [71, 51, 1, 0],
                        [73, 65, 1, 0],
                        [76, 78, 1, 0],
                        [87, 96, 1, 0],
                        [94, 107, 1, 0],
                        [98, 114, 1, 0],
                        [100, 119, 1, 0],
                        [95, 118, 1, 0],
                        [87, 115, 1, 0],
                        [77, 111, 1, 0],
                        [67, 106, 1, 0],
                        [59, 102, 1, 0],
                        [55, 109, 1, 0],
                        [45, 117, 1, 0],
                        [37, 124, 1, 0],
                        [27, 133, 1, 0],
                        [18, 140, 1, 0],
                        [17, 141, 1, 0],
                        [17, 134, 1, 0],
                        [19, 118, 1, 0],
                        [20, 97, 1, 0],
                        [22, 63, 1, 0],
                        [26, 39, 1, 0],
                        [24, 28, 1, 0],
                        [8, -6, 1, 0],
                        [-5, -33, 1, 0],
                        [-8, -37, 1, 0],
                        [-3, -26, 1, 0],
                        [0, -15, 1, 0],
                        [2, 0, 1, 0],
                        [-6, 31, 1, 0],
                        [-16, 61, 1, 0],
                        [-29, 84, 1, 0],
                        [-32, 89, 1, 0],
                        [-24, 89, 1, 0],
                        [-12, 87, 1, 0],
                        [-8, 87, 1, 0],
                        [-3, 95, 1, 0],
                        [4, 105, 1, 0],
                        [14, 114, 1, 1],
                        [-24, -31, 0, 1],
                        [-20, -22, 1, 0],
                        [-14, 2, 1, 0],
                        [-17, 24, 1, 0],
                        [-23, 38, 1, 0],
                        [-33, 52, 1, 0],
                        [-44, 58, 1, 0],
                        [-54, 62, 1, 0],
                        [-62, 59, 1, 0],
                        [-83, 51, 1, 0],
                        [-152, 23, 1, 0],
                        [-158, 5, 1, 0],
                        [-159, -17, 1, 0],
                        [-148, -33, 1, 0],
                        [-133, -50, 1, 0],
                        [-112, -66, 1, 0],
                        [-94, -69, 1, 0],
                        [-72, -72, 1, 1],
                        [-128, -109, 1, 0],
                        [-142, -118, 1, 0],
                        [-146, -121, 1, 0],
                        [-150, -124, 1, 0],
                        [-151, -125, 1, 0],
                        [-150, -130, 1, 0],
                        [-147, -139, 1, 0],
                        [-130, -200, 1, 0],
                        [-93, -330, 1, 0],
                        [-88, -353, 1, 0],
                        [-86, -358, 1, 0],
                        [-83, -359, 1, 0],
                        [-79, -361, 1, 0],
                        [-28, -383, 1, 0],
                        [-23, -386, 1, 0],
                        [-19, -388, 1, 0],
                        [-16, -387, 1, 0],
                        [-12, -383, 1, 1],
                        [-26, -374, 0, 1],
                        [-45, -261, 1, 0],
                        [-63, -171, 1, 0],
                        [-65, -160, 1, 0],
                        [-66, -152, 1, 0],
                        [-68, -145, 1, 0],
                        [-65, -142, 1, 0],
                        [-61, -138, 1, 0],
                        [-55, -134, 1, 0],
                        [-2, -84, 1, 0],
                        [3, -80, 1, 0],
                        [5, -78, 1, 0],
                        [8, -77, 1, 0],
                        [17, -80, 1, 0],
                        [65, -90, 1, 0],
                        [74, -93, 1, 0],
                        [80, -94, 1, 0],
                        [83, -95, 1, 0],
                        [85, -99, 1, 0],
                        [90, -122, 1, 0],
                        [129, -341, 1, 1],
                        [185, -289, 1, 0],
                        [154, -73, 1, 0],
                        [151, -60, 1, 0],
                        [147, -55, 1, 0],
                        [144, -51, 1, 0],
                        [137, -46, 1, 0],
                        [128, -45, 1, 0],
                        [115, -45, 1, 0],
                        [92, -46, 1, 1],
                        [159, 22, 0, 1],
                        [225, 18, 2, 1],
                        [242, -220, 2, 1],
                        [187, -280, 2, 1],
                        [126, -341, 0, 1],
                        [65, -397, 2, 1],
                        [-22, -375, 2, 1],
                        [-93, -345, 0, 1],
                        [-165, -317, 2, 1],
                        [-222, -95, 2, 1],
                        [-152, -123, 2, 1],
                        [-60, -151, 0, 1],
                        [8, -166, 2, 1],
                        [51, -382, 2, 1],
                        [8, -155, 0, 1],
                        [82, -101, 2, 1],
                        [148, -43, 0, 1],
                        [222, 16, 2, 1],
                        [-138, -54, 0, 1],
                        [-222, -93, 2, 1]
                    ],
                    [
                        [-58, -21, 0, 1],
                        [-73, -11, 1, 0],
                        [-98, 2, 1, 0],
                        [-115, 8, 1, 0],
                        [-133, 4, 1, 0],
                        [-153, 0, 1, 0],
                        [-167, -5, 1, 0],
                        [-167, -10, 1, 0],
                        [-158, -18, 1, 0],
                        [-140, -32, 1, 0],
                        [-122, -34, 1, 0],
                        [-88, -36, 1, 0],
                        [-76, -37, 1, 0],
                        [-70, -38, 1, 0],
                        [-67, -38, 1, 0],
                        [-78, -50, 1, 0],
                        [-126, -108, 1, 0],
                        [-133, -117, 1, 0],
                        [-136, -123, 1, 0],
                        [-137, -132, 1, 0],
                        [-137, -142, 1, 0],
                        [-93, -335, 1, 0],
                        [-91, -343, 1, 0],
                        [-90, -351, 1, 0],
                        [-86, -352, 1, 0],
                        [-79, -356, 1, 0],
                        [-63, -364, 1, 0],
                        [-49, -370, 1, 0],
                        [-33, -371, 1, 0],
                        [-22, -373, 1, 0],
                        [-19, -372, 1, 0],
                        [-20, -365, 1, 0],
                        [-21, -354, 1, 0],
                        [-39, -273, 1, 0],
                        [-63, -165, 1, 0],
                        [-66, -148, 1, 0],
                        [-68, -140, 1, 0],
                        [-68, -136, 1, 0],
                        [-62, -130, 1, 0],
                        [-48, -112, 1, 0],
                        [-28, -88, 1, 0],
                        [-6, -60, 1, 0],
                        [-4, -58, 1, 0],
                        [3, -60, 1, 0],
                        [15, -61, 1, 0],
                        [23, -61, 1, 0],
                        [30, -60, 1, 0],
                        [39, -56, 1, 0],
                        [44, -49, 1, 0],
                        [46, -41, 1, 0],
                        [44, -33, 1, 0],
                        [36, -31, 1, 0],
                        [13, -35, 1, 0],
                        [2, -36, 1, 0],
                        [-2, -34, 1, 0],
                        [-5, -33, 1, 0],
                        [-6, -38, 1, 0],
                        [-7, -42, 1, 0],
                        [-10, -47, 1, 0],
                        [-11, -49, 1, 0],
                        [-20, -49, 1, 0],
                        [-35, -48, 1, 0],
                        [-50, -47, 1, 0],
                        [-56, -43, 1, 0],
                        [-57, -36, 1, 0],
                        [-51, -24, 1, 0],
                        [-41, -6, 1, 0],
                        [-39, -3, 1, 0],
                        [-37, -3, 1, 0],
                        [-24, -3, 1, 0],
                        [-17, -3, 1, 0],
                        [-14, 11, 1, 0],
                        [-2, 44, 1, 0],
                        [6, 67, 1, 0],
                        [-1, 80, 1, 0],
                        [-9, 97, 1, 0],
                        [-9, 99, 1, 0],
                        [-3, 100, 1, 0],
                        [9, 101, 1, 0],
                        [20, 102, 1, 1],
                        [-15, -1, 0, 1],
                        [14, 36, 1, 0],
                        [30, 58, 1, 0],
                        [31, 77, 1, 0],
                        [35, 106, 1, 0],
                        [36, 121, 1, 0],
                        [37, 126, 1, 0],
                        [46, 126, 1, 0],
                        [95, 119, 1, 0],
                        [100, 118, 1, 0],
                        [100, 79, 1, 0],
                        [99, 69, 1, 0],
                        [98, 65, 1, 0],
                        [38, 17, 1, 0],
                        [19, 1, 1, 0],
                        [13, -4, 1, 0],
                        [-3, -33, 1, 1],
                        [-4, -59, 0, 1],
                        [5, -67, 1, 0],
                        [19, -72, 1, 0],
                        [30, -75, 1, 0],
                        [48, -72, 1, 0],
                        [82, -51, 1, 0],
                        [116, -25, 1, 0],
                        [142, 4, 1, 0],
                        [145, 8, 1, 0],
                        [142, 12, 1, 0],
                        [134, 15, 1, 0],
                        [118, 15, 1, 0],
                        [82, 11, 1, 0],
                        [45, 9, 1, 1],
                        [108, -34, 0, 1],
                        [132, -39, 1, 0],
                        [146, -41, 1, 0],
                        [150, -42, 1, 0],
                        [153, -52, 1, 0],
                        [156, -65, 1, 0],
                        [184, -270, 1, 0],
                        [184, -281, 1, 0],
                        [186, -287, 1, 0],
                        [181, -296, 1, 0],
                        [173, -309, 1, 0],
                        [159, -326, 1, 0],
                        [144, -340, 1, 0],
                        [140, -345, 1, 0],
                        [137, -340, 1, 0],
                        [135, -327, 1, 0],
                        [121, -267, 1, 0],
                        [84, -92, 1, 0],
                        [82, -87, 1, 0],
                        [56, -73, 1, 1],
                        [-130, -34, 0, 1],
                        [-138, -38, 1, 0],
                        [-148, -40, 1, 0],
                        [-165, -35, 1, 0],
                        [-181, -28, 1, 0],
                        [-190, -23, 1, 0],
                        [-193, -11, 1, 0],
                        [-190, -1, 1, 0],
                        [-178, 16, 1, 0],
                        [-165, 24, 1, 0],
                        [-143, 32, 1, 0],
                        [-131, 33, 1, 0],
                        [-110, 31, 1, 0],
                        [-105, 30, 1, 0],
                        [-123, 34, 1, 0],
                        [-127, 36, 1, 0],
                        [-122, 43, 1, 0],
                        [-104, 59, 1, 0],
                        [-86, 61, 1, 0],
                        [-66, 57, 1, 0],
                        [-47, 46, 1, 0],
                        [-29, 32, 1, 0],
                        [-12, 15, 1, 1],
                        [111, 24, 0, 1],
                        [161, 26, 2, 0],
                        [179, 25, 2, 0],
                        [213, 17, 2, 1],
                        [139, -38, 2, 1],
                        [55, -105, 0, 1],
                        [2, -156, 2, 1],
                        [-58, -126, 2, 1],
                        [-132, -100, 0, 1],
                        [-222, -98, 2, 1],
                        [-149, -129, 2, 1],
                        [-65, -148, 0, 1],
                        [11, -160, 2, 1],
                        [62, -388, 2, 1],
                        [53, -389, 2, 0],
                        [41, -389, 2, 0],
                        [27, -387, 2, 0],
                        [-17, -374, 2, 1],
                        [-96, -348, 0, 1],
                        [-166, -319, 2, 1],
                        [-223, -100, 2, 1],
                        [-140, -42, 2, 1],
                        [16, -159, 0, 1],
                        [80, -111, 2, 1],
                        [154, -52, 0, 1],
                        [232, 9, 2, 1],
                        [238, -220, 2, 1],
                        [186, -280, 2, 1],
                        [133, -338, 0, 1],
                        [85, -380, 2, 0],
                        [75, -385, 2, 0],
                        [63, -389, 2, 1]
                    ],
                    [
                        [-18, -29, 0, 1],
                        [-11, -26, 1, 0],
                        [-11, -14, 1, 0],
                        [-10, -9, 1, 0],
                        [-1, 2, 1, 0],
                        [9, 14, 1, 0],
                        [47, 29, 1, 0],
                        [81, 43, 1, 0],
                        [96, 56, 1, 0],
                        [123, 81, 1, 0],
                        [126, 109, 1, 0],
                        [127, 124, 1, 0],
                        [109, 124, 1, 0],
                        [80, 124, 1, 0],
                        [62, 122, 1, 0],
                        [49, 71, 1, 0],
                        [29, 58, 1, 0],
                        [-6, 33, 1, 0],
                        [-32, 23, 1, 0],
                        [-49, 19, 1, 0],
                        [-60, 12, 1, 0],
                        [-66, -14, 1, 0],
                        [-46, -34, 1, 0],
                        [-33, -32, 1, 0],
                        [-20, -29, 1, 0],
                        [0, -54, 1, 0],
                        [11, -66, 1, 0],
                        [24, -73, 1, 0],
                        [39, -71, 1, 0],
                        [55, -69, 1, 0],
                        [65, -57, 1, 0],
                        [149, 27, 1, 0],
                        [151, 36, 1, 0],
                        [152, 49, 1, 0],
                        [149, 53, 1, 0],
                        [144, 57, 1, 0],
                        [133, 58, 1, 0],
                        [121, 56, 1, 0],
                        [108, 54, 1, 0],
                        [93, 53, 1, 1],
                        [55, 117, 0, 1],
                        [42, 116, 1, 0],
                        [27, 116, 1, 0],
                        [22, 116, 1, 0],
                        [20, 110, 1, 0],
                        [23, 92, 1, 0],
                        [24, 83, 1, 0],
                        [19, 73, 1, 0],
                        [10, 64, 1, 0],
                        [3, 48, 1, 0],
                        [-1, 38, 1, 0],
                        [-8, 32, 1, 0],
                        [-23, 27, 1, 0],
                        [-31, 31, 1, 0],
                        [-40, 42, 1, 0],
                        [-53, 59, 1, 0],
                        [-71, 65, 1, 0],
                        [-93, 64, 1, 0],
                        [-112, 55, 1, 0],
                        [-127, 45, 1, 0],
                        [-138, 41, 1, 0],
                        [-176, 29, 1, 0],
                        [-206, 19, 1, 0],
                        [-215, 12, 1, 0],
                        [-220, 1, 1, 0],
                        [-224, -10, 1, 0],
                        [-221, -22, 1, 0],
                        [-211, -29, 1, 0],
                        [-201, -32, 1, 0],
                        [-185, -36, 1, 1],
                        [-165, -19, 0, 1],
                        [-177, -14, 1, 0],
                        [-184, -5, 1, 0],
                        [-182, 0, 1, 0],
                        [-167, 8, 1, 0],
                        [-152, 9, 1, 0],
                        [-123, 8, 1, 0],
                        [-96, 4, 1, 0],
                        [-85, -7, 1, 0],
                        [-73, -17, 1, 0],
                        [-66, -17, 1, 0],
                        [-67, -23, 1, 0],
                        [-75, -31, 1, 0],
                        [-81, -37, 1, 0],
                        [-121, -82, 1, 0],
                        [-129, -93, 1, 0],
                        [-128, -108, 1, 0],
                        [-129, -176, 1, 0],
                        [-92, -346, 1, 0],
                        [-86, -362, 1, 0],
                        [-81, -368, 1, 0],
                        [-68, -371, 1, 0],
                        [-41, -383, 1, 0],
                        [-30, -385, 1, 0],
                        [-18, -382, 1, 0],
                        [-12, -376, 1, 0],
                        [-19, -366, 1, 0],
                        [-27, -352, 1, 0],
                        [-37, -297, 1, 0],
                        [-61, -197, 1, 0],
                        [-68, -126, 1, 0],
                        [-68, -106, 1, 0],
                        [-35, -52, 1, 0],
                        [-21, -29, 1, 1],
                        [-141, -14, 0, 1],
                        [-73, -21, 1, 1],
                        [-1, -8, 0, 1],
                        [10, -8, 1, 0],
                        [23, -8, 1, 0],
                        [45, -13, 1, 0],
                        [52, -18, 1, 0],
                        [61, -28, 1, 0],
                        [62, -38, 1, 0],
                        [54, -46, 1, 0],
                        [47, -51, 1, 0],
                        [37, -50, 1, 0],
                        [26, -45, 1, 0],
                        [13, -37, 1, 0],
                        [7, -33, 1, 0],
                        [-1, -26, 1, 0],
                        [-4, -23, 1, 1],
                        [107, -30, 0, 1],
                        [131, -56, 1, 0],
                        [142, -71, 1, 0],
                        [144, -84, 1, 0],
                        [169, -229, 1, 0],
                        [182, -306, 1, 0],
                        [179, -315, 1, 0],
                        [175, -321, 1, 0],
                        [168, -327, 1, 0],
                        [158, -335, 1, 0],
                        [147, -345, 1, 0],
                        [141, -350, 1, 0],
                        [135, -348, 1, 0],
                        [132, -342, 1, 0],
                        [128, -329, 1, 0],
                        [106, -175, 1, 1],
                        [92, -112, 1, 0],
                        [87, -93, 1, 1],
                        [66, -58, 1, 1],
                        [152, 29, 0, 1],
                        [165, 28, 2, 0],
                        [184, 28, 2, 0],
                        [201, 27, 2, 0],
                        [219, 17, 2, 0],
                        [230, 11, 2, 0],
                        [231, 5, 2, 0],
                        [231, 1, 2, 0],
                        [232, -234, 2, 1],
                        [191, -279, 2, 1],
                        [130, -347, 0, 1],
                        [64, -398, 2, 1],
                        [-10, -372, 2, 1],
                        [-93, -352, 0, 1],
                        [-170, -319, 2, 1],
                        [-232, -98, 2, 1],
                        [-144, -18, 2, 1],
                        [64, -386, 0, 1],
                        [11, -164, 2, 1],
                        [82, -110, 2, 1],
                        [146, -63, 0, 1],
                        [225, 6, 2, 1],
                        [184, 4, 2, 0],
                        [163, 4, 2, 0],
                        [157, 0, 2, 0],
                        [109, -28, 2, 1],
                        [51, -82, 0, 1],
                        [40, -96, 2, 0],
                        [28, -113, 2, 0],
                        [14, -132, 2, 0],
                        [10, -144, 2, 0],
                        [10, -166, 2, 1],
                        [-60, -146, 2, 1],
                        [-143, -120, 0, 1],
                        [-231, -98, 2, 1],
                        [-165, -79, 2, 1],
                        [-135, -86, 2, 1],
                        [-63, -105, 0, 1],
                        [-11, -132, 2, 1],
                        [1, -157, 2, 1]
                    ],
                    [
                        [-52, -20, 0, 1],
                        [-221, -98, 2, 1],
                        [-166, -325, 2, 1],
                        [-96, -355, 2, 1],
                        [-9, -379, 0, 1],
                        [8, -384, 2, 0],
                        [21, -388, 2, 0],
                        [36, -392, 2, 0],
                        [52, -394, 2, 0],
                        [65, -393, 2, 0],
                        [81, -381, 2, 0],
                        [125, -341, 2, 1],
                        [184, -284, 0, 1],
                        [237, -226, 2, 1],
                        [231, 4, 2, 1],
                        [175, 11, 2, 1],
                        [230, 4, 0, 1],
                        [149, -54, 2, 1],
                        [83, -99, 0, 1],
                        [-3, -168, 2, 1],
                        [-55, -150, 2, 1],
                        [-148, -119, 0, 1],
                        [-219, -98, 2, 1],
                        [-144, -120, 0, 1],
                        [-104, -293, 1, 0],
                        [-97, -323, 1, 0],
                        [-91, -351, 1, 0],
                        [-89, -358, 1, 0],
                        [-84, -363, 1, 0],
                        [-67, -370, 1, 0],
                        [-33, -383, 1, 0],
                        [-25, -386, 1, 0],
                        [-19, -383, 1, 0],
                        [-15, -379, 1, 0],
                        [-23, -370, 1, 0],
                        [-31, -362, 1, 0],
                        [-66, -151, 1, 1],
                        [12, -164, 0, 1],
                        [59, -392, 2, 0],
                        [137, -351, 0, 1],
                        [151, -332, 1, 0],
                        [160, -322, 1, 0],
                        [174, -307, 1, 0],
                        [182, -296, 1, 0],
                        [184, -291, 1, 0],
                        [178, -286, 1, 0],
                        [176, -267, 1, 0],
                        [167, -199, 1, 0],
                        [156, -122, 1, 0],
                        [149, -78, 1, 0],
                        [147, -62, 1, 0],
                        [145, -55, 1, 0],
                        [139, -59, 1, 0],
                        [132, -65, 1, 0],
                        [118, -76, 1, 0],
                        [103, -85, 1, 0],
                        [89, -94, 1, 0],
                        [83, -99, 1, 0],
                        [84, -103, 1, 0],
                        [89, -124, 1, 0],
                        [121, -315, 1, 0],
                        [125, -334, 1, 0],
                        [128, -341, 1, 0],
                        [137, -350, 1, 1],
                        [147, -52, 0, 1],
                        [151, -31, 4, 0],
                        [155, -11, 4, 0],
                        [162, 2, 4, 0],
                        [174, 12, 4, 0],
                        [189, 25, 4, 0],
                        [223, 31, 4, 0],
                        [241, 34, 4, 0],
                        [262, 25, 4, 0],
                        [274, 17, 4, 0],
                        [290, 14, 4, 0],
                        [302, 14, 4, 0],
                        [306, 20, 4, 0],
                        [311, 33, 4, 0],
                        [311, 37, 4, 0],
                        [300, 40, 4, 0],
                        [288, 41, 4, 0],
                        [286, 44, 4, 0],
                        [300, 43, 4, 0],
                        [314, 42, 4, 0],
                        [333, 42, 4, 0],
                        [358, 50, 4, 0],
                        [375, 58, 4, 0],
                        [378, 69, 4, 0],
                        [373, 75, 4, 0],
                        [345, 92, 4, 0],
                        [306, 107, 4, 0],
                        [262, 108, 4, 0],
                        [185, 101, 4, 0],
                        [150, 99, 4, 0],
                        [139, 97, 4, 0],
                        [60, 65, 0, 1],
                        [72, 64, 4, 0],
                        [85, 61, 4, 0],
                        [96, 60, 4, 0],
                        [99, 59, 4, 0],
                        [108, 64, 4, 0],
                        [122, 77, 4, 0],
                        [136, 96, 4, 0],
                        [156, 125, 4, 0],
                        [172, 165, 4, 0],
                        [175, 204, 4, 0],
                        [174, 221, 4, 0],
                        [160, 238, 4, 0],
                        [148, 246, 4, 0],
                        [138, 251, 4, 0],
                        [132, 255, 4, 0],
                        [130, 261, 4, 0],
                        [132, 275, 4, 0],
                        [136, 287, 4, 0],
                        [141, 295, 4, 0],
                        [150, 298, 4, 0],
                        [162, 307, 4, 0],
                        [166, 315, 4, 0],
                        [168, 328, 4, 0],
                        [164, 340, 4, 0],
                        [154, 350, 4, 0],
                        [140, 354, 4, 0],
                        [124, 354, 4, 0],
                        [103, 349, 4, 0],
                        [93, 344, 4, 0],
                        [89, 343, 4, 0],
                        [79, 346, 4, 0],
                        [70, 349, 4, 0],
                        [61, 350, 4, 0],
                        [44, 356, 4, 0],
                        [28, 355, 4, 0],
                        [13, 347, 4, 0],
                        [-1, 339, 4, 0],
                        [-9, 331, 4, 0],
                        [-14, 323, 4, 0],
                        [-16, 318, 4, 0],
                        [-20, 319, 4, 0],
                        [-29, 320, 4, 0],
                        [-33, 322, 4, 0],
                        [-39, 320, 4, 0],
                        [-65, 311, 4, 0],
                        [-91, 300, 4, 0],
                        [-113, 274, 4, 0],
                        [-116, 253, 4, 0],
                        [-108, 239, 4, 0],
                        [-100, 233, 4, 0],
                        [-79, 231, 4, 0],
                        [-59, 237, 4, 0],
                        [-44, 240, 4, 0],
                        [-41, 237, 4, 0],
                        [-44, 229, 4, 0],
                        [-50, 212, 4, 0],
                        [-47, 199, 4, 0],
                        [-44, 178, 4, 0],
                        [-40, 152, 4, 0],
                        [4, 65, 4, 1],
                        [-31, 69, 4, 0],
                        [-67, 76, 4, 0],
                        [-94, 69, 4, 0],
                        [-119, 67, 4, 0],
                        [-167, 48, 4, 0],
                        [-187, 20, 4, 0],
                        [-218, -14, 4, 0],
                        [-227, -25, 4, 0],
                        [-225, -48, 4, 0],
                        [-217, -70, 4, 0],
                        [-208, -70, 4, 0],
                        [-195, -62, 4, 0],
                        [-180, -55, 4, 0],
                        [-156, -40, 4, 0],
                        [-150, -31, 4, 0],
                        [-142, -25, 4, 0],
                        [-136, -17, 4, 0],
                        [-141, -32, 4, 0],
                        [-142, -58, 4, 1],
                        [-112, -45, 0, 1],
                        [-99, -19, 4, 0],
                        [-95, -10, 4, 0],
                        [-91, -9, 4, 0],
                        [-77, -12, 4, 0],
                        [-52, -19, 4, 0],
                        [-31, -24, 4, 0],
                        [-20, -28, 4, 0],
                        [-16, -37, 4, 0],
                        [-16, -56, 4, 0],
                        [-16, -81, 4, 0],
                        [-12, -128, 4, 0],
                        [-12, -154, 4, 1],
                        [39, -127, 0, 1],
                        [43, -110, 4, 0],
                        [44, -87, 4, 0],
                        [47, -64, 4, 0],
                        [56, -25, 4, 0],
                        [70, -6, 4, 0],
                        [82, 10, 4, 0],
                        [95, 7, 4, 0],
                        [104, -4, 4, 0],
                        [111, -26, 4, 0],
                        [126, -68, 4, 1],
                        [26, 94, 0, 1],
                        [38, 93, 4, 0],
                        [66, 95, 4, 0],
                        [91, 101, 4, 0],
                        [110, 118, 4, 0],
                        [122, 138, 4, 0],
                        [128, 155, 4, 0],
                        [131, 179, 4, 0],
                        [130, 195, 4, 1],
                        [148, 140, 0, 1],
                        [141, 145, 4, 0],
                        [133, 149, 4, 0],
                        [128, 152, 4, 0],
                        [145, 193, 0, 1],
                        [145, 219, 4, 0],
                        [143, 230, 4, 0],
                        [143, 233, 4, 0],
                        [137, 236, 4, 0],
                        [131, 237, 4, 0],
                        [122, 240, 4, 0],
                        [119, 242, 4, 0],
                        [112, 241, 4, 0],
                        [99, 235, 4, 0],
                        [93, 233, 4, 0],
                        [82, 230, 4, 0],
                        [72, 224, 4, 0],
                        [72, 222, 4, 0],
                        [87, 221, 4, 0],
                        [99, 219, 4, 0],
                        [111, 216, 4, 0],
                        [121, 211, 4, 0],
                        [132, 202, 4, 0],
                        [141, 196, 4, 0],
                        [144, 192, 4, 1],
                        [107, 329, 0, 1],
                        [116, 332, 6, 0],
                        [132, 333, 6, 0],
                        [141, 333, 6, 0],
                        [148, 326, 6, 0],
                        [146, 316, 6, 0],
                        [141, 312, 6, 0],
                        [132, 309, 6, 0],
                        [120, 306, 6, 0],
                        [120, 303, 6, 0],
                        [121, 296, 6, 0],
                        [112, 276, 0, 1],
                        [100, 275, 4, 0],
                        [94, 275, 4, 0],
                        [89, 271, 4, 0],
                        [69, 262, 4, 1],
                        [46, 263, 0, 1],
                        [38, 263, 4, 0],
                        [26, 259, 4, 0],
                        [19, 254, 4, 0],
                        [8, 246, 4, 0],
                        [-1, 239, 4, 1],
                        [-30, 295, 0, 1],
                        [-43, 291, 6, 0],
                        [-55, 288, 6, 0],
                        [-68, 283, 6, 0],
                        [-77, 274, 6, 0],
                        [-86, 266, 6, 0],
                        [-86, 257, 6, 0],
                        [-83, 254, 4, 0],
                        [-75, 252, 6, 0],
                        [-57, 258, 6, 0],
                        [-32, 268, 6, 1],
                        [55, 240, 0, 1],
                        [49, 232, 4, 0],
                        [37, 222, 4, 0],
                        [28, 207, 4, 0],
                        [21, 189, 4, 0],
                        [15, 171, 4, 0],
                        [11, 155, 4, 0],
                        [9, 138, 4, 0],
                        [11, 122, 4, 0],
                        [18, 94, 4, 1],
                        [-101, 301, 0, 1],
                        [-130, 304, 2, 0],
                        [-155, 305, 2, 0],
                        [-185, 312, 2, 0],
                        [-210, 306, 2, 0],
                        [-320, 279, 2, 1],
                        [-282, 204, 2, 0],
                        [-254, 127, 2, 0],
                        [-235, 52, 2, 0],
                        [-229, 26, 2, 0],
                        [-231, -26, 2, 1],
                        [-234, 25, 0, 1],
                        [-238, 24, 1, 0],
                        [-250, 19, 1, 0],
                        [-255, 12, 1, 0],
                        [-257, 5, 1, 0],
                        [-255, -2, 1, 0],
                        [-246, -7, 1, 0],
                        [-241, -10, 1, 0],
                        [-233, -14, 1, 1],
                        [-233, -29, 0, 1],
                        [-239, -30, 1, 0],
                        [-247, -29, 1, 0],
                        [-259, -27, 1, 0],
                        [-272, -20, 1, 0],
                        [-281, -7, 1, 0],
                        [-281, 8, 1, 0],
                        [-277, 20, 1, 0],
                        [-268, 33, 1, 0],
                        [-258, 42, 1, 0],
                        [-238, 46, 1, 1],
                        [-249, 79, 0, 1],
                        [-264, 75, 1, 0],
                        [-281, 67, 1, 0],
                        [-295, 57, 1, 0],
                        [-304, 46, 1, 0],
                        [-313, 32, 1, 0],
                        [-316, 13, 1, 0],
                        [-312, -8, 1, 0],
                        [-306, -22, 1, 0],
                        [-298, -29, 1, 0],
                        [-284, -30, 1, 0],
                        [-281, -30, 1, 0],
                        [-296, -22, 1, 0],
                        [-312, -13, 1, 0],
                        [-335, 13, 1, 0],
                        [-339, 50, 1, 0],
                        [-332, 70, 1, 0],
                        [-313, 84, 1, 0],
                        [-287, 94, 1, 0],
                        [-251, 100, 1, 1]
                    ],
                    [
                        [-62, 224, 0, 1],
                        [-340, 227, 2, 1],
                        [-222, -97, 2, 1],
                        [-74, -20, 2, 1],
                        [-35, -152, 0, 1],
                        [-43, -135, 4, 0],
                        [-55, -107, 4, 0],
                        [-63, -72, 4, 0],
                        [-70, -40, 4, 0],
                        [-70, -17, 4, 0],
                        [-62, -2, 4, 0],
                        [-51, 13, 4, 0],
                        [-48, 17, 4, 0],
                        [-53, 19, 4, 0],
                        [-70, 28, 4, 0],
                        [-175, 92, 4, 0],
                        [-200, 116, 4, 0],
                        [-227, 135, 4, 0],
                        [-234, 152, 4, 0],
                        [-234, 167, 4, 0],
                        [-221, 171, 4, 0],
                        [-203, 171, 4, 0],
                        [-180, 159, 4, 0],
                        [-162, 147, 4, 0],
                        [-150, 139, 4, 0],
                        [-145, 135, 4, 0],
                        [-158, 150, 4, 0],
                        [-166, 163, 4, 0],
                        [-175, 177, 4, 0],
                        [-175, 186, 4, 0],
                        [-166, 184, 4, 0],
                        [-150, 171, 4, 0],
                        [-69, 101, 4, 0],
                        [-39, 78, 4, 0],
                        [-28, 69, 4, 0],
                        [-31, 76, 4, 0],
                        [-34, 82, 4, 0],
                        [-40, 98, 4, 0],
                        [-52, 133, 4, 0],
                        [-58, 168, 4, 0],
                        [-61, 213, 4, 0],
                        [-61, 221, 4, 0],
                        [-56, 229, 4, 0],
                        [-56, 231, 4, 0],
                        [-58, 234, 4, 0],
                        [-66, 238, 4, 0],
                        [-70, 243, 4, 0],
                        [-72, 254, 4, 0],
                        [-73, 276, 4, 0],
                        [-71, 310, 4, 0],
                        [-53, 339, 4, 0],
                        [-43, 347, 4, 0],
                        [-29, 347, 4, 0],
                        [-12, 339, 4, 0],
                        [5, 325, 4, 0],
                        [26, 309, 4, 0],
                        [34, 299, 4, 0],
                        [46, 298, 4, 0],
                        [64, 300, 4, 0],
                        [74, 300, 4, 0],
                        [79, 301, 4, 0],
                        [81, 307, 4, 0],
                        [82, 320, 4, 0],
                        [85, 342, 4, 0],
                        [89, 352, 4, 0],
                        [98, 360, 4, 0],
                        [108, 362, 4, 0],
                        [121, 356, 4, 0],
                        [134, 343, 4, 0],
                        [147, 322, 4, 0],
                        [154, 290, 4, 0],
                        [157, 266, 4, 0],
                        [157, 259, 4, 0],
                        [157, 258, 4, 0],
                        [149, 262, 4, 0],
                        [143, 266, 4, 0],
                        [135, 270, 4, 0],
                        [126, 277, 4, 0],
                        [123, 279, 4, 0],
                        [157, 256, 4, 0],
                        [164, 247, 4, 0],
                        [172, 235, 4, 0],
                        [181, 211, 4, 0],
                        [185, 196, 4, 1],
                        [185, 189, 4, 0],
                        [173, 195, 4, 0],
                        [179, 190, 4, 0],
                        [188, 185, 4, 0],
                        [200, 175, 4, 0],
                        [206, 162, 4, 0],
                        [205, 150, 4, 0],
                        [198, 138, 4, 0],
                        [184, 124, 4, 0],
                        [163, 105, 4, 0],
                        [153, 96, 4, 0],
                        [137, 87, 4, 0],
                        [121, 77, 4, 0],
                        [92, 74, 4, 1],
                        [220, 163, 0, 1],
                        [231, 169, 4, 0],
                        [250, 179, 4, 0],
                        [263, 189, 4, 0],
                        [274, 190, 4, 0],
                        [287, 190, 4, 0],
                        [288, 179, 4, 0],
                        [284, 169, 4, 0],
                        [276, 156, 4, 0],
                        [274, 153, 4, 0],
                        [286, 161, 4, 0],
                        [303, 165, 4, 0],
                        [318, 171, 4, 0],
                        [332, 173, 4, 0],
                        [337, 174, 4, 0],
                        [344, 172, 4, 0],
                        [342, 163, 4, 0],
                        [328, 149, 4, 0],
                        [315, 132, 4, 0],
                        [294, 116, 4, 0],
                        [268, 98, 4, 0],
                        [245, 82, 4, 0],
                        [201, 55, 4, 0],
                        [181, 41, 4, 0],
                        [174, 37, 4, 0],
                        [168, 50, 4, 0],
                        [163, 56, 4, 0],
                        [161, 57, 4, 0],
                        [164, 47, 4, 0],
                        [168, 39, 4, 0],
                        [169, 29, 4, 0],
                        [169, -2, 4, 0],
                        [166, -30, 4, 1],
                        [170, 13, 0, 1],
                        [234, 12, 2, 1],
                        [241, -221, 2, 1],
                        [185, -283, 2, 1],
                        [145, -347, 0, 1],
                        [133, -349, 2, 0],
                        [124, -349, 2, 0],
                        [121, -353, 2, 0],
                        [115, -360, 2, 0],
                        [109, -365, 2, 0],
                        [100, -372, 2, 0],
                        [95, -378, 2, 0],
                        [84, -384, 2, 0],
                        [74, -389, 2, 0],
                        [68, -392, 2, 0],
                        [50, -392, 2, 0],
                        [-22, -382, 2, 1],
                        [-86, -344, 0, 1],
                        [-156, -322, 2, 1],
                        [-214, -100, 2, 1],
                        [-140, -124, 2, 1],
                        [-60, -149, 0, 1],
                        [6, -160, 2, 1],
                        [66, -390, 2, 0],
                        [143, -345, 0, 1],
                        [170, -317, 1, 0],
                        [177, -305, 1, 0],
                        [183, -299, 1, 0],
                        [184, -296, 1, 0],
                        [184, -276, 1, 0],
                        [153, -53, 1, 0],
                        [150, -51, 1, 0],
                        [143, -57, 1, 0],
                        [138, -62, 1, 0],
                        [124, -70, 1, 0],
                        [110, -83, 1, 0],
                        [99, -91, 1, 0],
                        [94, -97, 1, 0],
                        [96, -102, 1, 0],
                        [103, -156, 1, 0],
                        [144, -342, 1, 1],
                        [-24, -381, 0, 1],
                        [-47, -380, 1, 0],
                        [-64, -376, 1, 0],
                        [-73, -375, 1, 0],
                        [-80, -371, 1, 0],
                        [-83, -349, 1, 0],
                        [-95, -305, 1, 0],
                        [-117, -222, 1, 0],
                        [-137, -139, 1, 0],
                        [-139, -132, 1, 0],
                        [-140, -126, 1, 0],
                        [-132, -127, 1, 0],
                        [-124, -131, 1, 0],
                        [-105, -137, 1, 0],
                        [-84, -142, 1, 0],
                        [-71, -149, 1, 0],
                        [-65, -149, 1, 0],
                        [-63, -160, 1, 0],
                        [-55, -211, 1, 0],
                        [-24, -379, 1, 1],
                        [40, -128, 0, 1],
                        [28, -108, 4, 0],
                        [13, -77, 4, 0],
                        [10, -53, 4, 0],
                        [12, -5, 4, 0],
                        [27, 29, 4, 0],
                        [50, 42, 4, 0],
                        [78, 46, 4, 0],
                        [98, 45, 4, 0],
                        [113, 38, 4, 0],
                        [123, 21, 4, 0],
                        [131, -8, 4, 0],
                        [137, -55, 4, 1],
                        [37, 91, 0, 1],
                        [23, 102, 4, 0],
                        [12, 112, 4, 0],
                        [0, 122, 4, 0],
                        [-6, 135, 4, 0],
                        [-1, 150, 4, 0],
                        [9, 165, 4, 0],
                        [22, 173, 4, 0],
                        [36, 179, 4, 0],
                        [42, 177, 4, 1],
                        [30, 113, 0, 1],
                        [40, 113, 4, 0],
                        [68, 114, 4, 0],
                        [88, 115, 4, 0],
                        [116, 122, 4, 0],
                        [133, 128, 4, 0],
                        [140, 128, 4, 0],
                        [150, 129, 4, 0],
                        [167, 131, 4, 0],
                        [178, 138, 4, 0],
                        [189, 142, 4, 0],
                        [134, 129, 0, 1],
                        [139, 142, 4, 0],
                        [143, 156, 4, 0],
                        [147, 163, 4, 0],
                        [154, 172, 4, 0],
                        [157, 183, 4, 0],
                        [155, 184, 4, 0],
                        [143, 186, 4, 0],
                        [127, 187, 4, 0],
                        [118, 188, 4, 0],
                        [111, 188, 4, 0],
                        [107, 188, 4, 0],
                        [114, 181, 4, 0],
                        [126, 174, 4, 0],
                        [133, 167, 4, 0],
                        [142, 158, 4, 1],
                        [140, 214, 0, 1],
                        [124, 213, 4, 0],
                        [113, 212, 4, 0],
                        [108, 208, 4, 0],
                        [100, 204, 4, 0],
                        [68, 204, 0, 1],
                        [65, 207, 4, 0],
                        [56, 211, 4, 0],
                        [48, 211, 4, 0],
                        [45, 211, 4, 0],
                        [30, 208, 4, 0],
                        [21, 205, 4, 0],
                        [12, 203, 4, 0],
                        [8, 203, 4, 1],
                        [140, 294, 0, 1],
                        [141, 306, 6, 0],
                        [136, 319, 6, 0],
                        [131, 328, 6, 0],
                        [119, 340, 6, 0],
                        [108, 343, 6, 0],
                        [102, 340, 6, 0],
                        [100, 331, 6, 0],
                        [100, 321, 6, 0],
                        [106, 305, 6, 0],
                        [112, 292, 6, 1],
                        [-6, 276, 0, 1],
                        [-9, 288, 6, 0],
                        [-16, 309, 6, 0],
                        [-23, 318, 6, 0],
                        [-31, 323, 6, 0],
                        [-41, 321, 6, 0],
                        [-51, 309, 6, 0],
                        [-52, 292, 6, 0],
                        [-49, 273, 6, 0],
                        [-40, 255, 6, 1],
                        [-293, 98, 0, 1],
                        [-320, 91, 1, 0],
                        [-340, 87, 1, 0],
                        [-357, 69, 1, 0],
                        [-378, 51, 1, 0],
                        [-386, 35, 1, 0],
                        [-386, 15, 1, 0],
                        [-392, 7, 1, 0],
                        [-372, 12, 1, 0],
                        [-356, 25, 1, 0],
                        [-340, 35, 1, 0],
                        [-318, 52, 1, 0],
                        [-300, 67, 1, 0],
                        [-283, 73, 1, 1],
                        [-268, 31, 0, 1],
                        [-285, 7, 1, 0],
                        [-298, -18, 1, 0],
                        [-302, -40, 1, 0],
                        [-302, -64, 1, 0],
                        [-302, -69, 1, 0],
                        [-279, -61, 1, 0],
                        [-260, -50, 1, 0],
                        [-242, -44, 1, 1],
                        [7, -153, 0, 1],
                        [231, 10, 2, 1]
                    ],
                    [
                        [-61, 245, 0, 1],
                        [-321, 253, 2, 1],
                        [-208, -75, 2, 0],
                        [-211, -83, 2, 0],
                        [-216, -89, 2, 0],
                        [-216, -91, 2, 0],
                        [-73, -28, 2, 1],
                        [-17, -152, 0, 1],
                        [-28, -142, 4, 0],
                        [-48, -118, 4, 0],
                        [-61, -97, 4, 0],
                        [-62, -55, 4, 0],
                        [-62, -27, 4, 0],
                        [-44, 12, 4, 0],
                        [-42, 25, 4, 0],
                        [-137, 64, 4, 0],
                        [-176, 79, 4, 0],
                        [-218, 98, 4, 0],
                        [-224, 116, 4, 0],
                        [-226, 133, 4, 0],
                        [-226, 148, 4, 0],
                        [-210, 162, 4, 0],
                        [-195, 169, 4, 0],
                        [-176, 170, 4, 0],
                        [-156, 163, 4, 0],
                        [-148, 151, 4, 0],
                        [-138, 139, 4, 0],
                        [-136, 140, 4, 0],
                        [-132, 148, 4, 0],
                        [-125, 159, 4, 0],
                        [-121, 167, 4, 0],
                        [-118, 171, 4, 0],
                        [-107, 163, 4, 0],
                        [-101, 158, 4, 0],
                        [-98, 151, 4, 0],
                        [-95, 128, 4, 0],
                        [-93, 119, 4, 0],
                        [-26, 86, 4, 0],
                        [-13, 89, 4, 0],
                        [-3, 95, 4, 0],
                        [-5, 103, 4, 0],
                        [-12, 114, 4, 0],
                        [-42, 162, 4, 0],
                        [-47, 207, 4, 0],
                        [-50, 245, 4, 0],
                        [-64, 258, 4, 0],
                        [-86, 284, 4, 0],
                        [-87, 309, 4, 0],
                        [-82, 338, 4, 0],
                        [-73, 354, 4, 0],
                        [-56, 358, 4, 0],
                        [-33, 360, 4, 0],
                        [-16, 350, 4, 0],
                        [1, 332, 4, 0],
                        [7, 320, 4, 0],
                        [30, 326, 4, 0],
                        [48, 332, 4, 0],
                        [64, 337, 4, 0],
                        [77, 332, 4, 0],
                        [86, 326, 4, 0],
                        [96, 321, 4, 0],
                        [98, 319, 4, 0],
                        [98, 322, 4, 0],
                        [97, 330, 4, 0],
                        [94, 339, 4, 0],
                        [92, 348, 4, 0],
                        [91, 360, 4, 0],
                        [95, 366, 4, 0],
                        [104, 370, 4, 0],
                        [110, 374, 4, 0],
                        [124, 374, 4, 0],
                        [136, 374, 4, 0],
                        [147, 372, 4, 0],
                        [154, 367, 4, 0],
                        [162, 351, 4, 0],
                        [166, 340, 4, 0],
                        [167, 326, 4, 0],
                        [163, 314, 4, 0],
                        [158, 298, 4, 0],
                        [153, 290, 4, 0],
                        [150, 286, 4, 0],
                        [150, 284, 4, 0],
                        [150, 280, 4, 0],
                        [153, 274, 4, 0],
                        [158, 265, 4, 0],
                        [166, 240, 4, 0],
                        [168, 211, 4, 0],
                        [168, 208, 4, 0],
                        [164, 205, 4, 0],
                        [158, 205, 4, 0],
                        [152, 204, 4, 0],
                        [128, 204, 4, 0],
                        [100, 204, 4, 0],
                        [75, 203, 4, 0],
                        [55, 191, 4, 0],
                        [32, 177, 4, 0],
                        [25, 159, 4, 0],
                        [16, 146, 4, 0],
                        [14, 131, 4, 0],
                        [12, 117, 4, 0],
                        [17, 99, 4, 0],
                        [36, 79, 4, 1],
                        [27, 123, 0, 1],
                        [32, 130, 4, 0],
                        [34, 134, 4, 0],
                        [36, 131, 4, 0],
                        [41, 122, 4, 0],
                        [47, 114, 4, 0],
                        [63, 109, 4, 0],
                        [81, 103, 4, 0],
                        [101, 106, 4, 0],
                        [113, 111, 4, 0],
                        [123, 130, 4, 0],
                        [136, 149, 4, 0],
                        [143, 162, 4, 0],
                        [155, 177, 4, 0],
                        [161, 184, 4, 0],
                        [164, 188, 4, 0],
                        [159, 191, 4, 0],
                        [155, 194, 4, 0],
                        [150, 201, 4, 1],
                        [92, 197, 0, 1],
                        [97, 191, 4, 0],
                        [107, 186, 4, 0],
                        [115, 178, 4, 0],
                        [125, 170, 4, 0],
                        [134, 166, 4, 0],
                        [139, 157, 4, 1],
                        [118, 121, 0, 1],
                        [125, 117, 4, 0],
                        [131, 114, 4, 0],
                        [139, 114, 4, 0],
                        [150, 116, 4, 0],
                        [155, 123, 4, 1],
                        [166, 208, 0, 1],
                        [176, 197, 4, 0],
                        [188, 190, 4, 0],
                        [194, 184, 4, 0],
                        [196, 154, 4, 0],
                        [194, 138, 4, 0],
                        [173, 111, 4, 0],
                        [161, 98, 4, 0],
                        [143, 86, 4, 0],
                        [129, 78, 4, 0],
                        [108, 70, 4, 0],
                        [85, 68, 4, 0],
                        [74, 67, 4, 0],
                        [56, 66, 4, 1],
                        [161, -33, 0, 1],
                        [158, -7, 4, 0],
                        [157, 13, 4, 0],
                        [147, 28, 4, 0],
                        [133, 56, 4, 0],
                        [127, 74, 4, 1],
                        [197, 137, 0, 1],
                        [206, 139, 4, 0],
                        [218, 148, 4, 0],
                        [223, 163, 4, 0],
                        [238, 185, 4, 0],
                        [253, 187, 4, 0],
                        [267, 183, 4, 0],
                        [272, 163, 4, 0],
                        [270, 154, 4, 0],
                        [282, 159, 4, 0],
                        [293, 159, 4, 0],
                        [307, 159, 4, 0],
                        [316, 150, 4, 0],
                        [318, 141, 4, 0],
                        [311, 128, 4, 0],
                        [298, 116, 4, 0],
                        [288, 99, 4, 0],
                        [267, 83, 4, 0],
                        [239, 66, 4, 0],
                        [217, 51, 4, 0],
                        [192, 38, 4, 0],
                        [170, 26, 4, 0],
                        [159, 23, 4, 1],
                        [229, 15, 2, 1],
                        [240, -228, 2, 1],
                        [185, -282, 2, 1],
                        [124, -345, 0, 1],
                        [109, -360, 2, 0],
                        [95, -373, 2, 0],
                        [82, -383, 2, 0],
                        [66, -387, 2, 0],
                        [53, -393, 2, 0],
                        [42, -395, 2, 0],
                        [25, -392, 2, 0],
                        [-18, -383, 2, 1],
                        [-96, -356, 0, 1],
                        [-167, -324, 2, 1],
                        [-224, -98, 2, 1],
                        [-72, -150, 2, 1],
                        [1, -155, 2, 1],
                        [59, -390, 2, 1],
                        [138, -339, 0, 1],
                        [159, -325, 1, 0],
                        [172, -314, 1, 0],
                        [182, -305, 1, 0],
                        [184, -298, 1, 0],
                        [184, -281, 1, 0],
                        [173, -219, 1, 0],
                        [155, -87, 1, 0],
                        [148, -70, 1, 0],
                        [143, -53, 1, 0],
                        [135, -56, 1, 0],
                        [122, -67, 1, 0],
                        [114, -79, 1, 0],
                        [92, -90, 1, 0],
                        [87, -97, 1, 0],
                        [84, -103, 1, 0],
                        [89, -118, 1, 0],
                        [100, -170, 1, 0],
                        [135, -340, 1, 1],
                        [-26, -389, 0, 1],
                        [-77, -368, 1, 0],
                        [-87, -363, 1, 0],
                        [-90, -358, 1, 0],
                        [-95, -337, 1, 0],
                        [-144, -129, 1, 0],
                        [-144, -128, 1, 0],
                        [-133, -131, 1, 0],
                        [-113, -137, 1, 0],
                        [-101, -142, 1, 0],
                        [-78, -150, 1, 0],
                        [-75, -153, 1, 0],
                        [-71, -161, 1, 0],
                        [-64, -194, 1, 0],
                        [-25, -389, 1, 1],
                        [26, -141, 0, 1],
                        [81, -101, 2, 1],
                        [145, -51, 0, 1],
                        [228, 11, 2, 1],
                        [160, -32, 0, 1],
                        [150, -22, 4, 0],
                        [141, -7, 4, 0],
                        [130, 9, 4, 0],
                        [117, 23, 4, 0],
                        [99, 27, 4, 0],
                        [83, 29, 4, 0],
                        [68, 29, 4, 0],
                        [55, 17, 4, 0],
                        [39, 4, 4, 0],
                        [24, -13, 4, 0],
                        [17, -31, 4, 0],
                        [6, -56, 4, 0],
                        [8, -80, 4, 0],
                        [11, -102, 4, 0],
                        [27, -140, 4, 1],
                        [120, 221, 0, 1],
                        [124, 226, 3, 0],
                        [123, 234, 3, 0],
                        [122, 242, 3, 0],
                        [117, 248, 3, 0],
                        [110, 249, 3, 0],
                        [109, 242, 3, 0],
                        [111, 234, 3, 0],
                        [113, 229, 3, 0],
                        [120, 222, 3, 1],
                        [66, 218, 0, 1],
                        [60, 214, 3, 0],
                        [53, 215, 3, 0],
                        [50, 219, 3, 0],
                        [47, 226, 3, 0],
                        [48, 235, 3, 0],
                        [50, 242, 3, 0],
                        [53, 245, 3, 0],
                        [64, 243, 3, 0],
                        [67, 240, 3, 0],
                        [67, 233, 3, 0],
                        [66, 223, 3, 0],
                        [66, 218, 3, 1],
                        [139, 305, 0, 1],
                        [145, 312, 6, 0],
                        [149, 323, 6, 0],
                        [146, 342, 6, 0],
                        [140, 354, 6, 0],
                        [135, 359, 6, 0],
                        [126, 359, 6, 0],
                        [121, 351, 6, 0],
                        [116, 339, 6, 0],
                        [113, 332, 6, 0],
                        [110, 315, 6, 1],
                        [-13, 286, 0, 1],
                        [-22, 304, 6, 0],
                        [-23, 314, 6, 0],
                        [-31, 320, 6, 0],
                        [-43, 322, 6, 0],
                        [-54, 321, 6, 0],
                        [-60, 312, 6, 0],
                        [-61, 304, 6, 0],
                        [-61, 296, 6, 0],
                        [-59, 289, 6, 0],
                        [-53, 283, 6, 0],
                        [-41, 274, 6, 1],
                        [-273, 92, 0, 1],
                        [-318, 82, 1, 0],
                        [-350, 61, 1, 0],
                        [-361, 50, 1, 0],
                        [-376, 30, 1, 0],
                        [-383, 15, 1, 0],
                        [-388, -2, 1, 0],
                        [-390, -20, 1, 0],
                        [-389, -32, 1, 0],
                        [-383, -41, 1, 0],
                        [-375, -37, 1, 0],
                        [-373, -27, 1, 0],
                        [-359, -2, 1, 0],
                        [-347, 23, 1, 0],
                        [-333, 27, 1, 0],
                        [-315, 32, 1, 0],
                        [-298, 45, 1, 0],
                        [-282, 56, 1, 0],
                        [-265, 76, 1, 1],
                        [-252, 46, 0, 1],
                        [-258, 36, 1, 0],
                        [-268, 21, 1, 0],
                        [-277, 5, 1, 0],
                        [-283, -7, 1, 0],
                        [-289, -26, 1, 0],
                        [-290, -34, 1, 0],
                        [-276, -35, 1, 0],
                        [-260, -38, 1, 0],
                        [-251, -36, 1, 0],
                        [-242, -29, 1, 0],
                        [-232, -15, 1, 1]
                    ],
                    [
                        [-368, 342, 0, 1],
                        [-368, 342, 7, 1],
                        [-130, 290, 0, 1],
                        [-130, 290, 7, 1],
                        [16, 108, 0, 1],
                        [16, 108, 7, 1],
                        [-195, 188, 0, 1],
                        [-195, 188, 7, 1],
                        [-72, -47, 0, 1],
                        [-72, -47, 7, 1],
                        [-252, -188, 0, 1],
                        [-252, -188, 7, 1],
                        [-80, -364, 0, 1],
                        [-80, -364, 7, 1],
                        [137, -299, 0, 1],
                        [137, -299, 7, 1],
                        [207, -105, 0, 1],
                        [207, -105, 7, 1],
                        [305, -15, 0, 1],
                        [305, -15, 7, 1],
                        [124, 156, 0, 1],
                        [124, 156, 7, 1],
                        [381, 394, 0, 1],
                        [381, 394, 7, 1]
                    ],
                    [
                        [-374, 322, 0, 1],
                        [-374, 322, 7, 1],
                        [-110, 270, 0, 1],
                        [-110, 270, 7, 1],
                        [18, 88, 0, 1],
                        [18, 88, 7, 1],
                        [-203, 168, 0, 1],
                        [-203, 168, 7, 1],
                        [-80, -67, 0, 1],
                        [-80, -67, 7, 1],
                        [-255, -208, 0, 1],
                        [-255, -208, 7, 1],
                        [-86, -384, 0, 1],
                        [-86, -384, 7, 1],
                        [138, -319, 0, 1],
                        [138, -319, 7, 1],
                        [199, -125, 0, 1],
                        [199, -125, 7, 1],
                        [297, -35, 0, 1],
                        [297, -35, 7, 1],
                        [132, 136, 0, 1],
                        [132, 136, 7, 1],
                        [387, 374, 0, 1],
                        [387, 374, 7, 1]
                    ],
                    [
                        [-372, 302, 0, 1],
                        [-372, 302, 7, 1],
                        [-118, 250, 0, 1],
                        [-118, 250, 7, 1],
                        [36, 68, 0, 1],
                        [36, 68, 7, 1],
                        [-204, 148, 0, 1],
                        [-204, 148, 7, 1],
                        [-86, -87, 0, 1],
                        [-86, -87, 7, 1],
                        [-263, -228, 0, 1],
                        [-263, -228, 7, 1],
                        [-79, 396, 0, 1],
                        [-79, 396, 7, 1],
                        [139, -339, 0, 1],
                        [139, -339, 7, 1],
                        [217, -145, 0, 1],
                        [217, -145, 7, 1],
                        [300, -55, 0, 1],
                        [300, -55, 7, 1],
                        [124, 116, 0, 1],
                        [124, 116, 7, 1],
                        [381, 354, 0, 1],
                        [381, 354, 7, 1]
                    ],
                    [
                        [-369, 282, 0, 1],
                        [-369, 282, 7, 1],
                        [-126, 230, 0, 1],
                        [-126, 230, 7, 1],
                        [28, 48, 0, 1],
                        [28, 48, 7, 1],
                        [-202, 128, 0, 1],
                        [-202, 128, 7, 1],
                        [-64, -107, 0, 1],
                        [-64, -107, 7, 1],
                        [-260, -248, 0, 1],
                        [-260, -248, 7, 1],
                        [-73, 376, 0, 1],
                        [-73, 376, 7, 1],
                        [140, -359, 0, 1],
                        [140, -359, 7, 1],
                        [209, -165, 0, 1],
                        [209, -165, 7, 1],
                        [306, -75, 0, 1],
                        [306, -75, 7, 1],
                        [132, 96, 0, 1],
                        [132, 96, 7, 1],
                        [389, 334, 0, 1],
                        [389, 334, 7, 1]
                    ],
                    [
                        [-363, 262, 0, 1],
                        [-363, 262, 7, 1],
                        [-127, 210, 0, 1],
                        [-127, 210, 7, 1],
                        [23, 28, 0, 1],
                        [23, 28, 7, 1],
                        [-203, 108, 0, 1],
                        [-203, 108, 7, 1],
                        [-72, -127, 0, 1],
                        [-72, -127, 7, 1],
                        [-268, -268, 0, 1],
                        [-268, -268, 7, 1],
                        [-80, 356, 0, 1],
                        [-80, 356, 7, 1],
                        [160, -379, 0, 1],
                        [160, -379, 7, 1],
                        [202, -185, 0, 1],
                        [202, -185, 7, 1],
                        [302, -95, 0, 1],
                        [302, -95, 7, 1],
                        [128, 76, 0, 1],
                        [128, 76, 7, 1],
                        [393, 314, 0, 1],
                        [393, 314, 7, 1]
                    ],
                    [
                        [-371, 242, 0, 1],
                        [-371, 242, 7, 1],
                        [-124, 190, 0, 1],
                        [-124, 190, 7, 1],
                        [15, 8, 0, 1],
                        [15, 8, 7, 1],
                        [-198, 88, 0, 1],
                        [-198, 88, 7, 1],
                        [-77, -147, 0, 1],
                        [-77, -147, 7, 1],
                        [-260, -288, 0, 1],
                        [-260, -288, 7, 1],
                        [-87, 336, 0, 1],
                        [-87, 336, 7, 1],
                        [152, -399, 0, 1],
                        [152, -399, 7, 1],
                        [197, -205, 0, 1],
                        [197, -205, 7, 1],
                        [295, -115, 0, 1],
                        [295, -115, 7, 1],
                        [120, 56, 0, 1],
                        [120, 56, 7, 1],
                        [385, 294, 0, 1],
                        [385, 294, 7, 1]
                    ],
                    [
                        [-367, 222, 0, 1],
                        [-367, 222, 7, 1],
                        [-127, 170, 0, 1],
                        [-127, 170, 7, 1],
                        [22, -12, 0, 1],
                        [22, -12, 7, 1],
                        [-200, 68, 0, 1],
                        [-200, 68, 7, 1],
                        [-73, -167, 0, 1],
                        [-73, -167, 7, 1],
                        [-262, -308, 0, 1],
                        [-262, -308, 7, 1],
                        [-65, 316, 0, 1],
                        [-65, 316, 7, 1],
                        [144, 381, 0, 1],
                        [144, 381, 7, 1],
                        [220, -225, 0, 1],
                        [220, -225, 7, 1],
                        [300, -135, 0, 1],
                        [300, -135, 7, 1],
                        [118, 36, 0, 1],
                        [118, 36, 7, 1],
                        [400, 274, 0, 1],
                        [400, 274, 7, 1]
                    ],
                    [
                        [-369, 202, 0, 1],
                        [-369, 202, 7, 1],
                        [-124, 150, 0, 1],
                        [-124, 150, 7, 1],
                        [26, -32, 0, 1],
                        [26, -32, 7, 1],
                        [-200, 48, 0, 1],
                        [-200, 48, 7, 1],
                        [-80, -187, 0, 1],
                        [-80, -187, 7, 1],
                        [-264, -328, 0, 1],
                        [-264, -328, 7, 1],
                        [-73, 296, 0, 1],
                        [-73, 296, 7, 1],
                        [161, 361, 0, 1],
                        [161, 361, 7, 1],
                        [212, -245, 0, 1],
                        [212, -245, 7, 1],
                        [299, -155, 0, 1],
                        [299, -155, 7, 1],
                        [140, 16, 0, 1],
                        [140, 16, 7, 1],
                        [395, 254, 0, 1],
                        [395, 254, 7, 1]
                    ],
                    [
                        [-366, 182, 0, 1],
                        [-366, 182, 7, 1],
                        [-119, 130, 0, 1],
                        [-119, 130, 7, 1],
                        [27, -52, 0, 1],
                        [27, -52, 7, 1],
                        [-198, 28, 0, 1],
                        [-198, 28, 7, 1],
                        [-80, -207, 0, 1],
                        [-80, -207, 7, 1],
                        [-258, -348, 0, 1],
                        [-258, -348, 7, 1],
                        [-81, 276, 0, 1],
                        [-81, 276, 7, 1],
                        [153, 341, 0, 1],
                        [153, 341, 7, 1],
                        [209, -265, 0, 1],
                        [209, -265, 7, 1],
                        [302, -175, 0, 1],
                        [302, -175, 7, 1],
                        [132, -4, 0, 1],
                        [132, -4, 7, 1],
                        [387, 234, 0, 1],
                        [387, 234, 7, 1]
                    ],
                    [
                        [-369, 162, 0, 1],
                        [-369, 162, 7, 1],
                        [-125, 110, 0, 1],
                        [-125, 110, 7, 1],
                        [29, -72, 0, 1],
                        [29, -72, 7, 1],
                        [-194, 8, 0, 1],
                        [-194, 8, 7, 1],
                        [-80, -227, 0, 1],
                        [-80, -227, 7, 1],
                        [-266, -368, 0, 1],
                        [-266, -368, 7, 1],
                        [-82, 256, 0, 1],
                        [-82, 256, 7, 1],
                        [153, 321, 0, 1],
                        [153, 321, 7, 1],
                        [203, -285, 0, 1],
                        [203, -285, 7, 1],
                        [297, -195, 0, 1],
                        [297, -195, 7, 1],
                        [124, -24, 0, 1],
                        [124, -24, 7, 1],
                        [388, 214, 0, 1],
                        [388, 214, 7, 1]
                    ],
                    [
                        [-364, 142, 0, 1],
                        [-364, 142, 7, 1],
                        [-129, 90, 0, 1],
                        [-129, 90, 7, 1],
                        [29, -92, 0, 1],
                        [29, -92, 7, 1],
                        [-196, -12, 0, 1],
                        [-196, -12, 7, 1],
                        [-83, -247, 0, 1],
                        [-83, -247, 7, 1],
                        [-244, -388, 0, 1],
                        [-244, -388, 7, 1],
                        [-88, 236, 0, 1],
                        [-88, 236, 7, 1],
                        [145, 301, 0, 1],
                        [145, 301, 7, 1],
                        [201, -305, 0, 1],
                        [201, -305, 7, 1],
                        [314, -215, 0, 1],
                        [314, -215, 7, 1],
                        [125, -44, 0, 1],
                        [125, -44, 7, 1],
                        [380, 194, 0, 1],
                        [380, 194, 7, 1]
                    ],
                    [
                        [-360, 122, 0, 1],
                        [-360, 122, 7, 1],
                        [-127, 70, 0, 1],
                        [-127, 70, 7, 1],
                        [21, -112, 0, 1],
                        [21, -112, 7, 1],
                        [-204, -32, 0, 1],
                        [-204, -32, 7, 1],
                        [-80, -267, 0, 1],
                        [-80, -267, 7, 1],
                        [-252, 392, 0, 1],
                        [-252, 392, 7, 1],
                        [-67, 216, 0, 1],
                        [-67, 216, 7, 1],
                        [152, 281, 0, 1],
                        [152, 281, 7, 1],
                        [197, -325, 0, 1],
                        [197, -325, 7, 1],
                        [306, -235, 0, 1],
                        [306, -235, 7, 1],
                        [131, -64, 0, 1],
                        [131, -64, 7, 1],
                        [387, 174, 0, 1],
                        [387, 174, 7, 1]
                    ],
                    [
                        [-360, 102, 0, 1],
                        [-360, 102, 7, 1],
                        [-125, 50, 0, 1],
                        [-125, 50, 7, 1],
                        [28, -132, 0, 1],
                        [28, -132, 7, 1],
                        [-187, -52, 0, 1],
                        [-187, -52, 7, 1],
                        [-74, -287, 0, 1],
                        [-74, -287, 7, 1],
                        [-260, 372, 0, 1],
                        [-260, 372, 7, 1],
                        [-75, 196, 0, 1],
                        [-75, 196, 7, 1],
                        [144, 261, 0, 1],
                        [144, 261, 7, 1],
                        [200, -345, 0, 1],
                        [200, -345, 7, 1],
                        [303, -255, 0, 1],
                        [303, -255, 7, 1],
                        [123, -84, 0, 1],
                        [123, -84, 7, 1],
                        [387, 154, 0, 1],
                        [387, 154, 7, 1]
                    ],
                    [
                        [-366, 82, 0, 1],
                        [-366, 82, 7, 1],
                        [-119, 30, 0, 1],
                        [-119, 30, 7, 1],
                        [20, -152, 0, 1],
                        [20, -152, 7, 1],
                        [-195, -72, 0, 1],
                        [-195, -72, 7, 1],
                        [-82, -307, 0, 1],
                        [-82, -307, 7, 1],
                        [-264, 352, 0, 1],
                        [-264, 352, 7, 1],
                        [-74, 176, 0, 1],
                        [-74, 176, 7, 1],
                        [147, 241, 0, 1],
                        [147, 241, 7, 1],
                        [208, -365, 0, 1],
                        [208, -365, 7, 1],
                        [301, -275, 0, 1],
                        [301, -275, 7, 1],
                        [127, -104, 0, 1],
                        [127, -104, 7, 1],
                        [387, 134, 0, 1],
                        [387, 134, 7, 1]
                    ],
                    [
                        [-362, 62, 0, 1],
                        [-362, 62, 7, 1],
                        [-121, 10, 0, 1],
                        [-121, 10, 7, 1],
                        [20, -172, 0, 1],
                        [20, -172, 7, 1],
                        [-196, -92, 0, 1],
                        [-196, -92, 7, 1],
                        [-88, -327, 0, 1],
                        [-88, -327, 7, 1],
                        [-264, 332, 0, 1],
                        [-264, 332, 7, 1],
                        [-77, 156, 0, 1],
                        [-77, 156, 7, 1],
                        [139, 221, 0, 1],
                        [139, 221, 7, 1],
                        [204, -385, 0, 1],
                        [204, -385, 7, 1],
                        [308, -295, 0, 1],
                        [308, -295, 7, 1],
                        [122, -124, 0, 1],
                        [122, -124, 7, 1],
                        [394, 114, 0, 1],
                        [394, 114, 7, 1]
                    ],
                    [
                        [-367, 42, 0, 1],
                        [-367, 42, 7, 1],
                        [-129, -10, 0, 1],
                        [-129, -10, 7, 1],
                        [17, -192, 0, 1],
                        [17, -192, 7, 1],
                        [-204, -112, 0, 1],
                        [-204, -112, 7, 1],
                        [-80, -347, 0, 1],
                        [-80, -347, 7, 1],
                        [-266, 312, 0, 1],
                        [-266, 312, 7, 1],
                        [-77, 136, 0, 1],
                        [-77, 136, 7, 1],
                        [138, 201, 0, 1],
                        [138, 201, 7, 1],
                        [207, 395, 0, 1],
                        [207, 395, 7, 1],
                        [301, -315, 0, 1],
                        [301, -315, 7, 1],
                        [120, -144, 0, 1],
                        [120, -144, 7, 1],
                        [394, 94, 0, 1],
                        [394, 94, 7, 1]
                    ],
                    [
                        [-361, 22, 0, 1],
                        [-361, 22, 7, 1],
                        [-110, -30, 0, 1],
                        [-110, -30, 7, 1],
                        [23, -212, 0, 1],
                        [23, -212, 7, 1],
                        [-200, -132, 0, 1],
                        [-200, -132, 7, 1],
                        [-76, -367, 0, 1],
                        [-76, -367, 7, 1],
                        [-268, 292, 0, 1],
                        [-268, 292, 7, 1],
                        [-79, 116, 0, 1],
                        [-79, 116, 7, 1],
                        [145, 181, 0, 1],
                        [145, 181, 7, 1],
                        [206, 375, 0, 1],
                        [206, 375, 7, 1],
                        [301, -335, 0, 1],
                        [301, -335, 7, 1],
                        [128, -164, 0, 1],
                        [128, -164, 7, 1],
                        [387, 74, 0, 1],
                        [387, 74, 7, 1]
                    ],
                    [
                        [-367, 2, 0, 1],
                        [-367, 2, 7, 1],
                        [-118, -50, 0, 1],
                        [-118, -50, 7, 1],
                        [22, -232, 0, 1],
                        [22, -232, 7, 1],
                        [-200, -152, 0, 1],
                        [-200, -152, 7, 1],
                        [-76, -387, 0, 1],
                        [-76, -387, 7, 1],
                        [-248, 272, 0, 1],
                        [-248, 272, 7, 1],
                        [-77, 96, 0, 1],
                        [-77, 96, 7, 1],
                        [137, 161, 0, 1],
                        [137, 161, 7, 1],
                        [204, 355, 0, 1],
                        [204, 355, 7, 1],
                        [293, -355, 0, 1],
                        [293, -355, 7, 1],
                        [120, -184, 0, 1],
                        [120, -184, 7, 1],
                        [385, 54, 0, 1],
                        [385, 54, 7, 1]
                    ],
                    [
                        [-368, -18, 0, 1],
                        [-368, -18, 7, 1],
                        [-119, -70, 0, 1],
                        [-119, -70, 7, 1],
                        [18, -252, 0, 1],
                        [18, -252, 7, 1],
                        [-201, -172, 0, 1],
                        [-201, -172, 7, 1],
                        [-78, 393, 0, 1],
                        [-78, 393, 7, 1],
                        [-256, 252, 0, 1],
                        [-256, 252, 7, 1],
                        [-76, 76, 0, 1],
                        [-76, 76, 7, 1],
                        [141, 141, 0, 1],
                        [141, 141, 7, 1],
                        [200, 335, 0, 1],
                        [200, 335, 7, 1],
                        [297, -375, 0, 1],
                        [297, -375, 7, 1],
                        [125, -204, 0, 1],
                        [125, -204, 7, 1],
                        [381, 34, 0, 1],
                        [381, 34, 7, 1]
                    ],
                    [
                        [-369, -38, 0, 1],
                        [-369, -38, 7, 1],
                        [-125, -90, 0, 1],
                        [-125, -90, 7, 1],
                        [26, -272, 0, 1],
                        [26, -272, 7, 1],
                        [-199, -192, 0, 1],
                        [-199, -192, 7, 1],
                        [-86, 373, 0, 1],
                        [-86, 373, 7, 1],
                        [-259, 232, 0, 1],
                        [-259, 232, 7, 1],
                        [-79, 56, 0, 1],
                        [-79, 56, 7, 1],
                        [147, 121, 0, 1],
                        [147, 121, 7, 1],
                        [218, 315, 0, 1],
                        [218, 315, 7, 1],
                        [295, -395, 0, 1],
                        [295, -395, 7, 1],
                        [130, -224, 0, 1],
                        [130, -224, 7, 1],
                        [384, 14, 0, 1],
                        [384, 14, 7, 1]
                    ],
                    [
                        [-361, -58, 0, 1],
                        [-361, -58, 7, 1],
                        [-130, -110, 0, 1],
                        [-130, -110, 7, 1],
                        [22, -292, 0, 1],
                        [22, -292, 7, 1],
                        [-204, -212, 0, 1],
                        [-204, -212, 7, 1],
                        [-69, 353, 0, 1],
                        [-69, 353, 7, 1],
                        [-259, 212, 0, 1],
                        [-259, 212, 7, 1],
                        [-86, 36, 0, 1],
                        [-86, 36, 7, 1],
                        [152, 101, 0, 1],
                        [152, 101, 7, 1],
                        [210, 295, 0, 1],
                        [210, 295, 7, 1],
                        [294, 385, 0, 1],
                        [294, 385, 7, 1],
                        [124, -244, 0, 1],
                        [124, -244, 7, 1],
                        [391, -6, 0, 1],
                        [391, -6, 7, 1]
                    ],
                    [
                        [-365, -78, 0, 1],
                        [-365, -78, 7, 1],
                        [-128, -130, 0, 1],
                        [-128, -130, 7, 1],
                        [23, -312, 0, 1],
                        [23, -312, 7, 1],
                        [-203, -232, 0, 1],
                        [-203, -232, 7, 1],
                        [-75, 333, 0, 1],
                        [-75, 333, 7, 1],
                        [-260, 192, 0, 1],
                        [-260, 192, 7, 1],
                        [-67, 16, 0, 1],
                        [-67, 16, 7, 1],
                        [151, 81, 0, 1],
                        [151, 81, 7, 1],
                        [206, 275, 0, 1],
                        [206, 275, 7, 1],
                        [312, 365, 0, 1],
                        [312, 365, 7, 1],
                        [119, -264, 0, 1],
                        [119, -264, 7, 1],
                        [387, -26, 0, 1],
                        [387, -26, 7, 1]
                    ],
                    [
                        [-361, -98, 0, 1],
                        [-361, -98, 7, 1],
                        [-132, -150, 0, 1],
                        [-132, -150, 7, 1],
                        [19, -332, 0, 1],
                        [19, -332, 7, 1],
                        [-197, -252, 0, 1],
                        [-197, -252, 7, 1],
                        [-78, 313, 0, 1],
                        [-78, 313, 7, 1],
                        [-252, 172, 0, 1],
                        [-252, 172, 7, 1],
                        [-75, -4, 0, 1],
                        [-75, -4, 7, 1],
                        [152, 61, 0, 1],
                        [152, 61, 7, 1],
                        [212, 255, 0, 1],
                        [212, 255, 7, 1],
                        [304, 345, 0, 1],
                        [304, 345, 7, 1],
                        [138, -284, 0, 1],
                        [138, -284, 7, 1],
                        [380, -46, 0, 1],
                        [380, -46, 7, 1]
                    ],
                    [
                        [-360, -118, 0, 1],
                        [-360, -118, 7, 1],
                        [-111, -170, 0, 1],
                        [-111, -170, 7, 1],
                        [23, -352, 0, 1],
                        [23, -352, 7, 1],
                        [-202, -272, 0, 1],
                        [-202, -272, 7, 1],
                        [-83, 293, 0, 1],
                        [-83, 293, 7, 1],
                        [-260, 152, 0, 1],
                        [-260, 152, 7, 1],
                        [-83, -24, 0, 1],
                        [-83, -24, 7, 1],
                        [144, 41, 0, 1],
                        [144, 41, 7, 1],
                        [209, 235, 0, 1],
                        [209, 235, 7, 1],
                        [296, 325, 0, 1],
                        [296, 325, 7, 1],
                        [130, -304, 0, 1],
                        [130, -304, 7, 1],
                        [382, -66, 0, 1],
                        [382, -66, 7, 1]
                    ],
                    [
                        [-361, -138, 0, 1],
                        [-361, -138, 7, 1],
                        [-116, -190, 0, 1],
                        [-116, -190, 7, 1],
                        [24, -372, 0, 1],
                        [24, -372, 7, 1],
                        [-194, -292, 0, 1],
                        [-194, -292, 7, 1],
                        [-65, 273, 0, 1],
                        [-65, 273, 7, 1],
                        [-266, 132, 0, 1],
                        [-266, 132, 7, 1],
                        [-66, -44, 0, 1],
                        [-66, -44, 7, 1],
                        [138, 21, 0, 1],
                        [138, 21, 7, 1],
                        [210, 215, 0, 1],
                        [210, 215, 7, 1],
                        [313, 305, 0, 1],
                        [313, 305, 7, 1],
                        [122, -324, 0, 1],
                        [122, -324, 7, 1],
                        [400, -86, 0, 1],
                        [400, -86, 7, 1]
                    ],
                    [
                        [-369, -158, 0, 1],
                        [-369, -158, 7, 1],
                        [-124, -210, 0, 1],
                        [-124, -210, 7, 1],
                        [16, -392, 0, 1],
                        [16, -392, 7, 1],
                        [-202, -312, 0, 1],
                        [-202, -312, 7, 1],
                        [-73, 253, 0, 1],
                        [-73, 253, 7, 1],
                        [-258, 112, 0, 1],
                        [-258, 112, 7, 1],
                        [-74, -64, 0, 1],
                        [-74, -64, 7, 1],
                        [156, 1, 0, 1],
                        [156, 1, 7, 1],
                        [202, 195, 0, 1],
                        [202, 195, 7, 1],
                        [305, 285, 0, 1],
                        [305, 285, 7, 1],
                        [117, -344, 0, 1],
                        [117, -344, 7, 1],
                        [395, -106, 0, 1],
                        [395, -106, 7, 1]
                    ],
                    [
                        [-363, -178, 0, 1],
                        [-363, -178, 7, 1],
                        [-126, -230, 0, 1],
                        [-126, -230, 7, 1],
                        [34, 388, 0, 1],
                        [34, 388, 7, 1],
                        [-207, -332, 0, 1],
                        [-207, -332, 7, 1],
                        [-81, 233, 0, 1],
                        [-81, 233, 7, 1],
                        [-253, 92, 0, 1],
                        [-253, 92, 7, 1],
                        [-80, -84, 0, 1],
                        [-80, -84, 7, 1],
                        [148, -19, 0, 1],
                        [148, -19, 7, 1],
                        [219, 175, 0, 1],
                        [219, 175, 7, 1],
                        [307, 265, 0, 1],
                        [307, 265, 7, 1],
                        [137, -364, 0, 1],
                        [137, -364, 7, 1],
                        [387, -126, 0, 1],
                        [387, -126, 7, 1]
                    ],
                    [
                        [-371, -198, 0, 1],
                        [-371, -198, 7, 1],
                        [-122, -250, 0, 1],
                        [-122, -250, 7, 1],
                        [26, 368, 0, 1],
                        [26, 368, 7, 1],
                        [-201, -352, 0, 1],
                        [-201, -352, 7, 1],
                        [-80, 213, 0, 1],
                        [-80, 213, 7, 1],
                        [-260, 72, 0, 1],
                        [-260, 72, 7, 1],
                        [-85, -104, 0, 1],
                        [-85, -104, 7, 1],
                        [150, -39, 0, 1],
                        [150, -39, 7, 1],
                        [211, 155, 0, 1],
                        [211, 155, 7, 1],
                        [299, 245, 0, 1],
                        [299, 245, 7, 1],
                        [129, -384, 0, 1],
                        [129, -384, 7, 1],
                        [380, -146, 0, 1],
                        [380, -146, 7, 1]
                    ],
                    [
                        [-372, -218, 0, 1],
                        [-372, -218, 7, 1],
                        [-130, -270, 0, 1],
                        [-130, -270, 7, 1],
                        [22, 348, 0, 1],
                        [22, 348, 7, 1],
                        [-193, -372, 0, 1],
                        [-193, -372, 7, 1],
                        [-83, 193, 0, 1],
                        [-83, 193, 7, 1],
                        [-253, 52, 0, 1],
                        [-253, 52, 7, 1],
                        [-86, -124, 0, 1],
                        [-86, -124, 7, 1],
                        [142, -59, 0, 1],
                        [142, -59, 7, 1],
                        [204, 135, 0, 1],
                        [204, 135, 7, 1],
                        [295, 225, 0, 1],
                        [295, 225, 7, 1],
                        [131, 396, 0, 1],
                        [131, 396, 7, 1],
                        [384, -166, 0, 1],
                        [384, -166, 7, 1]
                    ],
                    [
                        [-352, -238, 0, 1],
                        [-352, -238, 7, 1],
                        [-112, -290, 0, 1],
                        [-112, -290, 7, 1],
                        [28, 328, 0, 1],
                        [28, 328, 7, 1],
                        [-201, -392, 0, 1],
                        [-201, -392, 7, 1],
                        [-77, 173, 0, 1],
                        [-77, 173, 7, 1],
                        [-261, 32, 0, 1],
                        [-261, 32, 7, 1],
                        [-80, -144, 0, 1],
                        [-80, -144, 7, 1],
                        [138, -79, 0, 1],
                        [138, -79, 7, 1],
                        [207, 115, 0, 1],
                        [207, 115, 7, 1],
                        [303, 205, 0, 1],
                        [303, 205, 7, 1],
                        [130, 376, 0, 1],
                        [130, 376, 7, 1],
                        [400, -186, 0, 1],
                        [400, -186, 7, 1]
                    ],
                    [
                        [-360, -258, 0, 1],
                        [-360, -258, 7, 1],
                        [-120, -310, 0, 1],
                        [-120, -310, 7, 1],
                        [24, 308, 0, 1],
                        [24, 308, 7, 1],
                        [-204, 388, 0, 1],
                        [-204, 388, 7, 1],
                        [-76, 153, 0, 1],
                        [-76, 153, 7, 1],
                        [-264, 12, 0, 1],
                        [-264, 12, 7, 1],
                        [-75, -164, 0, 1],
                        [-75, -164, 7, 1],
                        [159, -99, 0, 1],
                        [159, -99, 7, 1],
                        [203, 95, 0, 1],
                        [203, 95, 7, 1],
                        [297, 185, 0, 1],
                        [297, 185, 7, 1],
                        [130, 356, 0, 1],
                        [130, 356, 7, 1],
                        [392, -206, 0, 1],
                        [392, -206, 7, 1]
                    ],
                    [
                        [-368, -278, 0, 1],
                        [-368, -278, 7, 1],
                        [-122, -330, 0, 1],
                        [-122, -330, 7, 1],
                        [16, 288, 0, 1],
                        [16, 288, 7, 1],
                        [-187, 368, 0, 1],
                        [-187, 368, 7, 1],
                        [-76, 133, 0, 1],
                        [-76, 133, 7, 1],
                        [-266, -8, 0, 1],
                        [-266, -8, 7, 1],
                        [-83, -184, 0, 1],
                        [-83, -184, 7, 1],
                        [151, -119, 0, 1],
                        [151, -119, 7, 1],
                        [197, 75, 0, 1],
                        [197, 75, 7, 1],
                        [299, 165, 0, 1],
                        [299, 165, 7, 1],
                        [127, 336, 0, 1],
                        [127, 336, 7, 1],
                        [392, -226, 0, 1],
                        [392, -226, 7, 1]
                    ],
                    [
                        [-367, -298, 0, 1],
                        [-367, -298, 7, 1],
                        [-119, -350, 0, 1],
                        [-119, -350, 7, 1],
                        [37, 268, 0, 1],
                        [37, 268, 7, 1],
                        [-195, 348, 0, 1],
                        [-195, 348, 7, 1],
                        [-83, 113, 0, 1],
                        [-83, 113, 7, 1],
                        [-266, -28, 0, 1],
                        [-266, -28, 7, 1],
                        [-79, -204, 0, 1],
                        [-79, -204, 7, 1],
                        [147, -139, 0, 1],
                        [147, -139, 7, 1],
                        [204, 55, 0, 1],
                        [204, 55, 7, 1],
                        [307, 145, 0, 1],
                        [307, 145, 7, 1],
                        [122, 316, 0, 1],
                        [122, 316, 7, 1],
                        [385, -246, 0, 1],
                        [385, -246, 7, 1]
                    ],
                    [
                        [-361, -318, 0, 1],
                        [-361, -318, 7, 1],
                        [-127, -370, 0, 1],
                        [-127, -370, 7, 1],
                        [29, 248, 0, 1],
                        [29, 248, 7, 1],
                        [-203, 328, 0, 1],
                        [-203, 328, 7, 1],
                        [-78, 93, 0, 1],
                        [-78, 93, 7, 1],
                        [-248, -48, 0, 1],
                        [-248, -48, 7, 1],
                        [-85, -224, 0, 1],
                        [-85, -224, 7, 1],
                        [143, -159, 0, 1],
                        [143, -159, 7, 1],
                        [199, 35, 0, 1],
                        [199, 35, 7, 1],
                        [299, 125, 0, 1],
                        [299, 125, 7, 1],
                        [130, 296, 0, 1],
                        [130, 296, 7, 1],
                        [385, -266, 0, 1],
                        [385, -266, 7, 1]
                    ],
                    [
                        [-363, -338, 0, 1],
                        [-363, -338, 7, 1],
                        [-127, -390, 0, 1],
                        [-127, -390, 7, 1],
                        [21, 228, 0, 1],
                        [21, 228, 7, 1],
                        [-204, 308, 0, 1],
                        [-204, 308, 7, 1],
                        [-77, 73, 0, 1],
                        [-77, 73, 7, 1],
                        [-255, -68, 0, 1],
                        [-255, -68, 7, 1],
                        [-65, -244, 0, 1],
                        [-65, -244, 7, 1],
                        [160, -179, 0, 1],
                        [160, -179, 7, 1],
                        [220, 15, 0, 1],
                        [220, 15, 7, 1],
                        [304, 105, 0, 1],
                        [304, 105, 7, 1],
                        [122, 276, 0, 1],
                        [122, 276, 7, 1],
                        [391, -286, 0, 1],
                        [391, -286, 7, 1]
                    ],
                    [
                        [-365, -358, 0, 1],
                        [-365, -358, 7, 1],
                        [-121, 390, 0, 1],
                        [-121, 390, 7, 1],
                        [15, 208, 0, 1],
                        [15, 208, 7, 1],
                        [-205, 288, 0, 1],
                        [-205, 288, 7, 1],
                        [-79, 53, 0, 1],
                        [-79, 53, 7, 1],
                        [-263, -88, 0, 1],
                        [-263, -88, 7, 1],
                        [-73, -264, 0, 1],
                        [-73, -264, 7, 1],
                        [152, -199, 0, 1],
                        [152, -199, 7, 1],
                        [212, -5, 0, 1],
                        [212, -5, 7, 1],
                        [304, 85, 0, 1],
                        [304, 85, 7, 1],
                        [116, 256, 0, 1],
                        [116, 256, 7, 1],
                        [390, -306, 0, 1],
                        [390, -306, 7, 1]
                    ],
                    [
                        [-368, -378, 0, 1],
                        [-368, -378, 7, 1],
                        [-126, 370, 0, 1],
                        [-126, 370, 7, 1],
                        [19, 188, 0, 1],
                        [19, 188, 7, 1],
                        [-200, 268, 0, 1],
                        [-200, 268, 7, 1],
                        [-84, 33, 0, 1],
                        [-84, 33, 7, 1],
                        [-246, -108, 0, 1],
                        [-246, -108, 7, 1],
                        [-81, -284, 0, 1],
                        [-81, -284, 7, 1],
                        [147, -219, 0, 1],
                        [147, -219, 7, 1],
                        [209, -25, 0, 1],
                        [209, -25, 7, 1],
                        [300, 65, 0, 1],
                        [300, 65, 7, 1],
                        [139, 236, 0, 1],
                        [139, 236, 7, 1],
                        [387, -326, 0, 1],
                        [387, -326, 7, 1]
                    ],
                    [
                        [-362, -398, 0, 1],
                        [-362, -398, 7, 1],
                        [-124, 350, 0, 1],
                        [-124, 350, 7, 1],
                        [17, 168, 0, 1],
                        [17, 168, 7, 1],
                        [-198, 248, 0, 1],
                        [-198, 248, 7, 1],
                        [-64, 13, 0, 1],
                        [-64, 13, 7, 1],
                        [-254, -128, 0, 1],
                        [-254, -128, 7, 1],
                        [-64, -304, 0, 1],
                        [-64, -304, 7, 1],
                        [146, -239, 0, 1],
                        [146, -239, 7, 1],
                        [201, -45, 0, 1],
                        [201, -45, 7, 1],
                        [298, 45, 0, 1],
                        [298, 45, 7, 1],
                        [132, 216, 0, 1],
                        [132, 216, 7, 1],
                        [391, -346, 0, 1],
                        [391, -346, 7, 1]
                    ],
                    [
                        [-370, 382, 0, 1],
                        [-370, 382, 7, 1],
                        [-117, 330, 0, 1],
                        [-117, 330, 7, 1],
                        [24, 148, 0, 1],
                        [24, 148, 7, 1],
                        [-199, 228, 0, 1],
                        [-199, 228, 7, 1],
                        [-72, -7, 0, 1],
                        [-72, -7, 7, 1],
                        [-262, -148, 0, 1],
                        [-262, -148, 7, 1],
                        [-72, -324, 0, 1],
                        [-72, -324, 7, 1],
                        [151, -259, 0, 1],
                        [151, -259, 7, 1],
                        [196, -65, 0, 1],
                        [196, -65, 7, 1],
                        [302, 25, 0, 1],
                        [302, 25, 7, 1],
                        [124, 196, 0, 1],
                        [124, 196, 7, 1],
                        [383, -366, 0, 1],
                        [383, -366, 7, 1]
                    ],
                    [
                        [-352, 362, 0, 1],
                        [-352, 362, 7, 1],
                        [-124, 310, 0, 1],
                        [-124, 310, 7, 1],
                        [24, 128, 0, 1],
                        [24, 128, 7, 1],
                        [-195, 208, 0, 1],
                        [-195, 208, 7, 1],
                        [-72, -27, 0, 1],
                        [-72, -27, 7, 1],
                        [-259, -168, 0, 1],
                        [-259, -168, 7, 1],
                        [-80, -344, 0, 1],
                        [-80, -344, 7, 1],
                        [153, -279, 0, 1],
                        [153, -279, 7, 1],
                        [203, -85, 0, 1],
                        [203, -85, 7, 1],
                        [300, 5, 0, 1],
                        [300, 5, 7, 1],
                        [125, 176, 0, 1],
                        [125, 176, 7, 1],
                        [385, -386, 0, 1],
                        [385, -386, 7, 1]
                    ],
                    [
                        [-213, 36, 0, 1],
                        [-174, 36, 4, 1],
                        [-194, 36, 0, 1],
                        [-194, -32, 4, 1],
                        [-162, 37, 0, 1],
                        [-162, 36, 4, 1],
                        [-163, 21, 0, 1],
                        [-163, -33, 4, 1],
                        [-142, 20, 0, 1],
                        [-142, -33, 4, 1],
                        [-142, -23, 4, 0],
                        [-142, -12, 4, 0],
                        [-142, -3, 4, 0],
                        [-140, 6, 4, 0],
                        [-133, 14, 4, 0],
                        [-126, 19, 4, 0],
                        [-121, 21, 4, 0],
                        [-118, 21, 4, 0],
                        [-113, 19, 4, 0],
                        [-110, 17, 4, 0],
                        [-107, 11, 4, 0],
                        [-107, 5, 4, 0],
                        [-105, -9, 4, 0],
                        [-105, -24, 4, 0],
                        [-105, -29, 4, 0],
                        [-105, -34, 4, 0],
                        [-105, -31, 4, 0],
                        [-105, -24, 4, 0],
                        [-104, -7, 4, 0],
                        [-104, 4, 4, 0],
                        [-100, 11, 4, 0],
                        [-96, 16, 4, 0],
                        [-89, 19, 4, 0],
                        [-85, 20, 4, 0],
                        [-81, 21, 4, 0],
                        [-76, 19, 4, 0],
                        [-72, 15, 4, 0],
                        [-69, 8, 4, 0],
                        [-68, 3, 4, 0],
                        [-68, -33, 4, 1],
                        [-53, -4, 0, 1],
                        [-43, -4, 4, 0],
                        [-33, -4, 4, 0],
                        [-21, -4, 4, 0],
                        [-9, -5, 4, 0],
                        [-4, -5, 4, 0],
                        [-1, -4, 4, 0],
                        [-2, 1, 4, 0],
                        [-3, 6, 4, 0],
                        [-6, 11, 4, 0],
                        [-9, 15, 4, 0],
                        [-19, 19, 4, 0],
                        [-28, 21, 4, 0],
                        [-39, 18, 4, 0],
                        [-47, 11, 4, 0],
                        [-50, 4, 4, 0],
                        [-52, -4, 4, 0],
                        [-52, -7, 4, 0],
                        [-50, -17, 4, 0],
                        [-45, -27, 4, 0],
                        [-40, -31, 4, 0],
                        [-35, -34, 4, 0],
                        [-26, -35, 4, 0],
                        [-21, -36, 4, 0],
                        [-15, -34, 4, 0],
                        [-9, -30, 4, 0],
                        [-5, -27, 4, 0],
                        [-3, -24, 4, 0],
                        [-1, -18, 4, 1],
                        [42, -33, 0, 1],
                        [42, 38, 5, 1],
                        [74, 38, 5, 1],
                        [43, 5, 0, 1],
                        [74, 5, 5, 1],
                        [88, 40, 0, 1],
                        [89, -32, 5, 1],
                        [109, 40, 0, 1],
                        [108, 39, 5, 1],
                        [108, 21, 0, 1],
                        [108, -33, 5, 1],
                        [128, -4, 0, 1],
                        [163, -4, 5, 0],
                        [168, -4, 5, 0],
                        [173, -4, 5, 0],
                        [175, -3, 5, 0],
                        [175, 1, 5, 0],
                        [171, 8, 5, 0],
                        [166, 14, 5, 0],
                        [160, 18, 5, 0],
                        [152, 20, 5, 0],
                        [145, 19, 5, 0],
                        [136, 15, 5, 0],
                        [129, 10, 5, 0],
                        [128, 6, 5, 0],
                        [126, 1, 5, 0],
                        [126, -6, 5, 0],
                        [127, -14, 5, 0],
                        [130, -22, 5, 0],
                        [133, -28, 5, 0],
                        [138, -32, 5, 0],
                        [142, -34, 5, 0],
                        [150, -35, 5, 0],
                        [154, -36, 5, 0],
                        [159, -36, 5, 0],
                        [163, -34, 5, 0],
                        [168, -32, 5, 0],
                        [172, -28, 5, 0],
                        [174, -24, 5, 0],
                        [176, -18, 5, 1],
                        [185, -26, 0, 1],
                        [189, -30, 5, 0],
                        [193, -33, 5, 0],
                        [197, -35, 5, 0],
                        [201, -36, 5, 0],
                        [206, -36, 5, 0],
                        [209, -35, 5, 0],
                        [212, -33, 5, 0],
                        [216, -29, 5, 0],
                        [218, -24, 5, 0],
                        [218, -20, 5, 0],
                        [217, -15, 5, 0],
                        [214, -12, 5, 0],
                        [209, -10, 5, 0],
                        [203, -6, 5, 0],
                        [199, -4, 5, 0],
                        [193, 0, 5, 0],
                        [191, 3, 5, 0],
                        [190, 8, 5, 0],
                        [190, 12, 5, 0],
                        [193, 16, 5, 0],
                        [197, 19, 5, 0],
                        [201, 21, 5, 0],
                        [206, 22, 5, 0],
                        [209, 20, 5, 0],
                        [214, 17, 5, 0],
                        [216, 13, 5, 1]
                    ],
                    [
                        [-312, 35, 0, 1],
                        [-299, -18, 7, 1],
                        [-282, 35, 7, 1],
                        [-266, -19, 7, 1],
                        [-252, 35, 7, 1],
                        [-239, 34, 0, 1],
                        [-240, 32, 7, 1],
                        [-240, 21, 0, 1],
                        [-239, -18, 7, 1],
                        [-224, 21, 0, 1],
                        [-224, -17, 7, 1],
                        [-224, -9, 7, 0],
                        [-224, 2, 7, 0],
                        [-224, 10, 7, 0],
                        [-222, 13, 7, 0],
                        [-217, 17, 7, 0],
                        [-212, 21, 7, 0],
                        [-208, 21, 7, 0],
                        [-204, 21, 7, 0],
                        [-200, 18, 7, 0],
                        [-197, 17, 7, 0],
                        [-195, 11, 7, 0],
                        [-195, 1, 7, 0],
                        [-195, -17, 7, 1],
                        [-185, 20, 0, 1],
                        [-165, 20, 7, 1],
                        [-175, 37, 0, 1],
                        [-175, -17, 7, 1],
                        [-158, 4, 0, 1],
                        [-148, 4, 7, 0],
                        [-140, 4, 7, 0],
                        [-132, 4, 7, 0],
                        [-125, 4, 7, 0],
                        [-121, 4, 7, 0],
                        [-120, 6, 7, 0],
                        [-123, 11, 7, 0],
                        [-127, 17, 7, 0],
                        [-131, 20, 7, 0],
                        [-137, 22, 7, 0],
                        [-143, 22, 7, 0],
                        [-148, 20, 7, 0],
                        [-151, 18, 7, 0],
                        [-156, 14, 7, 0],
                        [-158, 9, 7, 0],
                        [-158, 3, 7, 0],
                        [-158, -2, 7, 0],
                        [-157, -8, 7, 0],
                        [-154, -12, 7, 0],
                        [-150, -16, 7, 0],
                        [-141, -19, 7, 0],
                        [-134, -19, 7, 0],
                        [-128, -17, 7, 0],
                        [-124, -13, 7, 0],
                        [-122, -10, 7, 0],
                        [-120, -6, 7, 1],
                        [-110, 21, 0, 1],
                        [-110, -18, 7, 1],
                        [-110, -12, 7, 0],
                        [-110, -1, 7, 0],
                        [-109, 5, 7, 0],
                        [-108, 10, 7, 0],
                        [-105, 16, 7, 0],
                        [-101, 19, 7, 0],
                        [-97, 21, 7, 0],
                        [-94, 21, 7, 1],
                        [-49, 34, 0, 1],
                        [-49, 32, 4, 1],
                        [-50, 22, 0, 1],
                        [-50, -17, 4, 1],
                        [-40, -12, 0, 1],
                        [-37, -15, 4, 0],
                        [-34, -17, 4, 0],
                        [-30, -18, 4, 0],
                        [-25, -19, 4, 0],
                        [-22, -18, 4, 0],
                        [-19, -15, 4, 0],
                        [-17, -11, 4, 0],
                        [-17, -7, 4, 0],
                        [-19, -3, 4, 0],
                        [-23, 1, 4, 0],
                        [-28, 3, 4, 0],
                        [-30, 4, 4, 0],
                        [-34, 8, 4, 0],
                        [-35, 12, 4, 0],
                        [-35, 16, 4, 0],
                        [-33, 19, 4, 0],
                        [-30, 22, 4, 0],
                        [-26, 22, 4, 0],
                        [-22, 22, 4, 0],
                        [-20, 20, 4, 0],
                        [-17, 17, 4, 1],
                        [77, 26, 0, 1],
                        [75, 30, 6, 0],
                        [66, 35, 6, 0],
                        [57, 36, 6, 0],
                        [49, 36, 6, 0],
                        [41, 34, 6, 0],
                        [34, 29, 6, 0],
                        [29, 21, 6, 0],
                        [27, 12, 6, 0],
                        [27, 1, 6, 0],
                        [31, -6, 6, 0],
                        [37, -13, 6, 0],
                        [43, -17, 6, 0],
                        [53, -20, 6, 0],
                        [60, -19, 6, 0],
                        [68, -17, 6, 0],
                        [74, -13, 6, 0],
                        [78, -9, 6, 1],
                        [106, 23, 0, 1],
                        [102, 22, 6, 0],
                        [96, 20, 6, 0],
                        [92, 16, 6, 0],
                        [89, 11, 6, 0],
                        [86, 6, 6, 0],
                        [87, -2, 6, 0],
                        [90, -9, 6, 0],
                        [93, -13, 6, 0],
                        [98, -17, 6, 0],
                        [106, -19, 6, 0],
                        [115, -18, 6, 0],
                        [122, -12, 6, 0],
                        [126, -5, 6, 0],
                        [126, 4, 6, 0],
                        [125, 10, 6, 0],
                        [121, 16, 6, 0],
                        [118, 20, 6, 0],
                        [113, 22, 6, 0],
                        [106, 23, 6, 1],
                        [139, 21, 0, 1],
                        [138, -17, 6, 1],
                        [139, -11, 6, 0],
                        [139, 1, 6, 0],
                        [140, 11, 6, 0],
                        [143, 15, 6, 0],
                        [147, 18, 6, 0],
                        [151, 21, 6, 0],
                        [154, 22, 6, 0],
                        [159, 22, 6, 0],
                        [164, 19, 6, 0],
                        [165, 16, 6, 0],
                        [166, 11, 6, 0],
                        [166, 3, 6, 0],
                        [165, -17, 6, 1],
                        [165, -12, 6, 0],
                        [166, -5, 6, 0],
                        [166, 6, 6, 0],
                        [167, 11, 6, 0],
                        [169, 16, 6, 0],
                        [173, 20, 6, 0],
                        [177, 22, 6, 0],
                        [182, 22, 6, 0],
                        [186, 22, 6, 0],
                        [189, 20, 6, 0],
                        [193, 15, 6, 0],
                        [194, 10, 6, 0],
                        [194, -17, 6, 1],
                        [207, 35, 0, 1],
                        [207, 33, 6, 1],
                        [207, 22, 0, 1],
                        [206, -17, 6, 1],
                        [222, 22, 0, 1],
                        [222, -17, 6, 1],
                        [223, -11, 6, 0],
                        [223, -2, 6, 0],
                        [224, 9, 6, 0],
                        [225, 14, 6, 0],
                        [230, 18, 6, 0],
                        [234, 21, 6, 0],
                        [239, 22, 6, 0],
                        [243, 22, 6, 0],
                        [247, 20, 6, 0],
                        [250, 18, 6, 0],
                        [251, 14, 6, 0],
                        [252, 7, 6, 0],
                        [253, -3, 6, 0],
                        [253, -17, 6, 1],
                        [302, 4, 0, 1],
                        [301, 10, 6, 0],
                        [299, 16, 6, 0],
                        [292, 21, 6, 0],
                        [286, 23, 6, 0],
                        [280, 23, 6, 0],
                        [274, 23, 6, 0],
                        [269, 18, 6, 0],
                        [265, 13, 6, 0],
                        [263, 5, 6, 0],
                        [265, -6, 6, 0],
                        [269, -11, 6, 0],
                        [275, -14, 6, 0],
                        [282, -16, 6, 0],
                        [288, -15, 6, 0],
                        [293, -11, 6, 0],
                        [299, -7, 6, 0],
                        [301, -2, 6, 0],
                        [302, 2, 6, 0],
                        [302, 7, 6, 0],
                        [302, 10, 6, 0],
                        [302, 5, 6, 0],
                        [302, -3, 6, 0],
                        [302, -9, 6, 0],
                        [301, -17, 6, 0],
                        [299, -22, 6, 0],
                        [296, -27, 6, 0],
                        [292, -30, 6, 0],
                        [287, -31, 6, 0],
                        [281, -31, 6, 0],
                        [273, -28, 6, 0],
                        [268, -25, 6, 0],
                        [264, -20, 6, 1]
                    ],
                    [
                        [-50, 240, 0, 1],
                        [-82, 230, 5, 0],
                        [-124, 206, 5, 0],
                        [-161, 159, 5, 0],
                        [-178, 110, 5, 0],
                        [-168, 31, 5, 0],
                        [-125, -25, 5, 0],
                        [-66, -59, 5, 0],
                        [1, -70, 5, 0],
                        [60, -60, 5, 0],
                        [120, -27, 5, 0],
                        [157, 17, 5, 0],
                        [177, 69, 5, 0],
                        [172, 116, 5, 0],
                        [158, 158, 5, 0],
                        [153, 171, 5, 1],
                        [137, 180, 7, 0],
                        [109, 195, 7, 0],
                        [77, 208, 7, 0],
                        [29, 225, 7, 0],
                        [-13, 236, 7, 0],
                        [-49, 241, 7, 1],
                        [-50, 253, 7, 0],
                        [-43, 269, 7, 0],
                        [-34, 284, 7, 0],
                        [-22, 286, 7, 0],
                        [-4, 281, 7, 0],
                        [51, 267, 7, 0],
                        [100, 250, 7, 0],
                        [157, 226, 7, 0],
                        [174, 215, 7, 0],
                        [180, 210, 7, 0],
                        [175, 193, 7, 0],
                        [167, 171, 7, 0],
                        [160, 168, 7, 0],
                        [151, 171, 7, 1],
                        [171, 217, 0, 1],
                        [175, 239, 1, 0],
                        [175, 260, 1, 0],
                        [171, 286, 1, 0],
                        [171, 305, 1, 0],
                        [181, 318, 1, 0],
                        [198, 327, 1, 0],
                        [205, 332, 1, 1],
                        [209, 327, 7, 0],
                        [213, 322, 7, 0],
                        [221, 315, 7, 0],
                        [232, 313, 7, 0],
                        [243, 313, 7, 0],
                        [252, 319, 7, 0],
                        [259, 330, 7, 0],
                        [263, 345, 7, 0],
                        [256, 359, 7, 0],
                        [245, 368, 7, 0],
                        [231, 369, 7, 0],
                        [218, 365, 7, 0],
                        [212, 359, 7, 0],
                        [205, 349, 7, 1],
                        [192, 354, 1, 0],
                        [161, 359, 1, 0],
                        [114, 357, 1, 0],
                        [67, 343, 1, 0],
                        [24, 319, 1, 0],
                        [-10, 296, 1, 0],
                        [-17, 286, 1, 1],
                        [-91, 228, 0, 1],
                        [-96, 237, 6, 0],
                        [-109, 249, 6, 0],
                        [-137, 252, 6, 0],
                        [-167, 242, 6, 0],
                        [-189, 221, 6, 0],
                        [-195, 197, 6, 0],
                        [-192, 179, 6, 0],
                        [-182, 164, 6, 0],
                        [-173, 158, 6, 0],
                        [-163, 157, 6, 1],
                        [-64, 80, 0, 1],
                        [-56, 80, 3, 0],
                        [-49, 74, 3, 0],
                        [-50, 62, 3, 0],
                        [-60, 59, 3, 0],
                        [-70, 62, 3, 0],
                        [-71, 74, 3, 0],
                        [-65, 80, 3, 1],
                        [38, 82, 0, 1],
                        [46, 83, 3, 0],
                        [52, 74, 3, 0],
                        [50, 66, 3, 0],
                        [42, 62, 3, 0],
                        [32, 64, 3, 0],
                        [29, 74, 3, 0],
                        [32, 80, 3, 0],
                        [37, 83, 3, 1],
                        [-9, 71, 0, 1],
                        [-29, 66, 4, 0],
                        [-40, 57, 4, 0],
                        [-43, 40, 4, 0],
                        [-36, 26, 4, 0],
                        [-23, 19, 4, 0],
                        [-2, 16, 4, 0],
                        [20, 23, 4, 0],
                        [29, 38, 4, 0],
                        [27, 53, 4, 0],
                        [14, 68, 4, 0],
                        [-8, 71, 4, 1],
                        [-39, 56, 0, 1],
                        [-57, 54, 7, 0],
                        [-81, 38, 7, 0],
                        [-96, 17, 7, 0],
                        [-90, -11, 7, 0],
                        [-78, -27, 7, 0],
                        [-57, -37, 7, 0],
                        [-12, -51, 7, 0],
                        [39, -44, 7, 0],
                        [71, -21, 7, 0],
                        [82, -2, 7, 0],
                        [77, 24, 7, 0],
                        [61, 42, 7, 0],
                        [46, 52, 7, 0],
                        [24, 59, 7, 1],
                        [48, -4, 0, 1],
                        [37, -18, 4, 0],
                        [18, -28, 4, 0],
                        [-4, -32, 4, 0],
                        [-25, -29, 4, 0],
                        [-49, -19, 4, 0],
                        [-63, -6, 4, 1],
                        [-107, -37, 0, 1],
                        [-114, -39, 5, 0],
                        [-144, -38, 5, 0],
                        [-180, -42, 5, 0],
                        [-203, -55, 5, 0],
                        [-205, -73, 5, 0],
                        [-205, -95, 5, 0],
                        [-200, -115, 5, 0],
                        [-190, -123, 5, 0],
                        [-177, -125, 5, 0],
                        [-157, -123, 5, 0],
                        [-142, -120, 5, 0],
                        [-122, -119, 5, 0],
                        [-114, -119, 5, 0],
                        [-114, -123, 5, 0],
                        [-128, -200, 5, 0],
                        [-133, -265, 5, 0],
                        [-129, -341, 5, 0],
                        [-113, -364, 5, 0],
                        [-90, -374, 5, 0],
                        [-41, -374, 5, 0],
                        [-23, -364, 5, 0],
                        [-12, -353, 5, 0],
                        [-3, -328, 5, 0],
                        [-2, -307, 5, 0],
                        [2, -294, 5, 0],
                        [4, -279, 5, 0],
                        [14, -269, 5, 0],
                        [17, -277, 5, 0],
                        [24, -311, 5, 0],
                        [37, -345, 5, 0],
                        [45, -360, 5, 0],
                        [71, -370, 5, 0],
                        [104, -371, 5, 0],
                        [137, -361, 5, 0],
                        [154, -347, 5, 0],
                        [154, -317, 5, 0],
                        [146, -219, 5, 0],
                        [129, -156, 5, 0],
                        [122, -125, 5, 0],
                        [117, -109, 5, 0],
                        [149, -99, 5, 0],
                        [172, -93, 5, 0],
                        [193, -84, 5, 0],
                        [209, -72, 5, 0],
                        [209, -44, 5, 0],
                        [207, -21, 5, 0],
                        [199, -4, 5, 0],
                        [187, 6, 5, 0],
                        [164, -2, 5, 0],
                        [144, -13, 5, 0],
                        [121, -27, 5, 1]
                    ],
                    [
                        [10, 155, 0, 1],
                        [30, 162, 4, 0],
                        [59, 163, 4, 0],
                        [88, 155, 4, 0],
                        [109, 138, 4, 0],
                        [132, 99, 4, 0],
                        [153, 57, 4, 0],
                        [168, 25, 4, 0],
                        [180, 11, 4, 0],
                        [193, -1, 4, 0],
                        [206, -8, 4, 0],
                        [211, -24, 4, 0],
                        [197, -44, 4, 0],
                        [154, -74, 4, 0],
                        [85, -102, 4, 0],
                        [42, -114, 4, 0],
                        [15, -117, 4, 0],
                        [-8, -114, 4, 0],
                        [-15, -108, 4, 0],
                        [-15, -91, 4, 0],
                        [3, -74, 4, 0],
                        [44, -49, 4, 0],
                        [95, -27, 4, 0],
                        [143, -11, 4, 0],
                        [179, -8, 4, 0],
                        [205, -9, 4, 1],
                        [60, -62, 0, 1],
                        [41, -68, 7, 0],
                        [37, -87, 7, 0],
                        [42, -98, 7, 0],
                        [53, -106, 7, 0],
                        [70, -103, 7, 0],
                        [79, -92, 7, 0],
                        [79, -76, 7, 0],
                        [71, -64, 7, 0],
                        [60, -61, 7, 1],
                        [-15, -91, 0, 1],
                        [-12, -77, 4, 0],
                        [-12, -57, 4, 0],
                        [-22, -21, 4, 0],
                        [-38, 27, 4, 0],
                        [-48, 71, 4, 0],
                        [-48, 106, 4, 0],
                        [-33, 128, 4, 0],
                        [-17, 142, 4, 0],
                        [12, 156, 4, 1],
                        [-33, 10, 0, 1],
                        [-45, -13, 1, 0],
                        [-51, -34, 1, 0],
                        [-53, -43, 1, 0],
                        [-65, -30, 1, 0],
                        [-84, -8, 1, 0],
                        [-108, 20, 1, 0],
                        [-122, 40, 1, 0],
                        [-127, 47, 1, 0],
                        [-117, 73, 1, 0],
                        [-97, 111, 1, 0],
                        [-54, 147, 1, 0],
                        [-28, 170, 1, 1],
                        [-17, 162, 1, 0],
                        [-5, 156, 1, 0],
                        [19, 160, 1, 0],
                        [35, 172, 1, 0],
                        [38, 197, 1, 0],
                        [30, 221, 1, 0],
                        [1, 233, 1, 0],
                        [-18, 229, 1, 0],
                        [-29, 215, 1, 0],
                        [-39, 202, 1, 0],
                        [-34, 183, 1, 0],
                        [-28, 171, 1, 1],
                        [-100, 109, 0, 1],
                        [-118, 98, 1, 0],
                        [-132, 95, 1, 0],
                        [-148, 90, 1, 0],
                        [-156, 88, 1, 0],
                        [-164, 104, 1, 0],
                        [-175, 138, 1, 0],
                        [-178, 173, 1, 0],
                        [-178, 197, 1, 0],
                        [-178, 217, 1, 0],
                        [-176, 228, 1, 1],
                        [-146, 227, 1, 0],
                        [-104, 220, 1, 0],
                        [-67, 207, 1, 0],
                        [-50, 203, 1, 0],
                        [-41, 201, 1, 1],
                        [-66, 213, 1, 0],
                        [-78, 235, 1, 0],
                        [-75, 256, 1, 0],
                        [-53, 266, 1, 0],
                        [-30, 266, 1, 0],
                        [-19, 252, 1, 0],
                        [-17, 240, 1, 0],
                        [-19, 230, 1, 1],
                        [-5, 234, 0, 1],
                        [-5, 244, 1, 0],
                        [0, 265, 1, 0],
                        [14, 276, 1, 0],
                        [33, 281, 1, 0],
                        [53, 275, 1, 0],
                        [67, 263, 1, 0],
                        [66, 250, 1, 1],
                        [31, 221, 0, 1],
                        [75, 262, 1, 0],
                        [106, 287, 1, 0],
                        [137, 303, 1, 0],
                        [148, 308, 1, 0],
                        [170, 277, 1, 0],
                        [194, 233, 1, 0],
                        [199, 190, 1, 0],
                        [199, 175, 1, 0],
                        [145, 168, 1, 0],
                        [125, 171, 1, 0],
                        [107, 170, 1, 0],
                        [128, 167, 1, 0],
                        [155, 156, 1, 0],
                        [175, 150, 1, 0],
                        [181, 143, 1, 0],
                        [182, 132, 1, 0],
                        [182, 113, 1, 0],
                        [180, 83, 1, 0],
                        [177, 42, 1, 0],
                        [174, 30, 1, 0],
                        [166, 33, 1, 1]
                    ],
                    [
                        [-238, 188, 0, 1],
                        [-238, 211, 7, 0],
                        [-225, 231, 7, 0],
                        [-202, 237, 7, 0],
                        [-178, 230, 7, 0],
                        [-167, 216, 7, 0],
                        [-150, 180, 7, 0],
                        [-118, 107, 7, 0],
                        [-75, 17, 7, 0],
                        [-51, -37, 7, 0],
                        [-30, -78, 7, 0],
                        [-19, -96, 7, 0],
                        [4, -105, 7, 0],
                        [23, -105, 7, 0],
                        [41, -97, 7, 0],
                        [48, -88, 7, 0],
                        [55, -76, 7, 0],
                        [57, -60, 7, 0],
                        [57, -47, 7, 0],
                        [53, -31, 7, 0],
                        [49, -14, 7, 0],
                        [53, 1, 7, 0],
                        [68, 12, 7, 0],
                        [85, 13, 7, 0],
                        [98, 12, 7, 0],
                        [110, 5, 7, 0],
                        [120, -7, 7, 0],
                        [127, -27, 7, 0],
                        [130, -54, 7, 0],
                        [130, -79, 7, 0],
                        [126, -101, 7, 0],
                        [115, -123, 7, 0],
                        [102, -142, 7, 0],
                        [81, -157, 7, 0],
                        [56, -172, 7, 0],
                        [37, -180, 7, 0],
                        [14, -182, 7, 0],
                        [-7, -182, 7, 0],
                        [-32, -175, 7, 0],
                        [-55, -163, 7, 0],
                        [-67, -153, 7, 0],
                        [-80, -141, 7, 0],
                        [-94, -125, 7, 0],
                        [-116, -76, 7, 0],
                        [-186, 77, 7, 0],
                        [-227, 161, 7, 0],
                        [-238, 187, 7, 1],
                        [-202, 144, 0, 1],
                        [-148, 137, 1, 1],
                        [-175, 74, 0, 1],
                        [-114, 71, 1, 1],
                        [-138, 7, 0, 1],
                        [-83, 1, 1, 1],
                        [-110, -54, 0, 1],
                        [-57, -61, 1, 1],
                        [-75, -117, 0, 1],
                        [54, -137, 1, 1],
                        [62, -80, 0, 1],
                        [113, -89, 1, 1],
                        [63, -19, 0, 1],
                        [115, -26, 1, 1]
                    ],
                    [
                        [-11, -357, 0, 1],
                        [2, -13, 7, 1],
                        [26, -11, 6, 0],
                        [58, -4, 6, 0],
                        [95, 11, 6, 0],
                        [132, 40, 6, 0],
                        [171, 86, 6, 0],
                        [195, 140, 6, 0],
                        [199, 206, 6, 0],
                        [188, 261, 6, 0],
                        [159, 319, 6, 0],
                        [112, 359, 6, 0],
                        [53, 381, 6, 0],
                        [-17, 381, 6, 0],
                        [-80, 359, 6, 0],
                        [-129, 321, 6, 0],
                        [-163, 268, 6, 0],
                        [-178, 214, 6, 0],
                        [-175, 147, 6, 0],
                        [-156, 97, 6, 0],
                        [-131, 57, 6, 0],
                        [-96, 24, 6, 0],
                        [-57, 4, 6, 0],
                        [-29, -7, 6, 0],
                        [-11, -12, 6, 0],
                        [2, -13, 6, 1]
                    ],
                    [
                        [-263, 19, 0, 1],
                        [-263, -27, 4, 1],
                        [-263, -2, 0, 1],
                        [-236, -3, 4, 1],
                        [-236, 19, 0, 1],
                        [-236, -27, 4, 1],
                        [-192, -4, 0, 1],
                        [-195, 2, 4, 0],
                        [-201, 7, 4, 0],
                        [-208, 8, 4, 0],
                        [-216, 6, 4, 0],
                        [-222, 0, 4, 0],
                        [-224, -8, 4, 0],
                        [-223, -17, 4, 0],
                        [-220, -22, 4, 0],
                        [-215, -26, 4, 0],
                        [-206, -27, 4, 0],
                        [-201, -25, 4, 0],
                        [-195, -21, 4, 0],
                        [-193, -16, 4, 0],
                        [-192, -7, 4, 0],
                        [-192, -4, 4, 1],
                        [-192, -13, 4, 0],
                        [-192, -21, 4, 0],
                        [-191, -27, 4, 1],
                        [-178, 7, 0, 1],
                        [-178, -38, 4, 1],
                        [-177, -21, 4, 0],
                        [-177, -9, 4, 0],
                        [-176, -1, 4, 0],
                        [-173, 4, 4, 0],
                        [-167, 8, 4, 0],
                        [-158, 8, 4, 0],
                        [-151, 4, 4, 0],
                        [-146, -2, 4, 0],
                        [-145, -14, 4, 0],
                        [-149, -22, 4, 0],
                        [-154, -26, 4, 0],
                        [-160, -28, 4, 0],
                        [-168, -27, 4, 0],
                        [-174, -23, 4, 0],
                        [-177, -20, 4, 1],
                        [-135, 7, 0, 1],
                        [-135, -39, 4, 1],
                        [-135, -23, 4, 0],
                        [-134, -10, 4, 0],
                        [-132, -1, 4, 0],
                        [-127, 6, 4, 0],
                        [-122, 8, 4, 0],
                        [-115, 8, 4, 0],
                        [-110, 6, 4, 0],
                        [-106, 2, 4, 0],
                        [-103, -5, 4, 0],
                        [-103, -14, 4, 0],
                        [-105, -21, 4, 0],
                        [-112, -26, 4, 0],
                        [-119, -27, 4, 0],
                        [-127, -25, 4, 0],
                        [-130, -21, 4, 0],
                        [-135, -17, 4, 1],
                        [-95, 8, 0, 1],
                        [-81, -23, 4, 1],
                        [-67, 8, 0, 1],
                        [-87, -40, 4, 1],
                        [-41, -26, 0, 1],
                        [-41, 19, 5, 1],
                        [-7, -26, 5, 1],
                        [-7, 19, 5, 1],
                        [6, -8, 0, 1],
                        [28, -8, 5, 0],
                        [35, -8, 5, 0],
                        [37, -8, 5, 0],
                        [36, -2, 5, 0],
                        [32, 2, 5, 0],
                        [27, 7, 5, 0],
                        [17, 8, 5, 0],
                        [12, 6, 5, 0],
                        [7, 1, 5, 0],
                        [3, -4, 5, 0],
                        [3, -12, 5, 0],
                        [6, -19, 5, 0],
                        [11, -24, 5, 0],
                        [17, -27, 5, 0],
                        [24, -28, 5, 0],
                        [30, -26, 5, 0],
                        [33, -22, 5, 0],
                        [36, -16, 5, 1],
                        [41, 8, 0, 1],
                        [56, -27, 5, 1],
                        [67, 6, 5, 1],
                        [79, -27, 5, 1],
                        [92, 7, 5, 1],
                        [113, 19, 0, 1],
                        [128, -3, 6, 1],
                        [142, 19, 6, 1],
                        [128, -3, 6, 1],
                        [128, -26, 6, 1],
                        [153, -8, 0, 1],
                        [164, -8, 6, 0],
                        [175, -8, 6, 0],
                        [182, -8, 6, 0],
                        [184, -8, 6, 0],
                        [184, -4, 6, 0],
                        [182, 0, 6, 0],
                        [178, 5, 6, 0],
                        [170, 7, 6, 0],
                        [162, 7, 6, 0],
                        [155, 3, 6, 0],
                        [152, -4, 6, 0],
                        [151, -12, 6, 0],
                        [154, -19, 6, 0],
                        [157, -23, 6, 0],
                        [163, -27, 6, 0],
                        [171, -27, 6, 0],
                        [177, -25, 6, 0],
                        [180, -22, 6, 0],
                        [183, -17, 6, 1],
                        [224, -5, 0, 1],
                        [219, 3, 6, 0],
                        [212, 7, 6, 0],
                        [203, 8, 6, 0],
                        [199, 5, 6, 0],
                        [195, 2, 6, 0],
                        [192, -7, 6, 0],
                        [194, -17, 6, 0],
                        [200, -24, 6, 0],
                        [206, -27, 6, 0],
                        [213, -26, 6, 0],
                        [218, -23, 6, 0],
                        [223, -14, 6, 0],
                        [224, -5, 6, 1],
                        [225, -10, 6, 0],
                        [225, -18, 6, 0],
                        [225, -26, 6, 1],
                        [237, 7, 0, 0],
                        [237, -27, 6, 1],
                        [237, -16, 6, 0],
                        [237, -10, 6, 0],
                        [239, -3, 6, 0],
                        [244, 3, 6, 0],
                        [248, 6, 6, 0],
                        [251, 8, 6, 1]
                    ],
                    [
                        [-171, 78, 0, 1],
                        [-179, 89, 2, 0],
                        [-190, 96, 2, 0],
                        [-203, 96, 2, 0],
                        [-213, 96, 2, 0],
                        [-223, 89, 2, 0],
                        [-231, 79, 2, 0],
                        [-234, 70, 2, 0],
                        [-233, 54, 2, 0],
                        [-229, 47, 2, 0],
                        [-217, 38, 2, 0],
                        [-202, 24, 2, 0],
                        [-188, 15, 2, 0],
                        [-177, 1, 2, 0],
                        [-171, -9, 2, 0],
                        [-171, -22, 2, 0],
                        [-181, -31, 2, 0],
                        [-193, -37, 2, 0],
                        [-210, -38, 2, 0],
                        [-226, -31, 2, 0],
                        [-237, -21, 2, 0],
                        [-243, -10, 2, 1],
                        [-137, 61, 0, 1],
                        [-136, -70, 2, 1],
                        [-136, -38, 2, 0],
                        [-136, 6, 2, 0],
                        [-135, 33, 2, 0],
                        [-127, 48, 2, 0],
                        [-117, 56, 2, 0],
                        [-99, 63, 2, 0],
                        [-74, 62, 2, 0],
                        [-56, 49, 2, 0],
                        [-42, 30, 2, 0],
                        [-41, 13, 2, 0],
                        [-44, -12, 2, 0],
                        [-56, -26, 2, 0],
                        [-68, -34, 2, 0],
                        [-82, -39, 2, 0],
                        [-98, -38, 2, 0],
                        [-114, -31, 2, 0],
                        [-122, -23, 2, 0],
                        [-137, -8, 2, 1],
                        [-21, 61, 0, 1],
                        [-21, -37, 2, 1],
                        [-20, -12, 2, 0],
                        [-16, 21, 2, 0],
                        [-11, 44, 2, 0],
                        [6, 56, 2, 0],
                        [21, 62, 2, 1],
                        [42, 88, 0, 1],
                        [42, 88, 2, 1],
                        [42, 60, 0, 1],
                        [42, -35, 2, 1],
                        [77, 60, 0, 1],
                        [78, -36, 2, 1],
                        [79, -10, 2, 0],
                        [80, 30, 2, 0],
                        [87, 45, 2, 0],
                        [103, 60, 2, 0],
                        [121, 65, 2, 0],
                        [139, 59, 2, 0],
                        [149, 51, 2, 0],
                        [158, 36, 2, 0],
                        [158, 14, 2, 0],
                        [158, -35, 2, 1],
                        [277, 29, 0, 1],
                        [273, 41, 2, 0],
                        [264, 52, 2, 0],
                        [238, 65, 2, 0],
                        [217, 63, 2, 0],
                        [200, 51, 2, 0],
                        [184, 28, 2, 0],
                        [183, 1, 2, 0],
                        [196, -18, 2, 0],
                        [209, -28, 2, 0],
                        [232, -35, 2, 0],
                        [250, -29, 2, 0],
                        [266, -17, 2, 0],
                        [271, -4, 2, 0],
                        [276, 22, 2, 0],
                        [277, 29, 2, 1],
                        [277, -6, 2, 0],
                        [275, -33, 2, 0],
                        [268, -54, 2, 0],
                        [258, -62, 2, 0],
                        [241, -66, 2, 0],
                        [223, -68, 2, 0],
                        [206, -62, 2, 0],
                        [186, -43, 2, 1]
                    ]
                ]
            }, {
                label: "\u52a8\u753bA",
                arr: [0, 51]
            }, {
                label: "\u52a8\u753bB",
                arr: [0, 14]
            }];
            e.exports = {
                picArray: r,
                getPicArrayInfo: function() {
                    for (var e = [], t = 0; t < r.length; t++) {
                        var n = r[t].label;
                        "\u52a8\u753bA" == n || "\u52a8\u753bB" == n ? e.push({
                            label: r[t].label,
                            arr: [r[t].arr[0], r[t].arr[1]],
                            count: r[t].arr[1] - r[t].arr[0]
                        }) : e.push({
                            label: r[t].label,
                            count: r[t].arr.length
                        })
                    }
                    return e
                }
            }
        },
        "8aa4": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }), r("view", {
                        class: e._$s(2, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            id: "containerId",
                            _i: 2
                        }
                    }, [r("view", {
                        style: e._$s(3, "s", "background-color: #10161C; width: 100%; height: 100%; display: flex; justify-content: center; padding-top: " + e.statusBarHeight + "px;"),
                        attrs: {
                            _i: 3
                        }
                    }, [r("image", {
                        attrs: {
                            _i: 4
                        }
                    }), r("view", [r("view", {
                        style: e._$s(6, "s", (e.rtl ? "margin-left: 20rem;" : "") + "z-index: 1; display: flex; align-items: center; direction: ltr;"),
                        attrs: {
                            _i: 6
                        },
                        on: {
                            click: e.settingClick
                        }
                    }, [r("view", {
                        class: e._$s(7, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 7
                        }
                    }, [r("image", {
                        attrs: {
                            _i: 8
                        }
                    }), r("text", [e._v(e._$s(9, "t0-0", e._s(e.$t("\u8bbe\u7f6e"))))])])]), r("view", {
                        style: e._$s(10, "s", "position: absolute; left: calc(100vw - 100rem); top:" + e.warnTop + "px;"),
                        attrs: {
                            _i: 10
                        }
                    }, [r("image", {
                        attrs: {
                            _i: 11
                        }
                    })]), r("view", {
                        staticClass: e._$s(12, "sc", "title-view-class"),
                        attrs: {
                            _i: 12
                        }
                    }, [r("text", {
                        staticClass: e._$s(13, "sc", "title-text-class"),
                        attrs: {
                            _i: 13
                        }
                    }), r("text", {
                        staticClass: e._$s(14, "sc", "title-text-class-sub"),
                        attrs: {
                            _i: 14
                        }
                    })]), r("view", [r("view", [r("view", [r("view", {
                        attrs: {
                            _i: 18
                        },
                        on: {
                            click: e.cnnLaser
                        }
                    }, [r("image", {
                        attrs: {
                            _i: 19
                        }
                    }), r("text", [e._v(e._$s(20, "t0-0", e._s(e.$t("\u70b9\u6211\u8fde\u63a5"))))])]), r("view", [r("view", {
                        staticClass: e._$s(22, "sc", "view-device-onoff1"),
                        style: e._$s(22, "s", e.deviceOn ? "justify-content: flex-end;background-color: #75E4FD;" : ""),
                        attrs: {
                            _i: 22
                        },
                        on: {
                            click: e.onOffChange
                        }
                    }, [r("view", {
                        staticClass: e._$s(23, "sc", "view-device-onoff2"),
                        style: e._$s(23, "s", e.deviceOn ? "background: #39CD78;" : "background: red;"),
                        attrs: {
                            _i: 23
                        }
                    })])])]), r("view", [r("view", [r("view", {
                        style: e._$s(26, "s", (e.cnnState ? "background-color: #39CD78;" : "background-color: #597181;") + "margin-right: 10rem; width: 20rem; height: 20rem; border-radius: 10rem;"),
                        attrs: {
                            _i: 26
                        }
                    }), r("text", {
                        style: e._$s(27, "s", "font-size: 24rem;" + (e.cnnState ? "color: #DADADA;" : "color: #597181;")),
                        attrs: {
                            _i: 27
                        }
                    }, [e._v(e._$s(27, "t0-0", e._s(e.cnnState ? e.$t("\u5df2\u8fde\u63a5") + " " + e.cnnDevice : e.$t("\u84dd\u7259\u672a\u8fde\u63a5"))))])]), r("view", [r("text", [e._v(e._$s(29, "t0-0", e._s(e.$t("\u8bbe\u5907"))))]), r("text", {
                        style: e._$s(30, "s", "width: 70rem; text-align: left; font-size: 30rem;" + (e.deviceOn ? "color: #39CD78;" : "color: red;")),
                        attrs: {
                            _i: 30
                        }
                    }, [e._v(e._$s(30, "t0-0", e._s(e.deviceOn ? "ON" : "OFF")))])])])])]), r("view", [e._$s(32, "i", !e.ledDevTag) ? r("view", {
                        attrs: {
                            _i: 32
                        }
                    }, [e._l(e._$s(33, "f", {
                        forItems: e.functionsShow
                    }), (function(t, n, h, a) {
                        return [e._$s("34-" + a, "i", n % 3 == 0) ? r("view", {
                            key: e._$s(33, "f", {
                                forIndex: h,
                                keyIndex: 0,
                                key: n + "_0"
                            }),
                            staticClass: e._$s("34-" + a, "sc", "fun-btn-group"),
                            attrs: {
                                _i: "34-" + a
                            }
                        }, e._l(3, (function(t, h, i, c) {
                            return e._$s("35-" + a + "-" + c, "i", h + n < e.functionsShow.length) ? r("view", {
                                key: h,
                                staticClass: e._$s("35-" + a + "-" + c, "sc", "fun-btn-view"),
                                attrs: {
                                    _i: "35-" + a + "-" + c
                                }
                            }, [r("view", {
                                staticClass: e._$s("36-" + a + "-" + c, "sc", "view-main-func"),
                                style: e._$s("36-" + a + "-" + c, "s", e.prjIndex == e.functionsShow[h + n].tag ? "background: linear-gradient(0deg, #0566D1, #4FC8E3);" : ""),
                                attrs: {
                                    "data-tag": e._$s("36-" + a + "-" + c, "a-data-tag", e.functionsShow[h + n].tag),
                                    _i: "36-" + a + "-" + c
                                },
                                on: {
                                    click: e.prjClick
                                }
                            }, [r("view", {
                                staticClass: e._$s("37-" + a + "-" + c, "sc", "view-main-func-sub"),
                                style: e._$s("37-" + a + "-" + c, "s", e.prjIndex == e.functionsShow[h + n].tag ? "background-color: #2B4863;" : ""),
                                attrs: {
                                    _i: "37-" + a + "-" + c
                                }
                            }, [r("image", {
                                staticClass: e._$s("38-" + a + "-" + c, "sc", "view-main-image"),
                                attrs: {
                                    src: e._$s("38-" + a + "-" + c, "a-src", "/static/imgs/main/" + e.functionsShow[h + n].img),
                                    _i: "38-" + a + "-" + c
                                }
                            })])]), r("view"), r("text", {
                                staticClass: e._$s("40-" + a + "-" + c, "sc", "btn-text-class"),
                                attrs: {
                                    _i: "40-" + a + "-" + c
                                }
                            }, [e._v(e._$s("40-" + a + "-" + c, "t0-0", e._s(e.$t(e.functionsShow[h + n].name))))])]) : r("view", {
                                staticClass: e._$s("41-" + a + "-" + c, "sc", "fun-btn-view"),
                                attrs: {
                                    _i: "41-" + a + "-" + c
                                }
                            })
                        })), 0) : e._e()]
                    }))], 2) : e._e(), e._$s(42, "i", e.ledDevTag) ? r("view", {
                        attrs: {
                            _i: 42
                        }
                    }, [r("view", [r("view", {
                        staticClass: e._$s(44, "sc", "display-btn-group"),
                        attrs: {
                            _i: 44
                        }
                    }, [r("text", {
                        staticClass: e._$s(45, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 45
                        }
                    }, [e._v(e._$s(45, "t0-0", e._s(e.$t("\u989c\u8272\u8bbe\u7f6e"))))]), r("slider", {
                        staticClass: e._$s(46, "sc", "fun-slider"),
                        attrs: {
                            _i: 46
                        },
                        on: {
                            change: e.slTxDistChange
                        }
                    })])]), r("view", [r("radio-group", {
                        staticClass: e._$s(48, "sc", "display-btn-group"),
                        attrs: {
                            _i: 48
                        },
                        on: {
                            change: e.radioChange
                        }
                    }, [r("view", [r("label", {
                        staticClass: e._$s(50, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 50
                        }
                    }, [e._v(e._$s(50, "t0-0", e._s(e.$t("\u6447\u5934\u6a21\u5f0f"))))]), r("label", {
                        staticClass: e._$s(51, "sc", "fun-radio"),
                        attrs: {
                            _i: 51
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(52, "a-checked", !!e.xyCnf.auto),
                            _i: 52
                        }
                    }), r("text", {
                        style: e._$s(53, "s", "font-size: 30rem;" + (e.xyCnf.auto ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 53
                        }
                    }, [e._v(e._$s(53, "t0-0", e._s(e.$t("\u81ea\u52a8"))))])]), r("label", {
                        staticClass: e._$s(54, "sc", "fun-radio"),
                        attrs: {
                            _i: 54
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(55, "a-checked", !e.xyCnf.auto),
                            _i: 55
                        }
                    }), r("text", {
                        style: e._$s(56, "s", "font-size: 30rem;" + (e.xyCnf.auto ? "color: #687C8E;" : "color: #76CEE7;")),
                        attrs: {
                            _i: 56
                        }
                    }, [e._v(e._$s(56, "t0-0", e._s(e.$t("\u624b\u52a8"))))])])])])]), r("view", [r("radio-group", {
                        staticClass: e._$s(58, "sc", "display-btn-group"),
                        attrs: {
                            _i: 58
                        },
                        on: {
                            change: e.radioPhaseChange
                        }
                    }, [r("view", [r("view", [r("label", {
                        staticClass: e._$s(61, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 61
                        }
                    }, [e._v(e._$s(61, "t0-0", e._s(e.$t("\u6447\u5934\u76f8\u4f4d"))))]), r("label", {
                        staticClass: e._$s(62, "sc", "fun-radio"),
                        attrs: {
                            _i: 62
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(63, "a-checked", 0 == e.xyCnf.phase),
                            _i: 63
                        }
                    }), r("text", {
                        style: e._$s(64, "s", "font-size: 30rem;" + (0 == e.xyCnf.phase ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 64
                        }
                    }, [e._v(e._$s(64, "t0-0", e._s("X+Y+")))])]), r("label", {
                        staticClass: e._$s(65, "sc", "fun-radio"),
                        attrs: {
                            _i: 65
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(66, "a-checked", 1 == e.xyCnf.phase),
                            _i: 66
                        }
                    }), r("text", {
                        style: e._$s(67, "s", "font-size: 30rem;" + (1 == e.xyCnf.phase ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 67
                        }
                    }, [e._v(e._$s(67, "t0-0", e._s("X-Y+")))])])]), r("view", [r("label", {
                        staticClass: e._$s(69, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 69
                        }
                    }), r("label", {
                        staticClass: e._$s(70, "sc", "fun-radio"),
                        attrs: {
                            _i: 70
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(71, "a-checked", 2 == e.xyCnf.phase),
                            _i: 71
                        }
                    }), r("text", {
                        style: e._$s(72, "s", "font-size: 30rem;" + (2 == e.xyCnf.phase ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 72
                        }
                    }, [e._v(e._$s(72, "t0-0", e._s("X+Y-")))])]), r("label", {
                        staticClass: e._$s(73, "sc", "fun-radio"),
                        attrs: {
                            _i: 73
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(74, "a-checked", 3 == e.xyCnf.phase),
                            _i: 74
                        }
                    }), r("text", {
                        style: e._$s(75, "s", "font-size: 30rem;" + (3 == e.xyCnf.phase ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 75
                        }
                    }, [e._v(e._$s(75, "t0-0", e._s("X-Y-")))])])])])])]), r("view", {
                        staticClass: e._$s(76, "sc", "canvas-xy"),
                        style: e._$s(76, "s", "opacity: " + (e.xyCnf.auto ? "0.3" : "1") + ";"),
                        attrs: {
                            _i: 76
                        }
                    }, [r("view", {
                        attrs: {
                            id: "cvView",
                            _i: 77
                        }
                    }, e._l(e._$s(78, "f", {
                        forItems: e.xyCnf.xy
                    }), (function(t, n, h, a) {
                        return r("view", {
                            key: e._$s(78, "f", {
                                forIndex: h,
                                key: n
                            })
                        }, [r("canvas", {
                            attrs: {
                                "data-idx": e._$s("79-" + a, "a-data-idx", n),
                                "canvas-id": e._$s("79-" + a, "a-canvas-id", "chCanvas" + t.name),
                                id: e._$s("79-" + a, "a-id", "chCanvas" + t.name),
                                _i: "79-" + a
                            },
                            on: {
                                touchstart: e.chTouchstart,
                                touchmove: e.chTouchmove,
                                touchend: e.chTouchend,
                                touchcancel: e.chTouchend
                            }
                        })])
                    })), 0), r("view", {
                        attrs: {
                            id: "cvView",
                            _i: 80
                        }
                    }, e._l(e._$s(81, "f", {
                        forItems: e.xyCnf.xy
                    }), (function(t, n, h, a) {
                        return r("label", {
                            key: e._$s(81, "f", {
                                forIndex: h,
                                key: n
                            })
                        }, [e._v(e._$s("81-" + a, "t0-0", e._s(e.$t(t.title))))])
                    })), 0)])]) : e._e(), r("view")])])])])], 1)
                },
                a = []
        },
        "8bca": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("531a"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "8d15": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default,
                    HMDragSorts: r("1b20").default,
                    uniPopup: r("762b").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [r("navigation-bar", {
                        attrs: {
                            title: e.ntitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), r("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [r("view", [e._v(e._$s(4, "t0-0", e._s(e.playListName)))]), r("view", [r("HM-dragSorts", {
                        ref: "dragSorts",
                        attrs: {
                            listHeight: e.listHeight,
                            rtl: e.rtl,
                            list: e.fileList,
                            _i: 6
                        },
                        on: {
                            onclick: e.onclick,
                            change: e.change,
                            ondelete: e.onDelete,
                            confirm: e.confirm
                        }
                    })], 1), r("view", {
                        staticClass: e._$s(7, "sc", "btn-view-height"),
                        style: e._$s(7, "s", "height:" + e.btnViewHeightRem + "rem;"),
                        attrs: {
                            _i: 7
                        }
                    }, [r("view", {
                        staticClass: e._$s(8, "sc", "opr-btn "),
                        attrs: {
                            _i: 8
                        },
                        on: {
                            click: e.playListAdd
                        }
                    }, [e._v(e._$s(8, "t0-0", e._s(e.$t("\u6dfb\u52a0"))))]), r("view", {
                        staticClass: e._$s(9, "sc", "opr-btn "),
                        attrs: {
                            _i: 9
                        },
                        on: {
                            click: e.setPlayTime
                        }
                    }, [e._v(e._$s(9, "t0-0", e._s(e.$t("\u6279\u91cf\u8bbe\u7f6e"))))]), r("view", {
                        staticClass: e._$s(10, "sc", "opr-btn btn-linear"),
                        attrs: {
                            _i: 10
                        },
                        on: {
                            click: e.playListOk
                        }
                    }, [e._v(e._$s(10, "t0-0", e._s(e.$t("\u4fdd\u5b58"))))])]), r("uni-popup", {
                        ref: "popupTime",
                        attrs: {
                            "mask-click": !1,
                            animation: !1,
                            _i: 11
                        },
                        on: {
                            change: e.popupTimeChange
                        }
                    }, [r("view", [r("view", [r("button", {
                        attrs: {
                            _i: 14
                        },
                        on: {
                            click: function(t) {
                                return e.changeTimeClick(-.1)
                            }
                        }
                    }), r("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.playTime,
                            expression: "playTime"
                        }],
                        staticClass: e._$s(15, "sc", "popup-input"),
                        attrs: {
                            _i: 15
                        },
                        domProps: {
                            value: e._$s(15, "v-model", e.playTime)
                        },
                        on: {
                            blur: e.onTimeBlur,
                            input: function(t) {
                                t.target.composing || (e.playTime = t.target.value)
                            }
                        }
                    }), r("label", [e._v(e._$s(16, "t0-0", e._s(e.$t("\u79d2"))))]), r("button", {
                        attrs: {
                            _i: 17
                        },
                        on: {
                            click: function(t) {
                                return e.changeTimeClick(.1)
                            }
                        }
                    })]), r("view", [r("view", {
                        attrs: {
                            _i: 19
                        },
                        on: {
                            click: e.popupTimeCancelClick
                        }
                    }, [e._v(e._$s(19, "t0-0", e._s(e.$t("\u53d6\u6d88"))))]), r("view"), r("view", {
                        attrs: {
                            _i: 21
                        },
                        on: {
                            click: e.popupTimeOkClick
                        }
                    }, [e._v(e._$s(21, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])])]), e._$s(22, "i", e.itemLoading) ? [r("view"), r("canvas", {
                        attrs: {
                            id: "progressCanvas",
                            _i: 24
                        }
                    })] : e._e(), e._e(), e._$s(30, "i", e.drawCanvasShow || !0) ? r("canvas", {
                        style: e._$s(30, "s", "height: " + e.drawCanvas.h + "px; width: " + e.drawCanvas.w + "px; position: absolute; top: -99999; left: 999999;"),
                        attrs: {
                            id: "drawCanvas",
                            _i: 30
                        }
                    }) : e._e()], 2)], 1)
                },
                a = []
        },
        "8e17": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("5a85"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        9008: function(e, t) {
            e.exports = function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        "91e0": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    uniTransition: r("ae26").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return e._$s(0, "i", e.showPopup) ? r("view", {
                        staticClass: e._$s(0, "sc", "uni-popup"),
                        class: e._$s(0, "c", [e.popupstyle, e.isDesktop ? "fixforpc-z-index" : ""]),
                        attrs: {
                            _i: 0
                        }
                    }, [r("view", {
                        attrs: {
                            _i: 1
                        },
                        on: {
                            touchstart: e.touchstart
                        }
                    }, [e._$s(2, "i", e.maskShow) ? r("uni-transition", {
                        key: "1",
                        attrs: {
                            name: "mask",
                            "mode-class": "fade",
                            styles: e.maskClass,
                            duration: e.duration,
                            show: e.showTrans,
                            _i: 2
                        },
                        on: {
                            click: e.onTap
                        }
                    }) : e._e(), r("uni-transition", {
                        key: "2",
                        attrs: {
                            "mode-class": e.ani,
                            name: "content",
                            styles: e.transClass,
                            duration: e.duration,
                            show: e.showTrans,
                            _i: 3
                        },
                        on: {
                            click: e.onTap
                        }
                    }, [r("view", {
                        staticClass: e._$s(4, "sc", "uni-popup__wrapper"),
                        class: e._$s(4, "c", [e.popupstyle]),
                        style: e._$s(4, "s", {
                            backgroundColor: e.bg
                        }),
                        attrs: {
                            _i: 4
                        },
                        on: {
                            click: e.clear
                        }
                    }, [e._t("default", null, {
                        _i: 5
                    })], 2)])], 1)]) : e._e()
                },
                a = []
        },
        9327: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("appStateManager"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "951c": function(e, t) {
            e.exports = Vue
        },
        9573: function(e, t, r) {
            "use strict";
            (function(e) {
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var n = r("780d"),
                    h = getApp(),
                    a = r("textLineVectorizer "),
                    i = ["red", "green", "blue", "yellow", "#00FFFF", "purple", "white"],
                    c = {
                        data: function() {
                            return {
                                ntitle: this.$t("\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247"),
                                debugTag: h.globalData.mainPage.debugTag,
                                screen_width: h.globalData.screen_width_str,
                                screen_width_float: h.globalData.screen_width_float,
                                rtl: h.globalData.rtl,
                                drawing: !1,
                                genLine: !1,
                                showCanvasLine: !1,
                                genCfgHeight: 50,
                                genCfg: {
                                    lineSize: 600,
                                    double: !0,
                                    preDeal: !0,
                                    effects: 5,
                                    effects2: 200,
                                    centerXY: !0
                                },
                                imgCanvas: {
                                    w: 0,
                                    h: 0
                                },
                                startDistance: 0,
                                startScale: 1,
                                startLeftTop: {
                                    left: 0,
                                    top: 0,
                                    cx: 0,
                                    cy: 0
                                },
                                startXY: {
                                    x: 0,
                                    y: 0
                                },
                                drawInfo: {
                                    left: 0,
                                    top: 0,
                                    scale: 1,
                                    initScale: 1
                                },
                                lineCanvasSize: {
                                    w: 2e3,
                                    h: 2e3
                                },
                                imgInfo: {
                                    w: 0,
                                    h: 0,
                                    path: null
                                },
                                cropInfo: {
                                    x: 0,
                                    y: 0,
                                    w: 0,
                                    h: 0
                                },
                                outMode: -1,
                                outLines: [],
                                outImg: null
                            }
                        },
                        onReady: function() {},
                        onLoad: function(e) {
                            this.debugTag && (this.genCfg.centerXY = !0);
                            var t = this,
                                r = this.getOpenerEventChannel();
                            r.on("acceptDataFromOpenerPage", (function(e) {
                                t.imgInfo.path = e, t.initUiSize()
                            }))
                        },
                        onUnload: function() {
                            var e = this.getOpenerEventChannel();
                            0 == this.outMode ? e.emit("acceptDataFromOpenedPage", {
                                mode: this.outMode,
                                data: this.outImg
                            }) : 1 == this.outMode ? e.emit("acceptDataFromOpenedPage", {
                                mode: this.outMode,
                                data: this.outLines,
                                size: this.genCfg.lineSize
                            }) : e.emit("acceptDataFromOpenedPage", {
                                mode: -1,
                                data: null
                            })
                        },
                        methods: {
                            initUiSize: function() {
                                var e = this;
                                setTimeout((function() {
                                    var t = uni.createSelectorQuery().in(e);
                                    t.select("#imgCanvas").boundingClientRect((function(t) {
                                        e.imgCanvas.w = t.width, e.imgCanvas.h = t.height;
                                        var r = e.imgCanvas.w;
                                        e.imgCanvas.w > e.imgCanvas.h && (r = e.imgCanvas.h), r *= .8, e.cropInfo = {
                                            x: (e.imgCanvas.w - r) / 2,
                                            y: (e.imgCanvas.h - r) / 2,
                                            w: r,
                                            h: r
                                        }, setTimeout((function() {
                                            null != e.imgInfo.path && e.initPhoto(e.imgInfo.path)
                                        }), 20)
                                    })).exec()
                                }), 50)
                            },
                            slEffectsChange: function(t) {
                                e("log", t, " at sub/pages/cover/cover.js:85");
                                var r = t.detail.value;
                                this.genCfg.effects != r && (this.genCfg.effects = r, this.doShowImgLine(this.imgInfo.path))
                            },
                            slEffectsChange2: function(t) {
                                e("log", t, " at sub/pages/cover/cover.js:94");
                                var r = t.detail.value;
                                this.genCfg.effects2 != r && (this.genCfg.effects2 = r, this.doShowImgLine(this.imgInfo.path))
                            },
                            touchStart: function(e) {
                                if (!this.genLine && (1 === e.touches.length && (this.startXY = {
                                        x: e.touches[0].x,
                                        y: e.touches[0].y
                                    }, this.startLeftTop = {
                                        left: this.drawInfo.left,
                                        top: this.drawInfo.top,
                                        cx: 0,
                                        cy: 0
                                    }), 2 === e.touches.length)) {
                                    this.lastTouches = [{
                                        x: e.touches[0].x,
                                        y: e.touches[0].y
                                    }, {
                                        x: e.touches[1].x,
                                        y: e.touches[1].y
                                    }];
                                    var t = this.getDistance(e.touches);
                                    this.startDistance = t.distance, this.startScale = this.drawInfo.scale, this.startLeftTop = {
                                        left: this.drawInfo.left,
                                        top: this.drawInfo.top,
                                        cx: t.cx,
                                        cy: t.cy
                                    }
                                }
                            },
                            fixDrawParm: function() {},
                            touchMove: function(e) {
                                if (!this.genLine) {
                                    if (1 === e.touches.length) {
                                        if (null == this.startXY) return;
                                        this.drawInfo.left = this.startLeftTop.left + e.touches[0].x - this.startXY.x, this.drawInfo.top = this.startLeftTop.top + e.touches[0].y - this.startXY.y, this.fixDrawParm(), this.drawPhoto()
                                    }
                                    if (2 === e.touches.length) {
                                        this.startXY = null;
                                        var t = this.getDistance(e.touches),
                                            r = t.distance / this.startDistance;
                                        this.drawInfo.scale = this.startScale * r, this.drawInfo.scale > 2 && (this.drawInfo.scale = 2, r = this.drawInfo.scale / this.startScale), this.drawInfo.top = this.startLeftTop.top - (r - 1) * (this.startLeftTop.cy - this.startLeftTop.top), this.drawInfo.left = this.startLeftTop.left - (r - 1) * (this.startLeftTop.cx - this.startLeftTop.left), this.fixDrawParm(), this.drawPhoto()
                                    }
                                }
                            },
                            touchEnd: function(e) {},
                            getDistance: function(e) {
                                var t = e[1].x - e[0].x,
                                    r = e[1].y - e[0].y,
                                    n = t / 2 + e[0].x,
                                    h = r / 2 + e[0].y,
                                    a = Math.sqrt(t * t + r * r);
                                return {
                                    cx: n,
                                    cy: h,
                                    distance: a
                                }
                            },
                            doDrawPhoto: function() {
                                if (0 != this.imgInfo.w && 0 != this.imgInfo.h) {
                                    var e = this.imgInfo.w * this.drawInfo.scale,
                                        t = this.imgInfo.h * this.drawInfo.scale,
                                        r = uni.createCanvasContext("imgCanvas", this);
                                    r.drawImage(this.imgInfo.path, this.drawInfo.left, this.drawInfo.top, e, t), r.setLineDash([15, 5]), r.setStrokeStyle("#51D1EA"), r.setLineWidth(1), r.strokeRect(this.cropInfo.x, this.cropInfo.y, this.cropInfo.w, this.cropInfo.h), r.stroke(), r.draw()
                                }
                            },
                            drawPhoto: function() {
                                var e = this;
                                this.drawing || (this.drawing = !0, setTimeout((function() {
                                    e.doDrawPhoto(), e.drawing = !1
                                }), 10))
                            },
                            okClick: function(e) {
                                var t = this;
                                this.savePicFile((function(e) {
                                    t.outMode = 0, uni.navigateBack()
                                }))
                            },
                            initDrawInfo: function() {
                                var e = this.imgInfo.w / this.imgInfo.h,
                                    t = 0,
                                    r = 0,
                                    n = 1,
                                    h = this.cropInfo.w / this.cropInfo.h;
                                e < h ? (n = this.cropInfo.h / this.imgInfo.h, r = this.cropInfo.h, t = n * this.imgInfo.w) : (n = this.cropInfo.w / this.imgInfo.w, t = this.cropInfo.w, r = n * this.imgInfo.h);
                                var a = (this.imgCanvas.w - t) / 2,
                                    i = (this.imgCanvas.h - r) / 2;
                                this.drawInfo = {
                                    left: a,
                                    top: i,
                                    scale: n,
                                    initScale: n
                                }
                            },
                            initPhoto: function(e) {
                                var t = this;
                                this.getImageInfo(e, (function(r) {
                                    t.imgInfo = {
                                        w: r.width,
                                        h: r.height,
                                        path: e
                                    }, t.initDrawInfo(), t.drawPhoto()
                                }))
                            },
                            getImageInfo: function(t, r) {
                                uni.getImageInfo({
                                    src: t,
                                    success: function(e) {
                                        r(e)
                                    },
                                    fail: function(t) {
                                        e("error", "\u83b7\u53d6\u56fe\u7247\u4fe1\u606f\u5931\u8d25", t, " at sub/pages/cover/cover.js:245")
                                    }
                                })
                            },
                            drawLine: function(t, r, n) {
                                e("log", "lines", n, " at sub/pages/cover/cover.js:251"), 0 == n.length && h.globalData.showModalTips(this.$t("\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848"));
                                var a = uni.createCanvasContext("imgCanvas", this),
                                    c = 0,
                                    o = (this.imgCanvas.h - 60 - this.screen_width_float * this.genCfgHeight) / 2,
                                    s = this.imgCanvas.w - 40;
                                c = o < s ? o : s;
                                var l = c,
                                    p = c;
                                r.w > r.h ? p = l / r.w * r.h : l = p / r.h * r.w;
                                var d = (this.imgCanvas.w - c) / 2;
                                a.drawImage(t, r.x, r.y, r.w, r.h, d + (c - l) / 2, 20 + (c - p) / 2, l, p);
                                var b = 40 + c;
                                a.setLineDash([]), a.setLineWidth(1);
                                var g = c / this.genCfg.lineSize,
                                    j = this.genCfg.lineSize / 2,
                                    x = 0;
                                this.outLines = [];
                                for (var V = 0; V < n.length; V++) {
                                    var f = n[V];
                                    if (!(f.length < 1)) {
                                        x += f.length;
                                        for (var F = [], k = 0; k < f.length; k++) {
                                            var m = f[k];
                                            F.push([m[0] - j, j - m[1], 0 == k ? 0 : m[2] + 1, 1]), 0 == k ? a.moveTo(m[0] * g + d, m[1] * g + b) : a.lineTo(m[0] * g + d, m[1] * g + b);
                                            var P = m[2];
                                            k < f.length - 1 ? k > 0 && f[k + 1][2] != P && (a.setStrokeStyle(i[P]), a.stroke(), a.beginPath(), a.moveTo(m[0] * g + d, m[1] * g + b)) : (a.setStrokeStyle(i[P]), a.stroke(), a.beginPath())
                                        }
                                        this.outLines.push(F)
                                    }
                                }
                                a.stroke(), a.beginPath(), a.setFontSize(10), a.setFillStyle("white"), a.fillText(x + "", 10, this.imgCanvas.h - 20), a.fill(), a.draw(), uni.hideLoading()
                            },
                            copyClick: function(t) {
                                if (e("log", "copyClick", " at sub/pages/cover/cover.js:329"), 0 != this.outLines.length) {
                                    var r = this.printLine(this.outLines);
                                    r && uni.setClipboardData({
                                        data: r,
                                        success: function() {
                                            h.globalData.showModalTips("\u590d\u5236\u6210\u529f")
                                        },
                                        fail: function(t) {
                                            e("log", "\u590d\u5236\u5931\u8d25", t, " at sub/pages/cover/cover.js:340"), h.globalData.showModalTips("\u590d\u5236\u5931\u8d25")
                                        }
                                    })
                                }
                            },
                            printLine: function(t) {
                                var r = a.dealImgLines(t);
                                e("log", "print begin --------------------", r, " at sub/pages/cover/cover.js:348");
                                for (var n = "", h = 0; h < r.length; h++) {
                                    var i = r[h],
                                        c = (1 * i[0]).toFixed(0) + " * 1",
                                        o = (1 * i[1]).toFixed(0) + " * 1",
                                        s = i[2],
                                        l = i[3];
                                    0 == h && (s = 0, l = 1), n = n + "\r\n{" + c.padStart(8, " ") + "," + o.padStart(8, " ") + ", " + s + ", " + l + "}, //DOT - " + (h + 1)
                                }
                                return e("log", n, " at sub/pages/cover/cover.js:364"), e("log", "print end --------------------", " at sub/pages/cover/cover.js:365"), n
                            },
                            savePicFile: function(e) {
                                var t = this;
                                uni.canvasToTempFilePath({
                                    canvasId: "imgCanvas",
                                    x: this.cropInfo.x + 1,
                                    y: this.cropInfo.y + 1,
                                    width: this.cropInfo.w - 2,
                                    height: this.cropInfo.h - 2,
                                    success: function(r) {
                                        t.outImg = r.tempFilePath, e(r)
                                    },
                                    fail: function(e) {}
                                })
                            },
                            lableCheckboxChange: function(e) {
                                var t = e.detail.value;
                                for (var r in this.genCfg) "double" != r && "preDeal" != r || (this.genCfg[r] = t.includes(r));
                                this.doShowImgLine(this.imgInfo.path)
                            },
                            calcLinePicSize: function() {
                                var t = this.imgInfo.w * this.drawInfo.scale,
                                    r = this.imgInfo.h * this.drawInfo.scale;
                                if (this.cropInfo.x + this.imgCanvas.w < this.drawInfo.left || this.cropInfo.x > this.drawInfo.left + t) return {
                                    result: -1
                                };
                                if (this.cropInfo.y + this.imgCanvas.h < this.drawInfo.top || this.cropInfo.y > this.drawInfo.top + r) return {
                                    result: -2
                                };
                                var n = 0;
                                this.cropInfo.x > this.drawInfo.left && (n = (this.cropInfo.x - this.drawInfo.left) / this.drawInfo.scale);
                                var h = 0;
                                this.cropInfo.y > this.drawInfo.top && (h = (this.cropInfo.y - this.drawInfo.top) / this.drawInfo.scale);
                                var a = this.imgInfo.w - n;
                                this.cropInfo.x + this.cropInfo.w < this.drawInfo.left + t && (a = (this.cropInfo.x + this.cropInfo.w - this.drawInfo.left) / this.drawInfo.scale - n);
                                var i = this.imgInfo.h - h;
                                this.cropInfo.y + this.cropInfo.h < this.drawInfo.top + r && (i = (this.cropInfo.y + this.cropInfo.h - this.drawInfo.top) / this.drawInfo.scale - h);
                                var c = 1;
                                a > 300 && i > 300 && (c = a > i ? 300 / i : 300 / a), (a < 60 || i < 60) && (c = 3), c *= 1.2, e("log", "z", c, " at sub/pages/cover/cover.js:427");
                                var o = {
                                    result: 0,
                                    x: n,
                                    y: h,
                                    w: a - 4 / c,
                                    h: i - 4 / c,
                                    z: c
                                };
                                return o
                            },
                            doShowImgLine: function(e) {
                                var t = this.calcLinePicSize();
                                if (0 == t.result) {
                                    var r = this;
                                    r.showCanvasLine = !0, r.$set(this, "lineCanvasSize", {
                                        w: r.imgInfo.w * t.z,
                                        h: r.imgInfo.h * t.z
                                    }), uni.showLoading({
                                        title: this.$t("\u6b63\u5728\u5904\u7406\u4e2d"),
                                        mask: !0
                                    }), setTimeout((function() {
                                        var h = uni.createCanvasContext("lineCanvas", r);
                                        h.drawImage(e, 0, 0, r.imgInfo.w * t.z, r.imgInfo.h * t.z), h.draw(!1, (function(h) {
                                            uni.canvasGetImageData({
                                                canvasId: "lineCanvas",
                                                x: Math.floor(t.x * t.z),
                                                y: Math.floor(t.y * t.z),
                                                width: Math.floor(t.w * t.z),
                                                height: Math.floor(t.h * t.z),
                                                success: function(h) {
                                                    r.showCanvasLine = !1;
                                                    var a = h.width,
                                                        i = h.height,
                                                        c = n.imgToline(h.data, a, i, r.genCfg);
                                                    r.drawLine(e, t, c.lines), r.genLine = !0
                                                },
                                                fail: function(e) {
                                                    uni.hideLoading()
                                                }
                                            })
                                        }))
                                    }), 500)
                                }
                            },
                            showImgLine: function() {
                                var e = this;
                                this.savePicFile((function(t) {
                                    e.doShowImgLine(e.imgInfo.path)
                                }))
                            },
                            genLineClick: function(e) {
                                this.debugTag || this.$set(this.genCfg, "double", !0), this.showImgLine()
                            },
                            backClick: function(e) {
                                this.outMode = -1, this.genLine = !1, this.drawPhoto()
                            },
                            lineOkClick: function(e) {
                                this.outMode = 1, uni.navigateBack()
                            },
                            chooseImage: function() {
                                var e = this;
                                this.outMode = -1, h.globalData.img_selecting = !0, uni.chooseImage({
                                    count: 1,
                                    sizeType: ["original", "compressed"],
                                    sourceType: ["album", "camera"],
                                    success: function(t) {
                                        e.genLine = !1;
                                        var r = t.tempFilePaths[0];
                                        e.$nextTick((function() {
                                            e.initPhoto(r)
                                        }))
                                    },
                                    complete: function(e) {
                                        h.globalData.img_selecting = !1
                                    }
                                })
                            }
                        }
                    };
                t.default = c
            }).call(this, r("f3b9")["default"])
        },
        "97f5": function(e, t, r) {
            "use strict";
            (function(e) {
                var n = r("47a9");
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var h = n(r("762b")),
                    a = getApp();
                var i = {
                    data: function() {
                        return {
                            screen_width: a.globalData.screen_width_str,
                            nbTitle: this.$t("\u84dd\u7259\u8fde\u63a5"),
                            rtl: a.globalData.rtl,
                            showUUID: a.globalData.mainPage.debugTag,
                            devices: null,
                            stopTimer: null,
                            startTimer: null,
                            openTimer: null,
                            tryCnt: 12,
                            InsCnns: [],
                            connected: !1,
                            chs: [],
                            misScanding: 0,
                            name: "",
                            deviceId: "",
                            testDevTimer: null,
                            testDevCnt: 0,
                            findInterval: 3e3,
                            canWrite: !1,
                            findtimes: 0
                        }
                    },
                    onHide: function() {
                        e("log", "cnn hide", " at pages/cnn/cnn.js:64")
                    },
                    onUnload: function() {
                        this.stopBluetoothDevicesDiscovery(), this.openTimer && clearTimeout(this.openTimer), this.openTimer = null, a.globalData.blu_state = 0
                    },
                    onLoad: function() {
                        this.initInsCnns(), "android" == a.globalData.platform.system && (this.findInterval = 7e3), this.showUUID || 0 == a.globalData.muuidSel || (a.globalData.savelastsel(0), a.globalData.readSetting())
                    },
                    onReady: function() {
                        a.globalData.blu_connect_stop = !0;
                        var e = this;
                        setTimeout((function() {
                            e.closeConnectedDev((function(t) {
                                a.globalData.blu_state = 2, e.readyToFindDevices()
                            }))
                        }), 200)
                    },
                    components: {
                        uniPopup: h.default
                    },
                    methods: {
                        testTap: function(t) {
                            var r = this;
                            null == this.testDevTimer ? (r.testDevCnt = 1, this.testDevTimer = setTimeout((function() {
                                r.testDevTimer = null
                            }), 2e3)) : r.testDevCnt = 1 + r.testDevCnt, e("log", "that.testDevCnt", r.testDevCnt, " at pages/cnn/cnn.js:115")
                        },
                        initInsCnns: function() {
                            this.InsCnns = [], this.InsCnns.push({
                                title: "Ins_OpenBlu_Title",
                                text: "Ins_OpenBlu_Text"
                            }), a.globalData.platform.app ? "android" == a.globalData.platform.system ? (this.InsCnns.push({
                                title: "Ins_PerBlu_Title",
                                text: "Ins_PerBlu_Text_android"
                            }), this.InsCnns.push({
                                title: "Ins_OpenLoc_Title",
                                text: "Ins_OpenLoc_Text"
                            }), this.InsCnns.push({
                                title: "Ins_PerLoc_Title",
                                text: "Ins_PerLoc_Text"
                            })) : this.InsCnns.push({
                                title: "Ins_PerBlu_Title",
                                text: "Ins_PerBlu_Text_IOS"
                            }) : ("android" == a.globalData.platform.system && this.InsCnns.push({
                                title: "Ins_OpenLoc_Title",
                                text: "Ins_OpenLoc_Text"
                            }), this.InsCnns.push({
                                title: "Ins_PerBlu_Title",
                                text: "Ins_PerBlu_Text_WX"
                            })), this.InsCnns.push({
                                title: "Ins_Distance_Title",
                                text: "Ins_Distance_Text"
                            }), this.InsCnns.push({
                                title: "Ins_Reroot_Title",
                                text: "Ins_Reroot_Text"
                            })
                        },
                        showCnnDeal: function(e) {
                            this.$refs.cnnDealPopup.open("center")
                        },
                        closeCnnDealPopup: function(e) {
                            this.$refs.cnnDealPopup.close()
                        },
                        testLongtap: function(t) {
                            e("log", "testLongtap", this.testDevCnt, " at pages/cnn/cnn.js:149"), this.testDevCnt >= 5 && (this.showUUID = !0, a.globalData.mainPage.debugTag = !0)
                        },
                        testDev: function() {
                            uni.getBluetoothAdapterState({
                                success: function(e) {
                                    e.discovering ? uni.stopBluetoothDevicesDiscovery({
                                        success: function(e) {
                                            uni.navigateTo({
                                                url: "/pages/test/test"
                                            })
                                        }
                                    }) : uni.navigateTo({
                                        url: "/pages/test/test"
                                    })
                                }
                            })
                        },
                        readyToFindDevices: function() {
                            var t = this;
                            uni.hideLoading(), a.globalData.blu_state = 2, a.globalData.openBluetoothAdapter((function(r) {
                                e("log", "openBluetoothAdapter", r, " at pages/cnn/cnn.js:175"), r && (a.globalData.clearDevice(), a.globalData.blu_cnn_from_page = !1, t.startBluetoothDevicesDiscovery())
                            }))
                        },
                        closeConnectedDev: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                            a.globalData.closeBLEConnection((function(t) {
                                e && e(t)
                            }))
                        },
                        dostartBluetoothDevicesDiscovery: function() {
                            var e = this;
                            uni.startBluetoothDevicesDiscovery({
                                services: a.globalData.mserviceuuids,
                                allowDuplicatesKey: !0,
                                success: function(t) {
                                    a.globalData.blu_Discovery_lastTime = (new Date).getTime(), e.findtimes = (new Date).getTime(), e.stopTimer = setTimeout((function() {
                                        e.stopTimer = null, e.stopBluetoothDevicesDiscovery()
                                    }), 1e4), e.misScanding = 2, e.onBluetoothDeviceFoundPro()
                                },
                                fail: function(t) {
                                    1509008 === t.errno && a.globalData.showModalTips(e.$t("\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650"), !0)
                                }
                            })
                        },
                        startBluetoothDevicesDiscovery: function() {
                            var e = this;
                            if (e.misScanding) this.stopBluetoothDevicesDiscovery();
                            else {
                                var t = (new Date).getTime();
                                t = this.findInterval - (t - a.globalData.blu_Discovery_lastTime), t = t < 0 ? 0 : t, e.devices = [], e.chs = [], e.misScanding = 1, e.startTimer = setTimeout((function() {
                                    e.startTimer = null, e.dostartBluetoothDevicesDiscovery()
                                }), t)
                            }
                        },
                        stopBluetoothDevicesDiscovery: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                                t = this;
                            t.misScanding ? (t.stopTimer && (clearTimeout(t.stopTimer), t.stopTimer = null), t.startTimer && (clearTimeout(t.startTimer), t.startTimer = null), 2 == t.misScanding ? uni.stopBluetoothDevicesDiscovery({
                                success: function(r) {
                                    (new Date).getTime();
                                    t.misScanding = 0, e && e()
                                }
                            }) : t.misScanding = 0) : e && e()
                        },
                        ab2hex: function(e) {
                            var t = Array.prototype.map.call(new Uint8Array(e), (function(e) {
                                    return ("00" + e.toString(16)).slice(-2) + ""
                                })),
                                r = t.join("").toUpperCase().slice(0, 4);
                            return r
                        },
                        onBluetoothDeviceFoundPro: function() {
                            var t = this;
                            uni.onBluetoothDeviceFound((function(r) {
                                r.devices.forEach((function(r) {
                                    if (r.name || r.localName) {
                                        var n = t.devices,
                                            h = function(e, t, r) {
                                                for (var n = 0; n < e.length; n++)
                                                    if (e[n][t] === r) return n;
                                                return -1
                                            }(n, "deviceId", r.deviceId);
                                        if (-1 !== h) {
                                            if (!r.localName || !r.name || n[h].localName == r.localName || r.name == r.localName) return;
                                            n.splice(h, 1)
                                        }
                                        var i = r.localName;
                                        if (i || (i = r.name), 0 == a.globalData.muuidSel) {
                                            if (!i || !i.startsWith("TD5322A_")) return;
                                            var c = i.substring("TD5322A_".length, i.length);
                                            e("log", "\u84dd\u7259\u8bbe\u5907\u540d\uff1a", i, "\u957f\u5ea6\uff1a", i.length, "\u540e\u7f00\uff1a", c, " at pages/cnn/cnn.js:298");
                                            var o = t.tripCh(r.deviceId, ":"),
                                                s = o.slice(0, 4).toUpperCase();
                                            i = "Laser_Light_" + s;
                                            var l = 0;
                                            /\b[0-9]\d{2}\b/.test(c) && (l = parseInt(c)), l > 0 && (c = "000" + l, i = i + "_V" + c.slice(-3))
                                        }
                                        r["showName"] = i, t.devices.push(r)
                                    }
                                }))
                            }))
                        },
                        tripCh: function(e, t) {
                            for (var r = "", n = 0; n < e.length; n++) ":" != e[n] && (r += e[n]);
                            return r
                        },
                        goto_Comm: function(e) {
                            var t = this;
                            a.globalData.ble_device = e.currentTarget.dataset, this.stopBluetoothDevicesDiscovery((function() {
                                var e = t.getOpenerEventChannel();
                                a.globalData.blu_cnn_from_page = !0, e.emit("acceptDataFromOpenedPage", {
                                    data: !0
                                })
                            }))
                        },
                        gotosetuuid: function() {
                            uni.navigateTo({
                                url: "/pages/setuuid/setuuid"
                            })
                        }
                    }
                };
                t.default = i
            }).call(this, r("f3b9")["default"])
        },
        "9b0f": function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return n
            })), r.d(t, "c", (function() {
                return h
            })), r.d(t, "a", (function() {}));
            var n = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("radio-group", {
                        staticClass: e._$s(1, "sc", "radio-group"),
                        attrs: {
                            _i: 1
                        },
                        on: {
                            change: e.radioChange
                        }
                    }, [r("view", e._l(e._$s(3, "f", {
                        forItems: e.items
                    }), (function(t, n, h, a) {
                        return r("label", {
                            key: e._$s(3, "f", {
                                forIndex: h,
                                key: n
                            }),
                            staticClass: e._$s("3-" + a, "sc", "radio"),
                            attrs: {
                                _i: "3-" + a
                            }
                        }, [r("radio", {
                            attrs: {
                                value: e._$s("4-" + a, "a-value", t.name),
                                checked: e._$s("4-" + a, "a-checked", e.nowsel == n),
                                _i: "4-" + a
                            }
                        }), e._v(e._$s("3-" + a, "t1-0", e._s(t.value)))])
                    })), 0)]), r("radio-group", {
                        staticClass: e._$s(5, "sc", "radio-group"),
                        attrs: {
                            _i: 5
                        },
                        on: {
                            change: e.radioVerChange
                        }
                    }, e._l(e._$s(6, "f", {
                        forItems: e.devVers
                    }), (function(t, n, h, a) {
                        return r("label", {
                            key: e._$s(6, "f", {
                                forIndex: h,
                                key: n
                            }),
                            staticClass: e._$s("6-" + a, "sc", "radio"),
                            attrs: {
                                _i: "6-" + a
                            }
                        }, [r("radio", {
                            attrs: {
                                value: e._$s("7-" + a, "a-value", n.toString()),
                                checked: e._$s("7-" + a, "a-checked", e.devInf.deviceType == t.dev && e.devInf.version == t.ver),
                                _i: "7-" + a
                            }
                        }), e._v(e._$s("6-" + a, "t1-0", e._s(("0" + t.dev).slice(-2) + " - " + ("0" + t.ver).slice(-2))))])
                    })), 0), r("button", {
                        staticClass: e._$s(8, "sc", "button_sp"),
                        attrs: {
                            _i: 8
                        },
                        on: {
                            click: e.backok
                        }
                    }), r("view")])
                },
                h = []
        },
        "9c4f": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("8aa4"),
                h = r("9cc2");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        "9cc2": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("3dd4"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        "9d65": function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("playListManagerComponent "),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        a3bc: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("d3b8"),
                h = r("d902");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        a6a2: function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [r("navigation-bar", {
                        attrs: {
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            title: e.ntitle,
                            _i: 2
                        }
                    })], 1), r("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [r("view", {
                        attrs: {
                            _i: 4
                        },
                        on: {
                            longpress: e.copyClick
                        }
                    }, [r("canvas", {
                        attrs: {
                            id: "imgCanvas",
                            _i: 5
                        },
                        on: {
                            touchstart: e.touchStart,
                            touchmove: e.touchMove,
                            touchend: e.touchEnd,
                            touchcancel: e.touchEnd
                        }
                    })]), e._$s(6, "i", e.showCanvasLine) ? r("canvas", {
                        style: e._$s(6, "s", "direction: ltr; height: " + e.lineCanvasSize.h + "px; width: " + e.lineCanvasSize.w + "px; position: absolute; left: 1000000px; top: 10px;"),
                        attrs: {
                            id: "lineCanvas",
                            _i: 6
                        }
                    }) : e._e(), r("view", {
                        staticClass: e._$s(7, "sc", "view-gen-line"),
                        style: e._$s(7, "s", "width: 100%; height: " + e.genCfgHeight + "rem;"),
                        attrs: {
                            _i: 7
                        }
                    }, [e._$s(8, "i", e.genLine) ? r("checkbox-group", {
                        staticClass: e._$s(8, "sc", "view-gen-line"),
                        attrs: {
                            _i: 8
                        },
                        on: {
                            change: e.lableCheckboxChange
                        }
                    }, [r("label", {
                        staticClass: e._$s(9, "sc", "label-parm"),
                        attrs: {
                            _i: 9
                        }
                    }, [r("checkbox", {
                        attrs: {
                            checked: e._$s(10, "a-checked", e.genCfg.double),
                            _i: 10
                        }
                    }), e._v(e._$s(9, "t1-0", e._s(e.$t("\u63cf\u8fb9"))))])]) : e._e(), e._$s(11, "i", e.genLine && e.debugTag && !e.genCfg.double) ? r("view", {
                        attrs: {
                            _i: 11
                        }
                    }, [r("label", [e._v(e._$s(12, "t0-0", e._s(e.$t("\u9600\u503c"))))]), r("slider", {
                        attrs: {
                            value: e._$s(13, "a-value", e.genCfg.effects2),
                            _i: 13
                        },
                        on: {
                            change: e.slEffectsChange2
                        }
                    })]) : e._e(), e._$s(14, "i", e.genLine && !1) ? r("view", {
                        attrs: {
                            _i: 14
                        }
                    }, [r("label", [e._v(e._$s(15, "t0-0", e._s(e.$t("\u7cbe\u5ea6"))))]), r("slider", {
                        attrs: {
                            value: e._$s(16, "a-value", e.genCfg.effects),
                            _i: 16
                        },
                        on: {
                            change: e.slEffectsChange
                        }
                    })]) : e._e()]), e._$s(17, "i", !e.genLine) ? r("view", {
                        attrs: {
                            _i: 17
                        }
                    }, [r("button", {
                        staticClass: e._$s(18, "sc", "opr-btn"),
                        attrs: {
                            _i: 18
                        },
                        on: {
                            click: e.chooseImage
                        }
                    }, [e._v(e._$s(18, "t0-0", e._s(e.$t("\u9009\u62e9\u56fe\u7247"))))]), r("button", {
                        staticClass: e._$s(19, "sc", "opr-btn btn-linear"),
                        attrs: {
                            _i: 19
                        },
                        on: {
                            click: e.okClick
                        }
                    }, [e._v(e._$s(19, "t0-0", e._s(e.$t("\u8bbe\u4e3a\u80cc\u666f"))))]), r("button", {
                        staticClass: e._$s(20, "sc", "opr-btn btn-linear"),
                        attrs: {
                            _i: 20
                        },
                        on: {
                            click: e.genLineClick
                        }
                    }, [e._v(e._$s(20, "t0-0", e._s(e.$t("\u8bc6\u522b\u56fe\u6848"))))])]) : e._e(), e._$s(21, "i", e.genLine) ? r("view", {
                        attrs: {
                            _i: 21
                        }
                    }, [r("button", {
                        staticClass: e._$s(22, "sc", "opr-btn"),
                        attrs: {
                            _i: 22
                        },
                        on: {
                            click: e.chooseImage
                        }
                    }, [e._v(e._$s(22, "t0-0", e._s(e.$t("\u9009\u62e9\u56fe\u7247"))))]), r("button", {
                        staticClass: e._$s(23, "sc", "opr-btn"),
                        attrs: {
                            _i: 23
                        },
                        on: {
                            click: e.backClick
                        }
                    }, [e._v(e._$s(23, "t0-0", e._s(e.$t("\u8fd4\u56de"))))]), r("button", {
                        staticClass: e._$s(24, "sc", "opr-btn btn-linear"),
                        attrs: {
                            _i: 24
                        },
                        on: {
                            click: e.lineOkClick
                        }
                    }, [e._v(e._$s(24, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])]) : e._e()])], 1)
                },
                a = []
        },
        a708: function(e, t, r) {
            var n = r("6454");
            e.exports = function(e) {
                if (Array.isArray(e)) return n(e)
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        ab96: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = getApp(),
                h = r("fontRegistryModule "),
                a = {
                    data: function() {
                        var e = h.getFontList(this);
                        return {
                            ntitle: this.$t("\u5b57\u4f53\u9009\u62e9"),
                            rtl: n.globalData.rtl,
                            fontIdex: 0,
                            fontList: e
                        }
                    },
                    onLoad: function(e) {
                        this.fontIdex = e.fontIdex
                    },
                    methods: {
                        selectFont: function(e) {
                            var t = this;
                            this.fontIdex = e, setTimeout((function() {
                                var e = t.getOpenerEventChannel();
                                e.emit("acceptDataFromOpenedPage", {
                                    fontIdex: t.fontIdex
                                }), t.back(null)
                            }), 200)
                        },
                        back: function(e) {
                            uni.navigateBack()
                        }
                    }
                };
            t.default = a
        },
        abb8: function(e, t, r) {
            e.exports = r.p + "static/imgs/text/arrow-up.png"
        },
        ac2c: function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return n
            })), r.d(t, "c", (function() {
                return h
            })), r.d(t, "a", (function() {}));
            var n = function() {
                    var e = this.$createElement,
                        t = this._self._c || e;
                    return t("view", [this._t("default", null, {
                        _i: 1
                    })], 2)
                },
                h = []
        },
        ae26: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("4165"),
                h = r("interopExportModule");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        af34: function(e, t, r) {
            var n = r("a708"),
                h = r("b893"),
                a = r("6382"),
                i = r("9008");
            e.exports = function(e) {
                return n(e) || h(e) || a(e) || i()
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        aff7: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("64a8"),
                h = r("8bca");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        b0e4: function(e, t) {
            var r = {}.toString;
            e.exports = Array.isArray || function(e) {
                return "[object Array]" == r.call(e)
            }
        },
        b520: function(e, t, r) {
            "use strict";
            (function(e) {
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var n = getApp(),
                    h = r("3b77"),
                    a = r("c4ce"),
                    i = {
                        data: function() {
                            var e = n.globalData.getDeviceFeatures(),
                                t = 650 * n.globalData.screen_width_float;
                            return {
                                screen_width: n.globalData.screen_width_str,
                                rtl: n.globalData.rtl,
                                features: e,
                                ntitle: this.$t("\u573a\u666f\u7ba1\u7406"),
                                scrollTop: 0,
                                oldScrollTop: 0,
                                imgArrays: [],
                                pisList: [{
                                    playTime: 0,
                                    cnfValus: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
                                }, {
                                    playTime: 1,
                                    cnfValus: [2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
                                }, {
                                    playTime: 2,
                                    cnfValus: [3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
                                }],
                                position: {
                                    x: t,
                                    y: t
                                },
                                startPosition: {
                                    x: 0,
                                    y: 0
                                },
                                defaultPis: {
                                    playTime: 5,
                                    cnfValus: [0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                                }
                            }
                        },
                        computed: {},
                        onLoad: function(t) {
                            e("log", "onload pgs", " at sub2/pages/pgs/pgs.js:49");
                            t.tag;
                            var r = n.globalData.getCmdData("pgsData");
                            this.pisList = r.pisList, this.initData()
                        },
                        onReady: function() {},
                        onShow: function() {},
                        onHide: function() {},
                        methods: {
                            sendCmd: function() {
                                n.globalData.setCmdData("pgsData", {
                                    pisList: this.pisList
                                });
                                n.globalData.getCmdData("pgsData");
                                var e = h.getPisListCmdStr(n.globalData.cmd.pgsData.pisList, {
                                    features: this.features
                                });
                                a.gosend(!0, e)
                            },
                            initData: function() {
                                this.features.ilda && (this.defaultPis = {
                                    playTime: 5,
                                    cnfValus: [0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
                                })
                            },
                            onInputBlur: function(t) {
                                var r = this,
                                    n = 0;
                                t.detail.value && (n = parseInt(t.detail.value));
                                var h = n;
                                n < 1 && (h = 1), n > 25 && (h = 25);
                                var a = t.currentTarget.dataset.tag;
                                e("log", "-----", n, h, this.pisList[a].playTime, " at sub2/pages/pgs/pgs.js:87"), this.$set(this.pisList[a], "playTime", n), setTimeout((function() {
                                    r.$set(r.pisList[a], "playTime", h), r.sendCmd()
                                }), 100)
                            },
                            timeInput: function(e) {},
                            scrollToBottom: function() {
                                var e = this;
                                uni.createSelectorQuery().in(this).select("#scroll_view").fields({
                                    size: !0,
                                    scrollOffset: !0,
                                    scrollHeight: !0
                                }).exec((function(t) {
                                    if (t[0]) {
                                        var r = t[0].scrollHeight;
                                        e.scrollTop = e.oldScrollTop, e.$nextTick((function() {
                                            e.scrollTop = r
                                        }))
                                    }
                                }))
                            },
                            onscroll: function(e) {
                                this.oldScrollTop = e.detail.scrollTop
                            },
                            oprNew: function(e) {
                                if (this.pisList.length >= 20) n.globalData.showModalTips(this.$t("\u6700\u591a20\u4e2a\u573a\u666f"), !1);
                                else {
                                    var t = {
                                        playTime: 0,
                                        cnfValus: []
                                    };
                                    t.playTime = this.defaultPis.playTime, Object.assign(t.cnfValus, this.defaultPis.cnfValus), this.pisList.push(t), this.scrollToBottom(), this.sendCmd()
                                }
                            },
                            oprEdit: function(t) {
                                var r = this.pisList[t],
                                    n = this;
                                uni.navigateTo({
                                    url: "/sub2/pages/pis/pis",
                                    events: {
                                        acceptDataFromOpenedPage: function(r) {
                                            e("log", "acceptDataFromOpenedPage", r, " at sub2/pages/pgs/pgs.js:160"), n.$set(n.pisList, t, r.pis), n.imgArrays = r.imgArrays, n.sendCmd()
                                        }
                                    },
                                    success: function(e) {
                                        e.eventChannel.emit("acceptDataFromOpenerPage", {
                                            pis: r,
                                            idx: t,
                                            imgArrays: n.imgArrays,
                                            defaultPis: n.defaultPis
                                        })
                                    }
                                })
                            },
                            onBtnSetTouchStart: function(e) {
                                this.startPosition.x = e.touches[0].clientX - this.position.x, this.startPosition.y = e.touches[0].clientY - this.position.y
                            },
                            onBtnSetTouchMove: function(e) {
                                this.position.x = e.touches[0].clientX - this.startPosition.x, this.position.y = e.touches[0].clientY - this.startPosition.y
                            },
                            onBtnSetTouchEnd: function() {},
                            onBtnSetClick: function(e) {
                                uni.navigateTo({
                                    url: "/pages/subset/subset"
                                })
                            },
                            oprDelete: function(t) {
                                e("log", "oprDelete", t, " at sub2/pages/pgs/pgs.js:193");
                                var r = this;
                                uni.showModal({
                                    title: this.$t("\u63d0\u793a"),
                                    content: this.$t("\u662f\u5426\u5220\u9664\u573a\u666f") + t + "?",
                                    success: function(n) {
                                        n.confirm ? (r.pisList.splice(t, 1), r.sendCmd()) : n.cancel && e("log", "\u7528\u6237\u70b9\u51fb\u53d6\u6d88", " at sub2/pages/pgs/pgs.js:205")
                                    }
                                })
                            }
                        }
                    };
                t.default = i
            }).call(this, r("f3b9")["default"])
        },
        b6aa: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("9b0f"),
                h = r("8e17");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        b747: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("mainLayoutComponent"),
                h = r("4883");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        b893: function(e, t) {
            e.exports = function(e) {
                if ("undefined" !== typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        b9de: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("e7b7"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        ba37: function(e, t) {
            /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
            t.read = function(e, t, r, n, h) {
                var a, i, c = 8 * h - n - 1,
                    o = (1 << c) - 1,
                    s = o >> 1,
                    l = -7,
                    p = r ? h - 1 : 0,
                    d = r ? -1 : 1,
                    b = e[t + p];
                for (p += d, a = b & (1 << -l) - 1, b >>= -l, l += c; l > 0; a = 256 * a + e[t + p], p += d, l -= 8);
                for (i = a & (1 << -l) - 1, a >>= -l, l += n; l > 0; i = 256 * i + e[t + p], p += d, l -= 8);
                if (0 === a) a = 1 - s;
                else {
                    if (a === o) return i ? NaN : 1 / 0 * (b ? -1 : 1);
                    i += Math.pow(2, n), a -= s
                }
                return (b ? -1 : 1) * i * Math.pow(2, a - n)
            }, t.write = function(e, t, r, n, h, a) {
                var i, c, o, s = 8 * a - h - 1,
                    l = (1 << s) - 1,
                    p = l >> 1,
                    d = 23 === h ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                    b = n ? 0 : a - 1,
                    g = n ? 1 : -1,
                    j = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (c = isNaN(t) ? 1 : 0, i = l) : (i = Math.floor(Math.log(t) / Math.LN2), t * (o = Math.pow(2, -i)) < 1 && (i--, o *= 2), t += i + p >= 1 ? d / o : d * Math.pow(2, 1 - p), t * o >= 2 && (i++, o /= 2), i + p >= l ? (c = 0, i = l) : i + p >= 1 ? (c = (t * o - 1) * Math.pow(2, h), i += p) : (c = t * Math.pow(2, p - 1) * Math.pow(2, h), i = 0)); h >= 8; e[r + b] = 255 & c, b += g, c /= 256, h -= 8);
                for (i = i << h | c, s += h; s > 0; e[r + b] = 255 & i, b += g, i /= 256, s -= 8);
                e[r + b - g] |= 128 * j
            }
        },
        bb3d: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("384f"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        bbc7: function(e, t, r) {
            (function(t) {
                var n = r("34cf"),
                    h = r("720d"),
                    a = r("fontGeometryUtils "),
                    i = ["black", "red", "green", "blue", "yellow", "#00FFFF", "purple", "white"];

                function c(e, t, r, n, h) {
                    var a = n - t,
                        i = h - r,
                        c = t + (a * Math.cos(e) - i * Math.sin(e)),
                        o = r + (a * Math.sin(e) + i * Math.cos(e));
                    return {
                        x: c,
                        y: o
                    }
                }

                function o(e, t) {
                    for (var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], n = [], h = r ? 1 : -1, a = {
                            left: 99999,
                            top: 99999,
                            right: -99999,
                            bottom: -99999
                        }, i = 0; i < e.length; i++) {
                        var o = [e[i][0], h * e[i][1]];
                        a.left = Math.min(a.left, o[0]), a.top = Math.min(a.top, o[1]), a.right = Math.max(a.right, o[0]), a.bottom = Math.max(a.bottom, o[1])
                    }
                    for (var s = (a.right - a.left) / 2 + a.left, l = (a.bottom - a.top) / 2 + a.top, p = 0; p < e.length; p++) {
                        var d = e[p],
                            b = c(t, s, l, d[0], h * d[1]);
                        n.push([b.x, h * b.y, d[2], d[3]])
                    }
                    return n
                }

                function s(e, t) {
                    for (var r = [], n = 0; n < e.length; n++) {
                        var h = e[n],
                            a = o(h, t, !0);
                        r.push(a)
                    }
                    return r
                }

                function l(e, t, r, n) {
                    r = -r;
                    var h = t + e.w,
                        a = r + e.h,
                        i = c(n, t, r, h, a),
                        o = {
                            mx: i.x - h,
                            my: i.y - a
                        };
                    return o
                }

                function p(e) {
                    for (var t = e.ps, r = e.x0, n = e.y0, h = e.ang, a = [], i = {
                            left: 99999,
                            top: 99999,
                            right: -99999,
                            bottom: -99999
                        }, o = 0, s = 0; s < t.length; s++) {
                        var p = t[s][1];
                        if (o != t[s][0]) {
                            o = t[s][0], i["w"] = (i.right - i.left) / 2 + i.left, i["h"] = (i.bottom - i.top) / 2 + i.top;
                            var d = l(i, r, n, h);
                            i["mx"] = d.mx, i["my"] = d.my, a.push(i), i = {
                                left: 99999,
                                top: 99999,
                                right: -99999,
                                bottom: -99999
                            }
                        }
                        for (var b = 0; b < p.length; b++) {
                            var g = [p[b].x, -p[b].y];
                            i.left = Math.min(i.left, g[0]), i.top = Math.min(i.top, g[1]), i.right = Math.max(i.right, g[0]), i.bottom = Math.max(i.bottom, g[1])
                        }
                        if (s == t.length - 1) {
                            i["w"] = (i.right - i.left) / 2 + i.left, i["h"] = (i.bottom - i.top) / 2 + i.top;
                            var j = l(i, r, n, h);
                            i["mx"] = j.mx, i["my"] = j.my, a.push(i)
                        }
                    }
                    for (var x = [], V = 0; V < t.length; V++) {
                        for (var f = t[V][1], F = [], k = a[t[V][0]], m = 0; m < f.length; m++) {
                            var P = f[m],
                                u = c(h, k.w, k.h, P.x, -P.y);
                            F.push({
                                x: u.x + k.mx,
                                y: -(u.y + k.my),
                                z: P.z
                            })
                        }
                        x.push([t[V][0], F, t[V][2], t[V][3]])
                    }
                    return x
                }

                function d(e, t) {
                    var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    if (-1 == e) {
                        if (r) return t.length;
                        for (var n = 0, h = 0; h < t.length; h++) n += t[h].length;
                        return n
                    }
                    if (9999 == e) {
                        for (var a = 0, i = 0; i < t.length; i++) a += t[i][1].length;
                        return a
                    }
                    return t.length
                }

                function b(e, t) {
                    var r = t,
                        n = e.left + e.mx - r,
                        h = e.top + e.my - r,
                        a = e.width * e.z + 2 * r,
                        i = e.height * e.z + 2 * r;
                    return {
                        left: n,
                        top: h,
                        width: a,
                        height: i
                    }
                }

                function g(e, t, r) {
                    var n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                        h = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
                        a = o(t.ps[r], t.ang, !0),
                        c = e.ctx,
                        s = t.lineColor,
                        l = s >= 8 ? 1 : s,
                        p = s - 9,
                        d = null;
                    p >= 0 && (d = e.colorSeg[p]);
                    var b = t.x0,
                        g = t.y0,
                        j = t.z;
                    c.beginPath(), h ? c.setLineDash(e.draw_line_type) : c.setLineDash([]), c.setStrokeStyle(i[l]), c.setFillStyle(i[l]);
                    for (var x = a, V = 800 / e.w, f = e.w / 2, F = [], k = 0; k < x.length; k++) {
                        var m = [x[k][0] * j + b, x[k][1] * j + g, x[k][2], x[k][3]];
                        if (0 == k) c.moveTo(m[0], m[1]);
                        else {
                            var P = [x[k - 1][0] * j + b, x[k - 1][1] * j + g];
                            P[0] == m[0] && P[1] == m[1] ? (c.arc(m[0], m[1], 1, 0, 2 * Math.PI), c.fill(), c.moveTo(m[0], m[1])) : c.lineTo(m[0], m[1])
                        }
                        if (s >= 8) {
                            if (p < 0) l += 1, l = l >= 8 ? 1 : l;
                            else {
                                var u = Math.floor(k * d.color.length / x.length);
                                l = d.color[u]
                            }
                            c.setStrokeStyle(i[l]), c.setFillStyle(i[l]), c.stroke(), c.beginPath(), c.moveTo(m[0], m[1])
                        }
                        n && F.push([(m[0] - f) * V, (f - m[1]) * V, 0 == k ? 0 : l, m[3]])
                    }
                    return c.stroke(), F
                }

                function j(e, t) {
                    for (var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], h = t.ps, a = [], i = 0; i < h.length; i++) {
                        var c = g(e, t, i, r, n);
                        r && (a = a.concat(c))
                    }
                    return a
                }

                function x(e, t) {
                    var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                        n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                        h = o(t.ps, t.ang),
                        a = [],
                        c = 800 / e.w,
                        s = e.w / 2,
                        l = e.ctx,
                        p = t.x0,
                        d = t.y0,
                        b = t.z;
                    l.beginPath(), n ? l.setLineDash(e.draw_line_type) : l.setLineDash([]);
                    var g = t.lineColor,
                        j = g - 9,
                        x = g >= 8 ? -1 : g,
                        V = null;
                    j >= 0 && (V = e.colorSeg[j]);
                    for (var f = 0; f < h.length; f++) {
                        j < 0 ? (x = g >= 8 ? x + 1 : x, x = x >= 8 ? 1 : x) : x = V.color[Math.floor(f * V.color.length / h.length)];
                        var F = [];
                        Object.assign(F, h[f]), F[0] = F[0] * b + p, F[1] = -F[1] * b + d, 0 != F[2] && (F[2] = j < 0 ? x : 0 == j ? F[2] : x);
                        var k = null;
                        if (f < h.length - 1 && (k = [], Object.assign(k, h[f + 1]), k[2] = j < 0 ? x + 1 : 0 == j ? k[2] : V.color[Math.floor((f + 1) * V.color.length / h.length)]), r && a.push([h[f][0] * c * b + (p - s) * c, h[f][1] * b * c + (-d + s) * c, 0 == f ? 0 : F[2], F[3]]), null != k && F[2] != k[2]) {
                            var m = 0 == F[2] ? k[2] : F[2];
                            l.setStrokeStyle(i[m]), 0 != F[2] && l.lineTo(F[0], F[1]), l.stroke(), l.beginPath(), l.moveTo(F[0], F[1])
                        } else 0 == F[2] ? l.moveTo(F[0], F[1]) : l.lineTo(F[0], F[1]), null == k && l.setStrokeStyle(i[F[2]])
                    }
                    l.stroke(), l.beginPath();
                    var P = null;
                    x = g >= 8 ? -1 : g;
                    for (var u = 0; u < h.length; u++) {
                        j < 0 ? (x = g >= 8 ? x + 1 : x, x = x >= 8 ? 1 : x) : x = V.color[Math.floor(u * V.color.length / h.length)];
                        var X = [],
                            N = [];
                        Object.assign(X, h[u]), Object.assign(N, h[u]), X[0] = X[0] * b + p, X[1] = -X[1] * b + d, 0 != X[2] && (X[2] = j < 0 ? x : 0 == j ? X[2] : x);
                        var H = null;
                        u < h.length - 1 && (H = [], Object.assign(H, h[u + 1]), 0 != H[2] && (H[2] = j < 0 ? x + 1 : 0 == j ? H[2] : V.color[Math.floor((u + 1) * V.color.length / h.length)])), null != H && X[2] != H[2] ? null != P && P[0] == N[0] && P[1] == N[1] && (l.setStrokeStyle(i[X[2]]), l.setFillStyle(i[X[2]]), l.moveTo(X[0], X[1]), l.arc(X[0], X[1], 1, 0, 2 * Math.PI), l.stroke(), l.fill(), l.beginPath()) : null != P && P[0] == N[0] && P[1] == N[1] && (l.setStrokeStyle(i[X[2]]), l.setFillStyle(i[X[2]]), l.moveTo(X[0], X[1]), l.arc(X[0], X[1], 1, 0, 2 * Math.PI), l.stroke()), P = N
                    }
                    return l.fill(), a
                }

                function V(e, t) {
                    var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                        n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                        h = p(t),
                        a = [],
                        c = t.lineColor,
                        o = i,
                        s = "red",
                        l = -1,
                        d = t.x0,
                        b = t.y0,
                        g = t.z,
                        j = 800 / e.w,
                        x = e.w / 2,
                        V = e.ctx;
                    n ? V.setLineDash(e.draw_line_type) : V.setLineDash([]);
                    var f = t.lineColor - 9,
                        F = null;
                    f >= 0 && (F = e.colorSeg[f]);
                    for (var k = -1, m = 0, P = 0; P < h.length; P++) k != h[P][0] && (m++, k = h[P][0]);
                    var u = 1;
                    k = -1, l = -1;
                    for (var X = 0; X < h.length; X++) {
                        var N = h[X][1];
                        if (k != h[X][0]) {
                            if (V.beginPath(), k = h[X][0], N.length > 1 && l++, f < 0) u = c <= 7 ? c : l % 7 + 1;
                            else if (0 == f) u = l % 7 + 1;
                            else {
                                var H = Math.floor(l * F.color.length / m);
                                u = F.color[H]
                            }
                            s = o[u], V.setStrokeStyle(s), V.setFillStyle(s)
                        }
                        for (var z = 0; z < N.length; z++) {
                            var Q = N[z],
                                R = Q.x * g + d,
                                v = b - Q.y * g;
                            r && a.push([Q.x * j * g + (d - x) * j, Q.y * g * j + (-b + x) * j, 0 == z ? 0 : u, Q.z]), 0 == z ? V.moveTo(R, v) : Math.abs(Q.x - N[z - 1].x) < 1 && Math.abs(Q.y - N[z - 1].y) < 1 ? (V.arc(R, v, 1, 0, 2 * Math.PI), V.moveTo(R, v)) : V.lineTo(R, v)
                        }
                        V.stroke()
                    }
                    return a
                }

                function f(e, t, r, n, h) {
                    for (var a = e.ps, i = [], c = n / t, o = h / r, s = 0; s < a.length; s++) {
                        for (var l = a[s], p = [], d = 0; d < l.length; d++) {
                            var b = l[d];
                            p.push([b[0] * c, b[1] * o, b[2], b[3]])
                        }
                        i.push(p)
                    }
                    var g = e.x0 * c,
                        j = e.y0 * o,
                        x = {
                            ps: i,
                            x0: g,
                            y0: j,
                            z: e.z,
                            drawMode: e.drawMode,
                            ang: e.ang,
                            lineColor: e.lineColor
                        };
                    return x
                }

                function F(e, t, r, n, h) {
                    for (var a = e.ps, i = [], c = n / t, o = h / r, s = 0; s < a.length; s++) {
                        for (var l = a[s][1], p = [], d = 0; d < l.length; d++) {
                            var b = l[d];
                            p.push({
                                x: b.x * c,
                                y: b.y * o,
                                z: b.z
                            })
                        }
                        i.push([a[s][0], p, a[s][2] * c, a[s][3] * o])
                    }
                    var g = e.x0 * c,
                        j = e.y0 * o,
                        x = {
                            ps: i,
                            x0: g,
                            y0: j,
                            z: e.z,
                            drawMode: e.drawMode,
                            ang: e.ang,
                            lineColor: e.lineColor
                        };
                    return x
                }

                function k(e, t, r, n, h) {
                    for (var a = e.ps, i = [], c = n / t, o = h / r, s = 0; s < a.length; s++) {
                        var l = a[s];
                        i.push([l[0] * c, l[1] * o, l[2], l[3]])
                    }
                    var p = e.x0 * c,
                        d = e.y0 * o,
                        b = {
                            ps: i,
                            x0: p,
                            y0: d,
                            z: e.z,
                            drawMode: e.drawMode,
                            ang: e.ang,
                            lineColor: e.lineColor
                        };
                    return b
                }
                e.exports = {
                    defaultWith: 300,
                    defaultHeight: 300,
                    colorSeg: [{
                        color: [1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 2, 2, 2, 2, 5, 5, 5, 5, 5, 3, 3, 3, 3, 6, 6, 6, 6, 6, 7, 7, 7, 7],
                        name: "\u5f69\u8679(8\u6bb5)"
                    }, {
                        color: [1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 2, 2, 2, 2, 5, 5, 5, 5, 5, 3, 3, 3, 3, 6, 6, 6, 6, 6, 7, 7, 7, 7],
                        name: "\u5f69\u8679(8\u6bb5)"
                    }, {
                        color: [3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7],
                        name: "PICK_3 4\u6bb5"
                    }, {
                        color: [4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 6, 6],
                        name: "PICK_4 4\u6bb5"
                    }, {
                        color: [7, 7, 7, 7, 2, 2, 2, 2, 7, 7, 7, 7, 2, 2, 2, 2, 7, 7, 7, 7, 2, 2, 2, 2, 7, 7, 7, 7, 2, 2, 2, 2],
                        name: "\u767d\u7eff\u76f8\u95f4(8\u6bb5)"
                    }, {
                        color: [3, 3, 3, 3, 7, 7, 7, 7, 3, 3, 3, 3, 7, 7, 7, 7, 3, 3, 3, 3, 7, 7, 7, 7, 3, 3, 3, 3, 7, 7, 7, 7],
                        name: "\u767d\u84dd\u76f8\u95f4(8\u6bb5)"
                    }, {
                        color: [7, 7, 7, 7, 1, 1, 1, 1, 7, 7, 7, 7, 1, 1, 1, 1, 7, 7, 7, 7, 1, 1, 1, 1, 7, 7, 7, 7, 1, 1, 1, 1],
                        name: "\u767d\u7ea2\u76f8\u95f4(8\u6bb5)"
                    }, {
                        color: [4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5],
                        name: "\u9752\u9ec4\u76f8\u95f4(8\u6bb5)"
                    }, {
                        color: [7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1, 7, 7, 1, 1],
                        name: "\u767d\u7ea2\u76f8\u95f4(16\u6bb5)"
                    }, {
                        color: [6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5],
                        name: "\u9752\u7d2b\u76f8\u95f4(16\u6bb5)"
                    }, {
                        color: [6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4, 6, 6, 4, 4],
                        name: "\u9ec4\u7d2b\u76f8\u95f4(16\u6bb5)"
                    }, {
                        color: [4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3],
                        name: "\u84dd\u9ec4\u76f8\u95f4(16\u6bb5)"
                    }],
                    getPointCount: d,
                    getTextRect: function(e, t) {
                        txXy = p(e);
                        for (var r = 0; r < txXy.length; r++)
                            for (var n = txXy[r][1], h = 0; h < n.length; h++) {
                                var a = [n[h].x * e.z + e.x0, e.y0 - n[h].y * e.z];
                                t.left = Math.min(t.left, a[0]), t.top = Math.min(t.top, a[1]), t.right = Math.max(t.right, a[0]), t.bottom = Math.max(t.bottom, a[1])
                            }
                        return t
                    },
                    getLineRect: function(e, t) {
                        for (var r = s(e.ps, e.ang), n = 0; n < r.length; n++)
                            for (var h = r[n], a = 0; a < h.length; a++) {
                                var i = [h[a][0] * e.z + e.x0, e.y0 + h[a][1] * e.z];
                                t.left = Math.min(t.left, i[0]), t.top = Math.min(t.top, i[1]), t.right = Math.max(t.right, i[0]), t.bottom = Math.max(t.bottom, i[1])
                            }
                        return t
                    },
                    getObjRect: function(e, t) {
                        ps = o(e.ps, e.ang);
                        for (var r = 0; r < ps.length; r++) {
                            var n = [ps[r][0] * e.z + e.x0, e.y0 - ps[r][1] * e.z];
                            t.left = Math.min(t.left, n[0]), t.top = Math.min(t.top, n[1]), t.right = Math.max(t.right, n[0]), t.bottom = Math.max(t.bottom, n[1])
                        }
                        return t
                    },
                    checkObj: function(e, t, r, n, a) {
                        for (var i = 1; i < e.length; i++) {
                            var c = [e[i - 1][0] * n + t, r - e[i - 1][1] * n],
                                o = [e[i][0] * n + t, r - e[i][1] * n],
                                s = [c, o];
                            if (h.lineCross(s, a)) return !0
                        }
                    },
                    checkText: function(e, t, r, n, a) {
                        for (var i = 0; i < e.length; i++)
                            for (var c = e[i][1], o = 1; o < c.length; o++) {
                                var s = [c[o - 1].x * n + t, r - c[o - 1].y * n],
                                    l = [c[o].x * n + t, r - c[o].y * n],
                                    p = [s, l];
                                if (h.lineCross(p, a)) return !0
                            }
                    },
                    checkLine: function(e, t, r, n, a) {
                        for (var i = e, c = 0; c < i.length; c++)
                            for (var o = i[c], s = 1; s < o.length; s++) {
                                var l = [o[s - 1][0] * n + t, o[s - 1][1] * n + r],
                                    p = [o[s][0] * n + t, o[s][1] * n + r],
                                    d = [l, p];
                                if (h.lineCross(d, a)) return !0
                            }
                        return !1
                    },
                    covertPoints: function(e, t, r) {
                        for (var n = a.parseLines(e, r), h = {
                                left: 99999,
                                top: 99999,
                                right: 0,
                                bottom: 0
                            }, i = 0; i < n.length; i++)
                            for (var c = n[i], o = 0; o < c.length; o++) {
                                var s = c[o];
                                h.left = Math.min(h.left, s[0]), h.top = Math.min(h.top, s[1]), h.right = Math.max(h.right, s[0]), h.bottom = Math.max(h.bottom, s[1])
                            }
                        for (var l = (h.right - h.left) / 2 + h.left, p = (h.bottom - h.top) / 2 + h.top, d = 0; d < n.length; d++)
                            for (var b = 0; b < n[d].length; b++) n[d][b][0] = n[d][b][0] - l, n[d][b][1] = n[d][b][1] - p;
                        return {
                            drawMode: -1,
                            ps: n,
                            x0: l,
                            y0: p,
                            z: 1,
                            lineColor: t
                        }
                    },
                    lineTheta: function(e, t, r) {
                        var n = {
                                x: e[0] - t[0],
                                y: e[1] - t[1]
                            },
                            h = {
                                x: r[0] - t[0],
                                y: r[1] - t[1]
                            },
                            a = n.x * h.x + n.y * h.y,
                            i = Math.sqrt(Math.pow(n.x, 2) + Math.pow(n.y, 2)),
                            c = Math.sqrt(Math.pow(h.x, 2) + Math.pow(h.y, 2)),
                            o = Math.acos(a / (i * c));
                        return o
                    },
                    getTextLineSize: function(e, t) {
                        for (var r = 0, n = 0, h = -1, a = 0; a < e.length; a++) {
                            var i = e[a];
                            h != i[0] && (t ? (r += i[2], n = i[3]) : (r = i[3], n += i[3]), h = i[0])
                        }
                        return {
                            w: r,
                            h: n
                        }
                    },
                    calcAngle: function(e, t, r, n) {
                        var h = Math.atan2(t - n, e - r);
                        return h
                    },
                    calcAngXY: c,
                    calcObjAngXY: o,
                    calcLinesAngXY: s,
                    pointInRectangle: function(e, t, r, h, a, i) {
                        var c = r.x,
                            o = h.x,
                            s = a.x,
                            l = i.x,
                            p = r.y,
                            d = h.y,
                            b = a.y,
                            g = i.y;
                        if (e >= c && e <= o && t >= p && t <= b) return !0;
                        if (e === c && t === p || e === o && t === d || e === s && t === b || e === l && t === g) return !0;
                        for (var j = 0, x = [
                                [c, p, o, d],
                                [o, d, s, b],
                                [s, b, l, g],
                                [l, g, c, p]
                            ], V = 0; V < x.length; V++) {
                            var f = n(x[V], 4),
                                F = f[0],
                                k = f[1],
                                m = f[2],
                                P = f[3];
                            if (t > Math.min(k, P) && t <= Math.max(k, P) && e <= Math.max(F, m) && k !== P) {
                                var u = (t - k) * (m - F) / (P - k) + F;
                                (F === m || e <= u) && j++
                            }
                        }
                        return j % 2 === 1
                    },
                    getSelectRectInfo: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2,
                            r = b(e, t),
                            n = r.left,
                            h = r.top,
                            a = r.width,
                            i = r.height,
                            o = n + a / 2,
                            s = h + i / 2,
                            l = e.lastAng - e.startAng + e.ang,
                            p = c(l, o, s, n, h),
                            d = c(l, o, s, n + a, h),
                            g = c(l, o, s, n + a, h + i),
                            j = c(l, o, s, n, h + i),
                            x = {
                                x0: o,
                                y0: s,
                                p1: p,
                                p2: d,
                                p3: g,
                                p4: j
                            };
                        return x
                    },
                    getUiRectSize: function(e) {
                        for (var t = [
                                [e.p1.x, e.p1.y],
                                [e.p2.x, e.p2.y],
                                [e.p3.x, e.p3.y],
                                [e.p4.x, e.p4.y]
                            ], r = {
                                left: 99999,
                                top: 99999,
                                right: -99999,
                                bottom: -99999,
                                width: 0,
                                height: 0
                            }, n = 0; n < t.length; n++) {
                            var h = [t[n][0], t[n][1]];
                            r.left = Math.min(r.left, h[0]), r.top = Math.min(r.top, h[1]), r.right = Math.max(r.right, h[0]), r.bottom = Math.max(r.bottom, h[1])
                        }
                        return r.width = r.right - r.left, r.height = r.bottom - r.top, r
                    },
                    getCenterCorss: function(e, t, r) {
                        var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 20,
                            h = n / 2,
                            a = n / 5,
                            i = c(e, t, r, t - h, r),
                            o = c(e, t, r, t + h, r),
                            s = c(e, t, r, t - h + a, r - a),
                            l = c(e, t, r, t - h + a, r + a),
                            p = c(e, t, r, t + h - a, r - a),
                            d = c(e, t, r, t + h - a, r + a),
                            b = c(e, t, r, t, r - h),
                            g = c(e, t, r, t, r + h),
                            j = c(e, t, r, t - a, r - h + a),
                            x = c(e, t, r, t + a, r - h + a),
                            V = c(e, t, r, t - a, r + h - a),
                            f = c(e, t, r, t + a, r + h - a),
                            F = {
                                p1: i,
                                p2: o,
                                p3: b,
                                p4: g,
                                p11: s,
                                p12: l,
                                p21: p,
                                p22: d,
                                p31: j,
                                p32: x,
                                p41: V,
                                p42: f
                            };
                        return F
                    },
                    calcTextAngXY: p,
                    drawText: V,
                    drawObj: x,
                    drawLine: j,
                    drawPs: function(e, t, r) {
                        var n = [],
                            h = t.ctx;
                        h.clearRect(0, 0, t.w, t.h);
                        for (var a = [], i = 0; i < e.length; i++) {
                            var o = e[i],
                                s = !1;
                            if (r && (s = r.selectLines.length > i && r.selectLines[i].sel & r.selectMode, s && null != r.selectRect)) {
                                var l = r.selectRect.lastAng - r.selectRect.startAng;
                                1 != r.selectRect.z ? (r.selectLines[i].mx0 = r.selectLines[i].mx0 * r.selectRect.z, r.selectLines[i].my0 = r.selectLines[i].my0 * r.selectRect.z, o.x0 = r.selectLines[i].mx0 + r.selectRect.x0, o.y0 = r.selectLines[i].my0 + r.selectRect.y0, l = r.selectRect.lastAng - r.selectRect.startAng + r.selectRect.ang, o.z = o.z * r.selectRect.z) : (o.x0 = o.x0 + r.selectRect.mx + r.selectRect.width * (r.selectRect.z - 1) * .5, o.y0 = o.y0 + r.selectRect.my + r.selectRect.height * (r.selectRect.z - 1) * .5), null != r.selectLines[i].color && (o.lineColor = r.selectLines[i].color);
                                var p = c(l, r.selectRect.x0, r.selectRect.y0, o.x0, o.y0);
                                o.x0 = p.x, o.y0 = p.y, o.ang = r.selectRect.lastAng - r.selectRect.startAng + o.ang
                            }
                            a = -1 == o.drawMode ? j(t, o, !0, s) : 9999 == o.drawMode ? V(t, o, !0, s) : x(t, o, !0, s), n = n.concat(a)
                        }
                        return r && null != r.selectRect && (r.selectRect.left = r.selectRect.left + r.selectRect.mx, r.selectRect.top = r.selectRect.top + r.selectRect.my, r.selectRect.width = r.selectRect.width * r.selectRect.z, r.selectRect.height = r.selectRect.height * r.selectRect.z, r.selectRect.z = 1, r.selectRect.mx = 0, r.selectRect.my = 0), n
                    },
                    getdrawPointsCnt: function(e) {
                        for (var t = 0, r = 0; r < e.length; r++) t += d(e[r].drawMode, e[r].ps);
                        return t
                    },
                    reSizeDrawPoints: function(e, r, n) {
                        var h = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 300,
                            a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 300,
                            i = [];
                        t("log", "orgWidth, orgHeight, destWidth, destHeight", r, n, h, a, " at sub/pages/utils/drawFunc.js:865");
                        for (var c = 0; c < e.length; c++) {
                            var o = e[c],
                                s = [];
                            s = -1 == o.drawMode ? f(o, r, n, h, a) : 9999 == o.drawMode ? F(o, r, n, h, a) : k(o, r, n, h, a), i.push(s)
                        }
                        return i
                    }
                }
            }).call(this, r("f3b9")["default"])
        },
        bbfb: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("d2da"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        c0a6: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("fc1c"),
                h = r("8880");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        c125: function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return n
            })), r.d(t, "c", (function() {
                return h
            })), r.d(t, "a", (function() {}));
            var n = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", {
                        staticClass: e._$s(0, "sc", "HM-drag-sort"),
                        style: e._$s(0, "s", {
                            height: e.ListHeight + "px",
                            "background-color": e.listBackgroundColor
                        }),
                        attrs: {
                            _i: 0
                        }
                    }, [r("view", {
                        staticClass: e._$s(1, "sc", "rowBox-shadow"),
                        attrs: {
                            id: "shadowRowBox",
                            _i: 1
                        }
                    }, [r("view", {
                        staticClass: e._$s(2, "sc", "hm-row-shadow move"),
                        attrs: {
                            id: "shadowRow",
                            _i: 2
                        }
                    }, [r("view", {
                        staticClass: e._$s(3, "sc", "modules"),
                        attrs: {
                            _i: 3
                        }
                    }, [r("view", {
                        staticClass: e._$s(4, "sc", "row-content"),
                        attrs: {
                            _i: 4
                        }
                    }, [r("view", {
                        staticClass: e._$s(5, "sc", "row"),
                        style: e._$s(5, "s", "height:" + e.rowHeight + "px;" + (e.rtl ? "border-top-right-radius: 20px; border-bottom-right-radius: 20px;" : "border-top-left-radius: 20px; border-bottom-left-radius: 20px;")),
                        attrs: {
                            _i: 5
                        }
                    }, [e._$s(6, "i", e.shadowRow.icon) ? r("image", {
                        staticClass: e._$s(6, "sc", "icon"),
                        attrs: {
                            src: e._$s(6, "a-src", e.shadowRow.icon),
                            _i: 6
                        }
                    }) : e._e(), r("text", {
                        staticClass: e._$s(7, "sc", "text"),
                        attrs: {
                            _i: 7
                        }
                    }, [e._v(e._$s(7, "t0-0", e._s(e.shadowRow.name)))])])]), r("view", {
                        staticClass: e._$s(8, "sc", "drag-content"),
                        attrs: {
                            _i: 8
                        }
                    }, [r("view", {
                        staticClass: e._$s(9, "sc", "drag-icon"),
                        style: e._$s(9, "s", "height:" + e.rowHeight + "px;" + (e.rtl ? "border-top-left-radius: 20px; border-bottom-left-radius: 20px;" : "border-top-right-radius: 20px; border-bottom-right-radius: 20px;")),
                        attrs: {
                            _i: 9
                        }
                    }, [r("text", {
                        staticClass: e._$s(10, "sc", "iconfont icon-drag"),
                        attrs: {
                            _i: 10
                        }
                    })])])])])]), r("scroll-view", {
                        staticClass: e._$s(11, "sc", "color scroll-view"),
                        style: e._$s(11, "s", {
                            height: e.ListHeight + "px"
                        }),
                        attrs: {
                            id: e._$s(11, "a-id", "scrollView_" + e.guid),
                            "scroll-top": e._$s(11, "a-scroll-top", e.scrollViewTop),
                            "scroll-with-animation": e._$s(11, "a-scroll-with-animation", e.scrollAnimation),
                            _i: 11
                        },
                        on: {}
                    }, [r("view", {
                        staticClass: e._$s(12, "sc", "list"),
                        attrs: {
                            _i: 12
                        }
                    }, e._l(e._$s(13, "f", {
                        forItems: e.dragList
                    }), (function(t, n, h, a) {
                        return r("view", {
                            key: e._$s(13, "f", {
                                forIndex: h,
                                key: t.HMDrag_id
                            }),
                            staticClass: e._$s("13-" + a, "sc", "rowBox ani"),
                            attrs: {
                                _i: "13-" + a
                            }
                        }, [r("view", {
                            staticClass: e._$s("14-" + a, "sc", "hm-row"),
                            style: e._$s("14-" + a, "s", {
                                transform: "translate3d(0," + 100 * (t.HMDrag_sort - n) + "%,-1px)"
                            }),
                            attrs: {
                                "data-sort": e._$s("14-" + a, "a-data-sort", t.HMDrag_sort),
                                "data-id": e._$s("14-" + a, "a-data-id", t.HMDrag_id),
                                id: e._$s("14-" + a, "a-id", t.HMDrag_id),
                                _i: "14-" + a
                            }
                        }, [r("view", {
                            staticClass: e._$s("15-" + a, "sc", "modules"),
                            attrs: {
                                _i: "15-" + a
                            }
                        }, [r("view", {
                            staticClass: e._$s("16-" + a, "sc", "row-content"),
                            attrs: {
                                _i: "16-" + a
                            }
                        }, [r("view", {
                            staticClass: e._$s("17-" + a, "sc", "row"),
                            style: e._$s("17-" + a, "s", "height:" + e.rowHeight + "px;" + (e.rtl ? "border-top-right-radius: 20px; border-bottom-right-radius: 20px;" : "border-top-left-radius: 20px; border-bottom-left-radius: 20px;")),
                            attrs: {
                                _i: "17-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.triggerClick(t.HMDrag_sort, t)
                                }
                            }
                        }, [e._$s("18-" + a, "i", t.icon) ? r("image", {
                            staticClass: e._$s("18-" + a, "sc", "icon"),
                            attrs: {
                                src: e._$s("18-" + a, "a-src", t.icon),
                                _i: "18-" + a
                            }
                        }) : e._e(), r("view", [r("text", {
                            staticClass: e._$s("20-" + a, "sc", "text"),
                            attrs: {
                                _i: "20-" + a
                            }
                        }, [e._v(e._$s("20-" + a, "t0-0", e._s(t.name)))]), r("view", [e._$s("22-" + a, "i", t.playIcon) ? r("image", {
                            staticClass: e._$s("22-" + a, "sc", "icon1"),
                            attrs: {
                                src: e._$s("22-" + a, "a-src", t.playIcon),
                                _i: "22-" + a
                            }
                        }) : e._e(), r("text", {
                            staticClass: e._$s("23-" + a, "sc", "text"),
                            attrs: {
                                _i: "23-" + a
                            }
                        }, [e._v(e._$s("23-" + a, "t0-0", e._s("No." + (t.HMDrag_sort + 1))))]), r("input", {
                            attrs: {
                                value: e._$s("24-" + a, "a-value", t.time),
                                _i: "24-" + a
                            },
                            on: {
                                blur: function(r) {
                                    return e.onTimeBlur(r, t.HMDrag_sort, t.time)
                                }
                            }
                        }), r("text", {
                            staticClass: e._$s("25-" + a, "sc", "text"),
                            attrs: {
                                _i: "25-" + a
                            }
                        }, [e._v(e._$s("25-" + a, "t0-0", e._s(t.unit)))]), r("view"), e._$s("27-" + a, "i", t.deleteIcon) ? r("image", {
                            staticClass: e._$s("27-" + a, "sc", "icon1"),
                            attrs: {
                                src: e._$s("27-" + a, "a-src", t.deleteIcon),
                                _i: "27-" + a
                            },
                            on: {
                                click: function(r) {
                                    return r.stopPropagation(), e.tapDelete(t.HMDrag_sort, t)
                                }
                            }
                        }) : e._e()])])])]), e._$s("28-" + a, "i", t.disabled) ? r("view", {
                            staticClass: e._$s("28-" + a, "sc", "drag-content"),
                            attrs: {
                                _i: "28-" + a
                            }
                        }, [r("view", {
                            staticClass: e._$s("29-" + a, "sc", "drag-icon"),
                            style: e._$s("29-" + a, "s", "height:" + e.rowHeight + "px;" + (e.rtl ? "border-top-left-radius: 20px; border-bottom-left-radius: 20px;" : "border-top-right-radius: 20px; border-bottom-right-radius: 20px;")),
                            attrs: {
                                _i: "29-" + a
                            }
                        }, [r("text", {
                            staticClass: e._$s("30-" + a, "sc", "iconfont icon-drag disabled"),
                            attrs: {
                                _i: "30-" + a
                            }
                        })])]) : r("view", {
                            staticClass: e._$s("31-" + a, "sc", "drag-content"),
                            attrs: {
                                "data-id": e._$s("31-" + a, "a-data-id", t.HMDrag_id),
                                _i: "31-" + a
                            },
                            on: {}
                        }, [r("view", {
                            staticClass: e._$s("32-" + a, "sc", "drag-icon"),
                            style: e._$s("32-" + a, "s", "height:" + e.rowHeight + "px;" + (e.rtl ? "border-top-left-radius: 20px; border-bottom-left-radius: 20px;" : "border-top-right-radius: 20px; border-bottom-right-radius: 20px;")),
                            attrs: {
                                _i: "32-" + a
                            }
                        }, [r("text", {
                            staticClass: e._$s("33-" + a, "sc", "iconfont icon-drag"),
                            attrs: {
                                _i: "33-" + a
                            }
                        })])])])])])
                    })), 0)]), r("view", {
                        wxsProps: {
                            "change:prop": "wxsDataStr"
                        },
                        attrs: {
                            id: "dataView",
                            "data-guid": e._$s(34, "a-data-guid", e.guid),
                            prop: e._$s(34, "change:wxsDataStr", e.wxsDataStr),
                            _i: 34
                        }
                    }), r("view", {
                        wxsProps: {
                            "change:prop": "scrollCommand"
                        },
                        attrs: {
                            prop: e._$s(35, "change:scrollCommand", e.scrollCommand),
                            _i: 35
                        }
                    })])
                },
                h = []
        },
        c4ce: function(e, t, r) {
            (function(t) {
                var n = getApp(),
                    h = r("3b77");

                function a(e, t, r) {
                    var n = 2 * (e - 1),
                        h = n + 2 * t,
                        a = r.slice(n, h),
                        i = parseInt(a, 16);
                    return i
                }

                function i(e, t, r, n) {
                    return isNaN(e) || e < t || e > r ? n : e
                }

                function c(e) {
                    var t = n.globalData.blu_rec_content;
                    if (null == t ? e.startsWith("E0E1E2E3") && (t = e) : t += e, "" != t) {
                        var r = t.lastIndexOf("E0E1E2E3"),
                            h = t.lastIndexOf("E4E5E6E7"),
                            a = t;
                        h > 0 && (h == t.length - 8 ? (a = t.slice(r, h + 8), n.globalData.setRecCallBack(a), a = null) : a = t.slice(r)), n.globalData.blu_rec_content = a
                    }
                }

                function o(e, r, h) {
                    var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                    if (n.globalData.blu_connect_stop) a && a(!1);
                    else {
                        var i = !1,
                            c = "",
                            s = -1;
                        uni.getBLEDeviceCharacteristics({
                            deviceId: e,
                            serviceId: r,
                            success: function(h) {
                                s = 0, t("log", "getBLEDeviceCharacteristics success", h.characteristics, " at utils/bluCtrl.js:173");
                                for (var o = function(o) {
                                        var l = h.characteristics[o];
                                        l.properties.read && (c = l.uuid, i && uni.readBLECharacteristicValue({
                                            deviceId: e,
                                            serviceId: r,
                                            characteristicId: l.uuid,
                                            success: function(e) {
                                                t("log", "readBLECharacteristicValue1:", e, " at utils/bluCtrl.js:184")
                                            },
                                            fail: function(e) {
                                                t("log", "readBLECharacteristicValue1-fail:", e, " at utils/bluCtrl.js:187")
                                            }
                                        })), l.properties.write && -1 != n.globalData.mtxduuids.indexOf(l.uuid) && (n.globalData.ble_device.characteristicId = l.uuid, n.globalData.ble_device.serviceId = r, s++), (l.properties.notify || l.properties.indicate) && -1 != n.globalData.mrxduuids.indexOf(l.uuid) && uni.notifyBLECharacteristicValueChange({
                                            deviceId: e,
                                            serviceId: r,
                                            characteristicId: l.uuid,
                                            state: !0,
                                            success: function(h) {
                                                n.globalData.blu_readyRec = !0, i = !0, "" != c && uni.readBLECharacteristicValue({
                                                    deviceId: e,
                                                    serviceId: r,
                                                    characteristicId: l.uuid,
                                                    success: function(e) {
                                                        t("log", "readBLECharacteristicValue2:", e, " at utils/bluCtrl.js:217")
                                                    },
                                                    fail: function(e) {
                                                        t("log", "readBLECharacteristicValue2-fail:", e, " at utils/bluCtrl.js:220")
                                                    }
                                                }), n.globalData.setBluCnnState(2, !1), a && a(!0)
                                            },
                                            fail: function(e) {
                                                s > 0 && (n.globalData.blu_readyRec = !0, i = !0, n.globalData.setBluCnnState(2, !1), a && a(!0))
                                            }
                                        })
                                    }, l = 0; l < h.characteristics.length; l++) o(l)
                            },
                            fail: function(e) {
                                0 == h && n.globalData.showModalTips(g("\u8fde\u63a5\u5931\u8d25") + "-1002"), s = -2
                            },
                            complete: function() {
                                s <= 0 && (h > 0 ? setTimeout((function() {
                                    o(e, r, --h, a)
                                }), 1500) : (uni.hideLoading(), a && a(!1), n.globalData.showModalTips(g("\u8fde\u63a5\u5931\u8d25") + "-1001")))
                            }
                        })
                    }
                }

                function s(e, r) {
                    var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                    n.globalData.blu_connect_stop ? a && a(!1) : (uni.onBLECharacteristicValueChange((function(e) {
                        var r = new Uint8Array(e.value),
                            a = h.ab2hex(e.value);
                        h.ab2Str(e.value); - 1 != n.globalData.mrxduuids.indexOf(e.characteristicId) ? n.globalData.blu_readyRec && r.length > 0 && c(a) : t("error", "no same characteristicId: ", n.globalData.mrxduuids, e.characteristicId, " at utils/bluCtrl.js:270")
                    })), o(e, r, 1, a))
                }

                function l(e, r) {
                    var h = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 3,
                        a = r.callback;
                    if (n.globalData.blu_connect_stop) a && a(!1);
                    else if (h <= 0) a && a(!1);
                    else {
                        n.globalData.blu_readyRec = !1;
                        var i = e,
                            c = !1;
                        uni.getBLEDeviceServices({
                            deviceId: i,
                            success: function(e) {
                                t("log", "services: ", e, " at utils/bluCtrl.js:301");
                                for (var r = 0; r < e.services.length; r++)
                                    if (-1 != n.globalData.mserviceuuids.indexOf(e.services[r].uuid)) {
                                        c = !0, s(i, e.services[r].uuid, a);
                                        break
                                    }
                            },
                            fail: function(e) {
                                t("log", "getBLEDeviceServices fail:", JSON.stringify(e), " at utils/bluCtrl.js:311")
                            },
                            complete: function() {
                                c || setTimeout((function() {
                                    l(i, r, --h)
                                }), 1e3)
                            }
                        })
                    }
                }

                function p(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                        r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                    if (n.globalData.blu_connect_stop) r && r(!1);
                    else if (void 0 != e && "" != e && null != e) {
                        n.globalData.readSetting(), n.globalData.blu_readyRec = !1;
                        var h = e.deviceId;
                        n.globalData.createBLEConnection(h, (function(e) {
                            e ? (n.globalData.setBluCnnState(1, !1), l(h, {
                                showMsg: t,
                                callback: r
                            })) : (uni.hideLoading(), t && n.globalData.showModalTips(g("\u8fde\u63a5\u5931\u8d25"), !0), r && r(!1))
                        }))
                    } else r && r(!1)
                }

                function d(e) {
                    var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        h = 20,
                        a = n.globalData.blu_data_send_interval;
                    if (n.globalData.platform.app && "android" == n.globalData.platform.system && (h = 40), e.showMsg) {
                        e.count;
                        var i = Math.floor((e.count - e.sendBufs.length) / e.count * 100),
                            c = (new Date).getTime();
                        (100 == i || c - n.globalData.blu_data_lastShowTime > 200) && (n.globalData.blu_data_lastShowTime = c, e.callBack ? (uni.hideLoading(), e.callBack(0, i)) : uni.showLoading({
                            mask: !0
                        }))
                    }
                    if (0 != e.sendBufs.length) {
                        var o = (new Date).getTime();
                        r = 0 == r ? o : r;
                        var s = h - (o - r),
                            l = s > 0 ? s : 1;
                        setTimeout((function() {
                            var n = e.sendBufs.shift();
                            "split" != n ? (t("log", "send date---", (new Date).getTime() / 1e3, " at utils/bluCtrl.js:441"), uni.writeBLECharacteristicValue({
                                deviceId: e.device.deviceId,
                                serviceId: e.device.serviceId,
                                characteristicId: e.device.characteristicId,
                                value: n,
                                success: function(t) {
                                    d(e, o)
                                },
                                fail: function(r) {
                                    t("log", "writeBLECharacteristicValue fail", r, " at utils/bluCtrl.js:454"), setTimeout((function() {
                                        e.fail(r)
                                    }), h)
                                },
                                complete: function(e) {}
                            })) : setTimeout((function() {
                                t("log", "sleep---", a, h, " at utils/bluCtrl.js:436"), d(e, o)
                            }), a - (o - r))
                        }), l)
                    } else setTimeout((function() {
                        e.success({})
                    }), h)
                }

                function b(e, t, r) {
                    var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                    return new Promise((function(h, a) {
                        d({
                            device: t,
                            sendBufs: e,
                            count: e.length,
                            showMsg: r,
                            callBack: n,
                            success: function(e) {
                                h(e)
                            },
                            fail: function(e) {
                                a(e)
                            }
                        })
                    }))
                }

                function g(e) {
                    return n.globalData.t(e)
                }

                function j(e) {
                    for (var r = "", n = 0; n < e.length; n++) n % 2 == 0 ? ("" != r && (r += ", "), r = r + "0x" + e[n]) : r += e[n];
                    t("log", r, " at utils/bluCtrl.js:494")
                }

                function x(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 20;
                    if ("" == e) return [];
                    var r = new Uint8Array(e.match(/[\da-f]{2}/gi).map((function(e) {
                        return parseInt(e, 16)
                    })));
                    if (null == r) return [];
                    var n = r.buffer.byteLength,
                        h = 0,
                        a = [];
                    while (n > 0) {
                        var i = n % t,
                            c = void 0;
                        n >= t ? (c = new Uint8Array(r.subarray(h, h + t)).buffer, n -= t, h += t) : (c = new Uint8Array(r.subarray(h, h + i)).buffer, n -= i, h += i), a.push(c)
                    }
                    return a
                }

                function V(e) {
                    var r = e.toUpperCase().split("Z");
                    t("log", r, " at utils/bluCtrl.js:530");
                    for (var n = [], h = 0; h < r.length; h++) {
                        t("log", h, r[h], " at utils/bluCtrl.js:533");
                        var a = x(r[h]);
                        a.length > 0 && (n.length > 0 && n.push("split"), n = n.concat(a))
                    }
                    return n
                }

                function f() {
                    return n.globalData.blu_data_canSend
                }
                e.exports = {
                    cnnPreBlu: function() {
                        if (t("log", "cnnPreBlu", n.globalData.blu_state, " at utils/bluCtrl.js:350"), 0 == n.globalData.blu_state) {
                            n.globalData.blu_state = 1, n.globalData.blu_connect_stop = !1, n.globalData.readDevice();
                            var e = n.globalData.ble_device;
                            void 0 != e && "" != e && null != e ? n.globalData.openBluetoothAdapter((function(r) {
                                r && p(e, !1, (function(e) {
                                    1 == n.globalData.blu_state && (n.globalData.blu_state = 0), t("log", "cnnTheBlu", e, " at utils/bluCtrl.js:365")
                                }))
                            })) : n.globalData.blu_state = 0
                        }
                    },
                    cnnLaser: function() {
                        uni.navigateTo({
                            url: "/pages/cnn/cnn",
                            events: {
                                acceptDataFromOpenedPage: function(e) {
                                    setTimeout((function() {
                                        uni.showLoading({
                                            title: g("\u6b63\u5728\u8fde\u63a5..."),
                                            mask: !0
                                        }), n.globalData.blu_state = 1, n.globalData.blu_connect_stop = !1;
                                        var e = n.globalData.ble_device;
                                        p(e, !0, (function(e) {
                                            e ? n.globalData.blu_state = 0 : (uni.hideLoading(), n.globalData.blu_state = 2), t("log", "cnnTheBlu", e, " at utils/bluCtrl.js:391")
                                        }))
                                    }), 1)
                                }
                            }
                        })
                    },
                    setCanSend: function(e) {
                        n.globalData.blu_data_canSend = e
                    },
                    getCanSend: f,
                    gosend: function(e, r) {
                        var h = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                        if (f() ? j(r) : t("log", "len:" + r.length, r, " at utils/bluCtrl.js:548"), 0 == r.length || !f() && !r.startsWith("E0E1E2E3")) return 0 == r.length || (t("log", "Simulate sending ------- 20ms", n.globalData.blu_data_cmdSending, " at utils/bluCtrl.js:552"), !n.globalData.blu_data_cmdSending && (n.globalData.blu_data_cmdSending = !0, setTimeout((function() {
                            n.globalData.blu_data_cmdSending = !1, h && h(1, 100)
                        }), 20), !0));
                        if (n.globalData.blu_data_cmdSending) return t("error", "last cmd is sending", " at utils/bluCtrl.js:563"), !1;
                        if (2 != n.globalData.blu_connected) return n.globalData.showModalTips(g("\u84dd\u7259\u672a\u8fde\u63a5")), !0;
                        e && (n.globalData.blu_data_lastShowTime = (new Date).getTime(), h ? h(0, 0) : uni.showLoading({
                            mask: !0
                        }));
                        var a = V(r);
                        if (0 == a.length) return !1;
                        if (n.globalData.blu_data_cmdSending) return !1;
                        n.globalData.blu_data_cmdSending = !0;
                        var i = a,
                            c = n.globalData.ble_device;
                        return b(i, c, e, h).then((function(r) {
                            e && uni.hideLoading(), n.globalData.blu_data_cmdSending = !1, t("log", "bluSend succ", " at utils/bluCtrl.js:592"), h && h(1, 100)
                        })).catch((function(r) {
                            e && uni.hideLoading(), t("log", "\u53d1\u9001\u5931\u8d25", r, " at utils/bluCtrl.js:596"), n.globalData.blu_data_cmdSending = !1, h && h(-1, 0)
                        })), !0
                    },
                    drawProgress: function(e, t, r) {
                        e.beginPath(), e.setFillStyle("#4C4C4C");
                        var n = t - 0,
                            h = n;
                        e.moveTo(20, 0), e.lineTo(0 + n - 20, 0), e.arcTo(0 + n, 0, 0 + n, 20, 20), e.lineTo(0 + n, 0 + h - 20), e.arcTo(0 + n, 0 + h, 0 + n - 20, 0 + h, 20), e.lineTo(20, 0 + h), e.arcTo(0, 0 + h, 0, 0 + h - 20, 20), e.lineTo(0, 20), e.arcTo(0, 0, 20, 0, 20), e.fill();
                        var a = t / 2,
                            i = a,
                            c = t / 3,
                            o = -Math.PI / 2,
                            s = 2 * Math.PI * r / 100 + o;
                        e.setLineWidth(t / 30), e.beginPath(), e.arc(a, i, c, 0, 2 * Math.PI), e.setStrokeStyle("#616161"), e.stroke(), e.beginPath(), e.arc(a, i, c, o, s), e.setStrokeStyle("#ECECEC"), e.stroke(), e.beginPath();
                        var l = r + "%",
                            p = t / 5;
                        e.setFillStyle("#ECECEC"), e.setFontSize(p);
                        var d = e.measureText(l).width;
                        e.fillText(r + "%", a - d / 2, i + p / 3), e.fill(), e.draw()
                    },
                    setCmdData: function(e) {
                        t("log", "\u8bbe\u5907\u8fd4\u56de\u6570\u636e", e, " at utils/bluCtrl.js:21"), h.getCmdValue("B0B1B2B3", "B4B5B6B7", e);
                        var r = h.getCmdValue("C0C1C2C3", "C4C5C6C7", e);
                        n.globalData.cmd.curMode = i(a(1, 1, r), 0, 12, 0), n.globalData.cmd.prjData.prjIndex = i(a(1, 1, r), 0, 12, 0), n.globalData.cmd.prjData.public.txColor = i(a(3, 1, r), 0, 9, 0), n.globalData.cmd.textData.txColor = n.globalData.cmd.prjData.public.txColor, n.globalData.cmd.textData.txSize = i(Math.round(a(4, 1, r) / 255 * 100), 10, 100, 60), n.globalData.cmd.textData.runSpeed = i(Math.round(a(6, 1, r) / 255 * 100), 0, 255, 128), n.globalData.cmd.prjData.public.runSpeed = n.globalData.cmd.textData.runSpeed, n.globalData.cmd.textData.txDist = i(Math.round(a(8, 1, r) / 255 * 100), 10, 100, 60), n.globalData.cmd.prjData.public.rdMode = i(a(9, 1, r), 0, 255, 0), n.globalData.cmd.prjData.public.soundVal = i(Math.round(a(10, 1, r) / 255 * 100), 0, 255, 0), n.globalData.cmd.textData.txPointTime = i(a(15, 1, r), 0, 100, 50), n.globalData.cmd.drawData.pisObj.txPointTime = i(a(16, 1, r), 0, 100, 50), n.globalData.cmd.textData.refresh = !0;
                        var c = n.globalData.cmd.prjData.prjItem,
                            o = 17;
                        for (var s in c) {
                            var l = c[s];
                            l.pyMode = i(a(o, 1, r), 0, 255, 0), l.prjSelected[3] = a(o + 1, 2, r), l.prjSelected[2] = a(o + 3, 2, r), l.prjSelected[1] = a(o + 5, 2, r), l.prjSelected[0] = a(o + 7, 2, r), o += 9
                        }
                        n.globalData.cmd.textData.runDir = i(a(o, 1, r), 0, 255, 0), o += 1;
                        for (var p = n.globalData.cmd.subsetData, d = 0; d < 6; d++) 0 == d ? p.xyCnf.auto = p.xyCnf.autoValue == i(a(o + d, 1, r), 0, 255, 0) : 1 == d ? p.xyCnf.phase = i(a(o + d, 1, r), 0, 255, 0) : p.xyCnf.xy[d - 2].value = i(a(o + d, 1, r), 0, 255, 0);
                        var b = h.getCmdValue("00010203", "04050607", e);
                        n.globalData.cmd.settingData.valArr[0] = i(a(1, 2, b), 1, 512, 1), n.globalData.cmd.settingData.ch = a(3, 1, b), n.globalData.cmd.settingData.valArr[1] = i(a(4, 1, b), 10, 100, 10), n.globalData.cmd.settingData.xy = i(a(5, 1, b), 0, 7, 0), n.globalData.cmd.settingData.valArr[2] = i(a(6, 1, b), 0, 255, 255), n.globalData.cmd.settingData.valArr[3] = i(a(7, 1, b), 0, 255, 255), n.globalData.cmd.settingData.valArr[4] = i(a(8, 1, b), 0, 255, 255), n.globalData.cmd.settingData.light = i(a(9, 1, b), 1, 3, 3), n.globalData.cmd.settingData.cfg = i(a(10, 1, b), 0, 255, 0);
                        var g = h.getCmdValue("D0D1D2D3", "D4D5D6D7", e);
                        if ("" != g) {
                            var j = n.globalData.getDeviceFeatures(),
                                x = 16;
                            t("log", "features", JSON.stringify(j), " at utils/bluCtrl.js:96"), h.getFeaturesValue({
                                features: j
                            }, "xyCnf") && (x = 22);
                            for (var V = [], f = i(a(1, 1, g), 0, 255, 0), F = 127 & f, k = 0; k < F; k++) {
                                for (var m = {
                                        playTime: 0,
                                        cnfValus: []
                                    }, P = 0; P < x; P++) {
                                    var u = i(a(3 + k * x + P, 1, g), 0, 255, 0);
                                    m.cnfValus.push(u), 13 == P && (m.playTime = (u / 10).toFixed())
                                }
                                t("log", "pis.cnfValus", JSON.stringify(m.cnfValus), " at utils/bluCtrl.js:111"), V.push(m)
                            }
                            n.globalData.cmd.pgsData.pisList = V
                        }
                        var X = h.getCmdValue("F0F1F2F3", "F4F5F6F7", e);
                        if ("" != X)
                            for (var N = n.globalData.cmd.drawData.pisObj, H = 0; H < 15; H++) {
                                var z = i(a(H + 1, 1, X), 0, 255, 0);
                                H < N.cnfValus.length && (N.cnfValus[H] = z), 14 == H && (N.txPointTime = z)
                            }
                    }
                }
            }).call(this, r("f3b9")["default"])
        },
        c4e5: function(e, t) {
            var r = [{
                label: "\u76f4\u7ebf",
                arr: [
                    [
                        [-400, 0, 0, 2],
                        [-392, 0, 7],
                        [-383, 0, 7],
                        [-374, 0, 7],
                        [-365, 0, 7],
                        [-356, 0, 7],
                        [-347, 0, 7],
                        [-338, 0, 7],
                        [-329, 0, 1],
                        [-320, 0, 1],
                        [-312, 0, 1],
                        [-303, 0, 1],
                        [-294, 0, 1],
                        [-285, 0, 1],
                        [-276, 0, 1],
                        [-267, 0, 1],
                        [-258, 0, 7],
                        [-249, 0, 7],
                        [-240, 0, 7],
                        [-231, 0, 7],
                        [-222, 0, 7],
                        [-214, 0, 7],
                        [-205, 0, 7],
                        [-196, 0, 2],
                        [-187, 0, 2],
                        [-178, 0, 2],
                        [-169, 0, 2],
                        [-160, 0, 2],
                        [-151, 0, 2],
                        [-142, 0, 2],
                        [-134, 0, 2],
                        [-125, 0, 7],
                        [-116, 0, 7],
                        [-107, 0, 7],
                        [-98, 0, 7],
                        [-89, 0, 7],
                        [-80, 0, 7],
                        [-71, 0, 7],
                        [-62, 0, 3],
                        [-53, 0, 3],
                        [-44, 0, 3],
                        [-36, 0, 3],
                        [-27, 0, 3],
                        [-18, 0, 3],
                        [-9, 0, 3],
                        [0, 0, 3],
                        [9, 0, 7],
                        [18, 0, 7],
                        [27, 0, 7],
                        [36, 0, 7],
                        [44, 0, 7],
                        [53, 0, 7],
                        [62, 0, 7],
                        [71, 0, 1],
                        [80, 0, 1],
                        [89, 0, 1],
                        [98, 0, 1],
                        [107, 0, 1],
                        [116, 0, 1],
                        [125, 0, 1],
                        [134, 0, 1],
                        [142, 0, 7],
                        [151, 0, 7],
                        [160, 0, 7],
                        [169, 0, 7],
                        [178, 0, 7],
                        [187, 0, 7],
                        [196, 0, 7],
                        [205, 0, 2],
                        [214, 0, 2],
                        [222, 0, 2],
                        [231, 0, 2],
                        [240, 0, 2],
                        [249, 0, 2],
                        [258, 0, 2],
                        [267, 0, 2],
                        [276, 0, 7],
                        [285, 0, 7],
                        [294, 0, 7],
                        [303, 0, 7],
                        [312, 0, 7],
                        [320, 0, 7],
                        [329, 0, 7],
                        [338, 0, 3],
                        [347, 0, 3],
                        [356, 0, 3],
                        [365, 0, 3],
                        [374, 0, 3],
                        [383, 0, 3],
                        [392, 0, 3],
                        [400, 0, 3, 3]
                    ],
                    [
                        [-400, -400, 0, 1],
                        [-390, -390, 4, 0],
                        [-380, -380, 4, 0],
                        [-370, -370, 4, 0],
                        [-360, -360, 4, 0],
                        [-350, -350, 4, 0],
                        [-340, -340, 5, 0],
                        [-330, -330, 5, 0],
                        [-320, -320, 5, 0],
                        [-310, -310, 5, 0],
                        [-300, -300, 5, 0],
                        [-290, -290, 5, 0],
                        [-280, -280, 6, 0],
                        [-270, -270, 6, 0],
                        [-260, -260, 6, 0],
                        [-250, -250, 6, 0],
                        [-240, -240, 5, 0],
                        [-230, -230, 5, 0],
                        [-220, -220, 5, 0],
                        [-210, -210, 5, 0],
                        [-200, -200, 5, 0],
                        [-190, -190, 5, 0],
                        [-180, -180, 4, 0],
                        [-170, -170, 4, 0],
                        [-160, -160, 4, 0],
                        [-150, -150, 4, 0],
                        [-140, -140, 5, 0],
                        [-130, -130, 5, 0],
                        [-120, -120, 5, 0],
                        [-110, -110, 5, 0],
                        [-100, -100, 5, 0],
                        [-90, -90, 5, 0],
                        [-80, -80, 6, 0],
                        [-70, -70, 6, 0],
                        [-60, -60, 6, 0],
                        [-50, -50, 6, 0],
                        [-40, -40, 5, 0],
                        [-30, -30, 5, 0],
                        [-20, -20, 5, 0],
                        [-10, -10, 5, 0],
                        [0, 0, 5, 0],
                        [10, 10, 5, 0],
                        [20, 20, 4, 0],
                        [30, 30, 4, 0],
                        [40, 40, 4, 0],
                        [50, 50, 4, 0],
                        [60, 60, 5, 0],
                        [70, 70, 5, 0],
                        [80, 80, 5, 0],
                        [90, 90, 5, 0],
                        [100, 100, 5, 0],
                        [110, 110, 5, 0],
                        [120, 120, 6, 0],
                        [130, 130, 6, 0],
                        [140, 140, 6, 0],
                        [150, 150, 6, 0],
                        [160, 160, 6, 0],
                        [170, 170, 5, 0],
                        [180, 180, 5, 0],
                        [190, 190, 5, 0],
                        [200, 200, 5, 0],
                        [210, 210, 5, 0],
                        [220, 220, 5, 0],
                        [230, 230, 4, 0],
                        [240, 240, 4, 0],
                        [250, 250, 4, 0],
                        [260, 260, 4, 0],
                        [270, 270, 5, 0],
                        [280, 280, 5, 0],
                        [290, 290, 5, 0],
                        [300, 300, 5, 0],
                        [310, 310, 5, 0],
                        [320, 320, 5, 0],
                        [330, 330, 6, 0],
                        [340, 340, 6, 0],
                        [350, 350, 6, 0],
                        [360, 360, 6, 0],
                        [370, 370, 5, 0],
                        [380, 380, 5, 0],
                        [390, 390, 5, 0],
                        [400, 400, 5, 3]
                    ],
                    [
                        [0, 0, 0, 2],
                        [10, 0, 7, 0],
                        [20, 0, 7, 0],
                        [30, 0, 7, 0],
                        [40, 0, 7, 0],
                        [50, 0, 7, 0],
                        [60, 0, 7, 0],
                        [70, 0, 7, 0],
                        [80, 0, 7, 0],
                        [90, 0, 7, 0],
                        [100, 0, 7, 0],
                        [110, 0, 3, 0],
                        [120, 0, 3, 0],
                        [130, 0, 3, 0],
                        [140, 0, 3, 0],
                        [150, 0, 3, 0],
                        [160, 0, 3, 0],
                        [170, 0, 3, 0],
                        [180, 0, 3, 0],
                        [190, 0, 3, 0],
                        [200, 0, 3, 0],
                        [210, 0, 7, 0],
                        [220, 0, 7, 0],
                        [230, 0, 7, 0],
                        [240, 0, 7, 0],
                        [250, 0, 7, 0],
                        [260, 0, 7, 0],
                        [270, 0, 7, 0],
                        [280, 0, 7, 0],
                        [290, 0, 7, 0],
                        [300, 0, 7, 0],
                        [310, 0, 4, 0],
                        [320, 0, 4, 0],
                        [330, 0, 4, 0],
                        [340, 0, 4, 0],
                        [350, 0, 4, 0],
                        [360, 0, 4, 0],
                        [370, 0, 4, 0],
                        [380, 0, 4, 0],
                        [390, 0, 4, 0],
                        [400, 0, 4, 3]
                    ],
                    [
                        [0, 0, 0, 2],
                        [10, 10, 4, 0],
                        [20, 20, 4, 0],
                        [30, 30, 4, 0],
                        [40, 40, 4, 0],
                        [50, 50, 4, 0],
                        [60, 60, 4, 0],
                        [70, 70, 4, 0],
                        [80, 80, 5, 0],
                        [90, 90, 5, 0],
                        [100, 100, 5, 0],
                        [110, 110, 5, 0],
                        [120, 120, 5, 0],
                        [130, 130, 5, 0],
                        [140, 140, 4, 0],
                        [150, 150, 4, 0],
                        [160, 160, 4, 0],
                        [170, 170, 4, 0],
                        [180, 180, 4, 0],
                        [190, 190, 4, 0],
                        [200, 200, 5, 0],
                        [210, 210, 5, 0],
                        [220, 220, 5, 0],
                        [230, 230, 5, 0],
                        [240, 240, 5, 0],
                        [250, 250, 4, 0],
                        [260, 260, 4, 0],
                        [270, 270, 4, 0],
                        [280, 280, 4, 0],
                        [290, 290, 4, 0],
                        [300, 300, 5, 0],
                        [310, 310, 5, 0],
                        [320, 320, 5, 0],
                        [330, 330, 5, 0],
                        [340, 340, 5, 0],
                        [350, 350, 5, 0],
                        [360, 360, 4, 0],
                        [370, 370, 4, 0],
                        [380, 380, 4, 0],
                        [390, 390, 4, 0],
                        [400, 400, 4, 3]
                    ],
                    [
                        [-400, 400, 0, 1],
                        [-390, 390, 4, 0],
                        [-380, 380, 4, 0],
                        [-370, 370, 4, 0],
                        [-360, 360, 4, 0],
                        [-350, 350, 4, 0],
                        [-340, 340, 7, 0],
                        [-330, 330, 7, 0],
                        [-320, 320, 7, 0],
                        [-310, 310, 7, 0],
                        [-300, 300, 7, 0],
                        [-290, 290, 7, 0],
                        [-280, 280, 6, 0],
                        [-270, 270, 6, 0],
                        [-260, 260, 6, 0],
                        [-250, 250, 6, 0],
                        [-240, 240, 7, 0],
                        [-230, 230, 7, 0],
                        [-220, 220, 7, 0],
                        [-210, 210, 7, 0],
                        [-200, 200, 7, 0],
                        [-190, 190, 7, 0],
                        [-180, 180, 4, 0],
                        [-170, 170, 4, 0],
                        [-160, 160, 4, 0],
                        [-150, 150, 4, 0],
                        [-140, 140, 7, 0],
                        [-130, 130, 7, 0],
                        [-120, 120, 7, 0],
                        [-110, 110, 7, 0],
                        [-100, 100, 7, 0],
                        [-90, 90, 7, 0],
                        [-80, 80, 6, 0],
                        [-70, 70, 6, 0],
                        [-60, 60, 6, 0],
                        [-50, 50, 6, 0],
                        [-40, 40, 7, 0],
                        [-30, 30, 7, 0],
                        [-20, 20, 7, 0],
                        [-10, 10, 7, 0],
                        [0, 0, 7, 2],
                        [10, 10, 4, 0],
                        [20, 20, 4, 0],
                        [30, 30, 4, 0],
                        [40, 40, 4, 0],
                        [50, 50, 4, 0],
                        [60, 60, 7, 0],
                        [70, 70, 7, 0],
                        [80, 80, 7, 0],
                        [90, 90, 7, 0],
                        [100, 100, 7, 0],
                        [110, 110, 7, 0],
                        [120, 120, 6, 0],
                        [130, 130, 6, 0],
                        [140, 140, 6, 0],
                        [150, 150, 6, 0],
                        [160, 160, 6, 0],
                        [170, 170, 7, 0],
                        [180, 180, 7, 0],
                        [190, 190, 7, 0],
                        [200, 200, 7, 0],
                        [210, 210, 7, 0],
                        [220, 220, 7, 0],
                        [230, 230, 4, 0],
                        [240, 240, 4, 0],
                        [250, 250, 4, 0],
                        [260, 260, 4, 0],
                        [270, 270, 7, 0],
                        [280, 280, 7, 0],
                        [290, 290, 7, 0],
                        [300, 300, 7, 0],
                        [310, 310, 7, 0],
                        [320, 320, 7, 0],
                        [330, 330, 6, 0],
                        [340, 340, 6, 0],
                        [350, 350, 6, 0],
                        [360, 360, 6, 0],
                        [370, 370, 7, 0],
                        [380, 380, 7, 0],
                        [390, 390, 7, 0],
                        [400, 400, 7, 2]
                    ],
                    [
                        [-450, -400, 0, 1],
                        [-350, -400, 7, 4],
                        [-350, -300, 1, 4],
                        [-250, -300, 1, 4],
                        [-250, -200, 4, 4],
                        [-150, -200, 4, 4],
                        [-150, -100, 2, 4],
                        [-50, -100, 2, 4],
                        [-50, 0, 5, 4],
                        [50, 0, 5, 4],
                        [50, 100, 3, 4],
                        [150, 100, 3, 4],
                        [150, 200, 6, 4],
                        [250, 200, 6, 4],
                        [250, 300, 2, 4],
                        [350, 300, 2, 4],
                        [350, 400, 7, 4],
                        [450, 400, 7, 4]
                    ],
                    [
                        [-400, 400, 0, 1],
                        [-390, 400, 7, 0],
                        [-380, 400, 7, 0],
                        [-370, 400, 7, 0],
                        [-360, 400, 7, 0],
                        [-350, 400, 7, 0],
                        [-340, 400, 7, 0],
                        [-330, 400, 7, 0],
                        [-320, 400, 7, 0],
                        [-310, 400, 7, 0],
                        [-300, 400, 7, 0],
                        [-290, 400, 1, 0],
                        [-280, 400, 1, 0],
                        [-270, 400, 1, 0],
                        [-260, 400, 1, 0],
                        [-250, 400, 1, 0],
                        [-240, 400, 1, 0],
                        [-230, 400, 1, 0],
                        [-220, 400, 1, 0],
                        [-210, 400, 1, 0],
                        [-200, 400, 1, 0],
                        [-190, 400, 5, 0],
                        [-180, 400, 5, 0],
                        [-170, 400, 5, 0],
                        [-160, 400, 5, 0],
                        [-150, 400, 5, 0],
                        [-140, 400, 5, 0],
                        [-130, 400, 5, 0],
                        [-120, 400, 5, 0],
                        [-110, 400, 5, 0],
                        [-100, 400, 5, 0],
                        [-90, 400, 2, 0],
                        [-80, 400, 2, 0],
                        [-70, 400, 2, 0],
                        [-60, 400, 2, 0],
                        [-50, 400, 2, 0],
                        [-40, 400, 2, 0],
                        [-30, 400, 2, 0],
                        [-20, 400, 2, 0],
                        [-10, 400, 2, 0],
                        [0, 400, 2, 0],
                        [10, 400, 6, 0],
                        [20, 400, 6, 0],
                        [30, 400, 6, 0],
                        [40, 400, 6, 0],
                        [50, 400, 6, 0],
                        [60, 400, 6, 0],
                        [70, 400, 6, 0],
                        [80, 400, 6, 0],
                        [90, 400, 6, 0],
                        [100, 400, 6, 0],
                        [110, 400, 3, 0],
                        [120, 400, 3, 0],
                        [130, 400, 3, 0],
                        [140, 400, 3, 0],
                        [150, 400, 3, 0],
                        [160, 400, 3, 0],
                        [170, 400, 3, 0],
                        [180, 400, 3, 0],
                        [190, 400, 3, 0],
                        [200, 400, 3, 0],
                        [210, 400, 4, 0],
                        [220, 400, 4, 0],
                        [230, 400, 4, 0],
                        [240, 400, 4, 0],
                        [250, 400, 4, 0],
                        [260, 400, 4, 0],
                        [270, 400, 4, 0],
                        [280, 400, 4, 0],
                        [290, 400, 4, 0],
                        [300, 400, 4, 0],
                        [310, 400, 7, 0],
                        [320, 400, 7, 0],
                        [330, 400, 7, 0],
                        [340, 400, 7, 0],
                        [350, 400, 7, 0],
                        [360, 400, 7, 0],
                        [370, 400, 7, 0],
                        [380, 400, 7, 0],
                        [390, 400, 7, 0],
                        [400, 400, 7, 2],
                        [-400, -400, 0, 1],
                        [-390, -400, 7, 0],
                        [-380, -400, 7, 0],
                        [-370, -400, 7, 0],
                        [-360, -400, 7, 0],
                        [-350, -400, 7, 0],
                        [-340, -400, 7, 0],
                        [-330, -400, 7, 0],
                        [-320, -400, 7, 0],
                        [-310, -400, 7, 0],
                        [-300, -400, 7, 0],
                        [-290, -400, 1, 0],
                        [-280, -400, 1, 0],
                        [-270, -400, 1, 0],
                        [-260, -400, 1, 0],
                        [-250, -400, 1, 0],
                        [-240, -400, 1, 0],
                        [-230, -400, 1, 0],
                        [-220, -400, 1, 0],
                        [-210, -400, 1, 0],
                        [-200, -400, 1, 0],
                        [-190, -400, 5, 0],
                        [-180, -400, 5, 0],
                        [-170, -400, 5, 0],
                        [-160, -400, 5, 0],
                        [-150, -400, 5, 0],
                        [-140, -400, 5, 0],
                        [-130, -400, 5, 0],
                        [-120, -400, 5, 0],
                        [-110, -400, 5, 0],
                        [-100, -400, 5, 0],
                        [-90, -400, 2, 0],
                        [-80, -400, 2, 0],
                        [-70, -400, 2, 0],
                        [-60, -400, 2, 0],
                        [-50, -400, 2, 0],
                        [-40, -400, 2, 0],
                        [-30, -400, 2, 0],
                        [-20, -400, 2, 0],
                        [-10, -400, 2, 0],
                        [0, -400, 2, 0],
                        [10, -400, 6, 0],
                        [20, -400, 6, 0],
                        [30, -400, 6, 0],
                        [40, -400, 6, 0],
                        [50, -400, 6, 0],
                        [60, -400, 6, 0],
                        [70, -400, 6, 0],
                        [80, -400, 6, 0],
                        [90, -400, 6, 0],
                        [100, -400, 6, 0],
                        [110, -400, 3, 0],
                        [120, -400, 3, 0],
                        [130, -400, 3, 0],
                        [140, -400, 3, 0],
                        [150, -400, 3, 0],
                        [160, -400, 3, 0],
                        [170, -400, 3, 0],
                        [180, -400, 3, 0],
                        [190, -400, 3, 0],
                        [200, -400, 3, 0],
                        [210, -400, 4, 0],
                        [220, -400, 4, 0],
                        [230, -400, 4, 0],
                        [240, -400, 4, 0],
                        [250, -400, 4, 0],
                        [260, -400, 4, 0],
                        [270, -400, 4, 0],
                        [280, -400, 4, 0],
                        [290, -400, 4, 0],
                        [300, -400, 4, 0],
                        [310, -400, 7, 0],
                        [320, -400, 7, 0],
                        [330, -400, 7, 0],
                        [340, -400, 7, 0],
                        [350, -400, 7, 0],
                        [360, -400, 7, 0],
                        [370, -400, 7, 0],
                        [380, -400, 7, 0],
                        [390, -400, 7, 0],
                        [400, -400, 7, 2]
                    ],
                    [
                        [-400, 0, 0, 3],
                        [-350, 0, 7, 3],
                        [-300, 0, 7, 3],
                        [-250, 0, 7, 3],
                        [-200, 0, 7, 3],
                        [-150, 0, 7, 3],
                        [-100, 0, 7, 3],
                        [-50, 0, 7, 3],
                        [50, 0, 0, 3],
                        [100, 0, 2, 3],
                        [150, 0, 2, 3],
                        [200, 0, 2, 3],
                        [250, 0, 2, 3],
                        [300, 0, 2, 3],
                        [350, 0, 2, 3],
                        [400, 0, 2, 3]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 4, 3],
                        [-372, 0, 4, 0],
                        [-346, 0, 4, 0],
                        [-319, 0, 4, 0],
                        [-293, 0, 4, 0],
                        [-266, 0, 4, 0],
                        [-239, 0, 4, 0],
                        [-213, 0, 4, 0],
                        [-186, 0, 4, 4],
                        [-106, 0, 0, 1],
                        [-106, 0, 5, 3],
                        [-80, 0, 5, 0],
                        [-53, 0, 5, 0],
                        [-27, 0, 5, 0],
                        [0, 0, 5, 0],
                        [27, 0, 5, 0],
                        [53, 0, 5, 0],
                        [80, 0, 5, 0],
                        [106, 0, 5, 4],
                        [186, 0, 0, 1],
                        [186, 0, 6, 3],
                        [213, 0, 6, 0],
                        [239, 0, 6, 0],
                        [266, 0, 6, 0],
                        [293, 0, 6, 0],
                        [319, 0, 6, 0],
                        [346, 0, 6, 0],
                        [372, 0, 6, 0],
                        [399, 0, 6, 5]
                    ],
                    [
                        [-399, 0, 0, 2],
                        [-372, 0, 2, 3],
                        [-346, 0, 2, 3],
                        [-319, 0, 2, 3],
                        [-293, 0, 2, 3],
                        [-266, 0, 2, 3],
                        [-239, 0, 2, 3],
                        [-213, 0, 2, 3],
                        [-186, 0, 0, 2],
                        [-160, 0, 6, 3],
                        [-133, 0, 6, 3],
                        [-106, 0, 6, 3],
                        [-80, 0, 6, 3],
                        [-53, 0, 6, 3],
                        [-27, 0, 6, 3],
                        [-13, 0, 6, 3],
                        [13, 0, 0, 2],
                        [27, 0, 2, 3],
                        [53, 0, 2, 3],
                        [80, 0, 2, 3],
                        [106, 0, 2, 3],
                        [133, 0, 2, 3],
                        [160, 0, 2, 3],
                        [186, 0, 2, 3],
                        [213, 0, 0, 2],
                        [239, 0, 6, 3],
                        [266, 0, 6, 3],
                        [293, 0, 6, 3],
                        [319, 0, 6, 3],
                        [346, 0, 6, 3],
                        [372, 0, 6, 3],
                        [399, 0, 6, 3]
                    ],
                    [
                        [-372, 0, 0, 1],
                        [-372, 0, 2, 3],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 4],
                        [-239, 0, 0, 1],
                        [-239, 0, 6, 3],
                        [-213, 0, 6, 0],
                        [-186, 0, 6, 0],
                        [-160, 0, 6, 4],
                        [-106, 0, 0, 1],
                        [-106, 0, 1, 3],
                        [-80, 0, 1, 0],
                        [-53, 0, 1, 0],
                        [-27, 0, 1, 4],
                        [27, 0, 0, 1],
                        [27, 0, 4, 3],
                        [53, 0, 4, 0],
                        [80, 0, 4, 0],
                        [106, 0, 4, 4],
                        [160, 0, 0, 1],
                        [160, 0, 3, 3],
                        [186, 0, 3, 0],
                        [213, 0, 3, 0],
                        [239, 0, 3, 4],
                        [293, 0, 0, 1],
                        [293, 0, 5, 3],
                        [319, 0, 5, 0],
                        [346, 0, 5, 0],
                        [372, 0, 5, 4]
                    ],
                    [
                        [-412, 0, 0, 1],
                        [-412, 0, 2, 2],
                        [-386, 0, 2, 0],
                        [-359, 0, 2, 0],
                        [-332, 0, 2, 3],
                        [-306, 0, 0, 1],
                        [-306, 0, 7, 2],
                        [-279, 0, 7, 0],
                        [-253, 0, 7, 0],
                        [-226, 0, 7, 3],
                        [-200, 0, 0, 1],
                        [-200, 0, 1, 2],
                        [-173, 0, 1, 0],
                        [-146, 0, 1, 0],
                        [-120, 0, 1, 3],
                        [-93, 0, 0, 1],
                        [-93, 0, 4, 2],
                        [-66, 0, 4, 0],
                        [-40, 0, 4, 0],
                        [-13, 0, 4, 3],
                        [13, 0, 0, 1],
                        [13, 0, 3, 2],
                        [40, 0, 3, 0],
                        [66, 0, 3, 0],
                        [93, 0, 3, 3],
                        [120, 0, 0, 1],
                        [120, 0, 6, 2],
                        [146, 0, 6, 0],
                        [173, 0, 6, 0],
                        [200, 0, 6, 3],
                        [226, 0, 0, 1],
                        [226, 0, 2, 2],
                        [253, 0, 2, 0],
                        [279, 0, 2, 0],
                        [306, 0, 2, 3],
                        [332, 0, 0, 1],
                        [332, 0, 5, 2],
                        [359, 0, 5, 0],
                        [386, 0, 5, 0],
                        [412, 0, 5, 3]
                    ],
                    [
                        [-405, 0, 0, 1],
                        [-382, 0, 7, 2],
                        [-360, 0, 7, 2],
                        [-338, 0, 7, 2],
                        [-322, 0, 0, 1],
                        [-300, 0, 1, 2],
                        [-278, 0, 1, 2],
                        [-255, 0, 1, 2],
                        [-240, 0, 0, 1],
                        [-218, 0, 6, 2],
                        [-195, 0, 6, 2],
                        [-172, 0, 6, 2],
                        [-158, 0, 0, 1],
                        [-135, 0, 2, 2],
                        [-112, 0, 2, 2],
                        [-90, 0, 2, 2],
                        [-75, 0, 0, 1],
                        [-52, 0, 4, 2],
                        [-30, 0, 4, 2],
                        [-8, 0, 4, 2],
                        [8, 0, 0, 1],
                        [30, 0, 3, 2],
                        [52, 0, 3, 2],
                        [75, 0, 3, 2],
                        [90, 0, 0, 1],
                        [112, 0, 5, 2],
                        [135, 0, 5, 2],
                        [158, 0, 5, 2],
                        [172, 0, 0, 1],
                        [195, 0, 4, 2],
                        [218, 0, 4, 2],
                        [240, 0, 4, 2],
                        [255, 0, 0, 1],
                        [278, 0, 2, 2],
                        [300, 0, 2, 2],
                        [322, 0, 2, 2],
                        [338, 0, 0, 1],
                        [360, 0, 7, 2],
                        [382, 0, 7, 2],
                        [405, 0, 7, 2]
                    ],
                    [
                        [-392, 0, 0, 1],
                        [-366, 0, 7, 0],
                        [-339, 0, 7, 2],
                        [-326, 0, 0, 1],
                        [-299, 0, 1, 0],
                        [-273, 0, 1, 2],
                        [-259, 0, 0, 1],
                        [-233, 0, 7, 0],
                        [-206, 0, 7, 2],
                        [-193, 0, 0, 1],
                        [-166, 0, 2, 0],
                        [-140, 0, 2, 2],
                        [-126, 0, 0, 1],
                        [-100, 0, 7, 0],
                        [-73, 0, 7, 2],
                        [-60, 0, 0, 1],
                        [-33, 0, 3, 0],
                        [-7, 0, 3, 2],
                        [7, 0, 0, 1],
                        [33, 0, 7, 0],
                        [60, 0, 7, 2],
                        [73, 0, 0, 1],
                        [100, 0, 4, 0],
                        [126, 0, 4, 2],
                        [140, 0, 0, 1],
                        [166, 0, 7, 0],
                        [193, 0, 7, 2],
                        [206, 0, 0, 1],
                        [233, 0, 5, 0],
                        [259, 0, 5, 2],
                        [273, 0, 0, 1],
                        [299, 0, 7, 0],
                        [326, 0, 7, 2],
                        [339, 0, 0, 1],
                        [366, 0, 6, 0],
                        [392, 0, 6, 2]
                    ],
                    [
                        [-399, 399, 0, 1],
                        [-399, 399, 4, 1],
                        [-372, 399, 4, 2],
                        [-346, 399, 4, 2],
                        [-319, 399, 4, 2],
                        [-293, 399, 4, 2],
                        [-266, 399, 4, 2],
                        [-133, 399, 0, 1],
                        [-133, 399, 4, 1],
                        [-106, 399, 4, 2],
                        [-80, 399, 4, 2],
                        [-53, 399, 4, 2],
                        [-27, 399, 4, 2],
                        [0, 399, 4, 2],
                        [133, 399, 0, 1],
                        [133, 399, 4, 1],
                        [160, 399, 4, 2],
                        [186, 399, 4, 2],
                        [213, 399, 4, 2],
                        [239, 399, 4, 2],
                        [266, 399, 4, 2],
                        [0, -399, 0, 1],
                        [0, -399, 5, 1],
                        [27, -399, 5, 2],
                        [53, -399, 5, 2],
                        [80, -399, 5, 2],
                        [106, -399, 5, 2],
                        [133, -399, 5, 2],
                        [-266, -399, 0, 1],
                        [-266, -399, 5, 1],
                        [-239, -399, 5, 2],
                        [-213, -399, 5, 2],
                        [-186, -399, 5, 2],
                        [-160, -399, 5, 2],
                        [-133, -399, 5, 2],
                        [266, -399, 0, 1],
                        [266, -399, 5, 1],
                        [293, -399, 5, 2],
                        [319, -399, 5, 2],
                        [346, -399, 5, 2],
                        [372, -399, 5, 2],
                        [399, -399, 5, 2]
                    ],
                    [
                        [-400, 320, 0, 1],
                        [-400, 320, 2, 3],
                        [-380, 320, 2, 0],
                        [-360, 320, 2, 0],
                        [-340, 320, 2, 0],
                        [-320, 320, 2, 0],
                        [-300, 320, 2, 0],
                        [-280, 320, 2, 0],
                        [-260, 320, 2, 0],
                        [-240, 320, 2, 5],
                        [-240, 160, 0, 1],
                        [-240, 160, 7, 3],
                        [-220, 160, 7, 0],
                        [-200, 160, 7, 0],
                        [-180, 160, 7, 0],
                        [-160, 160, 7, 0],
                        [-140, 160, 7, 0],
                        [-120, 160, 7, 0],
                        [-100, 160, 7, 0],
                        [-80, 160, 7, 5],
                        [-80, 0, 0, 1],
                        [-80, 0, 4, 3],
                        [-60, 0, 4, 0],
                        [-40, 0, 4, 0],
                        [-20, 0, 4, 0],
                        [0, 0, 4, 0],
                        [20, 0, 4, 0],
                        [40, 0, 4, 0],
                        [60, 0, 4, 0],
                        [80, 0, 4, 5],
                        [80, -160, 0, 1],
                        [80, -160, 5, 3],
                        [100, -160, 5, 0],
                        [120, -160, 5, 0],
                        [140, -160, 5, 0],
                        [160, -160, 5, 0],
                        [180, -160, 5, 0],
                        [200, -160, 5, 0],
                        [220, -160, 5, 0],
                        [240, -160, 5, 5],
                        [240, -320, 0, 1],
                        [240, -320, 6, 3],
                        [260, -320, 6, 0],
                        [280, -320, 6, 0],
                        [300, -320, 6, 0],
                        [320, -320, 6, 0],
                        [340, -320, 6, 0],
                        [360, -320, 6, 0],
                        [380, -320, 6, 0],
                        [400, -320, 6, 5]
                    ],
                    [
                        [0, -400, 0, 3],
                        [0, -390, 4, 0],
                        [0, -380, 4, 0],
                        [0, -370, 4, 0],
                        [0, -360, 4, 0],
                        [0, -350, 4, 3],
                        [0, -340, 4, 0],
                        [0, -330, 4, 0],
                        [0, -320, 4, 0],
                        [0, -310, 4, 0],
                        [0, -300, 4, 3],
                        [0, -290, 4, 0],
                        [0, -280, 4, 0],
                        [0, -270, 4, 0],
                        [0, -260, 4, 0],
                        [0, -250, 4, 3],
                        [0, -240, 4, 0],
                        [0, -230, 4, 0],
                        [0, -220, 4, 0],
                        [0, -210, 4, 0],
                        [0, -200, 4, 3],
                        [0, -190, 4, 0],
                        [0, -180, 4, 0],
                        [0, -170, 4, 0],
                        [0, -160, 4, 0],
                        [0, -150, 4, 3],
                        [0, -140, 4, 0],
                        [0, -130, 4, 0],
                        [0, -120, 4, 0],
                        [0, -110, 4, 0],
                        [0, -100, 4, 3],
                        [0, -90, 4, 0],
                        [0, -80, 4, 0],
                        [0, -70, 4, 0],
                        [0, -60, 4, 0],
                        [0, -50, 4, 3],
                        [0, -40, 4, 0],
                        [0, -30, 4, 0],
                        [0, -20, 4, 0],
                        [0, -10, 4, 0],
                        [0, 0, 4, 3],
                        [0, 10, 4, 0],
                        [0, 20, 4, 0],
                        [0, 30, 4, 0],
                        [0, 40, 4, 0],
                        [0, 50, 4, 3],
                        [0, 60, 4, 0],
                        [0, 70, 4, 0],
                        [0, 80, 4, 0],
                        [0, 90, 4, 0],
                        [0, 100, 4, 3],
                        [0, 110, 4, 0],
                        [0, 120, 4, 0],
                        [0, 130, 4, 0],
                        [0, 140, 4, 0],
                        [0, 150, 4, 3],
                        [0, 160, 4, 0],
                        [0, 170, 4, 0],
                        [0, 180, 4, 0],
                        [0, 190, 4, 0],
                        [0, 200, 4, 3],
                        [0, 210, 4, 0],
                        [0, 220, 4, 0],
                        [0, 230, 4, 0],
                        [0, 240, 4, 0],
                        [0, 250, 4, 3],
                        [0, 260, 4, 0],
                        [0, 270, 4, 0],
                        [0, 280, 4, 0],
                        [0, 290, 4, 0],
                        [0, 300, 4, 3],
                        [0, 310, 4, 0],
                        [0, 320, 4, 0],
                        [0, 330, 4, 0],
                        [0, 340, 4, 0],
                        [0, 350, 4, 3],
                        [0, 360, 4, 0],
                        [0, 370, 4, 0],
                        [0, 380, 4, 0],
                        [0, 390, 4, 0],
                        [0, 400, 4, 3]
                    ],
                    [
                        [-413, 0, 0, 1],
                        [-413, 0, 7, 3],
                        [-405, 0, 0, 1],
                        [-382, 0, 4, 0],
                        [-360, 0, 4, 0],
                        [-338, 0, 4, 2],
                        [-330, 0, 0, 1],
                        [-330, 0, 7, 3],
                        [-322, 0, 0, 1],
                        [-300, 0, 4, 0],
                        [-278, 0, 4, 0],
                        [-255, 0, 4, 2],
                        [-247, 0, 0, 1],
                        [-247, 0, 7, 3],
                        [-240, 0, 0, 1],
                        [-218, 0, 4, 0],
                        [-195, 0, 4, 0],
                        [-172, 0, 4, 2],
                        [-164, 0, 0, 1],
                        [-164, 0, 7, 3],
                        [-158, 0, 0, 1],
                        [-135, 0, 4, 0],
                        [-112, 0, 4, 0],
                        [-90, 0, 4, 2],
                        [-82, 0, 0, 1],
                        [-82, 0, 7, 3],
                        [-75, 0, 0, 1],
                        [-52, 0, 4, 0],
                        [-30, 0, 4, 0],
                        [-8, 0, 4, 2],
                        [0, 0, 0, 1],
                        [0, 0, 7, 3],
                        [8, 0, 0, 1],
                        [30, 0, 4, 0],
                        [52, 0, 4, 0],
                        [75, 0, 4, 2],
                        [83, 0, 0, 1],
                        [83, 0, 7, 3],
                        [90, 0, 0, 1],
                        [112, 0, 4, 0],
                        [135, 0, 4, 0],
                        [158, 0, 4, 2],
                        [166, 0, 0, 1],
                        [166, 0, 7, 3],
                        [172, 0, 0, 1],
                        [195, 0, 4, 0],
                        [218, 0, 4, 0],
                        [240, 0, 4, 2],
                        [248, 0, 0, 1],
                        [248, 0, 7, 3],
                        [255, 0, 0, 1],
                        [278, 0, 4, 0],
                        [300, 0, 4, 0],
                        [322, 0, 4, 2],
                        [330, 0, 0, 1],
                        [330, 0, 7, 3],
                        [338, 0, 0, 1],
                        [360, 0, 4, 0],
                        [382, 0, 4, 0],
                        [405, 0, 4, 2],
                        [413, 0, 0, 1],
                        [413, 0, 7, 3]
                    ],
                    [
                        [400, 100, 0, 2],
                        [400, -100, 6, 2],
                        [300, 100, 0, 2],
                        [300, -100, 2, 2],
                        [200, 100, 0, 1],
                        [200, -100, 6, 2],
                        [100, 100, 0, 1],
                        [100, -100, 2, 2],
                        [0, 100, 0, 1],
                        [0, -100, 6, 2],
                        [-100, 100, 0, 1],
                        [-100, -100, 2, 2],
                        [-200, 100, 0, 1],
                        [-200, -100, 6, 2],
                        [-300, 100, 0, 1],
                        [-300, -100, 2, 2],
                        [-400, 100, 0, 1],
                        [-400, -100, 6, 2]
                    ],
                    [
                        [0, 161, 0, 1],
                        [0, 161, 5, 2],
                        [0, 242, 5, 0],
                        [0, 323, 5, 0],
                        [0, 403, 5, 4],
                        [-139, -81, 0, 1],
                        [-139, -81, 4, 2],
                        [-210, -121, 4, 0],
                        [-279, -161, 4, 0],
                        [-349, -202, 4, 4],
                        [139, -81, 0, 1],
                        [139, -81, 7, 2],
                        [210, -121, 7, 0],
                        [279, -161, 7, 0],
                        [349, -202, 7, 4]
                    ],
                    [
                        [-403, 0, 0, 1],
                        [-403, 0, 4, 2],
                        [-336, 0, 4, 0],
                        [-269, 0, 4, 0],
                        [-202, 0, 4, 0],
                        [-134, 0, 4, 4],
                        [134, 0, 0, 1],
                        [134, 0, 2, 2],
                        [202, 0, 2, 0],
                        [269, 0, 2, 0],
                        [336, 0, 2, 0],
                        [403, 0, 2, 4],
                        [0, 403, 0, 1],
                        [0, 403, 6, 2],
                        [0, 336, 6, 0],
                        [0, 269, 6, 0],
                        [0, 202, 6, 0],
                        [0, 134, 6, 4],
                        [0, -134, 0, 1],
                        [0, -134, 7, 2],
                        [0, -202, 7, 0],
                        [0, -269, 7, 0],
                        [0, -336, 7, 0],
                        [0, -403, 7, 4]
                    ],
                    [
                        [0, 0, 0, 1],
                        [0, 0, 2, 1],
                        [0, 81, 2, 0],
                        [0, 161, 2, 0],
                        [0, 242, 2, 0],
                        [0, 323, 2, 0],
                        [0, 403, 2, 4],
                        [0, 323, 2, 0],
                        [0, 242, 2, 0],
                        [0, 161, 2, 0],
                        [0, 81, 2, 0],
                        [0, 0, 2, 1],
                        [-71, -40, 4, 0],
                        [-139, -81, 4, 0],
                        [-210, -121, 4, 0],
                        [-279, -161, 4, 0],
                        [-349, -202, 4, 4],
                        [-279, -161, 4, 0],
                        [-210, -121, 4, 0],
                        [-139, -81, 4, 0],
                        [-71, -40, 4, 0],
                        [0, 0, 4, 1],
                        [71, -40, 7, 0],
                        [139, -81, 7, 0],
                        [210, -121, 7, 0],
                        [279, -161, 7, 0],
                        [349, -202, 7, 4],
                        [279, -161, 7, 0],
                        [210, -121, 7, 0],
                        [139, -81, 7, 0],
                        [71, -40, 7, 0],
                        [0, 0, 7, 1]
                    ],
                    [
                        [-403, 0, 0, 1],
                        [-403, 0, 1, 2],
                        [-336, 0, 1, 0],
                        [-269, 0, 1, 0],
                        [-202, 0, 1, 0],
                        [-134, 0, 1, 0],
                        [-67, 0, 1, 0],
                        [0, 0, 1, 4],
                        [67, 0, 2, 0],
                        [134, 0, 2, 0],
                        [202, 0, 2, 0],
                        [269, 0, 2, 0],
                        [336, 0, 2, 0],
                        [403, 0, 2, 4],
                        [0, 403, 0, 1],
                        [0, 403, 6, 2],
                        [0, 336, 6, 0],
                        [0, 269, 6, 0],
                        [0, 202, 6, 0],
                        [0, 134, 6, 0],
                        [0, 67, 6, 0],
                        [0, 0, 6, 4],
                        [0, -67, 7, 0],
                        [0, -134, 7, 0],
                        [0, -202, 7, 0],
                        [0, -269, 7, 0],
                        [0, -336, 7, 0],
                        [0, -403, 7, 4]
                    ],
                    [
                        [-390, 390, 0, 1],
                        [-390, 390, 2, 2],
                        [-390, 390, 2, 0],
                        [-312, 312, 2, 0],
                        [-234, 234, 2, 0],
                        [-156, 156, 2, 0],
                        [-78, 78, 2, 0],
                        [0, 0, 2, 2],
                        [78, -78, 7, 0],
                        [156, -156, 7, 0],
                        [234, -234, 7, 0],
                        [312, -312, 7, 0],
                        [390, -390, 7, 4],
                        [390, 390, 0, 1],
                        [390, 390, 5, 2],
                        [390, 390, 5, 0],
                        [312, 312, 5, 0],
                        [234, 234, 5, 0],
                        [156, 156, 5, 0],
                        [78, 78, 5, 0],
                        [0, 0, 5, 2],
                        [-78, -78, 6, 0],
                        [-156, -156, 6, 0],
                        [-234, -234, 6, 0],
                        [-312, -312, 6, 0],
                        [-390, -390, 6, 4]
                    ],
                    [
                        [-252, 403, 0, 1],
                        [-252, 403, 7, 2],
                        [-252, 403, 7, 0],
                        [-126, 403, 7, 0],
                        [0, 403, 7, 0],
                        [126, 403, 7, 0],
                        [252, 403, 7, 4],
                        [403, 252, 0, 1],
                        [403, 252, 6, 2],
                        [403, 252, 6, 0],
                        [403, 126, 6, 0],
                        [403, 0, 6, 0],
                        [403, -126, 6, 0],
                        [403, -252, 6, 4],
                        [252, -403, 0, 1],
                        [252, -403, 5, 2],
                        [252, -403, 5, 0],
                        [126, -403, 5, 0],
                        [0, -403, 5, 0],
                        [-126, -403, 5, 0],
                        [-252, -403, 5, 4],
                        [-403, -252, 0, 1],
                        [-403, -252, 4, 2],
                        [-403, -252, 4, 0],
                        [-403, -126, 4, 0],
                        [-403, 0, 4, 0],
                        [-403, 126, 4, 0],
                        [-403, 252, 4, 4]
                    ],
                    [
                        [0, 0, 0, 2],
                        [405, 132, 2, 5],
                        [0, 0, 0, 2],
                        [0, 425, 4, 5],
                        [0, 0, 0, 2],
                        [-405, 132, 6, 5],
                        [0, 0, 0, 2],
                        [-250, -344, 5, 5],
                        [0, 0, 0, 2],
                        [241, -344, 7, 5]
                    ],
                    [
                        [-329, -190, 0, 2],
                        [-285, -190, 7, 0],
                        [-256, -190, 7, 0],
                        [-228, -190, 7, 0],
                        [-200, -190, 7, 0],
                        [-171, -190, 7, 0],
                        [-142, -190, 7, 0],
                        [-114, -190, 7, 0],
                        [-86, -190, 7, 0],
                        [-57, -190, 7, 0],
                        [-28, -190, 7, 0],
                        [0, -190, 7, 0],
                        [28, -190, 7, 0],
                        [57, -190, 7, 0],
                        [86, -190, 7, 0],
                        [114, -190, 7, 0],
                        [142, -190, 7, 0],
                        [171, -190, 7, 0],
                        [200, -190, 7, 0],
                        [228, -190, 7, 0],
                        [256, -190, 7, 0],
                        [285, -190, 7, 0],
                        [329, -190, 7, 4],
                        [307, -152, 2, 0],
                        [285, -114, 2, 0],
                        [271, -89, 2, 0],
                        [256, -64, 2, 0],
                        [242, -40, 2, 0],
                        [228, -13, 2, 0],
                        [214, 10, 2, 0],
                        [200, 35, 2, 0],
                        [185, 59, 2, 0],
                        [171, 84, 2, 0],
                        [157, 107, 2, 0],
                        [142, 131, 2, 0],
                        [128, 152, 2, 0],
                        [114, 183, 2, 0],
                        [100, 207, 2, 0],
                        [86, 233, 2, 0],
                        [71, 257, 2, 0],
                        [57, 281, 2, 0],
                        [43, 306, 2, 0],
                        [28, 331, 2, 0],
                        [14, 354, 2, 0],
                        [0, 380, 2, 4],
                        [-14, 354, 4, 0],
                        [-28, 331, 4, 0],
                        [-43, 306, 4, 0],
                        [-57, 281, 4, 0],
                        [-71, 257, 4, 0],
                        [-86, 233, 4, 0],
                        [-100, 207, 4, 0],
                        [-114, 183, 4, 0],
                        [-128, 152, 4, 0],
                        [-142, 131, 4, 0],
                        [-157, 107, 4, 0],
                        [-171, 84, 4, 0],
                        [-185, 59, 4, 0],
                        [-200, 35, 4, 0],
                        [-214, 10, 4, 0],
                        [-228, -13, 4, 0],
                        [-242, -40, 4, 0],
                        [-256, -64, 4, 0],
                        [-271, -89, 4, 0],
                        [-285, -114, 4, 0],
                        [-307, -152, 4, 0],
                        [-329, -190, 4, 4]
                    ],
                    [
                        [-400, 400, 0, 2],
                        [-360, 400, 7, 0],
                        [-320, 400, 7, 0],
                        [-280, 400, 7, 0],
                        [-240, 400, 7, 0],
                        [-200, 400, 7, 0],
                        [-160, 400, 7, 0],
                        [-120, 400, 7, 0],
                        [-80, 400, 7, 0],
                        [-40, 400, 7, 0],
                        [0, 400, 7, 0],
                        [40, 400, 7, 0],
                        [80, 400, 7, 0],
                        [120, 400, 7, 0],
                        [160, 400, 7, 0],
                        [240, 400, 7, 0],
                        [280, 400, 7, 0],
                        [320, 400, 7, 0],
                        [360, 400, 7, 0],
                        [400, 400, 7, 4],
                        [400, 360, 4, 0],
                        [400, 320, 4, 0],
                        [400, 280, 4, 0],
                        [400, 240, 4, 0],
                        [400, 200, 4, 0],
                        [400, 160, 4, 0],
                        [400, 120, 4, 0],
                        [400, 80, 4, 0],
                        [400, 40, 4, 0],
                        [400, 0, 4, 0],
                        [400, -40, 4, 0],
                        [400, -80, 4, 0],
                        [400, -120, 4, 0],
                        [400, -160, 4, 0],
                        [400, -200, 4, 0],
                        [400, -240, 4, 0],
                        [400, -280, 4, 0],
                        [400, -320, 4, 0],
                        [400, -360, 4, 0],
                        [400, -400, 4, 4],
                        [360, -400, 5, 0],
                        [320, -400, 5, 0],
                        [280, -400, 5, 0],
                        [240, -400, 5, 0],
                        [200, -400, 5, 0],
                        [160, -400, 5, 0],
                        [120, -400, 5, 0],
                        [80, -400, 5, 0],
                        [40, -400, 5, 0],
                        [0, -400, 5, 0],
                        [-40, -400, 5, 0],
                        [-80, -400, 5, 0],
                        [-120, -400, 5, 0],
                        [-160, -400, 5, 0],
                        [-240, -400, 5, 0],
                        [-280, -400, 5, 0],
                        [-320, -400, 5, 0],
                        [-360, -400, 5, 0],
                        [-400, -400, 5, 4],
                        [-400, -360, 6, 0],
                        [-400, -320, 6, 0],
                        [-400, -280, 6, 0],
                        [-400, -240, 6, 0],
                        [-400, -200, 6, 0],
                        [-400, -160, 6, 0],
                        [-400, -120, 6, 0],
                        [-400, -80, 6, 0],
                        [-400, -40, 6, 0],
                        [-400, 0, 6, 0],
                        [-400, 40, 6, 0],
                        [-400, 80, 6, 0],
                        [-400, 120, 6, 0],
                        [-400, 160, 6, 0],
                        [-400, 200, 6, 0],
                        [-400, 240, 6, 0],
                        [-400, 280, 6, 0],
                        [-400, 320, 6, 0],
                        [-400, 360, 6, 0],
                        [-400, 400, 6, 4]
                    ],
                    [
                        [-400, 0, 7, 1],
                        [-392, 8, 7, 0],
                        [-384, 16, 7, 0],
                        [-376, 24, 7, 0],
                        [-368, 32, 7, 0],
                        [-360, 40, 7, 0],
                        [-352, 48, 2, 0],
                        [-344, 56, 2, 0],
                        [-336, 64, 2, 0],
                        [-328, 72, 2, 0],
                        [-320, 80, 2, 0],
                        [-312, 88, 7, 0],
                        [-304, 96, 7, 0],
                        [-296, 104, 7, 0],
                        [-288, 112, 7, 0],
                        [-280, 120, 7, 0],
                        [-272, 128, 2, 0],
                        [-264, 136, 2, 0],
                        [-256, 144, 2, 0],
                        [-248, 152, 2, 0],
                        [-240, 160, 2, 0],
                        [-232, 168, 7, 0],
                        [-224, 176, 7, 0],
                        [-216, 184, 7, 0],
                        [-208, 192, 7, 0],
                        [-200, 200, 7, 0],
                        [-192, 208, 2, 0],
                        [-184, 216, 2, 0],
                        [-176, 224, 2, 0],
                        [-168, 232, 2, 0],
                        [-160, 240, 2, 0],
                        [-152, 248, 7, 0],
                        [-144, 256, 7, 0],
                        [-136, 264, 7, 0],
                        [-128, 272, 7, 0],
                        [-120, 280, 7, 0],
                        [-112, 288, 2, 0],
                        [-104, 296, 2, 0],
                        [-96, 304, 2, 0],
                        [-88, 312, 2, 0],
                        [-80, 320, 2, 0],
                        [-72, 328, 7, 0],
                        [-64, 336, 7, 0],
                        [-56, 344, 7, 0],
                        [-48, 352, 7, 0],
                        [-40, 360, 7, 0],
                        [-32, 368, 2, 0],
                        [-24, 376, 2, 0],
                        [-16, 384, 2, 0],
                        [-8, 392, 2, 0],
                        [0, 400, 2, 3],
                        [8, 392, 7, 0],
                        [16, 384, 7, 0],
                        [24, 376, 7, 0],
                        [32, 368, 7, 0],
                        [40, 360, 7, 0],
                        [48, 352, 2, 0],
                        [56, 344, 2, 0],
                        [64, 336, 2, 0],
                        [72, 328, 2, 0],
                        [80, 320, 2, 0],
                        [88, 312, 7, 0],
                        [96, 304, 7, 0],
                        [104, 296, 7, 0],
                        [112, 288, 7, 0],
                        [120, 280, 7, 0],
                        [128, 272, 2, 0],
                        [136, 264, 2, 0],
                        [144, 256, 2, 0],
                        [152, 248, 2, 0],
                        [160, 240, 2, 0],
                        [168, 232, 7, 0],
                        [176, 224, 7, 0],
                        [184, 216, 7, 0],
                        [192, 208, 7, 0],
                        [200, 200, 7, 0],
                        [208, 192, 2, 0],
                        [216, 184, 2, 0],
                        [224, 176, 2, 0],
                        [232, 168, 2, 0],
                        [240, 160, 2, 0],
                        [248, 152, 7, 0],
                        [256, 144, 7, 0],
                        [264, 136, 7, 0],
                        [272, 128, 7, 0],
                        [280, 120, 7, 0],
                        [288, 112, 2, 0],
                        [296, 104, 2, 0],
                        [304, 96, 2, 0],
                        [312, 88, 2, 0],
                        [320, 80, 2, 0],
                        [328, 72, 7, 0],
                        [336, 64, 7, 0],
                        [344, 56, 7, 0],
                        [352, 48, 7, 0],
                        [360, 40, 7, 0],
                        [368, 32, 2, 0],
                        [376, 24, 2, 0],
                        [384, 16, 2, 0],
                        [392, 8, 2, 0],
                        [400, 0, 2, 3],
                        [392, -8, 7, 0],
                        [384, -16, 7, 0],
                        [376, -24, 7, 0],
                        [368, -32, 7, 0],
                        [360, -40, 7, 0],
                        [352, -48, 2, 0],
                        [344, -56, 2, 0],
                        [336, -64, 2, 0],
                        [328, -72, 2, 0],
                        [320, -80, 2, 0],
                        [312, -88, 7, 0],
                        [304, -96, 7, 0],
                        [296, -104, 7, 0],
                        [288, -112, 7, 0],
                        [280, -120, 7, 0],
                        [272, -128, 2, 0],
                        [264, -136, 2, 0],
                        [256, -144, 2, 0],
                        [248, -152, 2, 0],
                        [240, -160, 2, 0],
                        [232, -168, 7, 0],
                        [224, -176, 7, 0],
                        [216, -184, 7, 0],
                        [208, -192, 7, 0],
                        [200, -200, 7, 0],
                        [192, -208, 2, 0],
                        [184, -216, 2, 0],
                        [176, -224, 2, 0],
                        [168, -232, 2, 0],
                        [160, -240, 2, 0],
                        [152, -248, 7, 0],
                        [144, -256, 7, 0],
                        [136, -264, 7, 0],
                        [128, -272, 7, 0],
                        [120, -280, 7, 0],
                        [112, -288, 2, 0],
                        [104, -296, 2, 0],
                        [96, -304, 2, 0],
                        [88, -312, 2, 0],
                        [80, -320, 2, 0],
                        [72, -328, 7, 0],
                        [64, -336, 7, 0],
                        [56, -344, 7, 0],
                        [48, -352, 7, 0],
                        [40, -360, 7, 0],
                        [32, -368, 2, 0],
                        [24, -376, 2, 0],
                        [16, -384, 2, 0],
                        [8, -392, 2, 0],
                        [0, -400, 2, 3],
                        [-8, -392, 7, 0],
                        [-16, -384, 7, 0],
                        [-24, -376, 7, 0],
                        [-32, -368, 7, 0],
                        [-40, -360, 7, 0],
                        [-48, -352, 2, 0],
                        [-56, -344, 2, 0],
                        [-64, -336, 2, 0],
                        [-72, -328, 2, 0],
                        [-80, -320, 2, 0],
                        [-88, -312, 7, 0],
                        [-96, -304, 7, 0],
                        [-104, -296, 7, 0],
                        [-112, -288, 7, 0],
                        [-120, -280, 7, 0],
                        [-128, -272, 2, 0],
                        [-136, -264, 2, 0],
                        [-144, -256, 2, 0],
                        [-152, -248, 2, 0],
                        [-160, -240, 2, 0],
                        [-168, -232, 7, 0],
                        [-176, -224, 7, 0],
                        [-184, -216, 7, 0],
                        [-192, -208, 7, 0],
                        [-200, -200, 7, 0],
                        [-208, -192, 2, 0],
                        [-216, -184, 2, 0],
                        [-224, -176, 2, 0],
                        [-232, -168, 2, 0],
                        [-240, -160, 2, 0],
                        [-248, -152, 7, 0],
                        [-256, -144, 7, 0],
                        [-264, -136, 7, 0],
                        [-272, -128, 7, 0],
                        [-280, -120, 7, 0],
                        [-288, -112, 2, 0],
                        [-296, -104, 2, 0],
                        [-304, -96, 2, 0],
                        [-312, -88, 2, 0],
                        [-320, -80, 2, 0],
                        [-328, -72, 7, 0],
                        [-336, -64, 7, 0],
                        [-344, -56, 7, 0],
                        [-352, -48, 7, 0],
                        [-360, -40, 7, 0],
                        [-368, -32, 2, 0],
                        [-376, -24, 2, 0],
                        [-384, -16, 2, 0],
                        [-392, -8, 2, 0],
                        [-400, 0, 2, 3]
                    ],
                    [
                        [0, 400, 0, 1, 0, 400, 7, 2],
                        [40, 370, 7, 0],
                        [80, 340, 7, 0],
                        [120, 310, 7, 0],
                        [160, 278, 7, 0],
                        [200, 248, 7, 0],
                        [240, 218, 7, 0],
                        [280, 188, 7, 0],
                        [320, 156, 7, 0],
                        [360, 126, 7, 0],
                        [400, 94, 7, 4],
                        [386, 48, 2, 0],
                        [372, 2, 2, 0],
                        [358, -40, 2, 0],
                        [344, -84, 2, 0],
                        [330, -134, 2, 0],
                        [316, -174, 2, 0],
                        [302, -224, 2, 0],
                        [288, -270, 2, 0],
                        [274, -314, 2, 0],
                        [260, -360, 2, 0],
                        [248, -400, 2, 4],
                        [204, -400, 4, 0],
                        [160, -400, 4, 0],
                        [116, -400, 4, 0],
                        [72, -400, 4, 0],
                        [28, -400, 4, 0],
                        [-28, -400, 4, 0],
                        [-72, -400, 4, 0],
                        [-116, -400, 4, 0],
                        [-160, -400, 4, 0],
                        [-204, -400, 4, 0],
                        [-248, -400, 4, 4],
                        [-260, -360, 5, 0],
                        [-274, -314, 5, 0],
                        [-288, -270, 5, 0],
                        [-302, -224, 5, 0],
                        [-316, -174, 5, 0],
                        [-330, -134, 5, 0],
                        [-344, -84, 5, 0],
                        [-358, -40, 5, 0],
                        [-372, 2, 5, 0],
                        [-372, 2, 5, 0],
                        [-386, 48, 5, 0],
                        [-400, 94, 5, 4],
                        [-360, 126, 6, 0],
                        [-320, 156, 6, 0],
                        [-280, 188, 6, 0],
                        [-240, 218, 6, 0],
                        [-200, 248, 6, 0],
                        [-160, 278, 6, 0],
                        [-120, 310, 6, 0],
                        [-80, 340, 6, 0],
                        [-40, 370, 6, 0],
                        [0, 400, 6, 4]
                    ],
                    [
                        [0, 398, 0, 3],
                        [-96, 358, 1, 0],
                        [-191, 318, 1, 0],
                        [-283, 283, 1, 3],
                        [-318, 191, 2, 0],
                        [-358, 96, 2, 0],
                        [-398, 0, 2, 3],
                        [-358, -96, 3, 0],
                        [-318, -191, 3, 0],
                        [-283, -283, 3, 3],
                        [-191, -318, 4, 0],
                        [-96, -358, 4, 0],
                        [0, -398, 4, 3],
                        [96, -358, 5, 0],
                        [191, -318, 5, 0],
                        [283, -283, 5, 3],
                        [318, -191, 6, 0],
                        [358, -96, 6, 0],
                        [398, 0, 6, 3],
                        [358, 96, 7, 0],
                        [318, 191, 7, 0],
                        [283, 283, 7, 3],
                        [191, 318, 4, 0],
                        [96, 358, 4, 0],
                        [0, 398, 4, 3]
                    ],
                    [
                        [-400, 0, 0, 3],
                        [-390, 0, 6, 0],
                        [-380, 0, 6, 0],
                        [-370, 0, 6, 0],
                        [-360, 0, 6, 0],
                        [-350, 0, 6, 3],
                        [-340, 0, 6, 0],
                        [-330, 0, 6, 0],
                        [-320, 0, 6, 0],
                        [-310, 0, 6, 0],
                        [-300, 0, 6, 3],
                        [-290, 0, 6, 0],
                        [-280, 0, 6, 0],
                        [-270, 0, 6, 0],
                        [-260, 0, 6, 0],
                        [-250, 0, 6, 3],
                        [-240, 0, 6, 0],
                        [-230, 0, 6, 0],
                        [-220, 0, 6, 0],
                        [-210, 0, 6, 0],
                        [-200, 0, 6, 3],
                        [-190, 0, 6, 0],
                        [-180, 0, 6, 0],
                        [-170, 0, 6, 0],
                        [-160, 0, 6, 0],
                        [-150, 0, 6, 3],
                        [-140, 0, 6, 0],
                        [-130, 0, 6, 0],
                        [-120, 0, 6, 0],
                        [-110, 0, 6, 0],
                        [-100, 0, 6, 3],
                        [-90, 0, 6, 0],
                        [-80, 0, 6, 0],
                        [-70, 0, 6, 0],
                        [-60, 0, 6, 0],
                        [-50, 0, 6, 3],
                        [-40, 0, 6, 0],
                        [-30, 0, 6, 0],
                        [-20, 0, 6, 0],
                        [-10, 0, 6, 0],
                        [0, 0, 6, 3],
                        [10, 0, 6, 0],
                        [20, 0, 6, 0],
                        [30, 0, 6, 0],
                        [40, 0, 6, 0],
                        [50, 0, 6, 3],
                        [60, 0, 6, 0],
                        [70, 0, 6, 0],
                        [80, 0, 6, 0],
                        [90, 0, 6, 0],
                        [100, 0, 6, 3],
                        [110, 0, 6, 0],
                        [120, 0, 6, 0],
                        [130, 0, 6, 0],
                        [140, 0, 6, 0],
                        [150, 0, 6, 3],
                        [160, 0, 6, 0],
                        [170, 0, 6, 0],
                        [180, 0, 6, 0],
                        [190, 0, 6, 0],
                        [200, 0, 6, 3],
                        [210, 0, 6, 0],
                        [220, 0, 6, 0],
                        [230, 0, 6, 0],
                        [240, 0, 6, 0],
                        [250, 0, 6, 3],
                        [260, 0, 6, 0],
                        [270, 0, 6, 0],
                        [280, 0, 6, 0],
                        [290, 0, 6, 0],
                        [300, 0, 6, 3],
                        [310, 0, 6, 0],
                        [320, 0, 6, 0],
                        [330, 0, 6, 0],
                        [340, 0, 6, 0],
                        [350, 0, 6, 3],
                        [360, 0, 6, 0],
                        [370, 0, 6, 0],
                        [380, 0, 6, 0],
                        [390, 0, 6, 0],
                        [400, 0, 6, 3]
                    ],
                    [
                        [-400, 240, 0, 1],
                        [-400, 400, 4, 3],
                        [-240, 400, 4, 3],
                        [240, 400, 0, 1],
                        [400, 400, 5, 3],
                        [400, 240, 5, 3],
                        [400, -240, 0, 1],
                        [400, -400, 6, 3],
                        [240, -400, 6, 3],
                        [-240, -400, 0, 1],
                        [-400, -400, 7, 3],
                        [-400, -240, 7, 3]
                    ],
                    [
                        [42, 42, 0, 1],
                        [403, 0, 2, 2],
                        [42, -42, 2, 2],
                        [0, -403, 7, 2],
                        [-42, -42, 7, 2],
                        [-403, 0, 4, 2],
                        [-42, 42, 4, 2],
                        [0, 403, 6, 2],
                        [42, 42, 6, 2]
                    ],
                    [
                        [0, 398, 0, 1],
                        [0, 398, 1, 2],
                        [-96, 96, 1, 4],
                        [-398, 96, 2, 4],
                        [-151, -96, 2, 4],
                        [-247, -398, 4, 4],
                        [0, -211, 4, 4],
                        [247, -398, 6, 4],
                        [151, -96, 6, 4],
                        [398, 96, 7, 4],
                        [96, 96, 7, 4],
                        [0, 398, 1, 4]
                    ],
                    [
                        [0, 0, 0, 1],
                        [405, 132, 2, 2],
                        [360, 225, 2, 2],
                        [0, 0, 2, 2],
                        [0, 425, 4, 2],
                        [-103, 412, 4, 2],
                        [0, 0, 4, 2],
                        [-405, 132, 6, 2],
                        [-424, 30, 6, 2],
                        [0, 0, 6, 2],
                        [-250, -344, 5, 2],
                        [-159, -394, 5, 2],
                        [0, 0, 5, 2],
                        [250, -344, 7, 2],
                        [326, -273, 7, 2],
                        [0, 0, 7, 2]
                    ],
                    [
                        [-2, 395, 0, 2],
                        [-245, -395, 4, 2],
                        [391, 92, 4, 2],
                        [-396, 92, 4, 2],
                        [241, -395, 4, 2],
                        [-2, 395, 4, 2]
                    ],
                    [
                        [-70, 169, 0, 1],
                        [0, 417, 1, 1],
                        [69, 170, 1, 1],
                        [292, 296, 4, 1],
                        [165, 71, 4, 1],
                        [414, 3, 2, 1],
                        [164, -65, 2, 1],
                        [293, -290, 5, 1],
                        [68, -162, 5, 1],
                        [0, -410, 3, 1],
                        [-69, -163, 3, 1],
                        [-294, -289, 6, 1],
                        [-166, -64, 6, 1],
                        [-416, 3, 7, 1],
                        [-166, 71, 7, 1],
                        [-293, 296, 5, 1],
                        [-70, 169, 5, 1]
                    ],
                    [
                        [-49, 181, 0, 1],
                        [0, 412, 1, 1],
                        [48, 181, 1, 1],
                        [207, 357, 4, 1],
                        [131, 130, 4, 1],
                        [357, 205, 2, 1],
                        [180, 46, 2, 1],
                        [413, -3, 5, 1],
                        [180, -51, 5, 1],
                        [357, -209, 3, 1],
                        [131, -134, 3, 1],
                        [207, -358, 6, 1],
                        [47, -182, 6, 1],
                        [1, -414, 1, 1],
                        [-49, -183, 1, 1],
                        [-206, -360, 4, 1],
                        [-132, -134, 4, 1],
                        [-360, -209, 2, 1],
                        [-182, -51, 2, 1],
                        [-414, -3, 5, 1],
                        [-182, 45, 5, 1],
                        [-359, 205, 3, 1],
                        [-133, 132, 3, 1],
                        [-208, 358, 6, 1],
                        [-49, 181, 6, 1]
                    ],
                    [
                        [0, 418, 0, 1],
                        [0, -1, 7, 1],
                        [1, -418, 4, 1],
                        [295, -296, 0, 1],
                        [0, -1, 2, 1],
                        [-295, 295, 3, 1],
                        [-419, -1, 0, 1],
                        [-1, -1, 5, 1],
                        [417, -2, 1, 1],
                        [295, 294, 0, 1],
                        [0, -1, 6, 1],
                        [-296, -297, 7, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [-176, 176, 4, 0],
                        [-352, 352, 4, 1],
                        [-352, 176, 4, 0],
                        [-352, 0, 4, 1],
                        [-176, 0, 4, 0],
                        [0, 0, 4, 1],
                        [176, -176, 6, 0],
                        [352, -352, 6, 1],
                        [352, -176, 6, 0],
                        [352, 0, 6, 1],
                        [176, 0, 6, 0],
                        [0, 0, 6, 1],
                        [-176, -176, 5, 0],
                        [-352, -352, 5, 1],
                        [-176, -352, 5, 0],
                        [0, -352, 5, 1],
                        [0, -176, 5, 0],
                        [0, 0, 5, 1],
                        [176, 176, 7, 0],
                        [352, 352, 7, 1],
                        [176, 352, 7, 0],
                        [0, 352, 7, 1],
                        [0, 176, 7, 0],
                        [0, 0, 7, 1]
                    ],
                    [
                        [0, 0, 0, 2],
                        [136, 374, 7, 3],
                        [-136, 374, 7, 3],
                        [0, 0, 7, 2],
                        [-392, -70, 4, 3],
                        [-255, -306, 4, 3],
                        [0, 0, 4, 2],
                        [256, -305, 5, 3],
                        [392, -69, 5, 3],
                        [0, 0, 5, 2]
                    ],
                    [
                        [77, 235, 0, 1],
                        [102, 217, 5, 0],
                        [127, 197, 5, 0],
                        [149, 181, 5, 0],
                        [183, 157, 4, 0],
                        [218, 130, 4, 0],
                        [253, 105, 4, 0],
                        [288, 79, 4, 0],
                        [319, 55, 4, 0],
                        [345, 37, 5, 0],
                        [372, 18, 5, 0],
                        [395, 0, 5, 3],
                        [248, -1, 0, 1],
                        [237, -36, 5, 0],
                        [228, -66, 5, 0],
                        [218, -97, 5, 0],
                        [199, -153, 4, 0],
                        [181, -207, 4, 0],
                        [158, -276, 4, 0],
                        [146, -312, 5, 0],
                        [134, -348, 5, 0],
                        [123, -378, 5, 3],
                        [76, -236, 0, 1],
                        [39, -237, 5, 0],
                        [-3, -237, 5, 0],
                        [-44, -237, 5, 0],
                        [-82, -237, 4, 0],
                        [-122, -237, 4, 0],
                        [-179, -237, 4, 0],
                        [-231, -237, 4, 0],
                        [-257, -237, 5, 0],
                        [-281, -237, 5, 0],
                        [-319, -237, 5, 3],
                        [-203, -144, 0, 1],
                        [-208, -126, 5, 0],
                        [-214, -105, 5, 0],
                        [-221, -85, 5, 0],
                        [-230, -57, 4, 0],
                        [-245, -9, 4, 0],
                        [-262, 44, 4, 0],
                        [-280, 102, 4, 0],
                        [-289, 131, 4, 0],
                        [-299, 164, 5, 0],
                        [-309, 194, 5, 0],
                        [-321, 231, 5, 3],
                        [-201, 145, 0, 1],
                        [-167, 169, 5, 0],
                        [-136, 190, 5, 0],
                        [-114, 207, 5, 0],
                        [-62, 244, 4, 0],
                        [-13, 278, 4, 0],
                        [43, 318, 4, 0],
                        [68, 337, 5, 0],
                        [94, 356, 5, 0],
                        [122, 377, 5, 3]
                    ],
                    [
                        [34, 67, 0, 1],
                        [34, 151, 2, 0],
                        [34, 235, 2, 0],
                        [34, 319, 2, 0],
                        [34, 403, 2, 2],
                        [-34, 403, 2, 2],
                        [-34, 319, 2, 0],
                        [-34, 235, 2, 0],
                        [-34, 151, 2, 0],
                        [-34, 67, 2, 2],
                        [34, 67, 2, 2],
                        [-76, -3, 0, 1],
                        [-146, -45, 4, 0],
                        [-217, -86, 4, 0],
                        [-287, -126, 4, 0],
                        [-360, -168, 4, 2],
                        [-324, -227, 4, 2],
                        [-254, -186, 4, 0],
                        [-183, -146, 4, 0],
                        [-113, -104, 4, 0],
                        [-42, -64, 4, 2],
                        [-76, -3, 4, 2],
                        [76, -3, 0, 1],
                        [146, -45, 6, 0],
                        [217, -86, 6, 0],
                        [287, -126, 6, 0],
                        [360, -168, 6, 2],
                        [324, -227, 6, 2],
                        [254, -186, 6, 0],
                        [183, -146, 6, 0],
                        [113, -104, 6, 0],
                        [42, -64, 6, 2],
                        [76, -3, 6, 2]
                    ],
                    [
                        [-98, 98, 0, 2],
                        [-390, 98, 4, 2],
                        [-390, -98, 4, 2],
                        [-98, -98, 4, 2],
                        [-98, -390, 5, 2],
                        [98, -390, 5, 2],
                        [98, -98, 5, 2],
                        [390, -98, 6, 2],
                        [390, 98, 6, 2],
                        [98, 98, 6, 2],
                        [98, 390, 7, 2],
                        [-98, 390, 7, 2],
                        [-98, 98, 7, 2]
                    ],
                    [
                        [0, 40, 0, 2],
                        [-360, 400, 7, 2],
                        [360, 400, 7, 2],
                        [0, 40, 7, 2],
                        [0, -40, 0, 2],
                        [-360, -400, 6, 2],
                        [360, -400, 6, 2],
                        [0, -40, 6, 2]
                    ],
                    [
                        [-185, 185, 0, 1],
                        [-185, 296, 4, 2],
                        [-296, 296, 4, 2],
                        [-296, 185, 4, 2],
                        [-185, 185, 4, 2],
                        [-185, -185, 0, 1],
                        [-185, -296, 5, 2],
                        [-296, -296, 5, 2],
                        [-296, -185, 5, 2],
                        [-185, -185, 5, 2],
                        [185, -185, 0, 1],
                        [185, -296, 6, 2],
                        [296, -296, 6, 2],
                        [296, -185, 6, 2],
                        [185, -185, 6, 2],
                        [185, 185, 0, 1],
                        [185, 296, 7, 2],
                        [296, 296, 7, 2],
                        [296, 185, 7, 2],
                        [185, 185, 7, 2]
                    ],
                    [
                        [-375, 15, 0, 1],
                        [-345, 15, 7, 1],
                        [-345, -15, 7, 1],
                        [-375, -15, 7, 1],
                        [-375, 15, 7, 1],
                        [-285, 15, 0, 1],
                        [-255, 15, 7, 1],
                        [-255, -15, 7, 1],
                        [-285, -15, 7, 1],
                        [-285, 15, 7, 1],
                        [-195, 15, 0, 1],
                        [-165, 15, 2, 1],
                        [-165, -15, 2, 1],
                        [-195, -15, 2, 1],
                        [-195, 15, 2, 1],
                        [-105, 15, 0, 1],
                        [-75, 15, 2, 1],
                        [-75, -15, 2, 1],
                        [-105, -15, 2, 1],
                        [-105, 15, 2, 1],
                        [-15, 15, 0, 1],
                        [15, 15, 7, 1],
                        [15, -15, 7, 1],
                        [-15, -15, 7, 1],
                        [-15, 15, 7, 1],
                        [75, 15, 0, 1],
                        [105, 15, 4, 1],
                        [105, -15, 4, 1],
                        [75, -15, 4, 1],
                        [75, 15, 4, 1],
                        [165, 15, 0, 1],
                        [195, 15, 4, 1],
                        [195, -15, 4, 1],
                        [165, -15, 4, 1],
                        [165, 15, 4, 1],
                        [255, 15, 0, 1],
                        [285, 15, 6, 1],
                        [285, -15, 6, 1],
                        [255, -15, 6, 1],
                        [255, 15, 6, 1],
                        [345, 15, 0, 1],
                        [375, 15, 6, 1],
                        [375, -15, 6, 1],
                        [345, -15, 6, 1],
                        [345, 15, 6, 1]
                    ],
                    [
                        [-403, -20, 0, 1],
                        [-336, -20, 5, 0],
                        [-269, -20, 5, 0],
                        [-202, -20, 5, 0],
                        [-134, -20, 5, 0],
                        [-67, -20, 5, 0],
                        [0, -20, 5, 0],
                        [67, -20, 5, 0],
                        [134, -20, 5, 0],
                        [202, -20, 5, 0],
                        [269, -20, 5, 0],
                        [336, -20, 5, 0],
                        [403, -20, 5, 2],
                        [403, 20, 7, 2],
                        [336, 20, 2, 0],
                        [269, 20, 2, 0],
                        [202, 20, 2, 0],
                        [134, 20, 2, 0],
                        [67, 20, 2, 0],
                        [0, 20, 2, 0],
                        [-67, 20, 2, 0],
                        [-134, 20, 2, 0],
                        [-202, 20, 2, 0],
                        [-269, 20, 2, 0],
                        [-336, 20, 2, 0],
                        [-403, 20, 2, 2],
                        [-403, -20, 7, 2]
                    ],
                    [
                        [-20, 0, 0, 1],
                        [20, 0, 7, 1],
                        [20, 1, 7, 1],
                        [-20, 1, 7, 1],
                        [-20, 2, 7, 1],
                        [20, 2, 7, 1],
                        [20, 3, 7, 1],
                        [-20, 3, 7, 1],
                        [-20, 4, 7, 1],
                        [20, 4, 7, 1],
                        [20, 5, 7, 1],
                        [-20, 5, 7, 1],
                        [-20, 6, 7, 1],
                        [20, 6, 7, 1],
                        [20, 7, 7, 1],
                        [-20, 7, 7, 1],
                        [-20, 8, 7, 1],
                        [20, 8, 7, 1],
                        [20, 9, 7, 1],
                        [-20, 9, 7, 1],
                        [-20, 10, 7, 1],
                        [20, 10, 7, 1],
                        [20, 11, 7, 1],
                        [-20, 11, 7, 1],
                        [-20, 12, 0, 1],
                        [20, 12, 7, 1],
                        [20, 13, 7, 1],
                        [-20, 13, 7, 1],
                        [-20, 14, 7, 1],
                        [20, 14, 7, 1],
                        [20, 15, 7, 1],
                        [-20, 15, 7, 1],
                        [-20, 16, 7, 1],
                        [20, 16, 7, 1],
                        [20, 17, 7, 1],
                        [-20, 17, 7, 1],
                        [-20, 18, 7, 1],
                        [20, 18, 7, 1],
                        [20, 19, 7, 1],
                        [-20, 19, 7, 1],
                        [-20, 20, 7, 1],
                        [20, 20, 7, 1],
                        [20, 21, 7, 1],
                        [-20, 21, 7, 1],
                        [-20, 22, 7, 1],
                        [20, 22, 7, 1],
                        [20, 23, 7, 1],
                        [-20, 23, 7, 1],
                        [-20, 24, 7, 1],
                        [20, 24, 7, 1],
                        [20, 25, 7, 1],
                        [-20, 25, 7, 1],
                        [-20, 26, 7, 1],
                        [20, 26, 7, 1],
                        [20, 27, 7, 1],
                        [-20, 28, 7, 1],
                        [-20, 28, 7, 1],
                        [20, 28, 7, 1],
                        [20, 29, 7, 1],
                        [-20, 29, 7, 1],
                        [-20, 30, 7, 1],
                        [20, 30, 7, 1],
                        [20, 31, 7, 1],
                        [-20, 31, 7, 1],
                        [-20, 32, 7, 1],
                        [20, 32, 7, 1],
                        [20, 33, 7, 1],
                        [-20, 33, 7, 1],
                        [-20, 34, 7, 1],
                        [20, 34, 7, 1],
                        [20, 35, 7, 1],
                        [-20, 35, 7, 1],
                        [-20, 36, 7, 1],
                        [20, 36, 7, 1],
                        [20, 37, 7, 1],
                        [-20, 37, 7, 1],
                        [-20, 38, 7, 1],
                        [20, 38, 7, 1],
                        [20, 39, 7, 1],
                        [-20, 39, 7, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [0, 100, 1, 3],
                        [100, 100, 1, 3],
                        [100, 200, 4, 3],
                        [200, 200, 4, 3],
                        [200, 300, 2, 3],
                        [300, 300, 2, 3],
                        [300, 400, 7, 3],
                        [400, 400, 7, 3]
                    ],
                    [
                        [-450, 400, 0, 1],
                        [-350, 400, 7, 3],
                        [-350, 300, 1, 3],
                        [-250, 300, 1, 3],
                        [-250, 200, 4, 3],
                        [-150, 200, 4, 3],
                        [-150, 100, 2, 3],
                        [-50, 100, 2, 3],
                        [-50, 0, 5, 3],
                        [50, 0, 5, 3],
                        [50, 100, 3, 3],
                        [150, 100, 3, 3],
                        [150, 200, 6, 3],
                        [250, 200, 6, 3],
                        [250, 300, 2, 3],
                        [350, 300, 2, 3],
                        [350, 400, 7, 3],
                        [450, 400, 7, 3]
                    ],
                    [
                        [-100, 400, 0, 1],
                        [100, 400, 4, 3],
                        [100, 200, 4, 3],
                        [-100, 200, 4, 3],
                        [-100, 400, 4, 2]
                    ],
                    [
                        [-100, 400, 0, 1],
                        [100, 400, 4, 3],
                        [100, 200, 4, 3],
                        [-100, 200, 4, 3],
                        [-100, 400, 4, 2],
                        [-100, -200, 0, 1],
                        [100, -200, 4, 3],
                        [100, -400, 4, 3],
                        [-100, -400, 4, 3],
                        [-100, -200, 4, 2]
                    ],
                    [
                        [-60, -198, 0, 1],
                        [-40, -132, 6, 0],
                        [-20, -66, 5, 0],
                        [0, 0, 5, 0],
                        [20, 66, 4, 0],
                        [40, 132, 5, 0],
                        [60, 198, 5, 2],
                        [80, 132, 6, 0],
                        [100, 66, 5, 0],
                        [120, 0, 5, 0],
                        [140, -66, 4, 0],
                        [160, -132, 5, 0],
                        [180, -198, 5, 2]
                    ],
                    [
                        [-450, 50, 0, 1],
                        [-350, -50, 7, 4],
                        [-250, 50, 2, 4],
                        [-150, -50, 7, 4],
                        [-50, 50, 2, 4],
                        [50, -50, 7, 4],
                        [150, 50, 2, 4],
                        [250, -50, 7, 4],
                        [350, 50, 2, 4],
                        [450, -50, 7, 4]
                    ],
                    [
                        [-400, 200, 0, 1],
                        [-200, -200, 4, 4],
                        [0, 200, 7, 4],
                        [200, -200, 4, 4],
                        [400, 200, 7, 4]
                    ],
                    [
                        [-420, -20, 0, 1],
                        [-380, 20, 5, 4],
                        [-340, -20, 4, 4],
                        [-300, 20, 5, 4],
                        [-260, -20, 4, 4],
                        [-220, 20, 5, 4],
                        [-180, -20, 4, 4],
                        [-140, 20, 5, 4],
                        [-100, -20, 4, 4],
                        [-60, 20, 5, 4],
                        [-20, -20, 4, 4],
                        [20, 20, 5, 4],
                        [60, -20, 4, 4],
                        [100, 20, 5, 4],
                        [140, -20, 4, 4],
                        [180, 20, 5, 4],
                        [220, -20, 4, 4],
                        [260, 20, 5, 4],
                        [300, -20, 4, 4],
                        [340, 20, 5, 4],
                        [380, -20, 4, 4],
                        [420, 20, 5, 4]
                    ],
                    [
                        [60, 0, 1, 1],
                        [60, 60, 7, 3],
                        [0, 60, 1, 3],
                        [0, -60, 4, 3],
                        [120, -60, 2, 3],
                        [120, 120, 5, 3],
                        [-60, 120, 3, 3],
                        [-60, -120, 6, 3],
                        [180, -120, 2, 3],
                        [180, 180, 4, 3],
                        [-120, 180, 5, 3],
                        [-120, -180, 6, 3],
                        [240, -180, 3, 3],
                        [240, 180, 7, 3]
                    ],
                    [
                        [-400, -400, 0, 3],
                        [-390, -390, 5, 0],
                        [-380, -380, 5, 0],
                        [-370, -370, 5, 0],
                        [-360, -360, 5, 0],
                        [-350, -350, 5, 3],
                        [-340, -340, 5, 0],
                        [-330, -330, 5, 0],
                        [-320, -320, 5, 0],
                        [-310, -310, 5, 0],
                        [-300, -300, 5, 3],
                        [-290, -290, 5, 0],
                        [-280, -280, 5, 0],
                        [-270, -270, 5, 0],
                        [-260, -260, 5, 0],
                        [-250, -250, 5, 3],
                        [-240, -240, 5, 0],
                        [-230, -230, 5, 0],
                        [-220, -220, 5, 0],
                        [-210, -210, 5, 0],
                        [-200, -200, 5, 3],
                        [-190, -190, 5, 0],
                        [-180, -180, 5, 0],
                        [-170, -170, 5, 0],
                        [-160, -160, 5, 0],
                        [-150, -150, 5, 3],
                        [-140, -140, 5, 0],
                        [-130, -130, 5, 0],
                        [-120, -120, 5, 0],
                        [-110, -110, 5, 0],
                        [-100, -100, 5, 3],
                        [-90, -90, 5, 0],
                        [-80, -80, 5, 0],
                        [-70, -70, 5, 0],
                        [-60, -60, 5, 0],
                        [-50, -50, 5, 3],
                        [-40, -40, 5, 0],
                        [-30, -30, 5, 0],
                        [-20, -20, 5, 0],
                        [-10, -10, 5, 0],
                        [0, 0, 5, 3],
                        [10, 10, 5, 0],
                        [20, 20, 5, 0],
                        [30, 30, 5, 0],
                        [40, 40, 5, 0],
                        [50, 50, 5, 3],
                        [60, 60, 5, 0],
                        [70, 70, 5, 0],
                        [80, 80, 5, 0],
                        [90, 90, 5, 0],
                        [100, 100, 5, 3],
                        [110, 110, 5, 0],
                        [120, 120, 5, 0],
                        [130, 130, 5, 0],
                        [140, 140, 5, 0],
                        [150, 150, 5, 3],
                        [160, 160, 5, 0],
                        [170, 170, 5, 0],
                        [180, 180, 5, 0],
                        [190, 190, 5, 0],
                        [200, 200, 5, 3],
                        [210, 210, 5, 0],
                        [220, 220, 5, 0],
                        [230, 230, 5, 0],
                        [240, 240, 5, 0],
                        [250, 250, 5, 3],
                        [260, 260, 5, 0],
                        [270, 270, 5, 0],
                        [280, 280, 5, 0],
                        [290, 290, 5, 0],
                        [300, 300, 5, 3],
                        [310, 310, 5, 0],
                        [320, 320, 5, 0],
                        [330, 330, 5, 0],
                        [340, 340, 5, 0],
                        [350, 350, 5, 3],
                        [360, 360, 5, 0],
                        [370, 370, 5, 0],
                        [380, 380, 5, 0],
                        [390, 390, 5, 0],
                        [400, 400, 5, 3]
                    ],
                    [
                        [-400, -400, 0, 3],
                        [-390, -390, 5, 0],
                        [-380, -380, 5, 0],
                        [-370, -370, 5, 0],
                        [-360, -360, 5, 0],
                        [-350, -350, 5, 3],
                        [-340, -340, 5, 0],
                        [-330, -330, 5, 0],
                        [-320, -320, 5, 0],
                        [-310, -310, 5, 0],
                        [-300, -300, 5, 3],
                        [-290, -290, 5, 0],
                        [-280, -280, 5, 0],
                        [-270, -270, 5, 0],
                        [-260, -260, 5, 0],
                        [-250, -250, 5, 3],
                        [-240, -240, 5, 0],
                        [-230, -230, 5, 0],
                        [-220, -220, 5, 0],
                        [-210, -210, 5, 0],
                        [-200, -200, 5, 3],
                        [-190, -190, 5, 0],
                        [-180, -180, 5, 0],
                        [-170, -170, 5, 0],
                        [-160, -160, 5, 0],
                        [-150, -150, 5, 3],
                        [-140, -140, 5, 0],
                        [-130, -130, 5, 0],
                        [-120, -120, 5, 0],
                        [-110, -110, 5, 0],
                        [-100, -100, 5, 3],
                        [-90, -90, 5, 0],
                        [-80, -80, 5, 0],
                        [-70, -70, 5, 0],
                        [-60, -60, 5, 0],
                        [-50, -50, 5, 3],
                        [-40, -40, 5, 0],
                        [-30, -30, 5, 0],
                        [-20, -20, 5, 0],
                        [-10, -10, 5, 0],
                        [0, 0, 5, 3],
                        [10, 10, 5, 0],
                        [20, 20, 5, 0],
                        [30, 30, 5, 0],
                        [40, 40, 5, 0],
                        [50, 50, 5, 3],
                        [60, 60, 5, 0],
                        [70, 70, 5, 0],
                        [80, 80, 5, 0],
                        [90, 90, 5, 0],
                        [100, 100, 5, 3],
                        [110, 110, 5, 0],
                        [120, 120, 5, 0],
                        [130, 130, 5, 0],
                        [140, 140, 5, 0],
                        [150, 150, 5, 3],
                        [160, 160, 5, 0],
                        [170, 170, 5, 0],
                        [180, 180, 5, 0],
                        [190, 190, 5, 0],
                        [200, 200, 5, 3],
                        [210, 210, 5, 0],
                        [220, 220, 5, 0],
                        [230, 230, 5, 0],
                        [240, 240, 5, 0],
                        [250, 250, 5, 3],
                        [260, 260, 5, 0],
                        [270, 270, 5, 0],
                        [280, 280, 5, 0],
                        [290, 290, 5, 0],
                        [300, 300, 5, 3],
                        [310, 310, 5, 0],
                        [320, 320, 5, 0],
                        [330, 330, 5, 0],
                        [340, 340, 5, 0],
                        [350, 350, 5, 3],
                        [360, 360, 5, 0],
                        [370, 370, 5, 0],
                        [380, 380, 5, 0],
                        [390, 390, 5, 0],
                        [400, 400, 5, 3]
                    ],
                    [
                        [-400, -400, 0, 3],
                        [-390, -390, 5, 0],
                        [-380, -380, 5, 0],
                        [-370, -370, 5, 0],
                        [-360, -360, 5, 0],
                        [-350, -350, 5, 3],
                        [-340, -340, 5, 0],
                        [-330, -330, 5, 0],
                        [-320, -320, 5, 0],
                        [-310, -310, 5, 0],
                        [-300, -300, 5, 3],
                        [-290, -290, 5, 0],
                        [-280, -280, 5, 0],
                        [-270, -270, 5, 0],
                        [-260, -260, 5, 0],
                        [-250, -250, 5, 3],
                        [-240, -240, 5, 0],
                        [-230, -230, 5, 0],
                        [-220, -220, 5, 0],
                        [-210, -210, 5, 0],
                        [-200, -200, 5, 3],
                        [-190, -190, 5, 0],
                        [-180, -180, 5, 0],
                        [-170, -170, 5, 0],
                        [-160, -160, 5, 0],
                        [-150, -150, 5, 3],
                        [-140, -140, 5, 0],
                        [-130, -130, 5, 0],
                        [-120, -120, 5, 0],
                        [-110, -110, 5, 0],
                        [-100, -100, 5, 3],
                        [-90, -90, 5, 0],
                        [-80, -80, 5, 0],
                        [-70, -70, 5, 0],
                        [-60, -60, 5, 0],
                        [-50, -50, 5, 3],
                        [-40, -40, 5, 0],
                        [-30, -30, 5, 0],
                        [-20, -20, 5, 0],
                        [-10, -10, 5, 0],
                        [0, 0, 5, 3],
                        [10, 10, 5, 0],
                        [20, 20, 5, 0],
                        [30, 30, 5, 0],
                        [40, 40, 5, 0],
                        [50, 50, 5, 3],
                        [60, 60, 5, 0],
                        [70, 70, 5, 0],
                        [80, 80, 5, 0],
                        [90, 90, 5, 0],
                        [100, 100, 5, 3],
                        [110, 110, 5, 0],
                        [120, 120, 5, 0],
                        [130, 130, 5, 0],
                        [140, 140, 5, 0],
                        [150, 150, 5, 3],
                        [160, 160, 5, 0],
                        [170, 170, 5, 0],
                        [180, 180, 5, 0],
                        [190, 190, 5, 0],
                        [200, 200, 5, 3],
                        [210, 210, 5, 0],
                        [220, 220, 5, 0],
                        [230, 230, 5, 0],
                        [240, 240, 5, 0],
                        [250, 250, 5, 3],
                        [260, 260, 5, 0],
                        [270, 270, 5, 0],
                        [280, 280, 5, 0],
                        [290, 290, 5, 0],
                        [300, 300, 5, 3],
                        [310, 310, 5, 0],
                        [320, 320, 5, 0],
                        [330, 330, 5, 0],
                        [340, 340, 5, 0],
                        [350, 350, 5, 3],
                        [360, 360, 5, 0],
                        [370, 370, 5, 0],
                        [380, 380, 5, 0],
                        [390, 390, 5, 0],
                        [400, 400, 5, 3]
                    ],
                    [
                        [-400, -400, 0, 3],
                        [-390, -390, 5, 0],
                        [-380, -380, 5, 0],
                        [-370, -370, 5, 0],
                        [-360, -360, 5, 0],
                        [-350, -350, 5, 3],
                        [-340, -340, 5, 0],
                        [-330, -330, 5, 0],
                        [-320, -320, 5, 0],
                        [-310, -310, 5, 0],
                        [-300, -300, 5, 3],
                        [-290, -290, 5, 0],
                        [-280, -280, 5, 0],
                        [-270, -270, 5, 0],
                        [-260, -260, 5, 0],
                        [-250, -250, 5, 3],
                        [-240, -240, 5, 0],
                        [-230, -230, 5, 0],
                        [-220, -220, 5, 0],
                        [-210, -210, 5, 0],
                        [-200, -200, 5, 3],
                        [-190, -190, 5, 0],
                        [-180, -180, 5, 0],
                        [-170, -170, 5, 0],
                        [-160, -160, 5, 0],
                        [-150, -150, 5, 3],
                        [-140, -140, 5, 0],
                        [-130, -130, 5, 0],
                        [-120, -120, 5, 0],
                        [-110, -110, 5, 0],
                        [-100, -100, 5, 3],
                        [-90, -90, 5, 0],
                        [-80, -80, 5, 0],
                        [-70, -70, 5, 0],
                        [-60, -60, 5, 0],
                        [-50, -50, 5, 3],
                        [-40, -40, 5, 0],
                        [-30, -30, 5, 0],
                        [-20, -20, 5, 0],
                        [-10, -10, 5, 0],
                        [0, 0, 5, 3],
                        [10, 10, 5, 0],
                        [20, 20, 5, 0],
                        [30, 30, 5, 0],
                        [40, 40, 5, 0],
                        [50, 50, 5, 3],
                        [60, 60, 5, 0],
                        [70, 70, 5, 0],
                        [80, 80, 5, 0],
                        [90, 90, 5, 0],
                        [100, 100, 5, 3],
                        [110, 110, 5, 0],
                        [120, 120, 5, 0],
                        [130, 130, 5, 0],
                        [140, 140, 5, 0],
                        [150, 150, 5, 3],
                        [160, 160, 5, 0],
                        [170, 170, 5, 0],
                        [180, 180, 5, 0],
                        [190, 190, 5, 0],
                        [200, 200, 5, 3],
                        [210, 210, 5, 0],
                        [220, 220, 5, 0],
                        [230, 230, 5, 0],
                        [240, 240, 5, 0],
                        [250, 250, 5, 3],
                        [260, 260, 5, 0],
                        [270, 270, 5, 0],
                        [280, 280, 5, 0],
                        [290, 290, 5, 0],
                        [300, 300, 5, 3],
                        [310, 310, 5, 0],
                        [320, 320, 5, 0],
                        [330, 330, 5, 0],
                        [340, 340, 5, 0],
                        [350, 350, 5, 3],
                        [360, 360, 5, 0],
                        [370, 370, 5, 0],
                        [380, 380, 5, 0],
                        [390, 390, 5, 0],
                        [400, 400, 5, 3]
                    ],
                    [
                        [-400, -400, 0, 3],
                        [-390, -390, 5, 0],
                        [-380, -380, 5, 0],
                        [-370, -370, 5, 0],
                        [-360, -360, 5, 0],
                        [-350, -350, 5, 3],
                        [-340, -340, 5, 0],
                        [-330, -330, 5, 0],
                        [-320, -320, 5, 0],
                        [-310, -310, 5, 0],
                        [-300, -300, 5, 3],
                        [-290, -290, 5, 0],
                        [-280, -280, 5, 0],
                        [-270, -270, 5, 0],
                        [-260, -260, 5, 0],
                        [-250, -250, 5, 3],
                        [-240, -240, 5, 0],
                        [-230, -230, 5, 0],
                        [-220, -220, 5, 0],
                        [-210, -210, 5, 0],
                        [-200, -200, 5, 3],
                        [-190, -190, 5, 0],
                        [-180, -180, 5, 0],
                        [-170, -170, 5, 0],
                        [-160, -160, 5, 0],
                        [-150, -150, 5, 3],
                        [-140, -140, 5, 0],
                        [-130, -130, 5, 0],
                        [-120, -120, 5, 0],
                        [-110, -110, 5, 0],
                        [-100, -100, 5, 3],
                        [-90, -90, 5, 0],
                        [-80, -80, 5, 0],
                        [-70, -70, 5, 0],
                        [-60, -60, 5, 0],
                        [-50, -50, 5, 3],
                        [-40, -40, 5, 0],
                        [-30, -30, 5, 0],
                        [-20, -20, 5, 0],
                        [-10, -10, 5, 0],
                        [0, 0, 5, 3],
                        [10, 10, 5, 0],
                        [20, 20, 5, 0],
                        [30, 30, 5, 0],
                        [40, 40, 5, 0],
                        [50, 50, 5, 3],
                        [60, 60, 5, 0],
                        [70, 70, 5, 0],
                        [80, 80, 5, 0],
                        [90, 90, 5, 0],
                        [100, 100, 5, 3],
                        [110, 110, 5, 0],
                        [120, 120, 5, 0],
                        [130, 130, 5, 0],
                        [140, 140, 5, 0],
                        [150, 150, 5, 3],
                        [160, 160, 5, 0],
                        [170, 170, 5, 0],
                        [180, 180, 5, 0],
                        [190, 190, 5, 0],
                        [200, 200, 5, 3],
                        [210, 210, 5, 0],
                        [220, 220, 5, 0],
                        [230, 230, 5, 0],
                        [240, 240, 5, 0],
                        [250, 250, 5, 3],
                        [260, 260, 5, 0],
                        [270, 270, 5, 0],
                        [280, 280, 5, 0],
                        [290, 290, 5, 0],
                        [300, 300, 5, 3],
                        [310, 310, 5, 0],
                        [320, 320, 5, 0],
                        [330, 330, 5, 0],
                        [340, 340, 5, 0],
                        [350, 350, 5, 3],
                        [360, 360, 5, 0],
                        [370, 370, 5, 0],
                        [380, 380, 5, 0],
                        [390, 390, 5, 0],
                        [400, 400, 5, 3]
                    ]
                ]
            }, {
                label: "\u5706\u5f27",
                arr: [
                    [
                        [0, 400, 0, 1],
                        [28, 399, 1, 0],
                        [56, 396, 1, 0],
                        [83, 391, 1, 0],
                        [110, 384, 1, 0],
                        [137, 376, 1, 0],
                        [163, 366, 1, 0],
                        [188, 353, 1, 0],
                        [212, 339, 1, 0],
                        [235, 324, 1, 0],
                        [257, 306, 1, 0],
                        [278, 288, 3, 0],
                        [297, 268, 3, 0],
                        [315, 246, 3, 0],
                        [332, 224, 3, 0],
                        [346, 200, 3, 0],
                        [360, 175, 3, 0],
                        [371, 150, 3, 0],
                        [380, 124, 3, 0],
                        [388, 97, 3, 0],
                        [394, 70, 3, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 0],
                        [400, -14, 6, 0],
                        [398, -42, 6, 0],
                        [394, -70, 6, 0],
                        [388, -97, 6, 0],
                        [380, -124, 6, 0],
                        [371, -150, 6, 0],
                        [360, -175, 6, 0],
                        [346, -200, 6, 0],
                        [332, -224, 5, 0],
                        [315, -246, 5, 0],
                        [297, -268, 5, 0],
                        [278, -288, 5, 0],
                        [257, -306, 5, 0],
                        [235, -324, 5, 0],
                        [212, -339, 5, 0],
                        [188, -353, 5, 0],
                        [163, -366, 5, 0],
                        [137, -376, 5, 0],
                        [110, -384, 4, 0],
                        [83, -391, 4, 0],
                        [56, -396, 4, 0],
                        [28, -399, 4, 0],
                        [0, -400, 4, 0],
                        [-28, -399, 4, 0],
                        [-56, -396, 4, 0],
                        [-83, -391, 4, 0],
                        [-124, -380, 4, 0],
                        [-163, -366, 4, 0],
                        [-200, -346, 2, 0],
                        [-235, -324, 2, 0],
                        [-257, -306, 2, 0],
                        [-278, -288, 2, 0],
                        [-297, -268, 2, 0],
                        [-315, -246, 2, 0],
                        [-332, -224, 2, 0],
                        [-346, -200, 2, 0],
                        [-360, -175, 2, 0],
                        [-371, -150, 2, 0],
                        [-380, -124, 7, 0],
                        [-388, -97, 7, 0],
                        [-394, -70, 7, 0],
                        [-398, -42, 7, 0],
                        [-400, 0, 7, 0],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 4, 0],
                        [-353, 188, 4, 0],
                        [-339, 212, 4, 0],
                        [-324, 235, 4, 0],
                        [-306, 257, 4, 0],
                        [-288, 278, 4, 0],
                        [-268, 297, 4, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 2, 0],
                        [-150, 371, 2, 0],
                        [-124, 380, 2, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [28, 399, 1, 0],
                        [56, 396, 1, 1],
                        [83, 391, 1, 0],
                        [110, 384, 1, 1],
                        [137, 376, 1, 0],
                        [163, 366, 1, 1],
                        [188, 353, 1, 0],
                        [212, 339, 1, 1],
                        [235, 324, 1, 0],
                        [257, 306, 1, 1],
                        [278, 288, 3, 0],
                        [297, 268, 3, 1],
                        [315, 246, 3, 0],
                        [332, 224, 3, 1],
                        [346, 200, 3, 0],
                        [360, 175, 3, 1],
                        [371, 150, 3, 0],
                        [380, 124, 3, 1],
                        [388, 97, 3, 0],
                        [394, 70, 3, 1],
                        [398, 42, 6, 0],
                        [400, 0, 6, 1],
                        [400, -14, 6, 0],
                        [398, -42, 6, 1],
                        [394, -70, 6, 0],
                        [388, -97, 6, 1],
                        [380, -124, 6, 0],
                        [371, -150, 6, 1],
                        [360, -175, 6, 0],
                        [346, -200, 6, 1],
                        [332, -224, 5, 0],
                        [315, -246, 5, 1],
                        [297, -268, 5, 0],
                        [278, -288, 5, 1],
                        [257, -306, 5, 0],
                        [235, -324, 5, 1],
                        [212, -339, 5, 0],
                        [188, -353, 5, 1],
                        [163, -366, 5, 0],
                        [137, -376, 5, 1],
                        [110, -384, 4, 0],
                        [83, -391, 4, 1],
                        [56, -396, 4, 0],
                        [28, -399, 4, 1],
                        [0, -400, 4, 0],
                        [-28, -399, 4, 1],
                        [-56, -396, 4, 0],
                        [-83, -391, 4, 1],
                        [-124, -380, 4, 0],
                        [-163, -366, 4, 1],
                        [-200, -346, 2, 0],
                        [-235, -324, 2, 1],
                        [-257, -306, 2, 0],
                        [-278, -288, 2, 1],
                        [-297, -268, 2, 0],
                        [-315, -246, 2, 1],
                        [-332, -224, 2, 0],
                        [-346, -200, 2, 1],
                        [-360, -175, 2, 0],
                        [-371, -150, 2, 1],
                        [-380, -124, 7, 0],
                        [-388, -97, 7, 1],
                        [-394, -70, 7, 0],
                        [-398, -42, 7, 1],
                        [-400, 0, 7, 0],
                        [-400, 14, 7, 1],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 1],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 1],
                        [-366, 163, 4, 0],
                        [-353, 188, 4, 1],
                        [-339, 212, 4, 0],
                        [-324, 235, 4, 1],
                        [-306, 257, 4, 0],
                        [-288, 278, 4, 1],
                        [-268, 297, 4, 0],
                        [-246, 315, 4, 1],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 1],
                        [-175, 360, 2, 0],
                        [-150, 371, 2, 1],
                        [-124, 380, 2, 0],
                        [-97, 388, 2, 1],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 1],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 1]
                    ],
                    [
                        [290, 170, 0, 1],
                        [259, 174, 5, 0],
                        [230, 186, 5, 0],
                        [205, 205, 5, 0],
                        [186, 230, 5, 0],
                        [174, 259, 5, 0],
                        [170, 290, 5, 0],
                        [174, 321, 5, 0],
                        [186, 350, 5, 0],
                        [205, 375, 5, 0],
                        [230, 394, 5, 0],
                        [259, 406, 5, 0],
                        [290, 410, 5, 0],
                        [290, 410, 5, 0],
                        [321, 406, 5, 0],
                        [350, 394, 5, 0],
                        [375, 375, 5, 0],
                        [394, 350, 5, 0],
                        [406, 321, 5, 0],
                        [410, 290, 5, 0],
                        [406, 259, 5, 0],
                        [394, 230, 5, 0],
                        [375, 205, 5, 0],
                        [350, 186, 5, 0],
                        [321, 174, 5, 0],
                        [290, 170, 5, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [0, 7, 4, 0],
                        [1, 21, 4, 0],
                        [3, 35, 4, 0],
                        [8, 55, 4, 0],
                        [12, 68, 4, 0],
                        [17, 81, 4, 0],
                        [23, 94, 4, 0],
                        [30, 106, 4, 0],
                        [38, 118, 4, 0],
                        [47, 129, 4, 0],
                        [56, 139, 4, 0],
                        [66, 149, 4, 0],
                        [77, 158, 4, 0],
                        [88, 166, 2, 0],
                        [100, 173, 2, 0],
                        [112, 180, 2, 0],
                        [125, 185, 2, 0],
                        [138, 190, 2, 0],
                        [152, 194, 2, 0],
                        [165, 197, 2, 0],
                        [179, 199, 2, 0],
                        [193, 200, 2, 0],
                        [200, 200, 2, 0],
                        [214, 200, 1, 0],
                        [228, 198, 1, 0],
                        [242, 196, 1, 0],
                        [255, 192, 1, 0],
                        [268, 188, 1, 0],
                        [281, 183, 1, 0],
                        [294, 177, 1, 0],
                        [306, 170, 1, 0],
                        [318, 162, 1, 0],
                        [329, 153, 1, 0],
                        [339, 144, 3, 0],
                        [349, 134, 3, 0],
                        [358, 123, 3, 0],
                        [366, 112, 3, 0],
                        [373, 100, 3, 0],
                        [380, 88, 3, 0],
                        [385, 75, 3, 0],
                        [390, 62, 3, 0],
                        [394, 48, 3, 0],
                        [397, 35, 3, 0],
                        [399, 21, 6, 0],
                        [400, 0, 6, 0],
                        [400, -7, 6, 0],
                        [399, -21, 6, 0],
                        [397, -35, 6, 0],
                        [394, -48, 6, 0],
                        [390, -62, 6, 0],
                        [385, -75, 6, 0],
                        [380, -88, 6, 0],
                        [373, -100, 6, 0],
                        [366, -112, 5, 0],
                        [358, -123, 5, 0],
                        [349, -134, 5, 0],
                        [339, -144, 5, 0],
                        [329, -153, 5, 0],
                        [318, -162, 5, 0],
                        [306, -170, 5, 0],
                        [294, -177, 5, 0],
                        [281, -183, 5, 0],
                        [268, -188, 5, 0],
                        [255, -192, 4, 0],
                        [242, -196, 4, 0],
                        [228, -198, 4, 0],
                        [214, -200, 4, 0],
                        [200, -200, 4, 0],
                        [186, -200, 4, 0],
                        [172, -198, 4, 0],
                        [158, -196, 4, 0],
                        [138, -190, 4, 0],
                        [119, -183, 4, 0],
                        [100, -173, 2, 0],
                        [82, -162, 2, 0],
                        [71, -153, 2, 0],
                        [61, -144, 2, 0],
                        [51, -134, 2, 0],
                        [42, -123, 2, 0],
                        [34, -112, 2, 0],
                        [27, -100, 2, 0],
                        [20, -88, 2, 0],
                        [15, -75, 2, 0],
                        [10, -62, 7, 0],
                        [6, -48, 7, 0],
                        [3, -35, 7, 0],
                        [1, -21, 7, 0],
                        [0, 0, 7, 1]
                    ],
                    [
                        [-250, 0, 0, 2],
                        [-253, -21, 7, 0],
                        [-261, -40, 7, 0],
                        [-273, -57, 7, 0],
                        [-290, -69, 7, 0],
                        [-309, -77, 7, 0],
                        [-330, -80, 7, 0],
                        [-351, -77, 7, 0],
                        [-370, -69, 7, 0],
                        [-387, -57, 7, 0],
                        [-399, -40, 7, 0],
                        [-407, -21, 7, 0],
                        [-410, 0, 7, 0],
                        [-407, 21, 7, 0],
                        [-399, 40, 7, 0],
                        [-387, 57, 7, 0],
                        [-370, 69, 7, 0],
                        [-351, 77, 7, 0],
                        [-330, 80, 7, 0],
                        [-330, 80, 7, 0],
                        [-309, 77, 7, 0],
                        [-290, 69, 7, 0],
                        [-273, 57, 7, 0],
                        [-261, 40, 7, 0],
                        [-253, 21, 7, 0],
                        [-250, 0, 7, 2],
                        [250, 0, 0, 2],
                        [253, 21, 6, 0],
                        [261, 40, 6, 0],
                        [273, 57, 6, 0],
                        [290, 69, 6, 0],
                        [309, 77, 6, 0],
                        [330, 80, 6, 0],
                        [330, 80, 6, 0],
                        [351, 77, 6, 0],
                        [370, 69, 6, 0],
                        [387, 57, 6, 0],
                        [399, 40, 6, 0],
                        [407, 21, 6, 0],
                        [410, 0, 6, 0],
                        [407, -21, 6, 0],
                        [399, -40, 6, 0],
                        [387, -57, 6, 0],
                        [370, -69, 6, 0],
                        [351, -77, 6, 0],
                        [330, -80, 6, 0],
                        [309, -77, 6, 0],
                        [290, -69, 6, 0],
                        [273, -57, 6, 0],
                        [261, -40, 6, 0],
                        [253, -21, 6, 0],
                        [250, 0, 6, 2]
                    ],
                    [
                        [0, 250, 0, 1],
                        [-21, 253, 5, 0],
                        [-40, 261, 5, 0],
                        [-57, 273, 5, 0],
                        [-69, 290, 5, 0],
                        [-77, 309, 5, 0],
                        [-80, 330, 5, 0],
                        [-77, 351, 5, 0],
                        [-69, 370, 5, 0],
                        [-57, 387, 5, 0],
                        [-40, 399, 5, 0],
                        [-21, 407, 5, 0],
                        [0, 410, 5, 0],
                        [0, 410, 5, 0],
                        [21, 407, 5, 0],
                        [40, 399, 5, 0],
                        [57, 387, 5, 0],
                        [69, 370, 5, 0],
                        [77, 351, 5, 0],
                        [80, 330, 5, 0],
                        [77, 309, 5, 0],
                        [69, 290, 5, 0],
                        [57, 273, 5, 0],
                        [40, 261, 5, 0],
                        [21, 253, 5, 0],
                        [0, 250, 5, 1],
                        [0, -250, 4, 1],
                        [0, -250, 5, 0],
                        [21, -253, 5, 0],
                        [40, -261, 5, 0],
                        [57, -273, 5, 0],
                        [69, -290, 5, 0],
                        [77, -309, 5, 0],
                        [80, -330, 5, 0],
                        [77, -351, 5, 0],
                        [69, -370, 5, 0],
                        [57, -387, 5, 0],
                        [40, -399, 5, 0],
                        [21, -407, 5, 0],
                        [0, -410, 5, 0],
                        [-21, -407, 5, 0],
                        [-40, -399, 5, 0],
                        [-57, -387, 5, 0],
                        [-69, -370, 5, 0],
                        [-77, -351, 5, 0],
                        [-80, -330, 5, 0],
                        [-77, -309, 5, 0],
                        [-69, -290, 5, 0],
                        [-57, -273, 5, 0],
                        [-40, -261, 5, 0],
                        [-21, -253, 5, 0],
                        [0, -250, 5, 1]
                    ],
                    [
                        [-300, 72, 0, 1],
                        [-281, 70, 7, 0],
                        [-264, 62, 7, 0],
                        [-249, 51, 7, 0],
                        [-238, 36, 7, 0],
                        [-230, 19, 7, 0],
                        [-228, 0, 7, 0],
                        [-230, -19, 7, 0],
                        [-238, -36, 7, 0],
                        [-249, -51, 7, 0],
                        [-264, -62, 7, 0],
                        [-281, -70, 7, 0],
                        [-300, -72, 7, 0],
                        [-319, -70, 7, 0],
                        [-336, -62, 7, 0],
                        [-351, -51, 7, 0],
                        [-362, -36, 7, 0],
                        [-370, -19, 7, 0],
                        [-372, 0, 7, 0],
                        [-370, 19, 7, 0],
                        [-362, 36, 7, 0],
                        [-351, 51, 7, 0],
                        [-336, 62, 7, 0],
                        [-319, 70, 7, 0],
                        [-300, 72, 7, 1],
                        [0, 72, 0, 1],
                        [19, 70, 6, 0],
                        [36, 62, 6, 0],
                        [51, 51, 6, 0],
                        [62, 36, 6, 0],
                        [70, 19, 6, 0],
                        [72, 0, 6, 0],
                        [70, -19, 6, 0],
                        [62, -36, 6, 0],
                        [51, -51, 6, 0],
                        [36, -62, 6, 0],
                        [19, -70, 6, 0],
                        [0, -72, 6, 0],
                        [-19, -70, 6, 0],
                        [-36, -62, 6, 0],
                        [-51, -51, 6, 0],
                        [-62, -36, 6, 0],
                        [-70, -19, 6, 0],
                        [-72, 0, 6, 0],
                        [-70, 19, 6, 0],
                        [-62, 36, 6, 0],
                        [-51, 51, 6, 0],
                        [-36, 62, 6, 0],
                        [-19, 70, 6, 0],
                        [0, 72, 6, 1],
                        [300, 72, 0, 1],
                        [319, 70, 5, 0],
                        [336, 62, 5, 0],
                        [351, 51, 5, 0],
                        [362, 36, 5, 0],
                        [370, 19, 5, 0],
                        [372, 0, 5, 0],
                        [370, -19, 5, 0],
                        [362, -36, 5, 0],
                        [351, -51, 5, 0],
                        [336, -62, 5, 0],
                        [319, -70, 5, 0],
                        [300, -72, 5, 0],
                        [281, -70, 5, 0],
                        [264, -62, 5, 0],
                        [249, -51, 5, 0],
                        [238, -36, 5, 0],
                        [230, -19, 5, 0],
                        [228, 0, 5, 0],
                        [230, 19, 5, 0],
                        [238, 36, 5, 0],
                        [249, 51, 5, 0],
                        [264, 62, 5, 0],
                        [281, 70, 5, 0],
                        [300, 72, 5, 1]
                    ],
                    [
                        [-330, 72, 0, 1],
                        [-311, 70, 7, 0],
                        [-294, 62, 7, 0],
                        [-279, 51, 7, 0],
                        [-268, 36, 7, 0],
                        [-260, 19, 7, 0],
                        [-258, 0, 7, 0],
                        [-260, -19, 7, 0],
                        [-268, -36, 7, 0],
                        [-279, -51, 7, 0],
                        [-294, -62, 7, 0],
                        [-311, -70, 7, 0],
                        [-330, -72, 7, 0],
                        [-349, -70, 7, 0],
                        [-366, -62, 7, 0],
                        [-381, -51, 7, 0],
                        [-392, -36, 7, 0],
                        [-400, -19, 7, 0],
                        [-402, 0, 7, 0],
                        [-400, 19, 7, 0],
                        [-392, 36, 7, 0],
                        [-381, 51, 7, 0],
                        [-366, 62, 7, 0],
                        [-349, 70, 7, 0],
                        [-330, 72, 7, 1],
                        [-110, 72, 0, 1],
                        [-91, 70, 6, 0],
                        [-74, 62, 6, 0],
                        [-59, 51, 6, 0],
                        [-48, 36, 6, 0],
                        [-40, 19, 6, 0],
                        [-38, 0, 6, 0],
                        [-40, -19, 6, 0],
                        [-48, -36, 6, 0],
                        [-59, -51, 6, 0],
                        [-74, -62, 6, 0],
                        [-91, -70, 6, 0],
                        [-110, -72, 6, 0],
                        [-129, -70, 6, 0],
                        [-146, -62, 6, 0],
                        [-161, -51, 6, 0],
                        [-172, -36, 6, 0],
                        [-180, -19, 6, 0],
                        [-182, 0, 6, 0],
                        [-180, 19, 6, 0],
                        [-172, 36, 6, 0],
                        [-161, 51, 6, 0],
                        [-146, 62, 6, 0],
                        [-129, 70, 6, 0],
                        [-110, 72, 6, 1],
                        [110, 72, 0, 1],
                        [129, 70, 5, 0],
                        [146, 62, 5, 0],
                        [161, 51, 5, 0],
                        [172, 36, 5, 0],
                        [180, 19, 5, 0],
                        [182, 0, 5, 0],
                        [180, -19, 5, 0],
                        [172, -36, 5, 0],
                        [161, -51, 5, 0],
                        [146, -62, 5, 0],
                        [129, -70, 5, 0],
                        [110, -72, 5, 0],
                        [91, -70, 5, 0],
                        [74, -62, 5, 0],
                        [59, -51, 5, 0],
                        [48, -36, 5, 0],
                        [40, -19, 5, 0],
                        [38, 0, 5, 0],
                        [40, 19, 5, 0],
                        [48, 36, 5, 0],
                        [59, 51, 5, 0],
                        [74, 62, 5, 0],
                        [91, 70, 5, 0],
                        [110, 72, 5, 1],
                        [330, 72, 0, 1],
                        [349, 70, 4, 0],
                        [366, 62, 4, 0],
                        [381, 51, 4, 0],
                        [392, 36, 4, 0],
                        [400, 19, 4, 0],
                        [402, 0, 4, 0],
                        [400, -19, 4, 0],
                        [392, -36, 4, 0],
                        [381, -51, 4, 0],
                        [366, -62, 4, 0],
                        [349, -70, 4, 0],
                        [330, -72, 4, 0],
                        [311, -70, 4, 0],
                        [294, -62, 4, 0],
                        [279, -51, 4, 0],
                        [268, -36, 4, 0],
                        [260, -19, 4, 0],
                        [258, 0, 4, 0],
                        [260, 19, 4, 0],
                        [268, 36, 4, 0],
                        [279, 51, 4, 0],
                        [294, 62, 4, 0],
                        [311, 70, 4, 0],
                        [330, 72, 4, 1]
                    ],
                    [
                        [-350, 50, 0, 1],
                        [-337, 48, 7, 0],
                        [-325, 43, 7, 0],
                        [-315, 35, 7, 0],
                        [-307, 25, 7, 0],
                        [-302, 13, 7, 0],
                        [-300, 0, 7, 0],
                        [-302, -13, 7, 0],
                        [-307, -25, 7, 0],
                        [-315, -35, 7, 0],
                        [-325, -43, 7, 0],
                        [-337, -48, 7, 0],
                        [-350, -50, 7, 0],
                        [-363, -48, 7, 0],
                        [-375, -43, 7, 0],
                        [-385, -35, 7, 0],
                        [-393, -25, 7, 0],
                        [-398, -13, 7, 0],
                        [-400, 0, 7, 0],
                        [-398, 13, 7, 0],
                        [-393, 25, 7, 0],
                        [-385, 35, 7, 0],
                        [-375, 43, 7, 0],
                        [-363, 48, 7, 0],
                        [-350, 50, 7, 1],
                        [-210, 50, 0, 1],
                        [-197, 48, 2, 0],
                        [-185, 43, 2, 0],
                        [-175, 35, 2, 0],
                        [-167, 25, 2, 0],
                        [-162, 13, 2, 0],
                        [-160, 0, 2, 0],
                        [-162, -13, 2, 0],
                        [-167, -25, 2, 0],
                        [-175, -35, 2, 0],
                        [-185, -43, 2, 0],
                        [-197, -48, 2, 0],
                        [-210, -50, 2, 0],
                        [-223, -48, 2, 0],
                        [-235, -43, 2, 0],
                        [-245, -35, 2, 0],
                        [-253, -25, 2, 0],
                        [-258, -13, 2, 0],
                        [-260, 0, 2, 0],
                        [-258, 13, 2, 0],
                        [-253, 25, 2, 0],
                        [-245, 35, 2, 0],
                        [-235, 43, 2, 0],
                        [-223, 48, 2, 0],
                        [-210, 50, 2, 1],
                        [-70, 50, 0, 1],
                        [-57, 48, 6, 0],
                        [-45, 43, 6, 0],
                        [-35, 35, 6, 0],
                        [-27, 25, 6, 0],
                        [-22, 13, 6, 0],
                        [-20, 0, 6, 0],
                        [-22, -13, 6, 0],
                        [-27, -25, 6, 0],
                        [-35, -35, 6, 0],
                        [-45, -43, 6, 0],
                        [-57, -48, 6, 0],
                        [-70, -50, 6, 0],
                        [-83, -48, 6, 0],
                        [-95, -43, 6, 0],
                        [-105, -35, 6, 0],
                        [-113, -25, 6, 0],
                        [-118, -13, 6, 0],
                        [-120, 0, 6, 0],
                        [-118, 13, 6, 0],
                        [-113, 25, 6, 0],
                        [-105, 35, 6, 0],
                        [-95, 43, 6, 0],
                        [-83, 48, 6, 0],
                        [-70, 50, 6, 1],
                        [70, 50, 0, 1],
                        [83, 48, 1, 0],
                        [95, 43, 1, 0],
                        [105, 35, 1, 0],
                        [113, 25, 1, 0],
                        [118, 13, 1, 0],
                        [120, 0, 1, 0],
                        [118, -13, 1, 0],
                        [113, -25, 1, 0],
                        [105, -35, 1, 0],
                        [95, -43, 1, 0],
                        [83, -48, 1, 0],
                        [70, -50, 1, 0],
                        [57, -48, 1, 0],
                        [45, -43, 1, 0],
                        [35, -35, 1, 0],
                        [27, -25, 1, 0],
                        [22, -13, 1, 0],
                        [20, 0, 1, 0],
                        [22, 13, 1, 0],
                        [27, 25, 1, 0],
                        [35, 35, 1, 0],
                        [45, 43, 1, 0],
                        [57, 48, 1, 0],
                        [70, 50, 1, 1],
                        [210, 50, 0, 1],
                        [223, 48, 4, 0],
                        [235, 43, 4, 0],
                        [245, 35, 4, 0],
                        [253, 25, 4, 0],
                        [258, 13, 4, 0],
                        [260, 0, 4, 0],
                        [258, -13, 4, 0],
                        [253, -25, 4, 0],
                        [245, -35, 4, 0],
                        [235, -43, 4, 0],
                        [223, -48, 4, 0],
                        [210, -50, 4, 0],
                        [197, -48, 4, 0],
                        [185, -43, 4, 0],
                        [175, -35, 4, 0],
                        [167, -25, 4, 0],
                        [162, -13, 4, 0],
                        [160, 0, 4, 0],
                        [162, 13, 4, 0],
                        [167, 25, 4, 0],
                        [175, 35, 4, 0],
                        [185, 43, 4, 0],
                        [197, 48, 4, 0],
                        [210, 50, 4, 1],
                        [350, 50, 0, 1],
                        [363, 48, 5, 0],
                        [375, 43, 5, 0],
                        [385, 35, 5, 0],
                        [393, 25, 5, 0],
                        [398, 13, 5, 0],
                        [400, 0, 5, 0],
                        [398, -13, 5, 0],
                        [393, -25, 5, 0],
                        [385, -35, 5, 0],
                        [375, -43, 5, 0],
                        [363, -48, 5, 0],
                        [350, -50, 5, 0],
                        [337, -48, 5, 0],
                        [325, -43, 5, 0],
                        [315, -35, 5, 0],
                        [307, -25, 5, 0],
                        [302, -13, 5, 0],
                        [300, 0, 5, 0],
                        [302, 13, 5, 0],
                        [307, 25, 5, 0],
                        [315, 35, 5, 0],
                        [325, 43, 5, 0],
                        [337, 48, 5, 0],
                        [350, 50, 5, 1]
                    ],
                    [
                        [0, 427, 0, 1],
                        [40, 416, 7, 0],
                        [69, 387, 7, 0],
                        [80, 347, 7, 0],
                        [69, 307, 7, 0],
                        [40, 278, 7, 0],
                        [0, 267, 7, 0],
                        [-40, 278, 7, 0],
                        [-69, 307, 7, 0],
                        [-80, 347, 7, 0],
                        [-69, 387, 7, 0],
                        [-40, 416, 7, 0],
                        [0, 427, 7, 1],
                        [-320, -105, 0, 1],
                        [-280, -116, 6, 0],
                        [-251, -145, 6, 0],
                        [-240, -185, 6, 0],
                        [-251, -225, 6, 0],
                        [-280, -254, 6, 0],
                        [-320, -265, 6, 0],
                        [-360, -254, 6, 0],
                        [-389, -225, 6, 0],
                        [-400, -185, 6, 0],
                        [-389, -145, 6, 0],
                        [-360, -116, 6, 0],
                        [-320, -105, 6, 1],
                        [320, -105, 0, 1],
                        [360, -116, 4, 0],
                        [389, -145, 4, 0],
                        [400, -185, 4, 0],
                        [389, -225, 4, 0],
                        [360, -254, 4, 0],
                        [320, -265, 4, 0],
                        [280, -254, 4, 0],
                        [251, -225, 4, 0],
                        [240, -185, 4, 0],
                        [251, -145, 4, 0],
                        [280, -116, 4, 0],
                        [320, -105, 4, 1]
                    ],
                    [
                        [-330, 410, 0, 1],
                        [-290, 399, 7, 0],
                        [-261, 370, 7, 0],
                        [-250, 330, 7, 0],
                        [-261, 290, 7, 0],
                        [-290, 261, 7, 0],
                        [-330, 250, 7, 0],
                        [-370, 261, 7, 0],
                        [-399, 290, 7, 0],
                        [-410, 330, 7, 0],
                        [-399, 370, 7, 0],
                        [-370, 399, 7, 0],
                        [-330, 410, 7, 1],
                        [330, 410, 0, 1],
                        [370, 399, 7, 0],
                        [399, 370, 7, 0],
                        [410, 330, 7, 0],
                        [399, 290, 7, 0],
                        [370, 261, 7, 0],
                        [330, 250, 7, 0],
                        [290, 261, 7, 0],
                        [261, 290, 7, 0],
                        [250, 330, 7, 0],
                        [261, 370, 7, 0],
                        [290, 399, 7, 0],
                        [330, 410, 7, 1],
                        [330, -250, 0, 1],
                        [370, -261, 7, 0],
                        [399, -290, 7, 0],
                        [410, -330, 7, 0],
                        [399, -370, 7, 0],
                        [370, -399, 7, 0],
                        [330, -410, 7, 0],
                        [290, -399, 7, 0],
                        [261, -370, 7, 0],
                        [250, -330, 7, 0],
                        [261, -290, 7, 0],
                        [290, -261, 7, 0],
                        [330, -250, 7, 1],
                        [-330, -250, 0, 1],
                        [-290, -261, 7, 0],
                        [-261, -290, 7, 0],
                        [-250, -330, 7, 0],
                        [-261, -370, 7, 0],
                        [-290, -399, 7, 0],
                        [-330, -410, 7, 0],
                        [-370, -399, 7, 0],
                        [-399, -370, 7, 0],
                        [-410, -330, 7, 0],
                        [-399, -290, 7, 0],
                        [-370, -261, 7, 0],
                        [-330, -250, 7, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [20, 395, 7, 0],
                        [35, 380, 7, 0],
                        [40, 360, 7, 0],
                        [35, 340, 7, 0],
                        [20, 325, 7, 0],
                        [0, 320, 7, 0],
                        [-20, 325, 7, 0],
                        [-35, 340, 7, 0],
                        [-40, 360, 7, 0],
                        [-35, 380, 7, 0],
                        [-20, 395, 7, 0],
                        [0, 400, 7, 1],
                        [138, 373, 0, 1],
                        [158, 367, 1, 0],
                        [173, 353, 1, 0],
                        [178, 333, 1, 0],
                        [173, 313, 1, 0],
                        [158, 298, 1, 0],
                        [138, 293, 1, 0],
                        [118, 298, 1, 0],
                        [103, 313, 1, 0],
                        [98, 333, 1, 0],
                        [103, 353, 1, 0],
                        [118, 367, 1, 0],
                        [138, 373, 1, 1],
                        [255, 295, 0, 1],
                        [275, 289, 4, 0],
                        [289, 275, 4, 0],
                        [295, 255, 4, 0],
                        [289, 235, 4, 0],
                        [275, 220, 4, 0],
                        [255, 215, 4, 0],
                        [235, 220, 4, 0],
                        [220, 235, 4, 0],
                        [215, 255, 4, 0],
                        [220, 275, 4, 0],
                        [235, 289, 4, 0],
                        [255, 295, 4, 1],
                        [333, 178, 0, 1],
                        [353, 173, 2, 0],
                        [367, 158, 2, 0],
                        [373, 138, 2, 0],
                        [367, 118, 2, 0],
                        [353, 103, 2, 0],
                        [333, 98, 2, 0],
                        [313, 103, 2, 0],
                        [298, 118, 2, 0],
                        [293, 138, 2, 0],
                        [298, 158, 2, 0],
                        [313, 173, 2, 0],
                        [333, 178, 2, 1],
                        [360, 40, 0, 1],
                        [380, 35, 5, 0],
                        [395, 20, 5, 0],
                        [400, 0, 5, 0],
                        [395, -20, 5, 0],
                        [380, -35, 5, 0],
                        [360, -40, 5, 0],
                        [340, -35, 5, 0],
                        [325, -20, 5, 0],
                        [320, 0, 5, 0],
                        [325, 20, 5, 0],
                        [340, 35, 5, 0],
                        [360, 40, 5, 1],
                        [333, -98, 0, 1],
                        [353, -103, 6, 0],
                        [367, -118, 6, 0],
                        [373, -138, 6, 0],
                        [367, -158, 6, 0],
                        [353, -173, 6, 0],
                        [333, -178, 6, 0],
                        [313, -173, 6, 0],
                        [298, -158, 6, 0],
                        [293, -138, 6, 0],
                        [298, -118, 6, 0],
                        [313, -103, 6, 0],
                        [333, -98, 6, 1]
                    ],
                    [
                        [0, 60, 0, 1],
                        [30, 52, 5, 0],
                        [52, 30, 5, 0],
                        [60, 0, 5, 0],
                        [52, -30, 5, 0],
                        [30, -52, 5, 0],
                        [0, -60, 5, 0],
                        [-30, -52, 5, 0],
                        [-52, -30, 5, 0],
                        [-60, 0, 5, 0],
                        [-52, 30, 5, 0],
                        [-30, 52, 5, 0],
                        [0, 60, 5, 1],
                        [0, 0, 0, 1],
                        [0, 0, 7, 10]
                    ],
                    [
                        [-350, 60, 0, 1],
                        [-320, 52, 5, 0],
                        [-298, 30, 5, 0],
                        [-290, 0, 5, 0],
                        [-298, -30, 5, 0],
                        [-320, -52, 5, 0],
                        [-350, -60, 5, 0],
                        [-380, -52, 5, 0],
                        [-402, -30, 5, 0],
                        [-410, 0, 5, 0],
                        [-402, 30, 5, 0],
                        [-380, 52, 5, 0],
                        [-350, 60, 5, 1],
                        [-350, 0, 0, 1],
                        [-350, 0, 7, 10],
                        [-247, 307, 0, 1],
                        [-217, 299, 2, 0],
                        [-195, 277, 2, 0],
                        [-187, 247, 2, 0],
                        [-195, 217, 2, 0],
                        [-217, 195, 2, 0],
                        [-247, 187, 2, 0],
                        [-277, 195, 2, 0],
                        [-299, 217, 2, 0],
                        [-307, 247, 2, 0],
                        [-299, 277, 2, 0],
                        [-277, 299, 2, 0],
                        [-247, 307, 2, 1],
                        [-247, 247, 0, 1],
                        [-247, 247, 7, 10],
                        [0, 410, 0, 1],
                        [30, 402, 3, 0],
                        [52, 380, 3, 0],
                        [60, 350, 3, 0],
                        [52, 320, 3, 0],
                        [30, 298, 3, 0],
                        [0, 290, 3, 0],
                        [-30, 298, 3, 0],
                        [-52, 320, 3, 0],
                        [-60, 350, 3, 0],
                        [-52, 380, 3, 0],
                        [-30, 402, 3, 0],
                        [0, 410, 3, 1],
                        [0, 350, 0, 1],
                        [0, 350, 7, 10],
                        [247, 307, 0, 1],
                        [277, 299, 6, 0],
                        [299, 277, 6, 0],
                        [307, 247, 6, 0],
                        [299, 217, 6, 0],
                        [277, 195, 6, 0],
                        [247, 187, 6, 0],
                        [217, 195, 6, 0],
                        [195, 217, 6, 0],
                        [187, 247, 6, 0],
                        [195, 277, 6, 0],
                        [217, 299, 6, 0],
                        [247, 307, 6, 1],
                        [247, 247, 0, 1],
                        [247, 247, 7, 10]
                    ],
                    [
                        [-350, 50, 0, 1],
                        [-337, 48, 4, 0],
                        [-325, 43, 4, 0],
                        [-315, 35, 4, 0],
                        [-307, 25, 4, 0],
                        [-302, 13, 4, 0],
                        [-300, 0, 4, 0],
                        [-302, -13, 4, 0],
                        [-307, -25, 4, 0],
                        [-315, -35, 4, 0],
                        [-325, -43, 4, 0],
                        [-337, -48, 4, 0],
                        [-350, -50, 4, 0],
                        [-363, -48, 4, 0],
                        [-375, -43, 4, 0],
                        [-385, -35, 4, 0],
                        [-393, -25, 4, 0],
                        [-398, -13, 4, 0],
                        [-400, 0, 4, 0],
                        [-398, 13, 4, 0],
                        [-393, 25, 4, 0],
                        [-385, 35, 4, 0],
                        [-375, 43, 4, 0],
                        [-363, 48, 4, 0],
                        [-350, 50, 4, 1],
                        [-350, 0, 0, 1],
                        [-350, 0, 7, 10],
                        [-210, 50, 0, 1],
                        [-197, 48, 3, 0],
                        [-185, 43, 3, 0],
                        [-175, 35, 3, 0],
                        [-167, 25, 3, 0],
                        [-162, 13, 3, 0],
                        [-160, 0, 3, 0],
                        [-162, -13, 3, 0],
                        [-167, -25, 3, 0],
                        [-175, -35, 3, 0],
                        [-185, -43, 3, 0],
                        [-197, -48, 3, 0],
                        [-210, -50, 3, 0],
                        [-223, -48, 3, 0],
                        [-235, -43, 3, 0],
                        [-245, -35, 3, 0],
                        [-253, -25, 3, 0],
                        [-258, -13, 3, 0],
                        [-260, 0, 3, 0],
                        [-258, 13, 3, 0],
                        [-253, 25, 3, 0],
                        [-245, 35, 3, 0],
                        [-235, 43, 3, 0],
                        [-223, 48, 3, 0],
                        [-210, 50, 3, 1],
                        [-210, 0, 0, 1],
                        [-210, 0, 7, 10],
                        [-70, 50, 0, 1],
                        [-57, 48, 5, 0],
                        [-45, 43, 5, 0],
                        [-35, 35, 5, 0],
                        [-27, 25, 5, 0],
                        [-22, 13, 5, 0],
                        [-20, 0, 5, 0],
                        [-22, -13, 5, 0],
                        [-27, -25, 5, 0],
                        [-35, -35, 5, 0],
                        [-45, -43, 5, 0],
                        [-57, -48, 5, 0],
                        [-70, -50, 5, 0],
                        [-83, -48, 5, 0],
                        [-95, -43, 5, 0],
                        [-105, -35, 5, 0],
                        [-113, -25, 5, 0],
                        [-118, -13, 5, 0],
                        [-120, 0, 5, 0],
                        [-118, 13, 5, 0],
                        [-113, 25, 5, 0],
                        [-105, 35, 5, 0],
                        [-95, 43, 5, 0],
                        [-83, 48, 5, 0],
                        [-70, 50, 5, 1],
                        [-70, 0, 0, 1],
                        [-70, 0, 7, 10],
                        [70, 50, 0, 1],
                        [83, 48, 1, 0],
                        [95, 43, 1, 0],
                        [105, 35, 1, 0],
                        [113, 25, 1, 0],
                        [118, 13, 1, 0],
                        [120, 0, 1, 0],
                        [118, -13, 1, 0],
                        [113, -25, 1, 0],
                        [105, -35, 1, 0],
                        [95, -43, 1, 0],
                        [83, -48, 1, 0],
                        [70, -50, 1, 0],
                        [57, -48, 1, 0],
                        [45, -43, 1, 0],
                        [35, -35, 1, 0],
                        [27, -25, 1, 0],
                        [22, -13, 1, 0],
                        [20, 0, 1, 0],
                        [22, 13, 1, 0],
                        [27, 25, 1, 0],
                        [35, 35, 1, 0],
                        [45, 43, 1, 0],
                        [57, 48, 1, 0],
                        [70, 50, 1, 1],
                        [70, 0, 0, 1],
                        [70, 0, 7, 10],
                        [210, 50, 0, 1],
                        [223, 48, 6, 0],
                        [235, 43, 6, 0],
                        [245, 35, 6, 0],
                        [253, 25, 6, 0],
                        [258, 13, 6, 0],
                        [260, 0, 6, 0],
                        [258, -13, 6, 0],
                        [253, -25, 6, 0],
                        [245, -35, 6, 0],
                        [235, -43, 6, 0],
                        [223, -48, 6, 0],
                        [210, -50, 6, 0],
                        [197, -48, 6, 0],
                        [185, -43, 6, 0],
                        [175, -35, 6, 0],
                        [167, -25, 6, 0],
                        [162, -13, 6, 0],
                        [160, 0, 6, 0],
                        [162, 13, 6, 0],
                        [167, 25, 6, 0],
                        [175, 35, 6, 0],
                        [185, 43, 6, 0],
                        [197, 48, 6, 0],
                        [210, 50, 6, 1],
                        [210, 0, 0, 1],
                        [210, 0, 7, 10],
                        [350, 50, 0, 1],
                        [363, 48, 2, 0],
                        [375, 43, 2, 0],
                        [385, 35, 2, 0],
                        [393, 25, 2, 0],
                        [398, 13, 2, 0],
                        [400, 0, 2, 0],
                        [398, -13, 2, 0],
                        [393, -25, 2, 0],
                        [385, -35, 2, 0],
                        [375, -43, 2, 0],
                        [363, -48, 2, 0],
                        [350, -50, 2, 0],
                        [337, -48, 2, 0],
                        [325, -43, 2, 0],
                        [315, -35, 2, 0],
                        [307, -25, 2, 0],
                        [302, -13, 2, 0],
                        [300, 0, 2, 0],
                        [302, 13, 2, 0],
                        [307, 25, 2, 0],
                        [315, 35, 2, 0],
                        [325, 43, 2, 0],
                        [337, 48, 2, 0],
                        [350, 50, 2, 1],
                        [350, 0, 0, 1],
                        [350, 0, 7, 10]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 1],
                        [52, 397, 7, 0],
                        [104, 386, 7, 0],
                        [153, 370, 7, 3],
                        [200, 346, 0, 1],
                        [200, 346, 6, 1],
                        [244, 317, 6, 0],
                        [283, 283, 6, 0],
                        [317, 244, 6, 3],
                        [346, 200, 0, 1],
                        [346, 200, 7, 1],
                        [370, 153, 7, 0],
                        [386, 104, 7, 0],
                        [397, 52, 7, 3],
                        [400, 0, 0, 1],
                        [400, 0, 2, 1],
                        [397, -52, 2, 0],
                        [386, -104, 2, 0],
                        [370, -153, 2, 3],
                        [346, -200, 0, 1],
                        [346, -200, 7, 1],
                        [317, -244, 7, 0],
                        [283, -283, 7, 0],
                        [244, -317, 7, 3],
                        [200, -346, 0, 1],
                        [200, -346, 4, 1],
                        [153, -370, 4, 0],
                        [104, -386, 4, 0],
                        [52, -397, 4, 3],
                        [0, -400, 0, 1],
                        [0, -400, 7, 1],
                        [-52, -397, 7, 0],
                        [-104, -386, 7, 0],
                        [-153, -370, 7, 3],
                        [-200, -346, 0, 1],
                        [-200, -346, 1, 1],
                        [-244, -317, 1, 0],
                        [-283, -283, 1, 0],
                        [-317, -244, 1, 3],
                        [-346, -200, 0, 1],
                        [-346, -200, 7, 1],
                        [-370, -153, 7, 0],
                        [-386, -104, 7, 0],
                        [-397, -52, 7, 3],
                        [-400, 0, 0, 1],
                        [-400, 0, 3, 1],
                        [-397, 52, 3, 0],
                        [-386, 104, 3, 0],
                        [-370, 153, 3, 3],
                        [-346, 200, 0, 1],
                        [-346, 200, 7, 1],
                        [-317, 244, 7, 0],
                        [-283, 283, 7, 0],
                        [-244, 317, 7, 3],
                        [-200, 346, 0, 1],
                        [-200, 346, 5, 1],
                        [-153, 370, 5, 0],
                        [-104, 386, 5, 0],
                        [-52, 397, 5, 3]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 1],
                        [52, 397, 4, 0],
                        [104, 386, 4, 0],
                        [153, 370, 4, 0],
                        [200, 346, 4, 0],
                        [244, 317, 4, 0],
                        [283, 283, 4, 4],
                        [346, -200, 0, 1],
                        [346, -200, 5, 1],
                        [317, -244, 5, 0],
                        [283, -283, 5, 0],
                        [244, -317, 5, 0],
                        [200, -346, 5, 0],
                        [153, -370, 5, 0],
                        [104, -386, 5, 4],
                        [-317, -244, 0, 1],
                        [-317, -244, 7, 1],
                        [-346, -200, 7, 0],
                        [-370, -153, 7, 0],
                        [-386, -104, 7, 0],
                        [-397, -52, 7, 0],
                        [-400, 0, 7, 0],
                        [-397, 52, 7, 4]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 2, 1],
                        [52, 397, 2, 0],
                        [104, 386, 2, 0],
                        [153, 370, 2, 0],
                        [200, 346, 2, 0],
                        [244, 317, 2, 0],
                        [283, 283, 2, 4],
                        [400, 0, 0, 1],
                        [400, 0, 6, 1],
                        [397, -52, 6, 0],
                        [386, -104, 6, 0],
                        [370, -153, 6, 0],
                        [346, -200, 6, 0],
                        [317, -244, 6, 0],
                        [283, -283, 6, 4],
                        [0, -400, 0, 1],
                        [0, -400, 2, 1],
                        [-52, -397, 2, 0],
                        [-104, -386, 2, 0],
                        [-153, -370, 2, 0],
                        [-200, -346, 2, 0],
                        [-244, -317, 2, 0],
                        [-283, -283, 2, 4],
                        [-400, 0, 0, 1],
                        [-400, 0, 6, 1],
                        [-397, 52, 6, 0],
                        [-386, 104, 6, 0],
                        [-370, 153, 6, 0],
                        [-346, 200, 6, 0],
                        [-317, 244, 6, 0],
                        [-283, 283, 6, 4]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 1],
                        [52, 397, 4, 0],
                        [104, 386, 4, 0],
                        [153, 370, 4, 0],
                        [200, 346, 4, 0],
                        [244, 317, 4, 0],
                        [283, 283, 4, 0],
                        [317, 244, 4, 0],
                        [346, 200, 4, 0],
                        [370, 153, 4, 0],
                        [386, 104, 4, 0],
                        [397, 52, 4, 0],
                        [400, 0, 4, 4],
                        [0, -400, 0, 1],
                        [0, -400, 6, 1],
                        [-52, -397, 6, 0],
                        [-104, -386, 6, 0],
                        [-153, -370, 6, 0],
                        [-200, -346, 6, 0],
                        [-244, -317, 6, 0],
                        [-283, -283, 6, 0],
                        [-317, -244, 6, 0],
                        [-346, -200, 6, 0],
                        [-370, -153, 6, 0],
                        [-386, -104, 6, 0],
                        [-397, -52, 6, 0],
                        [-400, 0, 6, 4]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 1, 1],
                        [52, 397, 1, 0],
                        [104, 386, 1, 0],
                        [153, 370, 1, 0],
                        [200, 346, 1, 0],
                        [244, 317, 2, 0],
                        [283, 283, 2, 0],
                        [317, 244, 2, 0],
                        [346, 200, 2, 0],
                        [370, 153, 3, 0],
                        [386, 104, 3, 0],
                        [397, 52, 3, 0],
                        [400, 0, 3, 0],
                        [397, -52, 1, 0],
                        [386, -104, 1, 0],
                        [370, -153, 1, 0],
                        [346, -200, 1, 0],
                        [317, -244, 2, 0],
                        [283, -283, 2, 0],
                        [244, -317, 2, 0],
                        [200, -346, 2, 0],
                        [153, -370, 3, 0],
                        [104, -386, 3, 0],
                        [52, -397, 3, 0],
                        [0, -400, 3, 5]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 3, 1],
                        [52, 397, 3, 0],
                        [104, 386, 3, 0],
                        [153, 370, 3, 0],
                        [200, 346, 3, 0],
                        [244, 317, 3, 0],
                        [283, 283, 3, 0],
                        [317, 244, 3, 0],
                        [346, 200, 3, 0],
                        [370, 153, 3, 0],
                        [386, 104, 3, 0],
                        [397, 52, 3, 0],
                        [400, 0, 3, 5]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 1],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 7, 0],
                        [-353, 188, 1, 0],
                        [-339, 212, 1, 0],
                        [-324, 235, 1, 0],
                        [-306, 257, 1, 0],
                        [-288, 278, 1, 0],
                        [-268, 297, 1, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 4, 0],
                        [-150, 371, 4, 0],
                        [-124, 380, 4, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 0],
                        [0, 400, 2, 0],
                        [28, 399, 7, 0],
                        [56, 396, 7, 0],
                        [83, 391, 7, 0],
                        [110, 384, 7, 0],
                        [137, 376, 7, 0],
                        [163, 366, 7, 0],
                        [188, 353, 3, 0],
                        [212, 339, 3, 0],
                        [235, 324, 3, 0],
                        [257, 306, 3, 0],
                        [278, 288, 3, 0],
                        [297, 268, 5, 0],
                        [315, 246, 5, 0],
                        [332, 224, 5, 0],
                        [346, 200, 5, 0],
                        [360, 175, 5, 0],
                        [371, 150, 5, 0],
                        [380, 124, 6, 0],
                        [388, 97, 6, 0],
                        [394, 70, 6, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 5]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 1],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 7, 0],
                        [-353, 188, 1, 0],
                        [-339, 212, 1, 0],
                        [-324, 235, 1, 0],
                        [-306, 257, 1, 0],
                        [-288, 278, 1, 0],
                        [-268, 297, 1, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 4, 0],
                        [-150, 371, 4, 0],
                        [-124, 380, 4, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 0],
                        [0, 400, 2, 0],
                        [28, 399, 7, 0],
                        [56, 396, 7, 0],
                        [83, 391, 7, 0],
                        [110, 384, 7, 0],
                        [137, 376, 7, 0],
                        [163, 366, 7, 0],
                        [188, 353, 3, 0],
                        [212, 339, 3, 0],
                        [235, 324, 3, 0],
                        [257, 306, 3, 0],
                        [278, 288, 3, 0],
                        [297, 268, 5, 0],
                        [315, 246, 5, 0],
                        [332, 224, 5, 0],
                        [346, 200, 5, 0],
                        [360, 175, 5, 0],
                        [371, 150, 5, 0],
                        [380, 124, 6, 0],
                        [388, 97, 6, 0],
                        [394, 70, 6, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 5],
                        [-360, 0, 0, 1],
                        [-360, 0, 7, 1],
                        [-360, 13, 7, 0],
                        [-358, 38, 7, 0],
                        [-355, 63, 7, 0],
                        [-346, 99, 7, 0],
                        [-338, 123, 7, 0],
                        [-329, 147, 7, 0],
                        [-318, 169, 1, 0],
                        [-305, 191, 1, 0],
                        [-291, 212, 1, 0],
                        [-276, 231, 1, 0],
                        [-259, 250, 1, 0],
                        [-241, 267, 1, 0],
                        [-222, 284, 4, 0],
                        [-201, 298, 4, 0],
                        [-180, 312, 4, 0],
                        [-158, 324, 4, 0],
                        [-135, 334, 4, 0],
                        [-111, 342, 4, 0],
                        [-87, 349, 2, 0],
                        [-63, 355, 2, 0],
                        [-38, 358, 2, 0],
                        [-13, 360, 2, 0],
                        [0, 360, 2, 0],
                        [0, 360, 2, 0],
                        [25, 359, 7, 0],
                        [50, 356, 7, 0],
                        [75, 352, 7, 0],
                        [99, 346, 7, 0],
                        [123, 338, 7, 0],
                        [147, 329, 7, 0],
                        [169, 318, 3, 0],
                        [191, 305, 3, 0],
                        [212, 291, 3, 0],
                        [231, 276, 3, 0],
                        [250, 259, 3, 0],
                        [267, 241, 5, 0],
                        [284, 222, 5, 0],
                        [298, 201, 5, 0],
                        [312, 180, 5, 0],
                        [324, 158, 5, 0],
                        [334, 135, 5, 0],
                        [342, 111, 6, 0],
                        [349, 87, 6, 0],
                        [355, 63, 6, 0],
                        [358, 38, 6, 0],
                        [360, 0, 6, 5]
                    ],
                    [
                        [24, 0, 0, 1],
                        [28, 16, 1, 0],
                        [19, 33, 1, 0],
                        [0, 46, 1, 0],
                        [-26, 46, 1, 0],
                        [-51, 30, 1, 0],
                        [-66, 0, 1, 0],
                        [-68, -18, 1, 0],
                        [-63, -37, 1, 0],
                        [-54, -54, 1, 0],
                        [-40, -70, 1, 0],
                        [-21, -80, 1, 0],
                        [0, -88, 1, 0],
                        [23, -88, 1, 0],
                        [47, -82, 1, 0],
                        [70, -70, 1, 0],
                        [88, -51, 1, 0],
                        [102, -28, 1, 0],
                        [108, 0, 1, 0],
                        [108, 30, 4, 0],
                        [100, 58, 4, 0],
                        [84, 84, 4, 0],
                        [61, 107, 4, 0],
                        [33, 122, 4, 0],
                        [0, 130, 4, 0],
                        [-35, 128, 4, 0],
                        [-68, 119, 4, 0],
                        [-100, 100, 4, 0],
                        [-124, 72, 4, 0],
                        [-142, 38, 4, 0],
                        [-150, 0, 4, 0],
                        [-149, -40, 4, 0],
                        [-136, -79, 4, 0],
                        [-114, -114, 4, 0],
                        [-82, -142, 4, 0],
                        [-44, -163, 4, 0],
                        [0, -172, 4, 0],
                        [46, -170, 4, 0],
                        [89, -154, 4, 0],
                        [130, -130, 4, 0],
                        [161, -93, 4, 0],
                        [182, -49, 4, 0],
                        [192, 0, 4, 0],
                        [189, 51, 2, 0],
                        [173, 100, 2, 0],
                        [144, 144, 2, 0],
                        [103, 178, 2, 0],
                        [54, 203, 2, 0],
                        [0, 214, 2, 0],
                        [-56, 210, 2, 0],
                        [-110, 191, 2, 0],
                        [-159, 159, 2, 0],
                        [-198, 114, 2, 0],
                        [-224, 60, 2, 0],
                        [-234, 0, 2, 0],
                        [-229, -61, 2, 0],
                        [-210, -121, 2, 0],
                        [-173, -173, 2, 0],
                        [-124, -215, 2, 0],
                        [-65, -243, 2, 0],
                        [0, -256, 2, 0],
                        [66, -250, 2, 0],
                        [131, -228, 2, 0],
                        [187, -187, 2, 0],
                        [233, -135, 2, 0],
                        [264, -70, 2, 0],
                        [276, 0, 2, 0],
                        [271, 72, 5, 0],
                        [245, 142, 5, 0],
                        [203, 203, 5, 0],
                        [145, 252, 5, 0],
                        [75, 284, 5, 0],
                        [0, 298, 5, 0],
                        [-79, 290, 5, 0],
                        [-152, 264, 5, 0],
                        [-217, 217, 5, 0],
                        [-270, 156, 5, 0],
                        [-304, 82, 5, 0],
                        [-318, 0, 5, 0],
                        [-312, -84, 5, 0],
                        [-282, -163, 5, 0],
                        [-233, -233, 5, 0],
                        [-166, -289, 5, 0],
                        [-88, -324, 5, 0],
                        [0, -340, 5, 0],
                        [89, -331, 5, 0],
                        [173, -299, 5, 0],
                        [247, -247, 5, 0],
                        [306, -177, 5, 0],
                        [345, -93, 5, 0],
                        [360, 0, 5, 0],
                        [352, 94, 7, 0],
                        [318, 184, 7, 0],
                        [262, 262, 7, 0],
                        [187, 324, 7, 0],
                        [98, 366, 7, 0],
                        [0, 382, 7, 0],
                        [-100, 373, 7, 0],
                        [-194, 336, 7, 0],
                        [-276, 276, 7, 0],
                        [-343, 198, 7, 0],
                        [-385, 103, 7, 0],
                        [-402, 0, 7, 1]
                    ],
                    [
                        [-293, 0, 0, 1],
                        [-292, 4, 1, 0],
                        [-294, 10, 1, 0],
                        [-300, 13, 1, 0],
                        [-308, 13, 1, 0],
                        [-314, 8, 1, 0],
                        [-319, 0, 1, 0],
                        [-320, -5, 1, 0],
                        [-318, -10, 1, 0],
                        [-316, -16, 1, 0],
                        [-312, -20, 1, 0],
                        [-306, -23, 1, 0],
                        [-300, -25, 1, 0],
                        [-294, -25, 1, 0],
                        [-286, -24, 1, 0],
                        [-280, -20, 1, 0],
                        [-275, -14, 1, 0],
                        [-271, -8, 1, 0],
                        [-269, 0, 1, 0],
                        [-269, 8, 4, 0],
                        [-272, 16, 4, 0],
                        [-276, 24, 4, 0],
                        [-282, 30, 4, 0],
                        [-290, 35, 4, 0],
                        [-300, 37, 4, 0],
                        [-310, 36, 4, 0],
                        [-320, 34, 4, 0],
                        [-328, 28, 4, 0],
                        [-336, 20, 4, 0],
                        [-340, 11, 4, 0],
                        [-343, 0, 4, 0],
                        [-342, -12, 4, 0],
                        [-339, -22, 4, 0],
                        [-332, -32, 4, 0],
                        [-324, -40, 4, 0],
                        [-312, -46, 4, 0],
                        [-300, -49, 4, 0],
                        [-287, -48, 4, 0],
                        [-274, -44, 4, 0],
                        [-263, -37, 4, 0],
                        [-254, -26, 4, 0],
                        [-248, -14, 4, 0],
                        [-245, 0, 4, 0],
                        [-246, 14, 2, 0],
                        [-250, 28, 2, 0],
                        [-259, 41, 2, 0],
                        [-270, 51, 2, 0],
                        [-284, 58, 2, 0],
                        [-300, 61, 2, 0],
                        [-316, 60, 2, 0],
                        [-332, 54, 2, 0],
                        [-346, 46, 2, 0],
                        [-356, 32, 2, 0],
                        [-364, 17, 2, 0],
                        [-367, 0, 2, 0],
                        [-366, -18, 2, 0],
                        [-360, -34, 2, 0],
                        [-350, -50, 2, 0],
                        [-336, -62, 2, 0],
                        [-318, -70, 2, 0],
                        [-300, -73, 2, 0],
                        [-281, -72, 2, 0],
                        [-262, -65, 2, 0],
                        [-246, -54, 2, 0],
                        [-234, -38, 2, 0],
                        [-224, -20, 2, 0],
                        [-221, 0, 2, 0],
                        [-222, 20, 5, 0],
                        [-230, 40, 5, 0],
                        [-242, 58, 5, 0],
                        [-258, 72, 5, 0],
                        [-278, 81, 5, 0],
                        [-300, 85, 5, 0],
                        [-322, 83, 5, 0],
                        [-344, 76, 5, 0],
                        [-362, 62, 5, 0],
                        [-377, 44, 5, 0],
                        [-387, 24, 5, 0],
                        [-391, 0, 5, 0],
                        [-389, -24, 5, 0],
                        [-380, -46, 5, 0],
                        [-366, -66, 5, 0],
                        [-348, -82, 5, 0],
                        [-325, -92, 5, 0],
                        [-300, -97, 5, 0],
                        [-274, -94, 5, 0],
                        [-250, -86, 5, 0],
                        [-230, -70, 5, 0],
                        [-212, -50, 5, 0],
                        [-202, -26, 5, 0],
                        [-197, 0, 5, 0],
                        [-200, 27, 7, 0],
                        [-209, 52, 7, 0],
                        [-225, 75, 7, 0],
                        [-246, 92, 7, 0],
                        [-272, 104, 7, 0],
                        [-300, 109, 7, 0],
                        [-328, 106, 7, 0],
                        [-356, 96, 7, 0],
                        [-379, 79, 7, 0],
                        [-398, 56, 7, 0],
                        [-410, 30, 7, 0],
                        [-415, 0, 7, 1],
                        [307, 0, 0, 1],
                        [308, 4, 1, 0],
                        [306, 10, 1, 0],
                        [300, 13, 1, 0],
                        [292, 13, 1, 0],
                        [286, 8, 1, 0],
                        [281, 0, 1, 0],
                        [280, -5, 1, 0],
                        [282, -10, 1, 0],
                        [284, -16, 1, 0],
                        [288, -20, 1, 0],
                        [294, -23, 1, 0],
                        [300, -25, 1, 0],
                        [306, -25, 1, 0],
                        [314, -24, 1, 0],
                        [320, -20, 1, 0],
                        [325, -14, 1, 0],
                        [329, -8, 1, 0],
                        [331, 0, 1, 0],
                        [331, 8, 4, 0],
                        [328, 16, 4, 0],
                        [324, 24, 4, 0],
                        [318, 30, 4, 0],
                        [310, 35, 4, 0],
                        [300, 37, 4, 0],
                        [290, 36, 4, 0],
                        [280, 34, 4, 0],
                        [272, 28, 4, 0],
                        [264, 20, 4, 0],
                        [260, 11, 4, 0],
                        [257, 0, 4, 0],
                        [258, -12, 4, 0],
                        [261, -22, 4, 0],
                        [268, -32, 4, 0],
                        [276, -40, 4, 0],
                        [288, -46, 4, 0],
                        [300, -49, 4, 0],
                        [313, -48, 4, 0],
                        [326, -44, 4, 0],
                        [337, -37, 4, 0],
                        [346, -26, 4, 0],
                        [352, -14, 4, 0],
                        [355, 0, 4, 0],
                        [354, 14, 2, 0],
                        [350, 28, 2, 0],
                        [341, 41, 2, 0],
                        [330, 51, 2, 0],
                        [316, 58, 2, 0],
                        [300, 61, 2, 0],
                        [284, 60, 2, 0],
                        [268, 54, 2, 0],
                        [254, 46, 2, 0],
                        [244, 32, 2, 0],
                        [236, 17, 2, 0],
                        [233, 0, 2, 0],
                        [234, -18, 2, 0],
                        [240, -34, 2, 0],
                        [250, -50, 2, 0],
                        [264, -62, 2, 0],
                        [282, -70, 2, 0],
                        [300, -73, 2, 0],
                        [319, -72, 2, 0],
                        [338, -65, 2, 0],
                        [354, -54, 2, 0],
                        [366, -38, 2, 0],
                        [376, -20, 2, 0],
                        [379, 0, 2, 0],
                        [378, 20, 5, 0],
                        [370, 40, 5, 0],
                        [358, 58, 5, 0],
                        [342, 72, 5, 0],
                        [322, 81, 5, 0],
                        [300, 85, 5, 0],
                        [278, 83, 5, 0],
                        [256, 76, 5, 0],
                        [238, 62, 5, 0],
                        [223, 44, 5, 0],
                        [213, 24, 5, 0],
                        [209, 0, 5, 0],
                        [211, -24, 5, 0],
                        [220, -46, 5, 0],
                        [234, -66, 5, 0],
                        [252, -82, 5, 0],
                        [275, -92, 5, 0],
                        [300, -97, 5, 0],
                        [326, -94, 5, 0],
                        [350, -86, 5, 0],
                        [370, -70, 5, 0],
                        [388, -50, 5, 0],
                        [398, -26, 5, 0],
                        [403, 0, 5, 0],
                        [400, 27, 7, 0],
                        [391, 52, 7, 0],
                        [375, 75, 7, 0],
                        [354, 92, 7, 0],
                        [328, 104, 7, 0],
                        [300, 109, 7, 0],
                        [272, 106, 7, 0],
                        [244, 96, 7, 0],
                        [221, 79, 7, 0],
                        [202, 56, 7, 0],
                        [190, 30, 7, 0],
                        [185, 0, 7, 1]
                    ],
                    [
                        [-293, 0, 0, 1],
                        [-292, 4, 1, 0],
                        [-294, 10, 1, 0],
                        [-300, 13, 1, 0],
                        [-308, 13, 1, 0],
                        [-314, 8, 1, 0],
                        [-319, 0, 1, 0],
                        [-320, -5, 1, 0],
                        [-318, -10, 1, 0],
                        [-316, -16, 1, 0],
                        [-312, -20, 1, 0],
                        [-306, -23, 1, 0],
                        [-300, -25, 1, 0],
                        [-294, -25, 1, 0],
                        [-286, -24, 1, 0],
                        [-280, -20, 1, 0],
                        [-275, -14, 1, 0],
                        [-271, -8, 1, 0],
                        [-269, 0, 1, 0],
                        [-269, 8, 4, 0],
                        [-272, 16, 4, 0],
                        [-276, 24, 4, 0],
                        [-282, 30, 4, 0],
                        [-290, 35, 4, 0],
                        [-300, 37, 4, 0],
                        [-310, 36, 4, 0],
                        [-320, 34, 4, 0],
                        [-328, 28, 4, 0],
                        [-336, 20, 4, 0],
                        [-340, 11, 4, 0],
                        [-343, 0, 4, 0],
                        [-342, -12, 4, 0],
                        [-339, -22, 4, 0],
                        [-332, -32, 4, 0],
                        [-324, -40, 4, 0],
                        [-312, -46, 4, 0],
                        [-300, -49, 4, 0],
                        [-287, -48, 4, 0],
                        [-274, -44, 4, 0],
                        [-263, -37, 4, 0],
                        [-254, -26, 4, 0],
                        [-248, -14, 4, 0],
                        [-245, 0, 4, 0],
                        [-246, 14, 2, 0],
                        [-250, 28, 2, 0],
                        [-259, 41, 2, 0],
                        [-270, 51, 2, 0],
                        [-284, 58, 2, 0],
                        [-300, 61, 2, 0],
                        [-316, 60, 2, 0],
                        [-332, 54, 2, 0],
                        [-346, 46, 2, 0],
                        [-356, 32, 2, 0],
                        [-364, 17, 2, 0],
                        [-367, 0, 2, 0],
                        [-366, -18, 2, 0],
                        [-360, -34, 2, 0],
                        [-350, -50, 2, 0],
                        [-336, -62, 2, 0],
                        [-318, -70, 2, 0],
                        [-300, -73, 2, 0],
                        [-281, -72, 2, 0],
                        [-262, -65, 2, 0],
                        [-246, -54, 2, 0],
                        [-234, -38, 2, 0],
                        [-224, -20, 2, 0],
                        [-221, 0, 2, 0],
                        [-222, 20, 5, 0],
                        [-230, 40, 5, 0],
                        [-242, 58, 5, 0],
                        [-258, 72, 5, 0],
                        [-278, 81, 5, 0],
                        [-300, 85, 5, 0],
                        [-322, 83, 5, 0],
                        [-344, 76, 5, 0],
                        [-362, 62, 5, 0],
                        [-377, 44, 5, 0],
                        [-387, 24, 5, 0],
                        [-391, 0, 5, 0],
                        [-389, -24, 5, 0],
                        [-380, -46, 5, 0],
                        [-366, -66, 5, 0],
                        [-348, -82, 5, 0],
                        [-325, -92, 5, 0],
                        [-300, -97, 5, 0],
                        [-274, -94, 5, 0],
                        [-250, -86, 5, 0],
                        [-230, -70, 5, 0],
                        [-212, -50, 5, 0],
                        [-202, -26, 5, 0],
                        [-197, 0, 5, 0],
                        [-200, 27, 7, 0],
                        [-209, 52, 7, 0],
                        [-225, 75, 7, 0],
                        [-246, 92, 7, 0],
                        [-272, 104, 7, 0],
                        [-300, 109, 7, 0],
                        [-328, 106, 7, 0],
                        [-356, 96, 7, 0],
                        [-379, 79, 7, 0],
                        [-398, 56, 7, 0],
                        [-410, 30, 7, 0],
                        [-415, 0, 7, 1],
                        [307, 0, 0, 1],
                        [308, 4, 1, 0],
                        [306, 10, 1, 0],
                        [300, 13, 1, 0],
                        [292, 13, 1, 0],
                        [286, 8, 1, 0],
                        [281, 0, 1, 0],
                        [280, -5, 1, 0],
                        [282, -10, 1, 0],
                        [284, -16, 1, 0],
                        [288, -20, 1, 0],
                        [294, -23, 1, 0],
                        [300, -25, 1, 0],
                        [306, -25, 1, 0],
                        [314, -24, 1, 0],
                        [320, -20, 1, 0],
                        [325, -14, 1, 0],
                        [329, -8, 1, 0],
                        [331, 0, 1, 0],
                        [331, 8, 4, 0],
                        [328, 16, 4, 0],
                        [324, 24, 4, 0],
                        [318, 30, 4, 0],
                        [310, 35, 4, 0],
                        [300, 37, 4, 0],
                        [290, 36, 4, 0],
                        [280, 34, 4, 0],
                        [272, 28, 4, 0],
                        [264, 20, 4, 0],
                        [260, 11, 4, 0],
                        [257, 0, 4, 0],
                        [258, -12, 4, 0],
                        [261, -22, 4, 0],
                        [268, -32, 4, 0],
                        [276, -40, 4, 0],
                        [288, -46, 4, 0],
                        [300, -49, 4, 0],
                        [313, -48, 4, 0],
                        [326, -44, 4, 0],
                        [337, -37, 4, 0],
                        [346, -26, 4, 0],
                        [352, -14, 4, 0],
                        [355, 0, 4, 0],
                        [354, 14, 2, 0],
                        [350, 28, 2, 0],
                        [341, 41, 2, 0],
                        [330, 51, 2, 0],
                        [316, 58, 2, 0],
                        [300, 61, 2, 0],
                        [284, 60, 2, 0],
                        [268, 54, 2, 0],
                        [254, 46, 2, 0],
                        [244, 32, 2, 0],
                        [236, 17, 2, 0],
                        [233, 0, 2, 0],
                        [234, -18, 2, 0],
                        [240, -34, 2, 0],
                        [250, -50, 2, 0],
                        [264, -62, 2, 0],
                        [282, -70, 2, 0],
                        [300, -73, 2, 0],
                        [319, -72, 2, 0],
                        [338, -65, 2, 0],
                        [354, -54, 2, 0],
                        [366, -38, 2, 0],
                        [376, -20, 2, 0],
                        [379, 0, 2, 0],
                        [378, 20, 5, 0],
                        [370, 40, 5, 0],
                        [358, 58, 5, 0],
                        [342, 72, 5, 0],
                        [322, 81, 5, 0],
                        [300, 85, 5, 0],
                        [278, 83, 5, 0],
                        [256, 76, 5, 0],
                        [238, 62, 5, 0],
                        [223, 44, 5, 0],
                        [213, 24, 5, 0],
                        [209, 0, 5, 0],
                        [211, -24, 5, 0],
                        [220, -46, 5, 0],
                        [234, -66, 5, 0],
                        [252, -82, 5, 0],
                        [275, -92, 5, 0],
                        [300, -97, 5, 0],
                        [326, -94, 5, 0],
                        [350, -86, 5, 0],
                        [370, -70, 5, 0],
                        [388, -50, 5, 0],
                        [398, -26, 5, 0],
                        [403, 0, 5, 0],
                        [400, 27, 7, 0],
                        [391, 52, 7, 0],
                        [375, 75, 7, 0],
                        [354, 92, 7, 0],
                        [328, 104, 7, 0],
                        [300, 109, 7, 0],
                        [272, 106, 7, 0],
                        [244, 96, 7, 0],
                        [221, 79, 7, 0],
                        [202, 56, 7, 0],
                        [190, 30, 7, 0],
                        [185, 0, 7, 1],
                        [307, 0, 0, 1],
                        [-293, 0, 7, 1]
                    ],
                    [
                        [7, 306, 0, 1],
                        [8, 310, 4, 0],
                        [6, 316, 4, 0],
                        [0, 319, 4, 0],
                        [-8, 319, 4, 0],
                        [-14, 314, 4, 0],
                        [-19, 306, 4, 0],
                        [-20, 301, 4, 0],
                        [-18, 296, 4, 0],
                        [-16, 290, 4, 0],
                        [-12, 286, 4, 0],
                        [-6, 283, 4, 0],
                        [0, 281, 4, 0],
                        [6, 281, 4, 0],
                        [14, 282, 4, 0],
                        [20, 286, 4, 0],
                        [25, 292, 4, 0],
                        [29, 298, 4, 0],
                        [31, 306, 4, 0],
                        [31, 314, 4, 0],
                        [28, 322, 4, 0],
                        [24, 330, 4, 0],
                        [18, 336, 4, 0],
                        [10, 341, 4, 0],
                        [0, 343, 4, 0],
                        [-10, 342, 4, 0],
                        [-20, 340, 4, 0],
                        [-28, 334, 4, 0],
                        [-36, 326, 4, 0],
                        [-40, 317, 4, 0],
                        [-43, 306, 4, 0],
                        [-42, 294, 4, 0],
                        [-39, 284, 4, 0],
                        [-32, 274, 4, 0],
                        [-24, 266, 4, 0],
                        [-12, 260, 4, 0],
                        [0, 257, 4, 0],
                        [13, 258, 4, 0],
                        [26, 262, 4, 0],
                        [37, 269, 4, 0],
                        [46, 280, 4, 0],
                        [52, 292, 4, 0],
                        [55, 306, 4, 0],
                        [54, 320, 4, 0],
                        [50, 334, 4, 0],
                        [41, 347, 4, 0],
                        [30, 357, 4, 0],
                        [16, 364, 4, 0],
                        [0, 367, 4, 0],
                        [-16, 366, 4, 0],
                        [-32, 360, 4, 0],
                        [-46, 352, 4, 0],
                        [-56, 338, 4, 0],
                        [-64, 323, 4, 0],
                        [-67, 306, 4, 0],
                        [-66, 288, 4, 0],
                        [-60, 272, 4, 0],
                        [-50, 256, 4, 0],
                        [-36, 244, 4, 0],
                        [-18, 236, 4, 0],
                        [0, 233, 4, 0],
                        [19, 234, 4, 0],
                        [38, 241, 4, 0],
                        [54, 252, 4, 0],
                        [66, 268, 4, 0],
                        [76, 286, 4, 0],
                        [79, 306, 4, 0],
                        [78, 326, 4, 0],
                        [70, 346, 4, 0],
                        [58, 364, 4, 0],
                        [42, 378, 4, 0],
                        [22, 387, 4, 0],
                        [0, 391, 4, 0],
                        [-22, 389, 4, 0],
                        [-44, 382, 4, 0],
                        [-62, 368, 4, 0],
                        [-77, 350, 4, 0],
                        [-87, 330, 4, 0],
                        [-91, 306, 4, 0],
                        [-89, 282, 4, 0],
                        [-80, 260, 4, 0],
                        [-66, 240, 4, 0],
                        [-48, 224, 4, 0],
                        [-25, 214, 4, 0],
                        [0, 209, 4, 0],
                        [26, 212, 4, 0],
                        [50, 220, 4, 0],
                        [70, 236, 4, 0],
                        [88, 256, 4, 0],
                        [98, 280, 4, 0],
                        [103, 306, 4, 0],
                        [100, 333, 4, 0],
                        [91, 358, 4, 0],
                        [75, 381, 4, 0],
                        [54, 398, 4, 0],
                        [28, 410, 4, 0],
                        [0, 415, 4, 0],
                        [-28, 412, 4, 0],
                        [-56, 402, 4, 0],
                        [-79, 385, 4, 0],
                        [-98, 362, 4, 0],
                        [-110, 336, 4, 0],
                        [-115, 306, 4, 1],
                        [-258, -153, 0, 1],
                        [-257, -148, 5, 0],
                        [-260, -144, 5, 0],
                        [-265, -140, 5, 0],
                        [-273, -140, 5, 0],
                        [-280, -144, 5, 0],
                        [-284, -153, 5, 0],
                        [-285, -158, 5, 0],
                        [-283, -164, 5, 0],
                        [-281, -168, 5, 0],
                        [-277, -173, 5, 0],
                        [-271, -176, 5, 0],
                        [-265, -178, 5, 0],
                        [-259, -178, 5, 0],
                        [-252, -176, 5, 0],
                        [-245, -173, 5, 0],
                        [-240, -168, 5, 0],
                        [-236, -161, 5, 0],
                        [-234, -153, 5, 0],
                        [-234, -144, 5, 0],
                        [-237, -136, 5, 0],
                        [-241, -129, 5, 0],
                        [-248, -122, 5, 0],
                        [-256, -118, 5, 0],
                        [-265, -116, 5, 0],
                        [-275, -116, 5, 0],
                        [-285, -119, 5, 0],
                        [-294, -124, 5, 0],
                        [-301, -132, 5, 0],
                        [-306, -142, 5, 0],
                        [-308, -153, 5, 0],
                        [-308, -164, 5, 0],
                        [-304, -176, 5, 0],
                        [-298, -186, 5, 0],
                        [-289, -194, 5, 0],
                        [-278, -200, 5, 0],
                        [-265, -202, 5, 0],
                        [-252, -202, 5, 0],
                        [-240, -197, 5, 0],
                        [-228, -190, 5, 0],
                        [-219, -180, 5, 0],
                        [-213, -167, 5, 0],
                        [-210, -153, 5, 0],
                        [-211, -138, 5, 0],
                        [-216, -124, 5, 0],
                        [-224, -112, 5, 0],
                        [-236, -102, 5, 0],
                        [-250, -95, 5, 0],
                        [-265, -92, 5, 0],
                        [-281, -93, 5, 0],
                        [-297, -98, 5, 0],
                        [-311, -108, 5, 0],
                        [-322, -120, 5, 0],
                        [-329, -136, 5, 0],
                        [-332, -153, 5, 0],
                        [-331, -170, 5, 0],
                        [-325, -188, 5, 0],
                        [-315, -202, 5, 0],
                        [-301, -214, 5, 0],
                        [-284, -222, 5, 0],
                        [-265, -226, 5, 0],
                        [-246, -224, 5, 0],
                        [-228, -218, 5, 0],
                        [-212, -206, 5, 0],
                        [-199, -192, 5, 0],
                        [-190, -173, 5, 0],
                        [-186, -153, 5, 0],
                        [-188, -132, 5, 0],
                        [-195, -112, 5, 0],
                        [-207, -95, 5, 0],
                        [-224, -81, 5, 0],
                        [-244, -72, 5, 0],
                        [-265, -68, 5, 0],
                        [-288, -70, 5, 0],
                        [-309, -78, 5, 0],
                        [-327, -91, 5, 0],
                        [-342, -108, 5, 0],
                        [-352, -130, 5, 0],
                        [-356, -153, 5, 0],
                        [-354, -177, 5, 0],
                        [-346, -200, 5, 0],
                        [-332, -220, 5, 0],
                        [-313, -236, 5, 0],
                        [-290, -246, 5, 0],
                        [-265, -250, 5, 0],
                        [-240, -248, 5, 0],
                        [-216, -238, 5, 0],
                        [-195, -224, 5, 0],
                        [-178, -204, 5, 0],
                        [-167, -180, 5, 0],
                        [-162, -153, 5, 0],
                        [-165, -126, 5, 0],
                        [-174, -100, 5, 0],
                        [-190, -78, 5, 0],
                        [-212, -60, 5, 0],
                        [-237, -48, 5, 0],
                        [-265, -44, 5, 0],
                        [-294, -46, 5, 0],
                        [-321, -57, 5, 0],
                        [-344, -74, 5, 0],
                        [-363, -96, 5, 0],
                        [-375, -124, 5, 0],
                        [-380, -153, 5, 1],
                        [272, -153, 0, 1],
                        [273, -148, 6, 0],
                        [271, -144, 6, 0],
                        [265, -140, 6, 0],
                        [258, -140, 6, 0],
                        [251, -144, 6, 0],
                        [246, -153, 6, 0],
                        [246, -158, 6, 0],
                        [247, -164, 6, 0],
                        [250, -168, 6, 0],
                        [254, -173, 6, 0],
                        [259, -176, 6, 0],
                        [265, -178, 6, 0],
                        [272, -178, 6, 0],
                        [279, -176, 6, 0],
                        [285, -173, 6, 0],
                        [290, -168, 6, 0],
                        [294, -161, 6, 0],
                        [296, -153, 6, 0],
                        [296, -144, 6, 0],
                        [294, -136, 6, 0],
                        [289, -129, 6, 0],
                        [283, -122, 6, 0],
                        [275, -118, 6, 0],
                        [265, -116, 6, 0],
                        [255, -116, 6, 0],
                        [246, -119, 6, 0],
                        [237, -124, 6, 0],
                        [230, -132, 6, 0],
                        [225, -142, 6, 0],
                        [222, -153, 6, 0],
                        [223, -164, 6, 0],
                        [226, -176, 6, 0],
                        [233, -186, 6, 0],
                        [242, -194, 6, 0],
                        [253, -200, 6, 0],
                        [265, -202, 6, 0],
                        [278, -202, 6, 0],
                        [291, -197, 6, 0],
                        [302, -190, 6, 0],
                        [311, -180, 6, 0],
                        [317, -167, 6, 0],
                        [320, -153, 6, 0],
                        [319, -138, 6, 0],
                        [315, -124, 6, 0],
                        [306, -112, 6, 0],
                        [295, -102, 6, 0],
                        [281, -95, 6, 0],
                        [265, -92, 6, 0],
                        [249, -93, 6, 0],
                        [234, -98, 6, 0],
                        [220, -108, 6, 0],
                        [209, -120, 6, 0],
                        [201, -136, 6, 0],
                        [198, -153, 6, 0],
                        [200, -170, 6, 0],
                        [205, -188, 6, 0],
                        [216, -202, 6, 0],
                        [230, -214, 6, 0],
                        [247, -222, 6, 0],
                        [265, -226, 6, 0],
                        [284, -224, 6, 0],
                        [303, -218, 6, 0],
                        [319, -206, 6, 0],
                        [332, -192, 6, 0],
                        [341, -173, 6, 0],
                        [344, -153, 6, 0],
                        [343, -132, 6, 0],
                        [335, -112, 6, 0],
                        [323, -95, 6, 0],
                        [307, -81, 6, 0],
                        [287, -72, 6, 0],
                        [265, -68, 6, 0],
                        [243, -70, 6, 0],
                        [222, -78, 6, 0],
                        [203, -91, 6, 0],
                        [188, -108, 6, 0],
                        [178, -130, 6, 0],
                        [174, -153, 6, 0],
                        [176, -177, 6, 0],
                        [185, -200, 6, 0],
                        [199, -220, 6, 0],
                        [218, -236, 6, 0],
                        [240, -246, 6, 0],
                        [265, -250, 6, 0],
                        [291, -248, 6, 0],
                        [315, -238, 6, 0],
                        [336, -224, 6, 0],
                        [353, -204, 6, 0],
                        [364, -180, 6, 0],
                        [368, -153, 6, 0],
                        [366, -126, 6, 0],
                        [356, -100, 6, 0],
                        [340, -78, 6, 0],
                        [319, -60, 6, 0],
                        [293, -48, 6, 0],
                        [265, -44, 6, 0],
                        [237, -46, 6, 0],
                        [210, -57, 6, 0],
                        [186, -74, 6, 0],
                        [167, -96, 6, 0],
                        [155, -124, 6, 0],
                        [150, -153, 6, 1]
                    ],
                    [
                        [-346, 0, 0, 1],
                        [-346, 2, 7, 0],
                        [-347, 5, 7, 0],
                        [-350, 7, 7, 0],
                        [-354, 7, 7, 0],
                        [-358, 5, 7, 0],
                        [-360, 0, 7, 0],
                        [-360, -3, 7, 0],
                        [-360, -6, 7, 0],
                        [-358, -8, 7, 0],
                        [-356, -11, 7, 0],
                        [-353, -12, 7, 0],
                        [-350, -13, 7, 0],
                        [-347, -13, 7, 0],
                        [-343, -13, 7, 0],
                        [-339, -11, 7, 0],
                        [-337, -8, 7, 0],
                        [-334, -4, 7, 0],
                        [-333, 0, 7, 0],
                        [-333, 5, 7, 0],
                        [-335, 9, 7, 0],
                        [-337, 13, 7, 0],
                        [-341, 16, 7, 0],
                        [-345, 19, 7, 0],
                        [-350, 20, 7, 0],
                        [-355, 20, 7, 0],
                        [-360, 18, 7, 0],
                        [-365, 15, 7, 0],
                        [-369, 11, 7, 0],
                        [-372, 6, 7, 0],
                        [-373, 0, 7, 0],
                        [-373, -6, 7, 0],
                        [-371, -12, 7, 0],
                        [-367, -17, 7, 0],
                        [-363, -22, 7, 0],
                        [-357, -25, 7, 0],
                        [-350, -26, 7, 0],
                        [-343, -26, 7, 0],
                        [-336, -24, 7, 0],
                        [-330, -20, 7, 0],
                        [-325, -14, 7, 0],
                        [-322, -8, 7, 0],
                        [-321, 0, 7, 0],
                        [-321, 8, 7, 0],
                        [-323, 15, 7, 0],
                        [-328, 22, 7, 0],
                        [-334, 27, 7, 0],
                        [-342, 31, 7, 0],
                        [-350, 33, 7, 0],
                        [-359, 32, 7, 0],
                        [-367, 29, 7, 0],
                        [-374, 24, 7, 0],
                        [-380, 17, 7, 0],
                        [-384, 9, 7, 0],
                        [-386, 0, 7, 0],
                        [-385, -9, 7, 0],
                        [-382, -18, 7, 0],
                        [-377, -27, 7, 0],
                        [-369, -33, 7, 0],
                        [-360, -37, 7, 0],
                        [-350, -39, 7, 0],
                        [-340, -38, 7, 0],
                        [-330, -35, 7, 0],
                        [-321, -29, 7, 0],
                        [-314, -21, 7, 0],
                        [-310, -11, 7, 0],
                        [-308, 0, 7, 0],
                        [-308, 11, 7, 0],
                        [-312, 22, 7, 0],
                        [-319, 31, 7, 0],
                        [-328, 39, 7, 0],
                        [-338, 43, 7, 0],
                        [-350, 46, 7, 0],
                        [-362, 44, 7, 0],
                        [-373, 40, 7, 0],
                        [-383, 33, 7, 0],
                        [-391, 24, 7, 0],
                        [-397, 13, 7, 0],
                        [-399, 0, 7, 0],
                        [-398, -13, 7, 0],
                        [-393, -25, 7, 0],
                        [-386, -36, 7, 0],
                        [-375, -44, 7, 0],
                        [-363, -50, 7, 0],
                        [-350, -52, 7, 0],
                        [-336, -51, 7, 0],
                        [-323, -46, 7, 0],
                        [-312, -38, 7, 0],
                        [-303, -27, 7, 0],
                        [-297, -14, 7, 0],
                        [-295, 0, 7, 0],
                        [-296, 14, 7, 0],
                        [-301, 28, 7, 0],
                        [-310, 40, 7, 0],
                        [-321, 50, 7, 0],
                        [-335, 56, 7, 0],
                        [-350, 58, 7, 0],
                        [-365, 57, 7, 0],
                        [-380, 51, 7, 0],
                        [-392, 42, 7, 0],
                        [-403, 30, 7, 0],
                        [-409, 16, 7, 0],
                        [-412, 0, 7, 1],
                        [-206, 0, 0, 1],
                        [-206, 2, 1, 0],
                        [-207, 5, 1, 0],
                        [-210, 7, 1, 0],
                        [-214, 7, 1, 0],
                        [-218, 5, 1, 0],
                        [-220, 0, 1, 0],
                        [-220, -3, 1, 0],
                        [-220, -6, 1, 0],
                        [-218, -8, 1, 0],
                        [-216, -11, 1, 0],
                        [-213, -12, 1, 0],
                        [-210, -13, 1, 0],
                        [-207, -13, 1, 0],
                        [-203, -13, 1, 0],
                        [-199, -11, 1, 0],
                        [-197, -8, 1, 0],
                        [-194, -4, 1, 0],
                        [-193, 0, 1, 0],
                        [-193, 5, 1, 0],
                        [-195, 9, 1, 0],
                        [-197, 13, 1, 0],
                        [-201, 16, 1, 0],
                        [-205, 19, 1, 0],
                        [-210, 20, 1, 0],
                        [-215, 20, 1, 0],
                        [-220, 18, 1, 0],
                        [-225, 15, 1, 0],
                        [-229, 11, 1, 0],
                        [-232, 6, 1, 0],
                        [-233, 0, 1, 0],
                        [-233, -6, 1, 0],
                        [-231, -12, 1, 0],
                        [-227, -17, 1, 0],
                        [-223, -22, 1, 0],
                        [-217, -25, 1, 0],
                        [-210, -26, 1, 0],
                        [-203, -26, 1, 0],
                        [-196, -24, 1, 0],
                        [-190, -20, 1, 0],
                        [-185, -14, 1, 0],
                        [-182, -8, 1, 0],
                        [-181, 0, 1, 0],
                        [-181, 8, 1, 0],
                        [-183, 15, 1, 0],
                        [-188, 22, 1, 0],
                        [-194, 27, 1, 0],
                        [-202, 31, 1, 0],
                        [-210, 33, 1, 0],
                        [-219, 32, 1, 0],
                        [-227, 29, 1, 0],
                        [-234, 24, 1, 0],
                        [-240, 17, 1, 0],
                        [-244, 9, 1, 0],
                        [-246, 0, 1, 0],
                        [-245, -9, 1, 0],
                        [-242, -18, 1, 0],
                        [-237, -27, 1, 0],
                        [-229, -33, 1, 0],
                        [-220, -37, 1, 0],
                        [-210, -39, 1, 0],
                        [-200, -38, 1, 0],
                        [-190, -35, 1, 0],
                        [-181, -29, 1, 0],
                        [-174, -21, 1, 0],
                        [-170, -11, 1, 0],
                        [-168, 0, 1, 0],
                        [-168, 11, 1, 0],
                        [-172, 22, 1, 0],
                        [-179, 31, 1, 0],
                        [-188, 39, 1, 0],
                        [-198, 43, 1, 0],
                        [-210, 46, 1, 0],
                        [-222, 44, 1, 0],
                        [-233, 40, 1, 0],
                        [-243, 33, 1, 0],
                        [-251, 24, 1, 0],
                        [-257, 13, 1, 0],
                        [-259, 0, 1, 0],
                        [-258, -13, 1, 0],
                        [-253, -25, 1, 0],
                        [-246, -36, 1, 0],
                        [-235, -44, 1, 0],
                        [-223, -50, 1, 0],
                        [-210, -52, 1, 0],
                        [-196, -51, 1, 0],
                        [-183, -46, 1, 0],
                        [-172, -38, 1, 0],
                        [-163, -27, 1, 0],
                        [-157, -14, 1, 0],
                        [-155, 0, 1, 0],
                        [-156, 14, 1, 0],
                        [-161, 28, 1, 0],
                        [-170, 40, 1, 0],
                        [-181, 50, 1, 0],
                        [-195, 56, 1, 0],
                        [-210, 58, 1, 0],
                        [-225, 57, 1, 0],
                        [-240, 51, 1, 0],
                        [-252, 42, 1, 0],
                        [-263, 30, 1, 0],
                        [-269, 16, 1, 0],
                        [-272, 0, 1, 1],
                        [-66, 0, 0, 1],
                        [-66, 2, 4, 0],
                        [-67, 5, 4, 0],
                        [-70, 7, 4, 0],
                        [-74, 7, 4, 0],
                        [-78, 5, 4, 0],
                        [-80, 0, 4, 0],
                        [-80, -3, 4, 0],
                        [-80, -6, 4, 0],
                        [-78, -8, 4, 0],
                        [-76, -11, 4, 0],
                        [-73, -12, 4, 0],
                        [-70, -13, 4, 0],
                        [-67, -13, 4, 0],
                        [-63, -13, 4, 0],
                        [-59, -11, 4, 0],
                        [-57, -8, 4, 0],
                        [-54, -4, 4, 0],
                        [-53, 0, 4, 0],
                        [-53, 5, 4, 0],
                        [-55, 9, 4, 0],
                        [-57, 13, 4, 0],
                        [-61, 16, 4, 0],
                        [-65, 19, 4, 0],
                        [-70, 20, 4, 0],
                        [-75, 20, 4, 0],
                        [-80, 18, 4, 0],
                        [-85, 15, 4, 0],
                        [-89, 11, 4, 0],
                        [-92, 6, 4, 0],
                        [-93, 0, 4, 0],
                        [-93, -6, 4, 0],
                        [-91, -12, 4, 0],
                        [-87, -17, 4, 0],
                        [-83, -22, 4, 0],
                        [-77, -25, 4, 0],
                        [-70, -26, 4, 0],
                        [-63, -26, 4, 0],
                        [-56, -24, 4, 0],
                        [-50, -20, 4, 0],
                        [-45, -14, 4, 0],
                        [-42, -8, 4, 0],
                        [-41, 0, 4, 0],
                        [-41, 8, 4, 0],
                        [-43, 15, 4, 0],
                        [-48, 22, 4, 0],
                        [-54, 27, 4, 0],
                        [-62, 31, 4, 0],
                        [-70, 33, 4, 0],
                        [-79, 32, 4, 0],
                        [-87, 29, 4, 0],
                        [-94, 24, 4, 0],
                        [-100, 17, 4, 0],
                        [-104, 9, 4, 0],
                        [-106, 0, 4, 0],
                        [-105, -9, 4, 0],
                        [-102, -18, 4, 0],
                        [-97, -27, 4, 0],
                        [-89, -33, 4, 0],
                        [-80, -37, 4, 0],
                        [-70, -39, 4, 0],
                        [-60, -38, 4, 0],
                        [-50, -35, 4, 0],
                        [-41, -29, 4, 0],
                        [-34, -21, 4, 0],
                        [-30, -11, 4, 0],
                        [-28, 0, 4, 0],
                        [-28, 11, 4, 0],
                        [-32, 22, 4, 0],
                        [-39, 31, 4, 0],
                        [-48, 39, 4, 0],
                        [-58, 43, 4, 0],
                        [-70, 46, 4, 0],
                        [-82, 44, 4, 0],
                        [-93, 40, 4, 0],
                        [-103, 33, 4, 0],
                        [-111, 24, 4, 0],
                        [-117, 13, 4, 0],
                        [-119, 0, 4, 0],
                        [-118, -13, 4, 0],
                        [-113, -25, 4, 0],
                        [-106, -36, 4, 0],
                        [-95, -44, 4, 0],
                        [-83, -50, 4, 0],
                        [-70, -52, 4, 0],
                        [-56, -51, 4, 0],
                        [-43, -46, 4, 0],
                        [-32, -38, 4, 0],
                        [-23, -27, 4, 0],
                        [-17, -14, 4, 0],
                        [-15, 0, 4, 0],
                        [-16, 14, 4, 0],
                        [-21, 28, 4, 0],
                        [-30, 40, 4, 0],
                        [-41, 50, 4, 0],
                        [-55, 56, 4, 0],
                        [-70, 58, 4, 0],
                        [-85, 57, 4, 0],
                        [-100, 51, 4, 0],
                        [-112, 42, 4, 0],
                        [-123, 30, 4, 0],
                        [-129, 16, 4, 0],
                        [-132, 0, 4, 1],
                        [74, 0, 0, 1],
                        [74, 2, 2, 0],
                        [73, 5, 2, 0],
                        [70, 7, 2, 0],
                        [66, 7, 2, 0],
                        [62, 5, 2, 0],
                        [60, 0, 2, 0],
                        [60, -3, 2, 0],
                        [60, -6, 2, 0],
                        [62, -8, 2, 0],
                        [64, -11, 2, 0],
                        [67, -12, 2, 0],
                        [70, -13, 2, 0],
                        [73, -13, 2, 0],
                        [77, -13, 2, 0],
                        [81, -11, 2, 0],
                        [83, -8, 2, 0],
                        [86, -4, 2, 0],
                        [87, 0, 2, 0],
                        [87, 5, 2, 0],
                        [85, 9, 2, 0],
                        [83, 13, 2, 0],
                        [79, 16, 2, 0],
                        [75, 19, 2, 0],
                        [70, 20, 2, 0],
                        [65, 20, 2, 0],
                        [60, 18, 2, 0],
                        [55, 15, 2, 0],
                        [51, 11, 2, 0],
                        [48, 6, 2, 0],
                        [47, 0, 2, 0],
                        [47, -6, 2, 0],
                        [49, -12, 2, 0],
                        [53, -17, 2, 0],
                        [57, -22, 2, 0],
                        [63, -25, 2, 0],
                        [70, -26, 2, 0],
                        [77, -26, 2, 0],
                        [84, -24, 2, 0],
                        [90, -20, 2, 0],
                        [95, -14, 2, 0],
                        [98, -8, 2, 0],
                        [99, 0, 2, 0],
                        [99, 8, 2, 0],
                        [97, 15, 2, 0],
                        [92, 22, 2, 0],
                        [86, 27, 2, 0],
                        [78, 31, 2, 0],
                        [70, 33, 2, 0],
                        [61, 32, 2, 0],
                        [53, 29, 2, 0],
                        [46, 24, 2, 0],
                        [40, 17, 2, 0],
                        [36, 9, 2, 0],
                        [34, 0, 2, 0],
                        [35, -9, 2, 0],
                        [38, -18, 2, 0],
                        [43, -27, 2, 0],
                        [51, -33, 2, 0],
                        [60, -37, 2, 0],
                        [70, -39, 2, 0],
                        [80, -38, 2, 0],
                        [90, -35, 2, 0],
                        [99, -29, 2, 0],
                        [106, -21, 2, 0],
                        [110, -11, 2, 0],
                        [112, 0, 2, 0],
                        [112, 11, 2, 0],
                        [108, 22, 2, 0],
                        [101, 31, 2, 0],
                        [92, 39, 2, 0],
                        [82, 43, 2, 0],
                        [70, 46, 2, 0],
                        [58, 44, 2, 0],
                        [47, 40, 2, 0],
                        [37, 33, 2, 0],
                        [29, 24, 2, 0],
                        [23, 13, 2, 0],
                        [21, 0, 2, 0],
                        [22, -13, 2, 0],
                        [27, -25, 2, 0],
                        [34, -36, 2, 0],
                        [45, -44, 2, 0],
                        [57, -50, 2, 0],
                        [70, -52, 2, 0],
                        [84, -51, 2, 0],
                        [97, -46, 2, 0],
                        [108, -38, 2, 0],
                        [117, -27, 2, 0],
                        [123, -14, 2, 0],
                        [125, 0, 2, 0],
                        [124, 14, 2, 0],
                        [119, 28, 2, 0],
                        [110, 40, 2, 0],
                        [99, 50, 2, 0],
                        [85, 56, 2, 0],
                        [70, 58, 2, 0],
                        [55, 57, 2, 0],
                        [40, 51, 2, 0],
                        [28, 42, 2, 0],
                        [17, 30, 2, 0],
                        [11, 16, 2, 0],
                        [8, 0, 2, 1],
                        [214, 0, 0, 1],
                        [214, 2, 3, 0],
                        [213, 5, 3, 0],
                        [210, 7, 3, 0],
                        [206, 7, 3, 0],
                        [202, 5, 3, 0],
                        [200, 0, 3, 0],
                        [200, -3, 3, 0],
                        [200, -6, 3, 0],
                        [202, -8, 3, 0],
                        [204, -11, 3, 0],
                        [207, -12, 3, 0],
                        [210, -13, 3, 0],
                        [213, -13, 3, 0],
                        [217, -13, 3, 0],
                        [221, -11, 3, 0],
                        [223, -8, 3, 0],
                        [226, -4, 3, 0],
                        [227, 0, 3, 0],
                        [227, 5, 3, 0],
                        [225, 9, 3, 0],
                        [223, 13, 3, 0],
                        [219, 16, 3, 0],
                        [215, 19, 3, 0],
                        [210, 20, 3, 0],
                        [205, 20, 3, 0],
                        [200, 18, 3, 0],
                        [195, 15, 3, 0],
                        [191, 11, 3, 0],
                        [188, 6, 3, 0],
                        [187, 0, 3, 0],
                        [187, -6, 3, 0],
                        [189, -12, 3, 0],
                        [193, -17, 3, 0],
                        [197, -22, 3, 0],
                        [203, -25, 3, 0],
                        [210, -26, 3, 0],
                        [217, -26, 3, 0],
                        [224, -24, 3, 0],
                        [230, -20, 3, 0],
                        [235, -14, 3, 0],
                        [238, -8, 3, 0],
                        [239, 0, 3, 0],
                        [239, 8, 3, 0],
                        [237, 15, 3, 0],
                        [232, 22, 3, 0],
                        [226, 27, 3, 0],
                        [218, 31, 3, 0],
                        [210, 33, 3, 0],
                        [201, 32, 3, 0],
                        [193, 29, 3, 0],
                        [186, 24, 3, 0],
                        [180, 17, 3, 0],
                        [176, 9, 3, 0],
                        [174, 0, 3, 0],
                        [175, -9, 3, 0],
                        [178, -18, 3, 0],
                        [183, -27, 3, 0],
                        [191, -33, 3, 0],
                        [200, -37, 3, 0],
                        [210, -39, 3, 0],
                        [220, -38, 3, 0],
                        [230, -35, 3, 0],
                        [239, -29, 3, 0],
                        [246, -21, 3, 0],
                        [250, -11, 3, 0],
                        [252, 0, 3, 0],
                        [252, 11, 3, 0],
                        [248, 22, 3, 0],
                        [241, 31, 3, 0],
                        [232, 39, 3, 0],
                        [222, 43, 3, 0],
                        [210, 46, 3, 0],
                        [198, 44, 3, 0],
                        [187, 40, 3, 0],
                        [177, 33, 3, 0],
                        [169, 24, 3, 0],
                        [163, 13, 3, 0],
                        [161, 0, 3, 0],
                        [162, -13, 3, 0],
                        [167, -25, 3, 0],
                        [174, -36, 3, 0],
                        [185, -44, 3, 0],
                        [197, -50, 3, 0],
                        [210, -52, 3, 0],
                        [224, -51, 3, 0],
                        [237, -46, 3, 0],
                        [248, -38, 3, 0],
                        [257, -27, 3, 0],
                        [263, -14, 3, 0],
                        [265, 0, 3, 0],
                        [264, 14, 3, 0],
                        [259, 28, 3, 0],
                        [250, 40, 3, 0],
                        [239, 50, 3, 0],
                        [225, 56, 3, 0],
                        [210, 58, 3, 0],
                        [195, 57, 3, 0],
                        [180, 51, 3, 0],
                        [168, 42, 3, 0],
                        [157, 30, 3, 0],
                        [151, 16, 3, 0],
                        [148, 0, 3, 1],
                        [354, 0, 0, 1],
                        [354, 2, 6, 0],
                        [353, 5, 6, 0],
                        [350, 7, 6, 0],
                        [346, 7, 6, 0],
                        [342, 5, 6, 0],
                        [340, 0, 6, 0],
                        [340, -3, 6, 0],
                        [340, -6, 6, 0],
                        [342, -8, 6, 0],
                        [344, -11, 6, 0],
                        [347, -12, 6, 0],
                        [350, -13, 6, 0],
                        [353, -13, 6, 0],
                        [357, -13, 6, 0],
                        [361, -11, 6, 0],
                        [363, -8, 6, 0],
                        [366, -4, 6, 0],
                        [367, 0, 6, 0],
                        [367, 5, 6, 0],
                        [365, 9, 6, 0],
                        [363, 13, 6, 0],
                        [359, 16, 6, 0],
                        [355, 19, 6, 0],
                        [350, 20, 6, 0],
                        [345, 20, 6, 0],
                        [340, 18, 6, 0],
                        [335, 15, 6, 0],
                        [331, 11, 6, 0],
                        [328, 6, 6, 0],
                        [327, 0, 6, 0],
                        [327, -6, 6, 0],
                        [329, -12, 6, 0],
                        [333, -17, 6, 0],
                        [337, -22, 6, 0],
                        [343, -25, 6, 0],
                        [350, -26, 6, 0],
                        [357, -26, 6, 0],
                        [364, -24, 6, 0],
                        [370, -20, 6, 0],
                        [375, -14, 6, 0],
                        [378, -8, 6, 0],
                        [379, 0, 6, 0],
                        [379, 8, 6, 0],
                        [377, 15, 6, 0],
                        [372, 22, 6, 0],
                        [366, 27, 6, 0],
                        [358, 31, 6, 0],
                        [350, 33, 6, 0],
                        [341, 32, 6, 0],
                        [333, 29, 6, 0],
                        [326, 24, 6, 0],
                        [320, 17, 6, 0],
                        [316, 9, 6, 0],
                        [314, 0, 6, 0],
                        [315, -9, 6, 0],
                        [318, -18, 6, 0],
                        [323, -27, 6, 0],
                        [331, -33, 6, 0],
                        [340, -37, 6, 0],
                        [350, -39, 6, 0],
                        [360, -38, 6, 0],
                        [370, -35, 6, 0],
                        [379, -29, 6, 0],
                        [386, -21, 6, 0],
                        [390, -11, 6, 0],
                        [392, 0, 6, 0],
                        [392, 11, 6, 0],
                        [388, 22, 6, 0],
                        [381, 31, 6, 0],
                        [372, 39, 6, 0],
                        [362, 43, 6, 0],
                        [350, 46, 6, 0],
                        [338, 44, 6, 0],
                        [327, 40, 6, 0],
                        [317, 33, 6, 0],
                        [309, 24, 6, 0],
                        [303, 13, 6, 0],
                        [301, 0, 6, 0],
                        [302, -13, 6, 0],
                        [307, -25, 6, 0],
                        [314, -36, 6, 0],
                        [325, -44, 6, 0],
                        [337, -50, 6, 0],
                        [350, -52, 6, 0],
                        [364, -51, 6, 0],
                        [377, -46, 6, 0],
                        [388, -38, 6, 0],
                        [397, -27, 6, 0],
                        [403, -14, 6, 0],
                        [405, 0, 6, 0],
                        [404, 14, 6, 0],
                        [399, 28, 6, 0],
                        [390, 40, 6, 0],
                        [379, 50, 6, 0],
                        [365, 56, 6, 0],
                        [350, 58, 6, 0],
                        [335, 57, 6, 0],
                        [320, 51, 6, 0],
                        [308, 42, 6, 0],
                        [297, 30, 6, 0],
                        [291, 16, 6, 0],
                        [288, 0, 6, 1]
                    ],
                    [
                        [4, 360, 0, 1],
                        [4, 362, 4, 0],
                        [3, 365, 4, 0],
                        [0, 366, 4, 0],
                        [-4, 366, 4, 0],
                        [-7, 364, 4, 0],
                        [-10, 360, 4, 0],
                        [-10, 358, 4, 0],
                        [-9, 355, 4, 0],
                        [-8, 352, 4, 0],
                        [-6, 350, 4, 0],
                        [-3, 348, 4, 0],
                        [0, 348, 4, 0],
                        [3, 348, 4, 0],
                        [7, 348, 4, 0],
                        [10, 350, 4, 0],
                        [12, 353, 4, 0],
                        [14, 356, 4, 0],
                        [16, 360, 4, 0],
                        [16, 364, 4, 0],
                        [14, 368, 4, 0],
                        [12, 372, 4, 0],
                        [9, 375, 4, 0],
                        [5, 378, 4, 0],
                        [0, 378, 4, 0],
                        [-5, 378, 4, 0],
                        [-10, 377, 4, 0],
                        [-14, 374, 4, 0],
                        [-18, 370, 4, 0],
                        [-20, 366, 4, 0],
                        [-22, 360, 4, 0],
                        [-21, 354, 4, 0],
                        [-20, 349, 4, 0],
                        [-16, 344, 4, 0],
                        [-12, 340, 4, 0],
                        [-6, 337, 4, 0],
                        [0, 336, 4, 0],
                        [6, 336, 4, 0],
                        [13, 338, 4, 0],
                        [18, 342, 4, 0],
                        [23, 347, 4, 0],
                        [26, 353, 4, 0],
                        [28, 360, 4, 0],
                        [27, 367, 4, 0],
                        [25, 374, 4, 0],
                        [20, 380, 4, 0],
                        [15, 386, 4, 0],
                        [8, 389, 4, 0],
                        [0, 390, 4, 0],
                        [-8, 390, 4, 0],
                        [-16, 387, 4, 0],
                        [-23, 383, 4, 0],
                        [-28, 376, 4, 0],
                        [-32, 368, 4, 0],
                        [-34, 360, 4, 0],
                        [-33, 351, 4, 0],
                        [-30, 343, 4, 0],
                        [-25, 335, 4, 0],
                        [-18, 329, 4, 0],
                        [-9, 325, 4, 0],
                        [0, 324, 4, 0],
                        [10, 324, 4, 0],
                        [19, 328, 4, 0],
                        [27, 333, 4, 0],
                        [33, 341, 4, 0],
                        [38, 350, 4, 0],
                        [40, 360, 4, 0],
                        [39, 370, 4, 0],
                        [35, 380, 4, 0],
                        [29, 389, 4, 0],
                        [21, 396, 4, 0],
                        [11, 400, 4, 0],
                        [0, 402, 4, 0],
                        [-11, 402, 4, 0],
                        [-22, 398, 4, 0],
                        [-31, 391, 4, 0],
                        [-38, 382, 4, 0],
                        [-44, 372, 4, 0],
                        [-46, 360, 4, 0],
                        [-44, 348, 4, 0],
                        [-40, 337, 4, 0],
                        [-33, 327, 4, 0],
                        [-24, 319, 4, 0],
                        [-12, 314, 4, 0],
                        [0, 312, 4, 0],
                        [13, 313, 4, 0],
                        [25, 317, 4, 0],
                        [35, 325, 4, 0],
                        [44, 335, 4, 0],
                        [49, 347, 4, 0],
                        [52, 360, 4, 0],
                        [50, 374, 4, 0],
                        [46, 386, 4, 0],
                        [38, 398, 4, 0],
                        [27, 406, 4, 0],
                        [14, 412, 4, 0],
                        [0, 414, 4, 0],
                        [-14, 413, 4, 0],
                        [-28, 408, 4, 0],
                        [-40, 400, 4, 0],
                        [-49, 388, 4, 0],
                        [-55, 375, 4, 0],
                        [-58, 360, 4, 1],
                        [184, 312, 0, 1],
                        [184, 314, 2, 0],
                        [183, 317, 2, 0],
                        [180, 318, 2, 0],
                        [176, 318, 2, 0],
                        [173, 316, 2, 0],
                        [170, 312, 2, 0],
                        [170, 310, 2, 0],
                        [171, 307, 2, 0],
                        [172, 304, 2, 0],
                        [174, 302, 2, 0],
                        [177, 300, 2, 0],
                        [180, 300, 2, 0],
                        [183, 300, 2, 0],
                        [187, 300, 2, 0],
                        [190, 302, 2, 0],
                        [192, 305, 2, 0],
                        [194, 308, 2, 0],
                        [196, 312, 2, 0],
                        [196, 316, 2, 0],
                        [194, 320, 2, 0],
                        [192, 324, 2, 0],
                        [189, 327, 2, 0],
                        [185, 330, 2, 0],
                        [180, 330, 2, 0],
                        [175, 330, 2, 0],
                        [170, 329, 2, 0],
                        [166, 326, 2, 0],
                        [162, 322, 2, 0],
                        [160, 318, 2, 0],
                        [158, 312, 2, 0],
                        [159, 306, 2, 0],
                        [160, 301, 2, 0],
                        [164, 296, 2, 0],
                        [168, 292, 2, 0],
                        [174, 289, 2, 0],
                        [180, 288, 2, 0],
                        [186, 288, 2, 0],
                        [193, 290, 2, 0],
                        [198, 294, 2, 0],
                        [203, 299, 2, 0],
                        [206, 305, 2, 0],
                        [208, 312, 2, 0],
                        [207, 319, 2, 0],
                        [205, 326, 2, 0],
                        [200, 332, 2, 0],
                        [195, 338, 2, 0],
                        [188, 341, 2, 0],
                        [180, 342, 2, 0],
                        [172, 342, 2, 0],
                        [164, 339, 2, 0],
                        [157, 335, 2, 0],
                        [152, 328, 2, 0],
                        [148, 320, 2, 0],
                        [146, 312, 2, 0],
                        [147, 303, 2, 0],
                        [150, 295, 2, 0],
                        [155, 287, 2, 0],
                        [162, 281, 2, 0],
                        [171, 277, 2, 0],
                        [180, 276, 2, 0],
                        [190, 276, 2, 0],
                        [199, 280, 2, 0],
                        [207, 285, 2, 0],
                        [213, 293, 2, 0],
                        [218, 302, 2, 0],
                        [220, 312, 2, 0],
                        [219, 322, 2, 0],
                        [215, 332, 2, 0],
                        [209, 341, 2, 0],
                        [201, 348, 2, 0],
                        [191, 352, 2, 0],
                        [180, 354, 2, 0],
                        [169, 354, 2, 0],
                        [158, 350, 2, 0],
                        [149, 343, 2, 0],
                        [142, 334, 2, 0],
                        [136, 324, 2, 0],
                        [134, 312, 2, 0],
                        [136, 300, 2, 0],
                        [140, 289, 2, 0],
                        [147, 279, 2, 0],
                        [156, 271, 2, 0],
                        [168, 266, 2, 0],
                        [180, 264, 2, 0],
                        [193, 265, 2, 0],
                        [205, 269, 2, 0],
                        [215, 277, 2, 0],
                        [224, 287, 2, 0],
                        [229, 299, 2, 0],
                        [232, 312, 2, 0],
                        [230, 326, 2, 0],
                        [226, 338, 2, 0],
                        [218, 350, 2, 0],
                        [207, 358, 2, 0],
                        [194, 364, 2, 0],
                        [180, 366, 2, 0],
                        [166, 365, 2, 0],
                        [152, 360, 2, 0],
                        [140, 352, 2, 0],
                        [131, 340, 2, 0],
                        [125, 327, 2, 0],
                        [122, 312, 2, 1],
                        [316, 180, 0, 1],
                        [316, 182, 5, 0],
                        [315, 185, 5, 0],
                        [312, 186, 5, 0],
                        [308, 186, 5, 0],
                        [305, 184, 5, 0],
                        [302, 180, 5, 0],
                        [302, 178, 5, 0],
                        [303, 175, 5, 0],
                        [304, 172, 5, 0],
                        [306, 170, 5, 0],
                        [309, 168, 5, 0],
                        [312, 168, 5, 0],
                        [315, 168, 5, 0],
                        [319, 168, 5, 0],
                        [322, 170, 5, 0],
                        [324, 173, 5, 0],
                        [326, 176, 5, 0],
                        [328, 180, 5, 0],
                        [328, 184, 5, 0],
                        [326, 188, 5, 0],
                        [324, 192, 5, 0],
                        [321, 195, 5, 0],
                        [317, 198, 5, 0],
                        [312, 198, 5, 0],
                        [307, 198, 5, 0],
                        [302, 197, 5, 0],
                        [298, 194, 5, 0],
                        [294, 190, 5, 0],
                        [292, 186, 5, 0],
                        [290, 180, 5, 0],
                        [291, 174, 5, 0],
                        [292, 169, 5, 0],
                        [296, 164, 5, 0],
                        [300, 160, 5, 0],
                        [306, 157, 5, 0],
                        [312, 156, 5, 0],
                        [318, 156, 5, 0],
                        [325, 158, 5, 0],
                        [330, 162, 5, 0],
                        [335, 167, 5, 0],
                        [338, 173, 5, 0],
                        [340, 180, 5, 0],
                        [339, 187, 5, 0],
                        [337, 194, 5, 0],
                        [332, 200, 5, 0],
                        [327, 206, 5, 0],
                        [320, 209, 5, 0],
                        [312, 210, 5, 0],
                        [304, 210, 5, 0],
                        [296, 207, 5, 0],
                        [289, 203, 5, 0],
                        [284, 196, 5, 0],
                        [280, 188, 5, 0],
                        [278, 180, 5, 0],
                        [279, 171, 5, 0],
                        [282, 163, 5, 0],
                        [287, 155, 5, 0],
                        [294, 149, 5, 0],
                        [303, 145, 5, 0],
                        [312, 144, 5, 0],
                        [322, 144, 5, 0],
                        [331, 148, 5, 0],
                        [339, 153, 5, 0],
                        [345, 161, 5, 0],
                        [350, 170, 5, 0],
                        [352, 180, 5, 0],
                        [351, 190, 5, 0],
                        [347, 200, 5, 0],
                        [341, 209, 5, 0],
                        [333, 216, 5, 0],
                        [323, 220, 5, 0],
                        [312, 222, 5, 0],
                        [301, 222, 5, 0],
                        [290, 218, 5, 0],
                        [281, 211, 5, 0],
                        [274, 202, 5, 0],
                        [268, 192, 5, 0],
                        [266, 180, 5, 0],
                        [268, 168, 5, 0],
                        [272, 157, 5, 0],
                        [279, 147, 5, 0],
                        [288, 139, 5, 0],
                        [300, 134, 5, 0],
                        [312, 132, 5, 0],
                        [325, 133, 5, 0],
                        [337, 137, 5, 0],
                        [347, 145, 5, 0],
                        [356, 155, 5, 0],
                        [361, 167, 5, 0],
                        [364, 180, 5, 0],
                        [362, 194, 5, 0],
                        [358, 206, 5, 0],
                        [350, 218, 5, 0],
                        [339, 226, 5, 0],
                        [326, 232, 5, 0],
                        [312, 234, 5, 0],
                        [298, 233, 5, 0],
                        [284, 228, 5, 0],
                        [272, 220, 5, 0],
                        [263, 208, 5, 0],
                        [257, 195, 5, 0],
                        [254, 180, 5, 1],
                        [364, 0, 0, 1],
                        [364, 2, 6, 0],
                        [363, 5, 6, 0],
                        [360, 6, 6, 0],
                        [356, 6, 6, 0],
                        [353, 4, 6, 0],
                        [350, 0, 6, 0],
                        [350, -2, 6, 0],
                        [351, -5, 6, 0],
                        [352, -8, 6, 0],
                        [354, -10, 6, 0],
                        [357, -12, 6, 0],
                        [360, -12, 6, 0],
                        [363, -12, 6, 0],
                        [367, -12, 6, 0],
                        [370, -10, 6, 0],
                        [372, -7, 6, 0],
                        [374, -4, 6, 0],
                        [376, 0, 6, 0],
                        [376, 4, 6, 0],
                        [374, 8, 6, 0],
                        [372, 12, 6, 0],
                        [369, 15, 6, 0],
                        [365, 18, 6, 0],
                        [360, 18, 6, 0],
                        [355, 18, 6, 0],
                        [350, 17, 6, 0],
                        [346, 14, 6, 0],
                        [342, 10, 6, 0],
                        [340, 6, 6, 0],
                        [338, 0, 6, 0],
                        [339, -6, 6, 0],
                        [340, -11, 6, 0],
                        [344, -16, 6, 0],
                        [348, -20, 6, 0],
                        [354, -23, 6, 0],
                        [360, -24, 6, 0],
                        [366, -24, 6, 0],
                        [373, -22, 6, 0],
                        [378, -18, 6, 0],
                        [383, -13, 6, 0],
                        [386, -7, 6, 0],
                        [388, 0, 6, 0],
                        [387, 7, 6, 0],
                        [385, 14, 6, 0],
                        [380, 20, 6, 0],
                        [375, 26, 6, 0],
                        [368, 29, 6, 0],
                        [360, 30, 6, 0],
                        [352, 30, 6, 0],
                        [344, 27, 6, 0],
                        [337, 23, 6, 0],
                        [332, 16, 6, 0],
                        [328, 8, 6, 0],
                        [326, 0, 6, 0],
                        [327, -9, 6, 0],
                        [330, -17, 6, 0],
                        [335, -25, 6, 0],
                        [342, -31, 6, 0],
                        [351, -35, 6, 0],
                        [360, -36, 6, 0],
                        [370, -36, 6, 0],
                        [379, -32, 6, 0],
                        [387, -27, 6, 0],
                        [393, -19, 6, 0],
                        [398, -10, 6, 0],
                        [400, 0, 6, 0],
                        [399, 10, 6, 0],
                        [395, 20, 6, 0],
                        [389, 29, 6, 0],
                        [381, 36, 6, 0],
                        [371, 40, 6, 0],
                        [360, 42, 6, 0],
                        [349, 42, 6, 0],
                        [338, 38, 6, 0],
                        [329, 31, 6, 0],
                        [322, 22, 6, 0],
                        [316, 12, 6, 0],
                        [314, 0, 6, 0],
                        [316, -12, 6, 0],
                        [320, -23, 6, 0],
                        [327, -33, 6, 0],
                        [336, -41, 6, 0],
                        [348, -46, 6, 0],
                        [360, -48, 6, 0],
                        [373, -47, 6, 0],
                        [385, -43, 6, 0],
                        [395, -35, 6, 0],
                        [404, -25, 6, 0],
                        [409, -13, 6, 0],
                        [412, 0, 6, 0],
                        [410, 14, 6, 0],
                        [406, 26, 6, 0],
                        [398, 38, 6, 0],
                        [387, 46, 6, 0],
                        [374, 52, 6, 0],
                        [360, 54, 6, 0],
                        [346, 53, 6, 0],
                        [332, 48, 6, 0],
                        [320, 40, 6, 0],
                        [311, 28, 6, 0],
                        [305, 15, 6, 0],
                        [302, 0, 6, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [0, 0, 0, 1],
                        [13, -6, 1, 0],
                        [28, -13, 1, 0],
                        [40, -18, 1, 0],
                        [58, -6, 1, 0],
                        [71, 16, 1, 0],
                        [79, 31, 1, 0],
                        [89, 38, 1, 0],
                        [101, 31, 4, 0],
                        [112, 13, 4, 0],
                        [119, 1, 4, 0],
                        [127, -10, 4, 0],
                        [139, -6, 4, 0],
                        [149, 11, 4, 0],
                        [158, 31, 4, 0],
                        [167, 49, 4, 0],
                        [176, 59, 4, 0],
                        [187, 49, 2, 0],
                        [197, 31, 2, 0],
                        [208, 10, 2, 0],
                        [217, -4, 2, 0],
                        [227, 2, 2, 0],
                        [236, 26, 2, 0],
                        [246, 46, 2, 0],
                        [256, 66, 2, 0],
                        [263, 72, 5, 0],
                        [274, 65, 5, 0],
                        [281, 47, 5, 0],
                        [289, 29, 5, 0],
                        [298, 10, 5, 0],
                        [306, 2, 5, 0],
                        [316, 12, 5, 0],
                        [325, 35, 5, 0],
                        [334, 61, 3, 0],
                        [340, 85, 3, 0],
                        [350, 97, 3, 0],
                        [364, 79, 3, 0],
                        [374, 52, 3, 0],
                        [379, 29, 3, 0],
                        [386, 16, 3, 0],
                        [391, 8, 3, 0],
                        [404, 22, 6, 0],
                        [413, 50, 6, 0],
                        [420, 78, 6, 0],
                        [431, 100, 6, 0],
                        [439, 108, 6, 0],
                        [449, 97, 6, 0],
                        [457, 78, 6, 0],
                        [472, 47, 6, 0],
                        [484, 19, 6, 3]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 1, 1],
                        [-392, 20, 1, 0],
                        [-384, 35, 1, 0],
                        [-376, 40, 1, 0],
                        [-368, 35, 1, 0],
                        [-360, 20, 1, 0],
                        [-352, 0, 1, 0],
                        [-344, -20, 1, 0],
                        [-336, -35, 1, 0],
                        [-328, -40, 1, 0],
                        [-320, -35, 1, 0],
                        [-312, -20, 1, 0],
                        [-304, 0, 1, 0],
                        [-296, 20, 4, 0],
                        [-288, 35, 4, 0],
                        [-280, 40, 4, 0],
                        [-272, 35, 4, 0],
                        [-264, 20, 4, 0],
                        [-256, 0, 4, 0],
                        [-248, -20, 4, 0],
                        [-240, -35, 4, 0],
                        [-232, -40, 4, 0],
                        [-224, -35, 4, 0],
                        [-216, -20, 4, 0],
                        [-208, 0, 4, 0],
                        [-200, 20, 2, 0],
                        [-192, 35, 2, 0],
                        [-184, 40, 2, 0],
                        [-176, 35, 2, 0],
                        [-168, 20, 2, 0],
                        [-160, 0, 2, 0],
                        [-152, -20, 2, 0],
                        [-144, -35, 2, 0],
                        [-136, -40, 2, 0],
                        [-128, -35, 2, 0],
                        [-120, -20, 2, 0],
                        [-112, 0, 2, 0],
                        [-104, 20, 5, 0],
                        [-96, 35, 5, 0],
                        [-88, 40, 5, 0],
                        [-80, 35, 5, 0],
                        [-72, 20, 5, 0],
                        [-64, 0, 5, 0],
                        [-56, -20, 5, 0],
                        [-48, -35, 5, 0],
                        [-40, -40, 5, 0],
                        [-32, -35, 5, 0],
                        [-24, -20, 5, 0],
                        [-16, 0, 5, 0],
                        [-8, 20, 3, 0],
                        [0, 35, 3, 0],
                        [8, 40, 3, 0],
                        [16, 35, 3, 0],
                        [24, 20, 3, 0],
                        [32, 0, 3, 0],
                        [40, -20, 3, 0],
                        [48, -35, 3, 0],
                        [56, -40, 3, 0],
                        [64, -35, 3, 0],
                        [72, -20, 3, 0],
                        [80, 0, 3, 0],
                        [88, 20, 6, 0],
                        [96, 35, 6, 0],
                        [104, 40, 6, 0],
                        [112, 35, 6, 0],
                        [120, 20, 6, 0],
                        [128, 0, 6, 0],
                        [136, -20, 6, 0],
                        [144, -35, 6, 0],
                        [152, -40, 6, 0],
                        [160, -35, 6, 0],
                        [168, -20, 6, 0],
                        [176, 0, 6, 0],
                        [184, 20, 7, 0],
                        [192, 35, 7, 0],
                        [200, 40, 7, 0],
                        [208, 35, 7, 0],
                        [216, 20, 7, 0],
                        [224, 0, 7, 0],
                        [232, -20, 7, 0],
                        [240, -35, 7, 0],
                        [248, -40, 7, 0],
                        [256, -35, 7, 0],
                        [264, -20, 7, 0],
                        [272, 0, 7, 0],
                        [280, 20, 4, 0],
                        [288, 35, 4, 0],
                        [296, 40, 4, 0],
                        [304, 35, 4, 0],
                        [312, 20, 4, 0],
                        [320, 0, 4, 0],
                        [328, -20, 4, 0],
                        [336, -35, 4, 0],
                        [344, -40, 4, 0],
                        [352, -35, 4, 0],
                        [360, -20, 4, 0],
                        [368, 0, 4, 0],
                        [376, 20, 5, 0],
                        [384, 35, 5, 0],
                        [392, 40, 5, 0],
                        [400, 35, 5, 4]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-392, 4, 1, 0],
                        [-384, 7, 1, 0],
                        [-376, 8, 1, 0],
                        [-368, 7, 1, 0],
                        [-360, 4, 1, 0],
                        [-352, 0, 1, 0],
                        [-344, -4, 1, 0],
                        [-336, -7, 1, 0],
                        [-328, -8, 1, 0],
                        [-320, -7, 1, 0],
                        [-312, -4, 1, 0],
                        [-304, 0, 1, 0],
                        [-296, 4, 4, 0],
                        [-288, 7, 4, 0],
                        [-280, 8, 4, 0],
                        [-272, 7, 4, 0],
                        [-264, 4, 4, 0],
                        [-256, 0, 4, 0],
                        [-248, -4, 4, 0],
                        [-240, -7, 4, 0],
                        [-232, -8, 4, 0],
                        [-224, -7, 4, 0],
                        [-216, -4, 4, 0],
                        [-208, 0, 4, 0],
                        [-200, 4, 2, 0],
                        [-192, 7, 2, 0],
                        [-184, 8, 2, 0],
                        [-176, 7, 2, 0],
                        [-168, 4, 2, 0],
                        [-160, 0, 2, 0],
                        [-152, -4, 2, 0],
                        [-144, -7, 2, 0],
                        [-136, -8, 2, 0],
                        [-128, -7, 2, 0],
                        [-120, -4, 2, 0],
                        [-112, 0, 2, 0],
                        [-104, 4, 5, 0],
                        [-96, 7, 5, 0],
                        [-88, 8, 5, 0],
                        [-80, 7, 5, 0],
                        [-72, 4, 5, 0],
                        [-64, 0, 5, 0],
                        [-56, -4, 5, 0],
                        [-48, -7, 5, 0],
                        [-40, -8, 5, 0],
                        [-32, -7, 5, 0],
                        [-24, -4, 5, 0],
                        [-16, 0, 5, 0],
                        [-8, 4, 3, 0],
                        [0, 7, 3, 0],
                        [8, 8, 3, 0],
                        [16, 7, 3, 0],
                        [24, 4, 3, 0],
                        [32, 0, 3, 0],
                        [40, -4, 3, 0],
                        [48, -7, 3, 0],
                        [56, -8, 3, 0],
                        [64, -7, 3, 0],
                        [72, -4, 3, 0],
                        [80, 0, 3, 0],
                        [88, 4, 6, 0],
                        [96, 7, 6, 0],
                        [104, 8, 6, 0],
                        [112, 7, 6, 0],
                        [120, 4, 6, 0],
                        [128, 0, 6, 0],
                        [136, -4, 6, 0],
                        [144, -7, 6, 0],
                        [152, -8, 6, 0],
                        [160, -7, 6, 0],
                        [168, -4, 6, 0],
                        [176, 0, 6, 0],
                        [184, 4, 7, 0],
                        [192, 7, 7, 0],
                        [200, 8, 7, 0],
                        [208, 7, 7, 0],
                        [216, 4, 7, 0],
                        [224, 0, 7, 0],
                        [232, -4, 7, 0],
                        [240, -7, 7, 0],
                        [248, -8, 7, 0],
                        [256, -7, 7, 0],
                        [264, -4, 7, 0],
                        [272, 0, 7, 0],
                        [280, 4, 4, 0],
                        [288, 7, 4, 0],
                        [296, 8, 4, 0],
                        [304, 7, 4, 0],
                        [312, 4, 4, 0],
                        [320, 0, 4, 0],
                        [328, -4, 4, 0],
                        [336, -7, 4, 0],
                        [344, -8, 4, 0],
                        [352, -7, 4, 0],
                        [360, -4, 4, 0],
                        [368, 0, 5, 0],
                        [376, 4, 5, 0],
                        [384, 7, 5, 0],
                        [392, 8, 5, 0],
                        [400, 7, 5, 4]
                    ],
                    [
                        [0, 0, 0, 1],
                        [0, 0, 1, 1],
                        [20, 8, 1, 0],
                        [35, 16, 1, 0],
                        [40, 24, 1, 0],
                        [35, 32, 1, 0],
                        [20, 40, 1, 0],
                        [0, 48, 1, 0],
                        [-20, 56, 1, 0],
                        [-35, 64, 1, 0],
                        [-40, 72, 1, 0],
                        [-35, 80, 1, 0],
                        [-20, 88, 1, 0],
                        [0, 96, 1, 0],
                        [20, 104, 4, 0],
                        [35, 112, 4, 0],
                        [40, 120, 4, 0],
                        [35, 128, 4, 0],
                        [20, 136, 4, 0],
                        [0, 144, 4, 0],
                        [-20, 152, 4, 0],
                        [-35, 160, 4, 0],
                        [-40, 168, 4, 0],
                        [-35, 176, 4, 0],
                        [-20, 184, 4, 0],
                        [0, 192, 4, 0],
                        [20, 200, 2, 0],
                        [35, 208, 2, 0],
                        [40, 216, 2, 0],
                        [35, 224, 2, 0],
                        [20, 232, 2, 0],
                        [0, 240, 2, 0],
                        [-20, 248, 2, 0],
                        [-35, 256, 2, 0],
                        [-40, 264, 2, 0],
                        [-35, 272, 2, 0],
                        [-20, 280, 2, 0],
                        [0, 288, 2, 0],
                        [20, 296, 5, 0],
                        [35, 304, 5, 0],
                        [40, 312, 5, 0],
                        [35, 320, 5, 0],
                        [20, 328, 5, 0],
                        [0, 336, 5, 0],
                        [-20, 344, 5, 0],
                        [-35, 352, 5, 0],
                        [-40, 360, 5, 0],
                        [-35, 368, 5, 0],
                        [-20, 376, 5, 0],
                        [0, 384, 5, 0],
                        [20, 392, 3, 0],
                        [35, 400, 3, 0],
                        [40, 408, 3, 0],
                        [35, 416, 3, 0],
                        [20, 424, 3, 0],
                        [0, 432, 3, 3]
                    ],
                    [
                        [0, 0, 0, 1],
                        [20, 8, 1, 0],
                        [35, 16, 1, 0],
                        [40, 24, 1, 0],
                        [35, 32, 1, 0],
                        [20, 40, 1, 0],
                        [0, 48, 1, 0],
                        [-20, 56, 1, 0],
                        [-35, 64, 1, 0],
                        [-40, 72, 1, 0],
                        [-35, 80, 1, 0],
                        [-20, 88, 1, 0],
                        [0, 96, 1, 0],
                        [20, 104, 4, 0],
                        [35, 112, 4, 0],
                        [40, 120, 4, 0],
                        [35, 128, 4, 0],
                        [20, 136, 4, 0],
                        [0, 144, 4, 0],
                        [-20, 152, 4, 0],
                        [-35, 160, 4, 0],
                        [-40, 168, 4, 0],
                        [-35, 176, 4, 0],
                        [-20, 184, 4, 0],
                        [0, 192, 4, 0],
                        [20, 200, 2, 0],
                        [35, 208, 2, 0],
                        [40, 216, 2, 0],
                        [35, 224, 2, 0],
                        [20, 232, 2, 0],
                        [0, 240, 2, 0],
                        [-20, 248, 2, 0],
                        [-35, 256, 2, 0],
                        [-40, 264, 2, 0],
                        [-35, 272, 2, 0],
                        [-20, 280, 2, 0],
                        [0, 288, 2, 0],
                        [20, 296, 5, 0],
                        [35, 304, 5, 0],
                        [40, 312, 5, 0],
                        [35, 320, 5, 0],
                        [20, 328, 5, 0],
                        [0, 336, 5, 0],
                        [-20, 344, 5, 0],
                        [-35, 352, 5, 0],
                        [-40, 360, 5, 0],
                        [-35, 368, 5, 0],
                        [-20, 376, 5, 0],
                        [0, 384, 5, 0],
                        [20, 392, 3, 0],
                        [35, 400, 3, 0],
                        [40, 408, 3, 0],
                        [35, 416, 3, 0],
                        [20, 424, 3, 0],
                        [0, 432, 3, 4],
                        [0, 0, 0, 1],
                        [-17, 13, 7, 0],
                        [-31, 22, 7, 0],
                        [-41, 23, 7, 0],
                        [-45, 14, 7, 0],
                        [-45, -3, 7, 0],
                        [-42, -24, 7, 0],
                        [-38, -45, 7, 0],
                        [-38, -62, 7, 0],
                        [-42, -71, 7, 0],
                        [-52, -70, 7, 0],
                        [-66, -61, 7, 0],
                        [-83, -48, 7, 0],
                        [-100, -35, 7, 0],
                        [-114, -26, 7, 0],
                        [-124, -25, 7, 0],
                        [-128, -34, 7, 0],
                        [-128, -51, 7, 0],
                        [-125, -72, 7, 0],
                        [-122, -93, 7, 0],
                        [-121, -110, 7, 0],
                        [-125, -119, 7, 0],
                        [-135, -118, 7, 0],
                        [-149, -109, 7, 0],
                        [-166, -96, 7, 0],
                        [-183, -83, 7, 0],
                        [-197, -74, 7, 0],
                        [-207, -73, 7, 0],
                        [-211, -82, 7, 0],
                        [-211, -99, 7, 0],
                        [-208, -120, 7, 0],
                        [-205, -141, 7, 0],
                        [-204, -158, 7, 0],
                        [-209, -167, 7, 0],
                        [-218, -166, 7, 0],
                        [-232, -157, 7, 0],
                        [-249, -144, 7, 0],
                        [-266, -131, 7, 0],
                        [-281, -122, 7, 0],
                        [-290, -121, 7, 0],
                        [-294, -130, 7, 0],
                        [-294, -147, 7, 0],
                        [-291, -168, 7, 0],
                        [-288, -189, 7, 0],
                        [-288, -206, 7, 0],
                        [-292, -215, 7, 0],
                        [-301, -214, 7, 0],
                        [-316, -205, 7, 0],
                        [-333, -192, 7, 0],
                        [-349, -179, 7, 0],
                        [-364, -170, 7, 0],
                        [-373, -169, 7, 0],
                        [-378, -178, 7, 0],
                        [-377, -195, 7, 0],
                        [-374, -216, 7, 4],
                        [0, 0, 0, 1],
                        [-3, -21, 7, 0],
                        [-3, -38, 7, 0],
                        [1, -47, 7, 0],
                        [10, -46, 7, 0],
                        [25, -37, 7, 0],
                        [42, -24, 7, 0],
                        [58, -11, 7, 0],
                        [73, -2, 7, 0],
                        [82, -1, 7, 0],
                        [87, -10, 7, 0],
                        [86, -27, 7, 0],
                        [83, -48, 7, 0],
                        [80, -69, 7, 0],
                        [80, -86, 7, 0],
                        [84, -95, 7, 0],
                        [94, -94, 7, 0],
                        [108, -85, 7, 0],
                        [125, -72, 7, 0],
                        [142, -59, 7, 0],
                        [156, -50, 7, 0],
                        [165, -49, 7, 0],
                        [170, -58, 7, 0],
                        [169, -75, 7, 0],
                        [166, -96, 7, 0],
                        [163, -117, 7, 0],
                        [163, -134, 7, 0],
                        [167, -143, 7, 0],
                        [177, -142, 7, 0],
                        [191, -133, 7, 0],
                        [208, -120, 7, 0],
                        [225, -107, 7, 0],
                        [239, -98, 7, 0],
                        [249, -97, 7, 0],
                        [253, -106, 7, 0],
                        [252, -123, 7, 0],
                        [249, -144, 7, 0],
                        [246, -165, 7, 0],
                        [246, -182, 7, 0],
                        [250, -191, 7, 0],
                        [260, -190, 7, 0],
                        [274, -181, 7, 0],
                        [291, -168, 7, 0],
                        [308, -155, 7, 0],
                        [322, -146, 7, 0],
                        [332, -145, 7, 0],
                        [336, -154, 7, 0],
                        [336, -171, 7, 0],
                        [333, -192, 7, 0],
                        [329, -213, 7, 0],
                        [329, -230, 7, 0],
                        [333, -239, 7, 0],
                        [343, -238, 7, 0],
                        [357, -229, 7, 0],
                        [374, -216, 7, 4]
                    ],
                    [
                        [42, -23, 0, 1],
                        [60, -8, 7, 0],
                        [72, 13, 7, 0],
                        [78, 42, 7, 0],
                        [71, 86, 7, 0],
                        [47, 122, 7, 0],
                        [20, 148, 7, 0],
                        [-6, 166, 7, 0],
                        [-38, 179, 7, 0],
                        [-88, 188, 7, 0],
                        [-122, 191, 7, 0],
                        [-175, 196, 7, 0],
                        [-232, 203, 7, 0],
                        [-275, 206, 7, 0],
                        [-305, 211, 7, 0],
                        [-352, 214, 7, 0],
                        [-378, 218, 7, 3],
                        [41, 25, 0, 1],
                        [41, 35, 1, 0],
                        [37, 49, 1, 0],
                        [29, 62, 1, 0],
                        [10, 82, 1, 0],
                        [-10, 92, 1, 0],
                        [-40, 102, 1, 0],
                        [-71, 102, 1, 0],
                        [-100, 97, 1, 0],
                        [-140, 80, 1, 0],
                        [-170, 60, 1, 0],
                        [-194, 35, 1, 0],
                        [-215, 10, 1, 0],
                        [-265, -61, 1, 0],
                        [-298, -104, 1, 0],
                        [-346, -178, 1, 0],
                        [-379, -221, 1, 3],
                        [-1, 50, 0, 1],
                        [-18, 55, 4, 0],
                        [-48, 54, 4, 0],
                        [-74, 46, 4, 0],
                        [-107, 20, 4, 0],
                        [-128, -14, 4, 0],
                        [-138, -46, 4, 0],
                        [-142, -85, 4, 0],
                        [-137, -130, 4, 0],
                        [-101, -215, 4, 0],
                        [-67, -284, 4, 0],
                        [-32, -365, 4, 0],
                        [-1, -437, 4, 3],
                        [-43, 23, 0, 1],
                        [-58, 12, 2, 0],
                        [-67, -5, 2, 0],
                        [-74, -29, 2, 0],
                        [-76, -50, 2, 0],
                        [-73, -68, 2, 0],
                        [-66, -94, 2, 0],
                        [-54, -113, 2, 0],
                        [-35, -136, 2, 0],
                        [-10, -158, 2, 0],
                        [25, -174, 2, 0],
                        [62, -185, 2, 0],
                        [96, -190, 2, 0],
                        [136, -193, 2, 0],
                        [192, -199, 2, 0],
                        [268, -210, 2, 0],
                        [374, -221, 2, 3],
                        [-41, -23, 0, 1],
                        [-40, -35, 5, 0],
                        [-36, -50, 5, 0],
                        [-28, -66, 5, 0],
                        [-12, -79, 5, 0],
                        [6, -91, 5, 0],
                        [24, -98, 5, 0],
                        [65, -104, 5, 0],
                        [98, -100, 5, 0],
                        [136, -84, 5, 0],
                        [164, -66, 5, 0],
                        [224, 1, 5, 0],
                        [248, 44, 5, 0],
                        [288, 94, 5, 0],
                        [346, 175, 5, 0],
                        [378, 217, 5, 3],
                        [-1, -48, 0, 1],
                        [11, -53, 6, 0],
                        [34, -58, 6, 0],
                        [56, -53, 6, 0],
                        [83, -41, 6, 0],
                        [103, -24, 6, 0],
                        [118, -5, 6, 0],
                        [133, 28, 6, 0],
                        [139, 61, 6, 0],
                        [138, 102, 6, 0],
                        [130, 143, 6, 0],
                        [90, 233, 6, 0],
                        [59, 301, 6, 0],
                        [28, 372, 6, 0],
                        [0, 437, 6, 3]
                    ],
                    [
                        [0, 336, 0, 1],
                        [42, 416, 7, 0],
                        [78, 325, 7, 0],
                        [135, 401, 7, 0],
                        [146, 300, 7, 0],
                        [224, 350, 7, 0],
                        [215, 251, 7, 0],
                        [300, 285, 7, 0],
                        [262, 194, 7, 0],
                        [359, 200, 7, 0],
                        [304, 120, 7, 0],
                        [399, 104, 7, 0],
                        [325, 38, 7, 0],
                        [407, 0, 2, 0],
                        [325, -38, 2, 0],
                        [399, -104, 2, 0],
                        [304, -120, 2, 0],
                        [359, -200, 2, 0],
                        [262, -194, 2, 0],
                        [300, -285, 2, 0],
                        [215, -251, 2, 0],
                        [224, -350, 2, 0],
                        [146, -300, 2, 0],
                        [135, -401, 2, 0],
                        [78, -325, 2, 0],
                        [42, -416, 2, 0],
                        [0, -336, 2, 1],
                        [-42, -416, 5, 0],
                        [-78, -325, 5, 0],
                        [-135, -401, 5, 0],
                        [-146, -300, 5, 0],
                        [-224, -350, 5, 0],
                        [-215, -251, 5, 0],
                        [-300, -285, 5, 0],
                        [-262, -194, 5, 0],
                        [-359, -200, 5, 0],
                        [-304, -120, 5, 0],
                        [-399, -104, 5, 0],
                        [-325, -38, 5, 0],
                        [-407, 0, 5, 0],
                        [-325, 38, 6, 0],
                        [-399, 104, 6, 0],
                        [-304, 120, 6, 0],
                        [-359, 200, 6, 0],
                        [-262, 194, 6, 0],
                        [-300, 285, 6, 0],
                        [-215, 251, 6, 0],
                        [-224, 350, 6, 0],
                        [-146, 300, 6, 0],
                        [-135, 401, 6, 0],
                        [-78, 325, 6, 0],
                        [-42, 416, 6, 0],
                        [0, 336, 6, 1]
                    ],
                    [
                        [394, 40, 0, 1],
                        [256, -101, 7, 1],
                        [304, 274, 1, 1],
                        [270, 83, 7, 1],
                        [83, 405, 2, 1],
                        [176, 227, 7, 1],
                        [-164, 382, 3, 1],
                        [7, 295, 7, 1],
                        [-358, 216, 4, 1],
                        [-162, 248, 7, 1],
                        [-414, -29, 5, 1],
                        [-274, 108, 7, 1],
                        [-313, -266, 6, 1],
                        [-284, -76, 7, 1],
                        [-97, -396, 1, 1],
                        [-184, -220, 7, 1],
                        [153, -374, 2, 1],
                        [-22, -286, 7, 1],
                        [344, -205, 3, 1],
                        [151, -234, 7, 1],
                        [394, 40, 4, 1]
                    ],
                    [
                        [-350, 60, 0, 1],
                        [-320, 52, 7, 0],
                        [-298, 30, 7, 0],
                        [-290, 0, 7, 0],
                        [-298, -30, 7, 0],
                        [-320, -52, 7, 0],
                        [-350, -60, 7, 0],
                        [-380, -52, 7, 0],
                        [-402, -30, 7, 0],
                        [-410, 0, 7, 0],
                        [-402, 30, 7, 0],
                        [-380, 52, 7, 0],
                        [-350, 60, 7, 1],
                        [-247, 307, 0, 1],
                        [-217, 299, 2, 0],
                        [-195, 277, 2, 0],
                        [-187, 247, 2, 0],
                        [-195, 217, 2, 0],
                        [-217, 195, 2, 0],
                        [-247, 187, 2, 0],
                        [-277, 195, 2, 0],
                        [-299, 217, 2, 0],
                        [-307, 247, 2, 0],
                        [-299, 277, 2, 0],
                        [-277, 299, 2, 0],
                        [-247, 307, 2, 1],
                        [0, 410, 0, 1],
                        [30, 402, 7, 0],
                        [52, 380, 7, 0],
                        [60, 350, 7, 0],
                        [52, 320, 7, 0],
                        [30, 298, 7, 0],
                        [0, 290, 7, 0],
                        [-30, 298, 7, 0],
                        [-52, 320, 7, 0],
                        [-60, 350, 7, 0],
                        [-52, 380, 7, 0],
                        [-30, 402, 7, 0],
                        [0, 410, 7, 1],
                        [247, 307, 0, 1],
                        [277, 299, 4, 0],
                        [299, 277, 4, 0],
                        [307, 247, 4, 0],
                        [299, 217, 4, 0],
                        [277, 195, 4, 0],
                        [247, 187, 4, 0],
                        [217, 195, 4, 0],
                        [195, 217, 4, 0],
                        [187, 247, 4, 0],
                        [195, 277, 4, 0],
                        [217, 299, 4, 0],
                        [247, 307, 4, 1],
                        [350, 60, 0, 1],
                        [380, 52, 7, 0],
                        [402, 30, 7, 0],
                        [410, 0, 7, 0],
                        [402, -30, 7, 0],
                        [380, -52, 7, 0],
                        [350, -60, 7, 0],
                        [320, -52, 7, 0],
                        [298, -30, 7, 0],
                        [290, 0, 7, 0],
                        [298, 30, 7, 0],
                        [320, 52, 7, 0],
                        [350, 60, 7, 1],
                        [247, -187, 0, 1],
                        [277, -195, 5, 0],
                        [299, -217, 5, 0],
                        [307, -247, 5, 0],
                        [299, -277, 5, 0],
                        [277, -299, 5, 0],
                        [247, -307, 5, 0],
                        [217, -299, 5, 0],
                        [195, -277, 5, 0],
                        [187, -247, 5, 0],
                        [195, -217, 5, 0],
                        [217, -195, 5, 0],
                        [247, -187, 5, 1],
                        [0, -290, 0, 1],
                        [30, -298, 7, 0],
                        [52, -320, 7, 0],
                        [60, -350, 7, 0],
                        [52, -380, 7, 0],
                        [30, -402, 7, 0],
                        [0, -410, 7, 0],
                        [-30, -402, 7, 0],
                        [-52, -380, 7, 0],
                        [-60, -350, 7, 0],
                        [-52, -320, 7, 0],
                        [-30, -298, 7, 0],
                        [0, -290, 7, 1],
                        [-247, -187, 0, 1],
                        [-217, -195, 6, 0],
                        [-195, -217, 6, 0],
                        [-187, -247, 6, 0],
                        [-195, -277, 6, 0],
                        [-217, -299, 6, 0],
                        [-247, -307, 6, 0],
                        [-277, -299, 6, 0],
                        [-299, -277, 6, 0],
                        [-307, -247, 6, 0],
                        [-299, -217, 6, 0],
                        [-277, -195, 6, 0],
                        [-247, -187, 6, 1]
                    ],
                    [
                        [400, 0, 0, 1],
                        [144, 38, 6, 0],
                        [346, 200, 6, 0],
                        [106, 106, 6, 0],
                        [200, 346, 6, 0],
                        [38, 144, 6, 0],
                        [0, 400, 6, 0],
                        [-38, 144, 6, 0],
                        [-200, 346, 6, 0],
                        [-106, 106, 6, 0],
                        [-346, 200, 6, 0],
                        [-144, 38, 6, 0],
                        [-400, 0, 6, 0],
                        [-144, -38, 6, 0],
                        [-346, -200, 6, 0],
                        [-106, -106, 6, 0],
                        [-200, -346, 6, 0],
                        [-38, -144, 6, 0],
                        [0, -400, 6, 0],
                        [38, -144, 6, 0],
                        [200, -346, 6, 0],
                        [106, -106, 6, 0],
                        [346, -200, 6, 0],
                        [144, -38, 6, 0],
                        [400, 0, 6, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [31, 392, 2, 0],
                        [43, 385, 2, 0],
                        [102, 330, 2, 0],
                        [135, 312, 2, 0],
                        [170, 308, 2, 0],
                        [232, 305, 2, 0],
                        [260, 297, 2, 0],
                        [285, 277, 2, 0],
                        [303, 234, 2, 0],
                        [305, 182, 2, 0],
                        [308, 148, 2, 0],
                        [324, 111, 2, 0],
                        [367, 68, 2, 0],
                        [392, 31, 2, 0],
                        [400, 0, 2, 1],
                        [392, -31, 4, 0],
                        [367, -68, 4, 0],
                        [324, -111, 4, 0],
                        [308, -148, 4, 0],
                        [305, -182, 4, 0],
                        [303, -234, 4, 0],
                        [285, -277, 4, 0],
                        [260, -297, 4, 0],
                        [232, -305, 4, 0],
                        [170, -308, 4, 0],
                        [135, -312, 4, 0],
                        [102, -330, 4, 0],
                        [43, -385, 4, 0],
                        [31, -392, 4, 0],
                        [0, -400, 4, 1],
                        [-31, -392, 7, 0],
                        [-43, -385, 7, 0],
                        [-102, -330, 7, 0],
                        [-135, -312, 7, 0],
                        [-170, -308, 7, 0],
                        [-232, -305, 7, 0],
                        [-260, -297, 7, 0],
                        [-285, -277, 7, 0],
                        [-303, -234, 7, 0],
                        [-305, -182, 7, 0],
                        [-308, -148, 7, 0],
                        [-324, -111, 7, 0],
                        [-367, -68, 7, 0],
                        [-392, -31, 7, 0],
                        [-400, 0, 7, 1],
                        [-392, 31, 5, 0],
                        [-367, 68, 5, 0],
                        [-324, 111, 5, 0],
                        [-308, 148, 5, 0],
                        [-305, 182, 5, 0],
                        [-303, 234, 5, 0],
                        [-285, 277, 5, 0],
                        [-260, 297, 5, 0],
                        [-232, 305, 5, 0],
                        [-170, 308, 5, 0],
                        [-135, 312, 5, 0],
                        [-102, 330, 5, 0],
                        [-43, 385, 5, 0],
                        [-31, 392, 5, 0],
                        [0, 400, 5, 1]
                    ],
                    [
                        [0, 99, 0, 1],
                        [5, 144, 1, 0],
                        [15, 174, 1, 0],
                        [28, 199, 1, 0],
                        [48, 229, 1, 0],
                        [80, 259, 1, 0],
                        [132, 289, 1, 0],
                        [188, 299, 1, 0],
                        [225, 299, 1, 0],
                        [250, 294, 1, 0],
                        [300, 272, 1, 0],
                        [350, 232, 1, 0],
                        [380, 186, 1, 0],
                        [395, 136, 1, 0],
                        [398, 74, 1, 0],
                        [350, -24, 1, 0],
                        [222, -158, 1, 0],
                        [75, -284, 1, 0],
                        [38, -326, 1, 0],
                        [15, -358, 1, 0],
                        [0, -401, 1, 1],
                        [-15, -358, 1, 0],
                        [-38, -326, 1, 0],
                        [-75, -284, 1, 0],
                        [-222, -158, 1, 0],
                        [-350, -24, 1, 0],
                        [-398, 74, 1, 0],
                        [-395, 136, 1, 0],
                        [-380, 186, 1, 0],
                        [-350, 232, 1, 0],
                        [-300, 272, 1, 0],
                        [-250, 294, 1, 0],
                        [-225, 299, 1, 0],
                        [-188, 299, 1, 0],
                        [-132, 289, 1, 0],
                        [-80, 259, 1, 0],
                        [-48, 229, 1, 0],
                        [-28, 199, 1, 0],
                        [-15, 174, 1, 0],
                        [-5, 144, 1, 0],
                        [0, 99, 1, 1]
                    ],
                    [
                        [19, 94, 0, 1],
                        [48, 80, 7, 0],
                        [70, 50, 7, 0],
                        [81, 11, 7, 0],
                        [73, -22, 7, 0],
                        [56, -50, 7, 0],
                        [21, -71, 7, 0],
                        [-21, -73, 7, 0],
                        [-60, -55, 7, 0],
                        [-81, -19, 7, 0],
                        [-87, 25, 7, 0],
                        [-72, 61, 7, 0],
                        [-45, 87, 7, 0],
                        [-9, 95, 7, 0],
                        [19, 94, 7, 1],
                        [37, 145, 7, 0],
                        [57, 201, 7, 0],
                        [72, 258, 7, 0],
                        [76, 313, 7, 0],
                        [62, 348, 7, 0],
                        [39, 379, 7, 0],
                        [2, 391, 7, 0],
                        [-24, 391, 7, 0],
                        [-63, 377, 7, 0],
                        [-90, 329, 7, 0],
                        [-95, 292, 7, 0],
                        [-88, 244, 7, 0],
                        [-64, 172, 7, 0],
                        [-33, 90, 7, 1],
                        [-54, 80, 0, 1],
                        [-61, 118, 1, 0],
                        [-87, 173, 1, 0],
                        [-117, 228, 1, 0],
                        [-157, 283, 1, 0],
                        [-215, 303, 1, 0],
                        [-267, 291, 1, 0],
                        [-290, 261, 1, 0],
                        [-300, 221, 1, 0],
                        [-291, 178, 1, 0],
                        [-258, 139, 1, 0],
                        [-210, 110, 1, 0],
                        [-142, 75, 1, 0],
                        [-77, 47, 1, 1],
                        [-85, 33, 0, 1],
                        [-117, 45, 2, 0],
                        [-184, 69, 2, 0],
                        [-274, 94, 2, 0],
                        [-336, 88, 2, 0],
                        [-374, 55, 2, 0],
                        [-382, 12, 2, 0],
                        [-372, -40, 2, 0],
                        [-334, -66, 2, 0],
                        [-281, -77, 2, 0],
                        [-214, -58, 2, 0],
                        [-152, -39, 2, 0],
                        [-108, -22, 2, 0],
                        [-83, -12, 2, 1],
                        [-78, -30, 0, 1],
                        [-134, -55, 3, 0],
                        [-194, -87, 3, 0],
                        [-262, -132, 3, 0],
                        [-290, -189, 3, 0],
                        [-279, -240, 3, 0],
                        [-253, -266, 3, 0],
                        [-221, -272, 3, 0],
                        [-181, -267, 3, 0],
                        [-149, -241, 3, 0],
                        [-118, -200, 3, 0],
                        [-97, -161, 3, 0],
                        [-77, -122, 3, 0],
                        [-58, -78, 3, 0],
                        [-51, -60, 3, 1],
                        [-24, -70, 0, 1],
                        [-43, -114, 4, 0],
                        [-64, -192, 4, 0],
                        [-79, -252, 4, 0],
                        [-80, -300, 4, 0],
                        [-51, -341, 4, 0],
                        [-18, -358, 4, 0],
                        [19, -356, 4, 0],
                        [45, -340, 4, 0],
                        [65, -309, 4, 0],
                        [76, -259, 4, 0],
                        [62, -211, 4, 0],
                        [43, -149, 4, 0],
                        [25, -100, 4, 0],
                        [13, -70, 4, 1],
                        [39, -59, 0, 1],
                        [65, -126, 1, 0],
                        [108, -206, 1, 0],
                        [148, -254, 1, 0],
                        [199, -270, 1, 0],
                        [251, -259, 1, 0],
                        [274, -236, 1, 0],
                        [281, -199, 1, 0],
                        [274, -155, 1, 0],
                        [226, -107, 1, 0],
                        [164, -70, 1, 0],
                        [107, -47, 1, 0],
                        [67, -32, 1, 1],
                        [77, -9, 0, 1],
                        [100, -17, 6, 0],
                        [145, -28, 6, 0],
                        [200, -40, 6, 0],
                        [275, -58, 6, 0],
                        [327, -46, 6, 0],
                        [358, -12, 6, 0],
                        [366, 19, 6, 0],
                        [351, 60, 6, 0],
                        [320, 85, 6, 0],
                        [284, 94, 6, 0],
                        [217, 85, 6, 0],
                        [152, 63, 6, 0],
                        [92, 39, 6, 0],
                        [75, 34, 6, 1],
                        [67, 59, 0, 1],
                        [111, 81, 5, 0],
                        [175, 111, 5, 0],
                        [230, 144, 5, 0],
                        [260, 180, 5, 0],
                        [272, 225, 5, 0],
                        [258, 271, 5, 0],
                        [221, 299, 5, 0],
                        [186, 301, 5, 0],
                        [150, 290, 5, 0],
                        [131, 263, 5, 0],
                        [102, 236, 5, 0],
                        [76, 174, 5, 0],
                        [53, 132, 5, 0],
                        [33, 88, 5, 1]
                    ],
                    [
                        [22, 6, 0, 1],
                        [20, 10, 5, 0],
                        [22, 17, 5, 0],
                        [27, 21, 5, 0],
                        [31, 24, 5, 0],
                        [31, 29, 5, 0],
                        [29, 34, 5, 0],
                        [22, 39, 5, 0],
                        [14, 42, 5, 0],
                        [11, 44, 5, 0],
                        [13, 47, 5, 0],
                        [22, 49, 5, 0],
                        [32, 52, 5, 0],
                        [43, 57, 5, 0],
                        [49, 60, 5, 0],
                        [49, 65, 5, 0],
                        [43, 71, 5, 0],
                        [32, 76, 5, 0],
                        [16, 80, 5, 0],
                        [9, 82, 5, 0],
                        [2, 84, 5, 0],
                        [11, 85, 5, 0],
                        [23, 86, 5, 0],
                        [38, 87, 5, 0],
                        [52, 90, 5, 0],
                        [61, 94, 5, 0],
                        [68, 101, 5, 0],
                        [65, 106, 5, 0],
                        [58, 110, 5, 0],
                        [45, 114, 5, 0],
                        [32, 118, 5, 0],
                        [23, 121, 5, 0],
                        [9, 123, 5, 0],
                        [-2, 123, 5, 0],
                        [-7, 122, 5, 0],
                        [-2, 122, 5, 0],
                        [9, 121, 5, 0],
                        [18, 121, 5, 0],
                        [36, 122, 5, 0],
                        [45, 123, 5, 0],
                        [65, 126, 5, 0],
                        [79, 132, 5, 0],
                        [85, 138, 5, 0],
                        [83, 142, 5, 0],
                        [79, 147, 5, 0],
                        [67, 152, 5, 0],
                        [49, 156, 5, 0],
                        [25, 161, 5, 0],
                        [4, 163, 5, 0],
                        [-14, 162, 5, 0],
                        [-16, 160, 5, 0],
                        [-9, 159, 5, 0],
                        [13, 158, 5, 0],
                        [29, 158, 5, 0],
                        [52, 159, 5, 0],
                        [70, 162, 5, 0],
                        [90, 166, 5, 0],
                        [99, 171, 5, 0],
                        [103, 178, 5, 0],
                        [95, 185, 5, 0],
                        [79, 191, 5, 0],
                        [58, 195, 5, 0],
                        [41, 197, 5, 0],
                        [18, 201, 5, 0],
                        [4, 202, 5, 0],
                        [-18, 202, 5, 0],
                        [-25, 198, 5, 0],
                        [-20, 195, 5, 0],
                        [-9, 195, 5, 0],
                        [0, 193, 5, 0],
                        [22, 193, 5, 0],
                        [43, 193, 5, 0],
                        [74, 195, 5, 0],
                        [94, 198, 5, 0],
                        [110, 204, 5, 0],
                        [119, 208, 5, 0],
                        [121, 213, 5, 0],
                        [115, 222, 5, 0],
                        [103, 227, 5, 0],
                        [88, 231, 5, 0],
                        [70, 234, 5, 0],
                        [52, 238, 5, 0],
                        [25, 240, 5, 0],
                        [-5, 242, 5, 0],
                        [-22, 240, 5, 0],
                        [-32, 239, 5, 0],
                        [-36, 237, 5, 0],
                        [-29, 235, 5, 0],
                        [-18, 232, 5, 0],
                        [0, 230, 5, 0],
                        [31, 229, 5, 0],
                        [49, 229, 5, 0],
                        [68, 229, 5, 0],
                        [83, 231, 5, 0],
                        [103, 233, 5, 0],
                        [121, 237, 5, 0],
                        [131, 242, 5, 0],
                        [139, 248, 5, 0],
                        [135, 257, 5, 0],
                        [121, 265, 5, 0],
                        [106, 270, 5, 0],
                        [81, 275, 5, 0],
                        [56, 279, 5, 0],
                        [29, 280, 5, 0],
                        [0, 281, 5, 0],
                        [-25, 280, 5, 0],
                        [-40, 277, 5, 0],
                        [-43, 274, 5, 0],
                        [-38, 271, 5, 0],
                        [-18, 268, 5, 0],
                        [11, 265, 5, 0],
                        [40, 264, 5, 0],
                        [70, 265, 5, 0],
                        [97, 268, 5, 0],
                        [126, 272, 5, 0],
                        [148, 277, 5, 0],
                        [157, 284, 5, 0],
                        [157, 291, 5, 0],
                        [151, 296, 5, 0],
                        [140, 301, 5, 0],
                        [115, 310, 5, 0],
                        [88, 315, 5, 0],
                        [61, 318, 5, 0],
                        [29, 321, 5, 0],
                        [-2, 322, 5, 0],
                        [-25, 321, 5, 0],
                        [-43, 319, 5, 0],
                        [-54, 315, 5, 0],
                        [-52, 311, 5, 0],
                        [-43, 308, 5, 0],
                        [-23, 303, 5, 0],
                        [5, 302, 5, 0],
                        [34, 301, 5, 0],
                        [63, 300, 5, 0],
                        [88, 301, 5, 0],
                        [108, 302, 5, 0],
                        [124, 306, 5, 0],
                        [149, 309, 5, 0],
                        [166, 314, 5, 0],
                        [175, 322, 5, 0],
                        [169, 333, 5, 0],
                        [149, 344, 5, 0],
                        [130, 349, 5, 0],
                        [92, 356, 5, 0],
                        [65, 359, 5, 0],
                        [22, 361, 5, 0],
                        [-22, 361, 5, 0],
                        [-54, 358, 5, 0],
                        [-65, 355, 5, 0],
                        [-58, 349, 5, 0],
                        [-47, 344, 5, 0],
                        [-27, 341, 5, 0],
                        [-2, 339, 5, 0],
                        [34, 337, 5, 0],
                        [74, 337, 5, 0],
                        [119, 339, 5, 0],
                        [144, 342, 5, 0],
                        [176, 350, 5, 0],
                        [193, 359, 5, 0],
                        [189, 371, 5, 0],
                        [176, 378, 5, 0],
                        [155, 386, 5, 0],
                        [119, 393, 5, 0],
                        [81, 398, 5, 0],
                        [34, 402, 5, 0],
                        [-5, 402, 5, 0],
                        [-38, 402, 5, 0],
                        [-56, 399, 5, 0],
                        [-70, 396, 5, 1]
                    ],
                    [
                        [53, 355, 0, 1],
                        [-21, 356, 4, 0],
                        [-135, 334, 4, 0],
                        [-210, 293, 4, 0],
                        [-286, 228, 4, 0],
                        [-332, 159, 4, 0],
                        [-365, 73, 4, 0],
                        [-376, -12, 4, 0],
                        [-370, -98, 4, 0],
                        [-345, -172, 4, 0],
                        [-313, -234, 4, 0],
                        [-264, -289, 4, 0],
                        [-208, -336, 4, 0],
                        [-138, -372, 4, 0],
                        [-60, -392, 4, 0],
                        [-9, -392, 4, 0],
                        [49, -392, 4, 0],
                        [142, -369, 4, 0],
                        [228, -319, 4, 0],
                        [296, -251, 4, 0],
                        [337, -178, 4, 0],
                        [367, -101, 4, 0],
                        [374, -28, 4, 0],
                        [363, 71, 4, 0],
                        [330, 159, 4, 0],
                        [281, 228, 4, 0],
                        [215, 287, 4, 0],
                        [160, 321, 4, 0],
                        [132, 333, 4, 1],
                        [128, 290, 2, 0],
                        [104, 251, 2, 0],
                        [74, 225, 2, 0],
                        [43, 209, 2, 0],
                        [-1, 201, 2, 0],
                        [-27, 199, 2, 0],
                        [-42, 199, 2, 0],
                        [-23, 169, 2, 0],
                        [17, 100, 2, 0],
                        [122, -77, 2, 0],
                        [158, -141, 2, 0],
                        [164, -188, 2, 0],
                        [146, -249, 2, 0],
                        [99, -301, 2, 0],
                        [37, -332, 2, 0],
                        [-39, -339, 2, 0],
                        [-112, -319, 2, 0],
                        [-151, -284, 2, 0],
                        [-171, -238, 2, 0],
                        [-174, -182, 2, 0],
                        [-145, -120, 2, 0],
                        [-103, -80, 2, 0],
                        [-34, -51, 2, 0],
                        [15, -49, 2, 0],
                        [53, -54, 2, 1],
                        [28, -12, 2, 0],
                        [-23, 59, 2, 0],
                        [-73, 127, 2, 0],
                        [-125, 203, 2, 0],
                        [-145, 230, 2, 0],
                        [-144, 255, 2, 0],
                        [-123, 284, 2, 0],
                        [-100, 302, 2, 0],
                        [-63, 321, 2, 0],
                        [-20, 332, 2, 0],
                        [30, 345, 2, 0],
                        [72, 357, 2, 0],
                        [105, 376, 2, 0],
                        [122, 395, 2, 1],
                        [129, 374, 2, 0],
                        [132, 354, 2, 0],
                        [132, 333, 2, 1]
                    ],
                    [
                        [360, 0, 0, 1],
                        [396, 24, 1, 1],
                        [396, -24, 1, 1],
                        [360, 0, 1, 1],
                        [312, 180, 0, 1],
                        [331, 218, 2, 1],
                        [355, 178, 2, 1],
                        [312, 180, 2, 1],
                        [180, 312, 0, 1],
                        [178, 355, 5, 1],
                        [218, 331, 5, 1],
                        [180, 312, 5, 1],
                        [0, 360, 0, 1],
                        [-24, 396, 4, 1],
                        [24, 396, 4, 1],
                        [0, 360, 4, 1],
                        [-180, 312, 0, 1],
                        [-218, 331, 3, 1],
                        [-178, 355, 3, 1],
                        [-180, 312, 3, 1],
                        [-312, 180, 0, 1],
                        [-355, 178, 7, 1],
                        [-331, 218, 7, 1],
                        [-312, 180, 7, 1],
                        [-360, 0, 0, 1],
                        [-396, -24, 2, 1],
                        [-396, 24, 2, 1],
                        [-360, 0, 2, 1],
                        [-312, -180, 0, 1],
                        [-331, -218, 6, 1],
                        [-355, -178, 6, 1],
                        [-312, -180, 6, 1],
                        [-180, -312, 0, 1],
                        [-178, -355, 4, 1],
                        [-218, -331, 4, 1],
                        [-180, -312, 4, 1],
                        [0, -360, 0, 1],
                        [24, -396, 3, 1],
                        [-24, -396, 3, 1],
                        [0, -360, 3, 1],
                        [180, -312, 0, 1],
                        [218, -331, 5, 1],
                        [178, -355, 5, 1],
                        [180, -312, 5, 1],
                        [312, -180, 0, 1],
                        [355, -178, 7, 1],
                        [331, -218, 7, 1],
                        [312, -180, 7, 1]
                    ],
                    [
                        [-55, 134, 0, 1],
                        [-55, 134, 7, 0],
                        [-99, 238, 7, 0],
                        [-154, 321, 7, 0],
                        [-222, 339, 7, 0],
                        [-288, 304, 7, 0],
                        [-295, 242, 7, 0],
                        [-264, 165, 7, 0],
                        [-198, 110, 7, 0],
                        [-123, 46, 7, 0],
                        [-229, 110, 7, 0],
                        [-348, 97, 7, 0],
                        [-400, 33, 7, 0],
                        [-405, -29, 7, 0],
                        [-341, -99, 7, 0],
                        [-222, -103, 7, 0],
                        [-114, -53, 7, 0],
                        [-233, -132, 7, 0],
                        [-279, -196, 7, 0],
                        [-284, -271, 7, 0],
                        [-224, -328, 7, 0],
                        [-130, -279, 7, 0],
                        [-46, -125, 7, 0],
                        [-97, -235, 7, 0],
                        [-70, -370, 7, 0],
                        [0, -409, 7, 0],
                        [68, -381, 7, 0],
                        [99, -317, 7, 0],
                        [84, -202, 7, 0],
                        [40, -119, 7, 0],
                        [121, -238, 7, 0],
                        [205, -277, 7, 0],
                        [275, -246, 7, 0],
                        [288, -163, 7, 0],
                        [233, -90, 7, 0],
                        [110, -48, 7, 0],
                        [244, -86, 7, 0],
                        [352, -51, 7, 0],
                        [378, 9, 7, 0],
                        [328, 95, 7, 0],
                        [220, 99, 7, 0],
                        [112, 51, 7, 0],
                        [235, 132, 7, 0],
                        [301, 244, 7, 0],
                        [286, 308, 7, 0],
                        [202, 332, 7, 0],
                        [110, 264, 7, 0],
                        [42, 132, 7, 0],
                        [79, 264, 7, 0],
                        [73, 365, 7, 0],
                        [-9, 422, 7, 0],
                        [-81, 374, 7, 0],
                        [-101, 253, 7, 0],
                        [-55, 134, 7, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [48, 101, 4, 0],
                        [128, 216, 4, 0],
                        [235, 312, 4, 0],
                        [293, 317, 4, 0],
                        [299, 268, 4, 0],
                        [284, 227, 4, 0],
                        [198, 119, 4, 0],
                        [125, 62, 4, 0],
                        [0, 0, 4, 0],
                        [-84, -40, 4, 0],
                        [-185, -112, 4, 0],
                        [-257, -191, 4, 0],
                        [-297, -257, 4, 0],
                        [-293, -319, 4, 0],
                        [-240, -319, 4, 0],
                        [-147, -244, 4, 0],
                        [-64, -132, 4, 0],
                        [0, 0, 4, 1],
                        [11, 110, 6, 0],
                        [-11, 264, 6, 0],
                        [-64, 372, 6, 0],
                        [-128, 414, 6, 0],
                        [-152, 361, 6, 0],
                        [-143, 282, 6, 0],
                        [-99, 156, 6, 0],
                        [-51, 73, 6, 0],
                        [0, 0, 6, 0],
                        [64, -97, 6, 0],
                        [123, -222, 6, 0],
                        [150, -321, 6, 0],
                        [154, -356, 6, 0],
                        [150, -385, 6, 0],
                        [130, -414, 6, 0],
                        [73, -389, 6, 0],
                        [11, -262, 6, 0],
                        [-9, -143, 6, 0],
                        [0, 0, 6, 1],
                        [154, 7, 7, 0],
                        [317, -18, 7, 0],
                        [372, -40, 7, 0],
                        [422, -97, 7, 0],
                        [370, -130, 7, 0],
                        [249, -128, 7, 0],
                        [130, -88, 7, 0],
                        [0, 0, 7, 0],
                        [-84, 59, 7, 0],
                        [-229, 117, 7, 0],
                        [-352, 132, 7, 0],
                        [-420, 101, 7, 0],
                        [-403, 57, 7, 0],
                        [-334, 20, 7, 0],
                        [-68, -9, 7, 0],
                        [0, 0, 7, 1]
                    ],
                    [
                        [-2, 6, 0, 1],
                        [1, 53, 1, 0],
                        [11, 96, 1, 0],
                        [30, 139, 1, 0],
                        [56, 183, 1, 0],
                        [87, 215, 1, 0],
                        [122, 243, 1, 0],
                        [163, 267, 1, 0],
                        [207, 284, 1, 0],
                        [252, 288, 1, 0],
                        [278, 292, 1, 0],
                        [279, 272, 1, 0],
                        [276, 239, 1, 0],
                        [263, 189, 1, 0],
                        [243, 147, 1, 0],
                        [213, 107, 1, 0],
                        [184, 75, 1, 0],
                        [141, 44, 1, 0],
                        [98, 26, 1, 0],
                        [55, 12, 1, 0],
                        [22, 7, 1, 0],
                        [-1, 6, 1, 1],
                        [21, 31, 4, 0],
                        [63, 56, 4, 0],
                        [95, 69, 4, 0],
                        [142, 86, 4, 0],
                        [190, 91, 4, 0],
                        [229, 90, 4, 0],
                        [276, 82, 4, 0],
                        [319, 67, 4, 0],
                        [344, 52, 4, 0],
                        [375, 32, 4, 0],
                        [400, 10, 4, 0],
                        [385, -6, 4, 0],
                        [358, -29, 4, 0],
                        [311, -52, 4, 0],
                        [267, -66, 4, 0],
                        [222, -75, 4, 0],
                        [176, -76, 4, 0],
                        [135, -69, 4, 0],
                        [94, -56, 4, 0],
                        [62, -42, 4, 0],
                        [26, -20, 4, 0],
                        [0, 4, 4, 1],
                        [18, 6, 2, 0],
                        [56, 0, 2, 0],
                        [101, -11, 2, 0],
                        [136, -31, 2, 0],
                        [177, -55, 2, 0],
                        [216, -94, 2, 0],
                        [241, -128, 2, 0],
                        [256, -158, 2, 0],
                        [271, -198, 2, 0],
                        [280, -235, 2, 0],
                        [285, -276, 2, 0],
                        [267, -277, 2, 0],
                        [234, -272, 2, 0],
                        [195, -263, 2, 0],
                        [147, -243, 2, 0],
                        [103, -216, 2, 0],
                        [70, -183, 2, 0],
                        [40, -143, 2, 0],
                        [21, -108, 2, 0],
                        [11, -79, 2, 0],
                        [4, -53, 2, 0],
                        [0, -23, 2, 0],
                        [-1, 3, 2, 1],
                        [14, -11, 5, 0],
                        [32, -35, 5, 0],
                        [53, -73, 5, 0],
                        [69, -112, 5, 0],
                        [80, -152, 5, 0],
                        [84, -194, 5, 0],
                        [80, -249, 5, 0],
                        [69, -297, 5, 0],
                        [51, -332, 5, 0],
                        [30, -365, 5, 0],
                        [12, -386, 5, 0],
                        [1, -399, 5, 0],
                        [-18, -376, 5, 0],
                        [-50, -334, 5, 0],
                        [-68, -290, 5, 0],
                        [-79, -246, 5, 0],
                        [-85, -204, 5, 0],
                        [-84, -162, 5, 0],
                        [-73, -117, 5, 0],
                        [-61, -75, 5, 0],
                        [-43, -45, 5, 0],
                        [-30, -29, 5, 0],
                        [-15, -9, 5, 0],
                        [-2, 3, 5, 1],
                        [-4, -29, 3, 0],
                        [-7, -58, 3, 0],
                        [-14, -84, 3, 0],
                        [-30, -122, 3, 0],
                        [-46, -152, 3, 0],
                        [-66, -179, 3, 0],
                        [-108, -218, 3, 0],
                        [-134, -235, 3, 0],
                        [-161, -253, 3, 0],
                        [-187, -264, 3, 0],
                        [-217, -272, 3, 0],
                        [-241, -278, 3, 0],
                        [-272, -282, 3, 0],
                        [-285, -283, 3, 0],
                        [-283, -258, 3, 0],
                        [-276, -208, 3, 0],
                        [-262, -169, 3, 0],
                        [-232, -118, 3, 0],
                        [-209, -85, 3, 0],
                        [-178, -59, 3, 0],
                        [-146, -33, 3, 0],
                        [-116, -20, 3, 0],
                        [-88, -7, 3, 0],
                        [-64, -1, 3, 0],
                        [-41, 2, 3, 0],
                        [-1, 4, 3, 1],
                        [-14, -8, 6, 0],
                        [-29, -19, 6, 0],
                        [-46, -30, 6, 0],
                        [-74, -48, 6, 0],
                        [-116, -65, 6, 0],
                        [-164, -77, 6, 0],
                        [-191, -79, 6, 0],
                        [-228, -79, 6, 0],
                        [-277, -72, 6, 0],
                        [-324, -54, 6, 0],
                        [-363, -34, 6, 0],
                        [-386, -14, 6, 0],
                        [-405, 2, 6, 0],
                        [-388, 20, 6, 0],
                        [-355, 44, 6, 0],
                        [-317, 64, 6, 0],
                        [-287, 75, 6, 0],
                        [-257, 82, 6, 0],
                        [-200, 85, 6, 0],
                        [-145, 81, 6, 0],
                        [-114, 74, 6, 0],
                        [-64, 52, 6, 0],
                        [-43, 37, 6, 0],
                        [-25, 26, 6, 0],
                        [-2, 6, 6, 1],
                        [-12, 7, 4, 0],
                        [-41, 8, 4, 0],
                        [-73, 13, 4, 0],
                        [-102, 23, 4, 0],
                        [-151, 43, 4, 0],
                        [-175, 62, 4, 0],
                        [-200, 84, 4, 0],
                        [-228, 112, 4, 0],
                        [-250, 146, 4, 0],
                        [-268, 180, 4, 0],
                        [-280, 213, 4, 0],
                        [-288, 246, 4, 0],
                        [-290, 277, 4, 0],
                        [-289, 288, 4, 0],
                        [-261, 288, 4, 0],
                        [-223, 283, 4, 0],
                        [-191, 272, 4, 0],
                        [-156, 257, 4, 0],
                        [-123, 237, 4, 0],
                        [-86, 205, 4, 0],
                        [-62, 176, 4, 0],
                        [-37, 142, 4, 0],
                        [-21, 106, 4, 0],
                        [-11, 69, 4, 0],
                        [-4, 42, 4, 0],
                        [-1, 6, 4, 1],
                        [-21, 23, 7, 0],
                        [-36, 45, 7, 0],
                        [-51, 66, 7, 0],
                        [-73, 112, 7, 0],
                        [-82, 148, 7, 0],
                        [-88, 198, 7, 0],
                        [-86, 242, 7, 0],
                        [-73, 296, 7, 0],
                        [-61, 329, 7, 0],
                        [-42, 364, 7, 0],
                        [-26, 386, 7, 0],
                        [-13, 400, 7, 0],
                        [-6, 409, 7, 0],
                        [7, 395, 7, 0],
                        [25, 372, 7, 0],
                        [59, 311, 7, 0],
                        [75, 264, 7, 0],
                        [79, 211, 7, 0],
                        [79, 167, 7, 0],
                        [72, 129, 7, 0],
                        [58, 95, 7, 0],
                        [43, 66, 7, 0],
                        [26, 40, 7, 0],
                        [14, 23, 7, 0],
                        [4, 12, 7, 0],
                        [-1, 4, 7, 1]
                    ],
                    [
                        [-281, 260, 0, 1],
                        [-231, 298, 5, 0],
                        [-191, 322, 5, 0],
                        [-136, 343, 5, 0],
                        [-94, 357, 5, 0],
                        [-57, 364, 5, 0],
                        [0, 370, 5, 0],
                        [57, 364, 5, 0],
                        [94, 357, 5, 0],
                        [136, 343, 5, 0],
                        [191, 322, 5, 0],
                        [231, 298, 5, 0],
                        [281, 260, 5, 0],
                        [296, 256, 5, 0],
                        [306, 253, 5, 0],
                        [317, 253, 5, 0],
                        [329, 257, 5, 0],
                        [340, 265, 5, 0],
                        [348, 274, 5, 0],
                        [351, 282, 5, 0],
                        [354, 292, 5, 0],
                        [353, 302, 5, 0],
                        [350, 312, 5, 0],
                        [343, 320, 5, 0],
                        [301, 347, 5, 0],
                        [250, 366, 5, 0],
                        [200, 383, 5, 0],
                        [160, 389, 5, 0],
                        [100, 397, 5, 0],
                        [60, 398, 5, 0],
                        [10, 396, 5, 0],
                        [-30, 388, 5, 0],
                        [-70, 379, 5, 0],
                        [-120, 362, 5, 0],
                        [-160, 344, 5, 0],
                        [-200, 324, 5, 0],
                        [-230, 304, 5, 0],
                        [-255, 285, 5, 0],
                        [-270, 274, 5, 0],
                        [-281, 260, 5, 1],
                        [281, -260, 0, 1],
                        [231, -298, 4, 0],
                        [191, -322, 4, 0],
                        [136, -343, 4, 0],
                        [94, -357, 4, 0],
                        [57, -364, 4, 0],
                        [0, -370, 4, 0],
                        [-57, -364, 4, 0],
                        [-94, -357, 4, 0],
                        [-136, -343, 4, 0],
                        [-191, -322, 4, 0],
                        [-231, -298, 4, 0],
                        [-281, -260, 4, 0],
                        [-296, -256, 4, 0],
                        [-306, -253, 4, 0],
                        [-317, -253, 4, 0],
                        [-329, -257, 4, 0],
                        [-340, -265, 4, 0],
                        [-348, -274, 4, 0],
                        [-351, -282, 4, 0],
                        [-354, -292, 4, 0],
                        [-353, -302, 4, 0],
                        [-350, -312, 4, 0],
                        [-343, -320, 4, 0],
                        [-301, -347, 4, 0],
                        [-250, -366, 4, 0],
                        [-200, -383, 4, 0],
                        [-160, -389, 4, 0],
                        [-100, -397, 4, 0],
                        [-60, -398, 4, 0],
                        [-10, -396, 4, 0],
                        [30, -388, 4, 0],
                        [70, -379, 4, 0],
                        [120, -362, 4, 0],
                        [160, -344, 4, 0],
                        [200, -324, 4, 0],
                        [230, -304, 4, 0],
                        [255, -285, 4, 0],
                        [270, -274, 4, 0],
                        [281, -260, 4, 1]
                    ],
                    [
                        [-440, 440, 0, 1],
                        [440, 440, 7, 1],
                        [440, -440, 7, 1],
                        [-440, -440, 7, 1],
                        [-440, 440, 7, 1],
                        [-440, 0, 0, 1],
                        [440, 0, 7, 1],
                        [407, 22, 0, 1],
                        [440, 0, 7, 1],
                        [407, -22, 7, 1],
                        [394, 21, 0, 1],
                        [361, 67, 7, 1],
                        [394, 67, 0, 1],
                        [361, 21, 7, 1],
                        [0, -440, 0, 1],
                        [0, 440, 7, 1],
                        [-22, 407, 0, 1],
                        [0, 440, 7, 1],
                        [22, 407, 7, 2],
                        [22, 396, 0, 1],
                        [38, 375, 7, 1],
                        [38, 352, 7, 1],
                        [38, 375, 0, 1],
                        [55, 396, 7, 1],
                        [-140, 180, 0, 1],
                        [-140, 216, 1, 1],
                        [-125, 216, 1, 0],
                        [-119, 214, 1, 0],
                        [-116, 209, 1, 0],
                        [-116, 206, 1, 0],
                        [-119, 201, 1, 0],
                        [-127, 199, 1, 0],
                        [-140, 199, 1, 1],
                        [-128, 199, 0, 1],
                        [-116, 180, 1, 1],
                        [-82, 207, 0, 1],
                        [-84, 211, 2, 0],
                        [-87, 214, 2, 0],
                        [-97, 216, 2, 0],
                        [-101, 215, 2, 0],
                        [-104, 211, 2, 0],
                        [-106, 207, 2, 0],
                        [-108, 202, 2, 0],
                        [-108, 194, 2, 0],
                        [-106, 189, 2, 0],
                        [-104, 185, 2, 0],
                        [-102, 182, 2, 0],
                        [-97, 180, 2, 0],
                        [-91, 180, 2, 0],
                        [-88, 182, 2, 0],
                        [-84, 185, 2, 0],
                        [-82, 189, 2, 0],
                        [-82, 194, 2, 1],
                        [-91, 194, 2, 1],
                        [-74, 216, 0, 1],
                        [-59, 216, 3, 0],
                        [-54, 214, 3, 0],
                        [-52, 212, 3, 0],
                        [-50, 210, 3, 0],
                        [-50, 206, 3, 0],
                        [-52, 202, 3, 0],
                        [-53, 201, 3, 0],
                        [-59, 199, 3, 0],
                        [-74, 199, 3, 1],
                        [-59, 199, 3, 0],
                        [-53, 197, 3, 0],
                        [-52, 195, 3, 0],
                        [-50, 192, 3, 0],
                        [-50, 187, 3, 0],
                        [-54, 182, 3, 0],
                        [-58, 180, 3, 0],
                        [-74, 180, 3, 1],
                        [-74, 216, 3, 1]
                    ],
                    [
                        [-1, 49, 0, 1],
                        [30, 38, 7, 0],
                        [43, 19, 7, 0],
                        [50, 0, 7, 0],
                        [42, -23, 7, 0],
                        [25, -40, 7, 0],
                        [0, -50, 7, 0],
                        [-25, -42, 7, 0],
                        [-42, -26, 7, 0],
                        [-50, 0, 7, 0],
                        [-44, 22, 7, 0],
                        [-29, 39, 7, 0],
                        [0, 50, 7, 1]
                    ],
                    [
                        [0, 0, 0, 1],
                        [0, 400, 7, 1]
                    ],
                    [
                        [-15, 138, 0, 1],
                        [-15, 162, 7, 1],
                        [5, 162, 0, 1],
                        [22, 162, 7, 1],
                        [22, 150, 7, 1],
                        [5, 150, 7, 1],
                        [5, 138, 7, 1],
                        [22, 138, 7, 1],
                        [75, 130, 0, 1],
                        [75, 130, 6, 1],
                        [130, 75, 0, 1],
                        [130, 75, 6, 1],
                        [140, 15, 0, 1],
                        [160, 15, 7, 1],
                        [160, -15, 7, 1],
                        [140, -15, 7, 1],
                        [140, 0, 0, 1],
                        [160, 0, 7, 1],
                        [130, -75, 0, 1],
                        [130, -75, 6, 1],
                        [75, -130, 0, 1],
                        [75, -130, 6, 1],
                        [12, -138, 0, 1],
                        [-12, -138, 7, 1],
                        [-12, -162, 7, 1],
                        [12, -162, 7, 1],
                        [12, -150, 7, 1],
                        [-12, -150, 7, 1],
                        [-75, -130, 0, 1],
                        [-75, -130, 6, 1],
                        [-130, -75, 0, 1],
                        [-130, -75, 6, 1],
                        [-160, -15, 0, 1],
                        [-140, -15, 7, 1],
                        [-140, 15, 7, 1],
                        [-160, 15, 7, 1],
                        [-160, 0, 7, 1],
                        [-140, 0, 7, 1],
                        [-130, 75, 0, 1],
                        [-130, 75, 6, 1],
                        [-75, 130, 0, 1],
                        [-75, 130, 6, 1]
                    ],
                    [
                        [-163, 223, 0, 1],
                        [-6, 107, 7, 1],
                        [157, 219, 7, 1],
                        [96, 31, 7, 1],
                        [256, -80, 7, 1],
                        [57, -86, 7, 1],
                        [1, -277, 7, 1],
                        [-67, -85, 7, 1],
                        [-267, -82, 7, 1],
                        [-104, 31, 7, 1],
                        [-163, 223, 7, 1],
                        [-236, 322, 2, 1],
                        [-177, 362, 2, 0],
                        [-107, 386, 2, 0],
                        [-27, 398, 2, 0],
                        [59, 395, 2, 0],
                        [141, 376, 2, 0],
                        [216, 334, 2, 0],
                        [275, 287, 2, 0],
                        [335, 217, 2, 0],
                        [376, 135, 2, 0],
                        [394, 36, 2, 0],
                        [390, -69, 2, 0],
                        [362, -158, 2, 0],
                        [303, -251, 2, 0],
                        [226, -319, 2, 0],
                        [158, -359, 2, 0],
                        [76, -386, 2, 0],
                        [-1, -391, 2, 0],
                        [-104, -379, 2, 0],
                        [-194, -344, 2, 0],
                        [-264, -295, 2, 0],
                        [-334, -211, 2, 0],
                        [-379, -120, 2, 0],
                        [-398, -21, 2, 0],
                        [-392, 78, 2, 0],
                        [-356, 190, 2, 0],
                        [-302, 264, 2, 0],
                        [-238, 324, 2, 1],
                        [-377, -117, 0, 1],
                        [-269, -83, 2, 1],
                        [-1, -280, 0, 1],
                        [-1, -386, 2, 1],
                        [373, -120, 0, 1],
                        [254, -80, 2, 1],
                        [156, 222, 0, 1],
                        [231, 324, 2, 1]
                    ],
                    [
                        [0, 400, 1, 0],
                        [28, 399, 1, 0],
                        [56, 396, 1, 0],
                        [83, 391, 1, 0],
                        [110, 384, 1, 0],
                        [137, 376, 1, 0],
                        [163, 366, 1, 0],
                        [188, 353, 1, 0],
                        [212, 339, 1, 0],
                        [235, 324, 1, 0],
                        [257, 306, 1, 0],
                        [278, 288, 3, 0],
                        [297, 268, 3, 0],
                        [315, 246, 3, 0],
                        [332, 224, 3, 0],
                        [346, 200, 3, 0],
                        [360, 175, 3, 0],
                        [371, 150, 3, 0],
                        [380, 124, 3, 0],
                        [388, 97, 3, 0],
                        [394, 70, 3, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 0],
                        [400, -14, 6, 0],
                        [398, -42, 6, 0],
                        [394, -70, 6, 0],
                        [388, -97, 6, 0],
                        [380, -124, 6, 0],
                        [371, -150, 6, 0],
                        [360, -175, 6, 0],
                        [346, -200, 6, 0],
                        [332, -224, 5, 0],
                        [315, -246, 5, 0],
                        [297, -268, 5, 0],
                        [278, -288, 5, 0],
                        [257, -306, 5, 0],
                        [235, -324, 5, 0],
                        [212, -339, 5, 0],
                        [188, -353, 5, 0],
                        [163, -366, 5, 0],
                        [137, -376, 5, 0],
                        [110, -384, 4, 0],
                        [83, -391, 4, 0],
                        [56, -396, 4, 0],
                        [28, -399, 4, 0],
                        [0, -400, 4, 0],
                        [-28, -399, 4, 0],
                        [-56, -396, 4, 0],
                        [-83, -391, 4, 0],
                        [-124, -380, 4, 0],
                        [-163, -366, 4, 0],
                        [-200, -346, 2, 0],
                        [-235, -324, 2, 0],
                        [-257, -306, 2, 0],
                        [-278, -288, 2, 0],
                        [-297, -268, 2, 0],
                        [-315, -246, 2, 0],
                        [-332, -224, 2, 0],
                        [-346, -200, 2, 0],
                        [-360, -175, 2, 0],
                        [-371, -150, 2, 0],
                        [-380, -124, 7, 0],
                        [-388, -97, 7, 0],
                        [-394, -70, 7, 0],
                        [-398, -42, 7, 0],
                        [-400, 0, 7, 0],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 4, 0],
                        [-353, 188, 4, 0],
                        [-339, 212, 4, 0],
                        [-324, 235, 4, 0],
                        [-306, 257, 4, 0],
                        [-288, 278, 4, 0],
                        [-268, 297, 4, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 2, 0],
                        [-150, 371, 2, 0],
                        [-124, 380, 2, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 0]
                    ],
                    [
                        [0, 400, 0, 1],
                        [28, 399, 1, 0],
                        [56, 396, 1, 0],
                        [83, 391, 1, 0],
                        [110, 384, 1, 0],
                        [137, 376, 1, 0],
                        [163, 366, 1, 0],
                        [188, 353, 1, 0],
                        [212, 339, 1, 0],
                        [235, 324, 1, 0],
                        [257, 306, 1, 0],
                        [278, 288, 3, 0],
                        [297, 268, 3, 0],
                        [315, 246, 3, 0],
                        [332, 224, 3, 0],
                        [346, 200, 3, 0],
                        [360, 175, 3, 0],
                        [371, 150, 3, 0],
                        [380, 124, 3, 0],
                        [388, 97, 3, 0],
                        [394, 70, 3, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 0],
                        [400, -14, 6, 0],
                        [398, -42, 6, 0],
                        [394, -70, 6, 0],
                        [388, -97, 6, 0],
                        [380, -124, 6, 0],
                        [371, -150, 6, 0],
                        [360, -175, 6, 0],
                        [346, -200, 6, 0],
                        [332, -224, 5, 0],
                        [315, -246, 5, 0],
                        [297, -268, 5, 0],
                        [278, -288, 5, 0],
                        [257, -306, 5, 0],
                        [235, -324, 5, 0],
                        [212, -339, 5, 0],
                        [188, -353, 5, 0],
                        [163, -366, 5, 0],
                        [137, -376, 5, 0],
                        [110, -384, 4, 0],
                        [83, -391, 4, 0],
                        [56, -396, 4, 0],
                        [28, -399, 4, 0],
                        [0, -400, 4, 0],
                        [-28, -399, 4, 0],
                        [-56, -396, 4, 0],
                        [-83, -391, 4, 0],
                        [-124, -380, 4, 0],
                        [-163, -366, 4, 0],
                        [-200, -346, 2, 0],
                        [-235, -324, 2, 0],
                        [-257, -306, 2, 0],
                        [-278, -288, 2, 0],
                        [-297, -268, 2, 0],
                        [-315, -246, 2, 0],
                        [-332, -224, 2, 0],
                        [-346, -200, 2, 0],
                        [-360, -175, 2, 0],
                        [-371, -150, 2, 0],
                        [-380, -124, 7, 0],
                        [-388, -97, 7, 0],
                        [-394, -70, 7, 0],
                        [-398, -42, 7, 0],
                        [-400, 0, 7, 0],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 4, 0],
                        [-353, 188, 4, 0],
                        [-339, 212, 4, 0],
                        [-324, 235, 4, 0],
                        [-306, 257, 4, 0],
                        [-288, 278, 4, 0],
                        [-268, 297, 4, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 2, 0],
                        [-150, 371, 2, 0],
                        [-124, 380, 2, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [28, 399, 1, 0],
                        [56, 396, 1, 0],
                        [83, 391, 1, 0],
                        [110, 384, 1, 0],
                        [137, 376, 1, 0],
                        [163, 366, 1, 0],
                        [188, 353, 1, 0],
                        [212, 339, 1, 0],
                        [235, 324, 1, 0],
                        [257, 306, 1, 0],
                        [278, 288, 3, 0],
                        [297, 268, 3, 0],
                        [315, 246, 3, 0],
                        [332, 224, 3, 0],
                        [346, 200, 3, 0],
                        [360, 175, 3, 0],
                        [371, 150, 3, 0],
                        [380, 124, 3, 0],
                        [388, 97, 3, 0],
                        [394, 70, 3, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 0],
                        [400, -14, 6, 0],
                        [398, -42, 6, 0],
                        [394, -70, 6, 0],
                        [388, -97, 6, 0],
                        [380, -124, 6, 0],
                        [371, -150, 6, 0],
                        [360, -175, 6, 0],
                        [346, -200, 6, 0],
                        [332, -224, 5, 0],
                        [315, -246, 5, 0],
                        [297, -268, 5, 0],
                        [278, -288, 5, 0],
                        [257, -306, 5, 0],
                        [235, -324, 5, 0],
                        [212, -339, 5, 0],
                        [188, -353, 5, 0],
                        [163, -366, 5, 0],
                        [137, -376, 5, 0],
                        [110, -384, 4, 0],
                        [83, -391, 4, 0],
                        [56, -396, 4, 0],
                        [28, -399, 4, 0],
                        [0, -400, 4, 0],
                        [-28, -399, 4, 0],
                        [-56, -396, 4, 0],
                        [-83, -391, 4, 0],
                        [-124, -380, 4, 0],
                        [-163, -366, 4, 0],
                        [-200, -346, 2, 0],
                        [-235, -324, 2, 0],
                        [-257, -306, 2, 0],
                        [-278, -288, 2, 0],
                        [-297, -268, 2, 0],
                        [-315, -246, 2, 0],
                        [-332, -224, 2, 0],
                        [-346, -200, 2, 0],
                        [-360, -175, 2, 0],
                        [-371, -150, 2, 0],
                        [-380, -124, 7, 0],
                        [-388, -97, 7, 0],
                        [-394, -70, 7, 0],
                        [-398, -42, 7, 0],
                        [-400, 0, 7, 0],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 4, 0],
                        [-353, 188, 4, 0],
                        [-339, 212, 4, 0],
                        [-324, 235, 4, 0],
                        [-306, 257, 4, 0],
                        [-288, 278, 4, 0],
                        [-268, 297, 4, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 2, 0],
                        [-150, 371, 2, 0],
                        [-124, 380, 2, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [28, 399, 1, 0],
                        [56, 396, 1, 0],
                        [83, 391, 1, 0],
                        [110, 384, 1, 0],
                        [137, 376, 1, 0],
                        [163, 366, 1, 0],
                        [188, 353, 1, 0],
                        [212, 339, 1, 0],
                        [235, 324, 1, 0],
                        [257, 306, 1, 0],
                        [278, 288, 3, 0],
                        [297, 268, 3, 0],
                        [315, 246, 3, 0],
                        [332, 224, 3, 0],
                        [346, 200, 3, 0],
                        [360, 175, 3, 0],
                        [371, 150, 3, 0],
                        [380, 124, 3, 0],
                        [388, 97, 3, 0],
                        [394, 70, 3, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 0],
                        [400, -14, 6, 0],
                        [398, -42, 6, 0],
                        [394, -70, 6, 0],
                        [388, -97, 6, 0],
                        [380, -124, 6, 0],
                        [371, -150, 6, 0],
                        [360, -175, 6, 0],
                        [346, -200, 6, 0],
                        [332, -224, 5, 0],
                        [315, -246, 5, 0],
                        [297, -268, 5, 0],
                        [278, -288, 5, 0],
                        [257, -306, 5, 0],
                        [235, -324, 5, 0],
                        [212, -339, 5, 0],
                        [188, -353, 5, 0],
                        [163, -366, 5, 0],
                        [137, -376, 5, 0],
                        [110, -384, 4, 0],
                        [83, -391, 4, 0],
                        [56, -396, 4, 0],
                        [28, -399, 4, 0],
                        [0, -400, 4, 0],
                        [-28, -399, 4, 0],
                        [-56, -396, 4, 0],
                        [-83, -391, 4, 0],
                        [-124, -380, 4, 0],
                        [-163, -366, 4, 0],
                        [-200, -346, 2, 0],
                        [-235, -324, 2, 0],
                        [-257, -306, 2, 0],
                        [-278, -288, 2, 0],
                        [-297, -268, 2, 0],
                        [-315, -246, 2, 0],
                        [-332, -224, 2, 0],
                        [-346, -200, 2, 0],
                        [-360, -175, 2, 0],
                        [-371, -150, 2, 0],
                        [-380, -124, 7, 0],
                        [-388, -97, 7, 0],
                        [-394, -70, 7, 0],
                        [-398, -42, 7, 0],
                        [-400, 0, 7, 0],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 4, 0],
                        [-353, 188, 4, 0],
                        [-339, 212, 4, 0],
                        [-324, 235, 4, 0],
                        [-306, 257, 4, 0],
                        [-288, 278, 4, 0],
                        [-268, 297, 4, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 2, 0],
                        [-150, 371, 2, 0],
                        [-124, 380, 2, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [28, 399, 1, 0],
                        [56, 396, 1, 0],
                        [83, 391, 1, 0],
                        [110, 384, 1, 0],
                        [137, 376, 1, 0],
                        [163, 366, 1, 0],
                        [188, 353, 1, 0],
                        [212, 339, 1, 0],
                        [235, 324, 1, 0],
                        [257, 306, 1, 0],
                        [278, 288, 3, 0],
                        [297, 268, 3, 0],
                        [315, 246, 3, 0],
                        [332, 224, 3, 0],
                        [346, 200, 3, 0],
                        [360, 175, 3, 0],
                        [371, 150, 3, 0],
                        [380, 124, 3, 0],
                        [388, 97, 3, 0],
                        [394, 70, 3, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 0],
                        [400, -14, 6, 0],
                        [398, -42, 6, 0],
                        [394, -70, 6, 0],
                        [388, -97, 6, 0],
                        [380, -124, 6, 0],
                        [371, -150, 6, 0],
                        [360, -175, 6, 0],
                        [346, -200, 6, 0],
                        [332, -224, 5, 0],
                        [315, -246, 5, 0],
                        [297, -268, 5, 0],
                        [278, -288, 5, 0],
                        [257, -306, 5, 0],
                        [235, -324, 5, 0],
                        [212, -339, 5, 0],
                        [188, -353, 5, 0],
                        [163, -366, 5, 0],
                        [137, -376, 5, 0],
                        [110, -384, 4, 0],
                        [83, -391, 4, 0],
                        [56, -396, 4, 0],
                        [28, -399, 4, 0],
                        [0, -400, 4, 0],
                        [-28, -399, 4, 0],
                        [-56, -396, 4, 0],
                        [-83, -391, 4, 0],
                        [-124, -380, 4, 0],
                        [-163, -366, 4, 0],
                        [-200, -346, 2, 0],
                        [-235, -324, 2, 0],
                        [-257, -306, 2, 0],
                        [-278, -288, 2, 0],
                        [-297, -268, 2, 0],
                        [-315, -246, 2, 0],
                        [-332, -224, 2, 0],
                        [-346, -200, 2, 0],
                        [-360, -175, 2, 0],
                        [-371, -150, 2, 0],
                        [-380, -124, 7, 0],
                        [-388, -97, 7, 0],
                        [-394, -70, 7, 0],
                        [-398, -42, 7, 0],
                        [-400, 0, 7, 0],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 4, 0],
                        [-353, 188, 4, 0],
                        [-339, 212, 4, 0],
                        [-324, 235, 4, 0],
                        [-306, 257, 4, 0],
                        [-288, 278, 4, 0],
                        [-268, 297, 4, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 2, 0],
                        [-150, 371, 2, 0],
                        [-124, 380, 2, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [28, 399, 1, 0],
                        [56, 396, 1, 0],
                        [83, 391, 1, 0],
                        [110, 384, 1, 0],
                        [137, 376, 1, 0],
                        [163, 366, 1, 0],
                        [188, 353, 1, 0],
                        [212, 339, 1, 0],
                        [235, 324, 1, 0],
                        [257, 306, 1, 0],
                        [278, 288, 3, 0],
                        [297, 268, 3, 0],
                        [315, 246, 3, 0],
                        [332, 224, 3, 0],
                        [346, 200, 3, 0],
                        [360, 175, 3, 0],
                        [371, 150, 3, 0],
                        [380, 124, 3, 0],
                        [388, 97, 3, 0],
                        [394, 70, 3, 0],
                        [398, 42, 6, 0],
                        [400, 0, 6, 0],
                        [400, -14, 6, 0],
                        [398, -42, 6, 0],
                        [394, -70, 6, 0],
                        [388, -97, 6, 0],
                        [380, -124, 6, 0],
                        [371, -150, 6, 0],
                        [360, -175, 6, 0],
                        [346, -200, 6, 0],
                        [332, -224, 5, 0],
                        [315, -246, 5, 0],
                        [297, -268, 5, 0],
                        [278, -288, 5, 0],
                        [257, -306, 5, 0],
                        [235, -324, 5, 0],
                        [212, -339, 5, 0],
                        [188, -353, 5, 0],
                        [163, -366, 5, 0],
                        [137, -376, 5, 0],
                        [110, -384, 4, 0],
                        [83, -391, 4, 0],
                        [56, -396, 4, 0],
                        [28, -399, 4, 0],
                        [0, -400, 4, 0],
                        [-28, -399, 4, 0],
                        [-56, -396, 4, 0],
                        [-83, -391, 4, 0],
                        [-124, -380, 4, 0],
                        [-163, -366, 4, 0],
                        [-200, -346, 2, 0],
                        [-235, -324, 2, 0],
                        [-257, -306, 2, 0],
                        [-278, -288, 2, 0],
                        [-297, -268, 2, 0],
                        [-315, -246, 2, 0],
                        [-332, -224, 2, 0],
                        [-346, -200, 2, 0],
                        [-360, -175, 2, 0],
                        [-371, -150, 2, 0],
                        [-380, -124, 7, 0],
                        [-388, -97, 7, 0],
                        [-394, -70, 7, 0],
                        [-398, -42, 7, 0],
                        [-400, 0, 7, 0],
                        [-400, 14, 7, 0],
                        [-398, 42, 7, 0],
                        [-394, 70, 7, 0],
                        [-384, 110, 7, 0],
                        [-376, 137, 7, 0],
                        [-366, 163, 4, 0],
                        [-353, 188, 4, 0],
                        [-339, 212, 4, 0],
                        [-324, 235, 4, 0],
                        [-306, 257, 4, 0],
                        [-288, 278, 4, 0],
                        [-268, 297, 4, 0],
                        [-246, 315, 4, 0],
                        [-224, 332, 4, 0],
                        [-200, 346, 4, 0],
                        [-175, 360, 2, 0],
                        [-150, 371, 2, 0],
                        [-124, 380, 2, 0],
                        [-97, 388, 2, 0],
                        [-70, 394, 2, 0],
                        [-42, 398, 2, 0],
                        [-14, 400, 2, 0],
                        [0, 400, 2, 1]
                    ],
                    [
                        [-366, -62, 0, 1],
                        [-366, 36, 1, 1],
                        [-340, 37, 1, 1],
                        [-354, 0, 1, 1],
                        [-347, -9, 1, 0],
                        [-343, -20, 1, 0],
                        [-342, -32, 1, 0],
                        [-348, -38, 1, 0],
                        [-356, -36, 1, 1],
                        [-338, 30, 0, 1],
                        [-328, 16, 1, 1],
                        [-342, -1, 0, 1],
                        [-327, -1, 1, 1],
                        [-327, -47, 1, 1],
                        [-343, -59, 1, 1],
                        [-327, -48, 0, 1],
                        [-320, -55, 1, 0],
                        [-309, -57, 1, 0],
                        [-291, -59, 1, 0],
                        [-268, -59, 1, 1],
                        [-324, 25, 0, 1],
                        [-269, 25, 1, 1],
                        [-297, 41, 0, 1],
                        [-306, 21, 1, 0],
                        [-312, 12, 1, 0],
                        [-322, 3, 1, 1],
                        [-311, -49, 0, 1],
                        [-311, 6, 1, 1],
                        [-276, 7, 1, 1],
                        [-277, -49, 1, 1],
                        [-284, -43, 1, 1],
                        [-311, -9, 0, 1],
                        [-277, -9, 1, 1],
                        [-311, -26, 0, 1],
                        [-277, -26, 1, 1],
                        [-252, 15, 0, 1],
                        [-209, 15, 1, 1],
                        [-231, 42, 0, 1],
                        [-231, -66, 1, 1],
                        [-232, 14, 0, 1],
                        [-236, 0, 1, 0],
                        [-245, -19, 1, 0],
                        [-255, -32, 1, 1],
                        [-231, 5, 0, 1],
                        [-221, -6, 1, 0],
                        [-210, -16, 1, 1],
                        [-217, -61, 0, 1],
                        [-209, -51, 1, 0],
                        [-202, -40, 1, 0],
                        [-199, -11, 1, 0],
                        [-199, 31, 1, 1],
                        [-165, 31, 1, 1],
                        [-165, -44, 1, 0],
                        [-165, -55, 1, 0],
                        [-161, -58, 1, 0],
                        [-153, -58, 1, 0],
                        [-148, -53, 1, 0],
                        [-147, -46, 1, 1],
                        [-94, -46, 0, 1],
                        [-94, 38, 2, 1],
                        [-82, 38, 2, 0],
                        [-67, 37, 2, 0],
                        [-54, 31, 2, 0],
                        [-51, 20, 2, 0],
                        [-52, 7, 2, 0],
                        [-57, 1, 2, 0],
                        [-69, -2, 2, 0],
                        [-94, -2, 2, 1],
                        [-81, -2, 0, 1],
                        [-48, -48, 2, 1],
                        [30, -10, 0, 1],
                        [22, 5, 2, 0],
                        [3, 16, 2, 0],
                        [-18, 11, 2, 0],
                        [-29, -3, 2, 0],
                        [-30, -18, 2, 0],
                        [-24, -33, 2, 0],
                        [-14, -43, 2, 0],
                        [4, -47, 2, 0],
                        [16, -40, 2, 0],
                        [25, -33, 2, 0],
                        [31, -12, 2, 1],
                        [29, 17, 0, 1],
                        [30, -48, 2, 1],
                        [53, -45, 0, 1],
                        [53, -25, 2, 0],
                        [55, -2, 2, 0],
                        [61, 10, 2, 0],
                        [69, 15, 2, 0],
                        [81, 16, 2, 0],
                        [91, 16, 2, 0],
                        [100, 9, 2, 0],
                        [105, -4, 2, 0],
                        [105, -45, 2, 1],
                        [184, -12, 0, 1],
                        [179, 4, 2, 0],
                        [169, 13, 2, 0],
                        [151, 15, 2, 0],
                        [134, 7, 2, 0],
                        [126, -2, 2, 0],
                        [124, -18, 2, 0],
                        [130, -31, 2, 0],
                        [139, -42, 2, 0],
                        [149, -46, 2, 0],
                        [157, -47, 2, 0],
                        [172, -41, 2, 0],
                        [178, -35, 2, 0],
                        [185, -15, 2, 1],
                        [184, 42, 0, 1],
                        [185, -47, 2, 1],
                        [235, 18, 0, 1],
                        [245, 17, 2, 0],
                        [255, 11, 2, 0],
                        [265, -3, 2, 0],
                        [266, -15, 2, 0],
                        [264, -29, 2, 0],
                        [255, -39, 2, 0],
                        [239, -46, 2, 0],
                        [225, -43, 2, 0],
                        [212, -35, 2, 0],
                        [207, -23, 2, 0],
                        [205, -9, 2, 0],
                        [210, 2, 2, 0],
                        [220, 14, 2, 0],
                        [236, 18, 2, 1],
                        [288, -46, 0, 1],
                        [288, -21, 2, 0],
                        [289, -8, 2, 0],
                        [292, 4, 2, 0],
                        [299, 13, 2, 0],
                        [312, 16, 2, 0],
                        [322, 14, 2, 0],
                        [328, 9, 2, 0],
                        [332, -1, 2, 0],
                        [332, -47, 2, 1],
                        [332, -11, 2, 0],
                        [332, -1, 2, 0],
                        [337, 6, 2, 0],
                        [343, 14, 2, 0],
                        [352, 16, 2, 0],
                        [361, 16, 2, 0],
                        [368, 14, 2, 0],
                        [372, 7, 2, 0],
                        [375, 1, 2, 0],
                        [375, -47, 2, 1]
                    ],
                    [
                        [-347, 40, 0, 1],
                        [-371, 9, 1, 1],
                        [-345, 8, 1, 1],
                        [-336, 21, 0, 1],
                        [-371, -26, 1, 1],
                        [-337, -20, 1, 1],
                        [-373, -52, 0, 1],
                        [-332, -43, 1, 1],
                        [-330, 8, 0, 1],
                        [-278, 15, 1, 1],
                        [-332, -17, 0, 1],
                        [-272, -5, 1, 1],
                        [-311, 41, 0, 1],
                        [-310, 20, 1, 0],
                        [-309, 1, 1, 0],
                        [-305, -24, 1, 0],
                        [-300, -43, 1, 0],
                        [-290, -56, 1, 0],
                        [-280, -63, 1, 1],
                        [-270, -49, 1, 1],
                        [-333, -57, 0, 1],
                        [-320, -52, 1, 0],
                        [-305, -44, 1, 0],
                        [-293, -36, 1, 0],
                        [-278, -22, 1, 1],
                        [-296, 37, 0, 1],
                        [-282, 25, 1, 1],
                        [-211, 41, 0, 1],
                        [-241, 11, 1, 1],
                        [-222, 30, 0, 1],
                        [-169, 30, 1, 1],
                        [-174, 23, 1, 0],
                        [-187, 13, 1, 0],
                        [-201, 3, 1, 0],
                        [-218, -4, 1, 0],
                        [-239, -9, 1, 0],
                        [-250, -11, 1, 1],
                        [-220, 21, 0, 1],
                        [-211, 15, 1, 0],
                        [-196, 5, 1, 0],
                        [-179, -2, 1, 0],
                        [-163, -4, 1, 0],
                        [-150, -8, 1, 1],
                        [-240, -24, 0, 1],
                        [-155, -23, 1, 1],
                        [-198, -11, 0, 1],
                        [-197, -66, 1, 1],
                        [-213, -54, 1, 1],
                        [-245, -52, 0, 1],
                        [-218, -33, 1, 1],
                        [-183, -31, 0, 1],
                        [-157, -52, 1, 1],
                        [-96, 39, 0, 1],
                        [-95, -45, 2, 1],
                        [-60, -45, 2, 1],
                        [-45, 38, 0, 1],
                        [-45, 36, 2, 1],
                        [-43, 17, 0, 1],
                        [-44, -47, 2, 1],
                        [-18, -46, 0, 1],
                        [-19, -26, 2, 0],
                        [-19, -13, 2, 0],
                        [-18, -1, 2, 0],
                        [-14, 8, 2, 0],
                        [-6, 15, 2, 0],
                        [5, 19, 2, 0],
                        [14, 18, 2, 0],
                        [22, 13, 2, 0],
                        [28, 7, 2, 0],
                        [30, -2, 2, 0],
                        [31, -46, 2, 1],
                        [50, -11, 0, 1],
                        [113, -12, 2, 1],
                        [109, 2, 2, 0],
                        [96, 13, 2, 0],
                        [84, 18, 2, 0],
                        [71, 16, 2, 0],
                        [60, 9, 2, 0],
                        [53, -2, 2, 0],
                        [50, -7, 2, 0],
                        [50, -14, 2, 0],
                        [52, -24, 2, 0],
                        [60, -37, 2, 0],
                        [73, -45, 2, 0],
                        [86, -47, 2, 0],
                        [98, -43, 2, 0],
                        [107, -35, 2, 0],
                        [111, -28, 2, 1]
                    ],
                    [
                        [-372, 27, 0, 1],
                        [-334, 26, 1, 1],
                        [-378, 5, 0, 1],
                        [-330, 5, 1, 1],
                        [-356, 3, 0, 1],
                        [-373, -35, 1, 1],
                        [-336, -29, 1, 1],
                        [-346, -7, 0, 1],
                        [-331, -36, 1, 1],
                        [-329, 17, 0, 1],
                        [-288, 16, 1, 1],
                        [-289, -50, 1, 1],
                        [-300, -44, 1, 1],
                        [-309, 39, 0, 1],
                        [-309, 21, 1, 0],
                        [-310, 5, 1, 0],
                        [-312, -16, 1, 0],
                        [-316, -31, 1, 0],
                        [-324, -45, 1, 0],
                        [-332, -54, 1, 1],
                        [-264, 31, 0, 1],
                        [-183, 31, 1, 1],
                        [-247, 13, 0, 1],
                        [-199, 12, 1, 1],
                        [-199, -27, 1, 1],
                        [-248, -28, 1, 1],
                        [-248, 14, 1, 1],
                        [-248, -5, 0, 1],
                        [-199, -5, 1, 1],
                        [-223, 13, 0, 1],
                        [-223, -26, 1, 1],
                        [-263, 2, 0, 1],
                        [-263, -48, 1, 1],
                        [-184, -48, 1, 1],
                        [-184, 5, 1, 1],
                        [-138, -38, 0, 1],
                        [-105, 37, 2, 1],
                        [-69, -38, 2, 1],
                        [-124, -8, 0, 1],
                        [-85, -8, 2, 1],
                        [-53, -37, 0, 1],
                        [-52, -18, 2, 0],
                        [-51, -2, 2, 0],
                        [-45, 10, 2, 0],
                        [-36, 17, 2, 0],
                        [-25, 17, 2, 0],
                        [-15, 13, 2, 0],
                        [-10, 4, 2, 0],
                        [-8, -5, 2, 0],
                        [-8, -38, 2, 1],
                        [9, 37, 0, 1],
                        [10, 36, 2, 1],
                        [11, 18, 0, 1],
                        [11, -38, 2, 1],
                        [32, -37, 0, 1],
                        [34, -12, 2, 0],
                        [36, 4, 2, 0],
                        [41, 14, 2, 0],
                        [53, 17, 2, 0],
                        [64, 17, 2, 0],
                        [72, 9, 2, 0],
                        [73, -38, 2, 1],
                        [73, -14, 2, 0],
                        [73, 4, 2, 0],
                        [80, 13, 2, 0],
                        [92, 18, 2, 0],
                        [105, 16, 2, 0],
                        [111, 8, 2, 0],
                        [112, 0, 2, 0],
                        [113, -40, 2, 1],
                        [182, -9, 0, 1],
                        [178, 4, 2, 0],
                        [165, 16, 2, 0],
                        [144, 15, 2, 0],
                        [132, 8, 2, 0],
                        [128, -8, 2, 0],
                        [129, -21, 2, 0],
                        [129, -21, 2, 0],
                        [138, -33, 2, 0],
                        [148, -38, 2, 0],
                        [159, -39, 2, 0],
                        [170, -34, 2, 0],
                        [179, -25, 2, 0],
                        [181, -10, 2, 1],
                        [182, 17, 0, 1],
                        [182, -39, 2, 1],
                        [199, 14, 0, 1],
                        [226, 14, 2, 1],
                        [212, 40, 0, 1],
                        [212, -39, 2, 1],
                        [240, 35, 0, 1],
                        [240, 35, 2, 1],
                        [240, 18, 0, 1],
                        [240, -39, 2, 1],
                        [283, 17, 0, 1],
                        [295, 16, 2, 0],
                        [306, 5, 2, 0],
                        [310, -7, 2, 0],
                        [311, -20, 2, 0],
                        [301, -31, 2, 0],
                        [290, -38, 2, 0],
                        [275, -36, 2, 0],
                        [262, -25, 2, 0],
                        [258, -11, 2, 0],
                        [262, 2, 2, 0],
                        [270, 12, 2, 0],
                        [282, 17, 2, 1],
                        [331, -39, 0, 1],
                        [331, -18, 2, 0],
                        [333, -2, 2, 0],
                        [338, 8, 2, 0],
                        [345, 14, 2, 0],
                        [356, 16, 2, 0],
                        [368, 13, 2, 0],
                        [374, 3, 2, 0],
                        [375, -7, 2, 0],
                        [375, -40, 2, 1]
                    ],
                    [
                        [-334, 39, 0, 1],
                        [-320, 21, 1, 1],
                        [-358, 19, 0, 1],
                        [-290, 19, 1, 1],
                        [-291, -16, 1, 1],
                        [-356, -16, 1, 1],
                        [-357, 19, 0, 1],
                        [-357, -1, 1, 0],
                        [-357, -10, 1, 0],
                        [-357, -21, 1, 0],
                        [-358, -34, 1, 0],
                        [-364, -47, 1, 0],
                        [-373, -58, 1, 1],
                        [-243, 33, 0, 1],
                        [-249, 19, 1, 0],
                        [-257, 3, 1, 0],
                        [-267, -12, 1, 1],
                        [-252, 14, 0, 1],
                        [-221, 13, 1, 1],
                        [-224, -1, 1, 0],
                        [-231, -18, 1, 0],
                        [-241, -34, 1, 0],
                        [-266, -53, 1, 1],
                        [-254, -4, 0, 1],
                        [-236, -24, 1, 1],
                        [-207, 36, 0, 1],
                        [-206, -59, 1, 1],
                        [-197, 8, 0, 1],
                        [-177, -19, 1, 1],
                        [-94, 33, 0, 1],
                        [-81, 31, 2, 0],
                        [-66, 22, 2, 0],
                        [-57, 6, 2, 0],
                        [-55, -12, 2, 0],
                        [-60, -25, 2, 0],
                        [-75, -38, 2, 0],
                        [-90, -42, 2, 0],
                        [-111, -39, 2, 0],
                        [-123, -26, 2, 0],
                        [-130, -10, 2, 0],
                        [-129, 11, 2, 0],
                        [-119, 25, 2, 0],
                        [-107, 32, 2, 0],
                        [-95, 34, 2, 1],
                        [-34, 14, 0, 1],
                        [-34, -12, 2, 0],
                        [-33, -25, 2, 0],
                        [-29, -35, 2, 0],
                        [-23, -41, 2, 0],
                        [-13, -45, 2, 0],
                        [-3, -44, 2, 0],
                        [3, -39, 2, 0],
                        [7, -35, 2, 0],
                        [10, -27, 2, 0],
                        [10, 14, 2, 1],
                        [26, 11, 0, 1],
                        [54, 11, 2, 1],
                        [40, 37, 0, 1],
                        [40, -44, 2, 1],
                        [120, -9, 0, 1],
                        [115, 0, 2, 0],
                        [107, 8, 2, 0],
                        [96, 12, 2, 0],
                        [78, 9, 2, 0],
                        [68, -2, 2, 0],
                        [67, -16, 2, 0],
                        [71, -32, 2, 0],
                        [82, -39, 2, 0],
                        [93, -42, 2, 0],
                        [107, -39, 2, 0],
                        [115, -30, 2, 0],
                        [119, -24, 2, 0],
                        [121, -10, 2, 1],
                        [120, 36, 0, 1],
                        [121, -44, 2, 1],
                        [168, 13, 0, 1],
                        [178, 11, 2, 0],
                        [188, 2, 2, 0],
                        [193, -6, 2, 0],
                        [195, -20, 2, 0],
                        [189, -33, 2, 0],
                        [181, -39, 2, 0],
                        [171, -43, 2, 0],
                        [157, -41, 2, 0],
                        [147, -33, 2, 0],
                        [141, -22, 2, 0],
                        [141, -9, 2, 0],
                        [145, 2, 2, 0],
                        [154, 10, 2, 0],
                        [168, 13, 2, 1],
                        [238, 14, 0, 1],
                        [250, 10, 2, 0],
                        [259, 3, 2, 0],
                        [264, -5, 2, 0],
                        [265, -16, 2, 0],
                        [264, -25, 2, 0],
                        [260, -33, 2, 0],
                        [250, -39, 2, 0],
                        [240, -42, 2, 0],
                        [225, -40, 2, 0],
                        [215, -30, 2, 0],
                        [210, -17, 2, 0],
                        [213, -2, 2, 0],
                        [223, 9, 2, 0],
                        [237, 14, 2, 1],
                        [283, 14, 0, 1],
                        [283, -44, 2, 1],
                        [283, -26, 2, 0],
                        [284, -15, 2, 0],
                        [288, 0, 2, 0],
                        [297, 10, 2, 0],
                        [302, 13, 2, 0],
                        [307, 16, 2, 1]
                    ]
                ]
            }, {
                label: "\u4eae\u70b9",
                arr: [
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 7, 29],
                        [-372, 0, 2, 0],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 0],
                        [-266, 0, 2, 0],
                        [-239, 0, 2, 0],
                        [-213, 0, 2, 0],
                        [-186, 0, 2, 0],
                        [-160, 0, 2, 0],
                        [-133, 0, 2, 0],
                        [-106, 0, 2, 0],
                        [-80, 0, 2, 0],
                        [-53, 0, 2, 0],
                        [-27, 0, 2, 0],
                        [0, 0, 2, 0],
                        [27, 0, 2, 0],
                        [53, 0, 2, 0],
                        [80, 0, 2, 0],
                        [106, 0, 2, 0],
                        [133, 0, 2, 0],
                        [160, 0, 2, 0],
                        [186, 0, 2, 0],
                        [213, 0, 2, 0],
                        [239, 0, 2, 0],
                        [266, 0, 2, 0],
                        [293, 0, 2, 0],
                        [319, 0, 2, 0],
                        [346, 0, 2, 0],
                        [372, 0, 2, 0],
                        [399, 0, 2, 1],
                        [399, 0, 7, 29]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 7, 15],
                        [399, 0, 2, 1],
                        [399, 0, 7, 15]
                    ],
                    [
                        [-384, 0, 0, 1],
                        [-384, 0, 7, 20],
                        [-360, 0, 2, 0],
                        [-336, 0, 2, 0],
                        [-312, 0, 2, 0],
                        [-288, 0, 2, 1],
                        [-288, 0, 7, 20],
                        [-264, 0, 2, 0],
                        [-240, 0, 2, 0],
                        [-216, 0, 2, 0],
                        [-192, 0, 2, 1],
                        [-192, 0, 7, 20],
                        [-168, 0, 2, 0],
                        [-144, 0, 2, 0],
                        [-120, 0, 2, 0],
                        [-96, 0, 2, 1],
                        [-96, 0, 7, 20],
                        [-72, 0, 2, 0],
                        [-48, 0, 2, 0],
                        [-24, 0, 2, 0],
                        [0, 0, 2, 1],
                        [0, 0, 7, 20],
                        [24, 0, 2, 0],
                        [48, 0, 2, 0],
                        [72, 0, 2, 0],
                        [96, 0, 2, 1],
                        [96, 0, 7, 20],
                        [120, 0, 2, 0],
                        [144, 0, 2, 0],
                        [168, 0, 2, 0],
                        [192, 0, 2, 1],
                        [192, 0, 7, 20],
                        [216, 0, 2, 0],
                        [240, 0, 2, 0],
                        [264, 0, 2, 0],
                        [288, 0, 2, 1],
                        [288, 0, 7, 20],
                        [312, 0, 2, 0],
                        [336, 0, 2, 0],
                        [360, 0, 2, 0],
                        [384, 0, 2, 1],
                        [384, 0, 7, 20]
                    ],
                    [
                        [-200, 0, 0, 1],
                        [-200, 0, 7, 12],
                        [-180, 0, 4, 0],
                        [-160, 0, 4, 0],
                        [-140, 0, 4, 0],
                        [-120, 0, 4, 0],
                        [-100, 0, 4, 0],
                        [-80, 0, 4, 0],
                        [-60, 0, 4, 0],
                        [-40, 0, 4, 0],
                        [-20, 0, 4, 1],
                        [-20, 0, 7, 12],
                        [20, 0, 0, 1],
                        [20, 0, 7, 12],
                        [40, 0, 6, 0],
                        [60, 0, 6, 0],
                        [80, 0, 6, 0],
                        [100, 0, 6, 0],
                        [120, 0, 6, 0],
                        [140, 0, 6, 0],
                        [160, 0, 6, 0],
                        [180, 0, 6, 0],
                        [200, 0, 6, 1],
                        [200, 0, 7, 12]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 7, 20],
                        [-372, 0, 4, 0],
                        [-346, 0, 4, 0],
                        [-319, 0, 4, 0],
                        [-293, 0, 4, 0],
                        [-266, 0, 4, 0],
                        [-239, 0, 4, 0],
                        [-213, 0, 4, 0],
                        [-186, 0, 4, 1],
                        [-186, 0, 7, 20],
                        [-106, 0, 0, 1],
                        [-106, 0, 7, 20],
                        [-80, 0, 5, 0],
                        [-53, 0, 5, 0],
                        [-27, 0, 5, 0],
                        [0, 0, 5, 0],
                        [27, 0, 5, 0],
                        [53, 0, 5, 0],
                        [80, 0, 5, 0],
                        [106, 0, 5, 1],
                        [106, 0, 7, 20],
                        [186, 0, 0, 1],
                        [186, 0, 7, 20],
                        [213, 0, 6, 0],
                        [239, 0, 6, 0],
                        [266, 0, 6, 0],
                        [293, 0, 6, 0],
                        [319, 0, 6, 0],
                        [346, 0, 6, 0],
                        [372, 0, 6, 0],
                        [399, 0, 6, 1],
                        [399, 0, 7, 20]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 7, 20],
                        [-372, 0, 2, 0],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 0],
                        [-266, 0, 2, 0],
                        [-239, 0, 2, 0],
                        [-213, 0, 2, 1],
                        [-213, 0, 7, 20],
                        [-186, 0, 0, 1],
                        [-186, 0, 7, 20],
                        [-160, 0, 6, 0],
                        [-133, 0, 6, 0],
                        [-106, 0, 6, 0],
                        [-80, 0, 6, 0],
                        [-53, 0, 6, 0],
                        [-27, 0, 6, 0],
                        [-13, 0, 6, 1],
                        [-13, 0, 7, 20],
                        [13, 0, 0, 1],
                        [13, 0, 7, 20],
                        [27, 0, 2, 0],
                        [53, 0, 2, 0],
                        [80, 0, 2, 0],
                        [106, 0, 2, 0],
                        [133, 0, 2, 0],
                        [160, 0, 2, 0],
                        [186, 0, 2, 1],
                        [186, 0, 7, 20],
                        [213, 0, 0, 1],
                        [213, 0, 7, 20],
                        [239, 0, 6, 0],
                        [266, 0, 6, 0],
                        [293, 0, 6, 0],
                        [319, 0, 6, 0],
                        [346, 0, 6, 0],
                        [372, 0, 6, 0],
                        [399, 0, 6, 1],
                        [399, 0, 7, 20]
                    ],
                    [
                        [-372, 0, 0, 1],
                        [-372, 0, 7, 20],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 1],
                        [-293, 0, 7, 20],
                        [-239, 0, 0, 1],
                        [-239, 0, 7, 20],
                        [-213, 0, 6, 0],
                        [-186, 0, 6, 0],
                        [-160, 0, 6, 1],
                        [-160, 0, 7, 20],
                        [-106, 0, 0, 1],
                        [-106, 0, 7, 20],
                        [-80, 0, 1, 0],
                        [-53, 0, 1, 0],
                        [-27, 0, 1, 1],
                        [-27, 0, 7, 20],
                        [27, 0, 0, 1],
                        [27, 0, 7, 20],
                        [53, 0, 4, 0],
                        [80, 0, 4, 0],
                        [106, 0, 4, 1],
                        [106, 0, 7, 20],
                        [160, 0, 0, 1],
                        [160, 0, 7, 20],
                        [186, 0, 3, 0],
                        [213, 0, 3, 0],
                        [239, 0, 3, 1],
                        [239, 0, 7, 20],
                        [293, 0, 0, 1],
                        [293, 0, 7, 20],
                        [319, 0, 5, 0],
                        [346, 0, 5, 0],
                        [372, 0, 5, 1],
                        [372, 0, 7, 20]
                    ],
                    [
                        [-412, 0, 0, 1],
                        [-412, 0, 7, 20],
                        [-386, 0, 2, 0],
                        [-359, 0, 2, 0],
                        [-332, 0, 2, 1],
                        [-332, 0, 7, 20],
                        [-306, 0, 0, 1],
                        [-306, 0, 7, 20],
                        [-279, 0, 7, 0],
                        [-253, 0, 7, 0],
                        [-226, 0, 7, 1],
                        [-226, 0, 7, 20],
                        [-200, 0, 0, 1],
                        [-200, 0, 7, 20],
                        [-173, 0, 1, 0],
                        [-146, 0, 1, 0],
                        [-120, 0, 1, 1],
                        [-120, 0, 7, 20],
                        [-93, 0, 0, 1],
                        [-93, 0, 7, 20],
                        [-66, 0, 4, 0],
                        [-40, 0, 4, 0],
                        [-13, 0, 4, 1],
                        [-13, 0, 7, 20],
                        [13, 0, 0, 1],
                        [13, 0, 7, 20],
                        [40, 0, 3, 0],
                        [66, 0, 3, 0],
                        [93, 0, 3, 1],
                        [93, 0, 7, 20],
                        [120, 0, 0, 1],
                        [120, 0, 7, 20],
                        [146, 0, 6, 0],
                        [173, 0, 6, 0],
                        [200, 0, 6, 1],
                        [200, 0, 7, 20],
                        [226, 0, 0, 1],
                        [226, 0, 7, 20],
                        [253, 0, 2, 0],
                        [279, 0, 2, 0],
                        [306, 0, 2, 1],
                        [306, 0, 7, 20],
                        [332, 0, 0, 1],
                        [332, 0, 7, 20],
                        [359, 0, 5, 0],
                        [386, 0, 5, 0],
                        [412, 0, 5, 1],
                        [412, 0, 7, 20]
                    ],
                    [
                        [-412, 0, 0, 1],
                        [-412, 0, 7, 18],
                        [-386, 0, 1, 0],
                        [-359, 0, 1, 0],
                        [-332, 0, 1, 1],
                        [-332, 0, 7, 18],
                        [-306, 0, 0, 1],
                        [-306, 0, 7, 18],
                        [-279, 0, 1, 0],
                        [-253, 0, 1, 0],
                        [-226, 0, 1, 1],
                        [-226, 0, 7, 18],
                        [-200, 0, 0, 1],
                        [-200, 0, 7, 18],
                        [-173, 0, 4, 0],
                        [-146, 0, 4, 0],
                        [-120, 0, 4, 1],
                        [-120, 0, 7, 18],
                        [-93, 0, 0, 1],
                        [-93, 0, 7, 18],
                        [-66, 0, 4, 0],
                        [-40, 0, 4, 0],
                        [-13, 0, 4, 1],
                        [-13, 0, 7, 18],
                        [13, 0, 0, 1],
                        [13, 0, 7, 18],
                        [40, 0, 2, 0],
                        [66, 0, 2, 0],
                        [93, 0, 2, 1],
                        [93, 0, 7, 18],
                        [120, 0, 0, 1],
                        [120, 0, 7, 18],
                        [146, 0, 2, 0],
                        [173, 0, 2, 0],
                        [200, 0, 2, 1],
                        [200, 0, 7, 18],
                        [226, 0, 0, 1],
                        [226, 0, 7, 18],
                        [253, 0, 6, 0],
                        [279, 0, 6, 0],
                        [306, 0, 6, 1],
                        [306, 0, 7, 18],
                        [332, 0, 0, 1],
                        [332, 0, 7, 18],
                        [359, 0, 6, 0],
                        [386, 0, 6, 0],
                        [412, 0, 6, 1],
                        [412, 0, 7, 18]
                    ],
                    [
                        [-405, 0, 0, 1],
                        [-405, 0, 7, 15],
                        [-382, 0, 7, 0],
                        [-360, 0, 7, 0],
                        [-338, 0, 7, 1],
                        [-338, 0, 7, 15],
                        [-322, 0, 0, 1],
                        [-322, 0, 7, 15],
                        [-300, 0, 1, 0],
                        [-278, 0, 1, 0],
                        [-255, 0, 1, 1],
                        [-255, 0, 7, 15],
                        [-240, 0, 0, 1],
                        [-240, 0, 7, 15],
                        [-218, 0, 7, 0],
                        [-195, 0, 7, 0],
                        [-172, 0, 7, 1],
                        [-172, 0, 7, 15],
                        [-158, 0, 0, 1],
                        [-158, 0, 7, 15],
                        [-135, 0, 1, 0],
                        [-112, 0, 1, 0],
                        [-90, 0, 1, 1],
                        [-90, 0, 7, 15],
                        [-75, 0, 0, 1],
                        [-75, 0, 7, 15],
                        [-52, 0, 7, 0],
                        [-30, 0, 7, 0],
                        [-8, 0, 7, 1],
                        [-8, 0, 7, 15],
                        [8, 0, 0, 1],
                        [8, 0, 7, 15],
                        [30, 0, 1, 0],
                        [52, 0, 1, 0],
                        [75, 0, 1, 1],
                        [75, 0, 7, 15],
                        [90, 0, 0, 1],
                        [90, 0, 7, 15],
                        [112, 0, 7, 0],
                        [135, 0, 7, 0],
                        [158, 0, 7, 1],
                        [158, 0, 7, 15],
                        [172, 0, 0, 1],
                        [172, 0, 7, 15],
                        [195, 0, 1, 0],
                        [218, 0, 1, 0],
                        [240, 0, 1, 1],
                        [240, 0, 7, 15],
                        [255, 0, 0, 1],
                        [255, 0, 7, 15],
                        [278, 0, 7, 0],
                        [300, 0, 7, 0],
                        [322, 0, 7, 1],
                        [322, 0, 7, 15],
                        [338, 0, 0, 1],
                        [338, 0, 7, 15],
                        [360, 0, 1, 0],
                        [382, 0, 1, 0],
                        [405, 0, 1, 1],
                        [405, 0, 7, 15]
                    ],
                    [
                        [-392, 0, 0, 1],
                        [-392, 0, 7, 12],
                        [-366, 0, 4, 0],
                        [-339, 0, 4, 1],
                        [-339, 0, 7, 12],
                        [-326, 0, 0, 1],
                        [-326, 0, 7, 12],
                        [-299, 0, 3, 0],
                        [-273, 0, 3, 1],
                        [-273, 0, 7, 12],
                        [-259, 0, 0, 1],
                        [-259, 0, 7, 12],
                        [-233, 0, 4, 0],
                        [-206, 0, 4, 1],
                        [-206, 0, 7, 12],
                        [-193, 0, 0, 1],
                        [-193, 0, 7, 12],
                        [-166, 0, 3, 0],
                        [-140, 0, 3, 1],
                        [-140, 0, 7, 12],
                        [-126, 0, 0, 1],
                        [-126, 0, 7, 12],
                        [-100, 0, 4, 0],
                        [-73, 0, 4, 1],
                        [-73, 0, 7, 12],
                        [-60, 0, 0, 1],
                        [-60, 0, 7, 12],
                        [-33, 0, 3, 0],
                        [-7, 0, 3, 1],
                        [-7, 0, 7, 12],
                        [7, 0, 0, 1],
                        [7, 0, 7, 12],
                        [33, 0, 4, 0],
                        [60, 0, 4, 1],
                        [60, 0, 7, 12],
                        [73, 0, 0, 1],
                        [73, 0, 7, 12],
                        [100, 0, 3, 0],
                        [126, 0, 3, 1],
                        [126, 0, 7, 12],
                        [140, 0, 0, 1],
                        [140, 0, 7, 12],
                        [166, 0, 4, 0],
                        [193, 0, 4, 1],
                        [193, 0, 7, 12],
                        [206, 0, 0, 1],
                        [206, 0, 7, 12],
                        [233, 0, 3, 0],
                        [259, 0, 3, 1],
                        [259, 0, 7, 12],
                        [273, 0, 0, 1],
                        [273, 0, 7, 12],
                        [299, 0, 4, 0],
                        [326, 0, 4, 1],
                        [326, 0, 7, 12],
                        [339, 0, 0, 1],
                        [339, 0, 7, 12],
                        [366, 0, 3, 0],
                        [392, 0, 3, 1],
                        [392, 0, 7, 12]
                    ],
                    [
                        [-406, 0, 0, 1],
                        [-406, 0, 7, 18],
                        [-377, 0, 2, 0],
                        [-348, 0, 2, 1],
                        [-348, 0, 7, 18],
                        [-319, 0, 2, 0],
                        [-290, 0, 2, 1],
                        [-290, 0, 7, 18],
                        [-261, 0, 2, 0],
                        [-232, 0, 2, 1],
                        [-232, 0, 7, 18],
                        [-203, 0, 2, 0],
                        [-174, 0, 2, 1],
                        [-174, 0, 7, 18],
                        [-145, 0, 2, 0],
                        [-116, 0, 2, 1],
                        [-116, 0, 7, 18],
                        [-87, 0, 2, 0],
                        [-58, 0, 2, 1],
                        [-58, 0, 7, 18],
                        [-29, 0, 2, 0],
                        [0, 0, 2, 1],
                        [0, 0, 7, 18],
                        [29, 0, 2, 0],
                        [58, 0, 2, 1],
                        [58, 0, 7, 18],
                        [87, 0, 2, 0],
                        [116, 0, 2, 1],
                        [116, 0, 7, 18],
                        [145, 0, 2, 0],
                        [174, 0, 2, 1],
                        [174, 0, 7, 18],
                        [203, 0, 2, 0],
                        [232, 0, 2, 1],
                        [232, 0, 7, 18],
                        [261, 0, 2, 0],
                        [290, 0, 2, 1],
                        [290, 0, 7, 18],
                        [319, 0, 2, 0],
                        [348, 0, 2, 1],
                        [348, 0, 7, 18],
                        [377, 0, 2, 0],
                        [406, 0, 2, 1],
                        [406, 0, 7, 18]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 7, 20],
                        [-372, 0, 2, 0],
                        [-346, 0, 2, 0],
                        [-319, 0, 2, 0],
                        [-293, 0, 2, 0],
                        [-266, 0, 2, 0],
                        [-239, 0, 2, 0],
                        [-213, 0, 2, 1],
                        [-213, 0, 7, 20],
                        [-200, 0, 0, 1],
                        [-200, 0, 7, 20],
                        [-186, 0, 0, 1],
                        [-186, 0, 7, 20],
                        [-160, 0, 6, 0],
                        [-133, 0, 6, 0],
                        [-106, 0, 6, 0],
                        [-80, 0, 6, 0],
                        [-53, 0, 6, 0],
                        [-27, 0, 6, 0],
                        [-13, 0, 6, 1],
                        [-13, 0, 7, 20],
                        [0, 0, 0, 1],
                        [0, 0, 7, 20],
                        [13, 0, 0, 1],
                        [13, 0, 7, 20],
                        [27, 0, 2, 0],
                        [53, 0, 2, 0],
                        [80, 0, 2, 0],
                        [106, 0, 2, 0],
                        [133, 0, 2, 0],
                        [160, 0, 2, 0],
                        [186, 0, 2, 1],
                        [186, 0, 7, 20],
                        [200, 0, 0, 1],
                        [200, 0, 7, 20],
                        [213, 0, 0, 1],
                        [213, 0, 7, 20],
                        [239, 0, 6, 0],
                        [266, 0, 6, 0],
                        [293, 0, 6, 0],
                        [319, 0, 6, 0],
                        [346, 0, 6, 0],
                        [372, 0, 6, 0],
                        [399, 0, 6, 1],
                        [399, 0, 7, 20]
                    ],
                    [
                        [-412, 0, 0, 1],
                        [-412, 0, 7, 18],
                        [-386, 0, 1, 0],
                        [-359, 0, 1, 0],
                        [-332, 0, 1, 1],
                        [-332, 0, 7, 18],
                        [-319, 0, 0, 1],
                        [-319, 0, 7, 18],
                        [-306, 0, 0, 1],
                        [-306, 0, 7, 18],
                        [-279, 0, 1, 0],
                        [-253, 0, 1, 0],
                        [-226, 0, 1, 1],
                        [-226, 0, 7, 18],
                        [-213, 0, 0, 1],
                        [-213, 0, 7, 18],
                        [-200, 0, 0, 1],
                        [-200, 0, 7, 18],
                        [-173, 0, 4, 0],
                        [-146, 0, 4, 0],
                        [-120, 0, 4, 1],
                        [-120, 0, 7, 18],
                        [-106, 0, 0, 1],
                        [-106, 0, 7, 18],
                        [-93, 0, 0, 1],
                        [-93, 0, 7, 18],
                        [-66, 0, 4, 0],
                        [-40, 0, 4, 0],
                        [-13, 0, 4, 1],
                        [-13, 0, 7, 18],
                        [0, 0, 0, 1],
                        [0, 0, 7, 18],
                        [13, 0, 0, 1],
                        [13, 0, 7, 18],
                        [40, 0, 2, 0],
                        [66, 0, 2, 0],
                        [93, 0, 2, 1],
                        [93, 0, 7, 18],
                        [106, 0, 0, 1],
                        [106, 0, 7, 18],
                        [120, 0, 0, 1],
                        [120, 0, 7, 18],
                        [146, 0, 2, 0],
                        [173, 0, 2, 0],
                        [200, 0, 2, 1],
                        [200, 0, 7, 18],
                        [213, 0, 0, 1],
                        [213, 0, 7, 18],
                        [226, 0, 0, 1],
                        [226, 0, 7, 18],
                        [253, 0, 6, 0],
                        [279, 0, 6, 0],
                        [306, 0, 6, 1],
                        [306, 0, 7, 18],
                        [319, 0, 0, 1],
                        [319, 0, 7, 18],
                        [332, 0, 0, 1],
                        [332, 0, 7, 18],
                        [359, 0, 6, 0],
                        [386, 0, 6, 0],
                        [412, 0, 6, 1],
                        [412, 0, 7, 18]
                    ],
                    [
                        [-413, 0, 0, 1],
                        [-413, 0, 7, 20],
                        [-405, 0, 0, 1],
                        [-382, 0, 4, 0],
                        [-360, 0, 4, 0],
                        [-338, 0, 4, 2],
                        [-330, 0, 0, 1],
                        [-330, 0, 7, 20],
                        [-322, 0, 0, 1],
                        [-300, 0, 4, 0],
                        [-278, 0, 4, 0],
                        [-255, 0, 4, 2],
                        [-247, 0, 0, 1],
                        [-247, 0, 7, 20],
                        [-240, 0, 0, 1],
                        [-218, 0, 4, 0],
                        [-195, 0, 4, 0],
                        [-172, 0, 4, 2],
                        [-164, 0, 0, 1],
                        [-164, 0, 7, 20],
                        [-158, 0, 0, 1],
                        [-135, 0, 4, 0],
                        [-112, 0, 4, 0],
                        [-90, 0, 4, 2],
                        [-82, 0, 0, 1],
                        [-82, 0, 7, 20],
                        [-75, 0, 0, 1],
                        [-52, 0, 4, 0],
                        [-30, 0, 4, 0],
                        [-8, 0, 4, 2],
                        [0, 0, 0, 1],
                        [0, 0, 7, 20],
                        [8, 0, 0, 1],
                        [30, 0, 4, 0],
                        [52, 0, 4, 0],
                        [75, 0, 4, 2],
                        [83, 0, 0, 1],
                        [83, 0, 7, 20],
                        [90, 0, 0, 1],
                        [112, 0, 4, 0],
                        [135, 0, 4, 0],
                        [158, 0, 4, 2],
                        [166, 0, 0, 1],
                        [166, 0, 7, 20],
                        [172, 0, 0, 1],
                        [195, 0, 4, 0],
                        [218, 0, 4, 0],
                        [240, 0, 4, 2],
                        [248, 0, 0, 1],
                        [248, 0, 7, 20],
                        [255, 0, 0, 1],
                        [278, 0, 4, 0],
                        [300, 0, 4, 0],
                        [322, 0, 4, 2],
                        [330, 0, 0, 1],
                        [330, 0, 7, 20],
                        [338, 0, 0, 1],
                        [360, 0, 4, 0],
                        [382, 0, 4, 0],
                        [405, 0, 4, 2],
                        [413, 0, 0, 1],
                        [413, 0, 7, 20]
                    ],
                    [
                        [-300, -400, 0, 1],
                        [-300, -400, 7, 11],
                        [-290, -400, 7, 0],
                        [-280, -400, 7, 0],
                        [-270, -400, 7, 0],
                        [-260, -400, 7, 0],
                        [-250, -400, 7, 0],
                        [-240, -400, 7, 0],
                        [-230, -400, 7, 1],
                        [-230, -400, 7, 11],
                        [-200, -400, 0, 1],
                        [-200, -400, 7, 11],
                        [-190, -400, 2, 0],
                        [-180, -400, 2, 0],
                        [-170, -400, 2, 0],
                        [-160, -400, 2, 0],
                        [-150, -400, 2, 0],
                        [-140, -400, 2, 0],
                        [-130, -400, 2, 1],
                        [-130, -400, 7, 11],
                        [-100, -400, 0, 1],
                        [-100, -400, 7, 11],
                        [-90, -400, 4, 0],
                        [-80, -400, 4, 0],
                        [-70, -400, 4, 0],
                        [-60, -400, 4, 0],
                        [-50, -400, 4, 0],
                        [-40, -400, 4, 0],
                        [-30, -400, 4, 0],
                        [-20, -400, 4, 1],
                        [-20, -400, 7, 11],
                        [10, -400, 0, 1],
                        [10, -400, 7, 11],
                        [20, -400, 5, 0],
                        [30, -400, 5, 0],
                        [40, -400, 5, 0],
                        [50, -400, 5, 0],
                        [60, -400, 5, 0],
                        [70, -400, 5, 0],
                        [80, -400, 5, 1],
                        [80, -400, 7, 11],
                        [110, -400, 0, 1],
                        [110, -400, 7, 11],
                        [120, -400, 6, 0],
                        [130, -400, 6, 0],
                        [140, -400, 6, 0],
                        [150, -400, 6, 0],
                        [160, -400, 6, 0],
                        [170, -400, 6, 0],
                        [180, -400, 6, 1],
                        [180, -400, 7, 11],
                        [210, -400, 0, 1],
                        [210, -400, 7, 11],
                        [220, -400, 7, 0],
                        [230, -400, 7, 0],
                        [240, -400, 7, 0],
                        [250, -400, 7, 0],
                        [260, -400, 7, 0],
                        [270, -400, 7, 0],
                        [280, -400, 7, 1],
                        [280, -400, 7, 11],
                        [-300, 400, 0, 1],
                        [-300, 400, 7, 11],
                        [-290, 400, 7, 0],
                        [-280, 400, 7, 0],
                        [-270, 400, 7, 0],
                        [-260, 400, 7, 0],
                        [-250, 400, 7, 0],
                        [-240, 400, 7, 0],
                        [-230, 400, 7, 1],
                        [-230, 400, 7, 11],
                        [-200, 400, 0, 1],
                        [-200, 400, 7, 11],
                        [-190, 400, 2, 0],
                        [-180, 400, 2, 0],
                        [-170, 400, 2, 0],
                        [-160, 400, 2, 0],
                        [-150, 400, 2, 0],
                        [-140, 400, 2, 0],
                        [-130, 400, 2, 1],
                        [-130, 400, 7, 11],
                        [-100, 400, 0, 1],
                        [-100, 400, 7, 11],
                        [-90, 400, 4, 0],
                        [-80, 400, 4, 0],
                        [-70, 400, 4, 0],
                        [-60, 400, 4, 0],
                        [-50, 400, 4, 0],
                        [-40, 400, 4, 0],
                        [-30, 400, 4, 0],
                        [-20, 400, 4, 1],
                        [-20, 400, 7, 11],
                        [10, 400, 0, 1],
                        [10, 400, 7, 11],
                        [20, 400, 5, 0],
                        [30, 400, 5, 0],
                        [40, 400, 5, 0],
                        [50, 400, 5, 0],
                        [60, 400, 5, 0],
                        [70, 400, 5, 0],
                        [80, 400, 5, 1],
                        [80, 400, 7, 11],
                        [110, 400, 0, 1],
                        [110, 400, 7, 11],
                        [120, 400, 6, 0],
                        [130, 400, 6, 0],
                        [140, 400, 6, 0],
                        [150, 400, 6, 0],
                        [160, 400, 6, 0],
                        [170, 400, 6, 0],
                        [180, 400, 6, 1],
                        [180, 400, 7, 11],
                        [210, 400, 0, 1],
                        [210, 400, 7, 11],
                        [220, 400, 7, 0],
                        [230, 400, 7, 0],
                        [240, 400, 7, 0],
                        [250, 400, 7, 0],
                        [260, 400, 7, 0],
                        [270, 400, 7, 0],
                        [280, 400, 7, 1],
                        [280, 400, 7, 11]
                    ],
                    [
                        [-392, -400, 0, 1],
                        [-392, -400, 7, 20],
                        [-346, -400, 2, 0],
                        [-319, -400, 2, 0],
                        [-273, -400, 2, 1],
                        [-273, -400, 7, 20],
                        [-259, -240, 0, 1],
                        [-259, -240, 7, 20],
                        [-213, -240, 6, 0],
                        [-186, -240, 6, 0],
                        [-140, -240, 6, 1],
                        [-140, -240, 7, 20],
                        [-126, -80, 0, 1],
                        [-126, -80, 7, 20],
                        [-80, -80, 1, 0],
                        [-53, -80, 1, 0],
                        [-7, -80, 1, 1],
                        [-7, -80, 7, 20],
                        [7, 80, 0, 1],
                        [7, 80, 7, 20],
                        [53, 80, 4, 0],
                        [80, 80, 4, 0],
                        [126, 80, 4, 1],
                        [126, 80, 7, 20],
                        [140, 240, 0, 1],
                        [140, 240, 7, 20],
                        [186, 240, 3, 0],
                        [213, 240, 3, 0],
                        [259, 240, 3, 1],
                        [259, 240, 7, 20],
                        [273, 400, 0, 1],
                        [273, 400, 7, 20],
                        [319, 400, 5, 0],
                        [346, 400, 5, 0],
                        [392, 400, 5, 1],
                        [392, 400, 7, 20]
                    ],
                    [
                        [-450, 400, 0, 1],
                        [-450, 400, 7, 15],
                        [-350, 400, 7, 3],
                        [-350, 400, 7, 15],
                        [-350, 300, 1, 3],
                        [-350, 300, 7, 15],
                        [-250, 300, 1, 3],
                        [-250, 300, 7, 15],
                        [-250, 200, 4, 3],
                        [-250, 200, 7, 15],
                        [-150, 200, 4, 3],
                        [-150, 200, 7, 15],
                        [-150, 100, 2, 3],
                        [-150, 100, 7, 15],
                        [-50, 100, 2, 3],
                        [-50, 100, 7, 15],
                        [-50, 0, 5, 3],
                        [-50, 0, 7, 15],
                        [50, 0, 5, 3],
                        [50, 0, 7, 15],
                        [50, 100, 3, 3],
                        [50, 100, 7, 15],
                        [150, 100, 3, 3],
                        [150, 100, 7, 15],
                        [150, 200, 6, 3],
                        [150, 200, 7, 15],
                        [250, 200, 6, 3],
                        [250, 200, 7, 15],
                        [250, 300, 2, 3],
                        [250, 300, 7, 15],
                        [350, 300, 2, 3],
                        [350, 300, 7, 15],
                        [350, 400, 7, 3],
                        [350, 400, 7, 15],
                        [450, 400, 7, 3],
                        [450, 400, 7, 15]
                    ],
                    [
                        [-400, 80, 0, 1],
                        [-400, 80, 7, 20],
                        [-300, 160, 4, 1],
                        [-300, 160, 7, 20],
                        [-200, 80, 5, 1],
                        [-200, 80, 7, 20],
                        [-100, 160, 4, 1],
                        [-100, 160, 7, 20],
                        [0, 80, 5, 1],
                        [0, 80, 7, 20],
                        [100, 160, 4, 1],
                        [100, 160, 7, 20],
                        [200, 80, 5, 1],
                        [200, 80, 7, 20],
                        [300, 160, 4, 1],
                        [300, 160, 7, 20],
                        [400, 80, 5, 1],
                        [400, 80, 7, 20]
                    ],
                    [
                        [-450, 50, 0, 1],
                        [-450, 50, 7, 18],
                        [-350, -50, 2, 4],
                        [-350, -50, 7, 18],
                        [-250, 50, 3, 4],
                        [-250, 50, 7, 18],
                        [-150, -50, 2, 4],
                        [-150, -50, 7, 18],
                        [-50, 50, 3, 4],
                        [-50, 50, 7, 18],
                        [50, -50, 2, 4],
                        [50, -50, 7, 18],
                        [150, 50, 3, 4],
                        [150, 50, 7, 18],
                        [250, -50, 2, 4],
                        [250, -50, 7, 18],
                        [350, 50, 3, 4],
                        [350, 50, 7, 18],
                        [450, -50, 2, 4],
                        [450, -50, 7, 18]
                    ],
                    [
                        [-420, -20, 0, 1],
                        [-420, -20, 7, 15],
                        [-380, 20, 5, 4],
                        [-380, 20, 7, 15],
                        [-340, -20, 4, 4],
                        [-340, -20, 7, 15],
                        [-300, 20, 5, 4],
                        [-300, 20, 7, 15],
                        [-260, -20, 4, 4],
                        [-260, -20, 7, 15],
                        [-220, 20, 5, 4],
                        [-220, 20, 7, 15],
                        [-180, -20, 4, 4],
                        [-180, -20, 7, 15],
                        [-140, 20, 5, 4],
                        [-140, 20, 7, 15],
                        [-100, -20, 4, 4],
                        [-100, -20, 7, 15],
                        [-60, 20, 5, 4],
                        [-60, 20, 7, 15],
                        [-20, -20, 4, 4],
                        [-20, -20, 7, 15],
                        [20, 20, 5, 4],
                        [20, 20, 7, 15],
                        [60, -20, 4, 4],
                        [60, -20, 7, 15],
                        [100, 20, 5, 4],
                        [100, 20, 7, 15],
                        [140, -20, 4, 4],
                        [140, -20, 7, 15],
                        [180, 20, 5, 4],
                        [180, 20, 7, 15],
                        [220, -20, 4, 4],
                        [220, -20, 7, 15],
                        [260, 20, 5, 4],
                        [260, 20, 7, 15],
                        [300, -20, 4, 4],
                        [300, -20, 7, 15],
                        [340, 20, 5, 4],
                        [340, 20, 7, 15],
                        [380, -20, 4, 4],
                        [380, -20, 7, 15],
                        [420, 20, 5, 4],
                        [420, 20, 7, 15]
                    ],
                    [
                        [77, 235, 0, 1],
                        [77, 235, 7, 15],
                        [395, 0, 1, 3],
                        [395, 0, 7, 15],
                        [248, -1, 0, 1],
                        [248, -1, 7, 15],
                        [123, -378, 4, 3],
                        [123, -378, 7, 15],
                        [76, -236, 0, 1],
                        [76, -236, 7, 15],
                        [-319, -237, 2, 3],
                        [-319, -237, 7, 15],
                        [-203, -144, 0, 1],
                        [-203, -144, 7, 15],
                        [-321, 231, 3, 3],
                        [-321, 231, 7, 15],
                        [-201, 145, 0, 1],
                        [-201, 145, 7, 15],
                        [122, 377, 6, 3],
                        [122, 377, 7, 15]
                    ],
                    [
                        [0, 403, 0, 1],
                        [-59, 302, 4, 0],
                        [-118, 198, 4, 0],
                        [-176, 97, 4, 0],
                        [-235, -3, 4, 0],
                        [-294, -106, 4, 0],
                        [-349, -202, 4, 1],
                        [-349, -202, 7, 29],
                        [-234, -202, 4, 0],
                        [-116, -202, 4, 0],
                        [0, -202, 4, 0],
                        [116, -202, 4, 0],
                        [234, -202, 4, 0],
                        [349, -202, 4, 1],
                        [349, -202, 7, 29],
                        [294, -106, 4, 0],
                        [235, -3, 4, 0],
                        [176, 97, 4, 0],
                        [118, 198, 4, 0],
                        [59, 302, 4, 0],
                        [0, 403, 4, 1],
                        [0, 403, 7, 29]
                    ],
                    [
                        [-400, 400, 0, 1],
                        [-320, 400, 2, 0],
                        [-240, 400, 2, 0],
                        [-160, 400, 2, 0],
                        [-80, 400, 2, 0],
                        [0, 400, 2, 0],
                        [80, 400, 2, 0],
                        [160, 400, 2, 0],
                        [240, 400, 2, 0],
                        [320, 400, 2, 0],
                        [400, 400, 2, 1],
                        [400, 400, 7, 29],
                        [400, 320, 2, 0],
                        [400, 240, 2, 0],
                        [400, 160, 2, 0],
                        [400, 80, 2, 0],
                        [400, 0, 2, 0],
                        [400, -80, 2, 0],
                        [400, -160, 2, 0],
                        [400, -240, 2, 0],
                        [400, -320, 2, 0],
                        [400, -400, 2, 1],
                        [400, -400, 7, 29],
                        [320, -400, 2, 0],
                        [240, -400, 2, 0],
                        [160, -400, 2, 0],
                        [80, -400, 2, 0],
                        [0, -400, 2, 0],
                        [-80, -400, 2, 0],
                        [-160, -400, 2, 0],
                        [-240, -400, 2, 0],
                        [-320, -400, 2, 0],
                        [-400, -400, 2, 1],
                        [-400, -400, 7, 29],
                        [-400, -320, 2, 0],
                        [-400, -240, 2, 0],
                        [-400, -160, 2, 0],
                        [-400, -80, 2, 0],
                        [-400, 0, 2, 0],
                        [-400, 80, 2, 0],
                        [-400, 160, 2, 0],
                        [-400, 240, 2, 0],
                        [-400, 320, 2, 0],
                        [-400, 400, 2, 1],
                        [-400, 400, 7, 29]
                    ],
                    [
                        [385, 126, 0, 1],
                        [0, 405, 1, 1],
                        [0, 405, 7, 29],
                        [-385, 126, 1, 1],
                        [-385, 126, 7, 29],
                        [-238, -328, 1, 1],
                        [-238, -328, 7, 29],
                        [238, -328, 1, 1],
                        [238, -328, 7, 29],
                        [385, 126, 1, 1],
                        [385, 126, 7, 29]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 29],
                        [400, 200, 2, 1],
                        [400, 200, 7, 29],
                        [400, -200, 2, 1],
                        [400, -200, 7, 29],
                        [0, -400, 2, 1],
                        [0, -400, 7, 29],
                        [-400, -200, 2, 1],
                        [-400, -200, 7, 29],
                        [-400, 200, 2, 1],
                        [-400, 200, 7, 29],
                        [0, 400, 2, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 25],
                        [282, 282, 3, 1],
                        [282, 282, 7, 25],
                        [400, 0, 3, 1],
                        [400, 0, 7, 25],
                        [282, -282, 3, 1],
                        [282, -282, 7, 25],
                        [0, -400, 3, 1],
                        [0, -400, 7, 25],
                        [-282, -282, 3, 1],
                        [-282, -282, 7, 25],
                        [-400, 0, 3, 1],
                        [-400, 0, 7, 25],
                        [-282, 282, 3, 1],
                        [-282, 282, 7, 25],
                        [0, 400, 3, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 15],
                        [52, 397, 1, 0],
                        [104, 386, 1, 0],
                        [153, 370, 1, 0],
                        [200, 346, 1, 1],
                        [200, 346, 7, 15],
                        [244, 317, 2, 0],
                        [283, 283, 2, 0],
                        [317, 244, 2, 0],
                        [346, 200, 2, 1],
                        [346, 200, 7, 15],
                        [370, 153, 1, 0],
                        [386, 104, 1, 0],
                        [397, 52, 1, 0],
                        [400, 0, 1, 1],
                        [400, 0, 7, 15],
                        [397, -52, 2, 0],
                        [386, -104, 2, 0],
                        [370, -153, 2, 0],
                        [346, -200, 2, 1],
                        [346, -200, 7, 15],
                        [317, -244, 1, 0],
                        [283, -283, 1, 0],
                        [244, -317, 1, 0],
                        [200, -346, 1, 1],
                        [200, -346, 7, 15],
                        [153, -370, 2, 0],
                        [104, -386, 2, 0],
                        [52, -397, 2, 0],
                        [0, -400, 2, 1],
                        [0, -400, 7, 15],
                        [-52, -397, 1, 0],
                        [-104, -386, 1, 0],
                        [-153, -370, 1, 0],
                        [-200, -346, 1, 1],
                        [-200, -346, 7, 15],
                        [-244, -317, 2, 0],
                        [-283, -283, 2, 0],
                        [-317, -244, 2, 0],
                        [-346, -200, 2, 1],
                        [-346, -200, 7, 15],
                        [-370, -153, 1, 0],
                        [-386, -104, 1, 0],
                        [-397, -52, 1, 0],
                        [-400, 0, 1, 1],
                        [-400, 0, 7, 15],
                        [-397, 52, 2, 0],
                        [-386, 104, 2, 0],
                        [-370, 153, 2, 0],
                        [-346, 200, 2, 1],
                        [-346, 200, 7, 15],
                        [-317, 244, 1, 0],
                        [-283, 283, 1, 0],
                        [-244, 317, 1, 0],
                        [-200, 346, 1, 1],
                        [-200, 346, 7, 15],
                        [-153, 370, 2, 0],
                        [-104, 386, 2, 0],
                        [-52, 397, 2, 0],
                        [0, 400, 2, 1]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 15],
                        [52, 397, 1, 0],
                        [104, 386, 1, 0],
                        [153, 370, 1, 0],
                        [200, 346, 1, 1],
                        [200, 346, 7, 15],
                        [283, 283, 0, 1],
                        [283, 283, 7, 15],
                        [317, 244, 3, 0],
                        [346, 200, 3, 0],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 15],
                        [400, 0, 0, 1],
                        [400, 0, 7, 15],
                        [397, -52, 1, 0],
                        [386, -104, 1, 0],
                        [370, -153, 1, 0],
                        [346, -200, 1, 1],
                        [346, -200, 7, 15],
                        [283, -283, 0, 1],
                        [283, -283, 7, 15],
                        [244, -317, 3, 0],
                        [200, -346, 3, 0],
                        [153, -370, 3, 0],
                        [104, -386, 3, 1],
                        [104, -386, 7, 15],
                        [0, -400, 0, 1],
                        [0, -400, 7, 15],
                        [-52, -397, 1, 0],
                        [-104, -386, 1, 0],
                        [-153, -370, 1, 0],
                        [-200, -346, 1, 1],
                        [-200, -346, 7, 15],
                        [-283, -283, 0, 1],
                        [-283, -283, 7, 15],
                        [-317, -244, 3, 0],
                        [-346, -200, 3, 0],
                        [-370, -153, 3, 0],
                        [-386, -104, 3, 1],
                        [-386, -104, 7, 15],
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 15],
                        [-397, 52, 1, 0],
                        [-386, 104, 1, 0],
                        [-370, 153, 1, 0],
                        [-346, 200, 1, 1],
                        [-346, 200, 7, 15],
                        [-283, 283, 0, 1],
                        [-283, 283, 7, 15],
                        [-244, 317, 3, 0],
                        [-200, 346, 3, 0],
                        [-153, 370, 3, 0],
                        [-104, 386, 3, 1],
                        [-104, 386, 7, 15]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 2, 0],
                        [104, 386, 2, 0],
                        [153, 370, 2, 0],
                        [200, 346, 2, 0],
                        [244, 317, 2, 0],
                        [283, 283, 2, 1],
                        [283, 283, 7, 20],
                        [400, 0, 0, 1],
                        [400, 0, 7, 20],
                        [397, -52, 6, 0],
                        [386, -104, 6, 0],
                        [370, -153, 6, 0],
                        [346, -200, 6, 0],
                        [317, -244, 6, 0],
                        [283, -283, 6, 1],
                        [283, -283, 7, 20],
                        [0, -400, 0, 1],
                        [0, -400, 7, 20],
                        [-52, -397, 2, 0],
                        [-104, -386, 2, 0],
                        [-153, -370, 2, 0],
                        [-200, -346, 2, 0],
                        [-244, -317, 2, 0],
                        [-283, -283, 2, 1],
                        [-283, -283, 7, 20],
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 20],
                        [-397, 52, 6, 0],
                        [-386, 104, 6, 0],
                        [-370, 153, 6, 0],
                        [-346, 200, 6, 0],
                        [-317, 244, 6, 0],
                        [-283, 283, 6, 1],
                        [-283, 283, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 15],
                        [52, 397, 1, 0],
                        [104, 386, 1, 1],
                        [104, 386, 7, 15],
                        [153, 370, 1, 0],
                        [200, 346, 1, 1],
                        [200, 346, 7, 15],
                        [244, 317, 1, 0],
                        [283, 283, 1, 1],
                        [283, 283, 7, 15],
                        [317, 244, 1, 0],
                        [346, 200, 1, 1],
                        [346, 200, 7, 15],
                        [370, 153, 1, 0],
                        [386, 104, 1, 1],
                        [386, 104, 7, 15],
                        [397, 52, 1, 0],
                        [400, 0, 1, 1],
                        [400, 0, 7, 15],
                        [0, -400, 0, 1],
                        [0, -400, 7, 15],
                        [-52, -397, 1, 0],
                        [-104, -386, 1, 1],
                        [-104, -386, 7, 15],
                        [-153, -370, 1, 0],
                        [-200, -346, 1, 1],
                        [-200, -346, 7, 15],
                        [-244, -317, 1, 0],
                        [-283, -283, 1, 1],
                        [-283, -283, 7, 15],
                        [-317, -244, 1, 0],
                        [-346, -200, 1, 1],
                        [-346, -200, 7, 15],
                        [-370, -153, 1, 0],
                        [-386, -104, 1, 1],
                        [-386, -104, 7, 15],
                        [-397, -52, 1, 0],
                        [-400, 0, 1, 1],
                        [-400, 0, 7, 15]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 15],
                        [52, 397, 1, 0],
                        [104, 386, 1, 1],
                        [104, 386, 7, 15],
                        [153, 370, 1, 0],
                        [200, 346, 1, 1],
                        [200, 346, 7, 15],
                        [244, 317, 2, 0],
                        [283, 283, 2, 1],
                        [283, 283, 7, 15],
                        [317, 244, 2, 0],
                        [346, 200, 2, 1],
                        [346, 200, 7, 15],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 15],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 15],
                        [397, -52, 1, 0],
                        [386, -104, 1, 1],
                        [386, -104, 7, 15],
                        [370, -153, 1, 0],
                        [346, -200, 1, 1],
                        [346, -200, 7, 15],
                        [317, -244, 2, 0],
                        [283, -283, 2, 1],
                        [283, -283, 7, 15],
                        [244, -317, 2, 0],
                        [200, -346, 2, 1],
                        [200, -346, 7, 15],
                        [153, -370, 3, 0],
                        [104, -386, 3, 1],
                        [104, -386, 7, 15],
                        [52, -397, 3, 0],
                        [0, -400, 3, 1],
                        [0, -400, 7, 15]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 20],
                        [52, 397, 3, 0],
                        [104, 386, 3, 1],
                        [104, 386, 7, 20],
                        [153, 370, 3, 0],
                        [200, 346, 3, 1],
                        [200, 346, 7, 20],
                        [244, 317, 3, 0],
                        [283, 283, 3, 1],
                        [283, 283, 7, 20],
                        [317, 244, 3, 0],
                        [346, 200, 3, 1],
                        [346, 200, 7, 20],
                        [370, 153, 3, 0],
                        [386, 104, 3, 1],
                        [386, 104, 7, 20],
                        [397, 52, 3, 0],
                        [400, 0, 3, 1],
                        [400, 0, 7, 20]
                    ]
                ]
            }, {
                label: "\u6253\u70b9",
                arr: [
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 10],
                        [-400, 0, 7, 10],
                        [-400, 0, 7, 10],
                        [-400, 0, 7, 10],
                        [400, 0, 0, 1],
                        [400, 0, 4, 10],
                        [400, 0, 4, 10],
                        [400, 0, 4, 10],
                        [400, 0, 4, 10]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 10],
                        [400, 0, 0, 1],
                        [400, 0, 4, 10]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 10],
                        [-400, 0, 4, 10],
                        [0, 0, 0, 1],
                        [0, 0, 2, 10],
                        [0, 0, 2, 10],
                        [400, 0, 0, 1],
                        [400, 0, 6, 10],
                        [400, 0, 6, 10]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 10],
                        [-400, 0, 7, 10],
                        [-130, 0, 0, 1],
                        [-130, 0, 2, 10],
                        [-130, 0, 2, 10],
                        [130, 0, 0, 1],
                        [130, 0, 4, 10],
                        [130, 0, 4, 10],
                        [400, 0, 0, 1],
                        [400, 0, 6, 10],
                        [400, 0, 6, 10]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 6, 10],
                        [-400, 0, 6, 10],
                        [-130, 0, 0, 1],
                        [-130, 0, 2, 10],
                        [-130, 0, 2, 10],
                        [130, 0, 0, 1],
                        [130, 0, 6, 10],
                        [130, 0, 6, 10],
                        [400, 0, 0, 1],
                        [400, 0, 2, 10],
                        [400, 0, 2, 10]
                    ],
                    [
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 9],
                        [-400, 0, 7, 9],
                        [-240, 0, 0, 1],
                        [-240, 0, 2, 9],
                        [-240, 0, 1, 9],
                        [-80, 0, 0, 1],
                        [-80, 0, 6, 9],
                        [-80, 0, 3, 9],
                        [80, 0, 0, 1],
                        [80, 0, 3, 9],
                        [80, 0, 6, 9],
                        [240, 0, 0, 1],
                        [240, 0, 5, 9],
                        [240, 0, 5, 9],
                        [400, 0, 0, 1],
                        [400, 0, 4, 9],
                        [400, 0, 4, 9]
                    ],
                    [
                        [-404, 0, 0, 1],
                        [-404, 0, 7, 10],
                        [-289, 0, 0, 1],
                        [-289, 0, 1, 10],
                        [-173, 0, 0, 1],
                        [-173, 0, 4, 10],
                        [-58, 0, 0, 1],
                        [-58, 0, 2, 10],
                        [58, 0, 0, 1],
                        [58, 0, 5, 10],
                        [173, 0, 0, 1],
                        [173, 0, 3, 10],
                        [289, 0, 0, 1],
                        [289, 0, 6, 10],
                        [404, 0, 0, 1],
                        [404, 0, 7, 10]
                    ],
                    [
                        [0, -308, 0, 1],
                        [0, -308, 7, 10],
                        [0, -220, 0, 1],
                        [0, -220, 4, 10],
                        [0, -132, 0, 1],
                        [0, -132, 2, 10],
                        [0, -44, 0, 1],
                        [0, -44, 5, 10],
                        [0, 44, 0, 1],
                        [0, 44, 3, 10],
                        [0, 132, 0, 1],
                        [0, 132, 6, 10],
                        [0, 220, 0, 1],
                        [0, 220, 1, 10],
                        [0, 308, 0, 1],
                        [0, 308, 7, 10]
                    ],
                    [
                        [-404, 0, 0, 1],
                        [-404, 0, 7, 8],
                        [-331, 0, 0, 1],
                        [-331, 0, 7, 8],
                        [-257, 0, 0, 1],
                        [-257, 0, 2, 8],
                        [-184, 0, 0, 1],
                        [-184, 0, 2, 8],
                        [-110, 0, 0, 1],
                        [-110, 0, 6, 8],
                        [-37, 0, 0, 1],
                        [-37, 0, 6, 8],
                        [37, 0, 0, 1],
                        [37, 0, 4, 8],
                        [110, 0, 0, 1],
                        [110, 0, 4, 8],
                        [184, 0, 0, 1],
                        [184, 0, 2, 8],
                        [257, 0, 0, 1],
                        [257, 0, 2, 8],
                        [331, 0, 0, 1],
                        [331, 0, 5, 8],
                        [404, 0, 0, 1],
                        [404, 0, 5, 8]
                    ],
                    [
                        [-308, -308, 0, 1],
                        [-308, -308, 6, 8],
                        [-252, -252, 0, 1],
                        [-252, -252, 6, 8],
                        [-196, -196, 0, 1],
                        [-196, -196, 3, 8],
                        [-140, -140, 0, 1],
                        [-140, -140, 3, 8],
                        [-84, -84, 0, 1],
                        [-84, -84, 5, 8],
                        [-28, -28, 0, 1],
                        [-28, -28, 5, 8],
                        [28, 28, 0, 1],
                        [28, 28, 2, 8],
                        [84, 84, 0, 1],
                        [84, 84, 2, 8],
                        [140, 140, 0, 1],
                        [140, 140, 4, 8],
                        [196, 196, 0, 1],
                        [196, 196, 4, 8],
                        [252, 252, 0, 1],
                        [252, 252, 7, 8],
                        [308, 308, 0, 1],
                        [308, 308, 7, 8]
                    ],
                    [
                        [-394, 0, 0, 1],
                        [-394, 0, 7, 6],
                        [-341, 0, 0, 1],
                        [-341, 0, 7, 6],
                        [-289, 0, 0, 1],
                        [-289, 0, 7, 6],
                        [-236, 0, 0, 1],
                        [-236, 0, 7, 6],
                        [-184, 0, 0, 1],
                        [-184, 0, 2, 6],
                        [-131, 0, 0, 1],
                        [-131, 0, 2, 6],
                        [-79, 0, 0, 1],
                        [-79, 0, 2, 6],
                        [-26, 0, 0, 1],
                        [-26, 0, 2, 6],
                        [26, 0, 0, 1],
                        [26, 0, 6, 6],
                        [79, 0, 0, 1],
                        [79, 0, 6, 6],
                        [131, 0, 0, 1],
                        [131, 0, 6, 6],
                        [184, 0, 0, 1],
                        [184, 0, 6, 6],
                        [236, 0, 0, 1],
                        [236, 0, 4, 6],
                        [289, 0, 0, 1],
                        [289, 0, 4, 6],
                        [341, 0, 0, 1],
                        [341, 0, 4, 6],
                        [394, 0, 0, 1],
                        [394, 0, 4, 6]
                    ],
                    [
                        [-399, 0, 0, 1],
                        [-399, 0, 7, 5],
                        [-357, 0, 0, 1],
                        [-357, 0, 7, 5],
                        [-315, 0, 0, 1],
                        [-315, 0, 7, 5],
                        [-273, 0, 0, 1],
                        [-273, 0, 1, 5],
                        [-231, 0, 0, 1],
                        [-231, 0, 1, 5],
                        [-189, 0, 0, 1],
                        [-189, 0, 1, 5],
                        [-147, 0, 0, 1],
                        [-147, 0, 4, 5],
                        [-105, 0, 0, 1],
                        [-105, 0, 4, 5],
                        [-63, 0, 0, 1],
                        [-63, 0, 4, 5],
                        [-21, 0, 0, 1],
                        [-21, 0, 2, 5],
                        [21, 0, 0, 1],
                        [21, 0, 2, 5],
                        [63, 0, 0, 1],
                        [63, 0, 2, 5],
                        [105, 0, 0, 1],
                        [105, 0, 5, 5],
                        [147, 0, 0, 1],
                        [147, 0, 5, 5],
                        [189, 0, 0, 1],
                        [189, 0, 5, 5],
                        [231, 0, 0, 1],
                        [231, 0, 3, 5],
                        [273, 0, 0, 1],
                        [273, 0, 3, 5],
                        [315, 0, 0, 1],
                        [315, 0, 3, 5],
                        [357, 0, 0, 1],
                        [357, 0, 6, 5],
                        [399, 0, 0, 1],
                        [393, 0, 6, 5]
                    ],
                    [
                        [-402, 0, 0, 1],
                        [-402, 0, 7, 4],
                        [-368, 0, 0, 1],
                        [-368, 0, 7, 4],
                        [-332, 0, 0, 1],
                        [-332, 0, 7, 4],
                        [-298, 0, 0, 1],
                        [-298, 0, 1, 4],
                        [-262, 0, 0, 1],
                        [-262, 0, 1, 4],
                        [-228, 0, 0, 1],
                        [-228, 0, 1, 4],
                        [-192, 0, 0, 1],
                        [-192, 0, 4, 4],
                        [-158, 0, 0, 1],
                        [-158, 0, 4, 4],
                        [-122, 0, 0, 1],
                        [-122, 0, 4, 4],
                        [-88, 0, 0, 1],
                        [-88, 0, 2, 4],
                        [-52, 0, 0, 1],
                        [-52, 0, 2, 4],
                        [-18, 0, 0, 1],
                        [-18, 0, 2, 4],
                        [18, 0, 0, 1],
                        [18, 0, 2, 4],
                        [52, 0, 0, 1],
                        [52, 0, 5, 4],
                        [88, 0, 0, 1],
                        [88, 0, 5, 4],
                        [122, 0, 0, 1],
                        [122, 0, 5, 4],
                        [158, 0, 0, 1],
                        [158, 0, 3, 4],
                        [192, 0, 0, 1],
                        [192, 0, 3, 4],
                        [228, 0, 0, 1],
                        [228, 0, 3, 4],
                        [262, 0, 0, 1],
                        [262, 0, 3, 4],
                        [298, 0, 0, 1],
                        [298, 0, 6, 4],
                        [332, 0, 0, 1],
                        [328, 0, 6, 4],
                        [368, 0, 0, 1],
                        [368, 0, 6, 4],
                        [402, 0, 0, 1],
                        [402, 0, 6, 4]
                    ],
                    [
                        [-412, 0, 0, 1],
                        [-412, 0, 0, 3],
                        [-386, 0, 0, 1],
                        [-386, 0, 7, 3],
                        [-359, 0, 0, 1],
                        [-359, 0, 7, 3],
                        [-332, 0, 0, 1],
                        [-332, 0, 7, 3],
                        [-306, 0, 0, 1],
                        [-306, 0, 0, 3],
                        [-279, 0, 0, 1],
                        [-279, 0, 2, 3],
                        [-253, 0, 0, 1],
                        [-253, 0, 2, 3],
                        [-226, 0, 0, 1],
                        [-226, 0, 2, 3],
                        [-200, 0, 0, 1],
                        [-200, 0, 0, 3],
                        [-173, 0, 0, 1],
                        [-173, 0, 4, 3],
                        [-146, 0, 0, 1],
                        [-146, 0, 4, 3],
                        [-120, 0, 0, 1],
                        [-120, 0, 4, 3],
                        [-93, 0, 0, 1],
                        [-93, 0, 0, 3],
                        [-66, 0, 0, 1],
                        [-66, 0, 6, 3],
                        [-40, 0, 0, 1],
                        [-40, 0, 6, 3],
                        [-13, 0, 0, 1],
                        [-13, 0, 6, 3],
                        [13, 0, 0, 1],
                        [13, 0, 7, 3],
                        [40, 0, 0, 1],
                        [40, 0, 7, 3],
                        [66, 0, 0, 1],
                        [66, 0, 7, 3],
                        [93, 0, 0, 1],
                        [93, 0, 7, 3],
                        [120, 0, 0, 1],
                        [120, 0, 0, 3],
                        [146, 0, 0, 1],
                        [146, 0, 2, 3],
                        [173, 0, 0, 1],
                        [173, 0, 2, 3],
                        [200, 0, 0, 1],
                        [200, 0, 2, 3],
                        [226, 0, 0, 1],
                        [226, 0, 0, 3],
                        [253, 0, 0, 1],
                        [253, 0, 4, 3],
                        [279, 0, 0, 1],
                        [279, 0, 4, 3],
                        [306, 0, 0, 1],
                        [306, 0, 4, 3],
                        [332, 0, 0, 1],
                        [332, 0, 0, 3],
                        [359, 0, 0, 1],
                        [359, 0, 6, 3],
                        [386, 0, 0, 1],
                        [386, 0, 6, 3],
                        [412, 0, 0, 1],
                        [412, 0, 6, 3]
                    ],
                    [
                        [0, 161, 0, 1],
                        [0, 161, 6, 8],
                        [0, 242, 0, 1],
                        [0, 242, 6, 8],
                        [0, 323, 0, 1],
                        [0, 323, 6, 8],
                        [0, 403, 0, 4],
                        [0, 403, 6, 8],
                        [-139, -81, 0, 1],
                        [-139, -81, 4, 8],
                        [-210, -121, 0, 1],
                        [-210, -121, 4, 8],
                        [-279, -161, 0, 1],
                        [-279, -161, 4, 8],
                        [-349, -202, 0, 1],
                        [-349, -202, 4, 8],
                        [139, -81, 0, 1],
                        [139, -81, 7, 8],
                        [210, -121, 0, 1],
                        [210, -121, 7, 8],
                        [279, -161, 0, 1],
                        [279, -161, 7, 8],
                        [349, -202, 0, 4],
                        [349, -202, 7, 8]
                    ],
                    [
                        [-403, 0, 0, 1],
                        [-403, 0, 7, 6],
                        [-336, 0, 0, 1],
                        [-336, 0, 4, 6],
                        [-269, 0, 0, 1],
                        [-269, 0, 2, 6],
                        [-202, 0, 0, 1],
                        [-202, 0, 5, 6],
                        [-134, 0, 0, 1],
                        [-134, 0, 6, 6],
                        [134, 0, 0, 1],
                        [134, 0, 7, 6],
                        [202, 0, 0, 1],
                        [202, 0, 4, 6],
                        [269, 0, 0, 1],
                        [269, 0, 2, 6],
                        [336, 0, 0, 1],
                        [336, 0, 5, 6],
                        [403, 0, 0, 1],
                        [403, 0, 6, 6],
                        [0, 403, 0, 1],
                        [0, 403, 7, 6],
                        [0, 336, 0, 1],
                        [0, 336, 4, 6],
                        [0, 269, 0, 1],
                        [0, 269, 2, 6],
                        [0, 202, 0, 1],
                        [0, 202, 5, 6],
                        [0, 134, 0, 1],
                        [0, 134, 6, 6],
                        [0, -134, 0, 1],
                        [0, -134, 7, 6],
                        [0, -202, 0, 1],
                        [0, -202, 4, 6],
                        [0, -269, 0, 1],
                        [0, -269, 2, 6],
                        [0, -336, 0, 1],
                        [0, -336, 5, 6],
                        [0, -403, 0, 1],
                        [0, -403, 6, 6]
                    ],
                    [
                        [0, 410, 0, 1],
                        [0, 410, 7, 10],
                        [0, 410, 7, 10],
                        [-350, -206, 0, 1],
                        [-350, -206, 2, 10],
                        [-350, -206, 2, 10],
                        [350, -206, 0, 1],
                        [350, -206, 6, 10],
                        [350, -206, 6, 10]
                    ],
                    [
                        [0, 351, 0, 1],
                        [0, 351, 7, 5],
                        [-75, 219, 0, 1],
                        [-75, 219, 2, 5],
                        [-150, 87, 0, 1],
                        [-150, 87, 7, 5],
                        [-225, -45, 0, 1],
                        [-225, -45, 2, 5],
                        [-300, -177, 0, 1],
                        [-300, -177, 7, 5],
                        [-150, -177, 0, 1],
                        [-150, -177, 2, 5],
                        [0, -177, 0, 1],
                        [0, -177, 7, 5],
                        [150, -177, 0, 1],
                        [150, -177, 2, 5],
                        [300, -177, 0, 1],
                        [300, -177, 7, 5],
                        [225, -45, 0, 1],
                        [225, -45, 2, 5],
                        [150, 87, 0, 1],
                        [150, 87, 7, 5],
                        [75, 219, 0, 1],
                        [75, 219, 2, 5]
                    ],
                    [
                        [-346, -200, 0, 1],
                        [-346, -200, 5, 2],
                        [-270, -200, 0, 1],
                        [-270, -200, 5, 2],
                        [-210, -200, 0, 1],
                        [-210, -200, 5, 2],
                        [-150, -200, 0, 1],
                        [-150, -200, 5, 2],
                        [-90, -200, 0, 1],
                        [-90, -200, 5, 2],
                        [-30, -200, 0, 1],
                        [-30, -200, 5, 2],
                        [30, -200, 0, 1],
                        [30, -200, 5, 2],
                        [90, -200, 0, 1],
                        [90, -200, 5, 2],
                        [150, -200, 0, 1],
                        [150, -200, 5, 2],
                        [210, -200, 0, 1],
                        [210, -200, 5, 2],
                        [270, -200, 0, 1],
                        [270, -200, 5, 2],
                        [346, -200, 0, 1],
                        [346, -200, 5, 2],
                        [300, -120, 0, 1],
                        [300, -120, 6, 2],
                        [270, -67, 0, 1],
                        [270, -67, 6, 2],
                        [240, -14, 0, 1],
                        [240, -14, 6, 2],
                        [210, 37, 0, 1],
                        [210, 37, 6, 2],
                        [180, 88, 0, 1],
                        [180, 88, 6, 2],
                        [150, 138, 0, 1],
                        [150, 138, 6, 2],
                        [120, 193, 0, 1],
                        [120, 193, 6, 2],
                        [90, 245, 0, 1],
                        [90, 245, 6, 2],
                        [60, 296, 0, 1],
                        [60, 296, 6, 2],
                        [30, 348, 0, 1],
                        [30, 348, 6, 2],
                        [0, 400, 0, 1],
                        [0, 400, 6, 2],
                        [-30, 348, 0, 1],
                        [-30, 348, 7, 2],
                        [-60, 296, 0, 1],
                        [-60, 296, 7, 2],
                        [-90, 245, 0, 1],
                        [-90, 245, 7, 2],
                        [-120, 193, 0, 1],
                        [-120, 193, 7, 2],
                        [-150, 138, 0, 1],
                        [-150, 138, 7, 2],
                        [-180, 88, 0, 1],
                        [-180, 88, 7, 2],
                        [-210, 37, 0, 1],
                        [-210, 37, 7, 2],
                        [-240, -14, 0, 1],
                        [-240, -14, 7, 2],
                        [-270, -67, 0, 1],
                        [-270, -67, 7, 2],
                        [-300, -120, 0, 1],
                        [-300, -120, 7, 2],
                        [-346, -200, 0, 1],
                        [-346, -200, 7, 2]
                    ],
                    [
                        [-300, 300, 0, 1],
                        [-300, 300, 4, 9],
                        [-300, 300, 4, 9],
                        [300, 300, 0, 1],
                        [300, 300, 5, 9],
                        [300, 300, 5, 9],
                        [300, -300, 0, 1],
                        [300, -300, 6, 9],
                        [300, -300, 6, 9],
                        [-300, -300, 0, 1],
                        [-300, -300, 2, 9],
                        [-300, -300, 2, 9]
                    ],
                    [
                        [-300, 300, 0, 1],
                        [-300, 300, 4, 2],
                        [-240, 300, 0, 1],
                        [-240, 300, 4, 2],
                        [-180, 300, 0, 1],
                        [-180, 300, 4, 2],
                        [-120, 300, 0, 1],
                        [-120, 300, 4, 2],
                        [-60, 300, 0, 1],
                        [-60, 300, 4, 2],
                        [0, 300, 0, 1],
                        [0, 300, 4, 2],
                        [60, 300, 0, 1],
                        [60, 300, 4, 2],
                        [120, 300, 0, 1],
                        [120, 300, 4, 2],
                        [180, 300, 0, 1],
                        [180, 300, 4, 2],
                        [240, 300, 0, 1],
                        [240, 300, 4, 2],
                        [300, 300, 0, 1],
                        [300, 300, 4, 2],
                        [300, 240, 0, 1],
                        [300, 240, 5, 2],
                        [300, 180, 0, 1],
                        [300, 180, 5, 2],
                        [300, 120, 0, 1],
                        [300, 120, 5, 2],
                        [300, 60, 0, 1],
                        [300, 60, 5, 2],
                        [300, 0, 0, 1],
                        [300, 0, 5, 2],
                        [300, -60, 0, 1],
                        [300, -60, 5, 2],
                        [300, -120, 0, 1],
                        [300, -120, 5, 2],
                        [300, -180, 0, 1],
                        [300, -180, 5, 2],
                        [300, -240, 0, 1],
                        [300, -240, 5, 2],
                        [300, -300, 0, 1],
                        [300, -300, 6, 2],
                        [240, -300, 0, 1],
                        [240, -300, 6, 2],
                        [180, -300, 0, 1],
                        [180, -300, 6, 2],
                        [120, -300, 0, 1],
                        [120, -300, 6, 2],
                        [60, -300, 0, 1],
                        [60, -300, 6, 2],
                        [0, -300, 0, 1],
                        [0, -300, 6, 2],
                        [-60, -300, 0, 1],
                        [-60, -300, 6, 2],
                        [-120, -300, 0, 1],
                        [-120, -300, 6, 2],
                        [-180, -300, 0, 1],
                        [-180, -300, 6, 2],
                        [-240, -300, 0, 1],
                        [-240, -300, 6, 2],
                        [-300, -300, 0, 1],
                        [-300, -300, 7, 2],
                        [-300, -240, 0, 1],
                        [-300, -240, 7, 2],
                        [-300, -180, 0, 1],
                        [-300, -180, 7, 2],
                        [-300, -120, 0, 1],
                        [-300, -120, 7, 2],
                        [-300, -60, 0, 1],
                        [-300, -60, 7, 2],
                        [-300, 0, 0, 1],
                        [-300, 0, 7, 2],
                        [-300, 60, 0, 1],
                        [-300, 60, 7, 2],
                        [-300, 120, 0, 1],
                        [-300, 120, 7, 2],
                        [-300, 180, 0, 1],
                        [-300, 180, 7, 2],
                        [-300, 240, 0, 1],
                        [-300, 240, 7, 2],
                        [-300, 300, 0, 1],
                        [-300, 300, 7, 2]
                    ],
                    [
                        [0, 72, 0, 1],
                        [0, 72, 6, 2],
                        [19, 70, 0, 1],
                        [19, 70, 2, 2],
                        [36, 62, 0, 1],
                        [36, 62, 6, 2],
                        [51, 51, 0, 1],
                        [51, 51, 2, 2],
                        [62, 36, 0, 1],
                        [62, 36, 6, 2],
                        [70, 19, 0, 1],
                        [70, 19, 2, 2],
                        [72, 0, 0, 1],
                        [72, 0, 6, 2],
                        [70, -19, 0, 1],
                        [70, -19, 2, 2],
                        [62, -36, 0, 1],
                        [62, -36, 6, 2],
                        [51, -51, 0, 1],
                        [51, -51, 2, 2],
                        [36, -62, 0, 1],
                        [36, -62, 6, 2],
                        [19, -70, 0, 1],
                        [19, -70, 2, 2],
                        [0, -72, 0, 1],
                        [0, -72, 6, 2],
                        [-19, -70, 0, 1],
                        [-19, -70, 2, 2],
                        [-36, -62, 0, 1],
                        [-36, -62, 6, 2],
                        [-51, -51, 0, 1],
                        [-51, -51, 2, 2],
                        [-62, -36, 0, 1],
                        [-62, -36, 6, 2],
                        [-70, -19, 0, 1],
                        [-70, -19, 2, 2],
                        [-72, 0, 0, 1],
                        [-72, 0, 6, 2],
                        [-70, 19, 0, 1],
                        [-70, 19, 2, 2],
                        [-62, 36, 0, 1],
                        [-62, 36, 6, 2],
                        [-51, 51, 0, 1],
                        [-51, 51, 2, 2],
                        [-36, 62, 0, 1],
                        [-36, 62, 6, 2],
                        [-19, 70, 0, 1],
                        [-19, 70, 2, 2]
                    ],
                    [
                        [-330, 72, 0, 1],
                        [-330, 72, 7, 2],
                        [-311, 70, 0, 1],
                        [-311, 70, 7, 2],
                        [-294, 62, 0, 1],
                        [-294, 62, 7, 2],
                        [-279, 51, 0, 1],
                        [-279, 51, 7, 2],
                        [-268, 36, 0, 1],
                        [-268, 36, 7, 2],
                        [-260, 19, 0, 1],
                        [-260, 19, 7, 2],
                        [-258, 0, 0, 1],
                        [-258, 0, 7, 2],
                        [-260, -19, 0, 1],
                        [-260, -19, 7, 2],
                        [-268, -36, 0, 1],
                        [-268, -36, 7, 2],
                        [-279, -51, 0, 1],
                        [-279, -51, 7, 2],
                        [-294, -62, 0, 1],
                        [-294, -62, 7, 2],
                        [-311, -70, 0, 1],
                        [-311, -70, 7, 2],
                        [-330, -72, 0, 1],
                        [-330, -72, 7, 2],
                        [-349, -70, 0, 1],
                        [-349, -70, 7, 2],
                        [-366, -62, 0, 1],
                        [-366, -62, 7, 2],
                        [-381, -51, 0, 1],
                        [-381, -51, 7, 2],
                        [-392, -36, 0, 1],
                        [-392, -36, 7, 2],
                        [-400, -19, 0, 1],
                        [-400, -19, 7, 2],
                        [-402, 0, 0, 1],
                        [-402, 0, 7, 2],
                        [-400, 19, 0, 1],
                        [-400, 19, 7, 2],
                        [-392, 36, 0, 1],
                        [-392, 36, 7, 2],
                        [-381, 51, 0, 1],
                        [-381, 51, 7, 2],
                        [-366, 62, 0, 1],
                        [-366, 62, 7, 2],
                        [-349, 70, 0, 1],
                        [-349, 70, 7, 2],
                        [330, 72, 0, 1],
                        [330, 72, 6, 2],
                        [349, 70, 0, 1],
                        [349, 70, 6, 2],
                        [366, 62, 0, 1],
                        [366, 62, 6, 2],
                        [381, 51, 0, 1],
                        [381, 51, 6, 2],
                        [392, 36, 0, 1],
                        [392, 36, 6, 2],
                        [400, 19, 0, 1],
                        [400, 19, 6, 2],
                        [402, 0, 0, 1],
                        [402, 0, 6, 2],
                        [400, -19, 0, 1],
                        [400, -19, 6, 2],
                        [392, -36, 0, 1],
                        [392, -36, 6, 2],
                        [381, -51, 0, 1],
                        [381, -51, 6, 2],
                        [366, -62, 0, 1],
                        [366, -62, 6, 2],
                        [349, -70, 0, 1],
                        [349, -70, 6, 2],
                        [330, -72, 0, 1],
                        [330, -72, 6, 2],
                        [311, -70, 0, 1],
                        [311, -70, 6, 2],
                        [294, -62, 0, 1],
                        [294, -62, 6, 2],
                        [279, -51, 0, 1],
                        [279, -51, 6, 2],
                        [268, -36, 0, 1],
                        [268, -36, 6, 2],
                        [260, -19, 0, 1],
                        [260, -19, 6, 2],
                        [258, 0, 0, 1],
                        [258, 0, 6, 2],
                        [260, 19, 0, 1],
                        [260, 19, 6, 2],
                        [268, 36, 0, 1],
                        [268, 36, 6, 2],
                        [279, 51, 0, 1],
                        [279, 51, 6, 2],
                        [294, 62, 0, 1],
                        [294, 62, 6, 2],
                        [311, 70, 0, 1],
                        [311, 70, 6, 2]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 1, 6],
                        [56, 396, 0, 1],
                        [56, 396, 1, 6],
                        [110, 384, 0, 1],
                        [110, 384, 2, 6],
                        [163, 366, 0, 1],
                        [163, 366, 2, 6],
                        [212, 339, 0, 1],
                        [212, 339, 4, 6],
                        [257, 306, 0, 1],
                        [257, 306, 4, 6],
                        [297, 268, 0, 1],
                        [297, 268, 5, 6],
                        [332, 224, 0, 1],
                        [332, 224, 5, 6],
                        [360, 175, 0, 1],
                        [360, 175, 6, 6],
                        [380, 124, 0, 1],
                        [380, 124, 6, 6],
                        [394, 70, 0, 1],
                        [394, 70, 7, 6],
                        [400, 14, 0, 1],
                        [400, 14, 7, 6]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 1, 3],
                        [56, 396, 0, 1],
                        [56, 396, 1, 3],
                        [110, 384, 0, 1],
                        [110, 384, 2, 3],
                        [163, 366, 0, 1],
                        [163, 366, 2, 3],
                        [212, 339, 0, 1],
                        [212, 339, 4, 3],
                        [257, 306, 0, 1],
                        [257, 306, 4, 3],
                        [297, 268, 0, 1],
                        [297, 268, 5, 3],
                        [332, 224, 0, 1],
                        [332, 224, 5, 3],
                        [360, 175, 0, 1],
                        [360, 175, 6, 3],
                        [380, 124, 0, 1],
                        [380, 124, 6, 3],
                        [394, 70, 0, 1],
                        [394, 70, 7, 3],
                        [400, 14, 0, 1],
                        [400, 14, 7, 3],
                        [0, 350, 0, 1],
                        [0, 350, 1, 3],
                        [49, 346, 0, 1],
                        [49, 346, 1, 3],
                        [97, 336, 0, 1],
                        [97, 336, 2, 3],
                        [142, 320, 0, 1],
                        [142, 320, 2, 3],
                        [186, 297, 0, 1],
                        [186, 297, 4, 3],
                        [225, 268, 0, 1],
                        [225, 268, 4, 3],
                        [260, 234, 0, 1],
                        [260, 234, 5, 3],
                        [290, 196, 0, 1],
                        [290, 196, 5, 3],
                        [315, 153, 0, 1],
                        [315, 153, 6, 3],
                        [333, 108, 0, 1],
                        [333, 108, 6, 3],
                        [345, 61, 0, 1],
                        [345, 61, 7, 3],
                        [350, 12, 0, 1],
                        [350, 12, 7, 3]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 2, 3],
                        [56, 396, 0, 1],
                        [56, 396, 2, 3],
                        [110, 384, 0, 1],
                        [110, 384, 2, 3],
                        [163, 366, 0, 1],
                        [163, 366, 2, 3],
                        [212, 339, 0, 1],
                        [212, 339, 2, 3],
                        [257, 306, 0, 1],
                        [257, 306, 2, 3],
                        [297, 268, 0, 1],
                        [297, 268, 2, 3],
                        [332, 224, 0, 1],
                        [332, 224, 2, 3],
                        [360, 175, 0, 1],
                        [360, 175, 2, 3],
                        [380, 124, 0, 1],
                        [380, 124, 2, 3],
                        [394, 70, 0, 1],
                        [394, 70, 2, 3],
                        [400, 14, 0, 1],
                        [400, 14, 2, 3],
                        [0, -400, 0, 1],
                        [0, -400, 7, 3],
                        [-56, -396, 0, 1],
                        [-56, -396, 7, 3],
                        [-110, -384, 0, 1],
                        [-110, -384, 7, 3],
                        [-163, -366, 0, 1],
                        [-163, -366, 7, 3],
                        [-212, -339, 0, 1],
                        [-212, -339, 7, 3],
                        [-257, -306, 0, 1],
                        [-257, -306, 7, 3],
                        [-297, -268, 0, 1],
                        [-297, -268, 7, 3],
                        [-332, -224, 0, 1],
                        [-332, -224, 7, 3],
                        [-360, -175, 0, 1],
                        [-360, -175, 7, 3],
                        [-380, -124, 0, 1],
                        [-380, -124, 7, 3],
                        [-394, -70, 0, 1],
                        [-394, -70, 7, 3],
                        [-400, -14, 0, 1],
                        [-400, -14, 7, 3]
                    ],
                    [
                        [0, -400, 0, 1],
                        [0, -400, 1, 6],
                        [104, -386, 0, 1],
                        [104, -386, 1, 6],
                        [200, -346, 0, 1],
                        [200, -346, 4, 6],
                        [283, -283, 0, 1],
                        [283, -283, 4, 6],
                        [346, -200, 0, 1],
                        [346, -200, 2, 6],
                        [386, -104, 0, 1],
                        [386, -104, 2, 6],
                        [400, 0, 0, 1],
                        [400, 0, 5, 6],
                        [386, 104, 0, 1],
                        [386, 104, 5, 6],
                        [346, 200, 0, 1],
                        [346, 200, 6, 6],
                        [283, 283, 0, 1],
                        [283, 283, 6, 6],
                        [200, 346, 0, 1],
                        [200, 346, 7, 6],
                        [104, 386, 0, 1],
                        [104, 386, 7, 6],
                        [0, 400, 0, 1],
                        [0, 400, 7, 6]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 3],
                        [104, 386, 0, 1],
                        [104, 386, 7, 3],
                        [200, 346, 0, 1],
                        [200, 346, 7, 3],
                        [283, 283, 0, 1],
                        [283, 283, 7, 3],
                        [346, 200, 0, 1],
                        [346, 200, 7, 3],
                        [386, 104, 0, 1],
                        [386, 104, 7, 3],
                        [400, 0, 0, 1],
                        [400, 0, 7, 3],
                        [386, -104, 0, 1],
                        [386, -104, 7, 3],
                        [346, -200, 0, 1],
                        [346, -200, 7, 3],
                        [283, -283, 0, 1],
                        [283, -283, 7, 3],
                        [200, -346, 0, 1],
                        [200, -346, 7, 3],
                        [104, -386, 0, 1],
                        [104, -386, 7, 3],
                        [0, -400, 0, 1],
                        [0, -400, 7, 3],
                        [-104, -386, 0, 1],
                        [-104, -386, 7, 3],
                        [-200, -346, 0, 1],
                        [-200, -346, 7, 3],
                        [-283, -283, 0, 1],
                        [-283, -283, 7, 3],
                        [-346, -200, 0, 1],
                        [-346, -200, 7, 3],
                        [-386, -104, 0, 1],
                        [-386, -104, 7, 3],
                        [-400, 0, 0, 1],
                        [-400, 0, 7, 3],
                        [-386, 104, 0, 1],
                        [-386, 104, 7, 3],
                        [-346, 200, 0, 1],
                        [-346, 200, 7, 3],
                        [-283, 283, 0, 1],
                        [-283, 283, 7, 3],
                        [-200, 346, 0, 1],
                        [-200, 346, 7, 3],
                        [-104, 386, 0, 1],
                        [-104, 386, 7, 3]
                    ],
                    [
                        [0, 375, 0, 1],
                        [0, 375, 2, 2],
                        [52, 371, 0, 1],
                        [52, 371, 1, 2],
                        [104, 360, 0, 1],
                        [104, 360, 78, 2],
                        [153, 343, 0, 1],
                        [153, 343, 80, 2],
                        [199, 318, 0, 1],
                        [199, 318, 82, 2],
                        [241, 287, 0, 1],
                        [241, 287, 84, 2],
                        [279, 251, 0, 1],
                        [279, 251, 85, 2],
                        [311, 210, 0, 1],
                        [311, 210, 87, 2],
                        [337, 164, 0, 1],
                        [337, 164, 89, 2],
                        [357, 116, 0, 1],
                        [357, 116, 91, 2],
                        [369, 65, 0, 1],
                        [369, 65, 93, 2],
                        [375, 13, 0, 1],
                        [375, 13, 95, 2],
                        [373, -39, 0, 1],
                        [373, -39, 96, 2],
                        [364, -91, 0, 1],
                        [364, -91, 98, 2],
                        [348, -141, 0, 1],
                        [348, -141, 100, 2],
                        [325, -188, 0, 1],
                        [325, -188, 102, 2],
                        [296, -231, 0, 1],
                        [296, -231, 104, 2],
                        [261, -270, 0, 1],
                        [261, -270, 106, 2],
                        [220, -303, 0, 1],
                        [220, -303, 107, 2],
                        [176, -331, 0, 1],
                        [176, -331, 109, 2],
                        [128, -352, 0, 1],
                        [128, -352, 111, 2],
                        [78, -367, 0, 1],
                        [78, -367, 113, 2],
                        [26, -374, 0, 1],
                        [26, -374, 115, 2],
                        [-26, -374, 0, 1],
                        [-26, -374, 117, 2],
                        [-78, -367, 0, 1],
                        [-78, -367, 118, 2],
                        [-128, -352, 0, 1],
                        [-128, -352, 120, 2],
                        [-176, -331, 0, 1],
                        [-176, -331, 121, 2],
                        [-220, -303, 0, 1],
                        [-220, -303, 122, 2],
                        [-261, -270, 0, 1],
                        [-261, -270, 124, 2],
                        [-296, -231, 0, 1],
                        [-296, -231, 126, 2],
                        [-325, -188, 0, 1],
                        [-325, -188, 128, 2],
                        [-348, -141, 0, 1],
                        [-348, -141, 129, 2],
                        [-364, -91, 0, 1],
                        [-364, -91, 131, 2],
                        [-373, -39, 0, 1],
                        [-373, -39, 133, 2],
                        [-375, 13, 0, 1],
                        [-375, 13, 135, 2],
                        [-369, 65, 0, 1],
                        [-369, 65, 137, 2],
                        [-352, 128, 0, 1],
                        [-352, 128, 139, 2],
                        [-331, 176, 0, 1],
                        [-331, 176, 141, 2],
                        [-303, 220, 0, 1],
                        [-303, 220, 143, 2],
                        [-270, 261, 0, 1],
                        [-270, 261, 145, 2],
                        [-231, 296, 0, 1],
                        [-231, 296, 147, 2],
                        [-188, 325, 0, 1],
                        [-188, 325, 239, 2],
                        [-141, 348, 0, 1],
                        [-141, 348, 237, 2],
                        [-91, 364, 0, 1],
                        [-91, 364, 235, 2],
                        [-39, 373, 0, 1],
                        [-39, 373, 233, 2]
                    ],
                    [
                        [0, 405, 0, 1],
                        [0, 405, 7, 8],
                        [0, 405, 7, 8],
                        [-385, 126, 0, 1],
                        [-385, 126, 2, 8],
                        [-385, 126, 2, 8],
                        [-238, -328, 0, 1],
                        [-238, -328, 6, 8],
                        [-238, -328, 6, 8],
                        [238, -328, 0, 1],
                        [238, -328, 5, 8],
                        [238, -328, 5, 8],
                        [385, 126, 0, 1],
                        [385, 126, 4, 8],
                        [385, 126, 4, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 7, 10],
                        [400, 200, 0, 1],
                        [400, 200, 2, 10],
                        [400, -200, 0, 1],
                        [400, -200, 7, 10],
                        [0, -400, 0, 1],
                        [0, -400, 2, 10],
                        [-400, -200, 0, 1],
                        [-400, -200, 7, 10],
                        [-400, 200, 0, 1],
                        [-400, 200, 2, 10]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ],
                    [
                        [0, 400, 0, 1],
                        [0, 400, 4, 8],
                        [282, 282, 0, 1],
                        [282, 282, 6, 8],
                        [400, 0, 0, 1],
                        [400, 0, 4, 8],
                        [282, -282, 0, 1],
                        [282, -282, 6, 8],
                        [0, -400, 0, 1],
                        [0, -400, 4, 8],
                        [-282, -282, 0, 1],
                        [-282, -282, 6, 8],
                        [-400, 0, 0, 1],
                        [-400, 0, 4, 8],
                        [-282, 282, 0, 1],
                        [-282, 282, 6, 8]
                    ]
                ]
            }, {
                label: "\u4fdd\u7559",
                arr: []
            }, {
                label: "\u52a8\u753bA",
                arr: [0, 52]
            }, {
                label: "\u52a8\u753bB",
                arr: [0, 8]
            }];
            e.exports = {
                picArray: r,
                getPicArrayInfo: function() {
                    for (var e = [], t = 0; t < r.length; t++) {
                        var n = r[t].label;
                        "\u52a8\u753bA" == n || "\u52a8\u753bB" == n ? e.push({
                            label: r[t].label,
                            arr: [r[t].arr[0], r[t].arr[1]],
                            count: r[t].arr[1] - r[t].arr[0]
                        }) : e.push({
                            label: r[t].label,
                            count: r[t].arr.length
                        })
                    }
                    return e
                }
            }
        },
        cb7c: function(e) {
            e.exports = JSON.parse('{"\u8fde\u63a5\u84dd\u7259":"Connetti Bluetooth","\u968f\u673a\u64ad\u653e":"Casuale","\u5df2\u8fde\u63a5":"Connesso","\u672a\u8fde\u63a5":"Non Connesso","\u6237\u5916\u64ad\u653e":"All\'aperto","\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570...":"Lettura Parametri Dispositivo","\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25":"Errore nella Lettura dei Parametri del Dispositivo","\u91cd\u65b0\u5237\u65b0\u5217\u8868":"Ricarica Lista","\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62":"Cerca / Ferma","\u641c\u7d22\u84dd\u7259\u8bbe\u5907":"Cerca Dispositivi Bluetooth","\u5df2\u53d1\u73b0":"Trovato","\u7ea2":"Rosso","\u7eff":"Verde","\u84dd":"Blu","\u9ec4":"Giallo","\u9752":"Ciano","\u7d2b":"Viola","\u767d":"Bianco","\u8df3\u53d8":"Salto","\u5168\u5f69":"RGB","\u64ad\u653e\u6a21\u5f0f":"Gioca","\u81ea\u8d70":"Automatico","\u58f0\u63a7":"Musica","\u81ea\u8d70\u901f\u5ea6":"Velocit\xe0","\u58f0\u63a7\u7075\u654f\u5ea6":"Sensibilit\xe0","\u56fe\u6848\u989c\u8272":"Pattern","\u5f53\u524d\u989c\u8272":"Attuale","\u5faa\u73af\u64ad\u653e":"Loop","\u52fe\u9009\u64ad\u653e":"Nomina","\u5730\u5740\u7801":"Indirizzo","\u663e\u793a\u8303\u56f4":"Intervallo","\u56fe\u6848\u76f8\u4f4d":"Fase","\u6b63\u5e38\u663e\u793a":"Normale","XY\u4e92\u6362":"Scambio XY","\u8c03\u5149\u8bbe\u7f6e":"Impostazioni Dimming","\u7ea2\u5149\u8c03\u5149":"Rosso","\u7eff\u5149\u8c03\u5149":"Verde","\u84dd\u5149\u8c03\u5149":"Blu","\u6fc0\u5149\u5149\u6e90":"Laser","\u5355\u8272":"Semp.","\u53cc\u8272":"Molti","\u8c03\u5236\u6a21\u5f0f":"Pattern","\u7cfb\u7edf\u8bed\u8a00":"Lingua","\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...":"Lettura dei Font","\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9...":"Generazione...","\u6587\u672c\u989c\u8272":"Colore del Testo","\u6587\u5b57\u5927\u5c0f":"Dimensione","\u663e\u793a\u89c6\u8ddd":"Distanza","\u6d41\u6c34\u901f\u5ea6":"Flusso","\u6295\u5c04\u65b9\u5411":"Direzione","\u6c34\u5e73\u6295\u5c04":"Orizzontale","\u5782\u76f4\u6295\u5c04":"Verticale","\u8d85\u51fa\u6700\u5927\u70b9\u6570":"Punti Massimi","\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931":"Le Parti Eccedenti Saranno Perse","\u7ebf\u6761\u989c\u8272":"Colore della Linea","\u6e05\u7a7a":"Svuota","\u56de\u9000":"Indietro","\u53d1\u9001":"Invia","\u6700\u591a20\u4e2a\u573a\u666f":"Fino a 20 Scene","\u63d0\u793a":"Messaggio","\u662f\u5426\u5220\u9664\u573a\u666f":"Vuoi Cancellare la Scena","\u7528\u6237\u70b9\u51fb\u53d6\u6d88":"L\'utente ha cliccato su Annulla","-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"--La lista delle scene \xe8 vuota--","\u573a\u666f":"Scena","\u79d2":"Sec","\u5220\u9664":"Cancella","\u7f16\u8f91":"Modifica","\u65b0\u589e\u573a\u666f":"Crea Nuova Scena","\u56fe\u6848\u9009\u62e9":"Pattern","\u76f4\u7ebf\u7c7b\u56fe\u6848":"Lineare","\u5706\u5f27\u7c7b\u56fe\u6848":"Arco Circolare","\u4eae\u70b9\u56fe\u6848":"Evidenzia","\u6253\u70b9\u56fe\u6848":"Punti","\u5723\u8bde\u56fe\u6848":"Natale","\u52a8\u753b\u7ec4\u522b1":"Animazione 1","\u52a8\u753b\u7ec4\u522b2":"Animazione 2","\u52a8\u753b\u7ec4\u522b3":"Animazione 3","\u52a8\u753b\u7ec4\u522b4":"Animazione 4","\u52a8\u753b\u7ec4\u522b5":"Animazione 5","\u767d\u8272":"Bianco","\u7ea2\u8272":"Rosso","\u84dd\u8272":"Blu","\u7c89\u8272":"Rosa","\u9752\u8272":"Ciano","\u9ec4\u8272":"Giallo","\u7eff\u8272":"Verde","\u6574\u4f53\u989c\u8272\u6362\u8272":"Totale","\u4e03\u5f69\u8679\u989c\u8272":"Arcobaleno","2\u5206\u6bb5\u989c\u8272":"2 Segmenti","3\u5206\u6bb5\u989c\u8272":"3 Segmenti","4\u5206\u6bb5\u989c\u8272":"4 Segmenti","8\u5206\u6bb5\u989c\u8272":"8 Segmenti","16\u5206\u6bb5\u989c\u8272":"16 Segmenti","32\u5206\u6bb5\u989c\u8272":"32 Segmenti","\u989c\u8272\u6e10\u7ed8":"Gradiente di Colore","\u4e0d\u6d41\u6c34":"Nessun Flusso","\u6b63\u5411\u6d41\u6c34":"Flusso Avanti","\u53cd\u5411\u6d41\u6c34":"Flusso Indietro","\u56fe\u6848\u5927\u5c0f":"Dimensione","\u7f29\u653e\u624b\u52a8\u9009\u62e9":"Zoom Manuale","\u7531\u5c0f\u5230\u5927\u7f29\u653e":"Espandi","\u7531\u5927\u5230\u5c0f\u7f29\u653e":"Stretto","\u5927\u5c0f\u5faa\u73af\u7f29\u653e":"Zoom Ciclico","\u4e0d\u89c4\u5219\u7f29\u653e\u4e00":"Zoom Regola 1","\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c":"Zoom Regola 2","\u4e0d\u89c4\u5219\u7f29\u653e\u4e09":"Zoom Regola 3","\u65cb\u8f6c\u89d2\u5ea6":"Angolo","\u6b63\u65cb\u8f6c\u901f\u5ea6":"Velocit\xe0 Positiva","\u53cd\u65cb\u8f6c\u901f\u5ea6":"Velocit\xe0 Inversa","\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e":"Posizione H","\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6":"Velocit\xe0 H","\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e":"Posizione V","\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6":"Velocit\xe0 V","\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c":"Rot. Ori.","\u6c34\u5e73\u79fb\u52a8":"M Ori.","\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c":"Rot. Ver.","\u5782\u76f4\u79fb\u52a8":"M Ver.","\u65e0\u6ce2\u6d6a":"Nessuna Onda","\u6ce2\u6d6a\u5e45\u5ea61":"Onda 1","\u6ce2\u6d6a\u5e45\u5ea62":"Onda 2","\u6ce2\u6d6a\u5e45\u5ea63":"Onda 3","\u6ce2\u6d6a\u5e45\u5ea64":"Onda 4","\u6ce2\u6d6a\u5e45\u5ea65":"Onda 5","\u6ce2\u6d6a\u5e45\u5ea66":"Onda 6","\u6ce2\u6d6a\u5e45\u5ea67":"Onda 7","\u6ce2\u6d6a\u5e45\u5ea68":"Onda 8","\u65e0\u6e10\u7ed8":"Nessun Gradiente","\u624b\u52a8\u6e10\u7ed81":"Manuale 1","\u624b\u52a8\u6e10\u7ed82":"Manuale 2","\u81ea\u52a8\u6e10\u7ed81":"Auto 1","\u81ea\u52a8\u6e10\u7ed82":"Auto 2","\u81ea\u52a8\u6e10\u7ed83":"Auto 3","\u81ea\u52a8\u6e10\u7ed84":"Auto 4","\u56fe\u5f62\u5206\u7ec4":"Gruppo","\u56fe\u5f62":"Grafico","\u989c\u8272":"Colore","\u989c\u8272\u6d41\u6c34":"Flusso","\u56fe\u5f62\u5927\u5c0f":"Dimen.","\u56fe\u5f62\u7f29\u653e":"Zoom","\u56fe\u5f62\u65cb\u8f6c":"Ruota","\u6c34\u5e73\u7ffb\u8f6c":"Flip Ori.","\u5782\u76f4\u7ffb\u8f6c":"Flip Ver.","\u6ce2\u6d6a":"Onda","\u6e10\u7ed8":"Graduale","\u64ad\u653e\u65f6\u957f":"Tempo","\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62...":"Caricamento...","\u53d6\u6d88":"Annu.","\u786e\u5b9a":"Conferma","\u9009\u62e9\u56fe\u5f62":"Seleziona","\u901a\u9053\u590d\u4f4d":"Reset","\u5b8b\u4f53":"Songt","\u76f4\u7ebf":"Linea","\u5706\u5f27":"Arco","\u4eae\u70b9":"Punto","\u6253\u70b9":"Gestione","\u5723\u8bde":"Natale","\u52a8\u753bA":"AnimA","\u52a8\u753bB":"AnimB","\u5f69\u8679":"Arco.","\u9ed8\u8ba4":"Default","\u8f6f\u4ef6\u7248\u672c":"Versione","\u8fde\u63a5":"Collegare","\u8bbe\u7f6e":"Impostazioni","\u624b\u7ed8\u6d82\u9e26":"Disegnato","\u6587\u672c\u64ad\u653e":"Testo","\u4e2a\u6027\u7f16\u7a0b":"Programma","\u52a8\u753b\u64ad\u653e":"Animazione","\u7ebf\u6761\u64ad\u653e":"Linea","\u5723\u8bde\u64ad\u653e":"Natale","DMX":"DMX","\u914d\u7f6e":"Config","\u8fd4\u56de":"Indietro","\u70b9\u6211\u8fde\u63a5":"Clicca per connettere","\u84dd\u7259\u672a\u8fde\u63a5":"Non connesso","\u8bbe\u5907":"Stato","\u8bf7\u8f93\u5165\u6587\u5b57":"Inserisci testo","\u9884\u7559\u65e0\u529f\u80fd":"Riservato","\u91cd\u7f6e":"Ripristina","\u84dd\u7259\u8fde\u63a5":"Connessione Bluetooth","\u5168\u9009":"Intero","\u53cd\u9009":"Inverso","\u6e05\u9664":"vuoto","\u5b57\u6570":"Testo","\u70b9\u6570":"Punto","\u9884\u89c8":"Anteprima","\u573a\u666f\u7ba1\u7406":"Gestione scena","\u52a0\u8f7d\u4e2d":"Caricamento","\u573a\u666f\u7f16\u8f91":"Modifica scena","\u8bf7\u5148\u8fde\u63a5\u84dd\u7259":"Si prega di connettere il Bluetooth prima","\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b":"Il dispositivo corrente non \xe8 riconosciuto","DMX\u5730\u5740\u7801":"Indirizzo DMX","\u8bf7\u5148\u6253\u5f00\u8bbe\u5907":"Accendere prima il dispositivo","\u5355\u7ebf\u5b57\u4f53":"Semplice","\u6b63\u5728\u53d1\u9001":"Invio in corso","\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528":"Controlla se il Bluetooth \xe8 abilitato sul tuo telefono","\u8be5\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587\u663e\u793a":"Questo font non supporta la visualizzazione in cinese","\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c":"A causa di limitazioni di capacit\xe0, alcuni caratteri cinesi non sono inclusi nella libreria di caratteri. Per una libreria di caratteri completa, vai alla versione dell\'APP","\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650":"Imposta i permessi di posizione per l\'app","\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650":"Imposta i permessi Bluetooth per il mini programma","\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38":"Lettura parametri dispositivo anomala","\u9009\u62e9":"Seleziona","\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247":"Imposta immagine di sfondo","\u53d1\u9001\u5931\u8d25":"Invio fallito","\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165":"La lunghezza del testo ha superato i 100 caratteri, per favore reinserisci","\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165":"Il numero di punti di coordinate del testo ha superato i 2048, per favore reinserisci","\u7b2c":"N.","\u7ec4\u6587\u5b57":"Gruppo","\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5":"Per favore modifica il carattere o il testo e riprova","\u4e0d\u652f\u6301\u6587\u672c":"Non supportato","\u7ec4\u5b57\u4f53":"Carattere del gruppo","\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u53d1\u9001":"Nessun testo nel gruppo, per favore inserisci prima di inviare","\u662f\u5426\u5220\u9664\u7b2c":"Eliminare N.","\u7ec4":"Gruppo","\u6700\u591a4\u4e2a\u5206\u7ec4":"Fino a 4 gruppi","\u6b63\u5728\u8fde\u63a5...":"Connessione in corso...","\u8fde\u63a5\u5931\u8d25":"Connessione fallita","\u5b57\u4f53\u9009\u62e9":"Seleziona carattere","\u601d\u6e90\u9ed1\u4f53":"NotoSans","\u601d\u6e90\u9ed1\u4f531":"NotoSans1","\u601d\u6e90\u9ed1\u4f532":"NotoSans2","\u601d\u6e90\u9ed1\u4f533":"NotoSans3","\u601d\u6e90\u9ed1\u4f534":"NotoSans4","\u601d\u6e90\u9ed1\u4f535":"NotoSans5","\u601d\u6e90\u9ed1\u4f536":"NotoSans6","\u601d\u6e90\u9ed1\u4f537":"NotoSans7","font_note_1001":"Cinese, Inglese, Spagnolo, Portoghese, Tedesco, Francese","font_note_1002":"Inglese, Spagnolo, Russo, Portoghese, Tedesco, Francese, Vietnamita, Hindi, Bengali","font_note_1003":"Inglese, Cinese, Spagnolo, Russo, Portoghese, Giapponese, Tedesco","font_note_1004":"Cinese, Inglese, Spagnolo, Portoghese, Tedesco, Francese","font_note_1005":"Inglese, Cinese","font_note_1006":"Inglese, Giapponese, Coreano","font_note_1007":"Arabo","\u4fdd\u7559":"Riservato","\u56fe\u6848\u521d\u59cb\u989c\u8272":"Colore iniziale","\u6df7\u8272":"Mescolanza","\u7b14\u753b\u5c11\uff0c\u65e0\u95ea\u70c1\uff0c\u63a8\u8350\u4f7f\u7528":"Raccomandato, migliore performance","\u5df2\u65ad\u5f00\u8fde\u63a5":"Disconnesso","\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c":"Inserisci un valore compreso tra 1 e 255","\u6587\u5b57\u7cbe\u5ea6":"Effetti testo","\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6":"Effetti","\u7cbe\u5ea6":"Effetti","\u9009\u62e9\u56fe\u7247":"Scelta","\u8bbe\u4e3a\u80cc\u666f":"Sfondo","\u8bc6\u522b\u56fe\u6848":"Leggere","\u63cf\u8fb9":"Contorno","\u6b63\u5728\u5904\u7406\u4e2d":"In elaborazione","\u5f53\u524d\u673a\u578b":"Modello","hand_draw_tips":" ** Per favore scorri dall\'area vuota verso il pattern di destinazione per selezionare.\\n ** Puoi eseguire operazioni come ingrandire, ridurre, spostare, cambiare colore ed eliminare sul pattern selezionato.","\u4e0d\u518d\u63d0\u793a":"Non mostrare mai pi\xf9","out_door_tips1":"1-30 Landmark","out_door_tips2":"31-40 Aurora Boreale","out_door_tips3":"41-50 Tunnel del tempo","\u6587\u4ef6\u540d":"Nome del file","\u4fdd\u5b58\u6587\u4ef6":"Salva file","\u9009\u62e9\u6587\u4ef6":"Seleziona file","\u8bf7\u8f93\u5165\u6587\u4ef6\u540d":"Nome del file","\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d":"Nuovo nome del file","\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a":"Il nome del file non pu\xf2 essere vuoto","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165":"Il file esiste gi\xe0, per favore reinserisci","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed":"Il file esiste gi\xe0, continuare?","\u4fdd\u5b58\u6210\u529f":"Salvataggio riuscito","\u4fdd\u5b58\u5931\u8d25":"Salvataggio fallito","\u4fee\u6539\u6210\u529f":"Modifica riuscita","\u4fee\u6539\u5931\u8d25":"Modifica fallita","\u5220\u9664\u6210\u529f":"Eliminazione riuscita","\u5220\u9664\u5931\u8d25":"Eliminazione fallita","\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301":"Il modello corrente non lo supporta","text_time_range":"Intervallo 1-25,5","\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848":"Riconoscimento fallito","\u8bf7\u9009\u62e9\u6587\u4ef6":"Per favore seleziona un file","\u6587\u4ef6\u6570":"File","\u53e6\u5b58\u6587\u4ef6":"Salva come","\u5220\u9664\u6240\u9009\u6587\u4ef6":"Elimina i file selezionati","Select-File":"Sele.","\u6447\u5934\u8bbe\u7f6e":"Impostazioni movimento","\u6447\u5934\u6a21\u5f0f":"Modalit\xe0","\u6447\u5934\u76f8\u4f4d":"Fase","\u81ea\u52a8":"Automatico","\u624b\u52a8":"Manuale","X\u7c97\u8c03":"Grossa X","X\u7ec6\u8c03":"Fine X","Y\u7c97\u8c03":"Grossa Y","Y\u7ec6\u8c03":"Fine Y","\u6c34\u5e73\u7535\u673a":"Moto. O","\u6c34\u5e73\u5fae\u8c03":"Rego. O","\u5782\u76f4\u7535\u673a":"Moto. V","\u5782\u76f4\u5fae\u8c03":"Rego. V","\u7535\u673a\u901f\u5ea6":"Velocit\xe0","\u6d41\u6c34\u65b9\u5411":"Direzione","\u963f\u62c9\u4f2f\u8bed\u65b9\u5411":"Arabo","\u9ed8\u8ba4\u65b9\u5411":"Default","\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939":"Salva nella cartella","\u9009\u62e9\u5217\u8868":"Lista","\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0":"Nome del gruppo","\u64ad\u653e\u5217\u8868":"Playlist","\u4fdd\u5b58":"Salva","\u6dfb\u52a0":"Aggiungi","\u6279\u91cf\u8bbe\u7f6e":"A lotti","\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0":"Nome della lista","ALL":"Tutti","\u5217\u8868\u7f16\u8f91":"Modifica lista","\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57":"Inserisci un numero tra 0.1 e 25.5","\u6dfb\u52a0\u81f3\u65b0\u5217\u8868":"Nuova lista","\u7acb\u5373\u64ad\u653e":"Riproduci","\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed":"La playlist corrispondente verr\xe0 eliminata, continuare","-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- Lista vuota --"}')
        },
        cbd5: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("44c2"),
                h = r("652e");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        cefd: function(e, t, r) {
            (function(t) {
                var n = r("af34"),
                    h = r("34cf");

                function a(e, t) {
                    var r = "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (!r) {
                        if (Array.isArray(e) || (r = function(e, t) {
                                if (!e) return;
                                if ("string" === typeof e) return i(e, t);
                                var r = Object.prototype.toString.call(e).slice(8, -1);
                                "Object" === r && e.constructor && (r = e.constructor.name);
                                if ("Map" === r || "Set" === r) return Array.from(e);
                                if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(e, t)
                            }(e)) || t && e && "number" === typeof e.length) {
                            r && (e = r);
                            var n = 0,
                                h = function() {};
                            return {
                                s: h,
                                n: function() {
                                    return n >= e.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: e[n++]
                                    }
                                },
                                e: function(e) {
                                    throw e
                                },
                                f: h
                            }
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }
                    var a, c = !0,
                        o = !1;
                    return {
                        s: function() {
                            r = r.call(e)
                        },
                        n: function() {
                            var e = r.next();
                            return c = e.done, e
                        },
                        e: function(e) {
                            o = !0, a = e
                        },
                        f: function() {
                            try {
                                c || null == r.return || r.return()
                            } finally {
                                if (o) throw a
                            }
                        }
                    }
                }

                function i(e, t) {
                    (null == t || t > e.length) && (t = e.length);
                    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
                    return n
                }

                function c(e, t) {
                    this.x = e, this.y = t
                }
                var o = function() {
                    function e() {}
                    return e.nbrs = [
                        [0, -1],
                        [1, -1],
                        [1, 0],
                        [1, 1],
                        [0, 1],
                        [-1, 1],
                        [-1, 0],
                        [-1, -1],
                        [0, -1]
                    ], e.nbrGroups = [
                        [
                            [0, 2, 4],
                            [2, 4, 6]
                        ],
                        [
                            [0, 2, 6],
                            [0, 4, 6]
                        ]
                    ], e.tag = [1, 0], e.toWhite = new Array, e.main = function(t, r, n) {
                        var h = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 128;
                        e.grid = new Array(n);
                        for (var a = 0, i = 0, c = [0, n - 1]; i < c.length; i++) {
                            x = c[i];
                            for (var o = 0; o < r; o++) {
                                var s = t[x * r + o];
                                h > s ? a++ : a--
                            }
                        }
                        for (var l = a > 0 ? 0 : 1, p = 0; p < n; p++) {
                            for (var d = new Array(r), b = 0; b < r; b++) {
                                var g = t[p * r + b];
                                d[b] = h > g ? e.tag[l] : e.tag[1 - l]
                            }
                            e.grid[p] = d
                        }
                        e.thinImage();
                        for (var j = new Array(r * n), x = 0; x < n; x++)
                            for (var V = 0; V < r; V++) e.grid[x][V] = 1 - e.grid[x][V], j[x * r + V] = e.grid[x][V];
                        return e.grid = null, {
                            c: r,
                            r: n,
                            data: j
                        }
                    }, e.thinImage = function() {
                        var t, r = !1;
                        do {
                            t = !1, r = !r;
                            for (var n = 1; n < e.grid.length - 1; n++)
                                for (var h = 1; h < e.grid[0].length - 1; h++)
                                    if (e.grid[n][h] === e.tag[1]) {
                                        var a = e.numNeighbors(n, h);
                                        a < 2 || a > 6 || 1 === e.numTransitions(n, h) && e.atLeastOneIsWhite(n, h, r ? 0 : 1) && (e.toWhite.push(new c(h, n)), t = !0)
                                    } for (var i = 0; i < e.toWhite.length; i++) {
                                var o = e.toWhite[i];
                                e.grid[o.y][o.x] = e.tag[0]
                            }
                            e.toWhite = new Array
                        } while (r || t)
                    }, e.numNeighbors = function(t, r) {
                        for (var n = 0, h = 0; h < e.nbrs.length - 1; h++) e.grid[t + e.nbrs[h][1]][r + e.nbrs[h][0]] === e.tag[1] && n++;
                        return n
                    }, e.numTransitions = function(t, r) {
                        for (var n = 0, h = 0; h < e.nbrs.length - 1; h++) 0 !== e.grid[t + e.nbrs[h][1]][r + e.nbrs[h][0]] && e.grid[t + e.nbrs[h + 1][1]][r + e.nbrs[h + 1][0]] === e.tag[1] && n++;
                        return n
                    }, e.atLeastOneIsWhite = function(t, r, n) {
                        for (var h = 0, a = e.nbrGroups[n], i = 0; i < 2; i++)
                            for (var c = 0; c < a[i].length; c++) {
                                var o = e.nbrs[a[i][c]];
                                if (e.grid[t + o[1]][r + o[0]] !== e.tag[1]) {
                                    h++;
                                    break
                                }
                            }
                        return h > 1
                    }, e.printResult = function() {
                        for (var r = 0; r < e.grid.length; r++) {
                            var n = e.grid[r];
                            t("log", n.join(""), " at sub/pages/utils/ZhangSuen.js:150")
                        }
                        t("log", "-------------------------------------------------------------", " at sub/pages/utils/ZhangSuen.js:152")
                    }, e
                }();

                function s(e, t) {
                    for (var r = 1, n = 0; n < t; n++) r *= e;
                    return r
                }

                function l(e, t, r, n) {
                    return r < 0 || r >= e.c || n < 0 || n >= e.r || 0 === e.data[e.c * n + r] ? -1 : t[n][r] ? 0 : 1
                }
                var p = [
                    [1, 0],
                    [1, -1],
                    [0, -1],
                    [-1, -1],
                    [-1, 0],
                    [-1, 1],
                    [0, 1],
                    [1, 1]
                ];

                function d(e, t, r, n, h, a) {
                    var i = !1,
                        c = !1;
                    a.push([Math.round(1 * r), Math.round(1 * n)]), t[n][r] = !0;
                    var o = r,
                        d = n;
                    while (1) {
                        i = !1;
                        for (var b = 0; b < 5; b++)
                            if (!(4 === b && h >= 0)) {
                                for (var g = 0; g < 2; g++) {
                                    var j = s(-1, g),
                                        x = 0;
                                    x = -1 === h ? (j * b + 8 * g) % 8 : (h + j * b + 8 * g) % 8;
                                    var V = p[x][0],
                                        f = p[x][1],
                                        F = r + V,
                                        k = n + f,
                                        m = l(e, t, F, k);
                                    if (1 === m && (r = F, n = k, h = x, a.push([Math.round(1 * r), Math.round(1 * n)]), t[n][r] = !0, i = !0), i) break;
                                    if (0 === b || 4 === b) break
                                }
                                if (i) break
                            } if (!i) {
                            if (c) break;
                            c = !0, a.reverse(), r = o, n = d, h = -1
                        }
                    }
                }

                function b(e) {
                    var t = e[1] + e[2] + e[3],
                        r = e[5] + e[6] + e[7];
                    if (0 === e[0]) {
                        if (0 === e[4]) {
                            if (t >= 0 && r > 0 || t > 0 && r >= 0) return !0
                        } else if (t >= 0 && 0 == e[6] && 1 === e[7] || 1 == e[1] && 0 === e[2] && r >= 0) return !0;
                        if (0 === t && 0 === r) return !0
                    } else {
                        if (t >= 0 && 0 === e[6] && 1 === e[5] || r >= 0 && 0 === e[2] && 1 === e[3]) return !0;
                        if (0 === t && 1 === e[4] && 0 === e[6] && 1 === e[7] || 0 === r && 1 === e[4] && 0 === e[2] && 1 === e[1]) return !0;
                        if (0 === t && 0 === r) return !0
                    }
                    return !1
                }

                function g(e, t) {
                    var r, h = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 2,
                        i = t[0],
                        c = t[t.length - 1],
                        o = [],
                        s = a(e);
                    try {
                        for (s.s(); !(r = s.n()).done;) {
                            var l = r.value,
                                p = l[0],
                                d = l[l.length - 1];
                            if (p[0] != d[0] || p[1] != d[1]) {
                                if (Math.abs(p[0] - c[0]) + Math.abs(p[1] - c[1]) <= h) l.reverse(), l.push.apply(l, n(t.reverse()));
                                else if (Math.abs(p[0] - i[0]) + Math.abs(p[1] - i[1]) <= h) l.reverse(), l.push.apply(l, n(t));
                                else if (Math.abs(d[0] - i[0]) + Math.abs(d[1] - i[1]) <= h) l.push.apply(l, n(t));
                                else {
                                    if (!(Math.abs(d[0] - c[0]) + Math.abs(d[1] - c[1]) <= h)) {
                                        o.push(l);
                                        continue
                                    }
                                    l.push.apply(l, n(t.reverse()))
                                }
                                t = l, i = t[0], c = t[t.length - 1]
                            } else o.push(l)
                        }
                    } catch (g) {
                        s.e(g)
                    } finally {
                        s.f()
                    }
                    if (t.length > 3) {
                        var b = t.length - 1;
                        Math.abs(t[0][0] - t[b][0]) < 10 && Math.abs(t[0][1] - t[b][1]) < 10 && t.push([t[0][0], t[0][1]])
                    }
                    return o.push(t), o
                }
                e.exports = {
                    zs: o,
                    extractLinesFromMatrix: function(e) {
                        var t = e.r,
                            r = e.c;
                        (function(e, t, r) {
                            for (var n = 0; n < t; n++)
                                for (var i = 0; i < r; i++) {
                                    var c = n * r + i;
                                    if (0 !== e[c]) {
                                        var o, s = [],
                                            l = a(p);
                                        try {
                                            for (l.s(); !(o = l.n()).done;) {
                                                var d = h(o.value, 2),
                                                    g = d[0],
                                                    j = d[1],
                                                    x = g + i,
                                                    V = j + n;
                                                x < 0 || x > r - 1 || V < 0 || V > t - 1 ? s.push(0) : s.push(e[V * r + x])
                                            }
                                        } catch (f) {
                                            l.e(f)
                                        } finally {
                                            l.f()
                                        }
                                        b(s) || (e[c] = 0)
                                    }
                                }
                        })(e.data, t, r);
                        for (var n = Array.from({
                                length: t
                            }, (function() {
                                return Array(r).fill(!1)
                            })), i = [], c = 0; c < t; c++)
                            for (var o = 0; o < r; o++)
                                if (0 !== e.data[c * r + o] && !n[c][o]) {
                                    var s = [];
                                    d(e, n, o, c, -1, s), i = g(i, s, 8)
                                } return i
                    }
                }
            }).call(this, r("f3b9")["default"])
        },
        cfa8: function(e, t) {
            e.exports = {
                DrawFonts: {
                    5363: "izlh,pWxD,mYSj,mY67,e7Gh,e8kz,9J7z,9Itn,iz/t,5kQP,5jID,iyTn,iz/z",
                    "50ec": "iXbH,or0F,3QzX,kjg1,5cPr,3QQV,3R5H,5c+N,5dfz,3RmF,3RDr,5dqV,9kur,9lbx,kjCr,7YBx,lIcr,lHB9,hzQr,hArV,dsMP,ds9x,lHRX,9kR1,oryj,n3L1,kjrb,orn9",
                    "8c21": "luYt,oqRT,h3zr,h3Lz,5jOz,8fZR,cF6J,8g9T,bcld,bcDh,9Jpx,3R2Z,3QYT,8glZ,5kyR,3Rx7,3RD3,fDQb,cFAP,fDs7,cEQH,cEKB,k0H1,k06T,h4pF,mYof,h47x,mY67,mYGn,h4HT,h47D",
                    "58c5": "orsH,orhx,n2SH,n45x,lHez,iXhp,iXyh,gbAX,kjwV,gbvj,gc19,hzQx,aHRH,eQ2x,hz/H,kjZ1,iYqr,iX+p,aIEp,aJ4x,gccj,gcEx,dsSr,dsqp,3R03,9kA9,3QoH,3RDx,7Z1z,7YkF,kk8b,aIVh",
                    "82f7": "mYSj,mXy1,pWPF,k0o/,k00R,pWrH,iz9f,5j+B,5kyR,izJB,fCNX,fE6p,bcxf,bbZ5",
                    "83e1": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hzzz,hAgF,eQ89,6AO9,6AIx,6Arz,9koV,dr+b,c4aV,6B8z,9kLp,c4xj,dsw1,dsMP,3RxV,3Qup,drJp",
                    "62da": "or0z,5cyF,3QA1,5cnp,ePYP,aHRN,iXbH,iXDV,orJz,hzQx,hAxx,gcEr,kk8h,3Rsb,eQAh,3QQP,9kFN,eQdN,c4Zr,c4aV",
                    "54d2": "kjCr,n3iV,ePTb,eQ2x,6AIx,3QLh,6AIr,3R5N,3RDx,7Zir,eQuF,7YMN,orJz,eQuF,iXUH,iYqx,lGZH,lHeF,aI6F,aHRN,lGZN",
                    "55fe": "lHvr,orbV,kjI3,kjrh,kjwP,7YvV,3QFF,5cPr,3R09,5c+N,eQdN,ePYV,iY9z,gccp,orJz,kjTp,lIcr,lHS1,hAaX,hAxx,c4Zr,c4xp,hAmb,c4Oh,3Rbp,3RDr,9l5V,lGZH,lH3p,lHeF,c3/F,c3KN,lGZN",
                    "5d74": "7YeX,oqX1,3R03,c4m9,c4Oh,5dlh,3RmF,6AO3,6Beh,9l0b,9kA9,dsSr,dsMV,eQuF,hA5p,ds9x,ds3V,oryj,hA5p,lHXz,n3Wh,hArP,iY9F,iXP3,hzQx,n3u3,lHGN,iXyb,7Yqh,7Y3N,iXbN",
                    "5eb9": "n3zH,orn9,lIcr,lH91,7Yf1,3QoN,3QFz,6ACV,c4aV,c4TV,9l5V,9koV,7YSj,5dfF,3RxV,3RDx,hzFb,hAxx,iXJr,eQ2x,eQuF,iY9F",
                    "960f": "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,9kLj,7YY1,c4CX,aIPF,dskH,gci1,iY41,dsHb,gci1,6AIr,7YH9,dsf9,dr+h,6Arz,7Yqh,hzFh,hzW3,hzzF,kjrb,iXDV,3Quj,kjap",
                    "6e54": "kjfX,n2Yp,lIcr,lHkh,orJz,n3L1,n3u3,orhx,hziH,ePCp,c3/z,3Qup,dsqj,ds3V,9koP,9kLp,3QQP,hzKV,hA5p,5d4p,3R5N,5cV9,5dfz,3Rsh,5dqV,iYkV,7Z1z,gcnF",
                    "902d": "lH8X,oqRp,hziH,hzop,hzu1,6Am1,3QoN,6AlX,3QLh,3RDx,aInr,aI+V,6BjV,6AIx,hzQx,hAmh,dsHh,ds9x,iYkP,lIcx,lHpV,iXyh,orsH,n3Fp",
                    "5b32": "iXyb,iXbN,n31X,6Am1,3QoN,c3KH,c45h,5cEh,3QFF,3QQP,7YMN,hz/N,hzKV,orhr,7YBx,5c+N,3RgX,6Beh,n3Wh,iY3X,iYqx,c4CX,c4Zx,5dwx,3RxV,n2SH,n3dh,ePTh,ePwN,n2SN,eQoX,eQLx,n45x,n3L1,eQp1",
                    "7f2f": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,8gPZ,8gfZ,lvIL,fDKl,pXbJ,mYAh,mYo9,pWJP,h4pF,izxz,izVx,h4BN,5kgD,5kQP,bcPj,bcfd,5kgJ,fE6j,lw4V,lvkD,fDm7,fE6p",
                    "67b5": "3QFz,or0F,5d4j,3Rh1,3RmF,6BjV,aI+V,aIt9,eQp1,eQ2r,eQLx,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,hzW3,lHB9,lI1h,hAmh,hzW9",
                    "6a8e": "3QzX,oqX1,3QWr,9kux,9lbx,5dwx,3RxV,3Rsh,7Z1z,6Beh,6ATN,aIK1,gccj,dsBF,dsqj,gcnF,hAmh,hz/N,hAaX,iY41,eQFP,c4TV,c4m9,eQ89,hzQr,n3L1,hAxx,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF",
                    "66be": "ePNz,ePwN,ds3P,dsqp,aIt9,5cV9,3QWx,5cJV,9kQX,9kjh,3RgX,7ZcV,lI6V,lHXz,lIcx,kjYX,orJF,lHpP,lHMp,orhr,n3u9,hAgz,7Z1F,3RDx,lGZH,lHeF,7YkF,7Y3N,lGZN,gbRP,gccp,iX+p,iXDV,gbRV",
                    "80dd": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,7YXX,5c+N,5cV9,n3u9,or+x,lHXz,9kWF,3RDx,6Bpx,5d9X,3RmF,eQLr,eQdN",
                    "717a": "oqWX,6Am1,3QoN,3QLb,7YkF,5cJP,6AIx,gbXx,gbMh,kjrb,hzu1,n3iP,kjCx,ePwH,iXbN,6AIr,3R5N,3RDx,7Z1z,6B31,6AZp,n3Fp,n3/V,hArV,hA5p,kkdP,kjTp,eQuz,dsBF,7Zix,dsSr,aIVh",
                    "789a": "or7L,oqLN,fCNX,or1V,h4TP,h4dJ,k0MZ,izVD,izDp,k0j3,mYSj,mYcd,pWVL,orO1,h3Lt,h41H,8g3X,8fNP,h3Lz,cF6J,cFAP,5kQP,5kmP,cF6P",
                    "94ab": "gbpH,or0F,kjwP,kjg1,oryj,lHS1,kkjr,kjI9,kjTj,7YSp,3QWx,5d9X,3RmF,3Rsh,5dqV,eQFV,eQjp,gbAX,gbRV,gbGz,3QFF,6ACV,aHRH,aIhV",
                    "954e": "gbpH,or0F,kjwP,kjg1,lHvr,lHB9,n3Fp,orE1,n3QF,lI6V,lIcx,lHMj,lHXF,gbAX,gbRV,c4aP,c3KN,dsSr,dsf9,aIyH,aI+V,7Zir,7YH9,5d4j,3Rh1,5dfF,dsBF,6ACP,3QFF,gbGF,iXP3,iYkV,gcyV,gc19,iXP9",
                    "9e6b": "or0z,n37F,n2SH,n3ox,kjlz,gbGF,ePI1,iXmX,gbpN,hzKP,iXyh,gc6H,iY41,orE1,n3/P,orPh,lHGH,lIcx,iY9z,gcnF,eQAh,eQLx,gcEx,c45b,eQ2x,9kA3,aInx,9kQX,aIPF,c4IF,c3/F,7YkF,7ZcV,6BjV,3RmF,3Rh1,5chH,5d4p,lH3j,lHpV,kjwV,kjap,lH3p",
                    "7fca": "lHez,oqX1,kj4H,kjCx,6AlX,gbvp,7YBr,5chN,gbRP,7Yqh,eQjj,hzW9,aIt3,eQp1,5c+H,3Rbp,5da1,lHS1,lHB9,lI1b,lIcx,5dwx,3RxV,5dlh,eQLr,aIPF,hAgz,eQFV",
                    "4f25": "gbpH,orhx,3QFz,kjlF,7YSj,5cV9,orn9,hz/H,n3Wh,gbMb,gcEx,dskH,5dwx,5dC9",
                    "88d2": "n3u3,orhx,lGZH,lIcx,ePwH,iXsF,eQLr,iY9F,gccj,c4IF,dsvX,drUF,iXJx,3QoH,c4gx,aIhP,3QQV,3QWx,5cV9,3RxP,3Rsh,c4m9,6B2X,9l0h",
                    "909b": "mYc7,mXE7,8fZL,mXW5,9J1n,6Mo1,3ReV,orB/,os49,lw4V,h4BN,cFGV,9JHF,6Nwn,6Nqh,8gy5",
                    "57da": "oqWX,6Am1,6AaN,7Yqb,6Am1,3QWr,ds9x,dsSx,5dwx,3RxV,5dlh,7ZcP,c4D1,7YH9,gchX,c4D1,hziH,hzFh,hz/H,n3zN,n3Wh,hAmh,hz/N",
                    "835f": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,c3Qj,ePYV,hzW9,eQjp,c4TV,c4Zx,c4aP,c4xp,9l0b,9k81,9kur,3QA1,5dfF,3Rsb,6B31",
                    "84e5": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,ePwH,hzop,hAxx,eQFV,aHRH,aI11,c45h,eQ89,c4D1,aIVh,aJ4x,aIhP,aIEp,3R03,aIt9,3QoH,3RDx,6Arz,5cEh,7Z7b,7Yf1,5d9X,6B8F",
                    "641b": "oqXJ,5jOz,3QuT,5jCx,fD43,bbB1,j/yH,j/WR,mYid,orpZ,orU1,mYAh,lveB,lw4V,3R8Z,lvwP,lvIL,3Rl5,izfl,iz/z,cFAP,cEQH,fE6j,fDa5,9Jpr,3RD3,3RJ9,bcf7,5j+B",
                    "558f": "mYSj,mY67,pX5N,k0H7,k0iZ,pWJP,izJv,fDKl,8g3X,8fZR,fE6j,fDm7,mXxX,mXW5,cEKB,cEmx,mXy1,bcPd,5kQP,5kmP,bclj,bcPj",
                    5709: "i6bF,ortf,i5H9,i6I5,lhel,lgqz,eXFj,gvSd,gvsb,eXsr,dlql,dkCz,a9T9,aaU5,dl0p,6/K/,q1ib,q2Jd,5smd,5qXh,q1ih",
                    "72ef": "n2SH,kjlF,6ArF,3Qup,5chN,c3KH,c3Qp,ePNF,gbMb,n3Fp,oryp,gcEr,n3Fp,gc13,gcnF,c4TP,c4aV,3RxP,7Z7h,5dqP,5cJV,9kFN,c4rN,hziH,lHkh,or6h",
                    "602b": "3QzX,oqX1,3QWr,6ATN,orsN,3Rmz,orJF,7Z7b,6BjV,7Zix,dsSx,ds9x,hzQx,hArV,lI6V,lHpV,gbMb,iXsF,drDH,iXbN",
                    "6ce0": "luYt,oqRT,iyNb,fCU7,cEEz,3QuT,cEQB,cFAP,6Nef,3Rk/,8gfZ,fE6j,mYof,orB/,fD9/,mYof,fDE9,h4jP",
                    "6f29": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,3QGP,6MSb,lveH,lvwJ,lv8B,ordR,mY67,h4jJ,orO1,h4vL,h4TV,e8Oz,h4HN,3Rx7,3RJ9,3Rx1,6Nkl,cFiR,3R8Z,6Nkl,3QYN,5kgJ,fDsd,fDgb,lv+J,lvIR,bcVj,bcJn",
                    "5f3c": "oqLH,or1V,iz3p,iyNh,cEmx,cEEF,5jUF,3QAP,5jID,5kKN,3RD3,5kWV,cFGV,cFoN,izPx,iA5F,os49,orI5,mY05,mYof,mYid,izfr,9IRr,9Jdv,izDv,izxz,izfr,e8qp,e82r",
                    "9aa3": "oqLH,or1V,fD49,luSx,e7Gn,e7Yl,6MM5,3QAP,5jID,bbT3,9Inh,3QSR,6MY7,orjT,os49,lw4V,lvkD,k0oV,k0N3,izPx,e8Cx,cFiR,e8qv,h4TP,h4dJ,bcDb,bcVp,9JBz,5kQP,3Rx7,5kEN,8gW3,8gE1,8gfT,8gy5,bcf7,bcxl,9Jdv,5ksL,3R93,5kgJ",
                    "740f": "n3db,n2SN,kjI3,n3ox,kkjr,kjTp,eQLr,eQjp,orJF,6Beb,hAmh,3RDr,3Rbp,6AO9,gc19,gbRV,ePwH,ePTh,5chH,5ct1,6Axh,6AO3,3QQV,n31X,5ct1,aJ4r,aIEp",
                    6877: "3QFz,or0F,3R03,5c+N,gc6N,gcEx,5dwx,3RxV,5dlh,5dfz,gcnF,kkdV,kjNN,hzQr,n3Fp,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,c4Zr,c4rN,7YMH,7Zix",
                    "8f79": "oqWX,gbpN,gbMh,3QFz,hzzF,aIyH,5cJV,6Bpr,9l5V,5c+H,3Rbp,3Rh1,5dfF,kk2F,eQLr,eQ89,lHB9,orUV,lGZH,lHpV,c4aP,c3KN",
                    "727f": "3QFz,or0F,eQLr,eQ2x,orDX,eQp1,kjI3,kkdV,hzQr,lHB9,iXhj,iXDV,gbpH,kjap,9jYH,9k2p,ds3V,5cV3,aIt9,aI+V,5dqV,5cV9",
                    8182: "n37z,oqX1,lGZH,lHvx,lH8X,iXn1,ePwN,iXmX,iXDV,gbRV,ePTh,gchX,eQjp,eQdN,iXUN,kkdV,n3Fj,n45x,kjI3,oryp,iY3X,eQFV,eQLx,gctb,hArV,aI0X,aIVh,7Z7b,7Yf1,5d4j,3Rh1,3RmF,5dlh,dsHh,drP1,3QA1",
                    7967: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ePYV,3QLb,9kFN,orsN,orJz,5dfF,3Rsh,3RDx,6Bpx,aJ4r,eQuF,iYqx,hzQr,iXJx,aIhP,eQdN",
                    7726: "hzoj,hzKV,ds3P,drJp,3QQP,5da1,5d4j,oryp,hzW3,5cV9,hA5j,hAmh,orPb,5dlh,3RxV,3RJ9,6Bv9,iYw3,gcK9,eQAh,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94de": "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aInr,aHRN,6ACP,3QFF,gbGF,3Rmz,eQuF,6Beb,5dqV,6Bpx,dsSx,dskN,5c+N,gccj,n3Fp,n3/V,gcyV,gccp",
                    "79ed": "orbP,lGZN,3QFz,n37F,aIEj,5cJV,orDX,3Rh1,iYkP,hzW9,dsf9,dsSx,c4Zx,7Zix,6BjV,7Z7h,dr+b,c4aV,ePHX,9jYN,hziH,hzKV",
                    7600: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QFz,6ACV,gbRV,gc6H,gbMh,iXDP,hzQx,c4aP,c4rN,5c+N,3R09,5cPx,5dqP,7Z1F,aIVb,9l5V,hAmb,dsSx,dsvX,iYfh,c3KH,gbGF,kj4H,hzop",
                    "88fe": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,5cJP,9kA9,n3u9,n3/V,iYkV,iXP9,dsSr,dskN,9kWz,gcnF,ePTb,drUF,aIhV,9l5P,5dqV,5d4p,9kLp,9l5V",
                    8046: "n3or,n2SN,3QQP,n3iV,9kur,5chN,c3VX,c4aV,hzKP,hzu1,6AlX,n321,3Rsb,7YSp,6B8z,dsMV,dskN,gchX,eQuF,gc13,n3QF,orJF,gcEr,n3QF",
                    "867c": "oqWX,5ct1,5chN,6ACP,5ct1,5cPr,9kjh,6Bpr,3RDx,3Rh1,5d4p,eQFV,eQdN,oryj,gbXx,kkjr,kjNN,iXyb,dr+h,drDN,iXbN,iXyh",
                    "86d8": "6Arz,or0F,6AIr,5chN,9koP,5cPx,aJ4r,aInx,eQ83,eQFV,iYqr,iXP9,n3/P,kk2F,kjTj,n3u9,3RgX,iY41,ds3P,iXDV,iXhp,drJp,ds3V",
                    8763: "oqWX,5ct1,5chN,5csX,6Axh,7Yqh,3QLb,6AIx,kjCx,kjrb,kjNN,lHB3,n3ox,hA5j,n3QF,kkjr,kjZ1,gchX,gcEx,dsHh,5dlh,3RmF,5da1,aJ4r,aIK1,3R03,5c+N,eQdN,eQ2x,iXyb,dr+h,drDN,iXbN,iXyh",
                    "87e0": "pW9t,5jOz,5jCx,6MS5,5jOz,9ILf,5k4H,8gPZ,8gfZ,5kyL,bcxl,orH/,cFiR,mY61,pX5T,k0iZ,lvqJ,mYMd,k0B1,izlh,iA5F,cEWx,h4pL,h4BH,cFGV,5kgD,bcfd,bcPj,5kQP,5kgJ,j/WL,e7Yl,e7Ah,j/yN,j/WR",
                    "7b33": "iXbH,or6h,lHB3,lH91,orPb,iXUN,lIcr,lHS1,iYkP,lHXF,lHez,iXDV,hzzz,7YkF,3QoN,5cEb,3QQV,5cPx,eQ2x,ePCp,eQjj,5d4p,5dqV,eQFV,eQjp",
                    "7be5": "kj4H,or0F,n31X,n37F,n3ox,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,c4xj,hA5p,hzKP,c4aV,hziH,hAxx,3R03,aIt9,5dwr,5dqV,7YSp,9jYH,9lbx,5chH,5cnp,7YvV,ePCj,eQFV,c4TV,c3Qp,ePCp",
                    8238: "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,5d4j,3Rh1,3RmF,5dlh,lI1h,lHB3,lIcx,hAaX,c4D1,c4rN,hz/N,hAb1",
                    "7cbd": "3QFz,or0F,aIyH,6AIx,c45b,aIhV,7Y3H,drP1,gbXr,gbpN,hAmb,hz/N,iYkP,kkjx,lIcx,lHB9,iXJx,iXyb,kjwV,lGZH,iXn1,n3KX,oryp,dsf3,dsSx,dsvX,5da1,3Rbp,5c+N,6Bpr,aIVh",
                    "8d67": "ePNz,or0F,ePwH,ePYV,9jYH,aHXp,9kur,aIhV,3QFz,5cEh,ePTh,ePHX,6Am1,3QoN,3QWr,6ATN,lHGN,lI6V,hArV,gcth,gcnF,dsqj,dsSx,c4Zx,9l5V,3Rbp,3RDr,aIEp,kjaj,kjwV",
                    "91ae": "n3or,n2SN,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,orsH,kjI9,n3Wb,orJF,lHMj,lIcx,kjNH,9kFN,9lbx,dskH,dsMV,hArP,hz/N,9kWz,lHXF,3RJ3,6Bpx,6Beb,3Rsh,3RgX,6B31,6ATH,3R09,iXJr,5cPx,5chN,iXbN,iXJx",
                    "8dfd": "6MG3,iz3p,8g3R,5jID,5jCx,e7Gh,5jID,e82l,e7Sp,h4NJ,e8Oz,e8kz,fDsd,k0cZ,k0H7,orU7,orw3,9J7t,5kmP,3Re/,3RD3,5kQP,9JBt,8gW9,bcxf,8gE1,5k4B,6MY7,oqRN,or7R,iz9l,iyTn,oqRT",
                    "8c8a": "or6b,n3dh,hziN,ePNz,hzop,drJj,drP1,iXJx,kjCx,lIcr,lHGN,gccj,lHXF,aI+P,aIyN,5cEb,3QQV,5cPx,eQ2x,gbRV,kjfX,hzFh,ds3P,9k81,9k2p,5cnj,5ct1,aInx,gc6H,5c+N,5dqV,gcyV,gc6N",
                    "9f83": "iz9f,pWlB,iyNb,izln,mXJZ,iyZj,mY61,mXW5,h4HN,h4pL,bcr9,bcJn,5kWP,5kgJ,5kKN,mYGn,mYof,5ksL,e7Ab,5jCx,5jID,8g9T,e88n,bc35,e7Sp,fD49,bbH1,e7Sp",
                    "9cbb": "luMr,pW9z,mXE1,mXW5,iyZj,9Izj,e7Ab,e7Yl,6ML/,5jCx,e8wv,5kyR,9IXh,9JHF,izxt,lvkD,orw3,orNX,lvCL,izPx,iA5z,lvUT,os49,9ILf,iz9l,iyNh,9Inh,9ILl,5kax,e88n,e8UF,5kWV,5kaD",
                    9794: "oqWX,iXn1,iXyh,or6h,lGZH,lHvx,7YBr,7Y3N,iXsz,3QFF,orDX,iXP9,lHMj,lI6V,gci1,aIK1,3QWx,6Bpr,3RDx,3Rsh,5dfF,9kWF,gbvj,gbRV,c4aV,c3Qp,gbvp,c4TP,gcyV,gc19,c4m9,c4TV",
                    "9ae1": "orhr,oqX1,gbB1,drJp,ds3V,ePTh,gbXr,gbpN,iXmX,iXDV,lHpP,lH91,lHGH,lHMp,n3QF,orPh,lI6P,iY9F,hA5p,hz/N,dskH,dsqp,eQuF,gcyV,hAxx,aHRH,aI+V,aIcb,6Axh,5cyF,3Qup,3QoN,6Bpr,3RDx,3Rbp,5c+N,aIyN",
                    "9eef": "iXmX,kjap,kjwP,iXyh,7Ykz,n37F,7Y3H,7YBx,c4gr,c3KN,3QWr,5cPx,5cEb,3QLh,3QzX,5ct1,5chH,3QoN,9l5P,9kLp,gc6H,gcEx,iX+j,hAb1,hAmb,iYkV,lHGH,lIcx,orDX,n3QF,n2SH,n3ox,gbXx,gbpN,n2SN,5d4j,dsqp,dsMV,5dqV,5d4p",
                    "4e10": "os43,oqLN,cF0D,orpZ,9Izd,j/KP,cEyt,cFAP,6NCj,3Rr1,3Rl5,izVx,izrt",
                    "4f3d": "orbP,ePCp,iXsz,3QFF,3QLb,6AIx,orhx,iXDP,iX+p,3Rbp,5cV9,6Bv3,6B8F,kk2F,kkp9,6Bv9",
                    "51a5": "luMr,oqRT,os49,lv+P,iz9f,izJB,bcf7,cEWD,9Inb,9JHF,3QoH,6MSb,3RCZ,6Nef,lvIL,fDKl,fDa5,lv8B,lvIR",
                    "90c5": "orvZ,oqLN,or7L,iyTn,izrt,h4dD,k06T,6ML/,h3XB,8glZ,5jID,cEsx,cF0J,3Rk/,orI5,os49,k0T9,h4HT,e8UF,9JHF,8gQ3,8gK7,9Jpx",
                    "57ed": "oqWX,7Yf1,7Y3N,9kjb,7Yf1,iXbH,iXyh,iYqr,iXJx,gbXr,gcyV,lI6V,lHvx,oryj,5d4p,3R5N,5cV9,6Axb,6AIx,7YMN,ds9r,c4m9,9kWz,dsMV,c4CX,7Z1F,5dqV,5dwx",
                    "836c": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hzoj,hArV,eQuF,eQdH,aIyN,6ACV,3Qup,3QoN,aJ4r,aHRN,9kLj,3RxV,3RDx,drOX,c3/F,ePYP,gbMh",
                    "84fc": "n45r,n2SN,oryj,lHMp,lHpP,orbV,kjfX,kjCx,eQ2x,hzKP,gbB1,iXsz,hzFh,kjNH,kk8h,eQAh,gc6H,hAgF,iX+j,hAb1,dsf3,aI6F,9k2p,9jYN,aIEj,9kjh,dskH,9l5V,9lbx,6Arz,7YY1,5dlb,3QA1",
                    6499: "oqXJ,5jOz,3QuT,5jCx,fD9/,bbB1,j/yH,j/WR,mYid,orpZ,orU1,mYAh,lveB,lw4V,lvwJ,h4jP,fDsd,e8Ix,e8et,fDWh,h4BN,lvON,8g3R,8gW9,9Jjv,3Rl5,3Re/,6MY1,5kgJ,bcPd,bc97,izln,iz/z,bcPj",
                    5576: "n3Fj,orsN,iYkP,lIcx,lHpV,iXyh,gcEr,gbRV,6AZj,gccp,aJ4r,aIEp,c4gr,6AIx,3QLh,6AO3,3Rbp,3RDx,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5e5b": "3QzX,oqX1,9kQX,3Rh1,6AIr,6Bpx,c4TP,c4m9,hzQr,hAxx,kjNH,iX+p,lI6P,lHB9,iY9z,kk8h,oryj,n3L1,aI6z,9kjh,kjrh,kj4N,9jYN,9kA3,eQ89,eQFV,9l5V,9kA9",
                    7321: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or0z,hziN,hz/H,n3zN,n3Qz,hAgF,9kur,gccp,dskH,dsSx,c4Zx,6B31,5c+N,3QWx,3QQV,7Z1z,aIEp,n3iP,n45x,hAxx,hzKV,n3iV",
                    "609a": "3QzX,oqX1,oryj,3Rbp,lHkb,lIcx,gbMb,iXsF,drDH,iXbN,6ACP,c4rN,7ZcP,aIPF,ds9r,hzQx,hAmh,dsHh,ds9x",
                    "6d43": "kjaj,n2SN,ePCj,hziN,5cnj,aI11,3QFz,c4xp,oryp,kkdP,kjCx,eQuz,hArV,hzKP,eQ89,c4Zr,c3/F,5dwr,aIK1",
                    "6fb6": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3RDr,3QLh,9kur,9l0h,n3db,n45x,n3Fj,oryp,6Beb,c4Oh,c4gx,6AIx,6Beh,ePYP,eQFV,kkdV,kjwV,ePYV,gc13,gcnF,iY9F,iXP9,gc19",
                    "599e": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,dsHb,ds3V,5dwr,5cJV,5dlb,lI1h,lHvx,5c+H,lHGN",
                    "7ec0": "q1BJ,or3j,jFAx,i5uh,i5Ud,jF+t,i5U7,bMcN,bMCJ,5qXb,6/rt,dlwL,dl6V,lgJR,lhxZ,q263,5rL9,5s95,q2w5",
                    "745c": "lHpP,lGZN,gbpH,gbRV,9koP,7Y3N,lHez,9kdF,hzKP,n3Fp,oryp,gcEr,n3Fp,eQFP,5dqV,3Rsh,5dfF,dsBz,7Z1F,hzW3,hAgF,aIEj,aInx,7YBr,7YSp,3QWr,eQ2x,eQjp,3Rbp,3R5N",
                    6901: "3QFz,or0F,5c+H,3Rbp,5da1,aIK1,dsMV,dsf9,ePTb,ds3V,aHRH,gbB1,9lbr,9koV,iXbH,iXDV,lIcr,lHvx,oryj,n3L1,gc13,iXP9,iYkV,gcyV,gc19",
                    "8f98": "oqWX,ePwN,ePNF,aHRH,aI6F,gbAX,3QA1,kj4H,kjlF,n3Fj,orsN,lIcr,lHkh,5cEh,3QFF,aInr,3QWx,3R09,6AZp,aIPz,5dfF,3Rsh,3RDx,5dwx,6B8z,9l5V,9kur,9kFN,ds3P,dsMV,hArV,hzKV,dsf3,kjI9,kjYX,dsw1",
                    "6bea": "orhr,n2Yp,orJz,kjNN,kkjx,iYqr,lI6V,6B8z,hAgF,6Bpr,3RDx,3QLh,5cyF,n37F,iXJr,hziN,c3KH,ds9x,aJ4r,aIt9,eQjj,eQFV,dskH,gccp",
                    "6b37": "hzQr,n321,hziH,hzop,iXsF,n3ox,hz/H,orE1,kjTj,kkjx,iYqx,hArV,hAgz,aIPF,3R09,3RDr,aIPF,c45b,3QLh,9jYH,gbMh,5csX,aI11,aInx,5cPx,5cJV,eQ83,ePwN",
                    6067: "os43,oqLN,j/WL,orpZ,e82l,k00X,k0oV,e8qv,e8Cr,cFuT,e8Oz,k0N3,j/ET,cEsD,5jCr,8fHT,9ILf,5j+B,3QSX,3Rl5,5kEN,6Nqh,9Jvx,6NIp,6N8d,9J1t",
                    "778d": "hzzz,hziN,c3KH,c3/F,c4aP,c4TV,9kWF,3QLh,3QFF,aInr,7YMN,5dfF,3RDx,oryj,c4xp,lHB3,kjwV,ePYV,eQFV,kkdV,kk2F,hzKP,hArV,n2SH,n37F,6ArF,6AaN,n2SN",
                    "94ef": "gbpH,or0F,kjwP,kjg1,oryj,iXP9,lHGH,lI6V,gci1,aIK1,aIt3,aI+V,gcyV,gc19,5cV9,3R5N,3RDx,6Bpx,6ACP,3QFF,gbGF,gbAX,gbRV,aIhP,aHRN",
                    "9ecf": "orbP,n2SN,hzzz,n37F,iXmX,gbpN,gbXr,iXyh,kj4H,kjCx,c3KH,c3Qp,ePNF,c4aV,c4gx,aI6z,5cyF,3QA1,5chH,7Yf1,9k2p,9koP,7Yqh,5cPx,orJz,c4IF,iYqr,iY9F,5c+H,c4rN,c4Zx,5dwx,5c+N",
                    7620: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QWr,c4gx,c4Oh,5dlh,3RmF,6AIr,6Beh,9l0b,9kux,dsSr,dsMV,eQuF,hA5p,kjTp,hA5j,eQ89,ds3V,drUF,gbRP,iXP9,kjCx,kk8b,iY9F,gcyV,c3KH,gbGF,kj4H,hzop",
                    "560f": "drOX,oqX1,iXbH,iXyh,hzQr,hA5p,n3Fp,n3ox,3QWx,9kLj,9kux,ds9r,dsqp,dsBz,dsSx,9lbx,3Rh1,3Rbp,3RDr,7Z1F,aIPF,hAgz,hAxx,n45x,n3QF,dr+b,5cEh,5chN,drDN,dr+h",
                    5025: "iXbH,or0F,3QzX,kjg1,5dwr,5cEh,dsqj,5d4p,ds9r,dsHh,iXP3,ePTh,gcyP,iY9F,iYkP,lIcx,lHpV,iXyh,orsH,n3Fp",
                    "8c02": "kjfX,n2Yp,gbpH,gbB1,5ct1,7Yqh,5cJP,7YBx,9kA3,5cV9,3R5N,3RmF,5dlh,6Beh,9l5P,6Bpx,7YXX,aIyN,aIJX,eQAh,eQ2x,gccj,hz/N,gcEr,n3Fp,oryp,gbMb,n3Fp",
                    "53df": "n3iP,lHeF,lH3p,gbvp,gcyV,lI6V,lHMp,dsf3,orn9,drDH,dsMV,9kLp,6ACV,3Qup,3QoN,3RDr,3Rsh,5da1,7YBx,aI6F,iXDP,iXhp,iYkP,iX+p",
                    8298: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbAX,3QA1,7YvV,c3VX,c4gx,gc6H,5c+N,3Rbp,3RxV,5dwx,6Bpx,eQAb,dsHh,7YMN",
                    "83d6": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,eQuz,ePNF,6AlX,6Beh,hzzz,hAgF,c4IF,c3/F,hzzF,9l0b,9k81,3QA1,3Rsh,9l0h",
                    "593c": "lIcr,lGZN,orn3,lHB9,gbGF,ePCp,ePwN,ePTb,9kjh,3Qup,3QoN,eQ83,5cV9,3RgX,eQp1,eQLr,eQFV,gcnF,lHB9",
                    5432: "n3or,n3QF,iY9F,iXJx,eQ2x,eQuF,6B8F,3Rbp,3R5N,5cV9,or+r,3RDx,lGZH,lHkh,c45h,c3KN,lGZN",
                    "55ef": "k0AX,k0cZ,lvCF,izDv,fDsd,fDQb,izDv,6NIj,9JBz,5kKN,3Rx7,3R2Z,5kaD,8g9T,8grV,9J7z,5jUz,6MM5,mXxX,mXQ9,cEEF,cEmx,mXy1,ordR,cEQH,cFAP,or+3,ordX",
                    "5d24": "7YeX,oqX1,3R5H,c4rN,c4TV,5dqV,3Rsh,6ATH,6BjV,9l5P,9kFN,eQ2r,eQLx,aInr,eQjp,hAb1,hAxr,hArV,iY9F,n3zN,orUP,iX+p,hzW9,hzQx,iXyb,7Yqh,7Y3N,iXbN",
                    9980: "gbpH,oqX1,kjaj,kjwV,hzFh,hztX,5ct1,9koV,5cJP,9kFN,5dqP,7Z1F,3R5H,5d4p,gccp,gc13,gcnF,c4TP,c4aV,gcEr,n3Fp,oryp,gbMb,n3Fp",
                    "95e9": "n37z,oqX1,n3or,n45x,5dwx,3RxV,3Rsh,5dfF,ePNz,eQuF,3QoH,lGZN",
                    "6e11": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,5kWP,3RJ9,3Rl5,5ksL,izDv,cEQB,cFAP,izVx,mYGn,mY67,izln,izVD,fE0d,9JBz,9IRr,fDgb,fE0j",
                    "8fee": "lH8X,oqRp,hziH,hzu1,6Am1,3QLh,3RDx,6AlX,3QoN,kjTj,6AZp,kjI3,kkjx,gbMb,orn9,gcyP,gccp,c4xj,c4Zx",
                    "5abe": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,gc6H,orsN,gcEr,gbXx,orPb,gcth,lHvr,lIcx,iYkP,iXP9,7YXX,eQp1,7YBr,7Zix,3R03,dsf9,dsMV,5dqV,3Rsh,5dfF,aIt3,aI+V",
                    "7f17": "q1BJ,jFAx,i5uh,i5Ud,jF+t,i5U7,bMcN,bMjl,bMCJ,5qXb,6/rt,8CUj,8Chv,gwmD,eYgt,eY9V,jGBn,lh7T,jG/n,jGh/,gvLz,eXy/,eXsr,q1Vb,q2CF,os49,mRxF,mQQb,5rEF,5sfF,bNx9,bMWf,5rEL",
                    "67a7": "3QFz,or0F,3QQP,3QWx,9kR1,hAb1,6B2X,5da1,3RmF,3RDx,5dwx,6Bpx,9l5P,lI6V,lHB9,9kA9,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN",
                    6995: "3QzX,oqX1,eQjj,c4gx,c4Zr,eQp1,iY9z,gcyV,gbXr,iXUN,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN,iXDP,lHvx,lIcx,iYkV,oryj,n3L1,5cV3,aIt9,aIVh,5dlh,5cV9",
                    6631: "mRkB,mQwP,eXyV,gvyH,dkpv,dlDp,5rrH,bMCJ,bNdx,5rRJ,5qXb,5smd,q1BJ,q2pH,jGHX,jFU3,q1BP",
                    "80b1": "izfl,iyTn,cEsx,cEQH,3QoH,5jID,oqRT,ordX,mY0b,5k4H,3QMR,3QYN,fDKl,orO1,k0T3,k0cZ,e8Ix,5ksL,5kWV,3RJ3,6NCj",
                    "70ab": "or0z,7YkF,3QoN,iXhj,ePCp,kjwP,hzzF,kkjr,kjI9,oryj,lHS1,kjTj,c4gx,c4IF,eQAb,5cV9,5dwx,3RDr,6BjV,7Yqb,5cJV",
                    9486: "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aInr,aHRN,6ACP,3QFF,gbGF,oryj,5d4p,3Rh1,3RDx,6Bpx",
                    9531: "gbpH,or0F,kjwP,kjg1,lHGH,iXJx,gc6N,gcnz,iX+p,lHXF,lIcr,iYfh,gcEx,9kA3,9l5V,dsvX,5da1,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,dsMP,5dqV,5cV9,dsf9,dsMV",
                    "9e4b": "iXmX,oqX1,or6b,iXyh,lGZH,lHvx,5cyz,gbGF,aHXj,aIhV,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,kjYX,iY9F,orJz,lHMp,gbvj,gbRV,5cJV,5cnp,gbvp",
                    "887d": "lHez,oqX1,kj4H,kjwV,iXDV,c3KN,3QFz,gbGF,5dwr,5cV9,lHRX,5da1,lHB3,n3/V,dsf3,dsSx,aInr,dr+h,ePYV",
                    5293: "n37z,or6h,kjNH,kjg1,9kWz,kk2F,5dfz,3Rsh,3RxV,5dwx,or+x,hztX,hz/N,aIEj,aHXp,7YvP,ds3V,6AaH,6B31,6AlX,5ct1,3Qup,6AO3,3R09,n31X,n3zN,eQdN,ePI1,n321,drJj,7Y9p,7YSp,dsqp,drJp",
                    5181: "n31X,oqRp,orbP,lHeF,kjI3,kkdV,n3/V,n3u9,6AO9,3QQV,kjlz,3QFF,hzoj,hzKV,aIhP,aHRN,c4Zr,c4rN,gc6H,gcyV,iX+j,3Rbp,3Rh1,5dfF,9l5P,7Z7h,aIPz,6Beh,3RDx,iY9z,c4IF,kjwP,ePYV,ePCp,kjap,kjwV",
                    "962a": "9k2j,9k81,aI6F,ePNF,hzop,lHkh,n3dh,n2SN,3QoN,3QzX,3QFF,7YBx,n3ox,or+x,hzW3,hArV,c4Oh,3QWx,3QQV,eQdH,dskN,aIEp,3RDx,3RJ9",
                    "577b": "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,or+r,n3ox,5cPx,5cV9,7YSp,3RgX,5d4p,6Bv3,3RxV,6B8F,n3QF,eQLr,eQ2x",
                    "82d5": "lIcr,lGZN,orDX,iY41,iXyb,or6h,gbAX,gcth,c4Oh,aIPF,c4D1,gbRP,ds3V,7Y9p,7Y3N,9kjb,9l0h,3Rsh,3QLh,9kjh",
                    8431: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hzW3,iXP9,eQFP,gcEx,hAxx,hzop,ePwN,eQoX,ePNF,9kdz,9kR1,3RDr,3QoN,c4CX,6B31,6ArF,c3/F,c4D1",
                    6369: "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,n3Fj,orsN,hzQr,hArV,lI6V,lHvx,9kux,3QFF,3QWr,9kR1,eQp1,dsMP,eQAh,c4m3,c4Zx,3RDr,9kR1",
                    "54dd": "aIhP,orE1,c4m3,3R09,3R5N,6B31,3RDr,7Z1F,aIK1,gci1,aIPz,eQLx,hArP,kkjx,kjCx,hzKV,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "566b": "n3Fj,orsN,lHpP,lI6V,iXUH,kjI9,kk2z,iY41,hzFb,hAxx,c4Ob,c4gx,5dwr,6BjV,5dfz,3RmF,3R09,5cPx,6AIx,6AZj,6ATN,5cyz,6Axh,kj4H,kjlF,c3/F,c3KN,kj4N,eQ2r,9kux,9l0h,eQAh,eQ2x",
                    "5fad": "kj4H,or0F,ePwH,kjrh,3QzX,gbB1,7Yqb,5cEh,5dqV,7ZcV,aIcb,aJ4x,dr+b,ds3V,gc19,eQFP,eQ2x,5d4j,eQjp,kjCr,iXP9,iY3X,kjTp,lI6P,iYfh,n3or,orUV",
                    6004: "3QzX,oqX1,5dwr,5cPx,n3ox,n45x,iYkP,hArV,dsBF,9kFN,hz/H,aI+V,9l5V,iXsz,gbMh,ePwH,iXbN",
                    "6ecf": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3RDr,3QLh,6Beb,5dfF,5cV3,6AIx,dsqj,3Rbp,ds9r,dsHh,9l5P,9koV,eQLr,eQFV,gcnF,lHB9,kjrb,kjwV,orsN,lI6P,orJF,n3Wb,gc19,ePYV,ePTh",
                    "5f50": "syz7,sAgV,7ZVV,7Y3N,ih5j,ifnJ",
                    "9a80": "n2SH,n3dh,ePTh,kjaj,drJp,ds3V,5cJV,3QLh,3QFF,5ct1,aIcb,9jYN,gcEr,kk8h,orDX,hzQx,hArV,dsf3,5cV9,5dqV,dsMV,dsf9",
                    "73c2": "or7L,oqLN,os43,orjT,orU1,5kKT,3Rr1,3Rl5,5ksL,8fZL,6MA3,6Mo1,oqXJ,6MA3,h3zr,h3XB,bcr9,k0o/,k06T,bc97,bcrf",
                    6844: "3QFz,or0F,3QQP,9kFN,gc6N,gcEr,gbRV,n3/P,iY9F,hA5j,lHvx,oryj,gccp,gchX,5da1,3RmF,3RDx,6Bpx,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN",
                    "6b92": "mY05,mXE7,mXJZ,e7Gn,cEmx,cEKv,fC+3,iyZd,izfr,e82r,6MG9,3QuT,3QSR,3QYT,5kmP,8gy5,cFiR,3RJ3,8gy5,8gPZ,h4NP,h4dJ,8gfZ,k0iZ,k0H7,orU7,orw3,k0j3",
                    "8d55": "iXsz,7YkF,3QoN,7Ykz,3QQV,9koP,n3iV,n2Yp,9k2p,3QWr,9kR1,dsw1,9kA3,aIt9,9kWz,c4TV,3RDr,9kR1,iY9z,eQLx,eQ83,iY41,orE1,lI1b,n3/V,kjI3,n3zN",
                    8148: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3R03,dsf9,dsMV,5dqV,3Rsh,5dfF,7YH3,7ZcV,aI+P,aIt9,gbXr,gcEx,orDX,gci1,lIcr,lHvx,iXP3,iYkV",
                    "623d": "n3zH,orn9,iXsz,iYkV,lI6V,lHeF,9kdF,3QoN,gcnz,3RmF,eQdH,gc19,ds9r,c4m9,9lbr,9koV",
                    "791e": "n3iP,n2SN,ePwH,n37F,oryj,lHMp,lI1b,orPh,n3u3,n45x,hzQr,kjI9,kkjx,iYqx,hArV,hz/H,hAgF,eQLr,eQ2x,c4m3,eQjp,dsqj,aIPF,5dfF,3Rh1,3Rbp,6AO3,6ATN,9kWF,9kA3,c4D1,aIVb,c4TV,7Zir,aIPF,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "94c8": "gbpH,or0F,kjwP,kjg1,iYqr,iXJx,n3Fj,kjZ1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,3RgX,iY41,7Z1z,6Beh,7ZcV,gcyV,gc19,6AO9",
                    9566: "gbpH,or0F,kjwP,kjg1,lHMj,lHvx,orn3,n3zN,kjYX,orJF,lIcr,lHXF,lI6P,7ZcV,3Rh1,3RDr,7Z1F,hAgF,ds9r,dsqp,aIt9,5cV9,3QWx,6ACP,3QFF,gbGF,gbAX,gbMh,c4aP,c3KN,9kQX,9koV,iX+j,gccp,gbXx,iXJx,iX+p",
                    "75b0": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,5dwr,5cEh,aIhP,aI+V,gcEr,gbRV,hA5j,iXUN,5d4j,gccp,gbGz,c3KN,kj4H,hzop",
                    "77dc": "oqLH,ordX,mY0b,j/QV,luYt,iz3p,5jUF,3QAP,5jID,fCZZ,8fBN,iyNb,izln,h47D,fDgb,fDs7,mYAh,orO1,fE6j,mYAh,e8Cr,fDKl,cF6J,cFuT,3Rl5",
                    "988f": "lHez,oqX1,kj4H,kjwV,iXmX,c3KN,c3W1,7Y3H,ePNF,3QoH,9kjh,ds3V,5cJP,7YkF,3R03,7YY1,eQp1,9l5P,iYkV,iXP9,9kA9,3RDr,6Beh,n3Wb,iY41,n3u3,n45x",
                    "86ba": "oqWX,5ct1,5chN,6Axb,5ct1,9kjb,5cJV,aJ4r,aInx,5dfz,3Rsh,5dqV,iYkV,iXP9,3R09,eQFP,eQ89,orDX,aIK1,iXyb,dr+h,drDN,iXbN,iXyh",
                    8734: "6Arz,or0F,6AIr,5chN,7YBr,5cV9,hAaX,aInx,lHGH,lI6V,eQjj,eQLx,5dwx,3RxV,5dlh,5d4j,aIVh,eQAh,eQoX,c4D1,7YMN,iYkP,orUV,orsN,iXUN,iYkV,iXJr,ds9x,drDN,iXbN,iXJx",
                    "87ad": "5csX,oqX1,6Axb,5chN,5cEb,7Yqh,3QWr,c4gx,c4Zx,5dwx,3RxV,3Rsh,5dfF,9kWz,7Z7h,7YH9,dsw1,kjNH,gcnF,kjI3,eQ89,eQFV,kkdV,gccj,kk8h,n3or,n45x,orDX,n3L1,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7b08": "iXbH,or6h,lHez,iXDV,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,gbAX,gcnF,c4rN,c4TV,aI+V,6B31,3QWx,3QQV,3QoH,9kjh,gbMh,aInr,6AZp,3RxV,3RDx",
                    "7ba7": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,eQdH,9kFN,5cJV,5cEh,5dlb,9kLp,3RDr,3QA1,gbB1,gcEx,dr+b,dsHh,aInr,c4aV,c4Iz,aIK1,9kdz,9l5V",
                    "7c38": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iXUH,orPh,iYkP,lHXF,aIPz,hAgF,aIEj,aJ4x,9lbx,3Rh1,3RDr,9kR1,3R03,5c+N,gc6N,gcEx,eQLx,dsMV,7Y3H,7YH9,3QoH,6Am1,5cPr,6ACV,hzKP,7YvV,hztX,7Yf1,lHez,iXDV,gbXr,gbvp,drOX,ds3V,aIhP,aI11",
                    "895e": "kjaj,kjCx,n3ox,n2Yp,gbvp,drDN,aJ4r,aHRN,c4m3,6ArF,5cnp,5chN,7YvP,3QQV,3QWx,5cV9,9kFH,5dfF,3RxV,3RDx,7Z7b,6B8F,iY9z,dsBF,iXUH,iYqx,lHMj,kjZ1,n45r,n3zN,kk8b,lI6V,orJz,n3QF,gccj,gcyV,hztX,ePI1,eQ2x,hzQx,hzu1",
                    "7fe9": "n37z,oqX1,hzoj,hz/N,lHGN,lH3p,c3Qp,9jYN,9kFH,9k81,3R03,5c+N,dskN,drP1,3QA1,dr+b,6Axh,dsf3,ds9x,5cPx,3RgX,5dfF,lHXF,n3QF,n3Fp,eQoX,hA5p,7YSj,aIK1,aI+P,7Z7h,hAmb,eQFV,n3Wb,n45x,5dwx,3RxV",
                    9169: "orjN,oqLN,or7L,bbZ5,bc3b,8fHN,8g3X,bbH1,cEyz,oqXP,cF0D,cF6P,e8wB,k0T9,lw4V,lvCL,h4BH,k0o/,pWVL,izxz,5jCr,5kaD,k06T,j/yN,5jCx,5kyL,cFiR,cFGV,5kWV,5kyR",
                    "8dd6": "osaD,ortf,dkVR,orMD,eX8Z,eXm1,eWX/,5r1R,5qXh,8C4r,5r1R,jFTZ,6/l3,q1oL,q1Id,jF+t,jFH5,q1oR,gvS7,gwg9,5sfF,5rRJ,gvSd",
                    "8e51": "os43,orjT,e8Ix,orU7,fDm1,fE6p,orvZ,fDyj,lvUN,lvwP,izxt,izVD,e7Sj,e82r,6MG3,iz3p,8fZL,5jID,5jCx,e7Gh,5jID,bc91,bcrf,9Jdv,3QSX,3ReV,8g9T,3Rk/,9JHF,bcVp,bcDh,3RJ3,8gE1,oqRN,or7R,iz9l,iyTn,oqRT",
                    "8a3e": "hzFb,or6h,hziH,hzQx,lH8X,hzu1,lHvr,lHkh,n3Wb,kjZ1,iYqr,hAxx,hAb1,iX+p,oryp,eQ83,gc19,ePwH,eQLx,c4Ob,c3W1,9k7X,9l0h,6AlX,3QA1,3Rsh,6Beh,6Am1",
                    "96e0": "kj4H,or0F,3QzX,n321,5cJP,5ct1,kjrb,5cEh,n3db,lHkh,iXP3,lHvx,gbAX,gbRV,eQ2r,eQ89,5cV9,7YSj,3QWx,aI0X,aIhV,kjwP,kjg1,orJz,kjTp,lI6P,n3/V,5dqP,kkdV,5d9X,5dwx,lHRX,3Rh1,kkjr,kjZ1,gchX,gcEx,aJ4r,aIK1",
                    "9ca6": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,7YMH,5cPx,5c+H,3Rbp,5da1,dsw1,aIt3,aI+V,5dwr,7Z7h,eQLr,eQFV,gcnF,iX+p,oryj,iXP9,lHGH,lI6V,gccp,eQ89,eQ2x,9koP,hzKV,hzop,9k2p,9koV",
                    "9ccf": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,9kFH,5cJV,c4m3,dskN,3RgX,eQp1,7Z7b,5dqV,dsHb,aI+V,n3Qz,hAgF,hA5j,n3Fp,9kjb,hzFh,hziN,9jYN,9kjh,hArP,n3/V,n3u9,hzW9,hArV",
                    "9acb": "kjaj,kjlF,gbGF,eQ2r,gbXx,gbpN,ePwN,gbvj,n2Yp,n3iV,gbRV,kjI3,lHB9,lIcx,kkjx,orDX,n3QF,gccj,iX+p,iYfb,gcth,hzW3,hArV,aIJX,5da1,3RmF,3RDx,6Bpx,7Z7b,dsHh,dskN,7YMN,3R03,6AZp,3QLb,5cJV,ds3V,drJp,3Qup,7YvP,7Y9p,aHXj,aIhV",
                    "9e88": "n3Fj,orsN,n45r,n321,6Am1,3QoN,3RDr,3QA1,6Axb,6BjV,9lbr,9kdF,3R5H,aIyN,dsSr,c4Zx,c4D1,gci1,eQoX,eQAh,ePYP,eQ89,gbRP,c4aV,c4m9,hzFb,hArV,kkdV,kjrh,hzQr,lHvx,lHRX,hAb1",
                    "6c10": "orJz,lGZN,5chN,5cnp,9kux,3QWr,5cJV,6Bpr,3RDx,5dfF,9kFN,gbXx,kjCx,gcyP,gbvp",
                    "4fda": "orbP,iXhp,iXbN,3QFz,kjlF,5dwr,5cEh,n3Fj,5d4p,iXJr,iYfh,aI+P,aIhV,n3Wb,eQAh,eQ2x,n3ox,n3Wh",
                    "8bd8": "luYt,oqRT,h3zr,h3Lz,5jOz,5jUF,8g3X,fE0d,fDsd,pWVL,fDKl,k06N,k0T9,bcf7,5kgJ,5kQP,bcPj,bcfd",
                    9123: "n3iP,or6h,lH3j,lHMp,iXyb,kjlF,kjI3,iXJx,hziH,hA5p,c4rH,c3W1,6AaH,6B31,3QQP,9koV,3Rmz,n3QF,n45x,hAxx,eQAh,c4Zx,7Zix,6BjV,7Z7h,ePHX,eQdN,9kFN,9k81,ePI1",
                    "827f": "iXDP,orbV,oryj,iX+p,lGZH,lIcx,gbvj,gcth,aIyN,aIt3,aI+V,6BjV,3RmF,3Rh1,5d4p,3QoH,3Qup,9kjh,gbMh",
                    "83b8": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hzFb,gbMh,c3Qp,c3KN,gbpH,gbvp,c4aV,6ACV,3QFF,5ct1,7Y3H,7Y9p,c45h,dsSr,dsf9,gcnz,eQAh,hA5j,9kLp,6ATN,3QWx,6Bpr,3RDx,3Rsh,5dfF,aIPF",
                    "859c": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gcnz,hAgF,gc6H,gcEx,dsvX,eQjp,eQFP,dsHh,c4rH,c4Zx,9l5P,9kLp,3Rmz,aIPF,3QoH,7Y9p,gbvp,gbXx,ds9x,drJp,aI0X,aInx,6AIx,6Am1,aI11",
                    "53e9": "bcxf,9Jpx,9JvD,bcPj,or+3,orw3,3R93,mXE1,mY0b,cEQH,cEsD,mXE7",
                    "55df": "n3zH,orn9,orJz,n3L1,lHpP,lI6V,hAmb,hzKV,dr+b,dsSx,lHMj,dsf9,5cyF,9l5P,9kA9,3QQP,3RDx,9kQX,3Rh1,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5cac": "6Arz,or0F,n3KX,3Rh1,hzW3,hArV,iXDP,6ACV,6Agp,iXhp,n3/P,c4TV,c4m9,n3u9,n3/V",
                    "737e": "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,n45r,n3iV,orJz,lHXF,lHB3,orn9,eQuz,gci1,5dfz,dsBF,5c+H,5dwx,7ZcP,7YMN,aIyH,aI+V,dsSr,dskN,c45b,gc19,3QWr,ds9x,kjNH,hz/N,hzKV,kjwV,kjNN,kjYX,hAb1,hArV,kkdV,kjZ1",
                    6115: "3QzX,oqX1,5d4j,3Rh1,3RmF,6BjV,9l5V,9kux,dsqp,dr+b,dsSx,gctb,gbXx,gbMb,iXsF,iXbH,drDN,iYkP,lI6V,lHS1,iY41,iYkV,iXUH,lHGN,lHpV,iXDV,iXUN",
                    "6d9e": "kjfX,n2Yp,kkdP,kjwV,3Rbj,oryp,c4CX,6Bpx,5cyz,c4rN,c3/z,3Qup,hziH,ePCp,eQdH,hzQx,hAmb,eQp1,ds3P,dsSx",
                    "5b93": "orvZ,pWDJ,k0MZ,mYSp,mXE7,j/yN,bbH1,e7Mj,fD9/,8fZR,6MSb,6Nwn,9JvD,e8Ot,bcVp,fDs7,izln,izJv,6MG9,5jID,5jCx",
                    "5a34": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,n3u3,orhx,n3Fj,n45x,5dwx,3RxV,5dlh,iY3X,6B31,gc13,gcyV,9kA3,dsqp,9l5P,c4IF,kjCr,3QWx",
                    "7ef2": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bc3b,6MS5,5jCx,9Jdp,9J1t,cFGP,9Jpx,e8Cr,5kEN,3Rx7,3RJ9,5kWV,5ksF,3R93,3R2Z,e8et,lv+J,lvkD,izlh,orjT,or+3,iz/z,izln",
                    "74a7": "kjaj,kjCx,n3ox,n2Yp,hzop,drDN,gcEr,gc6N,iX+j,iYkV,lHMj,kjZ1,n3Qz,orJF,n45r,n3zN,lI6P,kk8h,dsBz,iY9F,aI0X,aIVh,7Z1z,7YkF,5dfz,6B31,3QoH,3RDx,aIt3,3R09,hztX,ePI1,eQ2x,hzQx,hzu1",
                    6988: "3QzX,oqX1,kjwP,3QQV,n3or,lHB9,lHMj,lIcx,5dwx,3RxV,3Rsh,5dfF,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,7Z7b,c4Oh,c4m9,7YH9,7Z7h,eQuz,hAgF,hz/N,eQdN,eQuF",
                    7511: "n31X,oqRp,orbP,n3dh,n45r,n3u9,n3zH,5c+N,5d4p,7Z1F,5dwr,3RDx,3RxV,5dlh,hAmh,hz/N,c4CX,eQjp,9k2j,9koV,lHez,ePNF,hzFb,iXDV,iXhj,hzu1,c4aP,6ACV,6Agp,c3Qp,c4aV,lGZH,lHvx,eQ2x,ePwN,lGZN",
                    "6c32": "hziH,or0F,hztX,hAmh,6Beh,3RDx,6Bpx,3QoH,3RmF,3Quj,7Y9p,7YY1,3Rh1,7YH3,3R09,3QLb,7Yqh,c4rH,c3/F,kjrb,kk2F,n3/P,n37F,9kdz,ePNF,eQdN,9kFN,9kdF",
                    6593: "kjfX,n321,kj4H,kjrh,kjlz,c3/F,5chN,5cEb,c3Qp,kjap,3QWr,kjCx,9kLj,6AO9,7Z7b,9kWF,5dlb,3RxV,5dwx,n45x,n3zN,orhr,n3ox,5d9X,lHS1,gctb,dsw1,gc6N,kk8b,kjNN,aIVb,hAmh,hz/N,aIyN,aIVh",
                    "6dfc": "orn3,eQ89,ds9x,ePYV,ePwH,ePCp,kjwV,lHpV,lH3p,kjNH,gcnF,eQFV,eQLx,n3Wb,iX+p,dsBz,5dfF,3Rh1,5d4p,5cV3,9kR1,aIK1,aIyN,aInr,9koV,6AIx,5csX,3QFF,5cEh,dr+h,aHXj,aI6F,9kdF,5chN,9kWz,5dwx,aI+P,9l0h",
                    7579: "7YeX,kjg1,ePwH,ePTh,orsH,lHMp,hzKP,kjCx,kkjx,iYqx,hArV,aIPz,9l0h,aI+V,eQFV,eQp1,5da1,3RmF,3RDx,6Bpx,gbXr,c4aV,9kA9,eQ2r,eQdN,c4rN,6AIx,3QLh,kj4H,kjrh,7Yqh,7Y3N,kj4N",
                    "950f": "gbpH,or0F,kjwP,kjg1,lHGH,n3u9,lHXz,lIcx,5dwx,3RxV,5dlh,dsqj,dsHh,3R03,iXP9,6ACP,3QFF,gbGF,gbAX,gbRV,c4aP,c3KN,9l0b,hAmh,hA5p,9kLp,9l0h",
                    "9e2c": "gbGz,or0F,kjCr,kjlF,iY9z,kjZ1,orJz,lHMp,gcnz,gcth,hArV,lI6V,lHGN,dskN,dsSx,c4Zx,6Bpx,3Rsh,3RmF,5da1,9kA3,9l0h,c3Qj,c4gx,gbXx,gbvp,5cnp,3QoN",
                    "7ae6": "lHez,oqX1,kj4H,kjCx,gbvj,5ct1,5chN,7YBr,5ct1,gbRP,7Yqh,lIcr,lHB9,3RgX,orE1,c4xj,5cPx,6Bpr,aIPF,hzW3,hArV,dsMV,dsf9,hzW9",
                    5202: "9kQX,kjZ1,5dfz,3Rsh,3RxV,5dwx,or+x",
                    "50e6": "iXbH,or0F,3QzX,lH91,6Axb,5cJV,6AIx,ds9x,7Ykz,c4aV,9kFH,aIt9,3R03,7YY1,aIPF,orJF,kkdP,lI6V,hA5j,hAxx,kjlz,kjNN,orbP,lHvx,dsHb,5dlh,3RxV,3RJ9,6Bv9,hzW3,dsf9,dr+h,hzFh,hzW9",
                    "8c25": "mQq9,q1oR,i5ub,i5Hf,5r8f,8BZZ,5sm7,5rld,5s8/,dlwR,dkVX,5ryb,dl6P,5rL9,5rY1,dljT,lh7N,eYgt,eXfn,lgWV,lhrj,lgDx,q2v/,mRe7,mR13,q1Vb",
                    "58d1": "kjrb,or6h,n3u3,n3dh,lHMj,lIcx,hAxx,c4Oh,7YSp,7Zir,eQuF,iY41,hzW3,kjNN,kjap,hziN,drDH,hzzF,dsf3,hzFh,aHRH,drUF,aIt3,dr+h,3R03,7YH9,3QoH,3RDx,6B8z,6ArF,aIhP,7YvV,7Yf1,aI11,aIhV",
                    "82e4": "lIcr,lGZN,orDX,iY41,iXyb,or6h,gcyP,gbvp,gchX,9koV,6Agp,6AaN,5cV3,c4m9,aIEj,6Bpx,3QoH,3RDx",
                    "845c": "n45r,n2SN,oryj,lHMp,lHpP,orbV,aIcb,kjrh,drJj,dsf9,gbXr,gbB1,iXhj,iXP9,iX+j,iYkV,c4TV,aIVh,c4IF,aIyH,dsw1,iY41,aIt3,6AO9,3QFF,3QoN,7Zir,7Y3N,6AO3,3RmF,3Rsh,3RDx",
                    "62d7": "oqWX,5ct1,3Qup,5chN,ePNz,aHRN,iXbH,iXyh,n3u3,gbMh,gc6N,kjTj,7Yqh,7YSp,6AZj,9kFN,3Rbj,6B8F,orJF,iX+j,iYqx,5dwx,3RxV,3Rsh",
                    "54a7": "n3KX,n3dh,n3or,ds9x,c4aV,kjCr,kjTp,aIEp,6AIx,5cEh,5cyF,dsf3,c4rN,lI1b,9l0h,or+r,3RDx,3RxV,5dlh,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5600: "n3Fj,orsN,lHpP,lIcx,iXUH,kjI9,kk2z,iY41,eQ2r,eQAh,c4xj,gccp,5dfz,3Rsh,5dqV,hArV,hzKV,3QQV,lGZH,lHeF,aI6F,aHRN,lGZN,c4Iz,7Z1F,7YH9,c4m9,c4IF",
                    "5d82": "7YeX,oqX1,9kQX,3Rh1,6AIr,6Bpx,c4TP,c4m9,hzQr,hAxx,kjNH,iX+p,iY9z,kk8h,lHB3,lI6V,oryj,n3L1,kjrb,7Yqh,7Y3N,kj4N,9kA3,eQ89,eQFV,9l5V,9kA9",
                    9612: "n31X,oqRp,n3iP,n45x,5dwx,3RxV,5dlh,7YSj,6B31,6Axb,7YBx,c4m9,9l0b,9kdF,eQoX,ePYV,hzKP,hAb1,3Quj,kjap,c4aP,kjwV,kjZ1,c4D1,c4aV",
                    "6e32": "kjfX,n2Yp,iXsz,lHkh,lIcx,kkjx,iYkV,hzKP,hAmh,c4Iz,c4gx,5cyz,5dwx,c3/z,3Qup,hziH,ePCp,orsH,n3Fp,eQ2r,9kux,9kWF,eQuF,eQ2x",
                    "902f": "lH8X,oqRp,hziH,hzu1,6Am1,3QoN,6AlX,3QLh,3RDx,9lbr,9l5V,aIPF,dsqp,aIt9,9koV,9kjh,eQAb,c4D1,c4rH,eQ2x,7YH3,6ATN,7YSp,hA5p,hzFb,hAxx,kk8b,kjwV,hAmb,n3Wh,n3iV",
                    "5b37": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,n3Qz,orE1,lIcr,lHvx,6AIx,3QLh,aIJX,7YMN,9l0b,3R5N,3RDx,5dqV,gcyP,dsSx,hzW3,hAxx,gccj,dsf9,iY3X,dsw1,dsHb,iYfh",
                    "7f30": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,3RJ3,3QYT,8gfT,8gQ3,bcxf,5kyR,e88h,e8UF,iz/t,izrt,lvIL,fDKl,orjN,os49,5kQJ,bcPj,bcfd,5kgJ,5kQP,fDs7,lvqJ,lv+P,fE0j,fDsd",
                    "67da": "3QFz,or0F,orJz,5dfF,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,c4Zr,c4rN,5c+H,iXUN,iYqx,5dwx,5c+N",
                    "6a79": "3QzX,oqX1,6BjP,6AO9,c4gr,c4Zx,gbGz,ePTh,drDH,hzop,kjrb,kj4N,orn3,lHvx,n3u3,n3QF,kjZ1,eQp1,hzW3,hArV,3R03,9kA9,9l5V,3RxV,3R09,eQ83,kjI9,kkdV,eQFV,eQ89",
                    "66db": "ePNz,ePwN,7Zir,7Yqh,n3Fj,7YSp,n3or,orUV,kkjr,kjrh,eQoX,gcnF,gc13,eQdN,aI+P,aIhV,3RDr,5dqV,5d9X,3Rh1,3R03,5cV9,5cJP,3QLh,lGZH,lHeF,7YkF,7Y3N,lGZN,hArP,dsMV,ds3V,hzKV,hArV",
                    "80eb": "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,5kWP,5kaD,cFiL,5kyR,cFAJ,cF0J,fE6j,fE0j,izPx,fDm1,fDsd,h4pL,mYMj,or+3,orpZ",
                    7198: "oqWX,6Am1,3QoN,5cEb,7YkF,c4CX,3Rh1,7YBr,7Zix,iXbH,ePwN,kjrb,hzu1,oryj,n3ox,gbXx,gc19,iX+p,eQjj,hAgF,n3QF,n3KX,n45x,gcEx,eQFV,gcth,3QWr,c4gx,c4Zx,3RDx,3QWx",
                    7887: "n3iP,n2SN,ePwH,n37F,n3KX,oryp,iXJr,lHB9,lIcx,iYkV,gc13,gcEx,c4rH,6ATN,3QWx,6AZj,3RmF,3RDx,gcnz,6B8F,aJ4r,aIPF,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "94aa": "gbpH,or0F,kjCr,kjg1,orDX,lHXF,kkjr,kjNN,gbAX,gbRV,aIhP,aHRN,gbGz,3QFF,6ACV,3R03,6AZp,gccp,gcth,5dlh,3RxV,3RDx,6Bpx",
                    "954f": "gbpH,or0F,kjwP,kjg1,oryj,n3u9,gc19,iX+p,iY3X,kjTp,gchX,iYfh,n3Wh,n3Qz,n45x,hAxx,gcyV,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,9lbr,9kA9,5dfz,dsBF,dsf3,dsSx,5dwx,5cV9,dsf9",
                    "9e6c": "oqRj,orbV,lHeF,n31X,kjlF,gbGF,ePI1,iXmX,gbpN,iXDP,kjCx,kj4N,orJz,lHMp,dsqp,dsSx,c4Zx,5dwx,3RxV,3Rsh,5dfF,9kFH,9l0h,eQAb,gcyV,lI6V,lHMp,hAgz,iY9F,c45b,aIhV,aHXj,c3W1,3QLb,3QQV,5cPx,ds9x,drDN,3QoN,9k7X,9kjh,6Axh,6Am1,9k81",
                    "88f0": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,3QLb,aIEp,c4xp,c4gx,9kur,3Rh1,9lbx,c4Zx,c4IF,9kWz,7Z1F,3RDx,eQLr,iY9F,kk2F,n3Qz,n45x,kkjx,eQp1,eQjj,iXJx,kjCx,n3or,n3Fp,kjTp,ePYV,ePTb,drUF,c45h",
                    "4f27": "orhr,hzop,kjlz,3QFF,orJz,ePYV,lHRX,eQR9,aIPz,9l5V,eQFV,eQdN,5c+N,3Rbp,3RDx,6Bv9",
                    7980: "orn3,orhx,n2SH,n45x,c4TP,c3Qp,9jYH,9lbx,9kA3,3R09,3QWx,5cJV,3QoH,6ArF,6B8z,3RxV,3RDx,kjaj,ePCp,eQFV,kkdV,kjap,iXyb,iY41,gci1,gbMh,iXyh",
                    "909d": "n3iP,or6h,lHGH,lH3p,6Agp,3QoN,3Rbj,n3Fp,n45x,kkjx,iYkV,gcnF,c4Zx,9lbx,6Beh,6B31",
                    "57d9": "oqWX,7Yf1,7Y3N,9kjb,7Yf1,hziH,hzFh,c4xj,7YSp,5cV9,3QQV,3QLh,7YSj,5dfF,3RxV,3RDx,7ZcP,gcyV,gbRV,7YvV,iXJr,n3ox,n3Wh,iYfh,iXJx",
                    8340: "lIcr,lGZN,orDX,iY41,iXyb,or6h,c3KH,hzzF,aI6z,aIEp,aIK1,5d9X,3RmF,3Rsh,5dqV,gcyV,gbGF,drUz,dsw1,7YY1,7YkF,drUF",
                    "84e3": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXhj,iXJx,drUF,5cyF,3QA1,5cnp,drDH,ds9x,aIhV,gbAX,dr+h,iYkP,iXUN,eQdH,iY9F,7YH3,eQ89,eQFV,7ZcV,3RxP,6B31,3R09,3QWx,c4CX,6B31",
                    6420: "oqXJ,5jOz,3QuT,5jCx,fD9/,bbB1,j/yH,j/WR,mY61,ordX,orBV,mYij,lveB,lvCL,izfl,e82r,e8qv,izDv,lvqD,bcfd,3QMR,3ReV,6Nqh,mYAh,mYSp,5kWV,3RD3,5kKT,bcDb,bcVp,h4TP,h4BN",
                    "55b5": "kkjr,kjrh,orJz,hAgF,hzW3,orn9,3Rbj,eQjp,9koP,9l5V,lGZH,lHeF,c3/F,c3KN,lGZN,ePYP,eQFV,3RxV,3QQV,ePYV",
                    "571c": "jG4X,mQJN,mR7D,jGuZ,i5AL,i6OF,6/kZ,bMPH,aah5,6/Er,6/K/,8CnV,708R,aaAJ,aaNB,8CAT,q1ib,q2Jd,5smd,5qXh,q1ih,mQq9,mRr5,jGOl,jFNv,mQqf,eXfn,bMCJ,bNdD,eXSn,eXft",
                    "72e9": "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,lHRX,oryp,hArP,kkjx,kjCx,hzKV,eQLr,ePYV,hAgz,5dfF,3Rh1,3Rbp,5c+N,c4m3,9kFN",
                    "600a": "3QzX,oqX1,c4aP,hA5p,lHMp,lHvr,lIcx,eQLx,dsMV,dsHh,eQuF,gbMb,iXsF,iXbH,drDN,5cV3,c4m9,c4TV,5dqV,5cV9",
                    "6cd6": "luYt,oqRT,iyNb,fCU7,cEEz,3QuT,cF0D,9IRr,9ILl,mXW5,orw3,izxt,8gm3,5kaD,3QMR,3QGV,3Rk/,mYul,mYSp,9JHF,8gQ3,8gK7,9Jpx",
                    "6f89": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,5jUz,5k4H,6N8j,izrn,3R2Z,iz3j,izxz,5j+v,iz9l,bcf7,bbZ5,e7Yf,e8et,izlh,mYij,mXW5,fDE9,or+3,e8wv,9Jpx,3RJ9,3R8Z,cFAP,iz/z,izPr,iA5F",
                    "9b3b": "oqLH,or0F,lHeF,lGZN,iXbN,iXsF,hzzF,gbB1,eQLr,ePwN,6ATH,7YSp,7YvP,6AIx,6B8z,6ArF,3R03,6AO9,3Rsb,5dqV,9l5V,9k2p,3Qup,gcyP,hAxx,iYqx,iY9F,lHXF,lIcx,or+x,orJF,hzW3,orn9,iXUH,hA5p,hzKP,iXJx,kjTj,kjwV,n3Fj,lHGN,lHvr,n3iV,dsvX,aIK1,aIch,dr+h,dsw1",
                    "9aa5": "n2SH,n37F,ePNF,kjaj,drJp,dr+h,5cEh,3QFF,3QA1,5cnp,aI6z,9jYN,3QQP,5c+N,3RDr,5dfF,6AIr,6Bpx,9lbr,9kux,aIVb,6Beh,6ATH,aIyN,eQFP,eQ89,hAaX,c4D1,kkjr,iYqx,iYfh,kk2F,orJF,n3/P,lHXF,iXUH,orsN,lHGH,iXJx,n3or,n3zN,c4m3,hzW9,hArV,c4TV,c4m9",
                    "742a": "n3iP,n2SN,lIcr,lHvx,9l0b,orPh,9kur,9lbx,7Y3H,aIhV,n37z,9kdF,gbRP,gbpN,hAmb,hz/N,dskH,dsHh,3QWr,6ATN,6Beb,3RDx,orsH,9kFN",
                    "8f7a": "oqWX,gbpN,gbMh,3QFz,hzzF,aInr,eQjp,n3Fp,n3u3,n45x,eQLx,dsMV,dsHh,eQuF,lGZH,lHpV,c4aP,c3KN,5c+H,aIyN,aJ4x,5dwx,5c+N",
                    7284: "3QFz,or0F,5dfz,3Rsh,5dqV,eQFV,n3KX,kjZ1,eQ2x,eQLx,kjZ1,kkjr,kjCx,c4aP,7Y9p,7Y3N,kjaj,ePwN,hzKP,hzop,c4Iz,7Z1F,7YMN,c4rN,c4IF",
                    8191: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,7YMH,3QQV,3RxP,7YY1,9koP,9lbx,9kA3,hzW9,iY9F,iYkP,lIcx,lHvx,iXDV,n3KX,oryp,eQFP,eQ89,9kWz,eQuF",
                    "797a": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ePYV,5d4j,3QWx,3RDr,5dfF,7YBr,7Zix,orsH,7YMN,7Z7b,orPh,c4rH,c4Oh,gctb,gc6N,kjCr,kkjx",
                    7735: "hzoj,hzKV,ds3P,drJp,gbXr,orJF,kjTj,kkjx,dsf9,iXUH,gcnF,eQAb,9kA9,c4CX,c539,7ZcV,5d4p,3QWx,aIEj,6Beh,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94df": "gbpH,or0F,kjwP,kjg1,gbAX,gbMh,aIhP,aHRN,6ACP,3QFF,gbGF,gcyP,gccp,iY9z,c4IF,9kLp,9l5P,c4IF,5dwr,lIcx,lHGN,5c+N,5dwx",
                    "79e3": "orbP,lGZN,3RgX,orE1,c4Iz,6Bpx,5cJP,c4xp,n37z,3QFF,iYqr,iXJx,dsf3,dsMV,dr+b,c4aV,9jYH,ePI1,hzKP,hziN",
                    7605: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gccj,3Rbp,iY9z,hAb1,hz/H,iXP9,ds9r,dsHh,c3KH,gbGF,kj4H,hzop,7Zir,7YvV,gctb,aIVh,aInx,gbXx,gcth",
                    "804d": "n3or,n2SN,3QQP,n3iV,9kur,5chN,c3VX,c4aV,hzKP,hzu1,hzW3,kjNN,kkjx,iYqx,hArV,orDX,lHXF,6AlX,n321,5d4j,3Rh1,5dfF,eQuF,eQ83,eQLx",
                    "867b": "pW9t,5jOz,5jCx,6MS5,5jOz,5kax,9ILl,5kWP,5kmP,k0j3,k0T3,k06T,orBV,lvIR,j/WL,e7Yl,e7Ah,j/yN,j/WR",
                    "86d1": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,9lbr,9kux,gchX,3Rh1,c4aP,gc19,dsMP,ds9x,hArP,lI1h,iYkP,iXJx,oryp,dr+b,iXyh,iXbN,drDN,dr+h",
                    "877c": "or0z,5cyF,5chN,6ACP,5cyF,9koP,5cPx,3R03,3R5N,7Z7h,aIVh,aIyH,aJ4x,c4CX,7YSp,3RxV,hAmb,dsSx,iXP3,iYqx,dsf3,hA5p,orDX,eQp1,lI1b,n3/V,n3u3,lHGN,iXDP,ds3V,drJp,iXhp,iXDV",
                    "87ee": "pW9t,5jOz,5jCx,6MS5,5jOz,9ILf,5k4H,bcVj,bc97,e8Ot,cFuT,cF6J,e8et,mYuf,bcxl,mY61,mYSp,k0T3,k0cZ,k06T,h47x,h4TV,pWDD,orw3,orU1,pXbP,8gfT,8gQ3,5kQP,5kgJ,8gfZ,j/WL,e7Yl,e7Ah,j/yN,j/WR",
                    "7b3e": "iXbH,or6h,lHB3,lH91,iXUH,orPh,lIcr,lHS1,iYkP,lHXF,lHez,iXDV,ePNz,hzu1,c3KH,c3/F,6ArF,3Qup,3QoN,6Arz,3QQV,3RDx,7YXX,6B8F,6Beh,7ZcV,eQFV,eQ2x,hA5j,aIEp,6AIx",
                    "7be6": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,iXyb,hzu1,c3W1,c4IF,hAgF,hzu1,dsqj,gbMh,gccj,dr+h,aIyH,5c+N,3Rbp,3RxV,5dqV,6B2X,9l0h,7YeX,7YBx,aI0X,3QA1,3QFF,5cJV",
                    "823b": "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,3QWr,6ATN,hz/N,hArV,dsMV,dskN,orDX,hAb1,lIcr,lHS1",
                    "7cc1": "3QFz,or0F,3R03,3Rbp,6BjV,9l0b,6ATN,6AO9,9kA3,9kFN,aIK1,c4IF,gcnz,c4Zx,gc13,gcEx,gbpH,gbRV,7Y3H,drP1,aIhP,c45h,c4m3,gci1,iY41,iYqr,lI6V,kkjr,kjNN,orJF,iXyb,lHvx,lGZH,iXn1",
                    "8d6d": "ePNz,or0F,ePwH,ePYV,lHXz,lHB9,c4gr,n45x,9kur,aIhV,9l5P,9kFN,3QFz,5cEh,ePTh,ePHX,6Am1,3QoN,hAxr,hzQx,oryj,hA5p,kjaj,kjwV,5dqP,dsMV,dskN,5c+N,5dqV",
                    "91af": "orjN,oqLN,or7L,cEKB,cEQH,8fHN,8g3X,bbH1,cEyz,oqXP,pWVL,orO1,mYYp,mYcd,mYAb,izxz,iA5F,k0N3,h4HN,fDWn,e8Oz,e8+L,fEcv,e8wv,h4vR,h4jJ,e8et,5kyL,bcxl,5l0V,5kgJ,5kWP,bcVp,bclj,5kmP,bcJh,5kKT,k06N,5kaD,5jCx,j/yN,k06T",
                    "8e14": "6Arz,hzzF,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,gcyP,gc19,orDX,iY41,lIcr,lHS1,3RgX,c4D1,9kur,9lbx,n2Yj,n3dh,hzFh,hzop,n2Yp,dsf3,iXP9,iYkV,dsMV,dsf9",
                    "8c85": "hziH,or6h,gbAX,hzop,kjfX,hzFh,kjwP,drJp,drDN,9jYH,9k2p,dr+h,gbGz,ds3V,5cJV,3QLh,5cyF,5chH,5cnp,aIhV,iXUH,3R5N,orDX,gbXx,3Rsb,orPh,dsMP,9lbx,7YSj,eQuF,hAxr,hAb1",
                    "9f85": "hzFb,or6h,hziH,hzQx,lH8X,hzu1,lHkb,lHvx,orDX,iXUN,lHMj,lIcx,9lbx,7ZcV,7Z7h,9kWF,c4xj,c4Oh,hAmh,hA5p,5d4p,3Rh1,3RDx,5dwx,6AIr,ds9x,7YBr,5cnp,5chN,drDN,aHXj,drUF,ePNF,aIhP,drUF",
                    "9c8b": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,kjI3,3R09,oryj,hzKV,orUP,5dqV,3Rsh,5dfF,dsvX,c4IF,hAxr,hA5p,9kjb,hzFh,hziN,9jYN,9kjh",
                    "9cbc": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,7YH3,dsf9,dsMV,7ZcV,3RDr,3RxV,7YY1,aIK1,7YXX,3R09,3QWx,iXUH,gc6N,gctb,iYfh,hzW3,hAxx,lI6P,lHB9,iY3X,orE1,9koP,hzKV,hzop,9k2p,9koV",
                    "97af": "oqWX,iXn1,iXyh,or6h,lGZH,lHvx,3QFz,iXsF,7Y3H,7YBx,iY3X,aInx,oryj,kjTp,kk8b,orPh,lHGH,lIcx,gcEr,gc19,dsvX,dsSx,aIVh,5dlh,3RmF,5da1,dskH,3R5N,9lbr,9kR1,c3Qj,c4aV,gbRV,gbvp,c3Qp",
                    "9ae6": "orhr,oqX1,gbB1,drJp,ds3V,ePTh,gbXr,gbpN,iXmX,iXDV,lHpP,lH91,lHGH,lHMp,n3QF,orPh,lI6P,iY9F,hA5p,hz/N,dskH,dsqp,gcyV,hAxx,c3Qj,c4IF,9kQX,9k81,6AaH,6B8F,6Bpr,3RDx,3R09,5cPx,c4gx",
                    "9f22": "oqXJ,mXy1,h3zx,h47D,mY67,mXW5,j/WL,k06T,j/yH,j/KP,e7Ab,3QoN,3QuT,8fBH,8fHT,bbH1,bbB1,bbY/,bbT9,8fTP,8fZR,e88h,6MY7,5kgJ,3QML,3QGV,e7Sp,fDyd,fE0j,5kQP,3Rx7,3R8Z,6Nkl,fDKl,orH/,izxz,iA5z,orU7",
                    "5eff": "rBOn,6/rt,702n,rCpn,jFAr,jG/t",
                    "4f76": "orhr,gbvp,iXsz,3QFF,dsY3,c4Zx,5dwx,5cV9,c4m9,c4Zx,gbXr,gcEx,hArV,gchX,orE1,lIcr,kkp9,kjwV",
                    "8ba0": "or4N,rSIl,jh9X,jhv7,7gsn,7gzp,aIvZ",
                    "90be": "gbpH,n37F,iXUH,iXn1,drDH,dsw1,5chH,c45h,6AZj,aInx,orbP,3QQV,7Z7b,6BjV,7Zix,c4Zx,eQAh,hAxx,n45x,n3QF,3RmF",
                    5800: "oqWX,6Am1,6AaN,9kjb,6Am1,hziH,hzFh,iXJr,iYqx,n45x,n3ox,7YBx,3QFF,gcnz,5dfF,eQLr,c4Zx,c4rN,eQdN,9kFH,5c+N,5dwx,9lbx",
                    "836a": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbvj,gbRV,drUF,5cyF,3QA1,5cnp,aInr,aHRN,c4xj,7YMN,5cPx,5d4j,3Rh1,5dfF,gcnF,aI+P,7Zix,6Bpx",
                    8559: "n45r,n2SN,oryj,lHMp,lHpP,orbV,9kA3,kjI9,9jYH,9kWF,aIK1,6Bpr,7ZcV,6B8z,3RmF,3QQV,5cEh,6Axh,5c+H,6AO9,6Agj,5chN,eQAb,ePI1,iXbH,iYqx,c3VX,hzu1,hAmh,c4Oh,c3W1",
                    "64ba": "oqWX,5ct1,3Qup,5chN,drUz,aHRN,iXbH,iXsF,n3KX,oryp,iYkP,lIcx,lHvx,iXDV,gbRP,iXP9,gcyP,iY9F,3Rbj,hA5p,gc13,gcnF,dsBF,dsf9,gc19,7Z7b,aIVh,aInx,7YBx,7Z7h",
                    5577: "n3u3,orhx,hA5j,hzKV,ds3P,dsqp,lHMp,lHpV,5cJV,5cPx,7YMN,6AZj,9kA9,3Rmz,n3QF,n45x,iYqx,gcth,dsSx,9lbx,7ZcV,9l0h,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5e5e": "3QzX,oqX1,aI6z,9kjh,kjrh,kj4N,9jYN,3QQP,3QWx,5c+N,7YY1,dsw1,gctb,eQuF,eQjj,gc6N,ds9r,dsSx,aI+P,aIt9,7YBr,7Zix,6B8z,3RxV,3RDx,iXJr,iYqx,oryj,iX+p,iY9z,orJF,n3/P,lI1h,n3u3,lHGN",
                    "730a": "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,n3zH,lHpV,ds3V,dsMV,lI6V,lHS1,hAaX,hArV,hzKP,hz/N,dsf3,6AO9,3QQV,3QLh,dsvX,5da1,3RmF,3RDx,6Bpx",
                    "60ad": "3QzX,oqX1,5dwr,5cEh,c4xj,5d4p,9koP,9l5V,orsH,dskN,eQ2r,n3ox,iXsz,gbMh,drDH,iXbN,dsvX,iYqx,lIcx,lHS1,dsSr,iY41",
                    "6d48": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QLb,3QQV,5cV9,7YSp,c4xp,7YSj,5dlh,3RDx,7Z7b,gcth,gbXx,7YBx,oryj,gccp,kkjr,kjTp",
                    "6fc2": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QzX,6Axh,lHkh,lIcx,orsH,n3Fp,iXUH,kjI9,kk2z,iY41,hzKP,hAxx,3R5H,hz/N,hAaX,3Rh1,ePYP,eQFV,9l5V,9koV,c4Zr,c4aV,3RDr,7Z1F,3QLb,7YH9",
                    "59a4": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,lHvr,lI6V,hAb1,gcnz,iX+p,dsMP,gcEx,gbXx,gchX,5da1,3Rbp,5c+N",
                    "7ec1": "q1BJ,jFAx,i5uh,i5Ud,jF+t,i5U7,bMcN,bMCJ,5qXb,6/rt,5sm7,5rEL,ortf,q2j1,bNdD,bNx9,q2CF,i655,i6Vd",
                    7457: "n3db,n2SN,gbMb,gbpN,7Yqb,6Am1,6AaN,n31X,6Am1,orPb,lHpV,iY9z,lI1h,kjTj,iY41,iXP3,kjCx,hArP,hzKV,ePYP,eQLx,hA5j,eQjp,7YH9,3QLh,3R03,3R5N,9l0h,c4Oh,c4rN,9kFH,5dfF,3RxV,3RDx",
                    6957: "3QzX,oqX1,3QLb,7YH9,eQ89,ePYV,kjI9,n3u9,n3dh,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,9kjb,3R5N,3RDx,orJz,6B8F,lHMj,lI6V,gcyV,gccp,iYqr,iXUN,dsqj,dsMV,aJ4r,aIyN",
                    "8f9a": "or0z,ePwN,ePTh,iXUH,gbXx,gcEr,iYfh,orDX,gci1,lHXz,orUV,orn3,lHMp,lGZH,lHpV,3QFz,hzzF,3QQP,3QWx,9kLp,c4xp,c4m9,6ACP,dsf9,7YMH,9kA9,9kWz,7Z1F,7Zix,c4Iz,c4Zx,3RxP,dsMV,aHRH,aIch,kkjr,kjCx",
                    "6bf3": "orPb,oqRp,lH8X,lHXF,iYkP,iXbN,hAxr,gcEx,gc19,hzQx,orhx,ds3P,drJp,dsMP,dskN,aIyH,aI+V,aHXj,aIhV,7YBr,7Y3N,7Zir,7YMN,5dwr,3RDx,3RmF,5da1,dsw1,drUz,3QFF,3QLh,5cJV",
                    "6b39": "lHvr,lH3p,or0z,kjlF,gbpN,gbXr,kjlF,ePwH,eQ89,5cyz,3QLh,3QQV,5cPx,eQ2x,3R5H,aIPF,hAgF,hArP,iYqx,kkjx,kjTp,orDX,hz/N,3RDr,aIPF,c3Qj,7Y9p,7Yqh,c45h,c3Qp",
                    6041: "iXbH,or6h,drUz,kjlF,dsMP,ds3V,hzFb,hAxx,lHMj,dsqp,n3Wb,lHpV,6Bpr,9l0h,6B8z,5dfF,3Rh1,3QQV,5cEh,aIch,7YMH,9kFN,5chH,9k81",
                    "777d": "iz3j,iyNh,cEmr,cEEF,bcVj,bbZ5,fDm1,fDWn,fD9/,lvwP,orw3,ordX,k0cT,mY0b,orH/,lvIR,fE6p,izVx,lw4V,orZZ,lvON,fDE9,8gr/,5kgJ,3QSX,3QMR,8grV,5kEN,3RD3,3RJ9,oqLH,or1V,6MG9,6Mo1,oqLN",
                    "94f3": "gbpH,or0F,kjwP,kjg1,orDX,lHXF,kkjr,kjI9,kk2z,eQ89,eQFV,dsMP,gcth,c4Iz,5dfF,3Rsh,3RDx,6Bpx,3QWr,6ATN,c4rN,aHRH,aIhV,gbRP,gbB1,gbGz,3QFF,6ACV",
                    7640: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,5cV3,3QLh,3RxP,5da1,aIVb,aIt9,aInx,eQjj,7YSp,gbRP,gcyV,iYkP,iXDV,gcnz,kk2F,kjI3,gc19,hzoj,kj4N,c3KH,gbGF,7Z7b,dsHh,ds9x,7YBx,7Z7h",
                    "4ec4": "lvwJ,h4jP,9IXn,3QAP,3RJ3,9JjB,fDEf,os43,oqRT,6Mu7,3QoN",
                    5028: "iXbH,or0F,3QzX,kjg1,3QFz,6ACV,n3iV,n3/V,iYkV,iXDV,9kQX,gci1,ds9r,dsSx,9l5P,5dqV,5cV9,9kA9,9l5V",
                    "8c04": "kjaj,n2SN,hziH,hzu1,3QA1,3Qup,6Axb,3QA1,gc6H,ds9x,ds3V,5cJV,5dwx,dsSx,dsw1,9kFH,9koV,9lbr,9kWF,gchX,lIcx,lHMp,gbRP,oryp",
                    "71ee": "oqWX,gbB1,drDN,gbAX,dr+h,kj4H,iXbN,lHkb,kjlF,lHMj,lHvx,iXJr,iXUN,hz/H,hzQx,dsvX,gcth,orPh,kkdP,lIcx,iY3X,kjZ1,dsSr,gcth,aHXj,aI+V,6ATN,5cJV,3QA1,3QoN,9kdz,6AIx,3Rsh,3RDx,orn3,n3zN,c4xj,eQjp,ePYV,c4aV,c4xp",
                    "82b7": "lIcr,lGZN,orDX,iY41,iXyb,or6h,3QFz,ePNF,3RDr,3QoN,hzW3,3R09,c4m3,c4Oh",
                    "841c": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,3QLb,iXyh,9koP,7YBx,9kA9,gc19,gbvp,7Y9p,iY9z,aIPF,eQuz,eQLx,aIEj,aI+V,5dqV,5d4p,aIEp",
                    5941: "lIcr,lGZN,orn3,gbGF,ePCp,ePwN,lHB3,gcnF,eQFV,eQLx,eQoX,ePNF,3QFF,3Rsh,c45b,5da1,5cEb,c4xp",
                    5482: "bMW9,jGh/,jGUV,dlDp,bNqB,dlqr,mRe1,8CAT,q2J7,q1ON,5rrN,5smd,oqLH,or3j,dkCz,dkj1,oqLN",
                    "55e5": "lHGH,orE1,iYkP,iXP9,7YvP,eQjp,7Z7b,7YMN,dsBz,9lbx,ds9r,dsSx,3RgX,aIK1,lGZH,lHkh,c45h,c3KN,lGZN,lHB3,gc19,gcyV,lI6V,lHB9",
                    "5d1e": "7YeX,oqX1,5c+H,3Rbp,5da1,aIK1,dsMV,ds9x,9lbr,9kux,lHpP,lIcx,oryj,n3L1,iXyb,7Yqh,7Y3N,iXbN,gctb,iYfh,iXP9,gc19,gcth",
                    9984: "h3zr,pW9z,h3Rz,5jUF,5j+B,8g9T,bcr9,bcfd,cFGP,9JvD,e8Cr,6Nqh,5kKT,5kWV,6NIp,6Ne9,5kmP,5kgJ,e8et,lv+J,lvqJ,luYt,lvkD,izfr,izrn,orpZ,or+3,iz/z,izrt",
                    "95eb": "n37z,oqX1,n3or,n45x,5dwx,3RxV,3Rsh,5dfF,9k7X,9l0h,dsvX,dr+h,hzzz,hAgF,3QoH,lGZN",
                    "6de6": "luSx,oqLN,fCU1,iyNh,3QuN,cEEF,5kWP,5j+B,h4pF,5ksL,h4dD,h4BN,h3Xv,orB/,h4TV,cEQB,cFAP,6N27,9IRr,9JBt,6Nqh",
                    "8fe4": "lH8X,oqRp,orn3,hzFh,lHvr,lHB9,lIcx,9kQX,iY41,aIPz,9l0h,aI+V,gcyV,ePYV,hzW3,7YH9,6ATN,6Bpx,7Zix,3RDr,3QLh,6Am1,gbB1,gbpN,6AlX,3QoN",
                    "5aeb": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,lIcr,lHvx,orPb,kk8h,kjNH,orsN,eQFP,eQ89,aIJX,9kR1,3QWx,9lbr,9kux,3RDr,7Z1F,hzW3,hArV,c4TV,c4m9,hzW9",
                    "7f19": "q1BJ,jFAx,i5uh,i5Ud,jF+t,i5U7,bMcN,bMCJ,5qXb,6/rt,8CUj,8Chv,eXsl,eYgt,orG7,eXLZ,eXYR,orTb,jGUP,i6I5,i6i3,jGh/,os43,ortf,5rEF,bMWf,bNx9,5sfF,5rEL",
                    6775: "3QFz,or0F,kjYX,3Rh1,kjI3,kkdV,hzQr,orsN,iXbH,iXDV,aHRH,gbB1,ePTb,ds3V,eQLr,eQ2x",
                    "69e0": "3QzX,oqX1,6ATH,3QWx,gbXx,gbMh,dr+b,ePNF,gbvj,c3KN,iXyb,iXbN,n3iP,kjCx,gcnz,orJF,gc6H,gcEx,kk8b,kjTp,lIcr,kkjx,c4rN,7Zir,7YY1,c4CX,c4Zx,3RDx,3Rh1,c4D1",
                    6636: "n37z,oqX1,lH3j,lHpV,5cJV,3QLh,3QFF,5ct1,7Y3H,ePNF,hzzF,hziN,iXUH,gbXx,aIt9,5da1,5dwx,eQoX,eQLx,7Zir,lIcx,lHS1,7YY1,7Zix",
                    "80ab": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,6Bpr,3RDx,3RmF,5da1,orE1,kjCr,kkjx,hzW3,c4m9,c4TV,hArV",
                    "70b1": "orn3,lHpV,iXhp,iYfh,hArP,lHS1,aIt3,7YH9,3QA1,3QoN,9kdz,7Yf1,6AZj,9kWF,7YH3,6ATN,3Rsh,3RDx,gctb,c4Oh,c3W1,gbB1,gcth",
                    7825: "n3iP,n2SN,ePwH,n37F,or+r,n3u9,5cV9,5c+N,7YY1,3Rmz,5da1,6Bpr,5dwx,3RDx,9kWF,lHXF,eQLr,eQdN,hztX,hzKV,7YvV,7Yf1,hzu1",
                    9487: "gbpH,or0F,kjCr,kjg1,kjNH,kkdV,6ATN,5c+N,3Rbp,3RDx,6Bpx,6ACP,3QFF,gbGF,gbAX,gbRV,aIhP,aHRN",
                    9532: "ePwH,oqX1,gbGz,gbvp,c3KH,c45h,6Axb,3QA1,gbB1,kjrb,kjg1,lHMj,lHpV,iXDP,iX+p,gccj,gbRV,orn3,dsf9,lHXz,lIcx,eQLx,dsMV,dsvX,gcth,lI1h,c4xj,9kLp,3QQV,3QLh,9lbr,9kjh,9kLj,3RxV,3RDx",
                    "9e4c": "or0z,kjlF,gbpN,kjlz,gbXx,lHvr,lGZN,lHMj,orJF,iY9z,kjZ1,gcnz,gcth,hArV,lI6V,lHGN,dskN,dsSx,6Bpx,3Rsh,3RmF,5da1,9kA3,9l0h,6AIr,3QLh,3QFF,gbGF,aHXj,aIhV,ds3P,7YvV,7Y9p,drJp,ds3V",
                    "887f": "lHez,oqX1,kj4H,kjwV,iXDV,c3KN,3QFz,gbGF,3RgX,c4TV,c4rN,eQoX,dsBF,aInr,dr+h,ePYV,eQ83,lHXF,n3QF,eQLr,lHXF",
                    5182: "3QoH,oqLN,os49,5kWV,3RD3,3Rx7",
                    5914: "n2Yj,n4b9,orJz,n3L1,n3iP,or6h,kjlz,drUF,ePTb,drJp,hzop,hzzz,hzKV,n3zH,kjI9,hzQr,hz/N,gc13,gccp,hAgz,hAxx,kkjx,kk2F,eQuF,dsHh,dsSx,eQR9,9lh3,aIVh,c4IF,c4aP,7Yf1,dsf3,7YvV,aInr,aIK1,7YY1,3QFF,9kur,5d4p,3Rsh,kjTj,kjCx,ds9x,dsqp,kjTp",
                    "963d": "aHXj,9k81,9kdF,aIch,ePTh,hzu1,kjrh,n3dh,n2SN,3QoN,oryj,c4xp,iYqr,iX+p,5cPr,c4gx,c4Oh,5dlh,5cPx",
                    5768: "7Ykz,or0F,9kur,6AaN,hziH,hzKV,iXJr,kjCx,kkjx,hArV,oryj,lHS1,gc6H,5c+N,3Rbp,3RDx,6Bpx,aIEj,dsMV",
                    "846d": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,ePCj,eQ2x,hzQx,hzop,3Qup,9k2j,9kux,c4gr,c3Qp,c4rH,c4Zx,9l5V,5da1,3R5N,3QWx,9kLj,3RxV,3RDx,eQdH,eQFV,hArV,hz/N",
                    "63ae": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,n3KX,oryp,hzQr,hAxx,lIcx,lHvx,7YBx,3QLh,3R5H,eQdN,eQLx,5dwx,3RxV,5dlh,9kFH,9lbx,c4Zr,c4rN",
                    "54cf": "k0H1,k00X,fDg5,fDWn,orU7,ordX,3QSX,3QYT,6N8j,cFAJ,8gy5,e8kt,9Jdv,3RD3,3RJ9,mXxX,mXQ9,cEEF,cEmx,mXy1",
                    "567b": "iXyb,lHpV,lIcx,iYkV,hzKP,hArV,eQFP,ePYV,c45b,c4Zx,iXP3,c4m9,orsH,n3Fp,c4Iz,iY9F,6Bpr,aIPF,6AO3,6B8F,9kur,6Axh,3Rbj,7YSp,3QLb,3RDx,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "5fb5": "kj4H,or0F,ePwH,iXsF,3QzX,gbB1,5d4j,5cyF,9kdz,9kLp,dsqj,drUF,eQuz,7Z1F,3RDx,3RgX,9lbx,kkjx,kjZ1,hA5j,orJF,lHGH,iXUN,iXyh,lHkh,iXJr,orhx,gbRP,gc19,5cPr,ds9x",
                    "5fe1": "3QzX,oqX1,orDX,3Rh1,gbMb,iXsF,drDH,iXbN,iYqr,dsSx,ds9x,iXJx,iYqx",
                    "6c8c": "kjfX,n2Yp,kjrb,kjwV,kkdV,orsH,5c+N,3Rbp,3RDx,6Bpx,gctb,c4Oh,c45h,gbMh,hziH,ePCp,c3/z,3Qup",
                    "6e8f": "kjfX,n2Yp,ePCj,hziN,c3/z,9k2p,3Qup,3QFz,6Axh,lHkh,lI6V,n3Fj,orsN,9kLj,iX+p,c4gr,c4Oh,hAmh,hzQx,eQLr,ePYV,9l0b,5dlh,5cPx,9kux,9l0h",
                    "5f57": "e7Sj,pWfF,pW/H,e8Cx,mYid,mYSp,mXxX,mY67,k06N,j/ET,k0MZ,k0j3,h4jJ,h4TV,h3zr,h47D,bbH1,bcPj,5kQP,5jID,8gPZ,8fTV",
                    "9a81": "n2SH,n37F,ePNF,kjaj,drJp,dr+h,5cEh,3QFF,3QA1,5cnp,aI6z,9jYN,aI+P,aIhV,5dwr,3RDx,3RmF,5da1,aIK1,aIyH,7YMN,6AO9,3QQV,ds9r,dsf9,eQjp,iYfh,kjCr,lI6V,orsH,kjNN,hA5p,dsMV,dsSx,gcEx",
                    "73d1": "n3db,n2SN,kkjr,kjwV,n3Wb,lI6V,oryj,eQjp,6AIx,3QLh,3QFF,6AaH,6Am1,n321,gbMb,gbpN,6AlX,7Yqh,5cV3,6AZp,c4TV,6Bpr,3RDx,3RmF,5da1,eQp1",
                    6864: "3QFz,or0F,6Bpr,3RDx,3R5N,5cV9,aIt9,aI+V,gcyV,gc19,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,n3u3,iXP9,iYkV,n3/V,iY3X,orE1",
                    "6b93": "lHpP,lH3p,c3KH,lH91,c45b,ePI1,hztX,hzKV,ds3V,6ArF,3Qup,6Bpr,6AIx,c4TP,7Z7h,7YXX,c4xp,c4m3,7YMN,eQAb,eQdN,eQLr,n3L1,orE1,eQ2r,n3L1",
                    "8d59": "iXsz,7YkF,3QoN,7Ykz,3QQV,9koP,n3iV,n2Yp,9k2p,9lbr,9kux,aIVb,5dlh,3RmF,3Rh1,6AO3,5c+N,c4m3,iXP9,iYkV,c4TV,orDX,c4D1,n3/P,orPh,lHB3,lIcx,gcyP,gc19,dsf3,dsMV",
                    "814c": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,6Bpr,3RDx,3Rh1,5d4p,eQjp,aInr,aIVh,ePYP,kjTp,oryp,kkdP,kjwV,dsSr,kjTp,dsHb,7Z7h,7YBx,ds9x,dsHh",
                    6243: "n3zH,orn9,iXmX,iYkV,lI6V,lH91,6Am1,3QoN,3QLb,gbMh,gcEx,5dwx,3RxV,5dlh,9kWz,dsBF,dsf9,9kA9,9kWF",
                    7934: "n3iP,n2SN,ePwH,n37F,n45r,n3u9,orPb,lI1h,lHMj,oryp,hzW3,iXJx,eQ2r,dsf9,5cPr,aIt9,6Bpr,6ATN,3Rmz,5dlh,7Z7h,5d9X,5d4p,9l5P,gcyV,gccp,9kLp,kk2z,9kWF,kkdP,iYqx,iX+p,dsMP,dsqp,aIEj,aI+V,gbAX,gbMh,7Yqh,7Yf1,gbB1",
                    "94c9": "gbpH,or0F,kjwP,kjg1,oryj,lHS1,kkjr,kjI9,kjTj,c4gx,c4IF,eQAb,5cV9,5dwx,3RDr,6BjV,6ACP,3QFF,gbGF,gbAX,gbRV,aIhP,aHRN",
                    9567: "ePwH,oqX1,kjrb,kjap,gbvj,gbGF,c45b,c3KN,6Axb,3QA1,gbB1,n3or,lHB9,lHMj,lIcx,5dwx,3RxV,7Z1z,5dqV,5cV3,7YSp,iXJr,3QWx,hArP,hzW9,3RgX,kjZ1,c4Ob,c4rN,9l0b,eQAh,eQdN,9kFN,9l0h",
                    "75c3": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gbGz,c3KN,hzoj,kj4N,hA5j,iXUN,gbRP,gcEx,eQjj,aInx,aIK1,c4Iz,5cPx,5dlh,3RxP,6B8F",
                    8012: "3R03,orn9,3RDr,3RxV,aIyN,3QoH,c4gx,hAmb,hzu1,lH3j,lI6V,dsSr,drDN",
                    9894: "or0z,n37F,hziN,gbGz,hzu1,ePCj,ePYV,aI11,9kA3,iXP9,iYkV,9l5V,3RDr,6Beh,3QWr,3R09,7YY1,eQp1,n3Wb,iX+p,n3u3,n45x,hzQr,n37F,aIhP,6ACV,6Agp,aHXp,aIhV",
                    "86b1": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cPx,kjTj,3Rbp,kjI3,kkjx,orsH,hzQx,eQjj,eQFV,9lbr,9kLp,dr+b,iXyh,iXbN,drDN,dr+h",
                    8731: "6Arz,or0F,6ACP,5chN,5cPr,7YvV,c4CX,3Rh1,aIt3,dsqp,9lbr,9kux,hzW3,hArV,kjYX,eQp1,kjNH,n3L1,eQFP,kkdV,kjI9,eQ89,eQFV,ds3P,iXDV,iXhp,drJp,ds3V",
                    8797: "oqWX,5ct1,5chN,5csX,6Axh,7Yqh,3QLb,6AIx,lHvx,lIcx,oryj,n3L1,9kQX,iY41,eQLr,eQ89,hz/H,hArV,c4TV,c4rN,9l5P,5dqV,5c+N,9kFN,9l5V,dr+b,iXyh,iXbN,drDN,dr+h",
                    "7b03": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,gbAX,gci1,c4D1,ePNz,aI6F,aI+V,6BjV,3RmF,3Rh1,5d4p,7Y3H,7YY1",
                    "7bb8": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,dsf3,hzW9,drDH,dsSx,gccj,gbMh,gcnz,c4rN,7Yf1,7Y9p,6Beb,6ACV,9koP,9kux,9l0h,3Rsh,3QQV,9koV",
                    "7c41": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,3QLb,iXyh,9kdz,3QoN,5cV3,7YvV,3R5H,3Rbp,6B8F,9kWF,6B8z,3RxV,3RDx,7ZcP,c4TV,c4xp,7YSp,c4Iz,gcyV,gci1,dskN,hAaX,gci1,gbpH,gc19,drJj,aHXp,aIt9,dsf9,drJp",
                    "7f9d": "lH8X,oqRp,orbP,lHkh,kj4H,kjCx,gbRP,gbvp,c3KH,c4gx,3QoH,7YkF,kjlF,eQLr,eQ89,6Bpr,3RDx,6Beh,9kWF,n3QF,or+r,n3u9,5cV9,5c+N,7YY1,3Rmz,5da1",
                    "7fee": "orjN,oqLN,mYc7,mYul,5kyR,3Re/,5kmP,5kKN,3RD3,5kWV,mYSp,mYGn,h4HN,izPx,bcDb,e8Oz,e8qp,bcfd,izrn,h4jP,cEKv,bbT9,cEsD,9IRl,9Itn,5jUz,9IFp,3QSR,5kaD,fDm7,fCO1,3QoN,izfl,lveH,luSD,iyTn,izfr",
                    "8dd7": "oryj,kjCx,orUP,5dqV,3Rsh,5dfF,eQoX,c4IF,iYqr,iY41,3R5H,lHGN,7YvP,5cnp,5chN,drJj,5cnp,drUz,ds3V,6Arz,hzzF,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e52": "lIcr,lHvx,orPb,kk8h,kjNH,orsN,hAxr,hzQx,hAmb,7Z7h,5da1,7Z7b,6BjV,7YXX,9kLp,6AO9,hA5j,9kLp,3QWr,ds9x,dsSx,5dwx,3RxV,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,6Arz,hzzF,n2Yj,n3dh,hzFh,hzop,iXhp,n2Yp",
                    "8b26": "lHez,or0F,lH3j,lHpV,n3or,n2SN,lHGH,n3Fp,oryp,orPh,lI1h,lIcx,kjNH,kkdV,hAgF,gccp,gc6N,iX+j,hAb1,gcth,gcyV,hzzz,kjlF,hzoj,hzKV,kjwV,kjap,gbvp,ePwN,ds9r,eQ2x,drDH,dsSx,aIVb,aI11,7Y9j,7ZcV,6Arz,6B8F,3RmF,3QFF,6ArF",
                    "928e": "ordR,oqLN,h3Rz,or1V,fCNX,fC+3,h41H,fDm1,izxz,orw3,orO1,h4BN,fDWn,fE6p,h4TV,k0oV,izJB,9Inb,9Itn,e8et,9JBz,9JHF,9ILf,9JjB,6Nwh,6MA3,3QoH,3RJ9,5j+v,3QMR,3Rk/,5kyR,9J1n,3R2Z",
                    "9ca7": "iXbH,or0F,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,7YSj,6ATN,6Bpr,7ZcV,3RgX,5dfF,c4IF,aJa3,dsMV,c4Zr,c4rN,hArV,gctb,gc6N,lHXF,n3QF,n3zH,n45x,9koP,hzKV,hzop,9k2p,9koV",
                    "9cd0": "j/yH,pW9z,mXJZ,mXW5,iz3p,9IFp,e7Gh,e82r,6MS5,5jCx,8glZ,5kmP,5kWV,8gW9,fDQb,5kEN,fDyd,fE6p,e8en,h4jP,bcVj,bclj,mYSj,k0H7,orjN,os49,k0iZ,mY67,mYid,k0v5,9IRl,izfr,iyTn,9Itn,9IRr",
                    "9acc": "kjaj,kjlF,gbGF,eQ2r,gbXx,gbpN,ePwN,gbvj,n2Yp,n3iV,gbRV,iXJr,lHB9,lIcx,iYkV,iY9z,hz/N,9kFN,9lbr,9kux,eQAb,9l0h,eQdH,eQFV,3QWr,6ATN,3RDr,6Beh,3QLb,5cJV,ds3V,drJp,3Qup,7YvP,7Y9p,aHXj,aIhV,oryj,n3L1",
                    "9e8b": "n3Fj,orsN,n45r,n321,6Am1,3QoN,6AIr,3QLh,3Rsb,6B31,c4rH,3R5N,9kQX,aIPF,aIhP,9kux,ds9r,ds3V,gbRV,ePYP,eQdN,gctb,eQuF,eQLr,dsSx,dsw1,gci1,lHRX,hAb1,hzQr,lHvx,hzFb,hArV,kkdV,kjrh,7ZcP,7Yqh",
                    "56df": "mXV/,pWxD,iz3j,9Jdv,8gE1,k0AX,izPx,9IRr,8fTV,8fNP,mXxX,5jCx,5kWV,mYSp,mXy1",
                    "4fe3": "iXbH,or6h,3QzX,kjg1,3QLb,3QQV,9kLp,eQjp,ePYP,eQFV,aJ4r,aIch,9kLj,3RxV,3RDx,iYfb,n3Wh,n3ox,iXJx,iYfh",
                    "8bd9": "kjfX,n2Yp,gbpH,gbB1,5ct1,5cyF,7YvV,dskH,aIyN,hAaX,9kR1,5cV9,3QQV,3QLh,3RDr,9kR1,aIJX,eQFV,kjwP,kkjx,orsH,kjNN,c45h",
                    9131: "orsH,n2SN,dr+b,n3dh,3QLb,c45h,3RgX,n3L1,n45x,kkjx,gcnF,c4Zx,9lbx,7ZcV,7Z1F,7Y9j,7YH9,drDH,drJp,gbGF,gbRP,dsf9,dskN,hziH,hz/N,iXmX,kjap,kjI3,iXJx,c3Qj,c4m9,3R09,3Qup,c3Qp",
                    "828f": "mYSj,mXy1,pWPF,k0o/,k00R,pWrH,5kgD,h4dJ,5jCr,5kWV,cFuN,cEyz",
                    8585: "n45r,n2SN,oryj,lHMp,lHpP,orbV,kjfX,c3Qp,6ACV,3QoH,aIch,hzFh,hziH,hzKV,kkjr,kjI9,7YH9,3QQV,6Bpr,6ATN,7Z7b,3Rsh,3RmF,5d4j,5da1,aIPz,9kR1,9kLp,eQjp,eQLr,eQdN,dsHb,c4Oh,9lbx,aI+P,c4Zx,hz/H,hArV",
                    "53e8": "rT8n,rTVH,8/pX,7hrF,8/bT,7gNn,e8zz,rTtz,oqLH,orbV,aIhV,aHRN,oqLN",
                    "55bd": "kjI3,n3ox,n3Wb,kk2F,eQjj,oryp,hAaX,dsMV,ds3P,hz/N,iYqr,iXyh,dskH,9kA9,6AZp,3RxV,3RDx,3QQP,3QWx,6B31,9l0h,aIVh,aIhP,aJa9,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5cab": "6MzZ,pW9z,cFGP,cEWD,pWVL,5kyR,j/WL,6MM5,6Mo1,j/yN,5kax,k06T,k0T9,5kWV,5kaD",
                    "821b": "rSPh,k/fl,hziN,e87l,jho5,or4N,orw/,e8lv,7gej,7g7h,rTOz,7hrF,osi7,orE1,l00t,e8zz,e96J",
                    6123: "3QzX,oqX1,3QLb,3QQV,9kFN,dskN,gc6H,eQjp,dsSr,dr+h,n3KX,hAb1,hz/H,n3zN,gbMb,iXsF,ePwH,iXbN,aIyH,aI+V,5dqV,3Rsh,3RmF,5da1,hAmb,n3Wh,n3ox,hzQx,hAmh",
                    "6da0": "luSx,oqLN,fCU1,iyNh,3QuN,cEEF,k0oV,6Nef,izlh,izVD,fDWh,fDm7,cEWx,cFuT,9JvD,8gE1,9JjB,5j+v,mXW5,mYSp,5kWV,5j+B",
                    "5ba5": "n3zH,orn9,iYkP,lIcx,lH3p,iXbN,gcEr,gbpN,iXJr,gbXx,9k2p,9jYN,aIPz,aIhV,7YvP,7Z1F,3QQP,ds3V,dsBF,5dfF,3Rh1,5d4p",
                    "5a11": "n3db,oqX1,kjaj,iXsF,ePCj,ePI1,hzKV,lHGH,iXP9,gchX,orE1,n3Wb,kkdV,eQ83,hAxx,ds9r,7YvV,3RmF,3Rsh,3QFz,3QLh,5cPx,6ATN,aIK1,aHRH,aJ4x",
                    "7f0d": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,5kQJ,5kgJ,orH/,5kyR,orpT,pXbP,k0T3,k06T,bcJh,izVD,izxt,bclj,fE6j,fDm7,9IXh,9JHF",
                    "74d2": "lH8X,lGZN,drDH,drP1,5chH,5cnp,6ArF,lH3j,5cnp,lHB3,lHkh,lI6P,lHMp,iY9z,orJF,iYfb,eQAh,eQLx,gcEx,iX+j,iYqx,iXsz,iXP9,orhr,eQ2x,eQ89,gc6N,eQjj,gci1,iY41,iXyb,gbMh,ePNF,9kLj,6AZp,3QWx,3QQV,6AZj,3Rsh,3RxV,7Z7b,c4Oh,c4gx,7YBx,n3db,kjlF",
                    "69ce": "3QzX,oqX1,5dwr,5cJV,aIJX,5da1,aI+P,aIt9,7Yqb,eQjp,kjTp,kjwP,kkdV,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,eQLr,eQ2x,hzQr,hAmh,n3u3,lHGN,lHRX,n3QF",
                    7513: "kjaj,kjCx,n3ox,n2Yp,drDN,iY9z,dsBF,iX+j,iYkV,lHMj,kjZ1,n45r,n3zN,kk8b,lI6V,orJz,n3QF,gcEr,gc6N,c3KH,c4Oh,c3/z,3QFF,3QLh,5cJV,7YBr,6AO9,9kdz,9kR1,6B31,3Rsh,3RDx,5dwx,hztX,hzQx,eQ2x,ePI1,hzu1",
                    6535: "gbAX,or6h,gbRP,ePYV,c4gx,3Rsh,3QoH,3Qup,5cyF,eQp1,kjZ1,kjlz,kk8h",
                    "65bc": "lHez,oqX1,kj4H,kjCx,kjfX,7Yf1,3QoN,5cyz,3QLh,5cJV,ePYV,ePI1,ds9r,lHS1,n3L1,dsSr,lHS1,dsqj,aIPF,5dfz,7YSp",
                    "77f6": "mXE1,mY0b,fCO1,3QSR,6N2d,orpZ,orO1,6Nqh,3RD3,3RJ9,6NIp,h3Lt,h41H,8g3X,8fNP,h3Lz",
                    7583: "ePTb,ePwN,7YeX,lH91,3RDr,3QWx,eQoX,3Rh1,c4m3,c4TV,6BjP,6AO9,hzQr,hAxx,kjNH,iX+p,lHB3,lI6V,kk8h,iY9F,oryj,n3L1,lGZH,lHkh,7Yqh,7Y3N,lGZN,9l5P,eQFV,eQ89,9kA9,9l5V",
                    9512: "gbpH,or0F,kjwP,kjg1,oryj,lHS1,hArP,hzW9,eQ83,eQFV,kkdV,kjI9,3R09,3R5N,6B31,c4Zr,7Z1F,aIK1,dsw1,3RDr,7Z1F,6ACP,3QFF,gbGF,gbRP,gbB1,c3KH,c4aV",
                    "9e32": "gbpH,or0F,kjfX,kjCx,5cPx,3QQV,5cEh,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,orJz,lHMp,kjYX,iY9F,9kjb,gbMh,gbB1,9k81,9kjh",
                    "7a78": "n3u3,orhx,iYkP,kkjx,lIcx,lH3p,iXbN,iXDP,gbGF,ePCp,ePwN,gbXr,aI6F,aI11,7YH3,c45h,3QoH,3QA1,7YMN,c4IF,dsBF,ds3V,iX+j,gcnF,eQLx",
                    5208: "kjaj,c4m9,6ATN,7Y3H,7Y9p,c45h,lHGN,9kQX,kjZ1,5dfz,3Rsh,3RxV,5dwx,or+x",
                    "50ee": "iXbH,or0F,3QzX,kjg1,3RDr,3QLh,eQjj,3Rbp,c4aP,c4TV,6BjP,6ACV,hzFb,hAxx,kjI3,iXUN,iY3X,kk2F,lHpP,lI6V,orsH,n3Fp,eQFP,9l5V,9koV,ePYV,eQFV",
                    "8c27": "mQjL,q1ih,i5ub,i5Hf,5r8f,8BZZ,5sm7,5rld,5s8/,dlwR,dkVX,5ryb,dl6P,5rL9,5rY1,dljT,eXfn,eXm1,orTb,q2pH,orzz,q1/L,ormB,jGbr,i6bL,i6BH,jGOl,lhkR,os43,lhxZ,lgqt,or9J",
                    "830f": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,hzQr,eQ2x,6Axh,5cyF,3Qup,3QoN,eQFP,ePCp,hAgz,gcnF,eQdH,5c+N,3Rbp,3RDx,6Bpx,6AIr,6ATN,aIVh",
                    8451: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,aI6z,3QFF,7Y9j,7YvV,3QWr,3QoN,5d4j,3Rh1,3RmF,5dlh,iYfh,dsf3,dsSx,9kLj,aIyN,c3KH,c4gx,iXsz,c3/F,gbvj,gbRV",
                    "62ee": "or0z,5cyF,3QA1,5cnp,hzKP,aHRN,kj4H,kjrh,kkjr,kjCx,eQoX,orE1,eQ83,eQFV,aIt3,5cV9,5dqV,aI+V,aIyN,aIt9",
                    "54a6": "lIcr,lHpV,iXDP,iYkV,gcyV,gbRV,ds3V,dsSx,aJ4x,9l5V,9kQX,3RDx,3QFz,3QLh,5cPx,9kLp,oryp,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5627: "iXyb,lHpV,lIcx,iYkV,orsH,n3Fp,hA5j,iXUN,hAgz,gcnF,c4rN,aInx,aIhV,gbXr,ds3V,gc6H,c4rN,aIEp,aIVh,c4Oh,eQFP,c4Zx,7ZcP,3RxV,3QQV,7YvV,3Rbj,9kLp,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "5d99": "7YeX,oqX1,3QQP,3QWx,6ATN,9kLp,c4xp,c4m9,dsf3,7YBx,6ACV,7YMH,9kA9,9kWz,7Z1F,7Zix,dsMP,3RxV,c4Iz,c4Zx,iYfb,gcEx,kjCr,kkjx,gbXr,iXUN,orDX,gci1,lHXz,orUV,orn3,lHMp,iXyb,7Yqh,7Y3N,iXbN",
                    "5ebe": "n3zH,orn9,lIcr,lH3p,5cnp,3QoN,3QzX,3QFF,5cJV,9kFN,iXUN,hzQr,gbGF,aI6F,aI+V,gcyV,gccp,dsvX,dsMV,drUz,ds9x,9kFH,5dfF,3RxV,3RDx",
                    9615: "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,7YXX,c4m9,7Yqh,eQ83,c4m9,ePYP,eQjp,c4CX,c45h,eQAb,eQuF,iXUN,kjNN,iX+j,kjZ1,hAgz,gci1,ePNz,iXJx,kjCx,kjrh,gbMb,hzzF,3Quj,kjap",
                    "6e25": "luYt,oqRT,fCU1,iyNh,5jIx,cEEF,3QAJ,9IRr,ordX,or+3,k0N3,k00X,h4TP,h47D,h4vL,cF0J,cFAP,e8ID,3Rk/,bcxl,3QSR,3RJ9,8gPZ,8gfZ",
                    9044: "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,7Z1z,6Beh,7ZcV,c4TV,c45h,6Axh,6AO3,c4m9,gci1,gbMb,gcEx,6B2X,c4D1,oryj,iX+p,n3/P,iYkV,iXDV,n3iV",
                    "5b40": "oqRj,aHXp,5cJV,7YH9,3QoH,9kjh,iXyh,iXbN,n3/P,n3u9,eQoX,n3L1,eQFP,eQuF,hAgz,hArV,hzW3,hA5p,eQjj,eQ89,eQ2r,kjCx,kkjx,eQLx,9kWz,9lbx,6Bpr,6B8F,7YSj,6B31,aIJX,aInx,3R5H,c4rN,c4Zr,3RDx,3RmF,c4IF,c4Zx",
                    "7f31": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,3QQP,6AO9,dsf9,ds3V,c4xj,c4TV,eQFV,eQjp,6AZp,6Bpx,9lbx,9kLp,3RJ3,3Rbp,6AO9,hAD3,hzW9,orJz,hAgF,iXJr,lHpV,n45r,kkjx,kjNN,n3zN,n45x",
                    "67b3": "3QFz,or0F,6ATH,3QWx,3RDr,6Beh,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,c4TP,kkdV,kjI9,c4m9,c4TV",
                    "6a3d": "3QzX,oqX1,3Rbj,3Rh1,5dfF,aIPF,9kjb,9lbx,6AO3,6AIx,eQuz,eQ89,hAmb,hAb1,n3L1,orJF,n3iP,n45x,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,hzW3,iXUN,n3zN,orn9,c4aP,kjwV,kkdV,c4TV,c4aV",
                    "66dc": "fD43,fCO1,bbY/,fDsd,3QYN,e88n,5kWP,5kgJ,8gfT,8gQ3,fDKf,5kyR,e8en,e8UF,bcPd,bcfd,h4NJ,or+3,orI5,ordR,orw3,h4jP,izfl,k0cZ,lvkD,lvOH,k0H7,izJB,mXxX,mXQ9,8fTV,8fBN,mXy1",
                    "80f1": "hzFb,hzop,gcEr,gbRV,gchX,5da1,3RmF,3RDx,6Bpx,3QQP,7YMN,gc6N,oryj,gccp,iY3X,n3/V,lHvr,iXUN,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF",
                    "71b3": "oqWX,6Am1,3QoN,3QQP,7YkF,3QWr,3R09,aI+V,aIhV,9kA3,5da1,3Rsh,3RDx,gchX,dsw1,dskH,gc6N,kjrb,hzu1,lI1b,lHvx,ePwH,iXbN,dsMP,gcyV,gbRV,ds3V,dsMV,iYfb,iXJx,orhx,orPh,iYfh",
                    "789c": "lHvr,lGZN,drDH,lHeF,orJz,kjNN,kkjx,iYqr,lI6V,iY3X,gci1,c4m9,gcEr,gc19,c4Zr,gcnF,c4Iz,aIK1,9kFN,9kA9,6AO3,6ATN,7YY1,9l0h,6BjP,3Rbp,3R09,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "94ad": "gbpH,or0F,kjCr,kjg1,iY3X,lHGN,gc6H,dsw1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,c4Zr,c4m9,orPb,3Rsh",
                    9552: "gbpH,or0F,kjwP,kjg1,iYkP,iXJx,n3/P,kk2F,kjTj,n3u9,dsSr,gcth,ds9r,gc6N,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,5dwr,5cPx,5dqP,c4TV,c4m9,5cV9,c4xj,5d4p,5dfz,c4IF",
                    "9e71": "or0z,lH3p,lHpV,gbRV,ePTh,hzzz,iXsF,lH3j,drJp,ds9x,6AIx,3QLh,3QFF,5ct1,9jYH,9kjh,7YH3,7ZcV,5dfF,3R5N,3QWx,6ATH,5d4p,3Rsh,3RDx,aJ4r,aIyN,iXUN,iYqx,kjTj,gbXx,aIPz,kk2F,dskH,dsMV,gcyP,gc6N,orsH,lHGN,lI1b,orPh,n3or,n45x",
                    8921: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,c4Ob,c4rN,c4Zr,hAb1,c4gx,orPb,iYfh,iXUH,orsN,lHvr,lHB9,lIcx,ePTb,drUF,aIhV,5cV3,9kA9,9l5V,5dqV,5cV9",
                    "4f09": "orhr,hzop,kjlz,3QFF,oryj,kk2F,kjI3,kkp9,lIcx,hz/H,6ATN,3QWx,gc6H,gcyV,5dqV,3RDx,3RJ9,7Zo9",
                    "5b34": "n3u3,orn9,n2SH,n45x,n31X,kjg1,kk8h,aIcb,aIyN,ds3P,7YvV,5cV9,3QLb,7YH9,aIt9,7Z1z,9kR1,5dwr,3RDx,3RxV,5dlh,c4Oh,c4xp,5d4p,3R5N,3QzX,5cyF,c3/F,c3Qp,5cnp,3QoN,6Agj,6Am1,6ArF,9k2j,9kdF,hAmb,eQAh,ePI1,hzu1,hAmh",
                    9099: "lHkb,or0F,kj4H,kjNN,kjfX,9k81,9kA9,9kWz,7Z7h,7ZcV,9lbx,dsSx,gcth,iYqx,n45x,n3L1,3Rh1",
                    "57d2": "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,gbXr,iXDV,kjNH,hA5p,iYfb,lI6V,gctb,5dlh,3RmF,3Rh1,5d4p,aIt3,7YSp,dsSr,ds3V,lHkb,orUV",
                    8317: "mYSj,mXy1,pWPF,k0o/,k00R,pWrH,izrn,e7Yl,cEyz,cEsD,fDm1,fDQh,8fTV,6Mu7,6Mo1,e7Yf,bc97,9IRl,9JvD,5kKT,5k4H,9IRr",
                    "850c": "n45r,n2SN,oryj,lHMp,lHpP,orbV,3QWr,3R09,9kWF,eQuF,eQFP,gcEx,hAxx,hAgF,gc6H,kjZ1,hzoj,hzQx,5chH,9kdF,6AO3,9koV,3RDr,9kWF,eQ83,aIt9,aHXp,ePCp,3QLb,kjrh",
                    "640c": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,iXDP,iYkV,n3/V,n3iV,7YvV,3QFF,5d4j,3R5N,3R09,9kA9,9lbr,9kux,7YXX,3RxV,3RDx,5dlb,6BjV,gcnz,9kWF,9kFH,gc6N,dsMP,ds9x",
                    5549: "iXUH,iXDV,iYw3,iY41,eQAb,aJa9,7YSj,gcnF,orn3,3R09,3Rsb,orPh,gc13,dsqp,7Ykz,gbXx,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5e0f": "3QzX,oqX1,orDX,3Rh1,kjI3,kkjx,gcyP,gc19,c4m3,c4Zx,6Bpx,5dqV,aHRH,iXbN,iXyh,aIch,c3/F",
                    "72f2": "n2SH,kjlF,6ArF,3Qup,5chN,ePNz,c3KN,hziH,or6h,lHpP,lHMp,iXP9,5cV9,3QWx,5cJV,eQjj,c45h,9kLj,iY9F,5d9X,3RmF,5dlh,orPh,c4Zr,eQFV",
                    "603f": "3QzX,oqX1,eQoX,3Rh1,eQLr,eQFV,gcnF,lHB9,n3iP,n3/V,lI6V,gccp,eQ89,eQ2x,c4TP,c4m9,7YBr,7Zix,iXsz,gbMh,drDH,iXbN",
                    "6cfa": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,c4m3,5cyF,5dwr,aIPF,5cV3,3R5N,5d4p,iX+p,eQLr,ePTh,lHkh,orJF",
                    "6f8d": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5d4j,5cyF,5dfz,3Rsh,5dqV,orUV,hA5j,hAxx,gbMb,gc6N,kjTj,kjlF,gbXr,orhx,aIPz,dsw1,5cV3,7YMN,7Yqb,5cJV,dr+b,dskN,9kFN,9kjh,dr+h",
                    "5c6e": "mXJZ,luYz,h3Lz,h4HT,mYGn,5kgD,pWDJ",
                    "9aa7": "n2SH,n37F,ePNF,kjaj,drJp,dr+h,5cEh,3QFF,3QA1,5cnp,aI6z,9jYN,5d9X,3Rbp,3R5N,6ATN,3QQP,7YMN,gc6N,9l0b,gcth,9kur,9lbx,c4TP,c4m9,eQ2r,eQLx,7YXX,3RxV,3RDx,6BjP,5dlh,n3or,n45x,orDX,n3L1,hArP,kkdV,kk2F,hAgF,hArV,hA5j,kjTp,kjI9,hzW9,hA5p",
                    "745b": "n3iP,n2SN,9kdz,n37F,9koP,7Y3N,gbpH,gbRV,lIcr,lHvx,orPb,iYfh,iXUH,orsN,iY3X,aIK1,7YSp,3QWx,3QQV,9kWz,7Z1F,3RDx,aInr,aJ4x,aIt3,gc19,gcyV,aI+V",
                    "686b": "3QFz,or0F,aIyH,5cPx,gbXr,dsf9,lHvr,iXP9,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,dsqj,gccp,c4Zr,eQFV,9lbr,5dfF,3Rbp,3R5N,n3Qz,7Z1F",
                    "8f7c": "oqWX,ePwN,ePTh,3QFz,gbGF,6B2X,6ACV,eQdH,6ATN,eQ2r,eQjp,iYqr,iXJx,n3Wb,lI6V,orDX,eQp1,6Beh,3RDx,6Bpx,aHRH,aIhV,kjwP,kj4N",
                    "728b": "3QGP,or1V,6N8d,3QYT,3RCZ,6Nqh,8g3R,8gW9,8gfT,lvqJ,lvUT,8gK7,cF0D,cFuT,fDWh,fDsd,izrn,izVD,iyTh,izfr,fCNX,luSD,9Inb,9Itn,e82r",
                    7738: "hzoj,hzKV,ds3P,drJp,orJz,hzW9,hAxx,lI6P,hAD9,hA5j,ds9x,dskH,dsMV,hAgz,3RmF,aJ4r,9lh9,9kux,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94e0": "gbpH,or0F,gbRP,gbB1,aHRH,aIhV,kjwP,kjg1,n3u3,iXP9,iYkV,n3/V,iY3X,orE1,gc13,gcyV,aI+V,aIt9,5cV9,3R5N,3RDx,6Bpx,6ACP,3QFF,gbGF",
                    "79eb": "orbP,lGZN,3QFz,n37F,gccj,5cJV,5dwr,gcnF,orDX,3Rh1,kkdP,n3Wh,hzW3,hAxx,hziH,hzKV,9jYH,ePI1,c4aP,dr+h",
                    "760c": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,aInr,5cEh,6B2X,9kFN,5dlb,3RxV,5dwx,iYqx,9l0b,gcth,iXP3,3R09,hAaX,hzFh,c3KH,gbGF,kj4H,hzop,c4xj,eQjp,ePYV,c4aV,c4xp",
                    8052: "n3or,n2SN,orUP,n3zN,c4Iz,n3QF,hzW3,hAxx,hztX,hzKV,c4aP,c3W1,5chH,9kux,n3iP,3QQV,6AlX,n321,c4TP,5dqV,5d4p,c4xp,c4TV",
                    "86a8": "oqWX,5ct1,5chN,6ACP,5ct1,3QWr,9kjh,5cV3,aIK1,c4D1,orE1,3RDr,aIK1,ds9r,dsSx,iYkP,iXP9,dr+b,iXyh,iXbN,drDN,dr+h",
                    8703: "orUP,oqX1,9k81,6AaN,5dwr,5ct1,3RDr,6BjV,dsSr,dsMV,eQuF,hA5p,eQAb,gcyV,iXDP,ePYV,eQ2x,gc19,iXsz,iYkV,lI1b,lHeF,5c+H,eQdN,9l0b,c4Oh,c45h,9kjh,9l0h",
                    8764: "pW9t,5jOz,5jCx,6MS5,5jOz,9ILf,5k4H,8gK1,8gm3,bcJh,bcDh,k0B1,k06N,k0T9,k0oV,cFcL,bclj,orZZ,lvON,mYid,orpZ,5kgD,5kQP,fE0j,fDsd,5kgJ,e7Yf,j/WR,j/yN,e7Ah,e7Yl",
                    8816: "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,3QWr,3R5N,5dfF,7ZcV,7YH9,6ATH,5d4p,3Rsh,3RDx,aJ4r,aIyN,iXUN,iYqx,kjTj,gbXx,aIPz,kk2F,dskH,dsMV,gcyP,gc6N,orsH,lHGN,lI1b,orPh,n3or,n45x,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7b1e": "j/yH,pWlB,mYc7,mXK3,pX5N,k0j3,mYSj,mYul,k0MZ,mYAh,mXQ3,k00X,cEyt,h4dJ,cFuN,cEsD,bcPd,e8Cx,9Jpr,5kEN,5jUF,9IFp,9Jpx",
                    "7bea": "kj4H,or0F,n3or,n321,kjNH,orJF,n45r,n3L1,kkdP,n3QF,n37z,kjwV,eQ83,iXP9,dsf3,aIt9,9kFN,9l0h,aIVh,dsHb,eQFV,ePI1,6Am1,3QoN,3QQP,5cPx,6AIx,6B31,5da1,3RmF,3RDx,5dwx,aI6z,c4D1,hzW3,hAmh",
                    8233: "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,orJz,5dfF,c4rH,c4Zx,iYqr,5dwx,5c+N,iXUN,iYqx",
                    "7cc7": "3QFz,or0F,gc6H,3R5N,n3Fj,eQ2x,lHXz,lI6V,hArV,hA5j,hAxx,c4xj,gcnF,dsMP,dsw1,9kLj,9lbx,dsHb,6Beh,3Rh1,3RDr,6Beh,aIhP,c45h,drOX,7Y3N,gbpH,gbRV,lGZH,iXn1,iXyb,lHvx",
                    "8c47": "q1OH,q1ih,q2Cz,q1/L,5rY1,q2j7,5sm7,5rEL,5qXb,5rrN,a9ML,6/ev,6/rn,aaaN,eXlX,lgDx,lgdB,eWY5,eXm1",
                    "91b5": "n3or,n2SN,n3db,c45h,c4aV,7YvP,7Y9p,aHXj,c3W1,n321,n3/P,n3QF,kk2z,orJF,gccj,iYfh,iY3X,hAb1,gcnF,gcEx,hAxx,iYw3,kkp9,kjNN,5c+N,3R09,3Rsb,5dqV,9l5V,c4IF,dsHb,aIK1,aIEp,aIVb,7YY1,9lbr,aJa9,5dC3,7ZcV,9l5P,5da1,dsqj,dsSx,iXJr,5cPx,5chN,iXbN,iXJx",
                    "8e1d": "6MG3,iz3p,8g3R,5jID,5jCx,e7Gh,5jID,e82l,e7Sp,bcVj,bc97,9Jpr,5kWV,5kax,9Jdv,mYuf,3Rl5,k0cT,k0N3,oqRN,or7R,iz9l,iyTn,oqRT,mYMd,h4NP,h4dJ,mYcd,mYMj",
                    "8c98": "hziH,or6h,gbAX,hzop,hzFb,kjg1,kjwP,drJp,drDN,gbGz,ds3V,5cJV,3QLh,5cyF,5chH,5cnp,aIhV,9jYH,9k2p,dr+h,eQFP,eQ89,9kA3,9lbx,aIJX,9kR1,3QWx,3RDr,9kR1,lHB3,lIcx,oryj,kjTp,kk8b,orPh,c4m3,c4TV,hArV,hzW9,c4m9",
                    "9f86": "iz9f,pWlB,iyNb,izln,mXJZ,iyZj,mY61,mXW5,orvZ,os49,h4TV,fE0j,fDWn,h4BN,fDyd,izJB,orI5,6MY1,e88n,8g9N,5jID,5jCx,e7Ah,bbH1,e7Sp,fD49,bc35,e7Sp,cFcF,5ksL,5kWV,cFGV,cFcL",
                    "9c8e": "mXV/,or1V,orjN,mYcd,orNX,mYul,iz/t,k0T9,lw4V,luSD,iyNh,e7Gh,k00X,h3Xv,h4pL,cF0J,6N2d,9Izd,9JvD,3RJ3,3QoN,6Nwh,cFuT,cEyz,6MA3,6Nwn",
                    "9cbd": "iXbH,or0F,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,9kLj,5cPx,5dwr,9kWF,3RgX,c4D1,aJ4r,aInx,dsSr,dskN,n3zN,kkjr,kjCx,orPb,gcth,gci1,orE1,9koP,hzKV,hzop,9k2p,9koV",
                    "97ab": "iXmX,oqX1,or6b,iXyh,iXsF,3QFF,lGZH,lHvx,7YBr,7Y3N,c4Ob,c4rN,eQdH,eQAh,hArP,hzW9,kjTj,iY41,oryj,iXJx,lHGH,lIcx,5dwx,3RxV,3Rsh,5dfF,gbvj,gbRV,c4aV,c3Qp,gbvp,9kFH,9l0h,6Beh,6ATN,9kFN",
                    "9aef": "orhr,oqX1,gbB1,drJp,ds3V,ePTh,gbpH,gbXx,iXDP,iXn1,lH8X,lHpV,lHGH,lHMp,n3QF,orPh,lI6P,iY9F,hA5p,hz/N,dskH,dsqp,gcyV,hAxx,5chH,5dwx,3QFz,aI6F,aIPF,3RmF,3Rh1,7Ykz,7Z1F,c4m3,5cV9",
                    "9f2c": "n31X,lGZN,gbpN,gbXx,lHvx,lHkh,iXyb,iXJx,iXbH,iXn1,drDH,3QoN,3Qup,3QLb,3QFF,drUF,aI6z,aIch,aHRH,aHXp,7Y9j,7Y3N,7Yqb,7YkF,5cV3,6AIx,ds9x,aJ4r,aIyN,orJz,5dfF,5c+H,5dwx,gcEx,gc6N,5c+N",
                    5345: "or0z,9kdF,3QoN,orn3,3R09,3Rmz,orJF,gbpH,gcEx",
                    "4f74": "orhr,gbvp,iXsz,3QFF,3RxP,n3/V,n4b3,n3ox,n3zH,9kFN,9kur,aJa9,eQFP,eQdN,iXUH,iYkV",
                    "8ba6": "lv2z,oqXP,h3zr,h3RF,6MG9,6MM5,9IXn,mYuf,3Rl5,mYc7,mYMj,fE6j,fDm7",
                    "90d0": "hziH,orbV,hA5j,n3iV,gbAX,gc19,c4rH,c3KN,c4gr,5cnp,6AO9,5c+H,7YBx,3RgX,n3L1,n45x,hAxx,eQAh,c4Zx,7Zix,6BjV,6Beh,9kR1",
                    "581e": "oqWX,7Yf1,7Y3N,9kjb,7Yf1,gbpH,gbMh,kkdP,kjwV,orPb,gcth,gccp,oryp,n3or,ds9x,dsSx,3RgX,c4D1,9kWz,5dwx,9kLj,5cPx,5cJV,aJ4r,aIhV",
                    "836d": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbGz,c3KN,c3/F,ePYP,7Y3N,7YvV,3QoH,5cJV,3RDr,3QWx,eQoX,3Rh1,eQ83,eQFV",
                    8548: "n45r,n2SN,oryj,lHMp,lHpP,orbV,kjaj,kkdV,ePYP,kjwV,kjTj,eQjp,aI6z,aIPF,5dwr,5chN,3R03,7YH9,hAmb,eQAh,ePI1,hzu1,hAmh,dsBz,7Z1F,7YkF,drUF,dsBF",
                    "64c0": "oqWX,5ct1,3Qup,5chN,drUz,aHRN,iXbH,iXsF,lHB3,lHkh,hzQr,orhx,ePTb,eQ89,3QWr,c4gx,eQuz,3RmF,eQoX,eQAh,aIEj,aI+V,9kjb,9kFN,eQdH,kk2F,orJF,eQLr,kk2F,hzW3,c4m9,c45h,hzFh,hzW9",
                    5533: "n3Fj,orsN,hzKP,hArV,lI6V,lHpV,7YvV,3QFF,3QWr,7YSp,eQjp,dsHb,eQuF,c4gr,c4Zx,3RDr,9kR1,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5e61": "3QzX,oqX1,aI6z,9kjh,iXyh,iXbN,9jYN,orPb,lHvx,c4CX,n3L1,5d9X,aIK1,7YH3,7ZcV,gccj,c4gx,c4Zr,gcnF,hzQr,hAxx,kjI3,iXUN,iY9z,lI6V,5dqP,aI+V,aIt9,5cV9,5dqV",
                    "731e": "n2SH,kjlF,6ArF,3Qup,5chN,ePNz,c3KN,hziH,hzop,or6h,oryj,n3Fp,hzKV,gbMh,hAgz,hzW9,9kLj,hA5p,dsMP,ds3V,n3Fj,gcEx,9kur,5cPx,5dlh,9l0h,9kux",
                    "609d": "3QzX,oqX1,5dwr,5cEh,iXJr,iYfh,9kur,9l0h,iXsz,gbMh,drDH,iXbN,eQ2r,n3ox,n3Wh,eQAh,n3Fj,5d4p",
                    "6d07": "luSx,oqLN,fCU1,iyNh,3QuN,cEEF,9IXh,e8qv,k0o/,h4HN,h47D,9JBt,e8wB,5k4B,mY0b,mYSp,5kWV,5k4H",
                    "6fe1": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,3QML,9ILl,9JBz,5kQP,3Rx7,9Jjv,5kyR,5kgD,9J1t,cFcF,9Jdv,cEKv,cFGV,orBV,fDEf,ordR,or+3,izrn,izln,fDm1,fDsd,fDWh,fDQh,izPr,izVD,h4TP,lw4V,lv8B,h3XB",
                    "59d2": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,lHB3,6AO9,6ATN,9kR1,3R03,3R5N,5da1,7Z7h,n3Wh,eQoX,hA5p,5dwr,7Z7h",
                    "7ec2": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,3QML,fDEf,orB/,lv+J,mYGn,izlh,iA5F,cF6J,cFuT,9JvD,3R93,8grV,5kEN,3RD3,3RJ9",
                    7455: "or7L,oqLN,h3zr,h3XB,6MnX,6MA3,8fZR,oqXJ,6MA3,izlh,izDv,orB/,orjT,3QYT,9Jdp,9IXn,e8qp,e88n,e8Cr,e8UF,9JHF,3Rl5,3Re/,3RJ3,8gE1,bcDh,izPr,iA5F,os49,orO1",
                    "68e3": "3QzX,oqX1,6Axb,6ACV,7YH9,aIEp,ds9r,c4m9,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN,iYqr,iXJx,lHvr,lI6V,gcyV,gbXx,oryj,5d4p,3R5N,5cV9,5dwr,5dqV,aIK1,c4TP,9kWF",
                    "8ece": "orZZ,oqRT,iyZd,izVD,9J1n,pWDJ,cEmr,cFGV,lvUN,fDWn,fC+3,luYz,lvUT,9Jpr,5kEN,5jUF,9IFp,9Jpx",
                    "6bfd": "or0z,n2SN,hziH,iXyh,dr+b,c3KN,9koP,6AO9,6BjV,5dwr,3RDx,3QFF,5ct1,n321,n3iP,n3u9,iXP9,ePYV,eQ89,9kA9,6ACV,6Axh,aJ4r,aIyN,orJz,7Z1F,lHMj,lI6V,gcyV,gccp,iYqr,iXUN,dsqj,dsMV",
                    "6b43": "n3iP,lH3p,hziH,hzQx,ePHX,drDN,5chN,5cPx,ds9x,ds3V,9jYH,9kux,lHez,5cyF,hz/H,orE1,kjTj,kkjx,iYqx,hArV,hAgz,aIPF,3R5N,3RDr,aIPF",
                    6059: "n3iP,or6h,orDX,n3Fp,lH3j,lI6V,hAmb,hzu1,drJj,dsMV,5chH,9k81,9kur,6ATN,aIcb,5cEh,3QQV,3Rh1,5dfF,6B8F,9l0b,6Bpx,lHB3,dsf9",
                    7780: "oqRj,orbV,n3iV,kjlF,iXyb,lH91,gbRP,hzQx,iXJx,iXbN,ePwH,hzu1,iXsz,ePNF,drP1,9kWz,9kdF,6Arz,6B8F,dsf3,dskN,eQp1,iYkV,lI6V,lHMj,lIcx,orDX,kjNN,iY3X,hAb1,dsMV,dsSx,c3/z,c4IF,3RmF,3QFF,c3/F",
                    "94f4": "gbpH,or0F,kjwP,kjg1,n3or,kjI9,lHMj,lI6V,kk8h,gccp,gcEx,5dwx,3RxV,5dlh,3R5H,9l0h,gcth,gchX,aIK1,7YMN,c4rH,5cPx,aHRH,aIhV,gbMb,gbB1,gbGz,3QFF,6ACV,hzQr,eQ89",
                    "7a70": "orbP,lGZN,n3KX,orE1,n3or,n45x,3QFz,n37F,9kLj,3QQV,7Z1z,6B8F,3RxV,3RDx,5dlb,6BjV,5d9X,3Rbp,3R5N,7YMN,gc6H,9kFN,9l0b,gcth,9kur,9lbx,c4TP,c4m9,eQ2r,eQLx,c4aP,dr+h,ePHX,9jYN,hzKP,hziN,hzW3,kjI9,kjTp,hA5p,hzW9,hAgz,kk2F,kkdV,hArV,hAgF",
                    "762d": "n3Fj,oryp,n45r,n37F,7YkF,3QoN,7YH3,5cJV,5dqP,7Z1F,5cV3,3R5N,5d4p,9kLp,9koP,9lbx,c4Ob,c4m9,kk2z,eQuF,eQdH,kjNN,kkjr,kjwV,hzoj,kj4N,c3KH,gbGF,eQFP,hArV,hzQx,eQ2x,eQFV",
                    "507e": "iXbH,or0F,3QzX,kjg1,3QLb,3QQV,5cV9,7YSp,aIEp,3RDr,6B31,7ZcP,dsMV,ds3V,7YvV,hAxr,hzFh,iYfb,gcth,gbXr,iXJx,oryj,iX+p,lHvr,lI1h",
                    "8c07": "kjfX,n2Yp,gbpH,gbB1,5ct1,7Yqh,dsqj,3Rbp,eQoX,hAmh,iYfh,eQLr,hAmh,eQdH,hzQx,iXJx,ePTb,hzQx,aIcb,aInx,aJ4x,lHkb,lIcx,orsH,n3Fp",
                    "77cd": "kjrb,kjg1,lH8X,lHkh,lHRX,lHGN,kjNH,kjZ1,c3KH,gbGF,aI0X,ePI1,9k2j,9l5V,5cJV,3QA1,3QoN,7Yqb,3Rsh,3RDx,aIcb,aJ4x,c4Ob,c45h,dr+b,dsHh,eQFP,ePTh,gccj,eQjp,aIEp,oqWX,orhx,hzQx,hzu1,oqX1,orsH,orPh,hAmh,hz/N,orsN",
                    "82ae": "lIcr,lGZN,iX+j,kjTp,oryp,iXDP,orbV,hzW3,dsf9,9kjh,9kdF,9kQX,dsf9,5d9X,3RmF,3Rsh,5dqV,eQFV,ePCp,3Qup",
                    8438: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,iXP3,9kA9,6ACV,3Qup,3QoN,9kA3,6AZp,3RxV,3RDx,dsqj,dsHh,drOX,ds3V,hzKP,gbMh,gbB1,aI11,aIVh,gcth,gccp",
                    8037: "lIcr,lGZN,orn3,lHB9,gbGF,ePCp,ePwN,3Rmz,eQuF,ePNF,5cyF,6Bpr,5cPx,5chN,9kWz,9kdF,c3/z,c4IF,eQLr,eQFV,gcnF,lHB9",
                    5494: "3Rbj,oryp,c4CX,7ZcV,gbXr,gcEx,kkdP,kjTp,lGZH,lHkh,c45h,c3KN,lGZN",
                    "55f2": "lHvr,orsN,lHGH,iY9F,hArV,hAxx,hzKP,hzQx,iXUN,lHXF,orJz,lI6V,hA5j,ds9x,ds3V,eQ83,eQFV,aIyN,aIhV,c4xj,dskN,aIPz,7YSp,6AO9,6AIx,9kQX,9lbx,7Zix,3Rbp,3QWx,5d9X,7YSp,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5d06": "8fNJ,pW9z,5kWP,5j+B,e8qp,5ksL,e88h,e8ID,k0AX,h4NP,h41B,k0cZ,j/WL,8fZR,8fBN,j/yN,lveB,mY0b,mYSp,lw4V,pWPF,orI5",
                    9987: "gbpH,oqX1,hztX,3QA1,6Axh,5dwr,5cJV,aInr,aI+V,kjTj,ePYV,eQLr,iY9F,orDX,eQp1,lHvr,lIcx,kjaj,kjwV,hzFh,7ZcP,dsMV,ds9x,7YBx,7ZcV",
                    "95f1": "n31X,oqRp,n3db,n45x,5dwx,3RxV,3Rsh,5dfF,9kLj,7YY1,7Z1F,9l0h,dsHh,drUF,kjI3,6AO9,gbMb,gcnF,iXsz,iYfh,3Quj,kjap",
                    "6ddd": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,3QGP,5j+B,mXW5,mYcd,3R2Z,3QYT,5k4H,bcf7,bbZ5,h3Xv,h4dJ,cFoH,mYAh,cFcF,cFAP,mYMj,mYof,5ksL,3Rl5,3RJ9,5kWV",
                    "8fe9": "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,dsBz,9l5V,hAmb,lIcx,lHB9,hzFb,orn9,iX+j,7YSp,6ATN,7YH9,7Yqb,dsf9",
                    "5ab2": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,lHB3,oryp,gchX,iXUN,iY3X,gc6N,aIt3,3R09,3R5N,5d4p,5dwr,3RDx,3Rsh,5dfF,aIPF,6B8z,9l5V,9kA3,9kLp,lHvr,ds9x,dsHh,lI1h,lHvx",
                    "7f1c": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,5c+H,3QQV,3RDr,5dfF,7YvP,7Zix,7YH3,iXP9,iYfh,7Z7h,aIt3,aIVh,dsHb,dsf9,gc13,gcth,orDX,iX+p,lHvr,lIcx",
                    "67a8": "3QFz,or0F,6B8z,3Rbp,3R5N,orsN,hAaX,lI6V,eQ2r,eQLx,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,dsBz,aIPF,3RDx",
                    "698d": "3QzX,oqX1,5cEb,7YBx,n3ox,n45x,kkjx,kjCx,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,dsBz,hAgF,gcyP,eQAh,eQoX,gccp,aJ4r,aIyN,7YMH,7Zix,3R5H,dskN,dsSx,5dwx,3RxV,5dlh",
                    6635: "fD9/,fCO1,fDE9,6Nef,5kyR,5kWV,8gW9,9Jdp,fE0j,3QAJ,3QGV,8g9T,orjT,orU7,k0H7,k06T,mXxX,mXW5,8fZR,8fBN,mXy1",
                    "80ad": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QWr,iXJx,iYqx,5dwx,3RxV,5dlh,9l5P,dsw1,9kA9,orDX,dsw1",
                    "70e8": "or0z,7YkF,3QoN,3QWr,7Yqh,dsvX,3Rh1,aInr,aJ4x,ePNz,hzKV,c3Qj,gbvp,oryj,kjCx,orJz,gcnF,eQAh,eQLx,gcEx,hA5j,lI6V,n3zH,eQdN",
                    "782c": "orgb,oqSl,guXH,or3j,mRkB,q2j7,lgQp,lhxZ,5rRD,gvLF,gwg3,5s95,5rEF,5smd,i5H9,i5+N,8C4x,8BM/,i5Hf",
                    "948b": "gbpH,or0F,gbRP,gbB1,aHRH,aInx,gbGz,3QFF,6ACV,orDX,3Rh1,kjfX,kjCx,c4Zr,hAgF",
                    9534: "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,hA5j,eQ89,orn9,kjTj,kjI9,lI6P,iY9F,hAxr,eQLx,eQAh,gcnF,orJF,aIyH,dsw1,7ZcP,7YH9,aIt3,5cV9,5dqV,aI+V,aIt9",
                    "9e4e": "kjaj,or6h,hzQr,hziN,kjlz,ePNF,9jYN,9kux,9l0b,9kFN,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,eQdN,lHGN,lI6V,hArV,gcth,gcnF,kjYX,iY9F,orJz,lHMp,3QLb,c45h,kj4H,kjCx,eQ2x,ePwN,kj4N",
                    8882: "lHez,oqX1,kj4H,kjwV,iXDV,c3KN,3QFz,gbGF,aInr,dr+h,ePYV,iXUH,iYkV,c4TV,c4m3,c4Zx,orDX,c4D1,3QWx,3RDr,aIPF",
                    "7f54": "k06N,lv8B,lvOH,k0o/,iyZd,izVD,fDyd,h4dJ,e7Md,e8ID,e7Yf,8fZR,8gE1,5kKN,3RD3,5kWV,os49,oqLN,3QoN",
                    "52f9": "gbpH,or6h,lHez,lIcx,5dwx,3RxV,3Rsh,5dfF",
                    "963c": "aHXj,9k81,9kdF,aIch,ePTh,hzu1,kjrh,n3dh,n2SN,3QoN,kjCr,kkjx,hzKP,orn9,9l5P,9kFN,eQdH,eQFV,3R5H,kjNN",
                    "576d": "oqWX,6Am1,6AaN,7Yqb,6Am1,3QFz,6ACV,n3iV,n3Wh,iYfh,iXDV,hziH,hzFh,gc6H,5c+N,3Rbp,3RDx,6Bpx,aIyH,dsMV",
                    8351: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,iXP3,9kA9,5cEh,3QA1,3QoN,3RDr,3Rh1,5c+N,7YBx,6B8z,6Beh,7ZcV,9l5V,9k81,c3W1,c4Oh,eQAh,ePI1,hAxr,hziN",
                    "84c1": "n45r,n2SN,oryj,lHMp,lHpP,orbV,kjI3,ds3V,aI6F,9k2p,9jYN,dsSr,drDN,gbAX,gcth,iYkP,iXhp,c4CX,aIPF,9l5V,9lbx,aIhP,aIEp,7Z1z,7YkF,6AZj,5da1,3Rsh,3RxV,aIt3,3R09,6ACP,5cEh,3QA1,3Qup",
                    "63bc": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,iYqr,iXJx,kjYX,lHS1,gchX,hAb1,7ZcP,c4TV,c4m9,7YH9,9kQX,7YY1,5c+N,3QWx,3QQV,3RDr,5dlh,7YY1,eQFP,n3/V,n3u9,eQ89,eQFV",
                    "54de": "oryj,iXJx,iYkV,hArP,lI1h,3RgX,gci1,9kur,9lbx,gc13,c4aV,dsMP,ds9x,lGZH,lHkh,c45h,c3KN,lGZN",
                    "567c": "gbRP,gc6N,lHGN,lHpV,9kjh,5ct1,aJ4r,aIK1,eQAb,3Rsh,eQjj,eQR9,hAaX,gcnF,kjYX,kkjx,orJz,lI1h,gcyP,hAxx,kj4H,kjlF,aI6F,aHRN,kj4N,aIhP,aIyN,5c+N,5cJV,aIhV",
                    "5fbc": "kj4H,or0F,ePwH,iXsF,3QzX,hzu1,3QLb,5cJV,ds3V,dsqj,drUF,aIhP,aIyN,5c+N,3R09,3RgX,9lbx,kkjx,kjZ1,hA5j,orJF,iXyb,iXUN,orn3,lHpV,ds9r,eQ2x,eQuz,7Z1F,3RDx,gc6H,gbMh,lHkh,lHGN,gc6N",
                    "5fe4": "3QzX,oqX1,kjYX,3Rh1,kjI3,kkdV,gbXr,orsN,dsSr,ds3V,iXsz,gbMh,drDH,iXbN",
                    "6c68": "luYt,oqRT,iyNb,fCU7,cEEz,3QuT,e8Ot,e88n,5kQJ,mYMj,mY67,5kaD,5kQP",
                    "6ec2": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QQP,3QWx,6ATN,c4rN,eQjj,dsw1,ePYP,gbRV,gcEx,eQLx,c4aP,c4Zx,9kFH,9l5V,5dqV,3Rsh,3RmF,5da1,iY9z,hAb1,kjwP,kkdV,hz/H,iXP9,orsH,lHMp",
                    "5f56": "or6b,kjlF,kk2F,hA5p,kk2z,n3QF,n3dh,hAxr,hziN,hzQr,ePTh,drP1,drDN,gbXr,dskN,6ATN,3QWx,5cJV,5chH,5cnp,6ArF,7YvV,c4rN,eQ83,aIch,9k81,9k2p,c4xj,5dqV,5dwx,aIJX,dsHh",
                    "9a85": "n2SH,n37F,ePNF,kjaj,drJp,dr+h,5cEh,3QFF,3QA1,5cnp,aI6z,9jYN,aJ4r,aInx,3RgX,dsw1,gcEr,eQLx,eQAh,gcnF,orJF,iXDP,orsN,eQ83,iXP9,lI6P,hA5p",
                    "73b7": "or7L,oqLN,h3zr,h3XB,6MnX,6MA3,8fZR,oqXJ,6MA3,cFcF,pWPL,k0T3,k0o/,cFuN,5kKT,5kaD,cEWD,cFuT",
                    6883: "3QzX,oqX1,3QLb,7YH9,eQ89,ePYV,kjI9,n3u9,n3dh,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,9kjb,3R5N,3RDx,7YSj,7Zix,kk2z,7Z1F,orUP,lHMp,gc6H,gcEx",
                    "6b8d": "n3iP,n2Yp,n31X,hzu1,c3KN,hztX,hzKV,ds3V,6ArF,3Qup,gbvj,c45h,aJ4r,aInx,eQ83,eQFV,c4D1,5da1,3Rbp,5c+N,kjI3,hz/N,orUP,lHvx,hArP,lIcx,kjYX,hAgF",
                    "89c7": "drOX,oqX1,iXDP,iXn1,hA5j,9kLp,5cPx,3QLh,3QFF,aInr,lHvx,lI1h,aIVh,9kQX,5da1,3RmF,3RDx,6Bpx,6Axb,dr+h,drDN,6AaN,6Axh",
                    8153: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,n3zH,3R5N,3Rmz,orJF,9kWz,9lbx,9koP,9kFN,eQdH,eQ2x,eQFP,eQuF,kk2z,kkjx,kjwP,kjNN",
                    6248: "n3zH,orn9,iXmX,iYkV,lI6V,lH91,6Am1,3QoN,5dwr,3RDx,3QWx,5cJV,aIhV,aI+V,7ZcV,7YvV,aIEj,7YSp,dsHb,gcth,gbXx,ds9x,dsHh",
                    "9f9b": "iXbH,iXhp,lHpV,orn9,lHMp,iYkV,iYqx,kjTj,kjwV,c4Iz,dsw1,aHRH,aJ4x,ds3P,7YvV,5cyF,3Qup,3QoN,3QQP,3QWx,7Z1F,6Bpr,3RDx,3Rbp,5c+N,9kFN,hAgz,eQuF,ePNF,hzzF,hAgF",
                    "94ca": "gbpH,or0F,kjwP,kjg1,orDX,lHXF,hzQr,kjI9,kkjx,iYqx,hArV,9kLj,eQFV,gccj,5d4p,3Rh1,3RDx,6Bpx,6ACP,3QFF,gbGF,gbAX,gbRV,aIhP,aHRN",
                    9568: "gbpH,or0F,kjwP,kjg1,kkjr,kjI9,n3/P,lI1h,lHMj,n3zN,dsqj,kjTp,dsSr,dsf9,dsHb,kk8h,hAxr,gcyV,gc6H,hzW9,gbAX,gbRV,c4aP,c3KN,7ZcP,7YMN,6ACP,3QFF,gbGF,aIyH,aI+V,5dqV,5c+N,aIyN",
                    "75c2": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,5cEb,6AIx,kjCx,hzKP,hz/N,6ATN,5cV9,6AIx,gbGz,c3KN,kj4H,hzop,5d9X,hAb1,hArV,gcyV,5dqV,5da1",
                    8014: "3QFz,or0F,aIcb,7YBx,6AaH,c3W1,ds9r,drDN,eQLr,eQ89,hzoj,hzKV,lHvr,lGZN,lHGH,lI6V,hAgF,5dfF,3Rh1,5d4p",
                    "989a": "os43,orB/,h3Lt,h47D,e8en,e7Ah,e7Yf,9Itn,9IXn,6MY7,3QMR,5jUF,3R2T,3R93,8gE1,fDQh,3RJ3,8gE1,9JBt,k0N3,k0o/,9Jdv,orZZ,k0B1,oqRN,or1V,j/QV,j/ET,oqRT,ordR,orpZ,k0cZ,k00X,ordX",
                    "86af": "6Arz,or0F,5chH,6AIx,9koV,3RDr,3QWx,eQAb,3Rsh,eQdH,eQLx,3R5H,kjNN,orUV,iXJr,ds9x,drDN,iXbN,iXJx",
                    8729: "oqWX,6Am1,6AaN,6AlX,7Yqh,9kjh,3QFz,7YBx,n3ox,n45x,5dwx,3RxV,3Rsh,5dfF,eQdH,eQAh,hArP,hzW9,kjYX,eQp1,7Z7b,c4Oh,c4rN,7YMN,7Z7h,iXyb,dr+h,drDN,iXbN,iXyh",
                    8783: "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,3R03,6AZp,dsqp,dsSr,dsf9,aIEj,aI+V,5dqV,3Rsh,5dfF,gchX,eQuF,eQFP,gcEx,hAxx,hzW9,eQ2x,kjNH,iX+p,lIcr,lHB9,iYfb,kkdV,orDX,n3QF,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7b04": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iXUH,orPh,lHez,iXDV,iYkP,lHXF,gbvj,gcyV,c4Zr,c3KN,3RgX,gci1,3Quj,7Yqh,gbMh",
                    "7bac": "j/yH,pWlB,mYc7,mXK3,mYSj,mYul,k0MZ,mYAh,pX5N,k0j3,k00R,mXQ9,h41B,e82r,e8qp,h4pL,fCU1,fE0j,cF0D,8fZR,6MA3,6Mu7,bcVj,bbB1,8g3R,8gE1,5kEN,5k4H,8g3X",
                    "7c40": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,iXsz,5cyF,3QA1,5cnp,7Y3H,7Y9p,c4aV,ePwH,ePYV,iX+j,hz/N,hzW9,hzQx,c4gx,c4m9,eQjp,c4CX,eQAh,hAmh,hAgz,hAxx,dsSx,c4TV,5d9X,aIK1,7YBr,7Zix,5dwr,aJ4x,aInx,5cPx,5dwx",
                    "7f9f": "lH8X,oqRp,orbP,lHkh,kj4H,kjCx,gbXr,gbpN,c3KH,c4gx,3QoH,7YkF,kjlF,lHGH,lI6V,kkdV,dskN,dsSr,hAgF,c4xj,c4TV,5dfz,c4IF,5c+H,5dwx",
                    "7ff3": "orn3,oqRp,ePCp,eQ89,hzQr,gc19,iXmX,iXP9,gbGz,hzFh,iXDV,lHpV,lHez,lHvx,kjfX,n3dh,lHMj,n3L1,orE1,orUV,lI6V,lIcx,iX+j,iYkV,dsqp,dsSr,hAb1,c4rH,c4TV,5dqV,3Rsh,3RmF,5c+H,5d4p,aI+V,9kLj,7YY1,3QLb,3QQV,5cPx,c4gx,c3Qp,aInr,5ct1,5cnp,9k7X,7YkF",
                    "917d": "orjN,oqLN,os43,orw3,fDWh,orU7,fE6j,fDyj,5kmP,3R2Z,8fHN,8g3X,bbH1,cEyz,oqXP,or7L,cEKB,cEQH,orH/,fDKl,izDp,k0j3,k0T3,iz/z,5kax,k06T,j/yN,5jCx,5kaD",
                    "8dda": "6MG3,iz3p,5jCr,5jID,8g3X,e7Sj,e82r,5jIx,e7Gn,3QSR,6N2d,orpZ,orB/,5ksL,3R93,3Rk/,5kEN,orO1,or+3,5kQP,3Rx7,fDm1,fE6p,oqRN,or7R,iz9l,iyTn,oqRT",
                    "8e4a": "orPb,n3ox,iYfb,lI6V,kjTj,iY41,iXUH,kjI9,dskH,gci1,dsHb,dsf9,9kLj,eQFV,9lbr,9kA9,aI+P,7Zix,3RgX,9kR1,6Beb,3RDx,3QWr,6ATN,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,6Arz,hzzF,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "92ae": "n3u3,orhx,eQjj,lHMp,lHpP,ePYV,gbvj,iXsF,lIcr,lGZN,gcyP,iY9F,9jYH,9k2p,dsf9,9l5V,9lbx,6AlX,6Beh,3RDr,3QoN,5d9X,3Rh1,3QLb,5cEh,9kA3,3R09,9kjb,9kR1",
                    "9ca8": "n37z,oqX1,lH3j,kjg1,hzoj,hzu1,kjrh,lHB3,kjCx,iYkP,lHXF,iY9z,hz/N,hzQx,oryj,iX+p,aHRH,gbMh,ePNz,eQjp,c4m9,6AO9,9k7X,9l0h,3RDr,3QoN,6Beb,c4Oh,c3W1,6Am1,6Beh",
                    "9cd3": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,7YXX,7YBx,3RgX,6Beh,orPh,iY9z,iYqx,5dwx,3RxV,hz/H,3R5N,lHvr,lHS1,orn3,hzW9,hA5p,oryp,9kjb,hzFh,hziN,9jYN,9kjh,eQoX,c4D1,c4gx,eQ2x,eQp1",
                    "9ad1": "luSx,lv2F,h3RF,fDm1,h47D,h3zx,fCO1,h3Fx,oqRT,ordX,h41H,orBV,lvCL,lvOH,orO1,fDs7,k0o/,izDp,iA5F,5kWV,3RD3,8gK1,6NCj,6N8j,fDKf,6Nkl,bbH1,bc3b,8g3R,8fHT,3QML,5k4H,e82r,e7Gn,3QuT,lvqD,orpZ,or+3,lv+P,lvqJ,e8Ix,bcJn,bclj,e8kz,e8ID",
                    "80e4": "oqXJ,6MA3,3QoN,3QML,cEKB,cFcL,5ksL,3R93,3R2Z,6Ne9,6MM5,9ILf,9Jdv,h4jJ,fDEf,fDa5,lvwP,k0cT,j/WR,orpZ,orNX,5kEN,3Rx7,3RJ9,6NIp",
                    "4fdc": "3QzX,kjg1,5c+H,3Rbp,3Rh1,6Beh,9l0h,9kux,c4xj,9kA9,c45b,c4Zx,iYkP,iXDV,oryj,gccp,gbRP,lHpV,lI6V,gcyV,iXbH,or6h",
                    "8bdc": "luYt,oqRT,h3zr,h3Lz,5jOz,5jUF,8g3X,3QSR,9J7z,fDyj,fDKf,5kyR,3Rr1,3RJ9,6NIp,fD9/,fE6p,mY61,iz9l,lv+J,lvkD,fDE9,orB/",
                    "912f": "n3KX,n2SN,orn3,n3u9,n37z,or0F,aIhP,n3iV,aHRH,aIK1,c3/z,drP1,dskH,c4m9,ePwH,eQp1,hz/H,hzop,kjaj,kjNN,3Rmz,n3QF,n45x,hAxx,eQAh,c4Zx,7Zix,6BjV,7Z7h,7Y9j,7YMN,5c+N,5cnp,7Y9p",
                    "828a": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbAX,hAmh,c4Zr,c3KN,3R03,gc19",
                    8398: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hz/H,iXP9,gbAX,gcth,ds3P,ePTh,eQoX,dsqp,c3KH,c4Zx,3R03,aIt9,7YeX,7Z7h",
                    "85b9": "n45r,n2SN,oryj,lHMp,lHpP,orbV,hzW3,kjI9,iXhj,iYkV,c3KH,ePCp,eQLx,c4TV,c3/z,c4IF,c4aP,9kjh,9kR1,aIEp,3R03,7YH9,3QoH,3RDx,6Beb,6Am1,hAaX,gci1,gbMh,hzFh,hAb1",
                    "53fb": "lgJR,lhxZ,5smd,3RJ9,3RCB,5s2H,3QId,3QOJ,5ryb,bN7d,oqLH,or9J,dkIZ,dkj1,oqLN",
                    "55be": "mXV/,pWfF,pW/H,mYof,lvqD,pWDJ,iz/t,lw4V,luSD,iyNh,fCZZ,iz3p,h4BH,h3RF,cF0D,k0cZ,cEmr,cFGV,9IFj,9Jpx,5kEN,5jUF,9IFp",
                    "5cb1": "j/yH,pWlB,e7Sj,lv2F,5kgD,e8et,9Jvx,5kKT,5jOz,9Izj,h4TP,fE6p,e8Oz,e8ID,izDv,mYij,pWJP,orU1,pW/N,lveB,lw4V",
                    5925: "3QLb,lHkh,c3/z,6AaN,7YH3,aIhV,eQuz,9kFN,c4CX,c4Zx,9lbx,5dfF,3Rbp,3R5N,aIEj,6Beh,gccj,gci1,hAmh,kkjx,lIcx,lHS1,orJz,iXUN,hAgz,kjTp,iXhj,iXP9,dsf3,drDN,lH3j,lHB9,gc19,gbvp,lH3p",
                    "60f4": "3QzX,oqX1,3QQP,aIhV,aI+V,5dqV,3Rsh,5dfF,aIJX,5da1,5c+H,aIyN,eQoX,aIt9,ePYP,eQLx,iXsz,gbMh,drDH,iXbN,oryj,hA5p,lI1b,hAmh,hzQx,lHvx",
                    "6d5e": "luYt,oqRT,iyNb,fCU7,cEEz,3QuT,cEWx,8g9T,3QGV,8g9N,3Re/,3RJ9,izDp,6Nef,bcr9,bcPj,izVx,orU7,orjT,izln,izVD",
                    "5bb8": "n3zH,orn9,iYkP,lIcx,lH3p,iXbN,hAgz,hzzF,9kdF,3QoN,c4Zr,c45h,eQuz,ePTh,c4aP,3QQV,3QWx,6ATN,aIyH,9kFN,5dfF,3RxV,3RDx,6B2X,9l0h",
                    "5a23": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,orn3,n3zN,n3KX,orJF,lHpP,lI6V,hArV,hzQx,ds3V,dsSx,9lbx,6Beh,7Z1F,lHMj,3Rbp,3QLb,9kA9",
                    "7ef6": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,3QLb,3QWx,5c+N,aIVh,c4Oh,c4gx,9kA3,6AZp,3RxV,3RDx,dsMP,gcEx,gbXx,ds3V,kjCr,iXP9,iY3X,kjTp,lI1b,iY9F,lHpP,orPh",
                    "74ba": "oqWX,n2Yp,ePCp,gbMb,or6h,orE1,gci1,n3or,n3zN,orPb,orUV,gcyV,eQFV,dsSr,eQLx,ePwN,drDN,iXmX,iXhp,lH3j,lH91,lI6P,lI1h,iYfb,iYkV,aHXj,aI+V,7Z7b,7Yf1,6B2X,5dfF,3QoH,3RDx,aIt3,3R09,hz/H,kjNN,kjCx,hzQx,hz/N",
                    6989: "3QzX,oqX1,gccj,3Rbp,ds9r,dsHh,9lbr,9koV,kk2z,dsSx,kjwP,kkjx,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,kjTj,ePYV,n3or,lHB9,lHRX,n3Fp,n3/P,lI1h",
                    6534: "gc13,orn9,kkjr,kjI9,gbAX,gcnF,eQuF,6ACV,3Qup,3QoN,dr+b,6AZp,3RxV,3RDx",
                    6555: "3QFz,or0F,3QWr,aIPF,dsHh,lI1h,lHGH,lIcx,iXP3,oryp,lGZH,lHvx,7Y3H,drP1,9kur,c45h,gc6H,dskN,aIEp,3RDx,iXhj,iXDV,ePYV,ePCp,iXhp",
                    "65c6": "lHez,oqX1,kj4H,kjCx,kjfX,7Yf1,3QoN,5cyz,3QLh,5cJV,ePYV,ePI1,oryj,hzQx,kkjr,kjNN,3RgX,hAb1,7Z1z,6Beh,7ZcV,c4TV,c4m9,6AO9,eQLr,eQ89",
                    "77f8": "ordR,oqRT,fCNX,or1V,h4TP,h47D,orpT,or+3,3Rk/,orI5,h3Lt,8fNP,8g3X,h41H,h3Lz",
                    "7f58": "k00R,ordX,orBV,k0o/,h3zr,h4TV,h4dD,e8et,8fTV,6Mu7,6Mo1,3R2T,cF0J,cFiL,8gQ3,oqRN,j/ET,k0N3,or+3,oqRT",
                    9513: "gbpH,or0F,kjCr,kjg1,kkdP,kjNN,n3zH,n3/V,hArV,hz/N,gbAX,gbRV,c4gr,eQ89,eQLx,dsSx,c4TV,aIyH,aIVh,9l0h,5d4p,3R09,3QWx,6ACP,3QFF,gbGF,c4aP,c3KN,9kFH,5dfF,3RxV,3RDx",
                    "9e31": "n3iP,lGZN,5chN,5cnp,7YkF,7YH3,5cV9,c3/F,kjlF,ePYP,ePCp,3QLb,5cyF,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,kjYX,iY9F,orJz,lHMp,9kFH,9l0h",
                    "7a79": "n3u3,orhx,iYkP,kkjx,lIcx,lH3p,iXbN,iXDP,gbGF,ePCp,ePwN,ePTb,eQp1,c4D1,c45h,9kdF,9l5V,6BjV,3RmF,3Rh1,5d4p,eQLr,eQFV,gcnF,iX+p",
                    "520e": "hziH,or6h,kjfX,kjI9,6AO9,5cPx,5cJV,6Axh,5chH,aIch,ds3V,iXJx,iXsz,drP1,aHRN,lHRX,9kR1,or+r,5dwx,3RxV,3Rsh,5dfF",
                    5107: "iXbH,or0F,3QzX,kjg1,aIyH,5cEh,9kLj,7YSp,3RxV,3RDx,5dfz,7ZcV,5d4j,3R5N,3R09,9kA9,gcEr,gbGF,n3KX,iY41,iXP3,n3u9,aIhP,ds3V,dsHh,aIVh,aIhV,iYkP,n3/V,n3dh,iXyh,iYkV",
                    "8c2a": "kjfX,n2Yp,gbpH,gbB1,5ct1,7Yqb,3Qup,3QQP,hzKV,hArV,5dqV,3Rsh,5dfF,gccj,c4xp,eQ2r,eQAh,kjI3,iXUN,iY3X,kk2F,lHkb,lIcx,orsH,n3Fp,7Z1z,c4IF,c4m9,7YH9,7Z1F",
                    "572c": "7Ykz,or0F,9kur,6AaN,iXbH,iXDV,n3/P,n3u9,hzQr,hAxx,hA5j,c4rN,c4TV,6BjV,3RmF,3Rh1,5d4p",
                    8307: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,hzQr,6Axh,5cyF,3Qup,3QoN,3QQP,3QWx,5c+N,9kWF,c4IF,c4gx,aIt3,9kA9,5da1,3Rsh,3RDx,ePCj,eQFV,gcnz,hAgF",
                    "845a": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hzzz,iXyh,hArP,hzop,iY3X,hAgF,9kQX,hAb1,9jYH,9lbx,9k7X,3QA1,3RxV,7YSj,6B31,5cyz,7YvV,hzFb,9kjh,eQoX,ePTh,c45b,c4D1",
                    6322: "or0z,5cyF,3QA1,5cnp,ePYP,aHRN,iXbH,iXDV,n3/P,lHvx,lHRX,hAb1,c4gx,c4aV,c4rH,7YMN,3QWx,c4Ob,3Rsh,hAaX,c4Zx,hzQr,hAxx",
                    "54d3": "lI6P,kjwV,orsH,kjNN,dsMV,dsSx,gcEx,iYfb,eQjp,dsf9,ds3V,aI+P,aIhV,aIJX,5da1,3RmF,3RDx,5dwx,3QFz,3QLh,5cPx,7YMN,aIyN,kj4H,c3KN,c3/F,kjlF,kj4N",
                    "562d": "lHRX,lHkh,iXDP,iX+p,orn3,iXP9,iY9z,n45x,gcEr,c4IF,9lbr,5dfF,3Rbp,3R5N,6Axb,6AZp,9koP,7YBx,7YMH,9kLp,kj4H,kjlF,c3/F,c3KN,kj4N,c4xj,gccp,gbRV,c4aV,c4xp",
                    "5d9d": "8fNJ,pW9z,5kWP,5j+B,8gK1,6Nqh,6N8d,8gfZ,h4BH,h4jP,fE6j,k0B1,mYul,orI5,lvOH,or+3,lw4P,izVD,ordR,orw3,lvwP,izrt,fDgb,lvkx,k0cZ,j/WL,8fZR,8fBN,j/yN,9J1n,e8et,e8ID,9JvD,9J1t",
                    "5eb3": "n3zH,orn9,lIcr,lH91,7Yf1,3QoN,aIEj,3Rbp,7Zir,7Yqh,aIt9,hz/H,c4rN,hzQr,kjNN,eQAb,ePTh,hzFb,c45h,c4Oh,hAmh,hzFh",
                    9616: "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,6Axb,6Beh,6ACP,9koV,9kWF,6B8F,9kLj,6AZp,6AO3,9kA9,kjaj,3Qup,iY3X,iXyh,gbGz,gcth,kjI3,gc19,c4aV,c4D1,dsqp",
                    "6e44": "luYt,oqRT,fCU1,iyNh,5jIx,e7Yl,3QGP,8g9T,orjT,os49,lw4V,lvkD,orH/,lvIR,e8Uz,e8kz,9J7t,9JHF,izxt,iA5F,5kWV,5kmP,izxz",
                    9051: "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,6Axb,6Bpx,eQjj,6AZp,ePTb,eQLx,aI+P,aIhV,kjwP,kkdV,orsH,n3u9,hArP,n3/V,n3iV,hzKV,hArV",
                    "5c15": "oqRN,orU7,k0o/,k0T9,fE6p,e8Oz,e8ID,fDQh,e7Ab,e7Gn,iz9l,or7R,e8en,5kgJ,3QYT,5k4H,9ILf,5jID,5jCx,6Nwh,9JjB",
                    "7f32": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,9Jdp,5kaD,5kWP,9Jpx,cFiL,3Rl5,bc91,bcVp,fDm1,izln,izDv,fDEf,fDm7,fDQb,izPx,iA5F,fE6p,fDQh,lvUN,orU7,orw3,lvwP,lvUT",
                    "67dd": "3QFz,or0F,3QQP,6AO9,n3u9,orUV,hzW3,hAxx,3Rsb,hAmh,9lbr,c4Oh,dsw1,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN",
                    "6a28": "3QzX,oqX1,dsvX,hAb1,c4m3,eQjp,hzW9,hArP,eQuF,c4TV,7YH3,aIyN,6Bpr,6AIx,9kFH,9l5V,3RgX,aIK1,3QFz,aInx,n3ox,n45x,kkjx,kjCx,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF",
                    "80f4": "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,3R2T,orpZ,os49,5kWV,3RD3,5kKT,k0oV,k0H7,9Jvx,fDWn,fDEf,9Jdv,9JvD",
                    "71b5": "oqWX,6Am1,3QoN,5cEb,7YkF,3QQP,hzKV,hArV,5dqV,3Rsh,3RmF,5da1,gchX,dsHh,ds9r,gc6N,iXyb,gbB1,drDH,hziN,kjI3,iXUN,lIcr,lHkh,iY3X,kk2F,orsH,n3Fp,7Z1z,9kWF,c4IF,c4m9,7YH9,7Z1F",
                    "78a1": "n3iP,n2SN,ePwH,n37F,hAxr,hzQx,kjI3,kkdV,n45r,n3u9,hAaX,orE1,9kWz,c4D1,aInr,aIt9,aJ4x,3RgX,3RmF,6BjV,eQFV,eQdN,6ATN,6Bpx,hztX,hzKV,7YvV,7Yf1,hzu1",
                    "94ac": "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,eQ83,hz/N,iYkP,dsBF,orDX,9kR1,3QWx,5dwr,9kWF",
                    9553: "gbpH,or0F,kjwP,kjg1,iXJr,lHB9,lIcx,kkjx,iYkV,hzW3,hAxx,hAaX,eQdN,eQ89,gccj,dsBF,6B8F,3Rbp,5c+N,7YH3,7YMN,c4IF,c4m3,dsw1,c3KH,c4aV,gbRP,gbB1,gbGz,3QFF,6ACV,7Zir,aIVh,dsSx,oryj,n3L1",
                    "9e6d": "gbGz,lHeF,ePwH,ePI1,gbRV,iXsz,iXJx,ePCj,iXhp,oryj,lHB9,n3zH,n45x,kk8h,iX+p,iXUN,iYqr,iYkV,kjZ1,lHMp,c45b,eQ2x,9kA3,aInx,9kQX,aIPF,c4IF,c3/F,7YkF,7ZcV,6BjV,3RmF,3Rh1,5chH,5d4p,oqRj,or6h,lHkh,lH3p,oqRp,hA5j,eQjp,eQFV,hArV,hA5p",
                    8919: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,aIhP,drUF,ePTh,aI+P,aIt9,7YH3,7ZcV,3R03,dsf9,dsMV,5dqV,3Rsh,5dfF,hAxr,gcEx,gcth,hAgF,orJF,iY9z,n45x,gc6H,orsN,kjNH,hzQx,lHvr,lHGN",
                    "4f2b": "orhr,gbvp,iXsz,3QFF,6AO3,6Bv9,7Zix,gcEr,iYw9,iXP9,gc19,orDX,iY9F",
                    8803: "n3u3,orn9,n2SH,n45x,n31X,kjg1,kk8h,9kWz,7Z1F,5dwr,3RDx,3RxV,5dlh,c4Oh,c4D1,5da1,3Rbp,5c+H,3QWx,3QLh,ds9r,3QWx,9k2j,9kdF,6Arz,6Agp,3QzX,5cyF,c3/F,c3Qp,5cnp,3QoN,hAmb,eQAh,ePI1,hzu1,hAmh,aIyH,7YMN,7Yqh,aIch,aIyN",
                    "57b8": "oqWX,6Am1,6AaN,7Yqb,6Am1,c4Zr,c4aV,c4CX,5da1,3RmF,3RDx,6Bpx,3QLb,3QQV,7YMN,c4rN,gctb,gc19,hArP,iYqx,kkjx,kjCx,hzKV,n3Fj,lHS1,gbpH,gbGF",
                    8360: "lIcr,lGZN,orDX,iY41,iXyb,or6h,hzW3,iXJx,gbpH,gcEx,gcnz,9kjh,7Yf1,7Y3N,ePTb,aIyN,7Z7h,7Zix,3Rbj,9kLp,3QFz,6ACV,9koV",
                    "750d": "n45r,n2SN,oryj,lHMp,lHpP,orbV,hz/H,kjNN,kjCr,hzQx,c3KH,ePCp,eQLx,c4TV,c3/z,c4IF,3QLb,c4aV,3R03,3QFF,5c+H,6AO9,6Bpr,5dwx,3RxV,3Rh1,9kR1,9koV,kk2z,hAgF,hzzF,kjlF,kk2F",
                    6426: "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,lHkb,lHGN,hz/N,hzKV,ds3V,dskN,3R5N,3R09,6Axb,6ACV,9kA9,aIhP,aInx,aIVb,aIPF,9l5P,6B8F,6B31,3RxP,3RDx,dsSx,dsBF,hAgF,hAxx,lIcx,lHS1",
                    "556d": "kjNH,kjwV,kkjr,kjZ1,eQoX,eQLx,3R03,gc19,6B8z,3RxV,5dlb,7Zix,9lbx,9kWF,orPh,orn3,dr+h,dsqp,7YvP,aIEp,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5e19": "3QzX,oqX1,aHRH,iXbN,iXyh,aIch,c3/F,ePYP,kjI9,lHB9,orDX,aIK1,3QWx,3QQV,9kWz,3RDx,c4gr,c4Zx,iYkP,iXP9",
                    "72f4": "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,c3KN,or6b,hziN,orhr,ds9x,dsf9,eQdN,kjCr,kjNN,lI6P,iY9F,orDX,eQp1,dsBF,dsSx,gcEx,5d4j,c4xp,5cEb,5dwx,9l5P,9koV",
                    "6ceb": "kjfX,n2Yp,kkjr,kjrh,orsH,lHMp,iX+j,c4aV,c4D1,gctb,5cJV,5dqV,3RxP,6Beh,c3/z,3Qup,hziH,ePCp",
                    "6f8c": "kjfX,n2Yp,ePCj,hziN,3Quj,aI11,5cEb,3QFF,3R5H,5cV9,5d4j,6B31,lHS1,orUV,hAaX,hAxx,3RxP,hArV,7Ykz,7YMN,or6b,7Yqh,7YH3,orn9,c45b,c4m9,gc13,gbMh,kjlz,kjNN",
                    5981: "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,oryj,gbXx,kjNH,kkdV,5dqV,3Rsh,3RmF,5da1,eQjj,c4D1",
                    "7e9f": "q1I7,jFAx,i5uh,i5Ud,jG4X,bMcN,bMJh,5qXb,6/y1",
                    7426: "n3iP,n2SN,gbpH,gbRV,9koP,7Y3N,n37z,9kdF,lIcr,lHvx,orDX,kjZ1,eQ2x,eQLr,kjZ1,eQ83,eQFV,5dqV,3Rsh,5dfF,7Z1z,c4IF,c4rN,7YMN,7Z1F",
                    "68c2": "3QFz,or0F,3QQP,3QWx,9kR1,dsw1,9kA3,aIt9,9kWz,c4TV,3RDr,9kR1,gc13,gcyV,lI6V,lHB9,iYkP,iXP9,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh",
                    "8f7e": "or0z,ePwN,ePTh,3QFz,gbGF,5dwr,5cPx,dsvX,5da1,aIt3,aI+V,aHRH,aIhV,kjwP,kj4N,lIcr,lHvx,gc13,lHXF,gcyP,gbXx,eQFP,hAmh",
                    "728d": "3QFz,or0F,3QLb,7YH9,eQ89,ePYV,iXP9,n3u9,n3iV,iXhj,iXyh,gbpH,lH3p,9jYH,9k2p,c45h,7YvP,6AIx,3R5N,3RDx,orJz,6B8F,lHMj,lI6V,gcyV,gccp,iYqr,iXUN,dsqj,dsMV,aJ4r,aIyN",
                    "81a3": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3RDr,3QWx,c4CX,3Rh1,aJ4r,dsHh,7YH3,7ZcV,c4TP,c4m9,gci1,gcEr,gbRV,iY9z,hAmh,hzW3,iXUN,iXDP,lHvx,lIcx,kkjx,iYkV,n3KX,oryp",
                    "798a": "lH8X,oqRp,kj4H,kjlF,iXsF,ePwN,3QzX,hzu1,ePTh,3QLb,3QQV,9kLp,c4xp,dsvX,gcth,lI1h,lHXz,lIcx,eQLx,dsMV,9kjb,9lbx,9kLj,3RxV,3RDx,orn3,dsf9,lHpP,lHMp,iX+j,iXDV,gbRP,gccp",
                    7750: "hzoj,hzKV,ds3P,drJp,kjCr,kkp9,lIcx,iXP3,gccp,gcnz,iYqx,orDX,3Rh1,5cPr,7YMN,c4xp,c4Iz,6BjV,5dC9,eQR3,eQ2x,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94e2": "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,lHGH,hzQx,3RgX,orE1,c4xj,5cPx,5dwr,aIPF,ds9r,dsSx,iYkP,iXP9",
                    "7a06": "lGZH,orbV,3QFz,n37F,hziH,hzKV,9jYH,ePI1,c4aP,dr+h,5cV3,c4m9,c4Zx,5dwx,5cV9,gc6H,n3zN,n3/V,gcyV,gc6N",
                    7617: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gbGz,c3KN,kj4H,hzop,iYkP,iXDV,gcnz,hAmh,hzQr,gc19,kjTj,eQjp,9koV,7Z7b,7YBx,eQjj,9l5V,ePYP,eQLx,3Rbj,aIEp,3QLb,3RDx",
                    8069: "n3iP,n2SN,3QLb,n3dh,3QWr,3R09,5d4p,6B31,9kR1,6B2X,5dfF,3RxV,3RDx,7ZcP,c4TV,c4m9,7YH9,eQLr,eQ2x,orDX,eQp1,hzoj,hzFh,c45b,c3Qp,9koP,5cnp,5chN,n2Yj,5cnp,lI6P,hArV,hzW9,lHB9,lI6V",
                    "868d": "oqWX,5ct1,5chN,6Axb,5ct1,5cJP,7Yqh,7YXX,3R09,c4m9,n3u9,6Bpr,3RDx,3Rsh,5dfF,orJF,dsBz,hAxx,gc13,gci1,iXyb,dr+h,drDN,iXbN,iXyh",
                    8707: "or0z,ePNF,drP1,ePCp,kjrb,hziN,n2SH,n3iV,orUP,n3zN,hz/N,eQ2x,5cV3,dsf9,5dwr,5chN,3RDr,6BjV,kk8b,eQAh,kjNH,kkjx,9l0b,c4Oh,c3W1,9k81,9l0h",
                    8759: "oqWX,5ct1,5chN,5csX,6Axh,9kjh,5cJP,dsf9,lHB9,lIcx,hAxx,hzW9,orDX,n3QF,3R5H,dskN,dsSx,5dwx,3RxV,dsHb,5dlh,5d9X,dsw1,9lbr,9kFN,dr+b,iXyh,iXbN,drDN,dr+h",
                    8813: "oqWX,5ct1,5chN,6Axb,5ct1,9kjb,5cJV,5cV3,aIPF,5dfF,3Rh1,3Rbp,c4TP,aIVh,5dwr,9kWF,aIPz,eQdN,c4gx,eQLr,eQ2x,c4xj,7YBx,hAmb,hz/N,iYqr,kkjx,kjCx,iXJx,orsH,lHGN,lI1b,orPh,n3or,n45x,dr+b,iXyh,iXbN,drDN,dr+h",
                    "7b58": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,hzzz,5cyF,3QA1,5cnp,c4aP,7Y3N,ePwH,eQ2x,eQdH,eQFV,5dqV,5c+N,eQdN",
                    "7c0c": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,3QLb,iXyh,7YvP,5cV9,3QoH,9kdF,gc13,gbpN,c4xj,hAgF,eQoX,eQLx,dsSx,c4TV,c4Iz,9kWF,3R5N,3RDr,9kWF,aHXj,drJp,dsf9,aIt9,aHXp",
                    8234: "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,kjYX,3Rh1,kjNH,kkjx,oryj,hzW9,eQFP,eQp1,9kQX,9lbx",
                    "7ccc": "3QFz,or0F,c45b,aIhV,7Y3H,drP1,gbXr,gbpN,oryj,hzW9,kjNH,kk2F,hAgF,c4m9,gc6H,dsw1,dsY9,orUP,eQFV,hAD3,kkjx,7YMH,7ZcV,lHvr,iXyh,iXmX,lGZN,aI+P,5dqV,5c+N,aIyN,aI+V",
                    "8c49": "n3iP,n2SN,kkdP,kjI9,eQoX,orE1,eQ83,eQFV,aIVh,3R09,3QWx,5chH,5cJV,9k2j,6Am1,6Axb,9koV,3RDr,3RxV,aIyN,c4rN,iXDP,ds3V,drJp,iXhp,iXDV",
                    "91b4": "n3or,n2SN,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,iYqr,iXUN,orPb,gcth,gchX,orE1,dsSr,dskN,5dlb,6BjV,6AZj,5da1,3RDr,3R5N,iXJr,5cPx,5chN,iXbN,iXJx,gc6H,lHGN,lIcx,gcEx,gc6N,aI+P,7ZcV,7YSp,aIEp,aI+V",
                    "8e1f": "gbRP,orn9,6Arz,hzzF,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,c4CX,c4gx,3Rmz,7YMN,3QQV,kjNH,7YMN,kjCr,kjTp,n2Yj,n3dh,hzFh,hzop,n2Yp,5dfz,5dwx,kkjx,kk2F,5dfF",
                    "8c94": "hziH,or6h,gbAX,hzop,kjfX,hzFh,kjwP,iXDV,drJp,drDN,gbGz,ds3V,5cJV,3QLh,5cyF,5chH,5cnp,aIhV,9jYH,9k2p,dr+h,iY9z,gccp,iX+j,gcnF,orDX,lHGN,c4m3,3R09,3R5N,5d4p,5dwr,3RDx,3RxV,3Rsh,5dfF,c4IF,6B8z,aJ4x,9kA3,9kLp,eQ83,lHB9,lI6V,eQFV,eQ89",
                    "9f87": "iz9f,pWlB,iyNb,izln,mXJZ,iyZj,mY61,mXW5,6Ne9,pWPL,5kax,5kgJ,8gE1,6NIj,5kWV,5kKT,pX5T,fE0d,iA5F,izDp,izPx,5kgD,fDsd,6MS5,e82r,8g3R,5jID,5jCx,e7Ah,9Ith,cEEF,fD49,bbY/,cEEF",
                    "9c90": "luMr,pW9z,mXE1,mY0b,iz3p,9IFp,e7Gh,e82r,6MS5,5jCx,pW/H,izrt,iA5F,k0MZ,h4TV,9IRl,izfr,iyTn,9Itn,9IRr,5kmJ,e8kz,e8Oz,5kQP,5kmP",
                    "9cc4": "iXbH,or0F,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,5d4j,3Rh1,3RmF,6BjV,9l5V,9kFN,dsBF,ds9r,dsSx,gctb,gc6N,9koP,hzKV,hzop,9k2p,9koV,iYqr,lIcx,lHXF,iY9F,iYqx,iX+j,iXJx,lHvx,lHMp,iX+p",
                    "97a3": "oqWX,iXn1,iXyh,or6h,lGZH,lHvx,3QFz,iXsF,7YBr,7Y3N,9lbr,9kFN,5dwr,7Z7h,5c+H,7YY1,aIPz,3RmF,dsqj,c4D1,dsBF,iY9F,lHS1,kk2z,n3/V,n3zN,iXP3,iYqx,hAxx,gcyV,dsf3,hAb1,gbvj,gbRV,c4aV,c3Qp,gbvp",
                    "9aeb": "orhr,oqX1,gbB1,drJp,ds3V,ePTh,gbpH,gbXx,iXDP,iXn1,lH8X,lHpV,lHGH,lHMp,n3QF,orPh,lI6P,iY9F,hA5p,hz/N,dskH,dsqp,gcyV,hAxx,7YXX,7Z1F,9l0h,c4Oh,c3W1,c4aP,aIhV,7YkF,6Agp,6AaN,6Arz,6Beh,3Rsh,3QFF,6ArF",
                    "9f2f": "oqXJ,mXy1,h3zx,h47D,mY67,mXW5,j/WL,k06T,os43,orw3,orNX,h4BN,e8qv,e8Uz,e8kz,e8Ix,h4TV,k0T9,k0o/,j/yH,j/KP,e7Ab,3QoN,3QuT,3QML,3QGV,e7Sp,e88h,6MY7,3R93,8fTP,8fZR,8fBH,8fHT,bbH1,bbB1,bbY/,bbT9,5ksF,bcrf,bcPj,5kQP,5ksL",
                    "4e15": "q2J7,q1ih,q263,mR19,eX93,dkpB,dkj1,5sm7,5qXh,lgQp,5rEL,bNqv,i6oJ",
                    "4f91": "orhr,gbvp,iXsz,3QFF,3R5H,gc6N,gcEx,hAD9,gcEr,3RDx,5dlh,7Zir,7YMN,c4rH,c4Zx,ds3P,iY41,orE1,kjCr,kkp9,lIcx",
                    "8ba7": "lv2z,oqRT,iyNb,iz3p,3QGV,3QAP,6MS5,3QGV,5l0V,5k4H,lvIL,5kyR,lvkx,lw4V",
                    "90c4": "iXUH,oqRp,orn3,iXbN,iXyb,ePNF,aHRN,gc6H,gbpN,ds9r,6Agp,6ATN,5c+H,9kA9,3RgX,n3L1,n45x,iYqx,gcth,dsSx,9lbx,7ZcV,7Z7h,9kWF",
                    5819: "oqWX,7Yf1,7Y3N,9kjb,7Yf1,7ZcP,7Yqh,3QFz,3RDx,aIyH,3R5N,lHRX,c4D1,lHkb,lIcx,c4m3,lHB9,gbpH,gbGF,c4TP,hArV,hzFh,c45h,c4TV",
                    "836e": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbGz,c3KN,c3/F,ePYP,7Y3N,7YvV,3QoH,5cJV,5d4j,3Rh1,3RmF,5dlh,hAmh,eQ83,eQLx,9kLj,c4rN",
                    8568: "n45r,n2SN,oryj,lHMp,lHpP,orbV,iYkP,iXhp,6Agp,3QoN,3QFz,6ACV,aIhV,c4aV,aIt3,7YH9,7YkF,aI6F,dskH,drP1,gc13,eQ2x,ePTb,gbGF,aIyH,gci1,dsvX,dsSx,aI+V,aIPz,7Z1F,3R5N,3RDr,7Z1F",
                    "64d0": "oqWX,5ct1,3Qup,5chN,ePNz,c3KN,kj4H,kjrh,n3zH,iXUN,iY9z,n3QF,gbRP,gcEx,9kFH,3R5N,3Rbp,7YMH,3QQV,3QLh,9kQX,7YY1,3RxV,3RDx,5dlb,6BjV,iXDP,n3iV,n45x,iYqx,iXDV,ds9r,dsMV,aI+V,aInx,ds9x",
                    5530: "iXDP,iX+p,n3Fp,n3iV,aIhV,3QFF,gc6H,3R5N,aIVb,kk8h,6AZj,6B31,dsw1,ds9x,6AIx,5dlb,3RxV,5dwx,or+x,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5c8c": "kjI3,orn9,n3/P,kkdV,kjap,n2Yp,hziH,hArV,eQuF,c4m9,c4Zx,5c+N,3QWx,3QLh,3QoH,aIch,hzFh,aIhP,5dfF,3RxV,3RDx",
                    "731d": "n2SH,hzFh,6Axh,3QA1,5cnp,gbMb,aHRN,or6b,hziN,n3KX,oryp,lHvr,lIcx,iXUH,hz/N,eQ2x,gccj,hz/N,eQoX,hAmh,iYfh,eQLr,hAmh,9kur,9lbx,3RgX,c4D1",
                    6083: "3QzX,oqX1,kjYX,7YY1,hz/H,hAmh,9kA3,eQjp,aIVb,dsBF,gbMb,iXsF,drDH,iXbN,5cPr,n3ox,n45x,5dwx,5cPx",
                    "6d04": "luSx,oqLN,fCU1,iyNh,3QuN,cEEF,5j+v,mXW5,mYSp,5kWV,5j+B,bcf7,bcDh,izPx,izrt,bcfd",
                    "6fee": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,n3or,3QWx,kjrb,orn9,lIcr,kkdV,hAmb,orPh,hz/H,hAxx,orDX,hAb1,eQoX,gccp,gcyP,eQAh,dskH,dsSx,aJ4r,aIyN,7YMH,7Zix,dsBz,7Z1F,3R5N,3RDr,6Beh,lHGH,kjTp",
                    "59b2": "pW3x,cEsD,6MSb,5kWP,5k4H,h4dD,h4HT,j/yH,j/WR,bbZ5,5jCx,bcJh,mYGn,mYcd,bcfd,bcJn",
                    "7ec9": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,5kgD,5kWV,h4TV,h4dJ,h4pF,mYMj,mYij,izlh,pWPL,bcVj,bcfd",
                    7459: "or7L,oqLN,h3zr,h3XB,6MnX,6MA3,8fZR,oqXJ,6MA3,pWJJ,lveH,h4jP,h4BH,lvwP,pW/N,pXhP,lvON,h4TV,e8en,fDyj,6Nwh,cF6P,cFuN,6N8j,e88h,5kaD,5kQP,e8Oz,e88n",
                    6910: "3QzX,oqX1,3QFz,aInx,n3ox,n3/V,iYkV,iXJx,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,dsSr,dsf9,9kQX,gci1,9l5P,5dqV,5cV9,9kA9,9l5V",
                    "620b": "orhr,kjCx,dsf9,9kLp,3RxV,3RDx,6Bpx,dsHb,9kA9,6Am1,6AaN,gcEr,gbpN,kjfX,kk8h,lHRX,n3Fp",
                    "6bf5": "or6b,kjap,kjI9,iXP3,lHvx,gbpH,gc19,iXsz,gbGF,c3KN,9jYH,9k2p,aI6F,c45h,gbMb,c4m9,9koP,6Agp,6AaN,3QoH,3QA1,5cEh,6AIx,6Bpr,3RDx,3Rsh,5dfF,n3QF,orUP,n3zN,eQdH,gcyV,aI+P,9kFN",
                    "6b46": "n37z,oqX1,lGZH,lHvx,hztX,iXhp,iXDP,hzFh,gbpH,gbXx,9koP,9k2p,3R5H,aIPF,hAgF,hArP,iYqx,kkjx,kjTp,orDX,hz/N,3RDr,aIPF,drJj,5cnp,5cJV,ds3V,drJp",
                    6063: "n37z,oqX1,gbvj,kjrh,dr+b,ds3V,eQ89,hA5p,iX+p,hA5j,eQuF,dsMV,dsSx,iYfb,kkdV,lI6V,lHB9,iXDP,orn9,aIcb,5cEh,3QQV,3Rh1,5dfF,6B8F,6Bpr,9l0h,9kur,6ATN,5chH,9k81",
                    "778c": "gbMb,gbpN,c3KH,c45h,orDX,gci1,c4m9,c4TV,aJ4r,dsHh,gbXr,gcEx,kkdP,kjI9,3QQP,3RDx,3R03,9kA9,9l5V,3RxV,9kWz,3RmF,3Rbj,9kLp,lGZH,lHkh,6Axh,6AaN,lGZN",
                    "94f5": "gbpH,or0F,kjwP,kjg1,iXJr,lHvx,lIcx,kkjx,iYkV,oryj,n3L1,iX+j,eQdN,aIyN,3RxV,3RDx,3QWr,5c+N,aIVh,gcth,gc13,gcEx,gbAX,gbRV,c4aP,c3KN,7YvP,5cyF,gbGF",
                    7688: "oqWX,lGZN,lHkh,7Yqh,7Y3N,lGZN,ePTb,ePwN,hz/H,hArV,aI+V,3R5N,3RDr,aIEp,c4xp,3QQP,7YMN,n3zN,orUV",
                    7630: "n3Fj,oryp,n45r,n37F,7YkF,3QoN,6AO3,3QQV,3RxP,6B8F,7YSj,3Rbp,9l0b,7ZcV,7YBx,c4Iz,7YH9,aIJX,aInx,dsqp,kjTj,eQjp,hzQr,hAmh,c3KH,gbGF,kj4H,hzop,eQ2r,kjCx,kk8h,eQAh,eQ2x",
                    "539d": "h4dD,mYcd,9IXh,9JvD,h4TP,h3XB,h4BH,mYAh,k00R,k0N3,os43,oqXP,6MA3,3QoN,e8Ix,5kKT,5kaD,e88n,e8ID",
                    5043: "iXbH,or0F,3QzX,iXn1,5dwr,5cJV,n3iV,n45x,iXP3,iYfh,eQjj,c4rN,6BjV,6AO3,6ATN,dsMV,ds9x,lI1b,gcth,gc19,lHB9,lI1h",
                    "8c0c": "kjfX,n2Yp,gbpH,gbB1,3QA1,6Axh,9kur,3QWx,3RDx,7Z1z,6Beh,6ATH,7YSp,9lbr,9kjh,orJz,9kWF,9kA3,orn9,dsBz,dsf9,hzW3,hAgF,lI6P,lHpV",
                    "5ef4": "oqLH,orgh,i5AR,i5+N,dkPx,3QoN,dkpv,bMjl,3R6f,3RPJ",
                    "82cb": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,c4m3,9kA9,5cEh,3QA1,3Qup,6Bpr,3RDx,3Rbp,5c+N,7YMN,9kWz,gcnF,gbGF,9kdF",
                    8411: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hz/H,iXP9,gbMb,gcEx,c4TP,c45h,7Yqb,7ZcV,3RDr,3QLh,gc6H,3R5N,drDH,iXsF,3QzX,ePI1",
                    5477: "iA5z,izln,3Rk/,orI5,mXxX,mXW5,cEKB,cEmx,mXy1,orjN,cEWD,cFGV,os49,orjT",
                    "55f3": "orUP,n3iV,kk8b,lI6V,lHMj,kjZ1,kjI3,lHvx,gbMb,iXDV,iYqx,gcyV,gccj,aIyN,7YBx,7YvV,dsSr,ds3V,aIEj,aI+V,6B31,3QWx,3QQV,7YMH,3RxV,3RDx,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5d1b": "7YeX,oqX1,3QFz,7YBx,n3ox,n45x,iYqx,iXJx,iXyb,7Yqh,7Y3N,iXbN,eQdH,c4rN,c4Zx,eQLx,5dfz,gcnF,9lbr,5dwx,5c+N,9kFN",
                    "998a": "gbpH,oqRp,hztX,5ct1,7Yqh,hzFb,kjrh,kjap,lHB3,kjwV,ePYV,eQFV,kkdV,kk2F,c4xj,oryp,hArP,hzKV,c4aP,c4TV,7YSp,3QLh,3QFF,aInr,7YMN,5dfF,3RxV,3RDx",
                    "95f3": "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,aIJX,7Z1F,9kWz,9koV,dskN,aI6z,eQ2x,kjI9,hzzz,hAmh,3Quj,kjap",
                    "6dd9": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5cyz,5cEh,9kA9,5dqP,9kWF,5cV3,3R5N,5d4p,c4xp,c4aP,c4Zx,gcnz,gbXx,hAmb,kkdV,kjwV,hzFh,orsH,lHMp",
                    "8fe6": "lH8X,oqRp,hziH,hzu1,6Am1,3QoN,6AlX,3QLh,3RDx,7YH3,6ATN,7YSp,kjTp,kjrh,orhr,c4gx,7Yqh,7Zir,kkjx,kk2F,7Z1F,7Zix",
                    "5ad2": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,orPb,lHpV,iY9z,lI1h,kjTj,iY41,iXP3,kjCx,ePYP,hzQx,hAxx,eQFV,ds9r,dsSx,gccj,c4rN,3QLh,aIyH,aI+V,3R5N,3R09,9kFH,5dfF,3RxV,3RDx",
                    "7f1b": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,3QML,6MY7,orjT,os49,lv+J,lvqJ,iA5z,izrt,e8Ix,h4TV,h4vL,cFAP,cFGV,e8wv,cFcL,cF6P,izxz,9JHz,9J1t,bcJh,5kKT,3Rr1,6N8d,5ksL",
                    "679e": "3QFz,or0F,5cEb,c4m9,n3u9,9kLj,c4m9,3R5H,3Rbp,9l0h,n3Wh,3RDr,9l0h,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN",
                    "69ff": "3QFz,or0F,5dwr,5cPx,7YH3,7ZcV,aJ4r,aInx,lHvr,lIcx,orsH,iXUN,iYfh,orPh,5d9X,iY41,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,dsMP,gcyV,gc19,dsf9,dsMV",
                    8006: "n3Fj,n321,n3Qz,hzW9,drJp,drDN,gbRP,ds3V,c4gx,c4Oh,eQAh,ePYP,gci1,orhr,kjCx,kj4H,kkjx,6B8z,6ArF,9kdz,9kWF,3RmF,3QFF,9kdF",
                    "80b4": "oqWX,kjNN,iY9F,iYkV,iXbH,iXn1,lHB9,orJF,hzQr,c3/F,aHXp,aHRN,gcEr,gbpN,aIcb,aIPF,7Z1z,7Yqh,5d4j,3Rh1,5dfF,dsBF,dr+h,3QLh",
                    "70ca": "or0z,7YkF,3QoN,5cJP,7Yqh,kjYX,3Rh1,orUP,lHXF,orn3,n3zN,lHMp,kkjr,kjI9,gc13,gcyV,c4Zr,c4gx,hzzz,kjwV,ePCj,iXhp",
                    7823: "n3iP,n2SN,ePwH,n37F,hzQr,kjI9,kkjx,hArV,9kLj,eQFV,gccj,5d4p,3Rh1,3RDx,6Bpx,orDX,lHXF,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "948a": "gbpH,or0F,gc13,gbB1,c3KH,c4rN,gbMb,5cEh,5cJV,7YH9,kk2z,9kWF,kjNH,kjI9,kjg1,or+r,5dwx,3RxV,5dlh",
                    9536: "gbpH,or0F,kjwP,kjg1,hArP,hzW9,dsvX,lHS1,6Bpr,9l5V,6Beb,3Rsh,3Rbp,5c+N,9kFN,7YXX,aIEp,3QQP,6AIx,7YvP,5cyF,gbGF,gbAX,gbRV,c4aP,c3KN,dsMP,lI6V,lHB9,dsf9,dsMV",
                    "9e51": "n37z,oqX1,lGZH,lHvx,drDH,ds9x,aI6F,5cyF,3QA1,5cnp,9koP,9jYN,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,kjYX,iY9F,orJz,lHMp,iXhj,gbvp,gbRV,iXDV,iXhp",
                    "88a2": "lHez,oqX1,kj4H,kjwV,iXDV,c3KN,3QFz,gbGF,aInr,dr+h,ePYV,hArP,hzW9,c4m3,c4Zx,orDX,3Rh1,iY9z,lI6V,lHB3,kjNN",
                    "4ebb": "orbP,iXhp,iXbN,3QFz,kjlF",
                    "530d": "hziH,or0F,lHez,lIcx,3RDx,3RxV,5d9X,5dfF,eQuF,ePNF,3QFF,kjI3,3R09,iY9z,kjZ1,hztX,hAmh,c4Iz,c3/F,9kdz,9kWF",
                    9642: "eQjj,oryp,eQ83,eQFV,9kWF,3R09,3QWx,3QzX,3QFF,7YBx,kjCx,kkjx,hAmh,dsf3,aIyN,5dlh,3RDx,3RJ9,3QoH,n2SN,n3dh,lHkh,hzop,ePNF,aI6F,9k81,9k2p",
                    5776: "7Ykz,or0F,9kur,6AaN,7Zir,7YH9,lHB9,lI6V,5dqV,3Rsh,3RmF,5da1,c4CX,aIK1,iY3X,hAb1,hziH,hzKV,eQLr,eQ2x",
                    "835b": "n45r,n2SN,oryj,lHMp,lHpP,orbV,kjCr,gbXx,c4xp,aIVh,aJ4x,dsSx,gctb,dskN,aI6F,aHXp,iYkP,iXhp,9kdz,9kWF,9kur,6AIx,3QFF,3Qup,9kFH,5c+N,3Rbp,3RDx,6Bpx",
                    "84cd": "n45r,n2SN,oryj,lHMp,lHpP,orbV,gbXr,kjCx,ds3P,c4aV,aInx,aI+V,c4TV,dsf3,dsw1,c3KH,c3W1,eQ2x,kk2F,iXsz,iX+p,gcEr,gbpN,6AlX,6Beh,9l0b,3Rsh,3QA1,9k81,9l0h",
                    "63f2": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,kkdP,kjwV,orPb,gcth,gccp,oryp,n3or,ds9x,dsSx,aIhP,aJ4x,3RgX,c4D1,9kWz,5dwx,9kLj,5cPx,5cJV",
                    "551b": "lI6P,lHpV,iXJr,iYfh,gcEr,gbRV,gccj,oryp,9koP,eQjp,dskH,dsMV,c4TV,5c+N,3QWx,3QLh,aIyH,3RxV,3RDx,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5685: "orZZ,ordX,fDE9,orB/,fDWh,fDQh,izPr,izVD,izlh,izrt,fDs7,fDm7,h3Xv,lv8B,lw4V,h4TV,cEKv,cFGV,9Jdp,cFcL,5kyL,9JjB,9J1n,5kgJ,3Rx1,5kQP,9JBz,9ILl,3QMR,mXxX,mXQ9,bbT9,bbB1,mXy1",
                    8862: "kj4H,or0F,ePwH,kjrh,3QzX,gbB1,c4aP,5cJV,gbXr,c3/F,kjwP,kjI9,lHB3,lHpV,lHXz,lHMp,kjTj,kk2F,n45r,n3Wh,iYfb,iYqx,iYkP,5dqV,3Rsh,5cV3,5dfF,7Z1z,7YH9,aIt3,aIPF,dsBz,dsf9,gc6H,eQjp,5d4j,dsqp,hzW3,orn9,orbV,hzKV,hzW9,oryj,orJF,hAgF,hA5p,oryp",
                    "5ffe": "3QzX,oqX1,6Bpr,5dwx,3RxV,6B8F,c4IF,c4gx,gctb,gc6N,kjI3,kkdV,gbRP,orsN,iXsz,gbMh,drDH,iXbN",
                    "6c69": "luYt,oqRT,iyNb,fCU7,cEEz,3QuT,e8Ix,e82r,5kWP,mYSp,mY0b,5k4H,5kWV",
                    "6e9f": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,5kgD,3QMR,3RJ3,5kEN,8fZL,8gW9,bcld,9Jdv,fDWh,fDm7,k0MZ,mYSp,mY0b,j/WR,cEWx,izln,izVD,cFuT,cEWD",
                    "5f58": "orbP,iXyh,iY41,gchX,lHXF,lHpV,gcEr,gbpN,7Yqb,7YY1,aHXj,aI6F,drJj,3Qup,3QA1,5cyF,3QQP,7YMN,c4rN,c4gr,c4xp,aIhP,eQ89,3RgX,6ATN,5dwr,3RDx,3Rsh,5dfF,dsBF,aJ4r,7Z1F",
                    "9a88": "n2SH,n3dh,gbMh,kjaj,ePCp,ePYV,5cJV,3QLh,3QFF,5ct1,aIcb,9jYN,3QWr,6ATN,kjNN,kkjr,kjCx,ds9r,dsSx,kk8b,3Rsh,orUP,lHXF,lHGH,orhx",
                    "73b3": "n3db,n2SN,orsH,iXyh,orDX,c4D1,7Z1F,3RDx,6Bpx,iXUH,iYqx,3QWr,kjCx,7Yqb,6Am1,6AaN,n31X,6Am1,gbMb,gbpN",
                    "681d": "3QFz,or0F,lHRX,aIK1,n3/P,lHB9,gbXr,gcEx,ds3P,ePTh,aHRH,gbB1,iXDP,iXbN,5cV3,aIt9,aI+V,5dqV,5cV9",
                    "6b9a": "n3iP,n2Yp,c3KH,n321,c45b,ePI1,iXmX,iXDV,ds3V,6ArF,3Qup,lHRX,3Rh1,orPb,n3QF,n3zH,orn9,hArP,hzW9,aInr,aJ4x,lHB3,dsf9,dsMV,lI6V,lHB9",
                    "89ca": "n2Yj,iXhp,iXDV,n3iV,iXsz,or0F,gbpH,gbRV,c4aV,c3Qp,5cnp,5ct1,7Yqh,3QLb,3QQV,5cV9,9kR1,iY41,6Bpr,3RDx,3Rsh,5dfF,9kWF,aI+P,n3/V,n3u9,aIt9",
                    8174: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QWr,aIK1,orE1,lHMj,kjI9,c4m9,c4TV,kkdV,kk8h,gc13,gcyV,3RDr,aIK1",
                    6249: "n3zH,orn9,iXmX,iYkV,lI6V,lH91,7Yf1,3QoN,gc13,3R09,3RgX,gci1,6B2X,6Bpx,6Arz,6AO9,aIt3,aIch,aI+P,aIK1,eQoX,eQLx,ePNz,eQ89",
                    "9ef9": "hzKP,orbV,oryj,hA5p,lI1b,iY41,iXyb,lH91,hAxr,hziN,3R03,gc19,5d4j,3Rh1,3RmF,5dlh,c4Oh,c3W1,3QA1,9koP,7Yqh,7YXX,9kLp,eQoX,dsqp,ds3P,ePTh",
                    "94cb": "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,ds9r,gc19,iX+j,6AZp,5da1,5dqV,6BjV,c4TP,9lbx,lHRX,iY9F,n45r,aIPF,3QWx",
                    9569: "gbpH,or0F,kjwP,kjg1,iXJr,lHB9,lIcx,kkjx,iYkV,gcyP,iY9F,gc13,iX+p,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,3RgX,gci1,orDX,n3QF,6BjP,9l5V,9kA9,6AO9,6BjV,c4Ob,eQAh,eQdN,c4rN,c4Oh",
                    "75d6": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,5dwr,5cEh,9l0b,c4Zx,hAgz,5dfF,hzKP,hAxx,5c+H,hz/N,c4aP,9kA9,c3KH,gbGF,kj4H,hzop",
                    8016: "3QFz,or0F,aIcb,7YBx,6AaH,c3W1,ds3P,drDN,hzoj,hzKV,lHpP,lGZN,c4gr,hz/N,orDX,9kR1,eQLr,hAmh,c4TP,aI+V,5d4p,3R09,3QWx",
                    "989b": "n2Yj,iXhp,iXP9,n3u9,n45r,n3Fp,iY3X,n3Wh,eQuz,7Z1F,3R5N,3RDr,7Z1F,9l5P,iYkV,iX+p,9kLp,3QWr,5cV9,c4m9,c3Qp,3Qup,6Arz,c3/F,gbMh,c4aP,6ACV,gbpH,gc19,or6b,iXyh",
                    "86c9": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cPx,3Rmz,7YMN,6B2X,dsMV,dsf9,gccj,eQp1,gcEr,lHS1,n3L1,gbXr,lHS1,iXyb,dr+h,drDN,iXbN,iXyh",
                    8737: "oqWX,5ct1,5chN,6ACP,5ct1,7Yqb,5cJV,c4gr,hAb1,orE1,lHGH,n3u9,n3/P,lI1h,kjI3,kkdV,hAxr,hzQx,c4Zr,hAb1,7YXX,6B8F,7Z7h,c4Oh,c4rN,5c+N,3Rbp,3RxV,5dqV,dr+b,iXyh,iXbN,drDN,dr+h",
                    "87ab": "n3or,n2SN,kj4H,kjCx,or0z,kjlF,kjNH,orE1,lHMj,lIcx,eQjp,eQdN,hzKP,gbXx,drUz,ePTh,kjrh,kjfX,gbB1,drDN,hzoj,gbpN,iY3X,eQFV,eQLx,5cV3,dsf9,5dqP,5chN,3RDr,6Beh,7Z7b,aIVh,aI11,7Yf1,7Z7h",
                    "7b15": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,lHXz,iYkV,iXUH,orPh,lHez,iXDV,dsf3,9kA9,6ACV,3Qup,3QoN,6Bpr,3RDx,3Rbp,5c+N,9kFN,9kWz,gcnF,gbGF,9kdF",
                    "7b9d": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,hzzz,5cyF,3QA1,5cnp,7Y3H,7Y9p,c4aV,dsSr,ds9x,gctb,5dlh,5c+N,gc6N,ePwH,ePYV,9l0b,9kFN",
                    "81fe": "orn3,aIt9,5cyF,3Qup,3QoN,aIt3,5dfF,3RxV,3RDx,gccj,gcyV,gbvj,gbRV,lHpP,kjap,c3Qp,c4TV,kkdV,kjTp",
                    "7fa7": "lH8X,oqRp,orbP,lHkh,orDX,iXP9,iYkV,lI1b,hAxx,eQLr,gcyV,aIt3,eQjp,aIyH,3RxV,3RDx,3QWr,3R09,9kWF,c4Oh,dsHh,dsqp,gc13,eQ2x,kjlz,7YkF,3QoN,c4aP,c3KN,gbpH,gbRV,kjwP,kj4N",
                    "7cf8": "orpT,iyTn,izxz,lvIL,e7Gn,e8Oz,cFAJ,h4BN,9Jjv,5kQP,5kWV,9ILf,5jID,5jCx,5k4B,3QYT,5kgJ,e8et",
                    "917e": "orjN,oqLN,os43,orw3,or7L,cEKB,cEQH,bbH1,cEyz,oqXP,8fHN,8g3X,3R8Z,k0j3,k0v5,3Rl5,3Rx1,k0H7,k0T9,3RJ9,e8Ix,e8UF,e8kt,e8wB,k06N,5kaD,5jCx,6Mo1,j/yN,k06T",
                    "8dde": "6Arz,hzzF,5chH,5cnp,7YvV,drUz,ds3V,5cnj,drJp,aIEj,5cPx,6Bpr,aI+V,5d4j,3Rh1,5dfF,iY9F,eQLr,eQdN,lHGN,orUV,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e70": "k0u/,k0cZ,iA5z,izPx,lv+J,5kQP,3Rx7,5kgD,5kEN,8glZ,5kmP,5kyL,8gy5,cFuN,e8Cx,e7Sj,e82r,e7Gh,5jID,5jCx,8g3R,5jID,iz3j,6MG9,3QML,6MY7,orjT,os49,oqRN,or7R,iz9l,iyTn,oqRT,cFiL,h4vR,h4jP,cF6P,cFiR",
                    "96e9": "orUP,oqRp,gc13,orn9,gcnz,gci1,iY3X,iY9F,iXsz,iXyh,gbMb,gbGF,hziH,lGZN,lIcx,hAxx,drOX,dsHh,aJ4r,aHRN,aIhP,7YvV,7Z7h,6Beh,3Rh1,3R5N",
                    "92c8": "lHez,n321,hztX,kjap,ePCj,iXyh,gbXr,gc19,kjZ1,n3L1,n3zH,orPh,kkjr,kjCx,eQLr,kjZ1,9jYH,9k2p,dsf9,9l5V,9lbx,9kjb,9kR1,6Beb,6Am1,3QoH,3RDx,5cEb,3QLh,3RgX,5da1,9kA3,3R09",
                    "9ca9": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3QWr,3R09,6AZp,c4xp,c4Zr,c4gx,c4Iz,5dfF,3Rsh,3RDx,6Bpx,gc6H,gcth,hzQr,kjI9,kkjx,iYqx,hArV,oryj,lHS1,9koP,hzKV,hzop,9k2p,9koV",
                    "9cd4": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,7YMH,5cPx,5dwr,7Z7h,5c+H,3Rbp,5da1,aIK1,aIt3,aJ4x,dsHb,dskN,n3Qz,gcnF,n3or,n45x,gccj,n3Fp,9koP,hzKV,hzop,9k2p,9koV,gcyP,iYkV,iXP9,gc19,gcyV",
                    "93d6": "n3Fj,orsN,n45r,n321,6Am1,3QoN,3RDr,3QFF,6ACP,6BjV,3R03,5cV9,5dfz,3RmF,9kLj,3Rbp,9kA3,9kWF,9kjb,9koV,c4rN,c4CX,9l5V,9lbx,dsSr,c4Zx,c4IF,dsw1,gci1,dsBz,gcyV,c4m3,c4aV,gbRV,hzFb,hArV,kkdV,kjrh,hzQr,lHvx,lHRX,hAb1,eQdH,ePYV",
                    9997: "oqWX,6Am1,3QoN,6Bpr,5dwx,3RxV,3QWx,5cJV,iXDV,iXbN,kkdP,kjCx,orPb,lHXF,lHGH,orn9,gc6H,kk2F,dsHb,dsf9,aIt3,aIVh,gc13,7YH9,7Z7h,gcth,gc19",
                    "4fd1": "orbP,iXhp,iXbN,3QFz,kjlF,3QWr,hzQx,hAxx,5dwx,3RxV,5dlh,3RgX,hAb1,kjNN,iY3X,n3/V,n3u9,dsSr,ds9x,9kur,9lbx",
                    "8bdf": "kjfX,n2Yp,gbpH,gbB1,6Am1,6ArF,9koV,3QLb,6AIx,lHvx,orPh,hzQr,hAxx,dskH,dsMV,5dqV,5c+N,dskN",
                    9139: "orn3,oqLN,n3or,n3Fp,iX+p,eQ2x,kjCr,eQjp,hzFb,or6h,iXhj,iXyh,lHkb,lH3p,oqRj,ePCp,ePwN,hzKP,ePCp,c3VX,dsf9,5cJP,c4aV,5d4j,9kux,aIEj,7YH9,aI6z,7Y9p,7Y3N,7Yqb,5ct1,5cnp,3Rmz,n3QF,n45x,hAxx,eQAh,c4Zx,7Zix,6BjV,7Z7h",
                    "82a8": "iXyb,or6h,orDX,iY41,lGZH,lIcx,gbvj,gcnF,c4rN,c4Oh,5cV9,3QQV,3QLh,3QoH,c3/F,gbGF,ePTb,9kux,5d4p,3RmF,3Rsh",
                    "839e": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hz/H,iXP9,dsMP,gcEx,gbvp,drDN,dsvX,dr+h,aHRH,aJ4x,aIhP,7YvV,5cyF,3Qup,3QoN,5dwr,3RDx,3R5N,aIyN",
                    "85b7": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iYkP,iXhp,dsSr,gcEx,gbpN,drDN,c3/z,drP1,ePTb,ds3V,dsHb,eQuF,dsqj,c4D1,iXP3,c4m9,aJ4r,aHRN,7YBr,aInx,3QQP,7YvV,7YSj,3Rbp,3Rsb,5dqV,7ZcV,7Y9p,3Qup",
                    5412: "pXbJ,orjT,orBV,6Nef,5kyR,5kWV,8gW9,h41B,h4TV,mXxX,mXW5,cEKB,cEmx,mXy1",
                    5594: "k06N,k0N3,or+3,orjT,9IXn,3QAP,3QuT,3RJ3,3QSX,cFiL,3Rl5,h4TP,h4dJ,h4BH,cF6P,cFAP,e8ID,8gPZ,8gfZ,luMr,lv8B,bbZ5,bbB1,luMx",
                    "5ca3": "6AlX,oqX1,5dfz,3Rsh,3RxV,5dwx,kkjx,kjI9,gbRP,orsN,iXyb,6Axh,6AaN,iXbN,9kA3,gc19,gcnF,9kWF,9kA9",
                    "98e7": "or0z,iXsF,c3KN,iXsz,iXJx,eQ2x,aIch,5chN,ePHX,c45h,hzW3,lHS1,orE1,lHRX,hArV,hAxx,gcnz,hAb1,c4TP,c4rN,9kFH,9l5V,eQFV,eQdN,3R5N,3Rbp,5da1,7YXX,3RxV,3RDx,7Zir,6BjV,5dlh",
                    6100: "3QzX,oqX1,lHB3,3R09,lHpP,n3Fp,gbMb,iXsF,gccj,gbRV,eQoX,hAb1,aIEj,c4rN,9kjb,ds9x,iXbH,drDN,orPb,9l0h,5da1,5dwr,9l5V,kkjr,hArV",
                    "6d93": "luYt,oqRT,iyNb,fCU7,cFGP,cEQH,9IRl,9JHF,3QuN,cEEF,3QSR,fDgb,fE6p,5kWV,3RD3,5kKT,izlh,mY67,mYMj,iz/z,izln",
                    "752f": "n3zH,orn9,iYkP,lIcx,lH3p,iXbN,gbvj,hzu1,iXyb,hzFh,gbRV,gccp,hA5p,kjCr,iXP9,gctb,iY9F,3R03,dsf9,5d9X,3RmF,5dlh,dsHh,drP1,3QA1,7Z7b,7Yf1,aI0X,aIVh",
                    "5a13": "oqRj,c3Qp,7Yqh,5chH,aIch,iXyh,iXbN,iXJr,iYfh,n3Wh,n3ox,7YBx,3QFF,5dwr,3RDx,3RmF,5da1,eQp1,gcyP,eQdN,c4m3,c4TV,9lbr,9kA9",
                    "7efa": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,e82l,e88n,k0v5,mYul,mYcd,k06N,pWDJ,lvqD,fDQh,e8Oz,e8UF,pX5N,fDWn,k0T3,mYMj,5kgD,bcfd,bcPj,5kQP,5kgJ",
                    "97ea": "iXJr,iXhp,lI6P,lHGN,hz/H,hAmh,dskH,dsMV,7ZcV,6Beh,7Z1F,orDX,5da1,c3KH,c4m9,c45b,3QLh,3RDx,3QLb,6Am1,9k81,3QoH,6Am1,n2Yj,ePCp,eQ2x,n3ox,n2Yp",
                    6966: "3QzX,oqX1,5dwr,5cJV,c4m3,c4TV,ePNz,dr+h,c3KH,gbvp,iXsz,iXbN,iXDP,lHvx,lIcx,iYkV,hzQr,hAxx,orsH,n3Fp,9l5P,eQFV,eQ89,9kA9,9l5V",
                    "65ee": "mXE1,mYAh,fDQh,fE6p,h4TV,9IFj,9Jpx,e7Ab,e7Gn,iz9l,pWlB,5kEH,e8Cx,e7Sp,5jUF,5kEN",
                    "656b": "n31X,or0F,kjwP,kjap,oryj,iXP9,lIcr,lHGN,lI1b,c4Oh,3QWx,3RDr,aIEp,hA5p,ePNz,gbB1,drDH,ds9x,drOX,6Am1,3QoN,aI0X,aIhV,6ACV,5cEh,n2Yj,hzop,hzKV,n3iV,n2Yp",
                    "65c4": "lHez,oqX1,kj4H,kjCx,kjfX,7Yf1,3QoN,5cyz,3QLh,5cJV,ePYV,ePI1,oryj,hzQx,kkjr,kjNN,gc13,hArV,dsHb,dskN,aI+P,aIt9,6Bpr,3RDx,3RmF,5da1,gci1",
                    7800: "ordR,oqRT,orpT,orU7,izxz,iA5F,5kWV,3RD3,3Rx7,5kEN,5k4B,5kaD,6N8j,cFuT,iz/z,izJv,fDKl,bcfd,or1P,fCO1,9IRl,h41H,h3Lz,9Izj,9IRr",
                    "7f61": "k00R,ordX,orBV,k0o/,h3Fx,h4NP,3R2T,h4dJ,3QoH,3RJ9,cEEz,3QGV,bcJh,bcfd,oqRN,or+3,k0N3,j/ET,oqRT",
                    9514: "gbpH,or0F,gbRP,gbB1,c3KH,c4aV,gbGz,3QFF,6ACV,3QWr,5cV9,lHB9,lI6V,hArV,hzW9,kjfX,kjwV,eQ83,eQLx,5dwx,3RxV,5dlh,7Z7b,c4Oh,c4xp,7YSp,7Z7h",
                    "9e36": "or0z,lH3p,lHpV,iXmX,n3ox,iXDP,iXhp,orDX,lHGN,lI1h,iX+j,n3/V,iYkP,iXUN,gbpH,gcEx,ds3P,eQ2x,aIt3,c4gx,aIJX,c4IF,dsBF,drUF,9kdF,9l5V,6BjV,3RmF,3Rh1,5d4p,6AaH,6B31",
                    "7a80": "n3u3,orhx,iYkP,kkjx,lIcx,lH3p,iXbN,gbAX,iXyh,gctb,iY41,drDH,dsSx,aI0X,7Yf1,7Z7h,aIVh,6Bpr,3RDx,3R5N,5cV9,gc19",
                    "522d": "n2Yj,n3zN,iXDV,gbvp,gbpN,iXDP,gc6N,ds9r,drP1,6Axb,dr+h,6AO3,5chN,kjYX,9kR1,or+r,5dwx,3RxV,3Rsh,5dfF",
                    "510b": "iXbH,or0F,3QzX,kjg1,3QLb,6ACV,kjwV,kkjx,kk2z,n3/V,n3ox,kjrb,orn9,hzQr,iXUN,gcEr,gbXx,iYfb,hArV,gchX,hAb1,dsMP,dskN,aIyH,aI+V,7YH3,7Zix,5dwx,5cV9,7YH9",
                    "8c2b": "lH8X,oqRp,hziH,hzu1,5ct1,7Yqh,9kur,9l5V,5dqV,3Rsh,5dfF,3QQP,3QWx,6ATN,9kFN,c4gr,kjCx,kjZ1,c4D1,c4xp,eQ2r,eQp1,hAaX,hzQx,gctb,iYfh,dsHb,c4TV,dsSx,kkjx,n3iP,n45x,n3zH,orsN,orJz,n3QF",
                    "572a": "oqWX,7Yf1,7Y3N,9kjb,7Yf1,hziH,hzzF,n3u3,ePTh,kkdP,kjI9,gc13,gcnF,7YH9,5cV9,3R5N,3RDx,6Bpx",
                    "82dc": "mYSj,mXy1,pWPF,k0o/,k00R,pWrH,e8Ix,e7Mj,9Izd,9JvD,iyZd,izVD,5kKT,5jOz,iyZj",
                    8459: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,3QFz,hzzF,7ZcP,7YMN,c4rH,c4TV,7YBr,aIch,6AaH,drP1,eQ2r,ePwN,3R5H,gc6N,gcyV,3RxV,3R5N",
                    "62f6": "oqXJ,5jOz,3QuT,5jCx,fD9/,bbB1,j/yH,j/WR,orvZ,k00X,fDyj,fDQb,k0j3,orO1,os43,k0B1,fE6p,e8wv,8g9T,8g3X,cFcF,cFGV,bcVp,5kyR,3R93,3QSX,bcr9,8gE1",
                    "54d4": "orbP,ds3V,ds9x,gc6N,kjwP,kjNN,orDX,eQp1,dsBF,dsSx,gcEx,hAaX,lI6V,3Rbj,c4xp,9kjb,9lbx,c3KH,c3/F,lHeF,lGZN,lH3p",
                    5658: "osa9,ordX,6MSb,3QGV,3QYN,6N8j,h4jP,fDKf,cFiR,cEWD,fDm7,izJv,izln,lvIL,k0o/,k0cT,lvkD,h4BH,lvUT,izVx,iAbL,fE6p,fDWh,8gK7,3Re/,3RP9,8gK7,mXxX,mXQ9,cEEF,cEmx,mXy1",
                    "8c73": "5kgD,pWDJ,6Nkf,8gE1,h4BN,izJB,h4jJ,lvIR,lvUN,lvwP,fDWh,h4NP,bcPd,cFuT,8glZ,bcxl,fDKf,cF6P,luSx,lveH,h3Fx,lv2F,iz3j,h3XB,8fZR,6MG9,cEKv,8fHT,cEsx,fD49,fDg5,h47D,bc91,cEQH,mXxX,5jCx,5kWV,mYSp",
                    "8d53": "n3Fj,orsN,n45r,n2Yp,5cnp,3QoN,3QFz,3QQV,5cV9,6ATN,7YMN,6ATH,5d4p,3Rsh,3RxV,6B8z,aIPF,aIhV,6ACV,aI0X,aI6F,c4aV,eQ89,lHGN,kjrb,kk8h,eQAh,ePTh,hAxr,hzu1,dsvX,c4IF,aI+V,aJ4x",
                    9617: "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,7YSj,6B31,6ACP,9kA9,9l0b,9kdF,9kQX,hAb1,hzFh,9kjh,eQ83,c4m9,kjlz,kk8h,hzW3,lHGN,3Quj,kjap",
                    "6edf": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,orhr,3QWx,kjrb,kjNN,eQdH,ePTh,9kjb,9kFN,6Bpr,3RDx,3Rh1,5d4p,gccp,gcyV,aI+V,aIEp,aIPz,iY9F,lI6V,lHMp,iXUH,orE1",
                    9052: "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,aInr,aIVh,dsf3,eQdN,lHGN,lHRX,eQp1,dsBF,dsHh,orhr,n3u9,n3Qz,orPh,lHkb,lIcx,7ZcP,iYkV,iXDV,7YvV,7ZcV",
                    "5c1c": "orbP,iXhp,iXbN,iXDP,hzQx,iXP9,orn9,n3Fj,iYfh,iYkV,drDH,dsSx,eQ83,9kdF,7Y9p,7Y3N,7YvP,3QA1,3Qup,3QWr,5cV9,9kA9,c4xj,9kWF,7ZcV,7Zix,7YSj,5dfF",
                    "7f33": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbH7,bbZ5,5jCr,6MM5,5kEH,3Rl5,3Re/,6Nef,bcxf,5kaD,9Jpr,8gE1,3RJ9,8gPZ,6Nwn,h47x,h4TV,orBV,k0o/,k0AX,orO1,bcPd,e8Oz,e8et,bcfd,bcPj,k0cT,orpZ,or+3,k0N3,k0cZ",
                    6800: "3QFz,or0F,3QQP,7YH9,n3u9,orUV,iXP3,iYqx,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,aIPz,9l0h,aI+V,gcyV,gccp,5d4p,3Rh1,3RDx,6Bpx",
                    "6a58": "or0z,n37F,3QFF,3R03,c4m9,c4Zx,5dwx,3RxV,aIVb,9l5V,9kFH,aIEp,eQjj,dsw1,eQuF,kk2F,n3/V,n3zN,iXP3,iYqx,hArV,eQ83,hA5p,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,5dlb,7Z7h,7YSp,5d4p,5dlh",
                    "66e9": "n3Fj,n3iV,iXP3,kjI9,iXbH,iYqx,9kQX,dsw1,dr+b,9kjh,c4TP,c3Qp,aI0X,aIVh,9lbr,9jYN,9koP,3Qup,3QoN,7YvP,3QQV,3QWx,5cV9,7YSj,5dfF,3RxV,3RDx,5dlb,6BjV,or0z,orJF,lHXF,lHeF,or0F,hztX,hzQx,eQ2x,ePI1,hzu1,hz/H,hAmh,eQAh,eQdN,hz/N",
                    "80ed": "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,lvIL,e8wB,9J7z,9JBt,e8wB,h4jJ,h4NP,orpT,5kgJ,5kWV,os49,orpZ",
                    "71a8": "lH3j,lHB9,orn9,oqRp,ePCp,c3KN,drOX,c3Qp,c4m3,ds9x,aI6z,aIch,gbMh,gc13,gbB1,iXsz,iXP9,kkjr,kjTp,orPb,c4Oh,aIPF,c4D1,hA5j,eQp1,9kA3,7YH9,5cJV,3QFF,3Qup,7YH3,5d4p,3RmF,3RxV,7YXX,6AZp,6ACP,7Yqh",
                    "78a3": "ordR,oqLN,fCNX,or1V,lv+J,lvqJ,cEWx,h4pL,fDyd,fE6p,5kWV,3RD3,3Rx7,6Nwh,6N8j,e8kz,e8Cr,cFoN,9Jdv,9JBt,cFoN,h3Lt,h41H,8g3X,8fNP,h3Lz,izrn,orpZ,or+3,iz/z,izrt",
                    "94af": "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,lHRX,dsw1,dsf3,dsMV,lI6V,lHB9,5cV9,3R5N,3RDx,6Bpx",
                    9554: "gbpH,or0F,kjwP,kjg1,n3KX,oryp,iXJr,lHB9,lIcx,iYkV,iY9z,hz/N,9kFN,9lbr,9kux,eQAb,9l0h,eQdH,eQFV,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,3QWr,6ATN,3RDr,6Beh",
                    "9e73": "n3u3,n2SN,orbP,lHpV,lH8X,oqX1,aHRH,ePNF,drOX,3QA1,3R09,6AlX,6AIx,9kur,9k81,c3VX,c4m9,3QQP,ds3V,9l0b,9kFN,5dfz,3Rsh,3RxV,5dwx,dsSx,dsqp,lHMp,lI6V,gcyV,eQAh,iY9z,hAgF,orJz,lHMp,iXhj,iXsF,gbGF,gbvp,iXhp,iXDP,iXP9,gc19,gbRV,iXDV",
                    8913: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,aIhP,drUF,ePTh,orsH,hzKV,3Rmz,hAgF,aIVb,6Bpx,6ATH,c4D1,kjI3,3R09,dsSr,dskN,lHMj,hA5p,hArV,lI6V,lHMp",
                    "4f5e": "orhr,gbvp,iXsz,3QFF,3QQP,aI+V,gcyV,dsY3,ds3V,3RJ3,5dlh,9kA9,hA5p,iXJr,iYw9,kkjx,orUP,n45x,n3u9",
                    "7fb8": "n3u3,orn9,n2SH,n45x,n31X,kjg1,kk8h,5dwr,3RDx,3RxV,5dlh,c4Oh,c4xp,5d4p,3R5N,9kQX,7Z1F,aIcb,aIyN,c4aP,aIhV,aIt3,c4m9,3QWr,aInx,5cEb,5c+N,7YH3,7YvV,9k2j,9kdF,6Arz,6Agp,3QzX,5cyF,c3/F,c3Qp,5cnp,3QoN,hAmb,eQAh,ePI1,hzu1,hAmh",
                    "90a1": "lHkb,or0F,kj4H,kjTp,kjlz,aI6F,5chN,6ACP,5cPx,5cV9,6ATN,gc6N,gbGF,3RgX,n3L1,n45x,iYqx,gcth,dsSx,9lbx,7ZcV,7Z7h,9kWF",
                    "57f4": "oqWX,6Am1,6AaN,7Yqb,6Am1,gbpH,gbMh,kkdP,kjwV,gccj,oryp,ds9r,dsHh,aIVb,aInx,7YBr,7Z7h,3RDr,3QLh,3Rsb,gcth,gbXx,3QWx",
                    8538: "n45r,n2SN,oryj,lHMp,lHpP,orbV,kjlz,iXhp,c3Qp,c3W1,dr+h,gccj,gbRV,iY9z,iYkV,c4TV,c4IF,kjI3,iXJx,9koP,6ACV,3QA1,3QoN,9kLj,5d4p,3Rh1,3RDx,6Bpx,ds3P,iXDV,iX+p,dsqp,ds3V",
                    6421: "oqWX,5ct1,3Qup,5chN,drUz,aHRN,iXbH,iXyh,n3or,n3Wh,iX+p,hzW9,hzKV,lHB3,hAb1,hAmh,eQuz,eQLx,dsSx,9kWF,9kR1,9lbr,dsBF,ds3P,9kFN,ePTb,eQdN,dskN,aIhV,9kdF,3Rbj,7YSp,3RxP,3Rsh,5dfF,6ACP,6Bpx,3QLb,3QWx,5cV9",
                    5541: "izVx,izxz,fDyd,fDWn,lvIL,fDKl,5kEH,3Rx7,3RD3,5kWV,os49,orjT,9IXn,3QGV,mXxX,mXQ9,cEEF,cEmx,mXy1,cFuN,8gK7,8gm3,cF6P,cFuT",
                    "5e14": "3QzX,oqX1,c3/z,aIch,kjrh,kj4N,aHRN,3QLb,6AIx,kjCx,kkjx,iYqx,hArV,eQoX,orE1,eQ83,eQFV,aIVh,3R09,dskH,aIyN,3RxV,3RDx",
                    "72f7": "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,hziH,n3dh,or6h,dsSr,ds9x,aInr,aJ4x,3QWr,gbXx,gcEx,5dwx,3RxV,3Rsh,5dfF,n3u3,n3/V,iYkV,iXP9,n3u9",
                    6078: "3QzX,oqX1,3Rbj,9l0h,orPh,hAaX,hAxx,5dwx,3RxV,5dlh,7YMH,6AZp,6Axh,eQ89,ePYP,eQp1,iXsz,gbMh,drDH,iXbN,kjTj,kjCx",
                    "6cee": "kjfX,n2Yp,ePCj,hziN,3Quj,aI11,oryj,3Rbp,iY9z,lI6V,lHpP,iXP9,hArP,hzKV,c3/z,c4Zx",
                    "6f78": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QWr,ds9x,dsHh,5dlh,3RmF,5da1,7YBr,7Z7h,aIVb,aInx,iYfb,eQLx,gccj,iY41,iXUH,hA5p,ePTb,iXJx,orn3,eQ89,eQuz,orJF,lHRX,lIcx,lHkb,lHGN",
                    5983: "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,n3or,n3/V,gcyV,gc19,5cV9,3R5N,3RDx,6Bpx",
                    "7ea1": "or1P,iyNh,h3zx,h3XB,iz9f,bbB1,bbZ5,5jCr,6MM5,5kgD,3R93,3Re/,5kyR,mYul,mYc7,mYMj,fE6j,fDm7",
                    7425: "n3db,n2SN,gbpH,gbMh,6AaH,6Am1,7Yqh,n31X,6Am1,kjTj,oryp,n3Wb,n3Fp,hArP,iYqx,kkjx,kjwV,6ACV,3QFF,3QWr,6ATN,aIyN,aIPF,5dfF,3Rsh,3RDx,6Bpx,eQFP,dsMV,dsqp,eQdN,iXUN,eQ83,hAgF",
                    "696e": "3QFz,or0F,n45r,aIhV,lHB3,lHXF,hAxr,hzQx,oryj,hA5p,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,9l5P,9kFN,dskH,5c+N,5dqV,dsMV,dskN",
                    "8f81": "oqWX,ePwN,ePTh,3QFz,hzzF,5dwr,5cPx,hAaX,5da1,hz/H,hAmh,hzKP,orE1,iYqx,c4m3,c4TV,aHRH,aIch,lHpP,lGZN",
                    "728f": "3QFz,or0F,3QLb,6AIx,lHvx,lI6V,hArV,hzQx,orsH,n3Fp,iXhj,iXDV,gbpH,lH3p,dr+b,aHRN,aJ4r,aIyN,3RxP,5dwx,eQLx,eQdN,3R5N,eQoX,6B31,5dlb,eQAh",
                    "81aa": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,gchX,aIK1,aIt3,eQ89,eQFV,c4TV,aIVh,c4IF,hAxr,iYqx,iXJx,hzQx,lHGH,kjTp,n3/P,n3u9,kk2z,lI1h,orDX,n3L1,5cV3,7YH9,7ZcV,5dqV,5cV9",
                    "799a": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ePYV,5cV3,3QWx,3Rbj,5d4p,5dfz,3RmF,3RDr,5dqV,7YBr,7Zix,iY3X,7YY1,iXJr,iYqx,kjTj,n3u9,n3/P,kk2F,dsf3,dsMV",
                    7751: "iyTh,izfr,e82l,e7Gn,h47x,mYul,pW/N,mYAb,h4Z/,h4HN,h4jP,bcf7,8gm3,8gx/,e8qv,e8Uz,8gE1,6NIj,5l0/,5kaD,8fHN,mXE7,mY0b,8g3X,8fHT",
                    "94e4": "gbpH,or0F,kjwP,kjg1,n3or,n3zN,iXUN,eQ2x,eQjp,7YSp,6ATN,3QWx,9kur,3Rh1,3RDx,7YXX,7Zix,kk8b,7Z7h,orUP,lHS1,gchX,gcEx,gbAX,gbRV,aInr,aHRN,6ACP,3QFF,gbGF",
                    "5d47": "orbP,lGZN,3QFz,n37F,9kur,5cPx,5dwx,9lbx,5d9X,aIK1,ePNz,c4aV,9jYH,ePI1,hzKP,hziN,iYqr,iXJx,eQLr,dsSx,dsHh,eQuF,hAgF,n3Qz,lI1h,oryj,eQjp,c4m9",
                    "760a": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,c3KH,gbGF,kj4H,hzop,ePTb,iXP9,3QWr,gbXx,3R5H,7Z1F,aIPF,aIEj,aI+V,9kFH,c4xp,7Zir,7YH9,3RDr,7Z1F,eQdH,eQLx,hA5j,hAmh,eQAh",
                    8071: "kjlz,or0F,kj4H,kjCx,lHpP,lH3p,n2SH,n3ox,kjfX,hzu1,ePwN,hztX,hzzF,hzKV,gbRV,ePTh,dsMP,drP1,eQLr,eQFV,iY41,orDX,kjNN,lIcr,lHMp,lI6P,kkdV,eQjp,eQdN,3Rmz,dsBF,5chH,5dqV,dr+b,5cEh,aIPz,aIch,7Yqb,7Z1F",
                    "868b": "oqWX,5ct1,5chN,6Axb,5ct1,5cJP,9kjh,3R03,iXP9,iYqx,5dwx,3RxV,3Rsh,5dfF,aI+P,eQp1,aIyN,orDX,eQp1,iXyb,dr+h,drDN,iXbN,iXyh",
                    "86f8": "6Arz,or0F,6AIr,5chN,9kur,5cPx,orJz,iY9F,kk8b,n45x,n3zH,lHMp,eQLr,eQdN,aIyH,aJ4x,3R5H,iXUN,iYqx,5dwx,3RxV,5dlh,ds3P,iXDV,iXhp,drJp,ds3V",
                    8765: "oqLH,orhx,kjlF,iXyb,lH91,hzKP,iXJx,iXbN,ePwH,hzu1,drOX,ePNF,iXsF,orDX,kjNN,lHMj,lIcx,eQjp,eQdN,iY3X,eQFV,eQLx,5cV3,dsf9,5dqP,5chN,3RDr,6Beh,7Z7b,aIVh,aI11,7Yf1,7Z7h",
                    "87fe": "oqWX,5ct1,5chN,5csX,6Axh,7Yqh,3QLb,6AIx,kjCx,kkjx,kk2z,n3/V,n3u9,orn3,kjwV,hzW3,iXUN,gcEr,gc19,iYfb,hArV,hAaX,gci1,dsMP,dskN,aIyH,aI+V,7YMH,7ZcV,5dqV,5c+N,7YMN,dr+b,iXyh,iXbN,drDN,dr+h",
                    "7b5a": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,hztX,aI11,aI6F,ds3V,gbAX,gbRV,hA5j,c4xp,aIK1,aI+V,c4TV,c4xj,gcth,3R03,9kA9,7Y3H,7Zix",
                    "7bfe": "kj4H,or0F,n3or,n321,n45r,n3L1,kjNH,orJF,n37z,kjwV,kkdP,n3QF,gccj,iX+p,iXDP,gbRV,dsBz,eQp1,c4TP,c3W1,6Am1,3QoN,6ACP,7Yqh,3QWr,3R09,5d4p,9l0h,6Bpr,3RDx,3RxV,5dfF,9kFN,eQ89,iYfb,gcth,gbB1,iXn1,iYfh",
                    "823e": "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,9kLj,aIK1,lHS1,lIcr,lHB9,lI1b,9l0h,9l5V,5c+H,hz/N,hAxx,5dwx,5c+N",
                    "7ccd": "3QFz,or0F,3Rbj,6AZp,5d4j,5cJV,eQjp,dsqj,ds9x,iXUN,iYkP,dsBF,dsSx,eQLr,5dfF,5dwx,3RDr,6Bpx,lHvr,lIcx,orsH,n3Fp,n3Qz,orPh,iXyb,kjwV,lGZH,iXn1,gbRP,gbpN,aIhP,c45h,drOX,7Y3N",
                    "914a": "orjN,oqLN,mYSj,mYij,mYAb,5kEN,3Rl5,5ksL,8fHN,8g3X,cEQB,cEKB,or7R,oqXJ,cEyz,bbH7,5kax,k06T,j/yN,5jCx,5kaD",
                    "91ba": "n3or,n2SN,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,orUP,n3Fp,7Z1z,n3QF,7YMH,7Zix,aJ4r,aIyN,kjNH,kkjx,eQoX,gccp,gctb,eQFV,3R5H,5c+N,5d9X,3Rh1,3Rsb,5dlh,5dwr,3RDx,iXJr,5cPx,5chN,iXbN,iXJx,dsSr,hAxx,hz/N,dskN,dsSx",
                    "8e2c": "6Arz,hzzF,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,iYqr,iXUN,eQuz,lI1h,aIPz,7Z1F,3R5N,3RDr,7Z1F,7ZcP,eQFV,eQjp,7YSp,3QQP,6AO9,n3u9,orUV,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "659b": "iXbH,or0F,lH8X,lHvx,hzFh,3QLh,3QWr,hzQx,hzu1,6Am1,3QoN,9kur,9k81,drOX,ds9x,aJ4r,aIyN,orPb,3Rsh,iY3X,kjTp,eQjj,dsw1",
                    "9f88": "hzFb,or6h,hziH,hzQx,lH8X,hzu1,lHvr,lHkh,iYkP,iXUN,gc6H,gcyV,lI6V,lHGN,3R5N,6B31,c4Zr,9l0h,eQuz,aIPF,7Z7h,3RDx,ds9r,6AIx,7YBr,5cnp,5chN,drDN,aHXj,drUF,ePNF,aIhP,drUF",
                    "9c91": "kj4H,oqX1,lH3j,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3RDr,3QQV,9kA3,9l5V,3RgX,c4D1,orDX,eQp1,kjI3,kkdV,eQLr,eQ89,9koP,hzKV,hzop,9k2p,9koV",
                    "9cc5": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,n3Fj,lHvx,3R5H,lHGN,5d9X,9l0h,orPh,hArP,kkjx,eQoX,hAb1,gbXr,gccp,9koP,dsf9,aIJX,c4xp,5dwr,9l5V,9kjb,hzFh,hziN,9jYN,9kjh",
                    "97b2": "oqWX,iXn1,iXyh,or6h,lGZH,lHpV,3QFz,iXsF,7YvP,7Y3N,7Zir,7YBx,5dfz,3Rsh,5dqV,dsMV,dsf9,3R09,aI+P,aIt9,eQoX,7YY1,gc13,gcEx,orsH,gc6N,gctb,orPh,iXP3,iYkV,lIcr,lHB9,gbvj,gbRV,c4aV,c3Qp,gbvp",
                    "9afb": "orhr,oqX1,gbB1,drJp,ds3V,ePTh,gbpH,gbXx,iXDP,iXn1,lH8X,lHpV,lHGH,lHMp,n3QF,orPh,lI6P,iY9F,hA5p,hz/N,dskH,dsqp,gcyV,hAxx,aHRH,aJ4x,7YH3,c4m9,7YeX,7Z7h,6Arz,6B8F,3RmF,3QFF,6ArF",
                    "9f39": "oqXJ,mXy1,h3zx,h47D,mY67,mXW5,j/WL,k06T,j/yH,j/KP,e7Ab,3QoN,3QuT,3QML,3QGV,e7Sp,e88h,6MY7,3R93,3ReV,9JHF,9J7z,bcDb,8gy5,3RJ9,cFAJ,e8UF,fE6p,fDEf,cF6P,bbT3,bbZ5,bbAX,bbH7,8fHN,8fBN,8fZL,8fTV,h4BH,fDQh,lvCF,lv+P,iz/t,or+3,orB/,izDv,iz/z",
                    "4e98": "q2Cz,q1oR,gvfd,gw3b,5sm7,5qXh,lhel,bNkb,bMwj,lgqz,lher",
                    "4f89": "orhr,gbvp,iXsz,3QFF,5d9X,3RmF,6BjV,9l5V,9kFN,c4rN,c4aP,c4Zx,eQAb,eQ89,ePYP,kjZ1,orE1,lHvr,lIcx,kjYX,eQLx,eQR9",
                    "8baa": "kjfX,n2Yp,gbpH,gbB1,3QA1,6Axh,orDX,5da1,hAxr,5dwx,5cPx,hzQx",
                    "90c7": "hziH,or0F,ds9r,drP1,7Z1z,6Beh,6BjV,7Zix,c4Zx,eQAh,hAxx,n45x,n3L1,3Rh1,5cJP,3QWx,3R09,5c+N,lHGN,lH91,hztX,hzQx,9kux,9k81,hzu1",
                    5844: "oqWX,7Yf1,7Y3N,9kjb,7Yf1,iXbH,iXyh,n3zH,hz/N,hAaX,n3L1,dsBz,gccp,ds3P,dsSx,dskH,7YMN,3QQV,5d9X,3RmF,3Rsh,5dqV,aI+V,aIyN,hzQr,n3ox,n3Wh,hAmh,hzQx",
                    "83b0": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,7Ykz,hzzF,7YvP,6AaN,drDH,ds3V,c4m3,gccp,eQjj,eQLx,c4Oh,c4CX,7YY1,3R09,3QWx,7YXX,3RxV,3RDx",
                    8564: "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXhj,iXJx,gbGF,c4aV,6ACV,3QFF,3QA1,6AaH,7Yf1,aIhV,dr+b,aHXp,aHRN,gbGz,ePCp,dsf3,c4gx,3Rbp,3RDx,6AZj,6Bpx,iYfb,6Beh,hA5j,hAxx,gc6H,iX+p,c4Zr,c4xp",
                    "64d7": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,gbRP,gc6N,lHGN,lHpV,9kjh,6ArF,aJ4r,aIK1,eQjj,eQR9,3Rsb,eQAh,hAxr,gcyV,gcnz,hAb1,kkjr,kjZ1,orJz,lI1h,aIhP,5cJV,5c+N,aIyN,aIhV",
                    "555c": "ordR,orw3,lvwP,fDa5,lveB,k00X,fDyj,fDKf,lw4V,os49,orI5,lvOH,k0B1,fE6p,cFiL,cFGV,9JHF,3Rl5,3RJ3,9JjB,3R8Z,8g3X,9IRr,cEQB,cF6P,9J7z,3QMR,mXxX,mXQ9,cEEF,cEmx,mXy1",
                    "5c7a": "6Arz,or0F,hzQr,6AIx,6AaN,hziN,lHB3,lI6V,eQFV,eQdN,5c+N,3Rbp,3RDx,6Bpx",
                    7315: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,lHpP,lHB9,hzW9,hzKV,ds3V,dsf9,5cV9,3QWx,5cJV,5d4j,3Rh1,5dfF,hAgF,hArP,iYqx,kkjx,kjTp,gc6H,orE1,7YMH,dsw1,7Zir,c4Oh",
                    6092: "3QzX,oqX1,7Zir,5dwx,5cPx,6ACV,gbRV,gcyV,c4TV,c4aV,gccj,c4xp,hzFb,kjlF,drDH,iXbN,iYfb,n3Wh,n3ox,iXJx,iYfh",
                    "6d19": "kjaj,n2SN,ePCj,hziN,3Quj,c3/F,5cyz,5cEh,c4rN,5dwr,aIPF,oryj,3Rbp,gbMb,n3ox,iYfb,iXDV,dr+b,dsSx",
                    "6fde": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QWr,5cV9,6AO9,6Bpr,6Axh,3Rmz,6B8F,aIhP,aI+V,dsqj,7YSp,hzQr,hAmh,kk8b,kjCx,orsH,n3u9,7ZcP,dsMV,ds3V,7YvV,7ZcV,eQAb,n3Wh,n3ox,eQ2x,eQAh",
                    "59af": "oqRj,aHXp,3QWx,3QoH,9kjh,iXyh,iXbN,c4Zr,c4gx,orDX,5da1,5cPr,iXJx,iYqx,5dwx,5cPx",
                    "7ecb": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,3QWr,6ATN,orsN,3Rmz,orJF,7Z7b,6BjV,7Zix,dsSx,ds9x,hzQx,hArV,lI6V,lHpV",
                    7477: "lHez,lGZN,ePwH,ePNF,6Arz,5chN,lH8X,6Am1,orUP,n3iV,kk8b,lI6V,lHMj,kjZ1,kjCr,lHvx,gbRP,iXJx,iYqx,gcyV,gccj,aIyN,7YvV,aIyH,aI+V,6B31,3QWx,3QQV,7YMH,5dlh,3RDx,ds3P,dsSx",
                    6971: "3QzX,oqX1,3QQP,3QWx,7YSp,c4xp,c4m3,c4IF,9l5P,9koV,7YSj,3Rsh,3RxV,gchX,aJ4x,gbRP,gcEx,dr+b,ePNF,gbvj,c3KN,iXyb,iXbN,iYfb,iXJx,lHpP,lI6V,oryj,gccp,aIch",
                    6217: "or6b,n3dh,hziN,iXP3,n3dh,c3/z,aIch,c4aV,hzKV,hzu1,7Yf1,6ArF,6AIx,7YBx,3QQP,3QWx,eQLx,gc13,hAxx,orJz,7Z1F,3RxV,5dwx,n3/P,lIcx",
                    "6bf9": "or6b,n3dh,hziN,hzQr,hzu1,n3db,iXP9,orUP,n3Fp,n3Qz,5dfF,3Rsh,3RDx,6Bpx,c4xj,dsMV,iYkP,hA5p,eQdH,5c+N,3R09,5cPx,ds9r,7YBx,c3Qj,c45h,9kjb,9k2p,5csX,3QFF,5cEh,ePTh,ePCp,3Qup",
                    "6b59": "iXbH,or6h,iXUN,kjlz,kjwV,c3KH,c3/F,5cyF,3QA1,9kdz,5chN,9k2j,7Yf1,c4aP,c4rN,5c+N,3R09,9kFH,5cJV,9kur,7YH9,3Rbj,9l0h,hAmh,hArP,kkjx,kjZ1,hA5j,orJF,3RDr,9l0h,hztX,hzQx,eQ2x,ePI1,hzu1",
                    "60ab": "n45r,n2SN,kjI3,orn9,kjfX,kk8h,ePwH,hzop,hAxx,eQFV,c4Zr,aI+V,aIK1,c4xp,eQjp,ePTh,dr+h,aHRN,5chH,7Y9p,7Yqb,5cEh,3QQV,3Rh1,5dfF,6B8F,7ZcP,6Bpx,6ATH,7YH9",
                    7791: "iz3j,iyNh,cEmr,cEEF,3QML,3QSX,6N2d,6Nqb,3RD3,3RJ9,9IRl,9JHF,cF6J,bcrf,h4HN,h47D,lv+J,os49,ordX,lv8B,oqLH,or1V,6MG9,6Mo1,oqLN,e88h,k06T,k0H7,e8ID,e88n",
                    "94f7": "gbpH,or0F,gbMb,gbB1,aHRH,aIhV,6ACP,3QFF,gbGF,hAaX,hzKV,orhr,9kux,3Rh1,3QWr,7YSp,hA5p,kjfX,kjwV,iY9z,iYqx,5dwx,5dfF,iY9F",
                    "768e": "oqWX,kj4N,9jYN,9kjh,kjrh,kj4N,ePTb,ePwN,hz/H,eQ2x,eQLr,hAmh,eQAb,c4Oh,3QWx,3QQV,3RDr,c4rN,eQdN,kkjr,kjCx,oryj,lHS1",
                    "763f": "n3Fj,orsN,lIcr,lH91,6Am1,3QoN,3QLb,3QWx,6B31,9l0h,9kjb,9lbx,aIEj,7YMN,3RxV,3RDx,c4Zr,eQAh,c4D1,gctb,eQAh,eQLr,iYqx,iY41,eQp1,eQdH,iXUN,iXyh,ePTh,ePHX,c3KN,iXbH,gbB1,gbXr,eQ2x,c45h,c4rH,eQ2x",
                    "53a3": "k0T3,j/QV,mYAb,lvUT,mYid,k0j3,h47D,fDa5,fD49,fE6j,fE0j,h4BN,k0o/,3ReV,e8qv,bc35,bcPj,3QoH,6MA3,oqXP,os49,8gPZ,e8Oz,e82r,8g3X,8gQ3",
                    5055: "drDH,or0F,3QzX,iXn1,7ZcP,7YvV,gcEr,eQLx,eQp1,gccp,oryp,orbP,ePYV,eQ2x,gc6N,iXDP,kjNN,kkjr,iX+p,3QQP,c4aV,c4TV,3RxV,3QQV",
                    "8c0f": "kjaj,n2SN,hziH,hzu1,3QA1,6Axh,9kFH,3QLh,9kQX,3RDx,3RJ9,oryj,3Rbp,lHkb,lIcx,dskH,gbXx,gctb,dsw1,hzKP,hArV,c4TV,c4aV,hzKV",
                    "51f5": "qJeH,66TN,68X1,qLi1",
                    "82cc": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,hzFb,3QLh,3QQV,6AO9,3RDr,3RxV,5dfF,aIyN,c4rN,drDH,dsSx,hAmb,ePYV",
                    8406: "n45r,n2SN,oryj,lHMp,lHpP,orbV,hzKP,kjI9,c4m3,hzW9,3R03,9kA9,7Y3H,7Zix,aIcb,7Yf1,eQAb,ePI1,c3VX,hzu1,hAmh,c4Oh,c4IF,c3W1",
                    "55cc": "pWxx,orpZ,mYij,pX5N,mYul,lveB,lw4V,bbT3,izrt,e8Uz,izPx,5j+v,5kWV,5kax,cEWD,cFuT,5kKT,cFiL,5kyR,5kmJ,cF6P,mXxX,mXQ9,cEEF,cEmx,mXy1",
                    "5d58": "7YeX,oqX1,5cyz,5cEh,6AIx,aIEp,c4TP,c4m9,5dwr,9kWF,eQoX,3Rh1,eQFP,hAxx,hzW9,eQ2x,orsH,kjNN,kk8b,orPh,lHvr,lIcx,iXyb,7Yqh,7Y3N,iXbN",
                    "998d": "gbpH,oqX1,kjfX,kjCx,hzKV,gbGz,5cyF,5cEh,6ACV,3QQP,3QWx,9kR1,c4D1,eQ83,eQFV,3RDr,9kR1,9kur,9lbx,lIcr,lHvx,orPb,kk8h,kjNH,orsN,c4TP,hArV,hzW9,c4m9,c4TV",
                    "6e16": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,kjTj,3Rbp,iYkP,lIcx,lHpV,iXyh,n3Fj,orsN,dsHb,ds9x,hzQr,hAmh,9l0h,9kux,hzQx",
                    "8ff3": "lH8X,oqRp,hziH,hzu1,6Am1,3QoN,6AlX,3QLh,3RDx,6Axb,6Bpx,c4xj,6AZp,c4gr,c4Oh,ePTb,ePYV,gc19,hA5p,lI1h,n3Wh,n3dh,eQFP,iY41",
                    "5ad4": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,n3KX,oryp,iYkP,lIcx,lHvx,iXDV,iY9z,hzW9,9kA9,9lbr,9koV,eQuz,9kWF,eQ83,eQFV,3QQP,7YMN,3RxP,7YY1",
                    "7f1f": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,3QQP,ds3V,dsMV,5dqV,3Rsh,3RmF,5da1,lIcr,lHpV,n3Fj,orsN,7YH3,aIt9,aIPF,7Z1F,7YH9,gbXr,iXJx,iYfh,gcth,gbXx",
                    "67ad": "lHpP,orn9,iXP3,iXJx,hA5j,hAb1,iY9F,lHXF,lHeF,gbGF,gcyV,c4TV,aIVh,aIPF,c3VX,c4D1,3R03,dsf9,5dwr,5dqV,6B8F,aIyN,aInr,6ArF,5cnp,5chN",
                    "6a2f": "3QzX,oqX1,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN,hzW3,iXJx,iYfb,hAgF,gbRP,gcEx,oryj,gccp,lHvr,lI1h,5cPr,ds9x,dsMV,5dqV,5cPx,7YMH,aIyN,aIPF,7Z1F,7YMN",
                    "80b7": "hzKP,hzop,c3Qj,c4aV,3QoH,5cnp,n2Yp,n3iV,5cJV,3QLh,3QWr,dsw1,hAb1,oryj,hzW9,kjNH,kkjx,iYqx,hArV,3RDr,dsw1",
                    7110: "or0z,7YkF,3QoN,5cJP,7Yqh,ds9r,dsSx,n3Fj,dsf9,n3/P,n3ox,iXP3,iYfh,dsHh,hzzz,kjwV,ePCj,iXhp,5c+H,aIyN,aIVh,5dlh,5c+N",
                    7829: "n3iP,n2SN,ePwH,n37F,oryj,6AZp,3R09,orJz,3RmF,lHB3,lI6V,hArV,hzW9,dsf9,dsSx,7Zix,6BjV,7Z7h,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "948c": "gbpH,or0F,kjCr,kjg1,kjNH,kkjx,gcnF,5dfF,3Rh1,5d4p,6ACP,3QFF,gbGF,gbAX,gbRV,aIhP,aHRN",
                    9537: "gbpH,or0F,kjwP,kjg1,gctb,gc6N,ds9r,dsSx,c3KH,c4aV,gbRP,gbB1,gbGz,3QFF,6ACV,5d4j,3Rh1,3RmF,6BjV,9l5V,9kFN,dsBF,lHvr,iXJx,iX+p,lHMp,lHvx,lHXz,lIcx,iYqx,iY9F,lHXF",
                    "9e55": "drJj,oqRp,iXbH,iXn1,gbXr,gbMh,aIcb,aInx,3QzX,6Axh,lHkh,lHvx,5cPx,3QQV,9l0b,9kFN,5d9X,3RmF,3Rsh,6Bpx,dsSx,dsqp,lHMp,lI6V,gcyV,eQAh,iY9z,hAgF,orJz,lHMp,drOX,7Yf1,7Y3N,drDN,drP1",
                    "88c6": "lHez,oqX1,kj4H,kjwV,iXDV,c3KN,3QFz,gbGF,5cV3,5dwx,hAxx,hzW9,ePYP,dr+h,aInx,c4Zr,c4m9,orDX,hAb1,iYfb,lIcx,lHB3,kjNN",
                    "4ec3": "hziH,orbV,3QzX,iXn1,5cV3,3R5N,3Rbp,5da1,lHS1,lHpP,lIcx",
                    "8a07": "hziH,or0F,lH8X,lIcx,5dwx,3RxV,3Rsh,5dfF,c3/z,c4IF,eQuz,ePNF,hztX,hAmh,kjI3,iXUN,6B2X,9kR1,9kjh,6Axh,6B31",
                    9649: "orpT,or+3,mYMj,izJB,h4jP,fDm7,fDgb,cFAJ,cEQH,5ksF,cFcL,5j+v,5kWV,bbH1,9Izj,9IFp,bbZ5,fDa5,iyZj,lv8B,or7R,oqLN,3QoN,izJv,h4BN,fE0j,fE6p",
                    5773: "iXyb,iXbN,7YeX,oqX1,9kjb,6AaN,6AZj,9kFN,7YSj,7YvV,hz/N,eQ2r,hzFh,n3u9,iX+j,iYqx,5dwx,3RxV,3Rsh,3Rbj,6B8F,orJF",
                    "835c": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXmX,aI11,aI6F,ds3V,gbAX,gc19,iX+j,c4xp,aIK1,aJ4x,dsSx,eQjj,hArV,3R03,aIt9,7Y3H,7Zix",
                    "84d0": "n45r,n2SN,oryj,lHMp,lHpP,orbV,kkdP,kjg1,6Am1,3QoN,5cV3,5cPx,3Rbj,3Rh1,9kR1,7Ykz,7Zix,aIt3,9kux,9koV,ePYV,eQLr,ePNF,dsqj,aIPF,9l5V,9lbx,aIVb,c4TV,hAmb,hzzF",
                    "63f8": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,lIcr,lHvx,kjYX,eQLx,ePYP,kjTp,orDX,gci1,aInr,aI+V,5dwr,5cJV,dsMP,7ZcV,7YBx,ds9x,dsMV",
                    "54e7": "gccj,oryp,kjwP,kkdV,gcEr,gbMh,gcnz,5dfF,3Rh1,5d4p,3QLb,7YH9,gc19,7Ykz,c4aV,9lbr,c4TV,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5693: "kjrb,lHkh,lIcx,kkjx,gcyP,iYkV,iY9F,gcnF,9lbx,9kA3,9l0h,c4Iz,c4rN,9kQX,5da1,3Rbp,5c+N,7YMH,3QQV,5dqP,7Z1F,9kjb,gccp,iX+p,iXJx,kjCr,hzQx,ePTh,c4gx,orsH,n3Fp,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "5f61": "oqLH,u2uh,mzZb,gYeN,9rhr,f5sh",
                    6005: "3QzX,oqX1,6B8z,3Rbp,3R5N,orsN,hA5j,lI6V,eQ2r,eQLx,dsBz,aIPF,3RDx,iXyb,gbRV,drDH,iXbN",
                    "6c74": "luYt,oqRT,k0T3,j/WR,orvZ,lvCL,3ReV,k0o/,fDKf,cFAP,iyNb,fCU7,cEEz,3QuT",
                    "5c3b": "j/KJ,k0H7,orU7,oqXP,8fNP,3QoN,3QML,9J1t,h4dJ,e7Yf,e8Cx,5kEN,3Rx7,3RJ9,6NIp",
                    "9a8a": "oqLH,or1V,fD49,j/EN,e7Gn,e7Yl,5j+B,3QGV,3QAP,5jID,bbT3,9Inh,3QYN,k06T,k0o/,5ksL,3R93,5kgJ,e8kt,fDsd,e8Ot,fDWn,5kKN,3RD3,5kWV,k0T9,k0B1,3Rr1,os43,orjT",
                    "73c0": "q1OH,q1ih,i5ub,i5+N,8C4r,6/1x,q1BJ,8BTz,orG7,rCvX,gwmD,gvLF,orzz,6/Rp,70st,osaJ,orzF",
                    6855: "3QFz,or0F,ePTb,ds3V,aHRH,gbB1,iXbH,iXDV,n3Fj,kjCx,5cPx,5dwx,kkjx,kk2F,dsBz,dsSx,dsqj,ds9x",
                    "6b9b": "or7L,oqLN,orjN,or+3,k0o/,9Jdv,8gm3,9J1t,fCU1,cEEF,3QuN,8fTV,bbZ5,iz9l,iyTn,oqXJ,cEmx,izJv,iA5F,fE6p,9JjB,fDQb,e8Cx,9JHF,5j+v,5kWV,cEWx,izln,izxz,cF6P,cEWD",
                    "89cb": "orgb,oqLN,i5+H,gvsh,dkIZ,dl0p,gvsh,dkCt,gv2l,i5AR,dkiX,gv2l,6/xX,5qXh,or3d,6/l3,jGBh,aaH7,5rEL,3QVh,3QOJ,70sn,3RPJ,3RCB,5s2H,aaNH,bNqv,orZB,orzF,bN0F",
                    8159: "3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,iXDP,lHvx,lIcx,kkjx,iYkV,hzW3,hAmh,dsSr,ds9x,dsvX,5da1,3Rbp,5c+N,aIyH,6AIx,6Bpr,aIVh,n3KX,oryp,hzFb,hzop",
                    "793b": "lHkb,or0F,kj4H,kjCx,iXJx,aHRN,3QLb,ePTh,aIt3,ds3V",
                    "9efb": "hzzz,or0F,orbP,hzKV,iXJr,lHB9,lH3j,iXn1,hz/H,hziN,iYqr,iX+p,n3/P,lI6V,dsBz,orJF,9kFH,dsw1,dsSx,c4Zx,3R5N,3RDr,9kR1,3QLb,gbMh,3QWr,5cV9,c4m9,c3Qp,3Qup,9kdz,7Yf1,7YBr,9koV,eQ2r,ds3V,drUz,ePI1",
                    "94cc": "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,gccj,5d4p,3Rh1,3RDx,6Bpx,9kLj,eQFV,3QQP,6AO9,n3u9,n3Wh,iYfh,iXP9",
                    "956a": "ePwH,oqX1,kjrb,kjap,n3iP,n3zN,iXUN,iXDV,ePYV,eQdN,5c+N,3R09,5cPx,6Axb,3QA1,gbB1,gbvj,gbMh,c45b,c3KN,5dwr,5da1,3RDr,6Bpx,iYfb,5dlh,iYqr,n45x,n3L1,iY41,iYqx,eQLr,aJ4x,aIK1,eQp1,eQLx",
                    "75cd": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QFz,3QLh,5cPx,9kLp,kjTp,iXDP,iYqx,gbRP,gcth,dsHh,ds3V,aIhV,aJ4x,7Zix,6BjV,7Z7h,9kLj,3RxV,3RDx,gbGz,c3KN,kj4H,hzop",
                    "801c": "3QFz,or0F,aIcb,7YBx,6AaH,c3W1,ds9r,drDN,hzoj,hzKV,lHvr,lGZN,gc6H,gcyV,lI6V,lHGN,5c+N,5dwx,c4Zx,c4rN",
                    "989e": "os43,orB/,k0u/,orU7,fDQb,8gE1,3R93,3RJ3,8gE1,9JBt,k0N3,k0o/,9Jdv,8g3R,5kgJ,bc35,bcfd,8gfZ,3QMR,8fHN,5jUF,3QoH,8fTV,bbT9,bbB1,e7Ab,e7Mj,h4dJ,ordR,cEQH,e7Md,oqXP,izfl,iyZj,luYt,lveH,oqLH,orpZ",
                    "86cf": "pW9t,5jOz,5jCx,6ML/,5jOz,9ILf,5k4H,9JBt,9J1t,5kgD,5kWV,e8wv,5kyR,fE6j,fE0j,h4BN,lvwP,fDm1,fDsd,h4pL,mYMj,or+3,orjT,j/WL,e7Yl,e7Ah,j/yN,j/WR",
                    "873f": "oqWX,6Am1,6AaN,7YvP,6Am1,9kjb,6ACV,gc13,c4aV,eQ83,eQjp,9kFN,6AO9,3QQV,aIyH,ds9x,aIVb,9l5V,eQFV,eQuF,5dfF,3Rsh,3RDx,6Bpx,hArP,iYqx,kkjx,kjCx,hzKV,oryj,lHS1,dr+b,iXyh,iXbN,drDN,dr+h",
                    "87e5": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,3QWr,6ATN,3RDr,6Beh,c4m3,c4TV,9kQX,gci1,hzQr,hAxx,lIcr,lHvx,orPb,n3Wh,hAmh,orsH,hz/N,9l5P,eQFV,eQ89,9kA9,9l5V,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7b0a": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,lHXz,iYkV,iXUH,orPh,lHez,iXDV,3R03,dsf9,3RDr,9kWF,gcnF,gctb,ePI1,6Am1,3QoN",
                    "7ba8": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,iXsz,5cyF,3QA1,5cnp,c4aP,7Y3N,ePwH,ePYV,hzW3,hArV,c4xp,aIt9,aInx,gc6H,c4IF,aI+V,aJ4x,9kFH,9l0h,6Bpr,6AIx,aIJX,3Rh1",
                    8201: "orjN,mXK3,h3Lz,h4HT,mYGn,mYij,k0iZ,k0H7,j/KJ,k06T,cEKv,6MM5,3QAP,3QuT,bcVj,bbB1,3Rk/,cFiR",
                    "7faf": "lH8X,oqRp,orbP,lHkh,kj4H,kjCx,gbXr,gbpN,c3KH,c4gx,3QoH,7YkF,kjlF,kkdP,kjI9,dsf3,gccp,dskH,6ATN,6Beh,3Rsb,3RxV,5dwx,eQLx,eQdN,dsBz,c4IF,9kLp,9l5P,c4IF,hArP,hzW9,n3u9,n3/V,hArV",
                    "7d77": "oqWX,gbB1,ePCp,iXsz,gbpN,lGZH,lHkh,lHvr,lHXF,gcnF,eQAh,eQLx,gcEx,orsH,iXUN,ePYV,gc6H,iXJx,ds9r,aIch,aIyN,7YvP,c4xp,7Ykz,7Z7h,9kWF,3R03,7YH9,6B2X,3Rsh,3RxV,6Axb,5cyF,3Qup,3QoN",
                    9172: "orjN,oqLN,or7L,cEKB,cEQH,8fHN,8g3X,bbH1,cEyz,oqXP,fE6j,fDyj,9Jdp,9JBz,3RJ3,3R93,fDQb,3Rr1,k06N,5kaD,5jCx,j/yN,k06T,k0oV,orB/,or+3,k0N3,k0o/",
                    "8dce": "lHXz,orE1,hArP,iYqx,kkjx,kjI9,hzQx,gccj,5d4p,3Rh1,3RDx,6Bpx,7YSj,dsMV,7YvP,5cnp,5chN,drJj,5cnp,drUz,ds3V,6Arz,hzzF,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e76": "6MG3,iz3p,5jCr,5jID,8g3X,e7Sj,e82r,5jIx,e7Gn,3QML,6MY7,orjT,osaf,h4HN,lv+P,iz/t,iAbL,fE6p,fE0d,6NCj,3Rr1,3RP9,6NCj,3R2T,6Nef,fDEf,fDQb,cFoN,cF0J,fDsd,izPr,izrt,lvOH,k0v5,k0iZ,lvqJ,oqRN,or7R,iz9l,iyTn,oqRT",
                    "96f3": "orZZ,oqRT,h4TP,lw4V,luMx,h3zx,fDg5,fC+3,orpT,fDsd,izDp,izVD,fDWh,fDEf,iyZd,izfr,bcld,6N8j,3QYT,3QSX,9IRl,9JBz,5kQP,3Rx7,3Rr1,5kyR,cFAJ,cEEF,6MG9,3QuT",
                    "933e": "or0z,iXhp,iXDV,gbpH,gbRV,kjlz,drUF,n2SH,n3iV,orUP,n3zN,hz/N,eQ2x,9jYH,9k2p,dsf9,9l5V,9lbx,9kQX,9kjh,kk8b,dsHh,kjNH,kkjx,3R03,9kA9,5d9X,3Rh1,3QLb,5cEh,3RDr,3QoN,6AlX,6Beh",
                    "9cab": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,5d4j,7YMN,6ATH,5cV9,5cPx,n3ox,n3Fp,c4xp,c4gx,hA5j,hzQx,9l0b,7ZcV,9lbx,n45x,n3QF,3RmF,9kjb,hzFh,hziN,9jYN,9kjh",
                    "9cd5": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,7ZcP,7YH9,3R03,3RxV,c4TV,c4m9,n3KX,eQp1,n3or,n3/V,hA5j,hzW9,eQ83,eQjp,eQFP,eQuF,hAgz,hArV,gcEr,kkjx,kjCx,gbXx,9kjb,hzFh,hziN,9jYN,9kjh",
                    "9b43": "or6b,lH3p,drJp,ds9x,lHvx,lH3p,hzQr,hzop,iYqr,iXP9,n3Wb,lI6V,orDX,gci1,9kFN,5cJV,dr+b,5cEh,3QQV,3RDx,5dwx,eQuz,7Zix,gchX,gcyV,dsMV,aIVh,6AZp,3QoH,7Yf1,drP1,drUz,lHeF,aIhP,9koV,9kux,aIhV",
                    "9e9d": "orsH,n3zN,n4b3,n321,6Am1,3Qup,kjlz,kkjx,hAxx,hzzF,lHvr,hzQx,lHRX,hAb1,hA5j,dsqp,dsMV,eQFV,gctb,gccp,gc6H,gbRV,hzKP,ds3V,dskN,dsf3,c4aV,5cPr,3R5N,c4rN,c45h,7Yqh,7YMN,3QLb,6AO9,aIcb,aIyN,9kFH,9kjh,9kLj,9lh9,c4TP,3RxV,5dfF,7YXX,5dlh",
                    "6bd3": "kj4H,oqX1,lHpP,lH3p,lIcr,lHB9,orDX,n3L1,gc6H,lHS1,gcEr,gc19,eQLr,hArV,dsHb,3Rsh,3RDx,6Bpx,dsvX,5da1,dskH,6ATN,3QWx,3QFz,3QLh,5cJV,iXDV,iXhp,7Y9p,7YBx,9kdz,c3/F,drDH,ds9x,hzzz,ePNF",
                    "4fdf": "drDH,or0F,3QzX,hzu1,3QLb,aIEp,eQjp,eQ2r,eQFV,c4aP,gbXx,aJ4r,aIch,9kQX,3RDx,3RJ9,lI1b,hAxx,iYqr,iXDV,orE1",
                    "8be0": "luYt,oqRT,h3zr,h3Lz,5jOz,5jUF,8g3X,5kWP,5k4H,h4pF,5ksL,h47x,h4HT,bcPd,bc97,h4TP,orB/,pWPL,h3Xv,orB/",
                    9143: "orBV,oqRT,fDg5,ordX,fDyd,fDsd,izrn,izxz,iyZd,iz3p,fD43,fC+3,fCNX,luMx,lvIR,fDKl,3Rx1,orU7,osaf,iAbL,fE0j,cFM/,8h0f,6NIp,8gQ3,cFiL,6Nkl,6N8j,cF6P,cFiR,cEWx,cEKB,6MM5,6MY7,cEWD,cEyt,6MA3,6Mo1,cEmx,cEyz",
                    8284: "iXDP,orbV,oryj,iX+p,lGZH,lIcx,hzQr,7YBx,5cyF,3Qup,3QoN,6AO3,aIch,6Bpr,3RDx,3RmF,5da1,eQp1,ePI1",
                    "83a8": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXP3,kjI9,eQuz,ePNF,9kA3,5da1,3Rsh,3RDx,7YSj,9kWF,6AIr,3QLh,3QFF,hzzF,hAgF,c4IF,c3/F",
                    "85b0": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iYkP,iXhp,gbpH,gcEx,6AO3,iXP9,6AaH,6Bpx,9l5P,9k2p,dsqj,aIEp,ds3P,aIhV,3QoH,5cnp,3QQP,5cEh,3RgX,5d4p,5dqP,3RDx,aIVb,dsHh,drP1,aI11,aIVh",
                    5416: "k0iZ,orjT,orZZ,k0B1,3Rk/,h4vR,mXxX,mXW5,cEKB,cEmx,mXy1",
                    5599: "orsH,iXJx,iYfh,lHB3,lI1h,gcth,gbRP,gcEx,gccj,c4gx,c4aV,eQjj,dsw1,5da1,3Rbp,3R5N,5cEb,5cPx,6ATN,9kR1,dsMP,aIPF,5dwr,9kWF,c4xj,9kA9,7YvV,7Yqh,kj4H,kjlF,aI6F,aHRN,kj4N",
                    "5cc1": "n2Yj,kjap,kkdV,n3/V,kjI3,orn9,hzKP,gbvp,9k2p,9kux,eQ2x,9kur,5cyF,3Qup,3QoN,3Rbj,gccp,gcEx,9lbx,7ZcV,7Z7h,9kWF",
                    5924: "orhr,n3iV,lHeF,lH91,n3iP,n3Wh,kjTp,iXDV,iXn1,lHvr,kjCx,gc13,hzW9,dsMP,gcEx,gbvp,drDN,eQuz,ePNF,6AO3,eQ89,5c+H,3Rh1,3Rsh,3Quj,3QFF,5cJV,9kWz,9kdF,6B8z,c4IF,c3/F,6ArF,6B8F",
                    "610e": "3QzX,oqX1,3QLb,3QWx,5c+N,6B31,aI+V,aIyN,c4xj,7YBx,7YvV,7YMH,6AZp,3RxV,3RDx,gc6H,gcyV,orsH,ePYV,lIcr,lHGN,iXsz,gbMh,drDH,iXbN,dsMP,iYkV,iXUN,dskN,dsMV",
                    "6d94": "kjfX,n2Yp,ePCj,hziN,3Quj,drUF,3RgX,6ATN,5d4j,aIPF,aInx,aIJX,c4xp,c4Zr,c4TV,dsBF,gccp,dsf9,c4aV,c45h,oryj,hA5p,lI6P,hArV,hzKV,lHpV",
                    "9a9e": "n3zH,orn9,lI6P,n45x,n2Yp,lGZN,lHpP,ePYV,c3/F,aHXp,aHRN,lHMj,eQjp,c4IF,aI+V,aJ4x,kjfX,kk8h,hAmb,hzu1,ePwH,eQLx,c4aP,c4xp,9kLp,5csX,5d4p,3RgX,3RmF,5dlh,7Z7h,7Yqh,aIch",
                    "5a40": "oqRj,7Y9p,5cyF,3QoH,7YkF,iXsF,iXbN,9kur,aIt9,eQ89,gbXx,hzW9,n3u9,n3iV,3QQV,5dfz,3Rsh,5dqV,n3/V,n3Fj,n45x,iX+j,iY9F,aIPF,aIEp,iX+p",
                    "7efb": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,5kWP,3RJ9,3Re/,5kmP,bclj,bcJn,8gK7,6Nqh,8gy5,bc91,h4vR,bcVp,h47x,h4TV,orH/,h4vR,lvUN,mYMj,mYc7,lvwP,k0MZ,k0cZ",
                    "97eb": "3QzX,oqX1,7Ykz,6Axh,7YvV,c4aV,c3KN,gbMb,gbpN,kj4H,kjwV,hAmb,hz/N,5cPr,5dwx,5cV3,aIt9,aI+V,5dqV,aIPz,5dfF,5d4j,aIEp,lHGH,lI1h,dsHh,dskN,lHGN",
                    6963: "3QzX,oqX1,3QFz,7YBx,n3ox,n45x,kkjx,kjCx,n3KX,kjZ1,dsSr,dskN,9kFH,9lbx,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN,hz/H,5c+N,5dwx,hAxx,hz/N",
                    "65ef": "lvOH,lv2F,fDg5,8g3X,5jUF,3QuT,3QoN,cEmr,cFiR,5kyR,3Rr1,3RJ9,6NIp,or1P,orO1,izPx,iz3p,or1V",
                    "724d": "hzKP,orbV,hztX,hzQx,n31X,7Yf1,3QoN,5cJP,ds3V,drP1,3QWr,aIPF,gcnF,gcyP,hAxx,iYqx,iXP9,orDX,iY41,lHB3,lI6V,gc6H,eQjp,c4rH,dsf9,aJ4r,aIt9,5dwr,7Z7h",
                    "65c3": "lHez,oqX1,kj4H,kjCx,kjfX,7Yf1,3QoN,5cyz,3QLh,5cJV,ePYV,ePI1,oryj,hzQx,kkjr,kjNN,aInr,aJ4x,c4CX,dsw1,5d9X,3RmF,5dlh,gcth,gc6N,6ATN,3QWx",
                    7809: "e8en,pWDJ,h3zr,h4TV,k0H1,j/KP,mXxX,mYSp,cFGP,cEmx,cF0D,8fZR,6MA3,6Mo1,8g3R,8gK7,5kKT,5k4H,8g3X",
                    "7f5f": "lgDr,q1ON,q2cD,lh1t,bMW9,jGh/,guXH,gwmJ,q1oL,q2CF,lhrp,lgdB,q1oR,bNqv,5s95,5r8f,bMpL,bNqB",
                    9515: "ePwH,oqX1,gbMb,gbvp,c3KH,c45h,gbAX,3QA1,6Axh,3QWr,lHvx,lHMp,iX+p,gc19,dsqp,aIEp,9kFN,aIt9,5dlb,3RxV,5dwx,lIcx,lHXz,lIi9,kjfX,kjrh,9kQX,hAb1,hAmh,9l0h,9kR1",
                    "9e38": "lHvr,lGZN,lHpP,hzu1,6Am1,hzFb,6Axh,gcnz,gcth,hArV,lI6V,lHGN,dskN,dsSx,6Bpx,3Rsh,3RmF,5da1,5cEb,3QQV,5cPx,hzQx,hziN,3QoN,9l0b,9kA9,kjYX,iY9F,orJz,lHMp",
                    "7a86": "n3u3,orhx,iYkP,kkjx,lIcx,lH3p,iXbN,gbAX,iXyh,gchX,ePNF,iY3X,gcth,c4rH,dsf9,aI0X,aIVh,5cyF,6AIr,3R5N,3RDx",
                    5233: "or6b,lHkh,gbpN,gbXr,gbB1,lHkb,gc6N,lH3j,lHB9,dsf3,drJp,ds3P,9k81,9kA9,6AO9,3QQV,3QLh,5cyF,5dfz,3Rsh,3RxV,5dwx,or+x,9kQX,kjZ1",
                    "4edd": "h3zr,pWxD,pWDD,h4NP,h4TV,h3Rz,h4vR,5kgD,h4dJ,5jIx,5kQP",
                    "8c2e": "luSx,oqLN,h3zr,h3Lz,5jOz,8fZL,3QuT,8gK1,8g3X,e8Uz,cFGV,cFuT,e8Cx,orO1,orBV,os49,lvCF,izDv,iA5F,cF6J,fDKl,fDyd,e8et,e88n,orjT,or1P,orpZ,lv8v,iz9l,izrt,cEEz,h41H,bcJh,5kKT,5k4H,bc3b,bcJn",
                    "82f4": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,c4Iz,c3/F,7Ykz,7Z1F,3RDr,3QoN,3Rmz,gcnF,gbGF,3QFF",
                    8473: "n45r,n2SN,oryj,lHMp,lHpP,orbV,iYfb,kk2F,hArP,hzop,5cnp,3QoN,3QFz,3QLh,9kFN,c4rN,c3W1,ds3P,9kdF,5c+N,3Rbj,3Rh1,aI+V,dsMV,6Bpr,3RDx,3RxV,9kR1,kjTp,ePHX,eQdN",
                    6339: "oqWX,5ct1,3Qup,5chN,gbMb,aHRN,iXbH,iXDV,aInr,aJ4x,eQLx,eQ2x,5cPx,3R09,3RDx,6Bpx,eQoX,aIK1,hzW3,n3u9,n3/V,hArV,hzW9",
                    5472: "5cV3,orn9,iXDP,3QQV,gccj,gc19,iYqr,gcth,orJz,5dfF,3Rsh,3RDx,6Bpx,6AZj,3QWx,3QFF,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5639: "oryj,kjTp,aI6F,iXDP,gbXx,dsSr,kjTp,hAmb,iYkV,lHpP,lIcx,c4Ob,c4gx,9kLj,5d4p,3R5N,5cV9,5cJP,7YH9,5dqP,7Z1F,lGZH,lHeF,c3/F,c3KN,lGZN,eQ2r,9kux,9l0h,eQAh,eQ2x",
                    "5db7": "n31X,kjg1,kk8h,n3Wh,kjI3,orn9,hzoj,ePCp,drP1,ds9x,eQ2x,hz/H,hArV,gcyV,dsBF,c4Ob,eQp1,c4rH,c4Zx,aI+V,c4Iz,3RmF,3RDx,3Rmz,6AZp,9kLp,3R03,6AZp,6ACP,5cPx,3Quj,7Yqh,aIch,aI0X,aInx,7Y3H,c3W1,7YH3,7Y9p,ePHX,hzFh",
                    "5ed2": "n3zH,orn9,lIcr,lH91,7Yf1,3QoN,c4aP,3QFF,c4rH,c45h,ePTb,eQdN,hz/H,hzFh,dsqj,iY9F,c4CX,9kR1,3RDx,3RgX,7ZcV,gcyV,gcnz,gcEx,c4gr,iXJx,9koP,9kFN,5c+N,3R09",
                    9619: "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,6BjP,aIK1,6AO9,eQoX,aIK1,eQAb,hArV,hA5p,eQdH,kjZ1,eQ83,c4m9,c3/F,ePNF,gbRP,9koV,6ArF,kjaj,3Qup,iXyb,kjlF,kjI3,iXJx,hztX,hzW9",
                    "6eb1": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,7YH3,3QLh,3RDr,7Z1F,c4xj,3Rbp,c4m3,c4IF,9l5P,9koV,gchX,aJ4x,gbRP,gcEx,iYfb,iXJx,lHpP,lI6V,oryj,gccp,aIch",
                    9050: "luYt,oqRT,h3zr,h3Lz,6MA3,3QoN,6MzZ,3QMR,3RJ9,6ML/,or7R,orw3,k0j3,j/WR,fDs7,fDa5,bbY/,bcfd,6N8d,6Nef,8gE1,cFGV,fE6p,fDKl,6NCd,cFiR,k0u/,k0T9,os49,orI5",
                    "5b5a": "orUP,n2Yp,iY3X,lI1h,kjCr,iXP9,iXyb,kjlF,hztX,hAgF,ds9x,5cV9,3QWx,3QQV,5cEh,c4Zr,c3KN",
                    "7f35": "n31X,gbpN,gbB1,hztX,aHRN,aI6F,5chH,6ArF,3QQP,3QWx,5c+N,6AZp,9kLp,6AZj,3Rsh,3RxV,7Z7b,c4Oh,c4gx,7YBx,gcEr,eQLx,eQFV,gcth,iYfh,iX+j,iYqx,iXP3,iXyh,gbMh,ePNF,n3Fj,kjNN,iY9z,orJF,lHMj,lI6V,lHkb,lHB9,iXsz,n3dh,gc6H,eQ89,eQ2x,orhx,iY3X,gci1,eQjp",
                    "67c3": "3QFz,or0F,3RgX,7YMN,6AZj,c4TV,c4m9,eQuz,eQjp,eQLr,lHS1,n3L1,eQ2r,lHS1,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN",
                    "6a7c": "3QzX,oqX1,6AO3,5cEh,aIyH,aIch,gc6N,hz/N,gc6H,gbRV,hzKV,lHB9,orJz,lHS1,iY41,iYkV,lHRX,lI6V,gcyV,gchX,gcEx,gctb,c4D1,c4xp,7YSj,aIPF,9l0b,5d4p,dsHb,5dlh,3RmF,6Bpr,7ZcV,c4Zr,aI+V,iXbH,iXsF,c3KH,gbvp,dr+b,ePNF",
                    "8d32": "iXP3,orn9,eQoX,iY41,iXyb,ePTh,lI1b,lH91,hziH,hAxx,aIt3,7YH9,3QA1,3QoN,7Ykz,drUF,dsBF,7Z1F,7YH3,3Rsh,3RxV",
                    "810d": "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,3RCZ,8gK7,5kQJ,5kaD,cFcL,cFAJ,cF0J,fDE9,fDQh,fDm1,mYul,orI5,fE6j,mYul",
                    "71a0": "oqWX,6Am1,3QoN,5cEb,7YkF,7ZcP,7YBx,dsvX,aIyN,eQLr,n45x,n3QF,iYkP,kk8h,gcnz,kkjx,kjNH,gbRV,kjCr,iXP9,hztX,kjrh,ePwH,iXbN,n3iP,n3ox,n3zN,eQdN,5cPr,aInx,aI+V,5dqV,5cPx",
                    "78b2": "lHpP,lGZN,ePwH,lHeF,lHRX,oryp,kjCr,kkjx,hA5j,iXUN,iYfb,hAgF,dsMP,eQLx,gcEx,gc19,ds9x,3RgX,dsw1,6B8z,5dlh,6BjV,c4TV,c4m9,5cV9,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "94b0": "gbpH,or0F,kjCr,kjg1,lIcr,lHB9,3RgX,lHS1,3QWr,3RDx,6ACP,3QFF,gbGF,gbAX,gbRV,aInr,aHRN,dsMP,dsf9,6BjP,9l0h",
                    9556: "gbpH,or0F,kjwP,kjg1,or+r,orhx,gcnz,orJF,oryj,gccp,gbAX,gbRV,c4aP,c3KN,dsHb,dskN,aInr,aJ4x,aIJX,5da1,3Rbp,5c+N,9kFH,5cPx,5dqP,7Z7h,6ACP,3QFF,gbGF,kjI3,kkdV,gcyV,gc19,kjI9",
                    7592: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gbGz,c3KN,kj4H,hzop",
                    "891b": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,3QWr,3R09,5d4p,aI+V,aIhP,aJ4x,dsqj,9kFN,5dfF,3RxV,3RDx,hAgz,dsSx,ds9r,hA5p,ePTb,drUF,c45h,orDX,eQp1,kk2z,n3/V,n3u3,kjTp,iYqr,iXJx",
                    "4f67": "orhr,gbvp,iXsz,3QFF,3RgX,orE1,lI6P,kkjx,kjZ1,gbXr,gcK9,hAxx,dsBz,7Zix",
                    "51ab": "orej,safB,7zMR,iQlF",
                    "90b4": "orBV,oqLN,ordR,fDgb,bbN3,bcld,fDgb,6MY1,5kgJ,5kmP,6Nef,k0o/,j/ET,5jID,3RqX,orO1,os49,k0T9,h4HT,e8UF,9JHF,8gQ3,9JvD",
                    "57ef": "oqWX,6Am1,6AaN,7Yqb,6Am1,aIVb,aInx,6Bpr,3RDx,3Rh1,5d4p,eQjp,dsSr,kjTp,dr+h,kjwP,kkdV,hziH,hzFh,oryj,kjTp,7YBr,ds9x,dsHh,7Z7h,7YBx",
                    "833a": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gc13,hzW9,gbpH,gcEx,c3VX,gbRV,c4Ob,c3Qp,aIVb,dsBF,c4rH,5c+N,3Rbp,3RDx,6Bpx,3QoH,3Qup,5cyF,7YvV,c4aV",
                    "84f0": "n45r,n2SN,oryj,lHMp,lHpP,orbV,gbvj,kjlF,9jYH,ePNF,3QzX,aI11,3QLb,6AO9,aIt9,6AO3,3Rh1,3RDx,iX+j,5d4p,gctb,gccp,ds3P,dsMV,hzW3,dsf9,9l0b,9kLp",
                    "645e": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,kk8b,kjCx,hA5j,n3Fp,gccj,dsf9,dsw1,aIt3,eQuF,aIVb,aInx,9l5P,c4Oh,aIEj,3Rbp,3R5N,7YH3,3QLh,3RDr,7Z1F,hAmb,n3Wh,n3ox,hzQx,hAmh",
                    5555: "orn3,iXDV,lHvr,lIcx,5dwx,3RxV,3Rsh,5dfF,aIVb,7Z7h,7YBx,aInx,hA5j,7YSp,hzW3,hAgF,gbXr,iXP9,dsHb,ds3V,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5e11": "or0z,iXn1,ePYV,eQ2x,drDH,drJp,ePNF,iXJx,lHvx,lGZH,lHB9,lHMj,lIcx,kkjx,dsqp,dskN,iX+j,dsMV,dsSx,3R03,c4m9,6AZj,5da1,5dfF,6Beh,9l0h,9k81,5ct1",
                    7301: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,orDX,n3ox,7Z7b,kk8h,5dlb,3RxV,5dwx,or+x,iXDP,iY9F,6ACP,gc19,aIJX,eQjp,n3zH,3R5N",
                    6079: "3QzX,oqX1,3QLb,9kux,lHvx,lIcx,iY3X,dsw1,6ATN,3QWx,3RDr,6Beh,9kWF,c4IF,eQ83,eQR9,hAmb,gcyV,gbMb,iXsF,drDH,iXbN",
                    "6cb1": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,6Bpr,5dwx,3RxV,3R5N,5cV9,gc19,aIyH,dsHh,hArP,kkjx,kjwV,hzFh,orsH,lHMp",
                    "6f72": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,n3or,3QWx,orsH,n3dh,hz/H,hzzF,9kFH,dsf9,ePYP,7YkF,aJ4r,aIK1,eQoX,eQLx,orPb,iYfh,kkdP,lIcx,lHRX,kk2F,3RgX,iY41,iYqx,5dwx,3RxV,5dlh",
                    "598d": "oqRj,c3Qp,6ACV,5chH,aIch,iXyh,iXbN,eQLr,ePYV,n3or,n3/V,n3zH,6ATN,3QWx,n3Qz,3RmF",
                    "7ea3": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,5kmJ,3Re/,3Rl5,5kEN,orO1,izlh,iA5F,bcld,e8et",
                    7428: "n3iP,n2SN,lI6P,lHB9,gbpH,gbRV,aIhP,7Y3N,n37z,9kdF,eQ83,3R09,3R5N,5d4p,5dwr,3RxV,3Rsh,5dfF,eQuF,aIPz,c4Zx,aIt3,aIEp,iYkP,orUV,orn9,iXP9,iYkV",
                    "68fc": "ePNz,or0F,iXmX,gbpN,hzKP,iXyh,orJz,eQuF,lHGH,lIcx,lGZH,lHvx,hA5j,iY41,gcEr,iYfh,eQdH,aIPF,9l5V,9lbx,5c+H,3Rbp,5da1,9kR1,9kjh,9jYH,9k2p,aI6F,ds3V,9kur,6AIx,3QLh,3QFF",
                    "8f82": "oqWX,ePwN,ePYV,3QFz,hzzF,aHRH,aIhV,c4gr,kkdV,lI6V,lHGN,iXJr,oryp,iXUH,c4TV,c4Zx,lGZH,lHpV,5cV3,aIt9,aIVh,5dlh,5cV9",
                    7292: "3QFz,or0F,3QWr,ds9x,dsMV,5dqV,3Rsh,3RmF,5da1,lHpP,lIcx,iXhj,iXDV,gbpH,lH3p,aHRH,aHXp,ePYV,oryj,n3L1,7Z1z,aIPF,aIyN,7YMN,7Z1F,gctb,iYfh,iXP9,gc19,gcth",
                    "81cc": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,5d9X,5cJV,3RgX,aJ4x,dsSx,dsw1,aIPz,6Beh,3RDx,orPb,dsHh,iY3X,iYqx,kjwP,kjTp,hz/H,hzQx,orn3,hzW9,6AO3,7YBx,7YSj,6ATN,eQ2r,eQjp,aIEp,aInx,eQ2x",
                    "79a7": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ePYV,aInr,aJ4x,dskH,c4xp,c4Iz,dsHh,kkdP,kjI9,n3or,n45x,kjYX,orE1,5cV3,7YH9,7ZcV,5dqV,5cV9,eQFP,hArV,hzW9,eQ89,eQFV",
                    7747: "hzoj,hzKV,ds3P,drJp,orn3,kjNN,orUP,kk2F,kjCr,kkdV,lIcx,kkdP,gcyV,gc19,c4m9,c4Zx,dsY9,c4Zr,5dwx,3RxV,5dlh,kjYX,3Rh1,aIEj,3QQV,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94e5": "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,orUP,n3u9,n3KX,aIK1,5cPx,5dqV,3RDr,6Beh,c4gr,c4Zx,hArP,hzW9",
                    "7a03": "orbP,lGZN,3QFz,n37F,5c+H,3Rbp,5da1,c4D1,eQFV,eQ89,aJ4r,aInx,dr+b,c4aV,9jYH,ePI1,hzKP,hziN,kjI3,hz/N,hAgz,kjZ1,lIcr,hArV,lHvr,orUV",
                    7625: "lHRX,orsN,lIcr,lHeF,7YkF,3QoN,3QFz,aIyN,gccp,gbRP,gcyV,dsHb,ds9x,aIhP,aJ4x,7Z7b,7YMN,3RgX,7YY1,3QQP,3RDx,c3KH,gbGF,kj4H,hzop,hz/H,iXP9,iY9z,hAb1",
                    8983: "or+r,oqLN,oryj,n3Fp,hA5p,orbP,hzKV,c4Ob,c3W1,6AaH,6Bpx,3R03,9kA9,lI6P,hArV,hzop,lH3p,lI6V,ePHX,eQAh,9l0h,9k81,ePI1",
                    "86ac": "oqWX,5ct1,5chN,6ACP,5ct1,3QQP,9kjh,3QWr,9kR1,hAb1,7Z1z,3Rsh,3RDx,5dwx,aIVb,lI1h,lHGN,aIyN,dr+b,iXyh,iXbN,drDN,dr+h",
                    8708: "oqWX,5ct1,5chN,6ACP,5ct1,5cPr,9kjh,3R03,9kR1,gci1,gbXr,gcyV,c4Zr,c4aV,3RxP,9kR1,dr+b,iXyh,iXbN,drDN,dr+h,iXP3,n3u9,n3Wh,iYfh,iXP9",
                    8793: "oqWX,5ct1,5chN,6ACP,5ct1,7Yqb,5cJV,7YSj,3QWx,3RDr,7Z1F,c4CX,3Rh1,c4rH,c4Oh,9lbr,9kux,gcnz,c4Zx,c4gr,gccp,orE1,lHvr,lIcx,iYkP,iXP9,gbXr,gcEx,iXyb,dr+h,drDN,iXbN,iXyh",
                    "880a": "oqWX,5ct1,5chN,5csX,6Axh,7Yqh,3QLb,6AIx,lHvx,lIcx,orsH,n3Fp,iX+j,kjNN,kk8b,iY9F,hzW3,hAxx,eQ83,eQFV,9l5V,9kA9,c4Zr,c4m9,6Beb,5dqV,3RDx,hAgz,3RmF,3Rbj,hA5p,6ATH,3QWx,dr+b,iXyh,iXbN,drDN,dr+h",
                    "7b45": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,lHXz,iYkV,iXUH,orPh,iXDP,lHeF,drOX,hzFh,eQAb,ePNF,aIt3,hzW9,aHRH,aJ4x,aIhP,7YvV,5cyF,3Qup,3QoN,6Bpr,3RDx,3Rh1,5d4p,aIEp",
                    "7bfc": "kj4H,or0F,n3or,n321,kjNH,orJF,n45r,n3L1,kkdP,n3QF,n37z,kjwV,hzzz,gbvp,aHXp,aI6F,ds3P,ds9x,dsqp,gcnz,gcyV,aI+V,aIPF,hzW3,gbXx,7YvP,6ACV,3QA1,3QoN,7YSj,5d4p,3Rh1,3RDx,5dwx,aIhP,gbRV,gccp,aIEp,aIhV",
                    8244: "or6b,n37F,lH91,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,3R5H,iXUN,iYqx,5dwx,3RxV,5dlh,aIyH,aJ4x,eQLr,eQdN,orJz,iY9F,n45r,kk8h,kjYX,n3zN",
                    "7cc8": "3QFz,or0F,3R5H,c4rN,c4TV,5dqV,3Rsh,6ATH,6BjV,9l5P,9kFN,eQLr,eQuF,hA5p,eQ89,kjTj,hA5p,iYkP,iY9F,lI6P,n45x,n3zN,iXyb,lHvx,lGZH,iXn1,gbRP,gbpN,aIhP,c45h,drOX,7Y3N,n3Qz,eQuF",
                    9150: "orjN,oqLN,mYo9,mYul,mYMj,e8kt,e8UF,mYAb,3Rr1,or7L,cEKB,cEQH,8fHN,8g3X,bbH1,cEyz,oqXP,j/yH,k06T,5kaD,5jCx,j/yN",
                    "8c55": "os43,oqLN,orpT,k00X,h3FD,h3zx,lvqD,izDv,8gr/,3QYT,3QSX,5j+B,6MnX,6Mu7,9IRr,e8qv,iz/t,e8wB,8gW9,bbAX,bbH7,fDsd,izDv",
                    "8e2e": "n3Qz,orE1,lIcr,lHB9,7YH9,3QLh,6AaH,6ACV,drJj,6Agp,ds9r,drUF,iY9z,aIPF,gcnz,gcEx,hzzz,6ArF,aIEj,5d4p,5dqV,aI+V,hzKP,n3iV,n2Yp,hzop,hzKV",
                    "89d6": "iXbH,or0F,lH8X,lHpV,hzzF,3QFF,3QQP,hzKV,hzop,5cnp,3QoN,9koP,9k2p,drJj,ds3V,c4Zr,c4gx,c4Ob,iYfh,iXP9,oryj,9kLp,3QWx,3RDr,9kR1",
                    "9f89": "iz9f,pWlB,iyNb,izln,mXJZ,iyZj,mY61,mXW5,mYSj,mYij,mYuf,h4vR,e8kz,e8UF,e8Ix,k0N3,k0j3,6MY1,e88n,8g9N,5jID,5jCx,e7Ah,bbH1,e7Sp,fD49,bc35,e7Sp,bcr9,5ksL,5kQP,bcPj,bcrf",
                    "9c92": "luMr,pW9z,mXE1,mY0b,iz3p,9IFp,e7Gh,e82r,6MS5,5jCx,fDs7,fE0j,pWVL,fDKl,lvkx,lw4V,9IRl,izfr,iyTn,9Itn,9IRr,bcJh,bclj,5kmP,5kKT,bcJn",
                    "9cc6": "iXbH,or0F,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,c4CX,7YH9,aIEj,aI+V,9l5V,5da1,3R5N,3R09,7YXX,3RxV,3RDx,gccj,gcyV,oryj,gbXx,lIcr,lHMp,9koP,hzKV,hzop,9k2p,9koV,dsMP,iYkV,iX+p,dsqp,dsMV",
                    "97b4": "oqWX,iXn1,iXyh,or6h,lGZH,lHpV,3QFz,iXsF,7Y3H,7YvV,7ZcP,7YH9,aIt3,aI+V,hAaX,c4gx,hzQr,hAxx,orsH,hz/N,hAmb,orPh,lHB3,lIcx,5dfz,3Rsh,5dqV,dsMV,dsf9,3R09,dsvX,3Rh1,gbvj,gbRV,c4aV,c3Qp,gbvp",
                    "9aed": "orhr,oqX1,gbB1,drJp,ds3V,ePTh,gbpH,gbXx,iXDP,iXn1,lH8X,lHpV,lHGH,lHMp,n3QF,orPh,lI6P,kk8h,iY9F,hA5p,hz/N,dskH,dsqp,gcyV,hAxx,6Bpr,3RDx,3Rh1,5d4p,aIEp,5d4j,9l0h,7YvP,7YH9,3QQP,aIhV,3QoH,3R09,9k7X,3QA1",
                    "9f37": "oqWX,n2SN,ePwN,eQ2x,n3ox,n3dh,iXyb,iXJx,iXbH,iXn1,n45r,n3zN,iYkP,kkjx,lHRX,kk2F,kjNH,iX+p,hAgF,eQjp,eQAb,eQdN,aIEj,gcyV,aIyH,aJ4x,c4TV,9kWz,7Z1F,3R5N,3RDr,7Z1F,7YMH,7Zix,c4gr,6AIx,5cV9,3QLb,3QFF,c3/F,c3KH,3QoN,3Qup,6AaH,6Agp,9k2j,9jYN,9kjb,9kdF,6Arz,6Axh",
                    "4e1e": "q1oL,q2w5,lgQv,aanL,8CaX,8C4x,aa4d,5sm7,5qXh,bNDD,bNx9,dlqr,gvSd,i6oJ,lhkL,gvSd,jG4X,jFAx,jF+n,gvlJ,bMjl,bMcN",
                    "4f83": "orhr,gbvp,iXsz,3QFF,3QWr,7YSp,gccp,gcnz,5dfF,6Bv3,3RDx,3RxV,gcyV,os43,n45x,n3zN,gc6N,gcEx,n45x",
                    "8bb4": "mQq9,q1oR,i5ub,i5Hf,5r8f,8BZZ,5sm7,5ryb,q1Vb,q2Jd,mRxz,lhrp,aanL,aa+z,gvSd,lgWV",
                    "90d3": "luMr,oqRT,orw3,lvqJ,j/yH,k0j3,mXV/,e7Ah,e8kz,3QSR,izfr,bcld,8fBN,8gDX,8gQ3,9JHF,cFGV,h4BN,lw4V,os49,orI5,3Rl5",
                    5820: "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzzF,n3u3,gbMh,lHMj,lI1h,hAmh,hzKP,hAxx,c4m3,gccp,dsMP,dskN,9kA3,9lbx,dsBz,7Z1F,3R5N,3RDr,7Z1F",
                    8378: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,eQ83,iXP9,hztX,hAmh,c3KH,ePCp,eQLx,c4TV,c3/z,c4IF,9kux,5cV9,3QWx,3QQV,7Zir,7Y3N",
                    "855e": "n45r,n2SN,oryj,lHMp,lHpP,orbV,hAaX,hzFh,drDH,dsSx,drUz,3QFF,3QoN,5cV3,3QFF,dsf3,3R09,aI6z,aIt9,7YH3,7YkF,3RxP,9kLp,3R5H,5da1,9l5V,aI+V,aIEp,kjrb,kjZ1,eQp1,ePTh,kjrh",
                    "64e4": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,n3u3,oryp,kjYX,kjCx,iXJr,iY41,9kLj,eQjp,c4aP,c4TV,7Zir,7Yqh,3Rmz,7Z1F,3QWr,5cV9,7YH9,n3or,gbXx,gcth,n3Wh,n3ox,ePYP,9koV,9l5V,eQFV,ePYV",
                    "558b": "kkjr,kjrh,orPb,gcth,gccp,oryp,n3or,ds9x,dsSx,3RgX,c4D1,9kWz,3RDx,aIhP,aJ4x,9kLj,5cPx,3QLh,3QFF,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5c8d": "6AlX,oqX1,3QQP,7YMN,lHGN,lI6P,lHvx,ePYP,eQLx,hzFb,6Axh,6AaN,hziN,3Rmz,lHXF",
                    7322: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,c4m3,orn9,iXDP,iX+p,hAxr,hAgF,c4Iz,c4Zx,3Rbj,6B8F,n3QF,n45x,5dwx,3RxV,5dlh,c4xj,6AZp,6ACV,c4aV,c4xp",
                    "608c": "3QzX,oqX1,c4rH,5cEh,7Z1z,6Beh,9lbx,dsSx,dr+h,hzQx,hArV,lI6V,lHpV,orn3,n3zN,n3KX,orJF,3Rbj,lHMp,iXsz,gbMh,drDH,iXbN",
                    "6d0e": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,aI+P,aInx,gbXr,gcyV,orDX,kjNN,5cPr,kjCx,kkdV,5dqV,5cPx",
                    "6fe0": "lH8X,oqRp,n45r,n3dh,oryj,n3Fp,gbvj,iXbN,5cnj,drUF,3QQP,3QWx,9kR1,c4rN,dsBz,ds9x,dskH,9kux,9koV,6ACP,6AIx,aIEp,9kQX,5da1,3Rbp,5dwr,5dqV,7Z1F,aI+V,dsMP,gcEx,gbRV,dr+h,kk2z,hAgF,hzW9,kjI9,kk2F",
                    "59d7": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,eQLr,eQ2x,3Rsb,5dqV,lI6V,lHXF,5dfF,3Rh1,3R5H,5d4p,lHMp,lHB9,6AO9,3QQV",
                    "7ecc": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,bc91,5kaD,5kWV,bcVp,mYSj,h4TV,h47D,mY67,5kyL,pWVR",
                    "746d": "n3db,n2SN,gbpH,gbMh,6AaH,6Am1,7Yqh,3QLb,6AIx,lHvx,lIcx,oryj,n3L1,6AlX,n321,iY3X,9kR1,hz/H,hArV,c4TV,c4rN,eQLr,eQ89,5c+H,5dqV,9l5V,9kFN,5c+N",
                    6939: "3QFz,or0F,7YSj,6ATN,6Beb,7Z1F,3RDr,3QWx,9kux,9lbr,9koV,orPb,9l0h,lHvr,lIcx,9kFH,orsN,dsHb,dskN,hz/H,hAmh,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh",
                    "621b": "orUP,oqRp,lHB3,orn9,iXmX,iYfh,gctb,gbB1,c4xj,c4D1,c4aP,6ATN,3Rsh,3RxV,5dwx,6Bpx,aHRH,aJ4x,7Z1z,5cV9,3QLh,3Qup,lI1b,dsHh,drP1,lH91,lI1h",
                    "6c05": "lH3j,n2SN,n3or,lHpV,kjlz,or0F,drDH,kj4N,kjCx,eQ2x,ds3V,dskH,kkdV,n3/V,n3Fj,n45x,kjNH,oryp,dsSr,iY41,c3VX,c4Oh,9kWz,9kdF,6AaH,6BjV,c4gr,5cPx,3R09,3RDx,5dwx,hztX,hzzF,hzFh,ePTh,ePI1,hzu1",
                    "98d1": "aInr,gbB1,hzQr,9k81,orDX,hz/N,kjTj,kkdV,c4TV,aIVh,aIPF,dsqj,dsBF,gcnF,gccp,9kLp,7YY1,7Zix,9lbx,5dwr,3RDx,3RmF,5d4p,7YH9,n3u9,n2Yp,lH3p,5cnp,3QoN",
                    6106: "kj4H,or0F,lHkb,gbpN,lHB3,n3ox,iXJr,hzW9,c3/z,hzzF,eQdH,c4gx,dsvX,c4IF,dsHh,iYfh,iX+j,iYqx,n3/P,n3L1,6Bpr,7ZcV,6B8z,5dfF,3Rh1,3QQV,5cEh,9kjh,6ATH,9kA9,5chH,7Y9p",
                    "779f": "iz3j,iyNh,cEmr,cEEF,e8Ix,e8et,bc35,bcVp,bcr9,5ksL,3R93,5kgJ,9J1n,5j+B,9Jpr,5kWV,orNX,h4BN,os43,or+3,ordX,h4jJ,orw3,oqLH,or1V,6MG9,6Mo1,oqLN,h4TP,lw4V,lveH,h41H,h4TV",
                    "94f9": "gbpH,or0F,kjwP,kjg1,lIcr,lHvx,orPb,kk8h,kjNH,orsN,gbAX,gbMh,aIhP,aHRN,c4m3,c4Oh,5dlh,3RmF,5da1,3QWr,7YSp,eQjp,eQ2r,hzW9,hAxx,eQFV,gbGz,3QFF,6ACV",
                    7693: "mXE1,pW9z,e7Yf,e7Ah,fE6j,fDm7,pWVL,fDKl,lvqD,lv+P,h41B,orpZ,8fBH,luMx,lv8B,8fZR,8fBN,bcf7,5kgJ,5kQP,bcPj,bcfd",
                    7635: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,7YMH,3QQV,5c+H,3Rbp,5da1,9kR1,9kur,9l5V,c4Iz,c4rN,5dqP,6Beh,aJ4r,gcnF,iY9F,iYkV,gcyV,eQAh,aIhP,gccp,iX+p,iXJx,ePTb,kjCx,dsf3,gbRV,eQdH,hzQx,aHRH,ePNF,kj4H,hzop",
                    "53a5": "j/WL,lv2F,lvwJ,k0cZ,h4pF,lvON,izJv,iA5F,h4NP,h4BH,bcDh,3R93,3RJ3,bcDh,fDs7,bcfd,bbT9,fD49,iyZd,izxz,izfl,8g3X,3QAP,3QoH,6Mu7,oqRT,os49",
                    5048: "iXbH,or0F,3QzX,kjg1,5dfz,3Rsh,3RxV,5dwx,dsSx,ds3V,aI6z,eQ2x,aIhP,6ACV,6Beh,7Z1z,aIEp,c4xp,7YH3,aIEp,kk8b,kjwV,hzKP,n3iV,n3Wh,hAmh,hzKV",
                    "8c11": "kjfX,n2Yp,gbpH,gbB1,5ct1,7Yqh,3QLb,6ACV,iXDV,iYqx,hArV,ds9r,gcnF,hz/H,dskN,c4xp,c4TV,dsMV,9l5P,9kFN,3R5N,3RxV,6AIr,6Bpx,orsH,iXUN,lI6P,lHGN",
                    "51fc": "pWDD,9J1t,8g9T,9IRr,9Ith,e7Yl,izfr,iyZj,fDE9,k0H7,h4jJ,bcJn,bcPj,iA5z,5kWV,5jCx,iyNh",
                    "82c1": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbMb,9kjh,3QoN,6AIr,9kjh,3QWr,9kR1,gci1,3RDr,9kR1",
                    "83d4": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,drOX,ds9x,9kur,9k81,5cEb,3QQV,5cPx,hzQx,hzu1,6Am1,3QoN,3R5H,hz/N,hArV,eQFV,dsHh,dsBF,eQp1,aIEj,aJ4x,9lbx,3Rh1,3RDr,9kR1",
                    5958: "ds3P,orbV,drDH,drJp,ePI1,hzu1,hzKP,hzop,kjwP,kjg1,n321,kkjr,kjCx,eQoX,orE1,eQFP,eQ89,c4m3,7YBx,5cEh,3QA1,3QoN,9l5P,9k2p,7YMH,3RxV,3RDx",
                    5464: "orH/,mYul,fDm7,fDQb,fDEf,mYuf,fE6p,cF0D,cFAP,6Nef,3Rk/,8gm3,mXxX,mXW5,cEKB,cEmx,mXy1",
                    "55cd": "lHvr,or6h,orDX,lHGN,kjrb,kjZ1,hzKP,c4aV,c4xp,hA5p,iXP3,9kA9,3QLh,3Rbj,6B8F,lHXF,lIcx,5dwx,3RxV,5dlh,aIPz,aJ4x,gcEr,gcnF,lGZH,lHeF,aI6F,aHRN,lGZN",
                    "5d3e": "7YeX,oqX1,3QWr,3R09,5d4p,9l0h,c4Oh,c4gr,c4Zx,dskH,9kFN,5dfF,3RxV,3RDx,n3Qz,eQuF,n3or,n45x,eQjj,n3Fp,iXyb,7Yqh,7Y3N,iXbN,eQFP,iYkV,iXP9,eQ89,eQFV",
                    9990: "gbpH,oqX1,gbAX,6Am1,6ArF,9koV,6ACP,gc6N,lHMp,lHvr,lI6V,iYfb,iXJx,gbRP,gcEx,dskH,dsMV,5dlh,3RmF,3QLb,3RDx,dsvX,3R5N,9l5P,9kA9,orJz,n3L1,n3zH,orn9,kjaj,kjwV,hzFh",
                    "95f6": "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,9l0b,7Z7h,7YY1,9kLp,eQjp,eQ2x,aInx,7Yqh,kjaj,3Qup,iXUH,kjI9,hzzz,hAmh",
                    "6dab": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,9kur,9l5V,5dqV,5cPx,gbXx,gcth,c4Oh,c4gx,hzFb,kjwV,kkjx,hArV,orsH,lHMp",
                    "8fe8": "lH8X,oqRp,hziH,hzu1,6Am1,3QoN,6AlX,3QLh,3RDx,iYfb,eQLx,gcEr,gbRV,oryp,7ZcP,dsMV,ds9x,7YBx,7ZcV",
                    "5ab8": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,hAaX,orE1,hzQr,hAxx,n3u3,kjI9,kkdV,n3/V,5d9X,eQp1,5dqP,3R09,3RDr,6Beh,9l5P,dsMV,dsf9,9kA9,9l5V",
                    "7f21": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,3QQP,5cJV,c4aV,c4Zx,5dwx,3RxV,3Rsh,5dfF,9kWz,7Z7h,7YH9,aIEp,dsqp,kk2z,gc6N,gcnz,kjNN,kkdP,eQFV,eQ2x,kjCx,n45r,n3iV,n3Fj,oryp",
                    "678b": "3QFz,or0F,3QQP,c4xp,kjTp,kkjr,kjCx,oryj,lHS1,eQjj,eQFV,5dqV,3Rsh,3RmF,5da1,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN",
                    "69ed": "3QzX,oqX1,5cyz,9koV,kjwV,kkjx,orPb,n3/V,orDX,hAb1,9kWF,3RDx,6Bpx,dsSr,6Beh,3Rh1,7YSj,6B31,5cJP,7YH9,3R03,5c+N,hz/N,eQoX,eQdN,c4gr,c4D1,c3KH,gbvp,dr+b,ePNF,iXbH,iXyh",
                    6654: "gbMb,gbpN,oryj,kjCx,orJz,gcnF,eQAh,eQLx,gcEx,hA5j,lI6V,eQdH,n3zN,3RgX,dsw1,aInr,aJ4x,lGZH,lHkh,aIch,aHRN,lGZN",
                    "80e7": "hzFb,hzop,hAxr,hzQx,lI1b,kkdV,oryj,eQjp,3QQV,3QFz,5cEh,n3dh,n2Yp,5cnp,3QoN,c45b,c3Qp,eQoX,5da1,3RmF,3RDx,6Bpx,5c+H,c4TV",
                    7113: "or0z,7YkF,3QoN,5cJP,7Yqh,c4CX,eQAh,eQ89,hA5j,gci1,gcEr,n3Fp,oryp,gbRP,n3Fp,kjwP,hzzF,ePCj,iXhp,5cV3,aIt9,aIVh,5dlh,5cV9",
                    "784e": "n3iP,n2Yp,ePwH,n37F,dsvX,ds9x,lHvr,lHS1,lHB3,6AO9,3QQV,lHMj,3Rbp,7Z7b,kk8h,5dlb,3RxV,5dwx,or+x,gbAX,gbMh,7Yqh,7Yf1,gbB1",
                    "948d": "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,eQFP,eQ89,3QWr,3RDx,orDX,3Rh1",
                    9538: "gbpH,or0F,kjwP,kjg1,iYqr,iXJx,n3zH,orUV,5d9X,n3L1,9l0b,9lbx,9kur,9kFN,c3KH,c4aV,gbRP,gbB1,gbGz,3QFF,6ACV,eQdH,ds9x,5cPx,5dwx,dsSx,dsHh",
                    "9e57": "orJz,lHMp,lI6V,gcyV,eQAh,hAgz,iY9F,lHMj,dsqp,dsSx,6Bpx,3Rsh,3RmF,5da1,9kFH,9l0h,5cyz,3QLh,6AIx,9kux,9k81,ds3V,drDH,dsf9,gbXr,gbB1,lH3j,lHeF,iXsF,iXhp,lH3p,lHpP,lHB9,iXP9,iXDV,lHpV",
                    "88b7": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,aIhP,drUF,ePTh,gbXr,lHS1,n3L1,gcEr,lHS1,eQ83,eQFV,5c+H,aIyN,aI+V,5dqV,5c+N",
                    5310: "hziH,or0F,iYfb,iXn1,7YeX,7Z7h,5cV3,aIt9,3RxP,3RDx,lIcx,lHeF,gcnz,dsBF,drUF,gbGF,gcnF,aIVb,5dlh,5ct1,aI11,aIVh",
                    9654: "n3KX,oryp,lHvr,lIcx,lHRX,gbXx,gcth,iYfh,gctb,9kA9,9kux,c4TP,6AZp,3QQV,3QLh,3RxP,7YY1,3QoH,n2SN,n3dh,kjrh,hzu1,ePTh,aIch,9kdF,9k81,aHXp",
                    "57ad": "oqWX,6Am1,6AaN,7Yqb,6Am1,ePYP,aInx,hziH,hzFh,lI6P,lHvx,3Rmz,lHXF,3QQP,3RDx,lHGH,3R5N,aIVb,eQLx",
                    8308: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,5cEb,gbMh,drOX,3QA1,6AIx,c4m3,c45h,dsMP,aIEp,gccj,5d4p,3Rh1,3RDx,6Bpx,3QoH,3QA1",
                    "84e6": "n45r,n2SN,oryj,lHMp,lHpP,orbV,hAgz,hzzF,drDH,dsSx,ds3P,aI6F,9k2p,dsvX,9l5V,9lbx,9kQX,aIK1,aIhV,7YvV,7Z1F,5dfF,3Rh1,3Rbp,5csX,5cV9,kjlz,kk2F,eQuF,ePNF,kjlF",
                    "63e0": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,hArP,hz/N,dsvX,9kFN,6Beh,6BjV,6ATH,6AZp,9l0h,c4Oh,c4m3,c4Zx,3RDr,3QWx,n3ox,n45x,kjNH,eQdN,eQFV,kkdV,kjNN",
                    5520: "orsH,iXUN,iYfb,orPh,lHvr,lIcx,ePYP,hzQx,hAxx,eQFV,eQjj,9kLp,6ATN,3QQV,3QLh,c4gr,c4TV,5dqV,3Rsh,3RmF,5da1,kj4H,kjrh,aIch,aHRN,kj4N",
                    "56af": "orUP,orhx,hAaX,orE1,hArP,hAgF,kk2z,kkdV,kjI3,kjTp,hA5j,hzW9,hzQr,lHvx,lIcx,hAxx,dsf3,dsSx,3QWr,ds9x,5dwr,5cV9,7ZcP,7YH9,aIt3,aI+V,5d9X,eQp1,eQ83,aIch,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "72ad": "oqRN,k06T,6MY7,3QMR,3QGV,5jOz,cEmr,cEsD,e7Sp,izln,orpT,lveH,iyTn,iyNh",
                    6006: "3QzX,oqX1,6Bpr,3RDx,3Rbp,5c+N,gc6N,gcth,9l0h,7Z1F,9kR1,gcEr,lHS1,n3L1,ePYP,lHS1,kjlz,hzFh,drDH,iXbN",
                    "6c76": "luYt,oqRT,k0T3,j/WR,orvZ,lvCL,izlh,cF0J,3RD3,3RJ9,3QML,3QSX,cFoN,fDWn,k0H7,iyNb,fCU7,cEEz,3QuT",
                    "6f46": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,7YH3,3QLh,3RDr,6Beh,3R5H,5d4p,9kLp,7Zir,aIVh,9koP,9l5V,eQuz,9kA9,dsvX,ds9x,gccp,gcyP,iYqx,iXDV,gbMh,n45r,n3dh,orJz,lHXF,lHB3,orn9",
                    "54ab": "h3Lt,h47D,orjT,oqXP,8fNP,3QoN,fD9/,3Re/,3RJ9,e8Ix,8gW9,8glZ,e8wB,h4pF,h4NP,or+3,orB/,h4pL",
                    "9a90": "n2SH,n37F,ePNF,kjaj,drJp,dr+h,5cEh,3QFF,3QA1,5cnp,aI6z,9jYN,kkdP,kjwV,7Z1z,orJF,7YvP,7Zix,orn3,7YH9,gcnz,gc19,c4m3,c4IF,3QQP,5c+N,3RDr,5dfF",
                    "73c9": "or7L,oqLN,h3zr,h3XB,6MnX,6MA3,8fZR,oqXJ,6MA3,k06N,k0N3,or+3,orjT,3QYT,3R2Z,6Nef,e8Uz,e8et,izJv,9JjB,6Nqh,3RD3,5kWV,6NIp",
                    6866: "3QFz,or0F,dsvX,3Rh1,gcEr,eQLx,eQAh,gcnF,orJF,hA5j,lI6V,n3zH,eQdN,kjCr,oryp,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,aJ4r,aInx",
                    "6ba1": "n3iP,n2SN,n31X,hzu1,ePwN,c3VX,ePCp,6AaH,c45h,ePYV,hzKV,hzu1,iXJr,lHvx,lIcx,iYkV,iY9z,hzW9,9kA9,9lbr,9koV,eQuz,9kWF,eQ83,eQFV,oryj,n3L1,3QQP,7YMN,3RxP,7YY1",
                    "89cc": "hzzz,or0F,lHpP,lH3p,hziH,hzQx,ePYV,drOX,ePCp,aHXj,c3KN,dr+b,9kjh,3QoN,6ACP,7Yqh,3QLb,3QQV,5cV9,9kR1,hAb1,aIVb,lI1h,lHGN,aIyN,9jYH,9kA9,9kWz,5dfF,3Rsh,3RDx,6Bpx",
                    "815a": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QQP,6AO9,c4m9,6ATH,3Rh1,3RDx,gchX,6B31,gcEr,gbRV,aJ4r,aIK1,iYkP,kkjx,lIcx,lHvx,iXDV,oryj,n3L1",
                    7940: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,gbGF,7Zir,3RDx,3R5N,5cV9,lHB9,lI6V,eQFV,eQ89,gbMb,ePYV",
                    "9efc": "hzzz,or0F,orbP,hzKV,iXJr,lHB9,hziH,hz/N,lH3j,iXn1,3QLb,gbMh,3QWr,5cV9,c4m9,c3Qp,3Qup,9kdz,7Yf1,7YBr,9koV,eQ2r,ds3V,drUz,ePI1,c4TP,c4xp,7YSj,7ZcV,3Rbj,gccp,gcyV,3RxV,orJz,3RmF,lI6P,n3/V,kjTj,kkjx",
                    "94cd": "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,eQuz,orJF,eQjj,eQFV,c4TV,9l0h,3R5N,c4xj,aIEp,3RDx,3QQP,6AO9,kjI9,kkjx,iYqx,hArV",
                    "956b": "ePwH,oqX1,kjrb,kjap,iXP3,kjCx,n3iP,n3zN,kjNN,hzW9,ePYV,gcnz,gc6N,eQLr,iY9F,lHS1,n3L1,kk2z,n3/V,kkjr,hAmh,6B8z,7Z7h,7YH3,6ATN,5dwr,5cJV,6Axb,3QA1,gbB1,gbMb,gbvp,c3KH,c45h,dsHb,9l0h,9kA9,dsf9,dsHh",
                    "75e3": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gbGz,c3KN,kj4H,hzop,gcEr,gbRV,c4gr,c4TV,7YH3,5cV9,3R5N,3Rsh,5dlh,7ZcP,5dwx,9kLj,6B31,3QLb,6ACV,iX+j,c4xp",
                    8020: "3QFz,or0F,aIcb,7YBx,6AaH,c3W1,ds3P,drDN,eQ2r,iX+p,lHS1,n3L1,lHRX,iY9F,eQLx,dskH,dsMV,hzoj,hzKV,lHpP,lGZN,aIyH,aI+V,5dqV,5c+N,aIyN",
                    "989f": "iXmX,oqX1,orbP,iXDV,lGZH,lHB9,gbRP,9koV,7Yqh,9kdF,7Yf1,gbGz,9kdF,7YBr,9koV,5cJP,3QWx,5cV9,dsf9,drJp,3Qup,3R5H,7Z1F,eQuF,3RDr,7Z1F,9l5P,iYkV,iX+p,9kLp,n3Wb,iY9F,n3Fj,n45x,gbpH,gc19",
                    "86b4": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cPx,lHGH,ds9x,dsw1,gci1,dsvX,7YH9,7Z1F,9kR1,3RgX,6Beh,orPh,iY3X,iYqx,5dwx,3RxV,5dlh,dr+b,iXyh,iXbN,drDN,dr+h",
                    8782: "oqWX,5ct1,5chN,5csX,6ACV,9kjh,ds9r,dsqp,lHMp,lHvx,3QWx,7YSp,9kFH,6B31,3Rmz,n3QF,n45x,iYqx,gcth,dsSx,aJ4x,9l5V,aIVh,hzQr,hA5p,orn3,n3zN,dr+b,iXyh,iXbN,drDN,dr+h",
                    "87ac": "6MG3,pWfF,6MY1,5jCx,9IRl,5kaD,8gK1,8gm3,h4dD,h4NP,pWPF,e8qv,e8Cr,pW/N,mY61,mYSp,bcld,bcJn,5kKT,5kmP,bclj,e8Ot,k0N3,k0cZ,e8et,e8Oz,k00R,e82r,e7Gn,j/ET,k00X",
                    "7b2b": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,lHXz,iYkV,orPb,iXUN,iXDP,lHeF,3R03,hzW9,6B8z,5dlh,7Zix,aJ4x,aHXp,ePI1,gcyV,9kur,5cyF,3Qup,3QoN",
                    "7b85": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,lHXz,iYkV,orPb,iXUN,iXDP,lHeF,c4m3,hzW9,ePHX,eQAh,9lbr,9jYN,3RgX,9kR1,9kjb,6Axh,3QA1,c4Ob,hAmh,hzu1,c3W1,c4Oh",
                    8202: "pWDD,k0cZ,cEEF,bbH7,bbB1,h4TP,h3zx,j/KJ,k0H7,mYMd,mXE7,h4pF,bcPj,bcVp,cEWx,bbT9,5jUF,5kEN,bcDh,bclj,8glZ,8gE1,8fTP,8g9T",
                    "7fb0": "lH8X,oqRp,orbP,lHkh,kj4H,kjCx,gbRP,gbvp,c3KH,c4gx,3QoH,7YkF,kjlF,lHGH,hz/N,hAxx,lIcx,hAgz,orJF,eQoX,7YMN,3QQV,dsSr,dsf9,aIVb,6Beh,3Rh1,6Beb,3RDx,9kQX,7Z1F,7ZcP,9lbx",
                    "7da6": "n3/P,n2Yp,gchX,orE1,eQoX,aI+V,aJ4x,aHRH,aHXp,ePTh,or6b,gbMh,kjYX,kjrh,iXyb,iY41,gcEr,gbpN,ds9r,aIch,aIyN,7YvP,c4xp,7Ykz,7Z7h,9kWF,6B2X,3Rsh,3RxV,7YH3,3R09,6Axb,5cyF,3Qup,3QoN",
                    9174: "n2SH,n2Yp,n3ox,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,9kQX,5cV9,6Bpr,9l0h,5d4j,3Rh1,5dfF,gcnF,gchX,gcth,gc6H,n3QF,orJF,gcEr,n3QF,c4rH,c4Zx,5cPr,iXJx,iXbN,5chN,5cPx",
                    "8dcf": "kjCr,kjZ1,5da1,3Rbp,3QWr,6ATN,orsN,6Arz,hzzF,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,n2Yj,n3dh,hzFh,hzop,n2Yp,kk8b,5dlh,5dwx,kkjx,kk8h",
                    "8e7c": "6Arz,hzzF,7Yqb,5cnp,5chN,drJj,5cnp,c4aP,c3/F,dsSr,ds9x,aIt3,aI+V,7Zir,7YBx,3RDr,3RxV,7YY1,5c+N,3QWx,3QQV,dsvX,7YY1,gctb,eQuF,eQjj,gc6N,iXJr,iYqx,oryj,iX+p,iY9z,orJF,n3/P,lI1h,lHGH,n3u9,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "96ef": "orUP,oqRp,gc13,orn9,dsf3,eQ2x,c3KH,c4Zx,aIcb,6AO9,3RmF,3RDx,3QoH,3QFF,5cPx,6ATN,c4Oh,hAxr,lIcx,lGZN,hziN,gbMb,gbGF,iXsz,iXyh,iY9z,iY41,gchX,gcnF",
                    "936a": "oqLH,orhx,kjlF,iXyb,lH91,hzKP,iXJx,iXbN,ePwH,hzu1,drOX,ePNF,iXsF,orDX,kjNN,lHRX,lIcx,eQjp,eQdN,iY3X,eQFV,eQLx,9jYH,9k2p,dsf9,9l5V,9lbx,9kjb,9kR1,6Beb,6Am1,3QoH,3RDx,5cEb,3QLh,3RgX,5da1,9kA3,3R09",
                    "9cad": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3R5H,dskN,dsMV,5dqV,3Rsh,5dfF,7YMH,7ZcV,aI+P,aIyN,gc13,gcEx,iYkP,iXUN,lHB3,lIcx,gchX,orE1,9koP,hzKV,hzop,9k2p,9koV",
                    "9cd7": "iXbH,or0F,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3QWr,3R09,6B8F,9l5V,9kA9,7YSj,5dfF,3RxV,3RDx,eQAb,c4Oh,c4xj,eQjp,kjNH,kk8h,9koP,hzKV,hzop,9k2p,9koV,c4Zr,eQLx,eQ89,c4m9,c4Zx,hAmb,n3Wh,n3zN,hz/N,hAmh",
                    "9b47": "k0T3,j/WR,lvOH,lvUT,mYid,k0j3,h47D,fDa5,fD49,k0iZ,h4vR,fDWn,fE0j,os43,oqRT,6Mu7,3QoN,3QAJ,3QSX,6N2d,9Jvx,9ILl,cEWx,fDyj,cF6J,3R93,3RJ9,6NIp,6ML/,cEKB,cFuT,6Nwn,6MM5,6Nqb,5kyR,5kKT,6Nqh",
                    "777e": "orhr,n3iV,kjwV,n3Fj,kjTp,eQ83,iXP9,ePwH,eQLx,hAmb,hzu1,c4rH,dsqp,ds3P,c4gx,aIVb,aI11,7Y3H,7Zix,3R03,aIt9,n3/P,kkdV,kjap,n2Yp,n3/V",
                    "4ff8": "iXbH,orbV,3QFz,lHeF,dsqj,3Rbp,aJ4r,gci1,aIt3,aIPF,aIcb,gc6N,oryp,lHpP,lI6V,iYfb,iXJx,gbMb,gcEx,7ZcP,7YvV",
                    "8be4": "kjfX,n2Yp,gbpH,gbB1,5ct1,5cyF,7YvV,5cV3,3R5N,5d4p,gccp,kk2F,kjCx,hzFb,orsN,gbXr,gcyV,aI+V,aInx,dsY3,dr+h",
                    9146: "hzzz,or0F,orbP,hzKV,hzW3,orn9,kjaj,kjTp,ePwH,eQp1,6Arz,7Yf1,7YMH,6AO9,5chH,5da1,3Rmz,n3QF,n45x,hAxx,eQAh,c4Zx,7Zix,6BjV,7Z7h,hA5j,n3Fp,n2Yp,hzop,hA5p,c3VX,c4rN,9kFN,9k81,c3W1",
                    "828e": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbAX,gcth,dsHh,drP1,aHXp,aI+V,6BjV,3RmF,3Rh1,5d4p",
                    "83ba": "lIcr,lGZN,orDX,kjZ1,kjrb,or6h,gbpH,iXhp,iYqx,gcyV,gbRP,hzQx,dsf3,ds9x,aIyH,aIEp,c4D1,gci1,gbGF,9kdF,9l0h,6Beh,3Rh1,3Rbp,5c+N,6Agj,6AZp",
                    "85d3": "n45r,n2SN,oryj,lHMp,lHpP,orbV,gbvj,kjlF,iXsz,iXJx,ePTh,9kjh,5chH,6AIx,gcnz,3RmF,kkdP,hAmh,hA5j,iX+p,c3VX,c4gx,gcEr,gc6N,c4xj,c4TV,7Zir,7YMN,9kur,eQ2x,ePI1,9k81,9kux",
                    5406: "pWVL,fDm7,fDWn,k0N3,fDWh,6MY7,6NIp,5kWP,9JBz,luMr,lv8B,cEKB,cEmx,luMx",
                    "55ea": "lI6P,lHpV,iXJr,iYfh,gcEr,gbRV,eQuz,aJ4x,c4m3,c4IF,9l5P,9koV,3RDr,7Z1F,c4xj,3Rbp,3QLb,7YH9,aI6z,aIch,gc6N,oryj,gccp,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5cb7": "9k7X,oqX1,6AZj,3R09,3QWx,n3ox,n3/V,iYkV,iXJx,dsSr,dsf9,hAaX,9kR1,3RxV,5dwx,6Bpx,iXyb,9kjh,9jYN,iXbN",
                    5902: "mzmL,vVT3,saCt,sbzZ,gZ4x,daU/,bj1r,biVN,qj61,ortT,gZrv,dc5J,dcdn",
                    "612b": "3QzX,oqX1,7YH3,3QLh,9kLj,5d4p,3R5N,5cV9,7Z1z,6Beh,5dqV,aIVb,7ZcV,9koP,9l5V,dsvX,9kux,c4xj,c4aV,eQdN,gbRP,gcEx,oryj,gccp,lI6P,lHpV,iXJr,iYfh,kjlz,hzFh,drDH,iXbN",
                    6434: "orn3,n3zN,kkdP,n45x,n2Yp,kj4N,kk2z,kjlF,hzzz,hAgF,eQLr,ePwN,c4aP,c4xp,9kWz,9kdF,6AlX,6Beh,3QQP,3QWx,5cV9,c4m9,aJ4r,aI+V,c4IF,eQjp,lHMp,lHpP,ePYV,c3/F,aHXp,aHRN",
                    "5a67": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,gcEr,gbXx,iXP3,iYkV,lIcr,lHvx,gchX,orE1,aI+P,aIt9,7YH3,7ZcV,3R03,dsf9,dsMV,5dqV,3Rsh,5dfF",
                    "7efe": "q1BJ,jFAx,i5uh,i5Ud,jF+t,i5U7,bMcN,bMCJ,5qXb,6/rt,aanF,aa+F,5sfF,5rEL,i6bL,i6I5,dlwR,dl0v,jG4X,mQQb,mREd,jGUV,q2cD,orMD",
                    "97ec": "3QFz,or0F,7Yqb,6ACV,7YBx,ds9x,drDN,hzKP,hzop,lH3j,lHvx,orUP,n3u9,iYfb,lI6V,lHMj,iY41,iXUH,kjI9,gcnz,eQdN,5c+N,5dwx,eQLx,eQAh,aIVb,aJ4x,aIyH,aIK1",
                    6979: "3QzX,oqX1,5cEb,9kjh,9l5V,5dqV,5cyz,5dwx,9kA3,5cV9,5d9X,9kR1,c4Ob,c4TV,kkdV,kjZ1,n3Wh,n3iV,n3or,eQ2x,aI6F,gbGz,ePTh,drDH,hzop,kjrb,kj4N,hz/H,hAgF,gcnF,c4rN,c4CX,eQdN",
                    "65f0": "h3Xv,h3zx,fE6j,fDm7,orpT,or+3,3Rk/,orI5,mXxX,bbB1,bbZ5,mXW5,mXy1",
                    7252: "hzKP,orbV,hztX,hzQx,drOX,ds3V,5cJV,9kQX,3QWx,5dwr,7Z7h,c4Iz,3RmF,aIt3,aJ4x,3QoH,7Yf1,n321,n3zH,dskN,dsSx,kjI3,kkdV,orDX,gci1,gcth,orPh",
                    "65cc": "lHez,oqX1,kj4H,kjCx,kjfX,7Yf1,3QoN,5cyz,3QLh,5cJV,ePYV,ePI1,oryj,hzQx,kkjr,kjNN,5dfz,hAgF,5cV3,5dwx,9l5P,9kFN,dskH,dsSx,c4m3,gc6N",
                    7817: "lHpP,lH3p,ePwH,lHeF,orDX,eQ89,eQFV,aInr,aJ4x,hAaX,3Rh1,kjI3,kkdV,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "8a48": "mQJH,q1ON,q2cD,mR7J,jGhV,lgJX,i5ub,i6Vd,eY3f,eX2v,bMpF,bNqB,q1oL,q2CF,mRxF,mQjR,q1oR,8BMV,8CNR,5s95,5r8f,8BM/",
                    9516: "gbpH,or0F,kjwP,kjg1,lIcr,lHvx,iXP3,iYkV,gcEr,gbXx,orDX,gci1,gbAX,gbMh,c4aP,c3KN,aI+P,aIt9,7YH3,7ZcV,6ACP,3QFF,gbGF,3R03,dsf9,dsMV,5dqV,3Rsh,5dfF",
                    "9e37": "n3db,n2SN,iXbH,lHeF,gbvj,hzu1,oqX1,orsH,iXUN,hzKV,hA5j,kjCx,iYqr,gcEx,gcyV,iY9F,n3QF,n3ox,ds3P,gc19,aIt3,c4gx,aIJX,c4IF,dsBF,drUF,9kdF,9l5V,6BjV,3RmF,3Rh1,5d4p,6AaH,6B31",
                    "7a88": "n3u3,orhx,iYkP,kkjx,lIcx,lH3p,iXbN,gbAX,iXyh,gctb,iY41,eQoX,6B31,3R5N,3R09,5dlb,3RxV,5dwx,c4Zx,c4rN,ePTb,aHXp,aIhV,6AlX,c4gx,6Agj,6AO9,7YBx",
                    "523f": "hzFb,or6h,lHB3,hzW9,hzop,lH3p,hzzz,ePNF,aHRN,drOX,dsf9,c4m9,6ArF,5cnp,5chN,c3VX,9kjh,kjYX,9kR1,or+r,5dwx,3RxV,3Rsh,5dfF",
                    "6c3d": "orn3,hzzF,gbpN,n3u3,hAgF,gcEx,gc13,5cV9,3QWx,3QQV,5cEh,5chH,5cnp,aIhV,ds3V,drJp,aIEj,dsBF,c4rH,6Beh,6BjV",
                    "8c2f": "kjfX,n2Yp,gbpH,gbB1,5ct1,7Yqb,3Qup,3QQP,5cPx,5c+H,3R5N,3Rmz,5dfF,5dqP,3RDx,9kur,9lbx,kjCr,7YBx,lIcr,lHB9,hzQr,hArV,dsMP,ds9x,lHRX,9kR1,oryj,n3L1,kjrb,orn9",
                    "82d2": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,7YH3,iXP9,7Y3H,7Zix,c4Ob,c3W1,5d4j,3Rh1,3RmF,5dlh,gcth,gbB1,3QA1",
                    8487: "n45r,n2SN,oryj,lHMp,lHpP,orbV,iYfb,kk2F,hArP,hzop,5cnp,3QoN,3QzX,7YvV,c4aV,6AO3,7YvV,3R03,aI+V,dsMV,6Bpr,3RDx,3RxV,9kR1,kjTp,9kA3,eQ89,ePNF,9kdF",
                    "634b": "or0z,5cyF,3QA1,5cnp,ePYP,aHRN,gcEr,gbXx,hAmb,5dlh,3RmF,3Rh1,5d4p,dskH,aIEp,n45r,iYkV,iY9z,lHS1,lHB3,iXUN,n3or,orUV,kj4H,kjwV",
                    "54a3": "gccj,oryp,n3/P,iY9F,iXP3,lHpV,gcEr,gbRV,gchX,5da1,3RmF,3RDx,6Bpx,3QLb,3QQV,9kFN,gc6N,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5657: "iX+j,oryp,orJz,iY9F,kk2z,n3/V,n3u3,kjTp,iYqr,iXJx,eQuz,gcth,gc6H,eQjp,dsSr,ds9x,aIyH,aI+V,7Zir,7YBx,dsvX,7YY1,5c+N,3QWx,3QQV,6B8z,3RxV,3RDx,kj4H,kjlF,aI6F,aHRN,kj4N",
                    "5dc5": "lH3j,iXhp,iYkV,lI6V,iXP3,orn9,drUz,hzzF,aI6z,6ArF,3Qup,3QQP,5cEh,3R5H,3Rbp,6B8F,aIPF,3RxP,6B8F,6BjP,dsMV,dsqp,6AZp,gcEr,gc6N,dsBz,gcnF,6AaH,6AIx,6Agj,drJp,ds3V,6ACV,gbpH,gbXx",
                    "5ed1": "n3Fj,orsN,n45r,n2Yp,5cnp,3QoN,3RDr,3QA1,hz/H,3R5N,kkjr,kjg1,lHRX,hAb1,hzQx,lHvx,9l5P,9kdF,6Axb,6Beh,ePTb,eQAh,c4Oh,c45h,ePTh",
                    "961a": "n37z,oqX1,n3or,n45x,5dwx,3RxV,3Rsh,5dfF,7Z1z,c4rN,dskN,kjTj,eQ89,gctb,gc6N,gcnz,dsBF,6AIx,gbRP,5cJV,gbvj,gbXx,gbAX,6Am1,6Agp,7YvP,6Am1,aIhP,aIch,aI11,ds3P,drP1,gbMb,iXyh,iXn1,3QoH,lGZN",
                    "6e98": "n2Yj,kjg1,ePCj,hziN,3Quj,c3/F,3RDr,3QFF,3RxP,9l5V,9kjh,3QLh,9kA3,3R09,3RgX,9kR1,eQAb,c4TV,dsMP,ds3V,hA5p,oryp,lHvr,lI1h,hAxr,hzFh",
                    9068: "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,5dwr,9kWF,eQuF,orJz,gccp,iYqr,iY41,iYkP,9l5V,5da1,5cV3,6ATN,aIyN,aIhV,6Axb,7YvV,ds3V,dsqj,drUF,orhr,ds9x,lHkb,lHGN,hz/H,hzFh",
                    "5b65": "n3u3,n2SN,n3or,kjCx,gbGF,ePCp,ePwN,gbXr,gbRV,kjg1,or0F,n3Fj,n45x,lIcx,eQjp,eQdN,kjTj,eQFV,eQLx,drUz,dsHh,aIyN,5cV9,3QWx,5cJV,9lbr,9jYN",
                    "5e7a": "ormB,eWRx,eXy/,jGBh,5r1R,5s95,3RJ3,8CHr",
                    "67b8": "3QFz,or0F,6B2X,3Rsh,6Bpx,kkjx,kjNN,gbXr,oryp,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,gccj,gcth,aIVh,aIEp,gccp",
                    "6a91": "3QzX,oqX1,7ZcP,7YH9,c4CX,3Rh1,eQFP,eQuF,hAgz,hArV,hzW3,hA5p,eQjj,eQ89,n3KX,gci1,n3or,n45x,gbXr,kjCx,kkjx,gcEx,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,3R03,c4m9,c4TV,3RxV,3R09",
                    "8d33": "or0z,gbGF,gcEx,lGZH,lIcx,orn3,iXP9,iY9F,orJF,9kA3,7YH9,3QA1,3QoN,7YH3,3Rsh,3RxV,7Z1z,dsBF,drUF,7YkF",
                    "810e": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,9kFH,5cPx,5dwr,9l0h,5c+H,3Rbp,5da1,eQp1,c4gr,c4Zx,hzQr,hzW9,iX+p,orUV,orn3,iY9F,hArV,hAxx",
                    "71e0": "oqWX,6Am1,3QoN,5cJP,7YkF,3QLb,3QQV,9kLp,aIEp,9lbr,9kjh,3RDr,9kR1,c4TP,lI6V,lHpV,c4aV,eQ83,ds9x,dsHb,eQuF,kjTj,dsqp,iXP3,hz/N,hAaX,iY9F,gbXr,gcth,oryj,lHB9,hztX,kjrh,ePwH,iXbN",
                    "78b9": "mY05,mXy1,e7Ab,mXQ9,orH/,pWPL,k0MZ,lw4V,mYSp,mYcd,k06T,iA5z,izrt,cF6J,cFAP,5kWP,5kaD,h3Lt,h41H,8g3X,8fNP,h3Lz,fE0d,9JBz,9J7z,fDyj,fE0j",
                    9557: "gbpH,or0F,kjwP,kjg1,gbRP,iXDV,iYqx,hAxx,gcyV,orDX,iY41,kk2z,n3/V,n3u3,kjNN,gbvj,gbMh,gbAX,3QA1,6Axh,7Z7b,7YBx,3QLb,3RDx,aIEj,3Rbp,aHRH,aIch,gcnz,c4IF,c4m9,gc19,gcnF",
                    7594: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gbGz,c3KN,kj4H,hzop,gcEr,gbRV,gccj,5d4p,3R5N,5cV9",
                    "890a": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,3QLb,5cJV,dsf9,lHB9,lIcx,hAxx,hzW9,5d9X,dsw1,dsHb,5dlh,9kFH,9lbx,3R5H,dskN,dsSx,5dwx,3RxV,aIhP,drUF,ePTh,orDX,n3QF",
                    6538: "orhr,gbvp,iXsz,3QFF,9kur,hzQx,dsf3,orJF,iX+j,iYw9,iYqr,eQLx,3R5N,eQjj,5dqV,3RJ9",
                    "51b1": "mQwJ,q1oR,6/7/,eX93,5sm7,5rld,5rY1,jGUV,jGop,q2J7,q1ON,q2cD,bMJh,bNkb",
                    "90b3": "orvZ,oqLN,ordR,lveH,e7Ah,8fZL,iz9l,bcld,6Mo1,izfl,fDsd,9Jpr,8gK7,8gQ3,9JHF,e8UF,h4HT,k0T9,os49,orI5,3Rl5",
                    "57f8": "oqWX,6Am1,6AaN,7Yqb,6Am1,gc6H,aIhV,dsf3,dsSx,5dwx,3RxV,5dlh,3R03,3R5N,aIVh,c4Oh,c4xj,aIEp,6AIx,hziH,hzFh,kkdP,kjCx,hzQr,n3ox,n3/V,hArV,hzQx",
                    8333: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbGz,iXn1,gctb,gbXx,5d4j,gccp,5cEb,5dwx,9kdz,3Qup,ePCj,c3W1",
                    8539: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,aHRH,gbMh,c4m9,c4aP,c3W1,6AIr,9kux,6AO3,5cyF,5chN,7Y9j,5cyF,6Axb,9kdF,3QWr,3R09,dsSx,eQLx,eQp1,c4rH,hAgF,3RDr,c4D1",
                    6484: "oqWX,5ct1,3Qup,5chN,ePNz,c3KN,iXbH,iXsF,hzFb,n3dh,n3zN,hz/N,gc13,eQdN,kjCr,gbXx,dr+h,dsvX,gcth,kk8h,eQLr,gcyV,hAxr,n45x,n3L1,hAb1,c4rH,9kux,5da1,3Rsh,3RxV,3QLb,3QQV,5cV9,7YY1,aIVh,aJ4r,aI6F",
                    "553f": "orn3,iXDV,lHvr,lIcx,dsSx,c4TV,c4Oh,dsBF,ds9r,dsf9,eQjp,hAgF,kk2F,kjNH,iXUN,gbXx,gbRV,5cyz,7Yqh,9kur,5cPx,3R09,3Rsh,6Beh,9l5P,6Bpx,aIyH,7YSp,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5e31": "3QzX,oqX1,c3/z,aIch,kjrh,kj4N,aHRN,6ACP,gccp,oryp,lIcr,lHpV,iXJr,iYkV,gcEr,gbRV,eQAb,5dlh,3RmF,3Rh1,5d4p,9kLj,7YY1,c4Zr,c4xp",
                    "72f3": "n2SH,kjlF,6ArF,3Qup,5chN,ePNz,c3KN,gbMb,n3Fp,oryp,gcEr,n3Fp,gc13,gcnF,c4TP,c4aV,gccj,5d4p,3R5N,5cV9,aIyH,5cEh,5dqP,aIEp,hziH,lHkh,or6h",
                    "607b": "3QzX,oqX1,3QQP,7YMN,hz/N,9l0b,iYfh,5dlb,3RxV,5dwx,or+x,5d9X,7YMN,iXsz,gbMh,drDH,iXbN,9kur,lHvx,lHS1,9kR1",
                    "6f7c": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3RDr,3QLh,eQjj,3Rbp,c4aP,c4TV,6BjP,6ACV,hzFb,hAxx,kjI3,hz/N,hAaX,kk2F,lHpP,lI6V,orsH,n3Fp,eQFP,9l5V,9koV,ePYV,eQFV",
                    "59a9": "oqRj,c3Qp,6ACV,5chH,aIch,iXyh,iXbN,n3/P,n3ox,gbRP,gcEx,n3Fj,dsqp,3QQV,dsvX,5da1,3RmF,3RDx,6Bpx",
                    "7ea5": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,6NIj,3RJ9,3Re/,5kmP,6N8j,e8Oz,e88n,orBV,h47D,k0T3,k0j3",
                    7430: "n3db,n2SN,gbpH,gbMh,6AaH,6Am1,7Yqh,n31X,6Am1,kjI3,lHB9,lI1b,n3/V,orDX,iY41,gc6N,eQ2x,ePYV,eQLr,iY41,9kWz,c4TV,3RDr,9kR1,5cV9,3QQV,3QLh,dsvX,9kR1,9kA3,aIt9",
                    "691f": "3QFz,or0F,3QWr,aIPF,gcnF,gcyP,hAxx,iYqx,iXP9,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,c4rH,dsf9,gc6H,eQjp,aJ4r,aIt9,5dwr,7Z7h,lHB3,lI6V,iY3X,orE1",
                    "8f84": "oqWX,ePwN,ePTh,3QFz,hzzF,6ACP,6AO9,9kLp,n3Fj,3Rbp,n3iP,n45x,lGZH,lHkh,6AIr,n3ox,c4xj,c4gx,hzQr,hA5p,kk2z,5dfF,3Rsh,3RDx,6Bpx,aHRH,aIch",
                    6308: "n3or,n2SN,n3zH,n45x,hAxx,gcyV,hAmh,gc6H,iY41,n3L1,kjaj,kjwV,hzQr,hziN,or0z,gbGF,dsMP,drJp,aI0X,aIVh,7Zir,7Y3N,5cEb,3QQV,3QWx,5cV9,dsf9",
                    6726: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n321,n3dh,5cEh,3QFF,3R5H,3Rbp,5da1,aIK1,dskN,c4gr,c4m9,eQjp,eQLr,ePYV,9kWz,c4TV,5dwr,aIK1,7YBr,c4xp,5cPr,5cV9,9kR1,hAmb,hz/N,iYqr,kkjx,kjCx,iXJx,orsH,lHGN,lI1b,orPh,n3or,n45x",
                    "79b3": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ePYV,3QQP,7YMN,3R5N,3Rbp,5da1,3RDr,3RxV,6B8F,9kWF,9kur,9lh9,7YMH,9kFN,gc6N,9l0b,gcth,c4m3,c4TV,eQLr,eQ2x,n3KX,orE1,n3or,n45x,kjI3,hzW9,hA5p,kjTp,kjI9,kk2z,kkdV,hArV,hAgF,kk2F",
                    7743: "hzoj,hzKV,ds3P,drJp,orDX,kjCx,kkp9,orPh,kjTj,eQ2x,kk8b,eQR9,gchX,9kA9,3QWr,5d4p,dsSx,dsqp,c4xj,5dqV,3RJ9,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94e7": "gbpH,or0F,kjfX,kjCx,oryp,eQdH,n3zN,lI6P,hA5p,gcEr,eQFV,eQAh,gcnF,orJF,3RgX,dsw1,aIt3,aJ4x,aHRH,aIhV,gbRP,gbB1,gbGz,3QFF,6ACV",
                    "7a02": "lGZH,orbV,3QFz,n37F,6B2X,3R5N,3R09,kjI9,kkdV,eQFV,eQ89,hArP,hzW9,oryj,lHS1,hziH,hzKV,9jYH,ePI1,c4aP,dr+h,dsvX,aIK1,7Z1F,3RDx,c4Zr,7Z1F",
                    7618: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QQP,3QWx,6B31,9l0h,9koP,9lbx,aIEj,7YMN,5dfF,3RxV,3RDx,iX+j,dsqp,hAgz,iYfh,iXJr,hzW9,c4aP,eQ89,c4TP,eQuF,gbRP,gcyV,c3KH,gbGF,kj4H,hzop",
                    9878: "ordR,oqRT,os43,orpZ,k0oV,orO1,fDKf,8gy5,3R2Z,3QYT,or1P,3QGV,h3zr,h47D,9J1n,k0cZ,k0N3,9JBz,3RJ3,6Nwn",
                    "869d": "oqWX,5ct1,5chN,6ACP,5ct1,5cPr,9kjh,6Bpr,3RDx,3RmF,5da1,lHS1,n3/P,lHB9,gc13,hArV,c4Zr,aInx,dr+b,iXyh,iXbN,drDN,dr+h",
                    "870a": "oqWX,5ct1,5chN,6ACP,5ct1,7Yqb,5cJV,gc13,aIhV,iY9z,iXDV,7Z7b,kk8h,5dlb,3RxV,5dwx,or+x,n3or,orE1,3R5H,n3zN,eQjj,c4D1,dr+b,iXyh,iXbN,drDN,dr+h",
                    "87af": "kjlz,or0F,kj4H,kjCx,lHpP,lH3p,n2SH,n3ox,kjfX,hzu1,ePwN,hztX,hzKV,gbRV,drUF,drP1,5cV3,dsf9,5dqP,5chN,3RDr,6Beh,eQLr,eQFV,iY41,orDX,kjNN,lHMj,lIcx,eQjp,eQdN,7Z7b,aIVh,aI11,7Yf1,7Z7h",
                    "881b": "n31X,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,3QQP,6AO9,c4m9,c4Zx,eQAb,dsMV,eQoX,7YY1,3RxV,3RDx,6Bpx,3Rbj,9l5V,9kFH,7YSp,iX+j,gccp,gcnz,iY9F,orPb,lI1h,lHGH,orsN,n45r,n3ox,gc13,iXP9,iYkV,gcyV,gc19,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7b75": "iXbH,or6h,lHvr,lH91,lIcr,lHS1,lHXz,iYkV,orPb,iXUN,iXDP,lHeF,eQ83,gcth,c4rH,aIyN,7YMN,7Zir,7YBx,7YXX,eQp1,c4TP,c4D1,3RDr,3QWx,7Y9p,3QoH,3Qup,aIhV,c4aV,c3Qp,gbRV,gbpN",
                    "7c0f": "kj4H,or0F,n3or,n321,n45r,n3L1,lHMj,orJF,kkdP,n3QF,n37z,kjwV,iXUH,kjI9,hAxr,hzu1,6Am1,3QoN,c45b,c4Oh,eQAh,ePTh,c4gr,gbXx,c4xj,gccp,aIJX,5da1,3RmF,3RDx,5dwx,5d9X,9l5V,7YvP,7YMN,aIhP,3QQV,3QWx,5c+N",
                    8249: "or0z,lH3p,lHpV,5cJV,3QLh,5cyF,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,lH3j,5cnp,3QoN,5dwr,3RDx,3RmF,5da1,eQp1,eQdH,gcth,c4Ob,c4rN,9l5P,9kFN,3QWr,5cV9,n3u9,n3Wh,iYfh,iXP9",
                    "7cc5": "3QFz,or0F,5cPr,aIK1,5dwx,c4CX,3Rh1,aIt3,aJ4x,c45b,aIhV,7Y3H,drP1,gbRP,gbpN,iX+j,eQ2x,iXP3,iYqx,hArV,eQdH,dsqp,eQp1,iY41,lHMp,kjYX,orUV,orn9,iXyb,lHvx,lGZH,iXhp",
                    "914e": "n3or,n2SN,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,aIEj,dskN,5d4j,3Rh1,3RmF,5dlh,orPh,hz/H,hAxx,iXbH,iXJx,5cPx,5chN,iXbN",
                    "9e7e": "iXsz,or0F,lHvr,lHeF,lIcr,lHGN,orUP,n3Wh,n3KX,oryp,lHXz,dsBF,3QWx,5dwr,5d4p,aIVb,5dlh,aI+P,aIK1,dskH,dsSx,hArP,hA5p,9k2j,gbRV,gbvj,9koV,iXbH,iXJx,5cPx,5chN,iXbN",
                    "8e23": "mYuf,pWPL,lvqD,lv+P,fDE9,izxz,izVx,fDQh,e8en,e8UF,e7Sj,e82r,e7Gh,5jID,5jCx,8g3R,5jID,iz3j,6MG9,oqRN,or7R,iz9l,iyTn,oqRT,bcld,bcJn,5kKT,5kmP,bclj",
                    "89de": "iXbH,or0F,lH8X,lHpV,hzzF,3QFF,3QQP,hzKV,hzop,5cnp,3QoN,9koP,9k2p,drJj,ds3V,oryj,iXP9,lIcr,lHGN,iX+j,iYfh,eQjp,eQdH,eQLx,5dwx,3RxV,3Rsh,5dfF,5cV3,5c+N,aIVh,eQAh,eQoX,c4D1,9kFN,9kA9",
                    "9f8a": "hztX,lH91,hzQr,hziN,or6b,hzFh,lHvr,lHkh,gcnz,3RmF,3RDx,3Rmz,6AZp,3R09,aIEj,6AZp,aJ4r,aIPF,6AIr,ds9x,7YBr,5chN,drDN,aHXj,drUF,ePNF,aIhP,drUF,n3Fj,n3/V,gcyV,gccp,n3Fp",
                    "9c94": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3Rbj,hA5p,hArV,5dqV,3Rsh,5dfF,9kLj,9l5V,dsMP,dsqp,ds9r,hA5p,orE1,kkjr,kjI9,9koP,hzKV,hzop,9k2p,9koV",
                    "9cc7": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,7ZcP,7YH9,c4m3,c4Zx,3RgX,c4D1,3QWr,3RDx,hArP,hzW9,orJz,kjNN,9koP,hzKV,hzop,9k2p,9koV,eQ83,kjI9,kkdV,eQFV,eQ89",
                    "9ab1": "luSx,lv2F,h3RF,fDm1,h47D,h3zx,fCO1,h3Fx,oqRT,ordX,h41H,mYuf,izrt,iA5z,orI5,3Rx1,h4HT,3R2T,6Nef,h4pL,bbH1,bc3b,8g3R,8fHT,5jUz,3QMR,5k4H,e82r,e7Gn,3QuT",
                    "9af9": "orhr,oqX1,gbB1,drJp,ds3V,ePTh,gbpH,gbXx,iXDP,iXn1,lH8X,lHpV,lHGH,lHMp,n3QF,orPh,lI6P,iY9F,hA5p,hz/N,dskH,dsqp,gcyV,hAxx,9koP,9lbx,aIcb,9kdF,7Y9p,7Y3N,3QFz,9kdF,5cEb,5cJV,6AO9,7YMN,7YXX,6B8F,5dqV,5dwx,aIEj,3Rbp",
                    "9f3d": "or0z,n321,n3ox,eQ2x,ePI1,n321,kjCr,kjg1,hztX,hzQx,7Yqb,dr+h,aHXj,aIt9,6ATH,6AaN,3QWr,6AIx,3Quj,5ct1,6Am1,3R5H,6B31,orE1,iXUH,iYfh,5dlh,3RxV,3RDx,5dwx,drJj,dsf9,7YH9,7Y9p,drJp",
                    "9b32": "os43,oqLN,bcld,cFcL,cEQB,bc97,9Jpr,9IFp,3R2T,9J1t,5kyL,3Rr1,3Rx7,5kQP,e8Oz,e7Gn,3QuT,lvOH,izPx,iz3p,lv2F,lvON",
                    "4f8f": "orhr,gbvp,iXsz,3QFF,3QQP,c4D1,c4Iz,5dC9,3RgX,orE1,n3u3,iXP9,hzQx,kjI3,kkjx,lI6V,gcEr,eQR9,ePYV",
                    "8bb5": "mQq9,q1oR,i5ub,i5AR,i5Hf,5r8f,8BZZ,5sm7,5ryb,ormH,osaJ,i655,i6OF,dlDp,dkVX",
                    "90e6": "orBV,oqLN,e8en,cF6P,cEEz,e7Mj,5jUz,5j+B,j/WR,j/ET,5jID,5kax,k06T,k0o/,5ksL,5kmP,3RqX,orO1,os49,iA5F,fDWn,cFGV,8gW9,6NCj,8gK7",
                    5865: "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,n45r,n3ox,aIPz,c4Oh,c4rH,aIEp,9l5P,9kA9,9kQX,7YY1,5da1,5dlb,3RxV,5dwx,eQLx,eQ2x,3QWx,kk8b,hAmh,hz/N,kjNN,kk8h",
                    "83b3": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,hAmb,5dlh,3RmF,3Rh1,5d4p,c4rH,9kLp,aHXj,aIhV,eQLr,eQ89,6Agj,ePCp,ePYV,6ACV,6Agp",
                    "857a": "n45r,n2SN,oryj,lHMp,lHpP,orbV,dsSr,drDN,hAgz,gcth,iX+j,dsqp,6B8F,3RxV,5dwx,aI+P,9l5V,3Rbp,dsf3,3R09,drUz,3QFF,3QoN,5cV3,3QFF,7Ykz,7YH9,aIt3,aI6F,iXsz,iXP9,gc19,gbGF,iXsF",
                    "64e2": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,n3or,n3Fp,gccp,gcEr,n45x,n3QF,iYkP,kk8h,hAgz,hAmh,kkjx,iXUH,kjI9,hzQr,hzW9,kjTp,aIcb,eQ89,3QWr,ds9x,5dwr,5cV9,eQoX,5da1,dsSr,dsf9,aIt3,aI+V,7ZcP,7YH9",
                    "55d2": "mYSj,mY0b,pW/H,k0B1,k0cT,pWDJ,e7Yf,e82r,fDsd,izDv,fDQh,e8Oz,e8UF,cFuN,cEWD,mXxX,mXQ9,cEEF,cEmx,mXy1,9Jvx,5kKT,5kaD,9IXn,9JvD",
                    "5c90": "aI0X,n321,kkjr,kjCx,eQoX,orE1,eQ2r,eQFV,aIVh,6AZp,3QQV,3QLh,3RDr,3RxV,c4m9,dsf9,iXyb,aIch,aHRN,iXbN",
                    7339: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,lIcr,lHvx,gchX,orE1,kjTj,ePYV,ePTh,eQLr,iY9F,aInr,aI+V,5dwr,5cJV,dsMP,7ZcV,7YBx,ds9x,dsMV",
                    "609b": "3QzX,oqX1,3QLb,3QQV,5cV9,c4Oh,dsHh,dsf9,aIhP,eQdN,aIt3,5dfF,3RxV,3RDx,gctb,dsSx,dr+b,hzW9,iXsz,gbMh,ePwH,iXbN,oryj,iXDV,iYqx,hAxr,lI1h",
                    "6d2b": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,5kWP,5jUF,5kEH,k0B1,k00X,5k4H,k0cT,5kgJ,5ksF,k0o/,orvZ,k06T",
                    "6fef": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,e88h,3QYT,bbY/,fDsd,e8Uz,e8et,bcf7,bcPj,8gPZ,8gfZ,5kgD,5kWV,e8wv,5kyR,e8Cr,fDKl,iA5z,os49,orI5,k0H1,lvON,izPr,lv+P,izxt,orw3,or7R,k06N,lveH,izfl,lvqJ",
                    "59be": "n3u3,orhx,lH3j,lI6V,iXDP,kjrh,kjYX,iX+p,hziH,hAxx,gbXr,aIhV,5dfF,3RxV,3Quj,3QA1,7YMN,aIK1,dsw1,drJj,dsMV",
                    "7ed0": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,lvUN,h4TV,iz/t,izln,pWVR,5kgD,e8et,e8Oz,5kQP,5kgJ",
                    "747e": "or7L,oqLN,h3zr,h3XB,6MnX,6MA3,8fZR,oqXJ,6MA3,os43,orjT,pX5N,lvUT,lvwP,pWJP,5kyL,k0v5,5kax,5kWV,8gPZ,8gfZ,bc91,bcVp,e8en,h4dJ,h4NP,e8Oz,e8et",
                    6960: "3QzX,oqX1,3QQP,gbRV,gcyV,5dqV,3Rsh,5dfF,aIEj,3Rbp,aIt3,aIPF,7Z7b,7YBx,dsBz,c4D1,c4rH,dsf9,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN,kkjr,kjwV,oryj,gccp",
                    "621f": "hzFb,or6h,lH3j,lHB9,iYqr,iXUN,n3/P,lIcx,orJz,7Z1F,5dlh,3RxV,5dwx,gcEr,eQLx,6ATN,6AO9,c45b,3QLh,9jYH,9kA9,eQ2r,ePI1,hzQr,c4gx,c3W1,hzu1,hzQx",
                    "6c07": "orbP,n2SN,lHvr,orn9,n3u3,n3QF,kjZ1,eQp1,hzW3,hArV,gbpH,hzKV,c4aP,aHRN,dsSr,ds9x,9kA3,9l5V,5dwr,3RDx,3QLh,5cyF,n37F,eQFP,kkdV,kjI9,eQ89,eQFV,c4TP,c4m9,6AO9,6BjV,c4TV",
                    "98d2": "lHez,oqX1,kj4H,kjCx,9k7X,hzop,hzKP,9kjh,9jYH,9kux,3QFz,3QLh,5cPx,6AO9,n3u9,n3Wh,5dlh,3RxV,3RDx,6Bpx,iX+j,c4IF,aIyH,iY9F",
                    "610d": "kjaj,kjCx,n3ox,n2Yp,c3Qp,c3W1,drUF,hzW3,hzu1,iXyb,gbMh,ds9x,dsf9,eQ89,c4m3,c4rN,iYkV,lI6V,lHMj,lIcx,orDX,kjNN,iY3X,hAb1,c4Zx,6Bpr,9l0h,6B8z,5dfF,3Rh1,3QQV,5cEh,9kjh,6ATH,9kA9,5chH,7Y9p",
                    "77a0": "iyNb,iz9l,e7Yf,e7Ah,5ksF,cFcL,5kWP,5k4H,9IXh,9JvD,iz/t,k0T9,lw4V,lvkD,izfr,pWDD,mYij,lvIL,pWVR,pXhP,mYGn,oqLH,or7R,8fZR,8fBN,oqLN,e8en,izrt,izPx,e8Cx,e8et",
                    "94fc": "ePwH,oqX1,gbMb,gbvp,c3KH,c45h,7Yqb,5ct1,gbB1,kjrb,kjg1,kkdP,kjI9,eQuz,hArV,eQjj,gc6N,hzW9,dsSr,ds9x,6Bpr,c4IF,c4xj,5cJV,orDX,3Rh1",
                    7699: "fD43,pWfF,luYt,h3zx,mY61,mXy1,izfl,j/WR,fDyd,h4pL,orB/,pX5T,mYo9,mYSp,fDWh,mYGn,bbY/,e88n,8gK1,8fNP,bbMZ,5jOz,5kKT,bcJn,bbN3",
                    7643: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QQP,iXDV,iXUN,hz/N,eQ2x,c4rN,9kFN,7YH9,9kux,aIJX,7YSp,3Rsb,c4Oh,3Rbj,3RDx,6Bpr,6B31,9kQX,9lbx,dsvX,iYqx,iY9F,gccj,kk2F,dsSr,hAgF,c3KH,gbGF,kj4H,hzop",
                    "53ae": "3QoH,6Mu7,oqRT,os49,lv+J,izJB,6Nkl,5ksL,fE0d,3RD3,fDKf,fE6p,iyZd,izxz,9Jdp,9Izj,lvqD,9J1t,9ILf,lv8B,cF0D,cEKB,fD9/,fDsd,6MS5,5j+B,3QGV,3R8Z,6N2d",
                    "504e": "iXbH,or0F,3QzX,kjg1,5d4j,3R09,3QWx,ds9x,dsSr,dr+h,7Z1z,aI+V,c4xj,7YY1,3RxV,3RDx,kjCr,kk8h,hA5j,n3Fp,hAmb,n3Wh,n3ox,hzQx,hAmh",
                    "8c12": "luYt,oqRT,h3zr,h3Lz,5jOz,8fZR,bc91,6MY7,6Nwn,8gK1,bcxl,cFiR,8glZ,bcxl,5kEH,3Rx7,3RD3,5kWV,e8UF,e88n,bbY/,h4jP,lvUN,lvkD,izlh,orjT,orU7,izVD,izln",
                    "9b2f": "orDX,hzKV,gbGF,gbB1,gccj,gc6N,n37F,lHvr,n3ox,iX+j,kjTp,kjfX,iXn1,eQ2r,gbXx,c3VX,5ct1,3QFF,3RxV,5dwx,6Bpx,7YeX,aIPF,n2SH,drDN,dsHh,n3Wh",
                    "82a9": "lIcr,lGZN,orDX,iY41,iXyb,or6h,c3KH,c3Qp,ePYV,hzW9,eQjp,c4TV,c4Zx,c4rH,dsf9,aIcb,aIK1,3R09",
                    "83df": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hzKP,ePNF,drJp,drDN,gbMb,gccp,dsf9,5cV9,3R5N,3RxV,5dwx,6Bpx,6B2X,5dfF,7YBr,5cyF,3Qup,3QoN,9k7X,c3W1,c4Oh,9l0h,9k81",
                    "530f": "n3db,iXsF,ePwN,ePYP,ePI1,c3KH,c4gx,c3VX,9k81,9koV,6ACV,3QFF,5ct1,iXyb,gbXx,kj4H,kjCx,gc13,oryp,kjNH,kkjx,aJ4x,aI+V,6Bpr,5dqV,5da1,6AZp,hA5p,hAmh,dsHh,dsqp",
                    "549a": "orsH,hzKV,kjI3,kk2F,hAgF,9koV,9kjh,7Z1z,9kFN,6AO3,3Rsh,aJ4r,aI+V,c4IF,hzW9,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "55e8": "iXJr,n37F,hzFb,eQ2x,aIt3,6Axh,dsSr,dsf9,9kWz,c4IF,hAgz,eQuF,lHGH,lIcx,hzW3,oryp,7Zir,7YSp,iX+p,iYkV,5dqV,3Rsh,5dfF,kj4H,kjlF,aI6F,aHRN,kj4N",
                    "5d34": "kjI3,orn9,n3Wb,kk8h,kjg1,n321,iX+j,c4xp,3RxV,3RDx,6Bpx,aI+P,9l5V,3Rbp,5cV3,5cPx,7YkF,c45h,drOX,dsf9,aIt3,aI11,aInr,7YBx,3QA1,3QoH,5cnp,gbvp,gcyV,iY9z,hAmh",
                    9991: "h3zr,pW9z,h3Lt,5jOz,5jUF,8g3X,bcVj,bc97,8gfT,8gQ3,5kWP,5kaD,k0u/,5kyR,mY61,mYSp,pWJJ,k0j3,k0H7,pX5T,iz9f,k00X,lveH,luSD,h4NJ,e8Oz,e8et,h4dJ,h4NP",
                    "95fc": "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,7Z7b,7YBx,aIch,ePTh,ePI1,aIcb,7Yf1,aInr,gccp,kjTp,hzQr,hAmh,iXsz,hzFh,aIVb,gccp,kjaj,3Qup",
                    "6e0c": "luYt,oqRT,mY05,mYGn,h4HT,h3Xv,h4TV,k0H1,k00X,h4pF,5ksL,3R93,5kgJ,8fZL,8g3X,9J1t,cFcL,e88h,bclj,bcDb,e8Oz,6NIj,cFiR,iyNb,fCU7,cEEz,3QuT",
                    9005: "lH8X,oqRp,hziH,hzu1,6Am1,3QoN,6AlX,3QLh,3RDx,6Axb,7YvV,lHpV,orPh,hzKP,hAxx,7ZcP,eQFV,eQdN,7YMN,7ZcV",
                    "5ae0": "ePNz,or0F,hzFb,eQ2x,ePwH,hzu1,iXDP,iXhp,lGZH,lHvx,orDX,kjNN,lIcr,lHMp,lI6P,kkdV,eQjp,eQdN,eQLr,eQFV,iY41,dsSr,drJp,6Agp,3QoN,3QFz,3QLh,6ATN,9kR1,aIK1,aI0X,aI+V,c4gr,7YvV,5da1,3Rsh",
                    "7f22": "q1BJ,jFAx,i5uh,i5Ud,jF+t,i5U7,bMcN,bMCJ,5qXb,6/rt,5sm7,5ryb,5sfz,dlDp,dl0v,5rEL,dldn,5rRJ,5s2B,dlqr,i6H/,eYgt,eXsl,i6i9,lhxT,lgJX,q2Cz,mRkH,mR7D,q1/L",
                    "6a17": "3QzX,oqX1,3Rbj,3RmF,6BjV,7ZcV,7YH9,aIEp,aJ4r,aInx,dsf3,dsMV,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN,gbXr,kjCx,kkjx,gcEx,gc13,gccp,iX+j,iXP9,iYkP,iY9F,n3KX,gci1,n3or,n45x,gcyP,gcnF",
                    6641: "lvOH,lv2F,fDyd,5kmP,3Re/,3RJ9,5kWV,9J7t,8gQ3,e8Cr,cFiR,fDg5,8g3X,5jUF,3QuT,3QoN,8fHN,8fNP,bbZ5,e7Mj,or1P,iz3p,izPx,orO1,or1V",
                    "80e8": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,5c+H,3Rbp,5da1,gci1,dsSr,ds9x,oryp,kkdP,kjCx,5dwr,9l0h,9kFH,5cPx",
                    7116: "oqWX,6Am1,3QoN,5cEb,7YkF,lHpP,3QQV,orhr,lHB9,lHMj,lIcx,5dwx,3RxV,5dlh,eQAb,dsMV,eQoX,gci1,c4Iz,9kWF,9kLp,aIyN,gc6N,ds9r,eQ89,iXbH,ePwN,kjrb,iXsF",
                    "786d": "ordR,oqRT,fCNX,or1V,fDKf,h4pL,e8Uz,e88n,e8kt,5kmP,5kWV,pX5N,k0H7,k0iZ,pWJP,mYSj,mY67,h3Lt,h41H,8g3X,8fNP,h3Lz",
                    "948f": "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,orsH,6ATN,3QWx,lHXz,6B8F,3RDr,or+x",
                    "953c": "gbpH,or0F,kjwP,kjg1,lHGH,kjI9,eQ89,eQFV,kkdV,kk8h,hAmb,hArV,hzW3,hz/N,c4CX,orE1,c4m3,c4TV,6AZp,3QQV,3QLh,aIyH,3RxV,3RDx,7YvP,5cyF,gbGF,gbAX,gbRV,c4aP,c3KN",
                    "9e5a": "n31X,oqRp,orhr,n3iV,lGZH,lHB9,iXmX,drDN,drP1,ePNz,6AaN,6Am1,5cyz,7Yf1,5cV3,7YBx,6AO3,6Axh,eQ89,ds9r,dr+h,iXJx,orJz,lHMp,lI6V,gcyV,eQAh,hAgz,iY9F,lHMj,dsqp,dsSx,6Bpx,3Rsh,3RmF,5da1,9kFH,9l0h",
                    "88bc": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,aIhP,drUF,ePTh,orsH,hzQx,lHGH,lI6V,kkdV,c4m9,c4gx,iXUH,c4TV,c4Zx,aIVb,5dlh,5cV9,aIt9,aIVh",
                    "4ec2": "orbP,iXhp,iXbN,3QFz,kjlF,3QQP,3QWx,9kLp,oryp,kjwP,kkjx,5dwx,3RxV,3Rsh,5dfF",
                    "51eb": "lHkb,orhx,hzQr,iXDV,hA5j,hAb1,iY9F,lHXF,lH3p,ePCp,eQAh,9l0h,7Z1F,7YY1,6Bpr,5dwx,3RxV,3Rbp,5c+N,c4rN,c3W1,6Am1,3QoN",
                    "965f": "orDX,6B31,aI+V,c4TV,6B2X,3QWx,3QQV,eQdH,7YvV,hAxr,hzKV,lHRX,lI6V,hzW3,n3u9,aHXj,9k81,9kdF,aIch,ePTh,hzu1,kjrh,n3dh,n2SN,3QoN",
                    "57a4": "6MG3,pWfF,8g3R,5jCx,5kWP,5kaD,bcf7,bcPj,5kyL,e8wB,k0AX,h4NP,h47D,mYul,mY61,mYMj,j/yH,k00X",
                    8392: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbGz,gcnF,c4IF,c4D1,c3/F,gbGF,9k7X,9l0h,3Rsh,3QA1,9k81",
                    "84bd": "n45r,n2SN,oryj,lHMp,lHpP,orbV,gchX,gbMh,hzW3,eQ2x,c45h,eQ83,c4xp,c4D1,7ZcP,6Bpx,6B8z,3RmF,3QQV,5cEh,7Yqh,5chH,7Yf1,6ATH,7YH9,iXmX,iYfh,aIVh,aI11,iXn1",
                    "63ff": "oqXJ,5jOz,3QuT,5jCx,e7Sj,bbB1,j/yH,j/QV,orjN,h3RF,lvCF,lveH,h41B,h4jP,cFcF,cEQH,h4dD,5kgJ,8gr/,3R8Z,bcJn,izVD,iA5z,lw4V,lvON,izDp,orO1,3RJ3,bcJn",
                    "54fd": "os43,or7R,orBV,9Jdv,5kaD,3QMR,3QGV,bc91,6Nef,3RD3,3RJ9,h41B,h4NP,mXxX,mXQ9,cEEF,cEmx,mXy1,e8Ot,k0N3,k00X,e82r,e8Oz",
                    "56d4": "hA5j,oryp,eQLr,hAxx,hzFh,ePTh,n3/P,n3iV,9kWz,dsBF,9koP,9l5V,dsf3,9kA9,c4TP,c4aV,aIVb,aIPF,aInx,9kLj,3QQV,3QLh,6ATH,3R5N,3Rbp,5da1,7Z1z,6B8F,3RxV,3RDx,5dlb,6BjV,kj4H,kjlF,c3/F,c3KN,kj4N,gc6H,gbXx,eQ2x,eQdN,gc6N,gchX,gcth,eQAh,eQp1,gci1,kjCr,kk8h,lI1h,lHvx,kjCx",
                    "72b0": "n2SH,iXyh,6Axh,3QA1,5cnp,c3KH,c3Qp,gbMh,hziH,hzop,orbV,orsH,7YMN,3QQV,hzQr,hAgF,5dfF,3Rsh,3RDx,6Bpx",
                    "5fea": "3QzX,oqX1,3RDr,9l0h,5dqP,5cJV,eQjp,n3KX,dsSx,ds3P,lHGN,iXsz,gbMh,drDH,iXbN",
                    "6c86": "kjfX,n2Yp,kkjr,kjrh,orsH,lHMp,hziH,ePCp,3Quj,c3/F,3QQP,6AO9,gc19,gcnF,5dfF,3Rsh,3RDx,6Bpx",
                    "6f47": "lH8X,oqRp,n45r,n3dh,orJz,lHXF,lHB3,orn9,3Rbj,kjTp,aI+P,3RxV,7Z1z,9kWF,9kA3,7YH9,aIhP,5cEh,3QFF,c3/z,3Qup,ds3P,dsMV,iYkV,iXDV,gbvj,iXbN,gcEr,gbMh",
                    "5c50": "j/KJ,k0N3,or+3,oqXP,8fNP,3QoN,e82l,3QSX,fDm1,bbT9,izfl,fD49,bcxf,izJB,e8Uz,e8et,bcf7,bcVp,6Nqh,3R93,3R2Z,9J7t,6Nkl,3RD3,3RJ9",
                    "9a92": "oqLH,or1V,fD49,luSx,e7Gn,e7Yl,5j+B,3QGV,3QAP,5jID,bbT3,9Inh,9J7t,5k4H,5kWP,9Jpx,orH/,3Rl5,k0cT,k0N3,cFGP,cEWD,fDs7,fE0j,or+3,orpZ,fDsd",
                    "73c8": "n3db,n2SN,orhr,7YBx,3QLh,7Yqb,6Am1,6AaN,n31X,6Am1,gbMb,gbpN,iXyb,iX+p,5d4p,3R5N,5cV9,5dfz,kk2F,kkjx,5dwx,5dfF",
                    6841: "3QzX,oqX1,iXP3,3R09,gbRP,kjNN,dr+b,ePNF,gbvj,c3KN,iXyb,iXbN,orsH,lHvx,lI6P,lHS1,gccj,gcEx,gctb,5dlh,3RmF,5da1",
                    "6baa": "lHpP,lGZN,lIcr,lHB9,iXUH,iYfh,orDX,iY41,ds9r,gc19,gcEx,eQLx,dskH,dsMV,5d4j,6ATN,6BjP,5dlh,3QWr,3RDx,3Quj,ds3V,hzKV,hzu1,c3KH,lH91,c45b,ePI1,aIyH,aI+V,7ZcV,7YMN,aIyN",
                    "89ce": "or6b,n3dh,hziN,hzQr,hzu1,n3db,hz/N,7YvP,ds3V,5cPr,6AO9,eQ89,aIEj,lHMp,lI6V,aI+V,6Bpr,3RDx,3Rsh,5dfF,hAgF,9kWz,3R09,3QWx,5chH,ePwN,ePNF,6ArF,5ct1,9jYH,9kdF,c3/z,c3KN",
                    8171: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QQP,7YMN,eQdN,ePYV,hzW9,lHB9,lHpV,lHMj,lI6V,gcyV,gccp,iYqr,iXUN,dsqj,dsMV,9lbr,9kLp,3RDr,3Rbp,7YBx,orJz,6B8F",
                    7946: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,3QQP,dsw1,lHS1,lHvr,lI6V,ds3P,ePTh,gcEr,gbXx,3RDr,dsw1",
                    "76f1": "iz9f,iyNh,cEmr,cEKB,fE6j,fDm7,orpT,or+3,orH/,5kyR,3Re/,5kmP,oqLH,or7R,6MM5,6Mo1,oqLN",
                    "94ce": "gbpH,or0F,kjwP,kjg1,gbAX,gbMh,aIhP,aHRN,6ACP,3QFF,gbGF,eQ2r,eQ89,gccp,lI6V,n3/V,n3u9,kjNH,gcnF,eQFV,eQLx,3RgX,eQp1,7YBr,7Zix,c4TP,c4m9",
                    "956c": "gbpH,or0F,kjwP,kjg1,gbAX,gbMh,c4aP,c3KN,6ACP,3QFF,gbGF,kjTj,gbXx,aIPz,kk2F,aJ4r,aIyN,iXUN,iYqx,gc6H,gcyV,dsMP,dskN,orPb,lI1h,lHGH,orsN,n45r,n3ox,7YH3,7ZcV,5dfF,3R5N,3QWx,6ATH,5d4p,3Rsh,3RDx",
                    "75e8": "n3Fj,orsN,lIcr,lI6V,lHeF,7YkF,3QoN,3QWr,7YSp,c4xp,aIt3,aIVh,5dlh,3RmF,5da1,c4TP,dsSx,eQLx,eQ2x,ds9x,c4aV,c3KH,gbGF,kj4H,hzop,hAxr,hzKV,iY9z,gcnF,gc6H,iXUN",
                    8022: "3QFz,or0F,3R03,7YY1,eQp1,c4m3,c4TV,5dqV,3Rsh,5dfF,aIcb,9koV,6AaH,c3W1,ds3P,drDN,eQ2r,hzW9,hAxx,gcEx,eQFV,hzoj,hzKV,lHpP,lGZN,lIcr,lHB9,orPb,kk8h,kjTj,oryp",
                    "98a1": "oqWX,orhx,n3ox,hzu1,lHez,hzQx,gbpH,gbGF,ePNF,aHRN,ePCj,aIch,gbRP,gc19,eQ89,c4aV,aIyH,ePYV,9kLj,iX+p,iYkV,9l5V,3RDr,7Z1F,3R5N,eQuz,7Z1F,n3/P,iY9F,n3Fj,n45x,3QLb,9kjh,6AIr,5cV9,7Y3H,7YH9,3QoH,6Am1",
                    "86e9": "orbP,oqLN,hzzz,or0F,hzKP,gbpN,gbXr,iXUN,orsN,orJF,hAgF,gcth,gcEx,hAxx,lHMj,kjZ1,eQ83,c4m9,5cV9,5dwr,5chN,3RDr,6BjV,9l0b,c4Oh,c3W1,9k81,9l0h",
                    8722: "pW9t,5jOz,5jCx,5jOt,6MSb,9ILl,5kax,5kWV,5kgD,cF0J,cFAP,5kQP,cFoH,5kEN,5ksF,cFcL,h4jJ,fDEf,h4vR,lvIR,orU7,orpZ,k0T3,k06T,lv8v,e7Yl,e7Ah,luMx,lv8B",
                    "87b5": "oqWX,5ct1,5chN,5csX,6Axh,7Yqh,9kFH,5cJV,5dwr,7Z7h,5c+H,3Rbp,5da1,aIK1,aInr,aJ4x,dsHb,dskN,orJz,gcnF,orhr,or+x,gccj,oryp,gcyP,kkdV,kjI9,gc19,gcyV,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7b0f": "iXbH,or6h,lHB3,lH91,iXUH,orPh,lIcr,lHS1,iYkP,lHXF,lHez,iXDV,c3Qj,gbGF,ePNz,eQFV,5dqV,3Rsh,3RmF,5da1,3QzX,3QFF,6AO9,aIK1,eQp1,eQ2r,c4gx,9kjh,7Yf1,7Y9p",
                    "7baa": "kj4H,or0F,n3or,n321,n45r,n3L1,n3Qz,kkdV,kjNH,orJF,n37z,kjwV,gbRP,hzFh,hAaX,gccp,c3VX,c4Oh,6Bpr,6AaN,eQ83,3R09,eQAb,ePI1,9k81,9l0h,eQAh",
                    8204: "orjN,mXK3,h3Lz,h4HT,mYGn,mYij,k0iZ,k0H7,j/KJ,k06T,e7Yf,8fHT,8fBN,bbT3,bcVp,5kWV,3RD3,3Rx7,5kEN,8gDX,6Nwn,6Ne9,8gm3,8g3R,6MY7,6MG3,5jOz",
                    "7fb2": "n3iP,orbV,orDX,n3L1,n2SH,n45x,hzW3,n3u9,hziH,hAxx,kjaj,kjg1,kkdV,eQAb,gcnF,drDH,dsSx,gbRP,gbvp,gccj,c4xp,6B8F,3RxV,3RDx,6Bpx,aI+P,3R5N,3R09,3QFz,3QLh,5cJV,6ACV,6Am1,9kdF,9k2j,9koV,c3Qj,aHRN,aInr,c4aV,gbGz,aI6F",
                    "7dae": "n3db,or0F,oryj,lHGN,n45r,n3Fp,n3/P,kkdV,eQjp,eQdN,kjYX,iY41,eQFV,eQLx,ePwH,gbvp,lH3p,lHvx,kjCx,iXJx,iXhp,ds9r,aIch,aIyN,7Yqb,c4xp,7Ykz,7Z7h,9kWF,3R03,7YH9,3QoH,3Qup,5cyF,6Axh,6B2X,3Rsh,3RxV",
                    9179: "orjN,oqLN,or7L,cEKB,cEQH,8fHN,8g3X,bbH1,cEyz,oqXP,5ksF,3Rl5,3Rr1,5kKT,h4HT,fDs7,fE6p,9Jdp,cF6P,lvwJ,izDv,os43,mYcd,iz/t,lw4V,lvIL,izPx,5kax,k06T,j/yN,5jCx,5kaD",
                    "8ddb": "6Arz,hzzF,6AaH,6ACV,drJj,6Agp,ds9r,drUF,eQdH,eQFV,c4TV,9l0h,3R5N,3R09,dsqj,aIEp,3RDx,orJz,eQuF,hAxr,iYw9,kkp9,kjI9,7YH9,3QLh,n2Yj,n3iV,hzKV,hzop,n2Yp",
                    "8e6f": "6MG3,iz3p,8g3R,5jID,5jCx,e7Gh,5jID,e82l,e7Sp,h4pF,cEWD,cFGP,h4BN,8gfT,8gQ3,bcxf,5kyR,orH/,cFiR,mY61,pX5T,k0iZ,lvqJ,mYMd,k0B1,izlh,iA5F,oqRN,or7R,iz9l,iyTn,oqRT,bcPd,5kQP,5kgJ,bcfd,bcPj",
                    9706: "orUP,oqRp,gc13,orn9,gcnz,gci1,iY3X,iY9F,iXsz,iXyh,gbMb,gbGF,hziH,lGZN,lIcx,hAxx,c4m3,dsHh,9l5P,9kA9,6AIr,6Bpx,c4CX,6B31,drJj,dr+h,6Axh,3Qup,6Axb,3QWx,3RDx",
                    "93ca": "kjlz,or0F,kj4H,kjCx,lHpP,lH3p,n2SH,n3ox,kjfX,gbB1,drDN,hztX,hzKV,ePYV,dr+h,drUF,9jYH,9k2p,dsf9,9l5V,9lbx,9kQX,9kjh,eQdH,eQjp,lIcx,lHS1,orDX,kjNN,iY3X,eQFV,eQLx,6AlX,6Beh,3RDr,3QoN,5d9X,3Rh1,3QLb,5cEh,9kA3,3R09",
                    "9cae": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3QWr,3R09,aIVh,c4Oh,c4xp,9kA3,dsw1,eQdH,dsf9,dsSr,eQFV,hzW3,hAxx,lI6P,lHGN,hAaX,orE1,9kLj,3RxV,3RDx,9koP,hzKV,hzop,9k2p,9koV",
                    "9cd8": "lGZH,oqX1,n3iP,n2Yp,iXP3,oryp,lHMj,lI6V,eQdN,eQLr,gcnF,kjNN,hziH,hzQx,gbGz,iXsF,eQ2r,ePCp,kjap,kjwV,ePYV,7Y9j,ds3V,c45b,c4rN,aIt9,5cV9,7Z1z,7Yqh,7YkF,3RDr,3QoN,aIPz,5dfF,5cyF,aI6F,aIPF",
                    "9b49": "oqWX,lGZN,drDN,dr+h,lHkh,lGZN,drOX,lH91,hziH,hzFh,drJj,6Agp,3QoN,drUz,3QFF,3RDx,5dwx,7ZcP,7Zix,9lbx,iYqx,iXJx,7YBx,9koP,9kjh,aIch,c4m3,dskN,gc6N,c4xj,dskN,c4Iz,dsHh,gcth,c4TP,dsHh,n3KX,7YY1,n3or,n45x",
                    "9edb": "lGZH,orbV,hzzz,n37F,hz/H,hA5p,kk8h,lHvr,lIcx,n3Wb,orJF,iYqr,hArV,hAmh,iY41,lHGN,orsN,6AO3,gc19,6AaH,6Bpx,9l5P,9k2p,eQoX,dsqp,ds3P,ePTh,3RDr,5dqV,5d4j,3Rbp,3QQP,5cJV,5chH,3QoN,c4Ob,gcth,gbB1,c3W1,c4Oh",
                    "9f17": "oqWX,n37F,kjap,hziH,hzu1,kjwV,orbV,orsH,iXUN,hA5p,hArV,iYqx,kkjx,kk8b,kk2F,n3Fp,orPb,lHS1,c3/z,gbGF,c3Qj,c4aV,ePYP,ePwN,aIJX,gci1,aIt3,aI+V,3R5N,3R09,3QoH,3QQV,6AlX,3QA1,3QLb,6Axh,9kFH,5dfF,3RxV,3RDx,dsf3,dsMV,6ACP,9koV,9k2p,6Agp,6ACV",
                    5029: "orbP,iXhp,iXbN,3QFz,kjlF,3QWr,ds9x,dsHh,5dlh,3RmF,5da1,7YBr,7Z7h,aIVb,aInx,gbMb,gcEx,iYfb,iXJx,lHpP,lI6V,gccj,oryp",
                    "8be8": "luYt,oqRT,h3zr,h3Lz,5jOz,5jUF,6MM5,8gW3,8g3X,cFAJ,cEWD,h4jP,lvCL,iz/t,izfr,k0MZ,mYSp,mY0b,j/WR,3Rk/,fDKl",
                    "520d": "pWxx,iz3p,h3FD,h3zx,mY05,mYGn,h4jP,h3Xv,h4TV,5kWV,5jUF,bcVj,bbZ5",
                    8291: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbvj,gcth,aIVh,aHXp,5cnp,3QA1,3RxV,5dwx,6Bpx",
                    "83bc": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbGz,c3KN,c3/F,ePYP,7Y3N,7YvV,3QoH,5cJV,6Bpr,3RDx,3RmF,5da1,hAb1,eQ83,eQLx,c4m3,9kA9,9l5V,c4TV",
                    "85c1": "n45r,n2SN,oryj,lHMp,lHpP,orbV,kjI3,lHB9,kj4H,kkjx,aHXj,ePCp,eQFV,aI+V,9l0h,9kWF,9kA3,7YH9,3R09,3RDr,3RxV,5dfF,6AZp,7Y3H,7Zix,6ACP,5cyF,3Qup,3QoN,iXsz,iY9F,gcnF,gbGF,iXsF,aIJX,dsw1,dr+h,aIch,aIK1",
                    "544b": "orDX,n3L1,dsw1,7YMN,3QQV,3QLh,c4Iz,3RDx,ds9r,dsSx,iYkP,iXP9,lGZH,lHkh,c45h,c3KN,lGZN",
                    "55f7": "lHMj,lHpV,hzKP,hA5p,dsvX,dr+h,ds9r,6AIx,3QLh,3R5H,5d4p,9kLp,9kux,orn3,dsf9,gchX,orPh,iYw3,iY9F,iYqr,7Zix,3RmF,3RJ3,7Z7h,eQAh,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5cc4": "7YeX,oqX1,7Zir,7YBx,eQoX,3Rh1,c4m3,c4TV,eQ2r,eQ89,gccp,lI6V,n3/V,n3iV,lHB3,gcnF,eQFV,eQLx,iXyb,7Yqh,7Y3N,iXbN",
                    9963: "or0z,kjg1,gbpN,kjfX,kjI9,iXP9,gbRV,gbGz,3QFF,7YBx",
                    "614a": "3QzX,oqX1,aIt3,5cEh,9kWz,3RxV,3RDx,kjYX,3Rh1,kjwP,kkjx,hzFb,kjlF,hzQr,hArV,c4TV,c4gx,eQLr,ePYV,3R5H,kjNN,iXbH,drDN,n3u3,lHGN,lHXz,n3Wh",
                    "6d60": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,dsvX,3Rh1,ePYP,eQLx,gccj,dskN,7Yqh,5cV3,aIt9,aI+V,6BjV,5dlh,6B8F,hAxr,hArV,iY9F,orn9,orUP,iX+p,hzW9,hzKV",
                    "5be4": "lHMj,orn9,iYkP,lIcx,lH3p,iXbN,hztX,ePI1,ePYV,3QQP,iXDV,3QoH,6Am1,aI11,aIhP,aHRN,c4Zr,c4gx,c4Ob,eQAh,eQ89,hAmb,hzW9,c4m3,hA5p,9kFH,5c+N,5dqV,9l5V,9kFN",
                    "5a4a": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,lIcr,lHvx,hzW3,hArV,dsSr,ds9x,orDX,dsw1,5cJV,7YSj,3Rbp,3Rh1,5dfF,3RDr,9kWF,aIPF,aJ4r,7Z7h",
                    "7f01": "q1BJ,jFAx,i5uh,i5Ud,jF+t,i5U7,bMcN,bMCJ,5qXb,6/rt,ab57,aahb,eXSh,5rY7,i6V7,lhkR,osaJ,orT5,lh1t,i6BH,i6i3,lgJX,orzF,5ry5,eXsr,eYgt,5smd,5ryb",
                    "674c": "3QFz,or0F,3QWr,6ATN,lHGN,lI6P,lHvx,lHXz,5dfF,3Rsh,3RDx,6Bpx,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN",
                    "699b": "3QzX,oqX1,3QLb,3QQV,7YMN,3RxP,7YY1,c4xj,3Rbp,c4m3,c4IF,9l5P,9koV,gchX,aJ4x,gbRP,gcEx,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN,iYfb,iXJx,lHpP,lI6V,oryj,gccp,aIch",
                    "660a": "lvOH,lv2F,e7Md,e8ID,e8en,9J1t,6MSb,3QuT,3QoN,9JHz,9Inh,9J7t,5kEN,3RD3,3RJ9,or1P,orO1,izPx,iz3p,or1V",
                    7256: "hzFb,or6h,hzoj,hzKV,drJj,dr+h,5cEh,3QQP,6AO9,n3u9,n3/V,kkdV,kjI9,3Rmz,iY9F,5dlb,3RxV,dsMV,dsqp,3Rbp,7ZcP,7YSp,aIEj,aI+V,gcEr,gc6N,iYfb,hArV,orDX,n3L1,n2Yj,5cnp,3QoN",
                    "65ce": "oqWX,lHeF,kjCr,kj4N,kkjr,kjNN,hzQr,oryp,kjfX,7Yf1,3QoN,5cyz,3QLh,5cJV,ePYV,ePI1,eQdH,eQFV,hArV,hz/N,7YMN,3QWx,6Bpr,3RDx,3RmF,5da1,c4D1,aI+P,6B31",
                    7818: "lHpP,lH3p,ePwH,lHeF,gc13,c4m9,c4TV,gcyV,kjCr,kkjx,orDX,5da1,3RmF,3RDx,6Bpx,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "7f68": "lveB,ordX,orBV,lvCL,k0cT,izrt,fDgb,cEsD,cEmx,iA5z,iyNh,h4jJ,fDEf,cFAP,cFGV,e8en,5kgJ,3R93,3RJ9,5kWV,9IFj,9Jpx,oqRN,or+3,lv+P,luSD,oqRT,cFoH,6Nqh,6MG9,cEEF,cFoN",
                    9518: "gbpH,or0F,kjwP,kjg1,lIcr,lHvx,orPb,iYfh,iXUH,orsN,hAaX,eQp1,9kux,eQ2r,eQLx,gbAX,gbRV,c4aP,c3KN,gbGz,3QFF,6ACV,aIyH,aI+V,5dqV,5c+N,aIyN",
                    "9e39": "orbP,n2SN,c3/z,n37F,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,kjYX,iY9F,orJz,lHMp,hziH,hzQx,c4aP,5cJV,5cnp,c3Qp,c4aV",
                    "7a95": "n3u3,orhx,iYkP,kkjx,lIcx,lH3p,iXbN,gbAX,iXyh,gctb,iY41,dsHb,c4D1,7ZcV,5dwr,3RDx,3Rh1,5d4p,gccp,gbRP,6ACV,3QFF,7Y9j,c45h,drP1",
                    5240: "hzFb,or6h,lHGH,hz/N,hziN,lGZN,ePwH,eQ89,aIt9,aHXp,3Qup,3QFF,6AO9,kjYX,9kR1,or+r,5dwx,3RxV,3Rsh,5dfF",
                    "4f58": "orsH,hzzF,gbpN,gchX,gbMh,gcEr,gcyV,n3zN,dsMP,drP1,dsf3,3R09,3QWx,5cJV,aI6z,5chN,5dqP,aIK1",
                    "8c32": "luYt,oqRT,h3zr,h3Lz,6MA3,9ILf,5jID,3QSR,cEQH,cFGV,5kWV,3RD3,bcDb,8gQ3,8g9N,bclj,fDyd,e8qv,fDKl,lvIR,or+3,orpZ,k00R,k0T9,iz/z,fDm1,izxz,k0u/,lvCL,5kEH,6Nqh,8gE1,8gm3,5kmP,5kEN",
                    "572e": "7Ykz,or0F,9kur,6AaN,iXbH,iXJx,n3u3,n3/V,gcyV,gc19,5cV9,3R5N,3RDx,6Bpx",
                    "82d8": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,5d9X,3RmF,3Rsh,5dqV,gcyV,gbvp,3Qup,c4aP,c4xp,7YSp,7YvV,c4aV",
                    8488: "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXhj,c3Qp,c3W1,dr+h,gbvj,gbRV,iXUH,dskN,c4xp,c4TV,eQFV,gc6H,hAmh,9koP,c4m9,6B8z,6ArF,9kdz,3QFF,3RmF,9kWF,9kdF",
                    6343: "or0z,5cyF,3QA1,5cnp,ePYP,aHRN,iXbH,iXDV,lHvr,lI1h,dsHh,ds9x,hAxr,hzQx,lHMj,dsqp,6Axh,aIt3,5cV9,5dqV,aI+V,aIt9",
                    "54d5": "lHvr,hzQx,hAxx,lIcx,hAaX,orE1,hA5j,dskN,9koV,dskH,dsSx,aJ4x,6B8F,3R09,3QQV,aIEj,9kR1,kj4H,kjrh,c45h,c3KN,kj4N",
                    "562c": "lvUN,lvkD,fE6j,fDa5,cFiL,cFGV,bcVp,3Re/,5kWP,9Jpx,fDyd,3R93,fDg5,5k4H,5j+B,6N8d,5k4H,9IRl,9J7z,cF6J,cEQH,mXxX,mXQ9,cEEF,cEmx,mXy1,orjN,izln,izVD,orU7,orjT",
                    "5f73": "orn3,kjlF,iXhp,iXbN,ePwH,ePCp,gbGF,iXP9,lHMp,3QQP,hzKV",
                    "5edb": "n3zH,orsN,n45r,n2Yp,5cnp,3QoN,3Rsb,3QLh,7YMH,3R5N,kjNH,9kFN,hzFb,hAmh,c4TP,c3/F,9k7X,9lbx,5csX,7Yqh,6B2X,6AIx,5dwr,7Z7h,kk8b,eQAh,ePTh,kjrh,kk8h",
                    "4e2c": "3QQP,orbV,c3/z,9k2p,hztX,gbGF",
                    "6ee0": "lH8X,oqRp,gbvj,iXbN,3Quj,drUF,3QLb,9kFN,aIyN,aI6F,3R5H,9kjh,3RgX,9lbx,aJ4x,aIK1,3RDr,9kR1,n3Wb,dsHh,n3db,n45x,eQ2r,n3ox,eQLr,ePYV,hzQr,hAmh,kk8b,kjCx",
                    9058: "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,5cPr,eQ2x,eQAh,6Beh,5dfF,6B31,9kjb,9lbx,gccj,9kLp,c4Ob,c4gx,hzFb,hAxx,kkdP,kjwV,n3db,n45x,hzW3,orn9,orJz,hAgF",
                    "5b73": "lHpP,orbV,oryj,lHMp,n2SH,n45x,lHez,iXhp,iXyh,kjwP,ePCp,eQ2x,gbRV,gctb,eQFV,eQdN,kk8h,iY9z,iXUN,lHS1,drUz,dsBF,aIyN,5c+N,3R09,5cPx,9lbr,9jYN",
                    "757f": "or0z,kj4N,kjlF,lHkb,gbpN,gbRV,hzFh,orUP,kjZ1,kkdV,lIcr,gci1,gcEx,hArV,dsHb,eQuF,aI+P,9l5V,5da1,3R5N,3R09,7Y9j,7YH9,aIcb,5cEh,dsSr,drDN,6Bpr,5dwx,3RxV,7YY1,iXP9,orn9,5cV3,aIt9,aHXp,5cnp,5cV9",
                    "67e2": "3QFz,or0F,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,orUP,n3ox,5cPx,5cV9,7YSp,3RgX,5d4p,6Bpr,3RDx,3RxV,6B8F,c4D1,lHS1,eQFP,eQ89",
                    "6a90": "3QzX,oqX1,3QLb,7YBx,kjCx,kkjx,hArP,iYfh,gc13,gcEx,iXUH,hzW9,gchX,hAb1,dsMP,dskN,aIyH,aI+V,orn3,lHpV,n3or,n3/V,kk8h,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,7YH3,5cV9,5dwx,7Zix,7YH9",
                    "8d36": "lv2z,8fTV,3QoN,3QSR,8fTV,3R2T,6Nef,h4pL,h4BH,5kEN,3Rx7,3RJ9,6NIp,9IRl,ordX,oqRT,9Itn,h4NJ,or+3,orpZ,h4dJ,h4NP",
                    "80f2": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QQP,3QWx,5c+N,c4TV,3RxP,7YY1,9kur,9kA9,gcth,iYfh,gctb,gbXx,lHS1,lHvr,lIcx,oryj,n3L1",
                    "71d4": "oqWX,6Am1,3QoN,5cJP,7YkF,aIJX,5da1,7YH3,7ZcV,n3KX,c4D1,lHvr,orPh,iXUH,kjI9,lI6P,iY9F,hzQr,hAxx,gccj,eQdN,c4gx,c4Zr,gcnF,gbAX,iXyh,iXbH,ePwN,5cV3,aIt9,aI+V,5dqV,5cV9",
                    "78a5": "n3iP,n2SN,ePwH,n37F,n3Qz,orE1,hzW3,hAxx,lIcx,lHB9,dsf9,6Axh,9lbr,9kFN,3RxP,5dwx,dsSx,dskN,3R5N,dsvX,5da1,5dlb,dsHh,gbAX,gbMh,7Yqh,7Yf1,gbB1",
                    "94b4": "gbpH,or0F,kjCr,kjg1,iYqr,iXP9,c4CX,orE1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,c4TP,5dqV,5cV9,c4m9,c4TV",
                    9558: "gbpH,or0F,kjwP,kjg1,kk8b,kjNN,c4Ob,eQAh,eQjj,c4xp,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,9kA3,9l5V,6B8F,3R09,3QWx,7YSj,5dfF,3RxV,3RDx,hAmb,n3Wh,n3zN,hz/N,hAmh,eQLr,c4Zx,c4m9,eQ89,eQLx",
                    7596: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,hz/H,3R5N,hzKP,hArV,aI+V,9l0h,9kWF,aIK1,gbGz,c3KN,kj4H,hzop",
                    8934: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,5dwr,5cJV,5dqP,c4TV,c4m9,5cV9,c4xj,5d4p,5dfz,c4IF,aIhP,drUF,ePTh,n3or,gbXx,eQdH,orsN,orJz,hA5p,kkjr,kjZ1,eQFP,iYfh",
                    "4f5a": "orhr,gbvp,iXsz,3QFF,3QWr,aIK1,orE1,n3u3,iXP9,gbRV,kjI3,kkjx,gcEr,eQR9,eQ2x,aIJX,3RDx,3RJ9",
                    "51bd": "hztX,n2SN,6AaH,ePI1,3QzX,3QLh,aIEp,kjTp,kjwV,9kFH,c4gx,9kdz,c4aV,orbV,orDX,or0F,or+r,3RDx,3RxV,5dlh,lI1b,9l0h",
                    "90b6": "5cyz,or0F,aI6z,7Y9p,7Y3N,hzzz,hziN,hA5j,hzQx,9kLj,6AO9,6AIx,orhx,3RgX,n3L1,n45x,iYqx,gcth,dsSx,9lbx,7ZcV,7Z7h,9kWF",
                    "57e4": "oqWX,6Am1,6AaN,7Yqb,6Am1,9lbr,9koV,c4CX,3Rh1,9kur,dsqp,lHMp,oryj,lHB9,hAmb,hzQx,hziH,hzFh,lHvr,ds9x,dsHh,lI1h,lHvx",
                    8366: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,drDH,gbvp,gcEx,dsMV,aI0X,drUF,7Y3H,7Zix,dsf3,3R09,c4Iz,c3/F",
                    "851f": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,gbGz,hzu1,ePwH,eQ2x,ePHX,7Yf1,3QoN,aI0X,aIhV,3QQV,3QLh,3R03,7YY1,c4D1,7YBr,7Zix,3RxP,6B8F,c4TP,c4rN,dsqp,hA5j,dsf9,eQLr,eQdN",
                    "646d": "oqXJ,5jOz,3QuT,5jCx,fD9/,bbB1,j/yH,j/WR,mYuf,orB/,lw4P,lvkD,bc97,3QGV,6N27,3QSX,5ksF,6Nef,6Nqb,5kEN,3RJ3,6NCj,fDs7,fE6p,izDp,bcrf,bcJn,izVD",
                    5550: "n3KX,oryp,lHvr,lIcx,iXUH,hz/N,eQ2x,gccj,hz/N,eQoX,hAmh,iYfh,eQLr,hAmh,9kur,9lbx,3RgX,c4D1,lGZH,lHkh,c45h,c3KN,lGZN",
                    "5e3b": "3QzX,oqX1,c3/z,aIch,kjrh,kj4N,aHRN,aIEj,7YSp,5cV9,3QQV,3QLh,6B2X,5dfF,3RxV,3RDx,gcEr,gbRV,iXJr,iYfh,lI6P,lHpV,gccj,oryp,7YBr,ds9x,dsHh,7Z7h",
                    7303: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,gbMb,n3Fp,oryp,gcEr,n3Fp,gbXr,gcth,ds9r,9kA9,7YH9,7YXX,dsqp,dsMP,6B8F,5cJP,5dwx,or6b,hziN",
                    "607a": "3QzX,oqX1,6Bpr,3RDx,3R09,5cPx,aInx,aIVh,gcth,gbXx,iXsz,gbMh,drDH,iXbN,oryj,iX+p,n3/P,iYkV,iXDV,n3iV",
                    "6cef": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,6N27,3QSX,3QMR,mXW5,mYMj,iz/z,iz9l,e8Uz,e82r,h4pF,9Jdv,3Rx7,3RD3,5kWV,6NIp",
                    "6f7a": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,3QGP,5j+B,or7R,or+3,lv+P,lv8B,k0cT,k0H7,izJB,e8wB,cFcL,e8kz,h4TP,h41H,bcDb,bcPj,9JvD,5kKT,3Rr1,5kyR,8gx/,8gW9,8g3R,8gm3,bc91,bclj,9J1t,5kgJ,3QYT,5k4H",
                    "59aa": "oqRj,aHXp,3QWx,3QoH,9kjh,iXyh,iXbN,9l5P,hz/N,9kA3,hArV,iYkV,lIcr,lHvx,5cPx,5dwx",
                    "7ea8": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,3QQP,9kFN,orsN,iXJr,iY9F,6B8F,3RxV,3RDx,6Bpx,eQ2r,aIK1",
                    "742e": "n3db,n2SN,gbpH,gbMh,6AaH,6Am1,7Yqh,n31X,6Am1,n3KX,oryp,iYkP,lIcx,lHvx,iXDV,hAmb,hzW9,ds9r,dsSx,dsvX,5da1,3Rbp,5c+N,aIyH,6AIx,6Bpr,aIVh",
                    6920: "or0z,kjap,iXhp,iXJx,gbpH,gbXx,kjrb,ePTh,n2SH,n3ox,orUP,n3Fp,gccp,eQdN,3R03,dsf9,5dwr,5dqV,6B8F,aIyN,aInr,6ArF,5cnp,5chN,c4Zr,c3KN,kk8b,eQAh,kjTj,kkjx",
                    "8f87": "n3iP,n2Yp,n3/P,n3Fp,kjNH,kkjx,kj4H,kjCx,or0z,kjlF,gbpN,gbXr,kjlF,gc6H,kk2F,orJF,gcEr,kk2F,ePTb,9k81,9l0h,6AaH,6Bpx,aIt3,3R09,drJj,dsMV",
                    6332: "n3db,oqX1,lH3j,kjlF,gbvj,gbB1,hzFh,iXDV,lHGH,kjI9,lI6P,n3Wh,gc13,iYqx,orDX,hAb1,drOX,dsHh,aIVb,aI11,7Y3H,7Zix,5cEb,3QQV,3QWx,5cV9,dsf9",
                    "81ca": "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,cFiL,3Rl5,bc91,bcVp,5kax,9Jdv,9Jpr,5kWV,fE6j,iA5F,izPx,fDQh,fE6p,fDE9,izDv,izln,fDm7,fDEf,lvwJ,lvUT,orU7,orw3,lvwP",
                    "5fd1": "orZZ,oqRT,e8en,orpZ,lvqD,h4vR,6NIj,9JvD,6Nqb,5kEN,3Rl5,3QSX,5j+B,bbZ5,8glZ,bcfd,5jCr,9Izj",
                    "775a": "hzoj,hzKV,ds3P,drJp,3QQP,7YH9,n3u9,n4b9,or+x,lHXz,5dfF,5cV3,5dC9,9lbr,9kFN,dskH,dsSx,hAxr,hz/N,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94e8": "gbpH,or0F,kjwP,kjg1,iXJr,orE1,iYqx,hz/H,hAmh,gbAX,gbRV,aIhP,aHRN,c4TP,c4m9,5cPr,5dwx,6ACP,3QFF,gbGF,5d9X,hAb1",
                    "7a1e": "orbP,lGZN,3QFz,n37F,7YMH,3QQV,3RDr,7Z1F,n3KX,3Rh1,iXP3,iYkV,hziH,hzKV,9jYH,ePI1,c4aP,dr+h,aJ4r,aIhV,n3/P,eQFV,eQ89,n3u9,n3/V",
                    7615: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QQP,iXDV,iXUN,eQdN,ePYV,c4rH,c4aV,7YvP,7YMN,c4CX,c4Zx,9lbx,5dfF,3Rbp,3R5N,3RDr,9kR1,eQoX,eQFV,iYkV,iY41,c3KH,gbGF,kj4H,hzop",
                    9880: "orbP,n2Yp,5cnp,3QoN,hzFb,3QLh,hzoj,hzQx,9kA3,iXP9,iYkV,9l5V,3RDr,6Beh,3R03,7YY1,eQp1,n3Wb,iY41,n3u3,n45x",
                    "86a7": "oqWX,5ct1,5chN,6ACP,5ct1,5cPr,9kjh,3QWr,6ATN,gc6N,3Rsb,gcth,gcEr,lHS1,n3L1,gbXr,lHS1,iXyb,dr+h,drDN,iXbN,iXyh",
                    "870d": "5csX,oqX1,5chH,6Axh,7Yqh,aIEj,5cJV,5dwr,9kWF,5c+H,3Rbp,5da1,gci1,gc6H,gcth,gbXr,lHS1,n3L1,gcEr,lHS1,c4m3,c4TV,dr+b,iXyh,iXbN,drDN,dr+h",
                    "87a8": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,hAxr,hzQx,hAgz,9kWF,7YY1,9kLp,7YMN,9kLj,hA5p,7Z7b,9kWF,3Rsb,5dqV,dsMV,dsf9,3R09,lHvr,lIcx,orsH,kjNN,kk8b,orPh,dr+b,iXyh,iXbN,drDN,dr+h",
                    8821: "orhr,lHkh,lHS1,n3iP,n3QF,kjTp,kj4H,kkjx,kjCr,hzFh,hzop,iXJr,gccp,c4xp,aIyN,aIt9,c3Qj,c4gx,gccp,iYfb,gci1,c4TV,c4Zx,ePHX,ePYV,hzW9,3QFz,aI6F,3QoH,3QWx,5cPx,3R5H,3RDx,5dwx,aIPz,3RmF,6BjP,9l5V,9kLp,6AZp,6BjV,9koP,6ACV,6Agp,9k2p,9koV",
                    "7b4c": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,drDH,drP1,gbXx,hzW9,gc6N,dsSx,c3/z,c4IF,7Z7b,7Yf1,3QoH,3RDx,c4m3,3R09",
                    "7c16": "kj4H,or0F,n3or,n321,n45r,n3L1,n3Qz,kkdV,kjNH,orJF,n37z,kjwV,6Axb,hzFh,9kdz,7Yf1,7YBr,9koV,5cV3,5cnp,hzop,ePNz,gbB1,gbXr,ePYV,c3Qj,c4m9,hArP,gccp,eQjp,5d4p,3R5N,dsSr,dsqp,3RxP,dsMV",
                    "824b": "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,3RDr,3QWx,3RxP,aI+V,aIt9,3R09,aIEj,3Rbp,3Rmz,aIPF,dskH,c4xp,dsw1,kjZ1,n3Wh,n3zN,hArP,hzW9",
                    "7cd7": "3QFz,or0F,3QWr,3R09,7YY1,aIK1,aI+P,aIVh,9kA3,9lbx,7YXX,3RxV,3RDx,c45b,aIhV,drOX,7Y3N,gbXr,gbpN,gcyP,gc6N,iXUH,iYkV,lHvr,iXyh,lGZH,iXn1,lHMj,orJF,lHGH,dskN,dsMV,lI6V,lHGN",
                    "914f": "n3or,n2SN,c4aP,c45h,n3dh,n31X,c3W1,aHXp,7YvP,7Y9p,5dwr,3RDx,3Rbp,5c+N,kjNN,6B2X,orE1,9kWz,7Z7h,9l5V,hArV,eQ89,iXJr,5cPx,5chN,iXbN,iXJx",
                    "8db8": "os43,oqLN,orjN,lvkD,iz9l,h3Lz,h3zx,lvkx,lvUT,izVD,h4BN,h4vR,izDv,bcld,3R93,3RJ9,3R8Z,6MSb,9IRr,6MS5,3QAP,3QoN,8gK1,8gm3,e8Cr,bcDh,bbT9,e7Sp,e8Cx",
                    "8e2f": "6MG3,iz3p,8g3R,5jID,5jCx,e7Gh,5jID,e82l,e7Sp,fDKf,fDm7,lvkx,lvIR,orjN,mYcd,mYo9,orI5,lvwJ,k0j3,9J7z,3QSX,5kyL,9J7z,3Rx1,orU7,os49,iA5F,h4NP,fE6p,e8UF,8gW9,9JBz,oqRN,iyTn,iz9l,or7R,oqRT",
                    "89da": "iXbH,or0F,lH8X,lHpV,hzzF,3QFF,3QQP,hzKV,hzop,5cnp,3QoN,9koP,9k2p,drJj,ds3V,3QWr,5cV9,n3u9,orUV,lHXz,gcnF,3RJ9,5dlb,6B8F,5da1,5d4p,lHMp",
                    "9f8c": "hzFb,or6h,hziH,hzQx,lH8X,hzu1,lHvr,lHkh,iXUH,iYkV,n3/V,n3zN,6ATN,3QWx,3RDr,3R5N,7YSj,7ZcV,aIPz,3RmF,eQAb,c4TV,gccj,gcyV,gchX,dsqp,dsHh,ePNz,drUF,aHXp,aIhP,drUF,6AIr,ds9x,7YBr,5chN,drDN",
                    "9c95": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3R03,hzW9,hArV,5dqV,3Rsh,5dfF,hAgz,6B8F,6AZj,hA5p,n3Qz,hAb1,n3u3,n45x,9koP,hzKV,hzop,9k2p,9koV",
                    "9cca": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,3QLb,6AIx,lHvx,lI6V,hArV,hzQx,orsH,n3Fp,6B2X,eQp1,eQAb,6Beh,aIyH,aJ4x,3R5H,eQdN,eQLx,5dwx,3RxV,5dlh,9kjb,hzFh,hziN,9jYN,9kjh",
                    "9ab0": "luSx,lv2F,h3RF,fDm1,h4dJ,h3zx,fCO1,h3Fx,oqRT,ordX,h41H,bbH1,bc3b,8g3R,8fHT,5jUz,3QMR,5k4H,e82r,e7Gn,3QuT,3QYN,3R2Z,cFAP,e8Oz,e8kz,bcld,3RD3,3RJ9,h4TP,h4NP,izVD,orU7,orB/,k0o/,izxz",
                    "9b08": "n3iP,n321,kjg1,hzop,hzKV,iXyh,kj4H,kjCx,n3zH,n3Fp,orJF,kjNH,kjZ1,lI6V,iYqr,hAgF,hz/N,gc13,aIch,7Y9p,7Y3N,c4Zr,c3KN,ePHX,eQAh,ePYP,gbRV,gccj,eQjp,c4xj,9kWF,7ZcV,7Zix,5dlb,3Rsh,3QWx,5cJV,9koV,9kLp,6AZp,5c+N,5cV9",
                    "9f3e": "or0z,n321,n3ox,eQ2x,ePI1,n321,kjCr,kjg1,hztX,hzQx,aIt3,aHXp,7Yqb,dr+h,6AaH,6ATN,6AlX,5ct1,3Qup,6AIr,3QWx,lHXz,3RmF,lI6P,lHMp,dsSr,dskN,drJj,dsf9,7YH9,7Y9p,drJp",
                    "5b6c": "orUP,oqRp,orsH,hzzF,gbvp,gbpN,ePHX,aHXp,5cJV,3QoH,aIhV,ds3V,drDH,ds9x,eQ83,eQAh,aIK1,5da1,3Rbp,5c+N,aJ4r,aInx,kjI3,gc19,kjTj,iY41,hAmh,hArV",
                    "4f7e": "orhr,gbvp,iXsz,3QFF,3QWr,6ATN,hz/N,hAxx,iYw9,hAxr,3RDx,5dlh,9lbr,9kFN,dskH,dsSx,kkp3,kkjx,orJF,oryj,hzQx",
                    "8bb7": "luYt,oqRT,h3zr,h3Lz,5jOz,8fZR,3QYN,k06T,k0T9,5kWV,3RD3,5kKT,9JBt,e8wB,8gfZ,orH/,e8wB",
                    "90e2": "fDyd,fCO1,bbH1,bcfd,6N8d,5jCx,fD9/,6MM5,9Jpr,8gK7,8gQ3,9JHF,e8UF,h4HT,k0T9,os49,orI5,3Rl5,oqRN,orpZ,k0cZ,j/ET,oqRT",
                    "586c": "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,n45r,n3iV,6ACV,3QFF,9kFH,5cPx,5dwr,9l0h,5c+H,3Rbp,5da1,dsw1,gc13,gcyV,lHRX,iXUN,dsMP,iYkV,iXP9,dsf9,dsMV",
                    "83b4": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,dsf3,aIt9,6Axh,6ArF,6B2X,aIt9,3Rmz,3Rsh,5dqV,c4TV,c3Qp,3Qup,hzzz,ePNF,eQuF,hAgF,hzzF",
                    "77a2": "n45r,n2SN,oryj,lHMp,lHpP,orbV,hzQr,kjCx,kjNH,hz/N,c4TP,eQLx,ePCp,c3KN,9kQX,9kjh,6Axb,6B31,kjlz,kk2F,hAgF,hzzF,kjlF,c45b,c4D1,3Rh1,3QLh,c45h",
                    6509: "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,orUP,orhx,hAaX,orE1,hArP,hAgF,kk2z,kkdV,kjI3,kjTp,hA5j,hzW9,hzQr,lHvx,lIcx,hAxx,dsf3,dsSx,3QWr,ds9x,5dwr,5cV9,eQoX,5da1,aIcb,eQ89,aI+P,aIt9,7ZcP,7YH9",
                    5583: "kkjr,kjwV,gccj,oryp,c4rH,dsf9,dsBz,c4D1,aInr,aIVh,7Z7b,7YBx,5dfz,3Rsh,5dqV,gcyV,gbRV,3QQV,aIEj,3Rbp,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "5c96": "6MzZ,pW9z,5kWP,5kaD,mY67,mYSp,k0MZ,e8Cx,8gfZ,8gPZ,h4pL,izDv,j/WL,6MM5,6Mo1,j/yN",
                    7325: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,hA5j,n3Fp,kjCr,kk8h,dsSr,dr+h,ds9r,3QWx,3R09,5d4p,c4xj,aIEp,6B8F,3RxV,3RDx,7Z1z,aI+V,n3or,n3u9,n3Wh,hAmh,hzQx,n3ox",
                    "60ec": "3QzX,oqX1,5dwr,5cPx,n3ox,n45x,iXUH,iYkV,eQjj,gc6N,gctb,eQuF,dsf3,dsSx,lHRX,dsw1,7YH9,7ZcP,dsBF,iXsz,gbMh,drDH,iXbN",
                    "6d4d": "luSx,oqLN,fCU1,iyNh,3QuN,cEEF,3RCZ,8gK7,5kQJ,5k4H,cF6P,cFAJ,cEQH,h4TP,orB/,h3XB,h4BH,h4dJ",
                    "701a": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,aIhP,3QQV,7Ykz,7YH9,ds9r,dr+h,orbP,gbRV,kjCr,kjrh,iXUH,n3QF,orJF,iYqr,n3QF,gctb,gcEx,5dwx,3RxV,5dlh,5c+H,3Rbp,5da1,gci1,gc6N,c4xj,dskN,9kFH,dsw1,7Z1z,dsSx,dsHb,c4TV,aIcb,gbMh,gbXx,aInx,aIch",
                    "5a05": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,c4m3,ePYV,eQLr,c4Oh,lHvr,lI6V,3R5H,lHGN,3RDr,3QQV,lHXz,3RmF",
                    "7ed4": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,5ksF,3Rl5,3Rr1,6NCj,8gQ3,8gm3,bcxl,bc91,bcPj,e8Ix,e8et,k0u/,e8UF,k06N,k0T9,orBV,k0o/,e82r",
                    6222: "orJz,7Z1F,3RxV,5dwx,eQLr,dsSx,3R09,hzQr,5cPx,7YeX,hzu1,9kur,6AaN,c3VX,c4gx,eQ2r,ePI1,hAxr,hziN,n3/P,lIcx,n31X,n3ox,kjCx,kjg1,n321",
                    "6c06": "orhr,n2Yp,lHRX,n3zN,n3Wb,lHXF,kjI3,kkdV,hzoj,iXJx,ds9r,c3KN,eQFP,eQ89,hArP,gcth,gc6H,hzW9,kjTj,eQjp,eQuz,kk2F,9l5P,9kFN,5dwr,3RDx,3QLh,5cyF,n37F,c4TP,6BjV,6ATN,c4rN,c4TV",
                    "98d3": "bc35,h3Lz,izlh,9Izj,cFGP,cF6P,cFAJ,or+3,orB/,cFcL,fE0d,fDEf,izDp,iz/z,lv+J,lvCL,8gPZ,bcJn,bcxf,9Jdv,5kWP,3RJ9,3Rr1,5ksL,8gfZ,orpZ,oqRT,5jID,3QoN",
                    "615d": "lI6P,lHeF,n3KX,kjZ1,kjwP,n3iV,dr+b,iXP9,hAxr,hzu1,or+r,oqRp,aHXp,aJ4x,6Bpr,7ZcV,6B8z,5dfF,3Rh1,3QQV,5cEh,7Yqh,6ATH,7YH9,5chH,7Y9p,eQ2r,c4gx,c4IF,eQuF,eQ2x",
                    "77b0": "h3Rz,h3zx,cEmr,cEEF,mY05,mYof,izrt,izDp,izfr,3R8Z,izxz,3ReV,9JBz,iz/z,izPr,iA5F,orZZ,fDEf,e8wv,bcxl,5kWV,5k4B,5kaD,8gr/,bc91,bclj,e8kt,e88n,5kax,izln,mXxX,mXQ9,6MG9,6Mo1,mXy1",
                    "94fd": "ePwH,oqX1,kjrb,kjg1,iYqr,iXJx,n3Wb,lI6V,orDX,iY41,c4IF,6Beh,3RDx,7Zix,7YXX,9kLp,6AZj,5d4p,5cV9,6AIx,c4gx,eQ83,c4rN,gbvj,gbMh,gbAX,3QA1,3QFF,5cEh,9koP,7Yqh,aHRH,aIch",
                    "76a4": "pW9t,luMx,6Mo1,6MM5,lv8B,luMx,e7Yf,e7Ah,h4pF,cEWD,cFGP,h4BN,8gfT,8gQ3,bcxf,5kyR,orH/,cFiR,mY61,pX5T,k0iZ,lvqJ,mYMd,k0B1,izlh,iA5F,bcPd,5kQP,5kgJ,bcfd,bcPj",
                    "763e": "n3Fj,orsN,n45r,n321,6Am1,3QoN,3QLb,kjrh,kjCx,gbXx,ePYV,ds9x,7YBx,9koV,9kFH,9l5V,eQFV,eQdN,lHRX,hz/N,iX+j,iYkV,eQp1,c4TP,c4rN,6B8z,7YY1,5dwr,6BjV,5dlb,3Rsh,3Rh1,5d4p,6AZp,5cV3,3QWx,ePHX,c3KN,kj4H,hzop",
                    9765: "or+r,oqX1,6Am1,3QoN,c4m3,3R09,3RgX,c4D1,6AO3,6B31,9kQX,9kA9,eQdH,c4rN,ePYP,eQAh,gbGz,gbMh,hzQx,kjNN,n3zN,lI1b,n3QF,kjlz,kkjx,iY3X,hAgF,gcyV,gcEx,3QLb,c45h,c4TV,3RxV,3QLh",
                    "506c": "iXbH,or0F,3QzX,kjg1,9koP,6Axh,9kA3,6AO9,5c+N,5dlh,6Beh,9l5P,6Bpx,7YXX,9kLp,dsvX,c4IF,c4Oh,dsMV,lI6V,lHvx,iXyb,orn9,eQuz,iXJx,kk2z,iY9F,dsf9,c4aV,c45h,gbRP,gbXx,kjTp,lHMp",
                    "8c14": "lv2z,oqXP,h4HN,h4jP,e88h,e8UF,e8Cr,9J7z,9JBz,6NCj,3Rr1,3Rl5,5ksL,9IXh,5jUF,h3RF,h3zx,mY61,mYof,k0o/,k06T,mY67,mYAb,k0B1,k0T9,mYSp,mYAh",
                    "53b6": "q9vb,7gej,7hyH,5zHl,fSxR",
                    "82b4": "iXDP,orbV,oryj,iX+p,lGZH,lIcx,hzFb,c3Qp,c3KN,ePNz,eQFV,5dqV,3Rsh,3RmF,5da1,dsvX,aIK1,7YMN,5cEh,3QA1,3QoN,7Y9j,7Yf1,9kjh,c4gx,ds9x",
                    "840f": "mYSj,mXy1,pWPF,k0o/,k00R,pWrH,cEmr,iz3p,h3Rz,h4vR,e8kz,cEWx,bbN3,5jOz,5kKT,bcJn,bclj,8glZ,8gK7,8fNJ,8g9T",
                    "5c22": "pWDD,e8et,bc97,6MG9,5jID,5jCx,8gW3,5kWV,5kyR,6Nef,e8qv,iyNb,iA5F",
                    "549b": "lHRX,oryp,hzQr,kjI9,kkjx,hArV,eQ2r,eQLx,eQoX,5da1,3Rbp,3R5N,5cV9,lGZH,lHkh,c45h,c3KN,lGZN",
                    "55f5": "lvkx,or7R,h3Xv,h47D,6MY7,3QMR,6MY1,3R93,3RJ9,8gK1,6NCj,8gW9,iA5F,izxz,6N8j,izPr,8gE1,fDyd,fE6p,cFGP,cF6P,lvIL,izVD,k0AX,os49,orpZ,mXxX,mXQ9,cEEF,cEmx,mXy1",
                    "5d3d": "n2Yj,kjap,kkdV,n3/V,kjI3,orn9,c4m3,hzW9,ePHX,eQAh,5chH,7Y9p,9kjb,5cEh,3QQV,3RmF,6B8F,6Bpr,7ZcV,9kA3,6ATN,c3VX,hzu1,hAmh,c4Oh,c3W1",
                    9993: "gbpH,oqX1,kjaj,kjrh,iXyh,hzzF,gbAX,5ct1,9koV,3QWr,eQ2x,eQjp,5d4p,3R5N,6AIr,6AZp,aIEj,aInx,hzKP,hAb1,lHRX,lHpV,hA5j,oryp,orhr,hzQx,gcnz,orUV,iYw3,iYfh,iYqr,7Zix,3RmF,dsHb,7Z7h,3RJ9",
                    "95fe": "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,3Quj,kjap,7Z1z,dsBF,dr+h,7Yqh,7Z1F,gchX,kjZ1,kjwV,gbRV,gci1",
                    "6dae": "luYt,oqRT,izfl,izJB,mYul,mY0b,bc3b,6MG9,cEEz,3QuT,iyNb,fCU7,3R8Z,fDyj,5kax,cEWD,cFiR,5kyR,6Nef,5kKN,3RD3,5kWV,os49,9Jvx,k0H7",
                    9004: "lH8X,oqRp,hziH,hzu1,6Am1,3QoN,6AlX,3QLh,3RDx,eQjj,6AZp,dsHb,ds9x,9lbr,9koV,aInx,eQLr,eQAh,hz/N,iXP9,orhr,iXyh,lHvr,lI1h,hA5p,ePYV,ePTh",
                    "5ae3": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,n3/P,n3u9,gchX,n3L1,gbXr,gcEx,kjNH,gc6N,iYkP,iY41,eQjj,aIt9,aI+V,6BjV,3RmF,3Rh1,5d4p,7YBr,7Z1F,dsHb,dsqp",
                    "7f23": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,6MnX,8fZR,9J1n,5j+B,6NIj,9JvD,lvOH,3Rr1,orU1,mYAh,mYid,orpZ,3R8Z,lvwP,cEWx,cFAP,iz/z,izln,fE6j,fDgb,lveB,lw4V",
                    "677c": "3QFz,or0F,5c+H,3Rbp,5da1,gci1,iX+j,gcnF,hAaX,lI6V,lHvx,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,gbXr,gcEx,eQLx,dsMV",
                    "6a18": "3QFz,or0F,5dwr,5cPx,c4CX,5da1,9kA3,9l5V,hzQr,kjI9,kkjx,hArV,n3/P,lI1h,kjYX,orE1,n3u3,lHGN,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,dskH,hz/N,hAmh,dsHh,dskN",
                    "664f": "lvOH,lv2F,fDs7,h4dJ,e8Uz,fE6p,fCO1,e7Ah,cEQB,8fTV,3Rr1,3RD3,3QuN,3QGV,5kaD,8gr/,9JjB,bcxl,bbAX,bcVp,or1P,orO1,izPx,iz3p,or1V",
                    "80e9": "hzKP,hzop,c3Qj,c4aV,3QoH,5cnp,n2Yp,n3iV,5cJV,3QLh,orDX,3Rh1,kkdP,kjZ1,eQ2r,eQLx,7ZcP,c4D1",
                    "712f": "or0z,7YkF,3QoN,5cJP,7Yqh,dsvX,3Rh1,9kur,9lbx,gcyP,gc19,orDX,iY41,lHRX,lIcx,hzzz,kjwV,ePCj,iXhp,dsf3,iXP9,iYkV,dsMV,dsf9",
                    7856: "n3iP,n2Yp,ePwH,n37F,dsSr,ds9x,hArP,gcth,gc6H,hzW9,kjI3,kkdV,orDX,c4D1,3QWx,3RDr,c4D1,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    9490: "gbpH,or0F,kjCr,kjg1,iXUH,iX+p,orUV,hArP,c4xp,c4rN,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,3R5H,3Rbp,aJ4x",
                    "953e": "ePwH,oqX1,kjrb,kjap,gbvj,gbGF,c45b,c3KN,6Axb,3QA1,gbB1,orPb,lHpV,iYfb,lI6V,kjTj,iY41,iXP3,kjCx,hArP,hzKV,ePTb,eQLx,hA5j,c4rN,7YH9,3QLh,3R03,3R5N,9l0h,c4Oh,c4rN,9kFH,5dfF,3RxV,3RDx",
                    "9e5b": "hzFb,lHkh,hzoj,hzW9,lHB9,lH3p,5cnp,3QoN,7YH3,7YkF,9l0b,9kFN,aI6z,aIt9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dsqp,lHMp,orPh,lHMj,lI6V,gcyV,eQAh,iY9z,hAgF,5cyz,5cV9,dsf9,drUF,5cyF",
                    "88c9": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,aIhP,drUF,ePTh,iYkP,iXP9,eQ83,eQFV,n3/V,n3u9,3R09,3R5N,6B31,c4Zr,9l0h,3RDr,c4D1,dsw1",
                    "4ee8": "orbP,iXhp,iXbN,3QFz,kjlF,5dwr,5cJV,ds3P,dsMV,lIcr,lHpV",
                    5919: "k0oV,j/QV,bbMZ,k00X,h41B,h4jP,cF0J,6MG9,e7Yf,bc97,6NIj,3RJ9,3RD3,6Nqh,orO1,oqRT,5jID,3QoN",
                    9667: "k0H1,k06T,5ksF,cFcL,5jUz,5kWV,9Jvx,9IRr,bbH1,9Izj,9IFp,bbZ5,fDa5,iyZj,lv8B,or7R,oqLN,3QoN,orjN,orU7,fDWn,fDm7,orjT",
                    "578c": "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,iYfb,iXUN,5dlb,3RxV,5dwx,n45x,n3ox,3QWx,eQAb,9l0h,9kFN,eQdN,eQAh",
                    "833c": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,eQoX,ePTh,5d9X,3RmF,3Rsh,5dqV,hArV,hzop,3Qup,c4xj,7YSp,7YvV,c4aV,c4xp",
                    "84d3": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,c3KH,hzzF,3QzX,ePI1,aJ4r,aIyN,aIch,dsf3,c4rN,hz/H,gccp,eQFP,ePYV,c4CX,dsBF,3QWr,7YBx,7Z7h,3Rsh,3QWx",
                    "63c4": "oqWX,5ct1,3Qup,5chN,drUz,aHRN,gbMb,n3Fp,oryp,gcEr,n3Fp,eQFP,3RxV,3RmF,c4Iz,6B8F,c4aP,c4xp,9kLj,9koV,5cV3,3R5N,5d4p,eQjp,ePYV,6ACV,3QFF,iXbH,iXyh,hAgz,hzW9",
                    5514: "q2Cz,q1ON,eXsl,q269,eYgn,eXm1,eY3f,lhkR,lgJX,mQdb,mQDd,bMCJ,bMcN,mQdh,bMW9,bNqB,5s95,5rEL,bMWf",
                    "56d7": "q1ib,q2Jd,5smd,5qXh,q1ih",
                    "72b4": "n2SH,iXyh,6Axh,3QA1,5cnp,gbMb,c3KN,hziH,hzop,orbV,n3/P,n3u9,eQ2r,eQLx,3RgX,n3L1",
                    "5fed": "3QzX,oqX1,iX+j,3Rbp,iXDP,iYqx,gbMb,iXsF,drDH,iXbN,c4TP,eQjp,n3zH,kjTp",
                    "6ca9": "kjfX,n2Yp,hzFb,hAxx,5dwx,3RxV,3Rsh,5dfF,3QQP,9kFN,orsN,kjCr,n3iV,hziH,ePCp,c3/z,3Qup,aIPz,dsw1",
                    "6f24": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QLb,3QWx,6B31,aIVh,aIcb,aJ4x,dskH,7YMN,5dfF,3RxV,3RDx,iYfb,eQLx,gccj,iY41,orJz,eQuF,lHRX,lIcx,lHkb,lHGN,eQ83,orn9,iXJr,ePTh,hA5j,iXUN",
                    "5c59": "j/EN,k0N3,or+3,oqRT,5jID,3QoN,3QGP,h3RF,h47D,e88n,cEQH,bc97,8g9T,6MSb,8fZR,5kyL,3Rr1,3Rx7,5kQP,fE0j,fDyd,fE6p,8glZ,cF6P,cFoN,8gE1,8gm3",
                    "9a93": "n2SH,n37F,ePNF,kjaj,drJp,drP1,dr+h,5cEh,3QFF,3QA1,5cnp,aI6z,9jYN,lHvr,3QWx,orn3,iXyh,n3KX,oryp,lHB3,lIcx,gcyP,gc19,aIt3,aI+V,5dwr,5cV9,lHRX,5da1",
                    "73e5": "or7L,oqLN,os43,orjT,3Rx1,orU7,6NIj,5ksL,5kmP,5k4H,orpT,5kgJ,izVx,izrt,cF0D,cFuT,h3zr,h3XB,6MnX,6MA3,8fZR,oqXJ,6MA3",
                    6867: "3QFz,or0F,3RxP,7Z7h,5dlb,5cPx,aIEp,c4xp,c4TP,c4m9,eQLr,lHS1,n3L1,eQ2r,lHS1,eQuz,eQjp,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN",
                    "8f6b": "oqWX,gbpN,gbMh,3QFz,hzzF,3QQP,c4D1,lHS1,lHB3,lIcx,5dwx,3RxV,3Rsh,5dfF,c3KH,c4aV,lHpP,lGZN,eQ2r,hzW9",
                    "89cf": "hztX,oqX1,or6b,hzFh,n2SH,n3ox,kjCr,kj4N,hziH,hzQx,9kdz,gbGF,9jYH,9kux,c4aP,c3Qp,5cnj,ePCp,ePYV,6ACV,5cEh,6ArF,3QLb,3QQV,5cV9,9kR1,iY41,6Bpr,3RDx,3Rsh,5dfF,9kWF,aIVb,n3Wh,n3zN,aIyN",
                    8160: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QWr,3R09,7YY1,aIK1,aIyH,aIVh,7Zir,7YBx,3RDr,3RxV,7YY1,aJ4r,gci1,aInx,orDX,gci1,lHvr,lI6V,iYfb,iXP9,gbXr,gcEx",
                    7949: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ePYV,5dwr,5cJV,orDX,5da1,gchX,gcEx,5cV3,kjI9",
                    7704: "iz3j,iyNh,cEmr,cEEF,5kmJ,3Re/,3Rl5,6Nwn,izVD,izDv,k06N,cEWD,cFuT,orBV,cFcL,ordR,os49,oqLH,or1V,6MG9,6Mo1,oqLN",
                    "94d0": "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aInr,aHRN,6ACP,3QFF,5cyF,gbGF,lI1b,lHB9,n45r,lIcx,c4m9,eQoX,aIEp,aJ4x,6Bpx,3Rsh,3RmF,5da1,dsMP,dsw1,hzW3,hAxx,orDX,hAb1",
                    "956f": "gbpH,or0F,kjwP,kjg1,kjTj,n3Fp,n3Qz,kk2F,gc13,iX+p,hz/H,hAxx,5dwx,3RxV,3Rsh,7Z1z,6Beh,6AO9,eQjj,6AZp,gbAX,gbMh,c4aP,c3KN,6ACP,3QFF,gbGF,n3u3,n3/V,kkdV,kjI9,n3u9,dsBz,aIPF,aIt9,dsf9,dsBF",
                    "75e6": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gbGz,c3KN,kj4H,hzop,hArP,hzKV,aIhP,hzW9,aJ4r,aIch,aIJX,eQAh,ePYV,7YBr,7Z7h,5dlh,5cPx,7YBx",
                    8025: "3QFz,or0F,3R03,hzW9,hAxx,5dwx,3RxV,5dlh,orJz,hAgF,iYfb,lIcx,iX+j,kjNN,lHB9,lGZH,lHpV,hzKP,hzop,drDH,ds3V,6AaH,c3W1,9koP,aIch,9l0b,eQAh,eQjp,9kLp,9l0h",
                    "98a2": "lvkx,luYz,os43,orB/,k0AX,orU7,fDQb,8gE1,3R93,6MY1,5kgJ,5jIx,6MA3,3QGP,5j+B,9ILl,9Jdp,k0o/,k0N3,9JBz,3RJ3,8gE1,fCNX,fDyj,h3Xv,fDa5,oqXJ,orjT,izln,iyZj,oqXP,9IXh,cEWD,cEyz,9Izj,9IXn",
                    "86f1": "oqWX,5ct1,5chN,6Axb,5ct1,9kjb,5cJV,dsSr,ds9x,hArP,gcth,kjI3,kkdV,gc6H,hzW9,orDX,c4D1,3QWx,3RDr,c4D1,dr+b,iXyh,iXbN,drDN,dr+h",
                    "877d": "pW9t,5jOz,5jCx,6MS5,5jOz,8fZL,5k4H,8gK1,8gm3,bcVj,h4vR,bc97,pWVL,h4vR,mY61,mYSp,k0MZ,k0cZ,h47x,h4TV,bcld,bcJn,5kKT,5kmP,bclj,j/WL,e7Yl,e7Ah,j/yN,j/WR",
                    "87b3": "8fNJ,pW9z,8g3R,6Mo1,9ILf,6MSb,5kWP,5k4H,9IXh,9JvD,e8qp,5ksL,izfl,lvkD,lw4V,k0T9,iz/z,pWVL,lvIR,pXhP,mYGn,mYid,pWDJ,e8Cr,izPx,izrt,e8et,e8Cx,e7Yf,lv8B,luMx,e7Ah,e7Yl",
                    "7b47": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,gbvj,gbRV,6Arz,gbGF,7YBr,5chN,3Rbj,gccp,gcyV,eQFV,c4IF,7Zix,6Bpx,5dqV,5dlh,7YY1",
                    "7b9c": "iXbH,or6h,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,gc6H,hzW9,c4TP,dsSx,eQLx,ePCp,drJp,c3KN,c45b,aI6F,9k2p,9jYN,9kQX,9kjh,9lbr,9l5V,c4D1,3R03,9kA9,3QoH,3RDx,lH8X,lHB9",
                    "81ec": "lHpP,orn9,iYfb,iXn1,gbAX,gcth,3R03,c4m9,3RDr,3RxV,5dfF,7YSp,7YvP,5cyF,3Qup,3QoN,9lbr,9jYN,lH8X,drP1,dsHh,lI1h,lH91",
                    "7c7c": "3QFz,or0F,drOX,7Y3N,aIhP,c45h,gbpH,gbXx,iXmX,lGZN,iXyb,lHvx,hz/H,5c+N,5dwx,hAxx,5dfz,orJF",
                    "7e47": "orhr,n2SN,or+r,n3zN,n3Qz,gc6N,gcth,c4xj,hArV,c4Zr,c4rN,aJ4r,dsMV,6Bpr,7ZcV,c4Iz,5dfF,3Rh1,7YSj,6ATN,7YBr,5cPx,5chN,7Y3N,aInr,aHRN,ePCj,ePYV,drDH,gbvp,5cyz,ePNF,lHvr,iXDV,iXsz,kjg1,kj4H,iXhp",
                    "918c": "orjN,oqLN,or7L,cEKB,cEQH,8fHN,8g3X,bbH1,cEyz,oqXP,lv+J,lvwP,8gDX,cFGV,6NIj,3RJ9,3Rx7,5kEN,e8Cx,bcld,bcxl,e8kt,3R93,3Re/,5kyR,k06N,5kaD,5jCx,j/yN,k06T,iz/t,or+3,orw3,izxz,iz/z",
                    "8dc6": "pW/H,izrt,iz/z,h4TP,k0N3,e7Sj,e82r,e7Gh,5jID,5jCx,8g3R,5jID,iz3j,6MG9,oqRN,or7R,iz9l,iyTn,oqRT,e8Ot,5kQP,5kmP,e8kz,e8Oz",
                    "8e74": "lHGH,orn9,kjCr,kjZ1,6Arz,hzzF,7Yqb,5cnp,5chN,drJj,5cnp,ds3P,drUF,9kur,7YvV,9kQX,aIEp,3Rbj,6B8F,9l0h,orPh,kkjr,lIcx,hAaX,hAD9,dsMP,5dqV,3RDx,3RJ9,6Bv9,5cV3,6ATN,dskN,n2Yj,n3dh,hzFh,hzop,n2Yp,hzW3,dsf9,dsqp,hA5p,hzW9",
                    9701: "orUP,oqRp,hzW3,orn9,hAaX,iX+p,iY9z,hAmh,hAxr,lIcx,lGZN,hziN,hzzz,iXn1,iXyb,hzKV,dsf3,eQ89,drDH,dsSx,c3/z,6B8F,6Bpx,6AaH,6ArF,aIK1,dsHh,3Rbj,6AZp,3QFz,3QLh,5cJV,6ACV",
                    "938f": "lHez,n321,kjaj,iXn1,iXyb,ePCp,n45r,n3ox,orDX,n3L1,n3zH,kjI9,kkdV,lI1h,iYfb,eQAh,eQLx,gcEx,iY3X,eQp1,iXUH,hz/N,eQ2x,9jYH,9k2p,dsf9,9l5V,9lbx,9kQX,9kjh,3QoH,3RDx,5cEb,3QLh,3RgX,5da1,6AlX,6Beh,9kA3,3R09",
                    "9cb0": "iXbH,oqX1,lH8X,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,6AIr,6AO9,9kLp,lHMj,3Rbp,lHvr,lHXF,6AO3,lHB9,dsqj,dsf9,hzW3,hA5p,hAaX,hAxx,aJ4x,5da1,5dwr,9kWF,eQuF,9kjb,hzFh,hziN,9jYN,9kjh",
                    "9cd9": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Arz,5chN,3QLb,5cJV,7YBx,n3ox,n45x,orDX,n3QF,3RgX,lHS1,3Rsb,5dqV,c4TV,c4m9,3R09,6BjP,6AO9,9kA3,9l5V,eQdH,eQFV,kkdV,kjNN,hAxr,hzW9,9kjb,hzFh,hziN,9jYN,9kjh",
                    "9b48": "oqWX,lGZN,drDN,dr+h,lHkh,lGZN,drOX,lH91,hziH,hzFh,drJj,6Agp,3QoN,drUz,3QFF,3RDx,5dwx,7Z1z,7Z7h,9l5V,iYkV,iXP9,7YH9,aIcb,9kjh,9kux,aInx,dsMP,dsf9,gc13,gcyV,orDX,iY41,kk2z,n3/V,n3u3,kjTp",
                    "9edc": "iXmX,kjap,kjwP,iXyh,7Ykz,n37F,7Y3H,7YBx,c4aP,c3Qp,c4rH,5c+N,5dwx,c4Zx,lIcr,gcEx,gc6N,lHGN,5dfz,orJF,5cPr,3QWx,3QLb,5cEh,5csX,3QA1,3QoH,5chN,n2SH,gbpN,gbXx,n3ox,n2SN",
                    "4e36": "yMV1,TlXL",
                    "504c": "orbP,iXhp,iXbN,kjlz,iXsF,3QFF,hAaX,9kjh,gbRP,gcEx,orsH,iXUN,iYfb,orPh,lHvr,lIcx,c4m3,c4TV,5dqV,5cV9,c4m9",
                    "8be9": "luYt,oqRT,h3zr,h3Lz,5jOz,5jUF,8g3X,5kax,3R2Z,5kmP,mYij,mXW5,h47x,izfr,bbY/,cF0J,cFAJ,bcxl,izPr,h4HT,mYuf,mYSp,5kWV,3RD3,5kKT",
                    5942: "orhr,ePCp,ePwN,lHpP,lHS1,gbXx,gc13,aIt9,5cyF,3Qup,3QoN,3RDr,3RxV,5dfF,aIt9,aHRH,aJ4x,aI6z,gbGF,gcnF,aIPF",
                    8297: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,hzQr,ePI1,eQjp,9kdz,hAgF,9k7X,9kWF,c4IF,9kWz,5cV9,3QQV,3QFF",
                    "83c1": "n45r,n2SN,oryj,lHMp,lHpP,orbV,dsf3,kjI9,drDH,dsSx,gctb,gbB1,iXhj,iYkV,9kWz,9kdF,6Arz,6B8F,3QFz,c3/F,c4IF,5dfF,3Rh1,3Rbp",
                    "85dc": "n45r,n2SN,oryj,lHMp,lHpP,orbV,kjaj,kjCx,drUz,kjlF,gbAX,drDN,ds9r,gbMh,hziH,hzQx,kk2z,hA5p,iY3X,iYqx,eQLx,dsMV,dsvX,gcth,iYfh,7Y3H,7Yf1,9kjh,c4m9,9kR1,7Z7h,7Zix,7YXX,6AZp,3Rsh,3RxV,3QWr,3R09,9kA9,7Yqb,6AIx,3QA1,3Qup",
                    5452: "q2Cz,q1ON,i5U7,i6Vd,gvLz,8CaX,5rld,5reP,8C+T,5smd,5rY7,6/XZ,q2cJ,oqLH,or3j,dkCz,dkj1,oqLN",
                    "55c9": "lI6P,lHpV,iXJr,iYfh,gcEr,gbRV,oryj,gccp,eQdH,c4aV,c4xp,9kA3,dsw1,9l5P,9koV,7ZcP,aIVh,5dqP,7Z1F,9kLj,5d4p,3R5N,5cV9,3QLb,7YH9,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5cd2": "7YeX,oqX1,3QWr,n3ox,n45x,5dwx,3RxV,3Rsh,5dfF,iXUH,iYfh,iXyb,7Yqh,7Y3N,iXbN,aIVb,gcth,gc6N,aIyN,aIVh",
                    9967: "gbpH,oqX1,kjaj,kjwV,iXDV,hzFh,gbAX,5ct1,7Yqh,9kur,dsqp,eQjp,eQAb,aIPF,5cV9,3QQV,3QLh,5dfz,3Rsh,3RxV,5dwx,gcEx,gc19,hA5p,n3/V,n3ox",
                    6175: "3QzX,oqX1,3QLb,5cJV,7YBx,n3ox,n45x,n3Qz,orE1,3RgX,lHS1,3R03,c4m9,c4TV,5dqV,3Rsh,6AO3,6BjV,9l5P,9kA9,hzW3,hAxx,kjNH,kkdV,eQFV,eQdN,iXsz,gbMh,drDH,iXbN",
                    "6d7c": "kjfX,n2Yp,ePCj,hziN,5cnj,c3/F,3QFz,3QLh,5cPx,7YMN,aIyN,aIEj,gccp,kk8h,kjCx,hzFb,orn9,aIJX,5da1,3RmF,3RDx,5dwx,ePYP,eQFV,aI+V,aIhV,ePYV",
                    "5bee": "orsH,orn9,kkdP,n45x,n2Yp,kj4N,kk2z,kjlF,lHB3,kjI9,ePNF,drJp,drDN,hzzz,gbMh,kjI3,eQuF,dsMV,dsSx,gchX,hAgF,c45b,c4D1,9kA3,5cV9,3QWx,5cJV,5cyz,7YvV,5dfz,7YSp,eQoX,9kR1,9kjh,ePTh,eQp1",
                    "5a55": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,lIcr,lHvx,iXP3,iYkV,dsMV,dsf9,gcEr,gbXx,9l5P,9kR1,3RDr,3Rbp,6AO9,3QQV,aIt3,6AO9,orDX,3Rh1",
                    "7f02": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,izJv,3Rl5,lvkx,lw4V,orvZ,izxz,izVD,orU7,9IXh,9JHF,fE0d,cFAP,cF0J,fDsd,fE0j",
                    6753: "3QFz,or0F,gbAX,aHRN,iXDP,iXbN,ds3P,ePTh,c4Iz,eQp1,5dfz,3Rsh,3RxV,5dwx,kkjx,kjNN,hzW3,oryp",
                    "69a7": "3QzX,oqX1,kjTj,6AZp,6B8z,kk2F,5dwr,5cPx,n3ox,n45x,hAgz,hArV,hzW3,hA5p,dsqj,dsf9,dsMP,dsBF,9kWz,9l5V,9kA3,9kLp,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN",
                    6619: "lvOH,lv2F,fCZZ,fDWn,bcVj,bbB1,5jUz,bcfd,5kKN,5jOz,3Rx1,8gy5,or1P,orO1,izPx,iz3p,or1V",
                    7230: "orPb,n2Yp,iY3X,lI1h,lHvr,iXP9,iXsz,lH91,hArP,hzop,drDH,dsSx,hzQr,ds9x,6Axh,5cyF,3Qup,3QoN,aIhP,aIVh,9l0h,6B31,3QWx,3QQV,9kur,5dfF,3RxV,3RDx",
                    "65d2": "lHez,oqX1,kj4H,kjCx,kjfX,7Yf1,3QoN,5cyz,3QLh,5cJV,ePYV,ePI1,oryj,hzQx,kkjr,kjNN,hAaX,iX+p,gcEr,gc19,dsHb,c4TV,c4m9,gci1,9kFH,6ATN,3QWx,9kQX,3Rh1,9l0b,3Rsh,3RDx,5dwx",
                    7811: "ordR,oqRT,os43,orpZ,orNX,5kEN,3Rl5,5ksL,fDE9,5k4H,h4TP,h4dJ,lvwP,or1P,fCO1,h41B,8g3X,8fNP,h3Lz,h41H",
                    "7f74": "lveB,ordX,orBV,lvCL,k0cT,e8et,9Itn,9JvD,8gPZ,bcDh,e7Ab,e8UF,h4BH,h3RF,3RJ3,5kQP,5ksF,3Rl5,3QYN,5k4H,5jIx,3QoN,oqRN,or+3,lv+P,luSD,oqRT",
                    "951b": "gbpH,or0F,kjwP,kjg1,lIcr,lHB9,gcEr,lHS1,gbXx,eQ83,eQFV,c4CX,hAb1,3Rsb,c4Oh,9kur,9lbx,6ACP,3QFF,gbGF,gbAX,gbMh,c4aP,c3KN,c4rH,6ATN,3QWx,orDX,lHS1",
                    "9e3a": "kj4H,or0F,3QzX,lH91,orhr,3QWx,hz/H,hzzF,c4rH,dsf9,ePYP,9kdF,9l0b,9kFN,5d9X,3RmF,3Rsh,6Bpx,dsSx,dsqp,lHMp,lI6V,gcyV,eQAh,iY9z,hAgF,orJz,lHMp",
                    "7aa6": "n3u3,orhx,iYkP,kkjx,lIcx,lH3p,iXbN,gbAX,iXyh,gchX,gbMh,iY3X,gcth,dsf3,iXP9,c4rH,7YMN,3QFF,3Qup,7Zir,7Y3N,aIVb,c4TV,dsMV,drJp,aInr,c4aV,aI6z,9kjh,7YMH,5da1,3Rsh,3RxV",
                    "524c": "lHGH,lGZN,9kQX,kjZ1,aIhP,7YH9,6AaH,c3/F,or6b,3QLh,5dfz,3Rsh,3RxV,5dwx,or+x,hzoj,hzW9,dsf9,drJp,hzop",
                    "4f65": "pWDD,orpZ,iz3p,h3FD,h3zx,h4vL,h3XB,h4TP,h4NP,izPx,orpZ,e8Ix,cFuT,6N8j,e82l,9J1t,9ILf,e7Mj,5kWP,5jCx",
                    "8c33": "kjfX,n2SN,gbpH,gbvp,5cnp,6AlX,3QoN,3QFz,hzzF,hA5p,5d4p,3R5N,5cV9,3QWr,ds9x,gc6N,gbMb,ePYV,dskH,dr+h,9kjb,9kFN,3RgX,7Z7h,3RJ9,orPb,7Z7h,lIcr,n45x,iY3X,iYqx,orhr,hzQx,lHez,lHMp",
                    "830c": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,aHRH,gbMh,3QFz,drUF,5dqP,5cJV,gccj,5d4p,c4Zr,c45h",
                    "847a": "n45r,n2SN,oryj,lHMp,lHpP,orbV,dsMP,drJp,3Rmz,dsBF,5chH,5dwx,drUz,5cyF,aIPz,aI6F,7Ykz,7Z1F,iXsz,iY9F,gcnF,gbGF,iXsF",
                    "63ad": "or0z,5cyF,3QA1,5cnp,ePYP,aHRN,iXbH,iXDV,lI6P,lHB9,hzQr,hAxx,lHRX,gci1,aInx,aIhV,aJ4r,gci1,6Bpr,9l5V,5dlb,6Beh,5c+H,3Rbp,5da1,aIK1,6AIr,7YH9",
                    "54bb": "orn3,iXyh,3QWr,iXJx,orJz,3RmF,hz/H,hAxx,7YMH,eQp1,eQAb,7Zix,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "564d": "orn3,kjrh,n3KX,oryp,7YBr,lHvx,9lbr,9kA9,dsf3,dsMV,hArP,hzW9,lHB3,lIcx,9kQX,lHS1,3RDr,5dqV,5dfz,3RmF,3R5H,5c+N,5cPr,3QQV,lGZH,lHeF,aI6F,aHRN,lGZN",
                    "5f77": "or6b,n37F,kjap,kj4N,gbpH,gbvp,hzzF,kjwV,3QFz,hzzF,kkjr,kjI9,orDX,lHXF,5dfz,3Rsh,5dqV,gcyV,gccp,5cJP,dsqp,kjTp",
                    "5ee8": "n3zH,orn9,lIcr,lH3p,5cnp,3QoN,3QFz,ePNF,eQ89,5cV9,3QWx,6ACP,gbRV,iXP9,iXyh,gbAX,kjrh,c4m3,c3/F,9kdz,9kA9,7Zir,7YMN,aIVb,aI+V,aIPF,aIK1,9kLj,c4D1,3Rsb,c4Oh,eQAb,dsMV,eQLx,iYqx,iX+p,iY9z,gcnF,dsqp",
                    "723f": "n3db,iXyh,iY9F,drJj,dsBF,dr+b,9kjh,3Qup,orJz,3RmF",
                    "6f2d": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QWr,6ATN,c4rN,3Rmz,c4IF,9kur,9l5V,aIcb,hA5p,iX+p,hAmb,iY9F,gbMb,gcEx,aJ4r,eQuF,orn3,kjI9,kk2z,orJF,lHkb,lIcx",
                    9062: "luYt,oqRT,h3zr,h3Lz,6MA3,3QoN,6MzZ,3QMR,3RJ9,6Nwh,5kQP,6NIp,fE6p,fDKl,fD9/,fDyj,6N8j,5kgJ,6MY7,bcf7,6MM5,cEKv,9IXn,cFiL,bcDh,9JvD,6Nkf,bcPj,lvkx,lvUT,izVx,orU7,orjT,izln,izVD",
                    "5b51": "oqRN,or+3,k0cZ,5kgJ,3QYT,3QSX,5j+B,h4TP,cEmx",
                    "5ddb": "uCWn,kj4N,a0zt,a157,kjCx,uDsd,uDZT,kk8h,a1CZ",
                    "680e": "3QFz,or0F,c4rH,5cEh,5dwr,aIPF,5c+H,3Rbp,5da1,iY41,eQLr,eQ2x,lHvx,orPh,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh",
                    "6aa9": "3QzX,oqX1,7YH3,5cJV,5dqP,7Z1F,9kLj,3R5N,9koP,9lbx,c4Iz,c4rN,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN,n3iP,n45x,oryj,n3Fp,dsMP,lI6V,lHvx,ds9x,dsMV,iXUH,iY9F,gcnF,gc6N,iXUN",
                    "8d3b": "kjlz,7YkF,3QoN,7Ykz,3QQV,9koP,n3iV,n2Yp,9k2p,gcEr,kk8h,hArP,hzW9,orE1,dsf3,5cV9,5dqV,dsMV,dsf9",
                    "80fc": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QWr,6ATN,kjNN,kkjr,kjCx,ds9r,dsSx,kk8b,3Rsh,orUP,lHXF,lHMj,orn9",
                    "71e7": "oqWX,6Am1,3QoN,5cEb,7YkF,3QQP,5cPx,gbXx,gbMh,n3iP,kjCx,hztX,kjrh,ePwH,iXbN,5cPr,3R09,3RDx,7YXX,6B8F,7Z7h,hAmh,kjZ1,lHXz,hz/N,lIcr,lHGN,oryj,n3L1,n3Wb,orUV,hAgz,eQjp,eQdN,aIyH,aIEp,eQAh,gcEr,eQFV,c4Zx",
                    "78d4": "n3iP,n2SN,ePwH,n37F,orn3,iXDV,lHB3,lHMp,kjTp,hz/N,eQ2x,kjCr,hz/N,lIcr,lHXF,eQFP,orUV,hAxr,hAgF,iY9F,3RgX,dsw1,9kLj,3QWx,3RDr,9kWF,aInr,aJ4x,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "94b6": "gbpH,or0F,kjCr,kjg1,lIcr,lHGN,lI6P,5dqV,3Rsh,3RmF,5da1,6ACP,3QFF,gbGF,gbRP,gbB1,aHRH,aIhV,aIyH,hz/N,hAgF,aIPF,aIyN",
                    9559: "gbpH,or0F,kjwP,kjg1,kkdP,kjI9,n3KX,hAb1,gccj,dsf9,dsBF,aIyH,eQAh,aI+P,aInx,9l5P,c4Oh,5dqP,7Z1F,5c+H,3Rbp,5da1,aIK1,9kLj,7YMN,5cPx,6ACP,3QFF,gbGF,gbAX,gbRV,c4aP,c3KN,n3/P,hArV,hzW9,n3u9,n3/V",
                    "75a0": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QQP,7YMN,hz/N,hAxr,hzKV,dskH,dsHh,5dlh,3RmF,5da1,gbGz,c3KN,kj4H,hzop",
                    "892b": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,3QLb,6AIx,n3ox,orPh,hAaX,lHS1,kk8b,kjZ1,gcEr,hAxx,hz/N,6ATN,3QWx,3Rbj,5da1,7YY1,7Z7h,3Rsh,3RDx,5dwx,c4TP,aI+V,aIK1,eQp1,eQAb,c4xp,ePTb,drUF,aIhV",
                    "4f5d": "orhr,gbpN,kjlz,3QFF,6B8z,3RDx,iYqx,kkp9,iYqr,iXP9,orJF,iXP3,hzKV,9kA3,eQ89,eQuF,9kWF,9kA9",
                    "51bc": "iXsz,n2SN,7Y3H,gbGF,3QFz,3QQV,6AO9,eQ89,eQFP,ePYV,eQoX,3Rh1,3RDx,6Bpx,lHvr,lI1h,iXDP,orhx,oryj,eQjp",
                    "90ba": "6Arz,or0F,7YMH,5chN,orhr,7YBx,ds9r,hA5p,hziH,drUF,9kWz,7Z7h,7ZcV,9lbx,dsSx,gcth,iYqx,n45x,n3L1,3Rh1",
                    8365: "lIcr,lGZN,orDX,iY41,iXyb,or6h,ePwH,hzop,hAxx,eQFV,aIEj,dsBF,c4rH,6B8F,5dqV,5dwx,5cJP,3QWx,5cV9,eQ89,c3Qj,c45h,9kjh,5cnp,5chN",
                    "853a": "n45r,n2SN,oryj,lHMp,lHpP,orbV,kjaj,iXn1,iXDP,iYkV,5dqV,3Rsh,3RmF,5cJP,5dfF,7YXX,7YBx,aInr,aIK1,dsBz,ds3V,gc6H,eQjp,c3Qj,gbMh,5cyz,drUF,dskH,5c+N,3QoH,hziN",
                    6496: "oqXJ,5jOz,3QuT,5jCx,fD9/,bbB1,j/yH,j/WR,mXV/,mYij,izfr,6MSb,izDp,iz9l,3R8Z,izxz,6ML/,6N8j,e8kt,e82r,bc35,bclj,3ReV,e8UF,k0T9,k0v5,h4pF,orU7,h4BH,cFuT,3RJ9",
                    "553c": "n3Fj,orsN,lHpP,lI6V,hz/H,iXP9,iY9z,hAb1,gbMb,gcEx,eQdH,9kA9,5dfF,3RxV,3RDx,3QLb,3QWx,6B31,9l0h,c4Oh,c4aP,c4Zx,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5e3c": "3QzX,oqX1,9l5P,9kA9,c4Iz,aIVh,hAaX,9kR1,hzW3,hArV,dsHb,dskN,aI6z,9kjh,iXyh,iXbN,9jYN,5cPr,lHvx,lIcx,5dwx,5cPx",
                    "72fa": "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,n3KX,oryp,lHpP,lIcx,hArP,hzQx,ds9r,dsMV,9kur,9l5V,5dqV,5cPx,9kux",
                    6042: "3QzX,oqX1,5dfz,3Rsh,3RxV,5dwx,kkjx,kjI9,ePTb,orsN,dsBz,dsf9,kjlz,hzFh,drDH,iXbN,hzW3,hAgF,9kWF,9kA9,hzW9",
                    "6fd1": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,aIhP,6ArF,7YMH,aIt9,orhr,3QWx,kjNH,kjrh,orJz,iX+p,kjYX,kkjx,gcth,dsHb,6Beh,5dfF,3Rbp,3R5N,3RDr,6Beh,7Zir,gcEx,gci1,7YY1,hz/H,dskN,dr+h,hzFh,hz/N",
                    "59a3": "oqRj,aHXp,5cJV,3QoH,9kjh,hzFh,hziN,n3or,3QWx,3R09,5c+N,6Bpr,3RDx,3RmF,5da1,n3L1,dsvX,hAxx,eQ2r,eQjp",
                    "7ea9": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,3QML,6MY7,lvkD,lw4V,orBV,mYul",
                    "742c": "n3db,n2SN,gbpH,gbMh,6AaH,6Am1,7Yqh,n31X,6Am1,lHMj,orsN,hzFb,kjwV,kkjx,hArV,aIPz,9l0h,aI+V,eQFV,eQp1,5da1,3RmF,3RDx,6Bpx,3QLb,6AIx,c4rN,eQdN,eQ2x,aIcb,gbXx,9kA3,c4aV",
                    "68f9": "3QFz,or0F,dsvX,3Rh1,9kur,9lbx,gcyP,gc19,orDX,iY41,lIcr,lHS1,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,dsf3,iXP9,iYkV,dsMV,dsf9",
                    "8f8b": "or0z,ePwN,ePTh,3QFz,hzzF,aHRH,aIch,3QWr,n3ox,n45x,5dwx,3RxV,3Rsh,5dfF,9l0b,9kFN,dsqp,dsMP,dsf9,eQoX,dsw1,hzW3,hArV,kjNH,iX+p,kk8b,iY9F,lGZH,lHkh",
                    "63b0": "or0z,n2SN,n31X,7Yf1,3QoN,c45b,c3KN,hziH,hzzF,gbMb,lHB9,n3u9,gchX,lHB9,ePYP,eQdN,6ATN,5cV9,6AIx,5cyz,9kux,aInx,eQ2x,5d9X,3RmF,5dlh,n3Wh,or+r,n3QF,hAgz,hAxx,c4Zr,c4D1",
                    "81bb": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3RDr,3QQV,9kA3,9l0h,n45r,n3ox,oryj,n3Fp,6Beb,c4Oh,c4m9,6AO9,6Beh,eQ2r,eQFV,kkdV,kjCx,eQ2x,gc6H,iXUN,iY9F,gcnF,gc6N",
                    "5fd0": "dsf3,orn9,iY9z,iXP9,drJj,dsMV,5chH,9k81,aIcb,5cEh,3QQV,3Rh1,5dfF,6B8F,9l0b,6Bpx,aIt3,7YMN",
                    7768: "hzoj,hzKV,ds3P,drJp,orDX,lHB9,eQ89,eQR9,n4b9,n3Wh,iYw3,iYfh,iY3X,iXP9,eQoX,9kLp,5cV9,3QQV,eQAb,5dlh,3RxV,3RJ9,5dC9,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94ea": "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,gcyP,gc6N,hAxr,n3L1,orE1,hzQr,n3L1,c4rH,c4TV,5dqV,5c+N,c4rN",
                    "7a14": "orbP,lGZN,3QFz,n37F,7YBr,5cJV,9kFH,5c+N,3Rbp,3Rsh,5dlh,9l5P,6Bpx,aIEj,7Z1F,aIPz,eQFV,eQ89,gbXr,n3L1,orE1,gcEr,n3L1,hA5j,gci1,hziH,hzKV,9jYH,ePI1,c4aP,dr+h",
                    7619: "n3Fj,oryp,n45r,n37F,7YkF,3QoN,5dqP,5cJV,3RDr,6BjV,c4xj,5d4p,c4Zr,c4Oh,dsw1,eQdN,hzQx,hA5j,iXUN,kjCr,kkdV,eQjp,c4aV,c45h,c3KH,gbGF,kj4H,hzop,aIVb,7Z7h,7YBx,aInx,aIVh",
                    9883: "lHez,oqX1,kj4H,kjwV,3QoH,5cnp,gbvp,gbMh,6Axh,9kux,9kA3,iXP9,iYkV,9l5V,3RDr,6Beh,3QWr,3R09,7YY1,eQp1,n3Wb,iY41,n3u3,n45x",
                    "86a3": "6Arz,or0F,6AIr,5chN,9koP,5cV9,3RDr,9l0h,5dqP,5c+N,eQp1,lHMj,dsf9,dsSr,lI1h,ds9r,iXJx,iXbN,drDN,ds9x",
                    8709: "6Arz,or0F,6AIr,5chN,5cPr,7YvV,5c+H,3Rbp,5da1,c4D1,eQFV,eQ89,aJ4r,aInx,kjI3,hz/N,orUP,lHvx,hArP,lIcx,kjYX,hAgF,ds3P,iXDV,iXhp,drJp,drP1,ds3V",
                    "87d2": "oqWX,5ct1,5chN,6ACP,5ct1,7Yqb,5cJV,gcEr,gbXx,iYfb,hArV,iX+j,gccp,aIhV,c4rH,6ATN,3QWx,9l5P,9kux,aJ4r,gci1,3Rmz,c4IF,lHkb,lIcx,orn3,kjI9,kk2z,orJF,dr+b,iXyh,iXbN,drDN,dr+h",
                    8839: "iXP3,orn9,n2SH,n45x,gbpH,iXhp,iYqx,hAxx,gcyV,hzzz,hAgF,c3KH,hzKV,3QFz,aI6F,3QWr,3QoN,3R5H,3RDx,5dqV,3Rmz,aIPF,lHez,lHXF,kk2F,kjlF,lHeF,ePYP,c4aV,c4IF,eQuF,ePYV,6BjP,9l5V,9kLp,6AZp,6BjV,6ACP,9koV,9k2p,6Agp,6ACV",
                    "7b5d": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,drOX,iXJx,gbMb,gcnF,dsf9,5cV9,3QWx,5cJV,7YeX,7Z7h,dsHh,dr+h,aHRH,aInx,aJ4x",
                    "7c0b": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,gcnz,gbGF,c4xj,aIK1,9l0h,9lbx,aIPz,c4Oh,3Rbj,7YSp,3QoH,3RJ9,3QzX,7Yf1,7Z7h,3Rsh,7YvP,3QQV,aInr,9kjh,9kdF,iXsF,iY9F,dsBF,drUF",
                    "824f": "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,9l5P,9kFN,dskH,dsMV,lI1b,hA5p,lHB3,lIcx,orsH,n3Fp,n3Wb,orUV,5c+H,hz/N,hArV,5dqV,5c+N",
                    "7ce8": "3QFz,or0F,5cPr,3R09,5c+N,eQdN,eQ2x,iXJx,iXP9,iXUN,n3zN,n3ox,kjrb,lHpV,lGZH,iXhp,gbpH,gbRV,7Y3H,drP1,aIhP,c45h,5dwr,5da1,3RDr,6Bpx,iYfb,5dlh,iYqr,n45x,n3L1,iY41,iYqx,eQLr,aJ4x,aIK1,eQp1,eQLx",
                    9164: "orjN,oqLN,or7L,cEKB,cEQH,8fHN,8g3X,bbH1,cEyz,oqXP,k0T3,k0j3,cFoH,pW/N,k06N,5kaD,5jCx,j/yN,k06T,cFAJ,5kQP,5ksL,cFcL,cFAP",
                    "8deb": "ordR,oqLN,h3Rz,or1V,h41B,fCO1,fDm1,izxz,orw3,orO1,h4BN,fDWn,fE6p,h4TV,k0oV,izJB,bcld,3R93,3RJ9,3R8Z,6MSb,9IRr,6MS5,5j+B,3QAP,3QoN,8gK1,8gm3,e8Cr,bcDh,bbT9,e7Sp,e8Cx",
                    "8e3a": "n3or,n3zN,iXUN,eQ2x,eQdN,7YMN,3QQV,7YMH,3RmF,3RDx,orJz,6B8F,lHRX,lI6V,gcyV,gci1,iYqr,iX+p,dsqj,dsMV,aJ4r,aIEp,c3/z,c4aV,ePCj,5cnp,5chN,7YvP,5cnp,hzzz,6ArF,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "89dc": "n31X,gbB1,gbvp,iXP3,gbB1,orbP,iXDV,lHB3,lHpV,n3/P,kjZ1,kkjr,hAxx,hAb1,iX+p,oryp,gbXr,c3Qp,c3KN,ePTb,eQuF,c4rN,3R5N,3Rsb,3RxV,c4TV,c3/F,6ArF,3Qup,3QoN,6BjP,6ArF,9kdz,9l5V",
                    "9efe": "kjI3,5cV9,3R5N,3RDx,5dwx,drJj,dsMV,oqWX,kjg1,kk8h,orPh,oqX1,9l5P,hArV,hzop,9k2p,9l5V",
                    "9c9a": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3R03,6AZp,c4xp,3Rsb,c4Oh,dsSr,dsMV,hA5p,dsf3,dskN,gci1,kkjx,kjI9,orDX,lHXF,9koP,hzKV,hzop,9k2p,9koV",
                    "9ccb": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3R03,3Rh1,5dqV,6BjP,3RDx,dsvX,3Rh1,eQLr,eQFV,gcnF,hA5p,kjI9,kjYX,lHMp,n3u3,n3/V,lI6V,hAb1,eQ89,9koP,hzKV,hzop,9k2p,9koV,c4TP,9l5V,9kA9,c4m9,c4TV",
                    "9ab7": "kjfX,kjrh,gbMh,dsf3,eQdN,gc6N,gbvp,drDN,aInr,aI11,7YeX,7YBx,3QzX,drP1,ds9x,5cPx,3QQV,5cEh,orJz,aIPF,hz/H,hAxx,gbXr,n3ox,n321,gbB1,5d4j,5dqV,aI+V,aIEp,5d4p",
                    "9b0f": "orhr,oqX1,gbB1,drJp,ds3V,ePTh,gbpH,gbXx,iXDP,iXn1,lH8X,lHpV,lHGH,lHMp,n3QF,orPh,lI6P,iY9F,hA5p,hz/N,dskH,dsqp,eQuF,gcyV,hAxx,6B8z,9l5V,3RDr,3RxV,7YY1,3R09,aIJX,7YY1,7YH3,9kFN,7Y3H,7YvV,aIhP,aHXp,3QFz,aI6F,6Axb,5cJV,3QoH,6Am1",
                    "9f44": "or0z,n321,n3ox,eQ2x,ePI1,n321,kjCr,kjg1,hztX,hzQx,aIt3,aHXp,7Yqb,dr+h,6AaH,6ATN,6AlX,5ct1,3Qup,3QWr,6AIx,5dwr,5d4p,c4xj,c4TV,orJz,hAgF,lHGH,lIcx,hz/H,kjZ1,hAxr,kk8h,drJj,dsf9,7YH9,7Y9p,drJp,9l5P,eQFV,eQjp,9kLp,9l5V",
                    5669: "os43,oqLN,3R2T,orpZ,3QoH,3RJ9,e8Uz,e7Ah,6Mu1,bbH7,bc3b,6MSb,6Mu7,6Ne9,bcrf,bcPj,6NCj,6Nef,h4pF,h4NP,lv+P,lvCL,h4pL,h41B,lveH,luSD,h3FD,h41H",
                    "4f7b": "orhr,gbvp,iXsz,3QFF,3QWr,6ATN,orsN,orJz,5dfF,3Rsh,3RDx,7Zix,aJa3,dsSx,eQuF,hAgz,iYqx,lIi9,kjwP,hz/N,dskH,9koV",
                    "8bc2": "luYt,oqRT,h3zr,h3Lz,5jOz,5jUF,8g3X,pWVL,cFiR,k06N,k0T9,5kgD,5kQP,cFAP,cF0J,5kgJ",
                    "90dc": "hziH,n37F,eQoX,ePwN,kjfX,kjNN,ePYP,orbV,3Rmz,n3QF,n45x,hAxx,eQAh,c4Zx,7Zix,6BjV,7Z7h,c4rH,6ATN,6Am1,c3W1,c4rN",
                    5881: "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,kk8b,kjI9,c4Iz,eQuF,eQdH,c4rN,9kur,9l0h,5c+N,3QWx,3QQV,7YMH,5dfF,3RxV,3RDx,hzW3,n3u9,n3Wh,hAmh,hzW9,eQLr,c4Zx,c4aV,ePYV,eQLx",
                    "83a0": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iY9z,iXsF,gbvj,gcyV,c4m3,iXP9,aJ4r,aI+V,dsqp,eQdN,eQ2r,ds3V,aHXp,aHRN,aI6z,aIK1,7YH9,7Z7h,5dlh,3RmF,3Rh1,3QoH,3Qup,5cyF,7YvV,aIhV",
                    8543: "lIcr,lGZN,orDX,iY41,iXyb,or6h,hAmb,hzu1,eQjj,gci1,gbMb,ePYV,aIt3,hzW9,aIVb,aIPF,c4D1,c45b,9k2p,9jYN,dsSr,drDN,6AlX,6Beh,3R03,9kA9,9l0b,3Rsh,3QA1,9k81,9l0h",
                    6525: "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,orn3,kjwV,n3Fj,n3u9,kjYX,orPh,n45r,n3Wh,kkdP,lI1h,gbXr,gcnF,eQuz,eQ2x,lHB3,kjNN,9lbr,9koV,5cJP,aIEp,6AZj,3R09,3Rsh,5dfF,9kWz,5dwx,iYkP,c4TV,c4gx,iXJx,iYkV",
                    "55b1": "h4NJ,h4dJ,5kyL,lvIR,5kax,5kWV,9JBt,9J1t,3QGP,8g3X,ordX,os49,mXxX,mXQ9,cEEF,cEmx,mXy1,lvqD,cF0J,cFAP,lv+P,lvqJ",
                    "5c88": "6AlX,oqX1,3QLb,3QQV,c4xp,eQjp,gcEr,gbXx,iXP9,lI6P,lHvx,kk2z,5dfF,3Rh1,5d4p,hzFb,6Axh,6AaN,hziN",
                    "732c": "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,hziH,n3dh,or6h,hAaX,n3L1,kjCr,kkjx,aI+P,aIt9,7YH3,7ZcV,3R03,dsf9,dsMV,5dqV,3Rsh,5dfF,n3or,hzQx,hAxx,n45x,n3ox",
                    "60bb": "3QzX,oqX1,dsvX,3Rh1,dsf3,dsMV,9lbr,9koV,hzQr,hAxx,orDX,hAb1,lHB3,lI6V,eQjj,gc6N,gctb,eQuF,iXsz,gbMh,drDH,iXbN",
                    "6d2e": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QLb,9kA9,n3u9,orDX,5da1,3RmF,3RDx,6Bpx,eQuz,aI+V,lIcr,hAgF,hzKP,kjrh,aIcb,eQ89",
                    7023: "kjfX,n2Yp,ePCj,hziN,3Quj,drUF,3RDr,3QFF,dsvX,3Rh1,3R03,dsf9,6AO3,6Axh,6BjP,6B31,9kQX,9l5V,9kjb,9kA9,c4m3,c45h,c4TP,c4D1,eQLr,iY9F,kk2F,n3Qz,n45x,lIcx,eQp1,eQjp,eQ2r,iX+p,kjTp,kjwV,hzFh,gc13,iXDV,orhr,kjCx,n3Fj,n3ox",
                    "5a06": "oqRj,c3Qp,6ACV,5chH,aIch,iXyh,iXbN,lI6P,kjCx,iYfb,eQjp,dsf9,ds9x,aI+P,aInx,aIJX,5da1,3RmF,3RDx,5dwx,3QLb,3QQV,7YMN,aIyN,gcEr,dsSx,dsMV,eQuF,hA5p,lHGN,orsN",
                    "7ed7": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,eQ83,3R09,iXUH,ePYV,kjwP,orsN,lI6P,lHS1,gccj,gcEx,gctb,5dlh,3RmF,5da1",
                    "748e": "mXQ3,mXy1,fCNX,fD49,8fTP,6Mo1,mXJZ,8fNP,lvkx,h47D,e7Yl,fDyd,h4dJ,e8wv,h4HT,lvUT,fE6j,h4NP,iA5z,os49,orI5,izJB,izxt,orw3,or7R,iz9l,cF0D,9IXn,6Nef,3Rx7,3RD3,3QML,3QSX,5kgJ,8gy5,bcDh,bbY/,bcVp",
                    "695d": "3QzX,oqX1,9kFH,3QLh,9kQX,3RDx,3RJ9,oryj,3Rbp,lHpP,lIcx,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,gbXr,dskN,dsvX,gcth,c4TP,hArV,hzKV,c4aV,c4TV",
                    6221: "9kdz,or0F,orhr,9kux,lH3j,lHB9,hzQr,hzzF,drUz,ds9x,9kFH,9jYN,6ATH,eQLx,gcEx,iXUH,iYqx,n3/P,lIcx,orJz,7Z1F,3RxV,5dwx,3R5H,3Qup,9k2p,5csX,6ArF,6ACP,5cPx",
                    "6c0d": "lHez,lH3p,lHB3,lHpV,iXDP,iXP9,iXhj,iXsF,5cJP,ePYV,5csX,5c+N,7YH3,7Yf1,aI0X,aIt9,dskH,drP1,3QA1,dsMP,c4xp,hA5j,iYkV,orUP,n3Fp,n3Qz,5dfF,3Rsh,3RDx,6Bpx,c3KH,ePI1,oqRj,gbvp,gbGF,or0F,oqRp,gbRP,orbV,orn9,gc19,gbRV",
                    "98d5": "dsBz,orJF,dskH,dsMV,c4TV,6AZp,5dwr,c4xp,3RDr,3Rbp,6AIx,n3ox,n2Yp,5cnp,3QoN,gbRP,9k81,aIhP,gbB1,iYqr,iXUN,lI1b,lIcx,gcEx,gc6N,lHGN,n3L1",
                    "61a9": "orbP,n2Yp,gbGz,n37F,kj4H,kjCx,lHMj,orJF,iYkP,iXUN,gc6H,gcyV,6ATH,9kA9,6B8z,5dfF,3Rh1,3QQV,5cEh,9kjh,5chH,7Y9p,9l0b,6Bpx,gbRP,ds3V,drJp,gbvp,gbRV,lHGH,lI6V,dsMV,dskN,lHGN",
                    "77b5": "hzzz,hziN,c3KH,c3/F,7YvP,dsf9,c4m3,c4xp,9kLp,3QQV,3QLh,aInr,7YMN,3RxP,dsMV,7Zir,7Z1F,9kWF,c4Zr,c4IF,iYfb,gcEx,kjCr,kkjx,gbXr,iXUN,orDX,gci1,lHXz,orUV,orn3,lHMp,n2SH,n37F,6ArF,6AaN,n2SN",
                    "94ff": "hziH,oqX1,hzFb,hzu1,hzzz,3QFF,6ACV,3RDr,3QWx,c4CX,3Rh1,9kA3,9l5V,c3KH,c4aV,lHkb,lH91,gbXr,lHvx,orsH,dskN,lHRX,lIcx,iYqx,dsw1,dsSr,iY41",
                    "74de": "n3or,lH3p,5cnp,3QoN,5cPr,6ACV,5cEh,5cyF,kjlF,n3iP,c4aV,5d4p,3RmF,3RDx,6Bpr,c4IF,7YSp,orJz,c4IF,hzW3,n3Fp,kkdP,kjNN,eQ83,eQLx",
                    7633: "n3KX,oryp,n45r,n37F,7YkF,3QoN,3R03,3Rbp,6BjV,9kWz,7YY1,6ATN,6AO9,9kA3,9kFN,aIEp,dsqj,c4rN,aInx,aIhV,dsvX,c4IF,aI+V,aJ4x,eQLr,kkjx,kk2F,gctb,hAgF,eQuz,hArV,eQdH,kjNN,kjwV,gbXr,hzKV,ePYP,hzW9,c3KH,gbGF,kj4H,hzop",
                    "8d5d": "or+r,oqRp,5cnp,3QoN,3QFz,3QLh,5cPx,7YMN,aIyN,6AZj,5dfF,3RxV,7Z7b,c4Oh,c45h,7Yqh,iXyb,dr+h,iXmX,n3iV,n3zH,iXDV,lIcr,lHB9,dsf9,dsSx,iXP3,iYkV,gcyP,gc19,n3Qz,dsBF",
                    "507b": "iXbH,or0F,3QzX,kjg1,3QQP,3QWx,5c+N,6B31,9l0h,c4Oh,c4aP,c4Zx,dskH,9kA9,3RxV,eQLr,eQFV,iY41,iXUH,ePYV,ePTh,oryj,eQjp,lHXz,orPh,orhr,lHB9,kkjr,kjrh",
                    "8c15": "kjfX,n2Yp,gbpH,gbB1,5ct1,7Yqh,3QWr,eQ2x,eQjp,3Rbp,3R5N,7YBr,7YSp,aIEj,aInx,7Z1z,dsBF,5dfz,3Rsh,5dqV,eQFV,gcEr,n3Fp,oryp,gbMb,n3Fp,hAgz,hzW9",
                    "5f01": "iXsz,orn9,iYfb,iXn1,lHRX,hAmh,3RgX,gci1,3Quj,9kjh,gbMh,dsSr,drDN",
                    "82a1": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,aHXj,hzFh,ePNz,eQAh,c4IF,c4m3,9kA9,6ACV,3Qup,3QoN,9kA3,6AZp,3RxV,3RDx",
                    8403: "lIcr,lGZN,orDX,iY41,iXyb,or6h,hzW3,iXJx,gbAX,gcth,ePTb,dr+h,aI11,aInr,dr+h,aIyH,dsw1,eQp1,aIVb,dsw1,7Y3H,7Zix,3R03,9kA9",
                    "5c25": "oqWX,6Am1,3QoN,7YXX,6B8F,6Beh,7ZcV,lI6V,lHMp,eQoX,hA5p,6Bpr,5dwx,3RxV,3QWx,5cJV,kjwV,kj4N,orDX,iXP9",
                    5484: "mY61,h47D,h4TV,mYSp,5kyL,pWVR,cFGP,5kWV,5kaD,cEWD,j/yH,j/WR,9ILl,9Inh,j/yN",
                    "55e4": "n3iP,kjwV,kkdV,n3/V,5d4j,oryp,5dwr,5cEh,3RDr,6BjV,hzFb,hAxx,lGZH,lHeF,c3/F,c3KN,lGZN,9l5P,dsMV,ds3V,9koV,9l5V",
                    "5d6c": "n2Yj,kjap,kkdV,n3/V,kjI3,orn9,hzFb,iXJx,hzW3,5cV9,3R5N,3RDx,6Bpx,9kQX,6ATN,6Beh,7Z1F,aInr,9kux,5cyF,3Qup,3QoN,eQAb,ePI1,c3VX,hzu1,hAmh,c4Oh,c3W1",
                    9994: "gbpH,oqX1,kjaj,kjwV,hzFh,gbAX,5ct1,9koV,7Zir,7YBx,c4gr,c4Zx,7YMH,dskN,dsHb,7Z7h,3RDr,6Beh,6ATH,3QWx,hA5j,gccp,gbXx,n3ox,n3Fp,lHMp,kjTp,kjCx,kk2z,kkjx,n45x,n3QF,gcnF,gcEx,hAxx",
                    9603: "n2Yj,oqLN,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,gc13,7YH9,ePTb,eQp1,9kjb,ds9x,aIEj,c4rN,kj4H,3QoN,6B8z,iY9F,iXsF,6ArF,6B8F",
                    "6e2b": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5cJP,5cPx,9kLp,5dwr,9kWF,c4CX,3Rh1,aIhP,aJ4x,dsSr,ds9x,n3ox,oryj,gccp,gcth,orPh,kjrb,kkdV",
                    "900b": "lH8X,oqRp,hziH,hzu1,6Am1,3QoN,6AlX,3QLh,3RDx,7Z1z,6Beh,7ZcV,hArV,hzKV,6ACV,oryj,6AZp,lI1b,n3QF,kjrb,kkjx,eQFP,ePYV,c4aP,c4TV",
                    "5af1": "oqRj,aHXp,6Axh,5cJV,3QoH,9kjh,iXyh,iXbN,gcEr,gbRV,iYfb,hAgF,iXJr,hzW9,lI1b,lHvx,gccj,oryp,ds9r,dsMV,5dqV,5cPx,ds9x,aIyH,aIPF,7Z1F,7YMN,aIyN",
                    "7f24": "n37z,iXhp,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,6ATH,3QWx,3RDr,6Beh,9kur,9lbx,9kFH,hz/N,iY9F,iYkP,kkjx,lIcx,lHB9,iXJx,orDX,n3QF,eQdH,eQFV,9l0b,eQAh",
                    "67f0": "gc13,orn9,eQLr,eQFV,gcnF,kjNN,lGZH,lIcx,kjCr,gbGF,ePCp,ePwN,dsvX,dr+h,aI0X,aIVh,aIt3,5cV9,3QWx,5cJV,7Yqb,3Qup,3QoN,7YSj,5dfF,5dlh",
                    "6a65": "n2Yj,iXyh,dr+h,c3/F,drP1,gbpH,gbvp,iXsF,kj4H,kjap,n3dh,or6h,n3Qz,n3zN,orDX,lHS1,kjZ1,kkjr,kjCx,eQ83,n3/V,eQFP,eQjp,9jYH,9lbx,9kur,5cyF,3Qup,3QoN,9kA3,3R09,9kFH,5dfF,3RxV,3RDx,hA5j,c4xp,c4TV,hArV,hA5p",
                    6656: "h41B,h3FD,iz/t,izrt,lv+J,os49,orpZ,lvkD,mYuf,e8et,e8Oz,3Rk/,fDKl,9IRl,9JHF,mXE1,mY0b,bc3b,bbH7,mXE7",
                    "80ea": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QQP,7YH9,hzW9,hArV,dsMV,dsf9,orDX,hAb1,lIcr,lHS1",
                    7131: "orn3,kjI9,hzKV,gbGF,ePCp,ePwN,lHez,iXn1,iXUH,n3QF,kjI3,hA5p,gcnF,eQFV,eQLx,3R03,c4TV,aIEj,9kFN,dsBz,9kWF,5dwx,6AIr,9kjh,c4gx,dr+b,9kjh,3QoN,aI0X,9k2p",
                    7857: "n3iP,n2SN,ePwH,n37F,lI6P,kjCx,gcEr,dsSx,dsMV,eQuF,hA5p,lHGN,orsN,aI+P,aInx,aIJX,5da1,3RmF,3RDx,5dwx,3QQP,7YMN,aIyN,dsf3,dskN,iYfh,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    9494: "gbpH,or0F,kjCr,kjg1,lHMj,n3zN,lHXz,lIcx,5dwx,3RxV,5dlh,iXUH,3R5N,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF",
                    "953f": "gbpH,or0F,kjwP,kjg1,kkjr,kjI9,orDX,lHXF,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,5cPr,dsw1,9kLj,3Rbp,3Rh1,5dfF,aJ4r,7Z7h,aIPz,9kWF,6Beh,3RDx,hz/H,hArV,dsMV,dskN,eQdN,hz/N",
                    "9e5c": "oqLH,orbV,lHeF,n31X,kjlF,gbGF,ePI1,iXmX,gbpN,iXDP,kjCx,kj4N,gc6H,gccp,n45x,n3L1,kjNH,orE1,kjYX,gcyV,gcEx,ds3P,eQ2x,aIt3,c4gx,aIJX,c4IF,dsBF,drUF,9kdF,9l5V,6BjV,3RmF,3Rh1,5d4p,6AaH,6B31",
                    "88e2": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,3QQP,6AO9,gc19,gbRV,ePTb,drUF,aIhV,6AO3,3Rbp,3RDx,hAmb,6Beh,kjTj,kkjx,n3or,kjI9,orJz,eQjp,eQLx,aIEj,aJ4x",
                    "4ee1": "iXbH,or6h,3QzX,kjg1,6Bpr,3RDx,3QWx,5cJV,hAgF,hzFh,orn3,iXDV,lI6P,lHvx",
                    5155: "e82l,9IRr,6MM5,3QuT,3QoN,6NIj,3RJ9,3Rl5,5ksL,e8qv,oqRN,ordX,izfr,izDv,orB/,or+3,e8Oz,e7Gn,oqRT",
                    "966c": "orNX,ordX,3ReV,orB/,6MS5,6MY7,8gr/,e88h,e8qv,k0oV,k06T,k0AX,k0T9,9JHF,3Rl5,fDQb,8gE1,3RJ9,orjN,6MY7,bbH1,9Izj,bbT9,e7Sp,h3FD,j/QV,or1V,oqLN,3QoN",
                    "57b2": "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,gbXr,gcth,aIVh,aInx,5cPx,3R09,3RDx,6Bpx,n3/P,iYkV,iXDV,n3iV,iX+j,oryp",
                    8334: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,c4aP,7YvV,7YSp,c4xp,c4aV,gcyP,3RxV,3Qup,gbvp,gcyV",
                    "84ca": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXyb,ePCp,ePwN,hzQr,ePTh,eQjp,dsvX,gccp,eQLr,eQFV,iY41,c4rH,c4TV,3RxV,3Rsh,5c+H,5d4p,7Z1F,aIyH,9kR1,c3Qj,c4gx,3QWx,3QQV,5cnj,5ct1,7Yqh,aHXj,9k81",
                    "63de": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,n3Fj,orsN,lHpP,lIcx,iXUH,kjI9,kk8b,iY9F,hzKP,hAxx,9l5P,9kux,ds9r,dsMV,5dqV,5cPx,ds9x",
                    "54f3": "orn3,5cV9,3QWx,5cJV,hA5j,c4aV,kjwP,kjTp,orUP,lHS1,6B31,3R5N,gcyP,3RxV,gchX,gcEx,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "56dd": "mQwJ,mRe7,jGh/,aanL,8CaX,aaaN,gw9v,gv8L,q1ib,q2Jd,5smd,5qXh,q1ih",
                    "72b7": "n2SH,iXyh,6Axh,3QA1,5cnp,gbMb,c3KN,orbP,hziN,lHXz,orE1,kkjr,kjI9,6AO9,3QQV",
                    "5ff8": "3QzX,oqX1,5dwr,5cEh,5dlb,lI1h,lHpV,5cV3,lHB9,dsHb,dr+h,iXsz,gbMh,drDH,iXbN",
                    "6cd0": "kjfX,n2Yp,hziH,ePCp,c3/z,3Qup,aInr,9kA9,aIyN,dskN,gbXx,iXUN,n3zN,n3iV,3QQV,3R03,aIPF,orJF,iX+j,iYqx,5dwx,3RxV,3Rsh,5dfF",
                    "5b71": "lH3j,lI1h,orPh,oqRp,6Agp,3QoN,5cyz,3QLh,5cJV,9koV,aInx,aI6F,7YH3,7Yf1,7Zir,7YSp,aIJX,aI+V,9l0h,5dlh,3RmF,5da1,ds9r,c4m9,dskN,hz/N,iY9F,iXyh,gcyP,gbB1",
                    "9a96": "n2SH,n37F,ePNF,kjaj,drJp,dr+h,5cEh,3QFF,3QA1,5cnp,aI6z,9jYN,eQLr,ePYV,aJ4r,dsHh,7ZcP,5dfF,3Rbp,3R09,6AO3,6ATN,aIPF,c4xj,9kA9,9kux,gccj,aIhV,oryj,iXJx,iYfh,hArP,kk8h",
                    "73d9": "n3db,n2SN,gbpH,gbMh,6AaH,6Am1,7Yqh,n31X,6Am1,9kFH,orsN,orPb,9l0h,iXJr,iYqx,9lbr,9kux,6Beb,3RDx,3QWr,6ATN",
                    6840: "iXbH,or0F,lH8X,lHvx,kjCx,gbGF,ePCp,ePwN,kjaj,hzzF,lI6P,lHGN,eQuz,orJF,hAxr,hz/N,iX+p,3R03,eQ89,5dwr,5dqV,6B8F,aIyN,aInr,6ArF,5cnp,5chN,c4Zr,c3KN",
                    "8f6d": "oqWX,ePwN,ePTh,aHRH,aIhV,gbGz,3QFF,kj4H,kjwV,lIcr,lHB9,7YH9,3QQV,6Bpr,3RDx,3Rh1,5d4p,gccp,gcyV,aI+V,9l0h,aIPF",
                    "89d0": "oqWX,kjg1,kjrh,or6h,n2SH,n3ox,kjlz,5cyF,5chN,6ACP,5cyF,9k2j,9koV,c4gr,c3KN,aIyH,n3zN,n3Wh,aIVh,9kWz,5dfF,3Rsh,3RDx,6Bpx,3QLb,3QQV,5cV9,9kR1,iY41,hzoj,hzKV,ePYV,ePCp,hzop",
                    8169: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QWr,gbXx,gcyV,5dqV,3Rsh,5dfF,aIEj,3Rbp,dsBz,c4D1,c4rH,dsf9,aIVb,aIt9,7YH3,7Z7h,oryj,gccp,kkjr,kjwV",
                    "795b": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ePYV,dsSr,ds9x,iXP3,iYkV,orDX,dsw1,5cJV,5dqV,3RDr,7Z7h",
                    "770d": "jFTZ,jFAx,dkiX,dkCz,ab57,lgWV,mRxz,aanL,q2J7,q1Vb,5ryb,5smd,q1ib,q1BP,6/l3,6/1x,q1ih",
                    "94d1": "gbpH,or0F,kjwP,kjg1,kk8b,kjI9,9kur,kkjx,6ACP,3QFF,gbGF,gbAX,gbMh,aIhP,aHRN,c4xj,5d4p,3Rh1,3RDx,5dwx,gbXr,gcEx,orDX,gci1,7YXX,aJ4x",
                    9571: "ePwH,oqX1,kjaj,kjg1,kjrh,gbvj,gbMh,c45b,c3KN,6Axb,3QA1,gbB1,5cJP,7YBx,7YXX,9kLp,5dwr,7ZcV,5dlb,3Rsh,3Rbp,5c+N,7YMN,dsMP,dsf9,iXJr,iYqx,lHGH,kjTp,kk2z,lI1h,n3u3,n3/V,orDX,n3L1,aIt3,gc19,gcyV,aI+V,aIt9",
                    "75e4": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,5dwr,5cEh,iX+j,5d4p,hAmb,gcth,eQFV,dsSx,gctb,dsw1,dskH,gbXx,hzQx,dr+b,gbXx,c3KH,gbGF,kj4H,hzop,aI+P,aIhV",
                    8026: "3QFz,or0F,3QWr,c4gx,c4Zx,5dwx,3RxV,5dlh,9l0b,6BjV,7Z7b,6B31,6ATN,n3KX,6B31,iXP3,iYkV,lGZH,lHpV,hzKP,hzop,drDH,ds3V,6AaH,aI11,7YvP,9kjh,eQFP,n3/V,n3u9,eQ89,eQFV",
                    "98a5": "orn3,oqRp,n45r,n3Fp,iY3X,n3Wh,eQuz,7Z1F,3R5N,3QWr,5cV9,aIt9,aHXp,3Qup,6Arz,aI6F,dr+h,6ACP,aIhV,dsf3,drDN,hz/H,lHGN,lGZN,hziN,iXsz,iXhp,iXP3,iXDV,gbRP,gc19,gbvj,gbGF,9kLj,iX+p,iYkV,9l5V,3RDr,7Z1F,or6b,gbMh",
                    "86f2": "oqWX,5ct1,5chN,6Axb,5ct1,3QLb,9kjh,3QQP,7YMN,aIyN,aI+P,aInx,5dwr,3RDx,3RmF,5da1,aIK1,gcEr,dsSx,dsMV,hA5p,lHGN,orsN,kjCr,lI6V,ds9r,dsf9,eQjp,iYfh,iXyb,dr+h,drDN,iXbN,iXyh",
                    "877e": "oqWX,5ct1,5chN,5csX,6Axh,7Yqh,aIEj,5cJV,5dwr,9kWF,eQoX,3Rh1,c4m3,c4TV,eQ2r,hzW9,hAxx,gcEx,eQFV,lHvr,lIcx,orsH,kjNN,kk8b,orPh,iXyb,dr+h,drDN,iXbN,iXyh",
                    "87cb": "oqWX,5ct1,5chN,6Axb,5ct1,7Yqb,5cJV,6AIr,7YBx,6B2X,9kLp,9l0b,6Bpx,6Beb,5dlh,3RmF,3Rbp,5c+N,9kFN,n3KX,c4D1,lHB3,orPh,kjI3,iXUN,lI6P,iY9F,c4Zr,gcnF,c4aP,c4gx,gccp,hzQr,hAxx,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7b38": "j/yH,pWlB,mYc7,mXK3,mYSj,mYul,k0MZ,mYAh,pX5N,k0j3,k00R,mXQ9,h4TP,h3Lz,5jOz,5kWV,e88h,e8Cx,9Jpx,9IXn,e88n",
                    "7ba2": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,gc6H,hzW9,c4TP,dsSx,eQLx,ePCp,c3KN,7Y9j,c45h,aI6z,aInx,9kux,5cyF,3Qup,3QoN,6Axb,9k81,7YXX,6B8F,7Z7h,aIVh,aIyN,5c+N,3Rbp,3RDx,5dwx",
                    8844: "mQq9,q1Id,6/7/,mQjR,mQWL,8Chv,6/1r,6/rt,8CnV,6/kZ,mQwP,mQJH,8C4x,gwg3,gvSd,5rL3,5smd,orMx,5rY7,orG7,os49,5sfF",
                    6549: "3QFz,or0F,3R03,9kWF,eQFV,kkdV,kjTj,kkjx,hzW3,orE1,gccj,eQjp,6Beh,3RDx,c45b,aIhV,7Y3H,drP1,gbXr,gbpN,iXyb,lHvx,lGZH,iXn1",
                    "7e9b": "n2Yj,n321,n3/V,orn3,lHB9,lH3j,lI6V,hziH,hAxx,iXUH,gc19,dsSr,c4rN,aIJX,9kLp,9l0h,6B2X,aI+V,6ATH,6Bpx,7Zix,3RDr,5dqV,6B8z,3RmF,3R5H,5d4p,5cJP,3QWx,3QoH,5cnp,5cyz,3QFF,6AaH,6AIx,drOX,6Am1,6ACP,ds3V,9koP,9kjh,9k81,c4aP,c3W1,kjrb,kkdV,eQuF,ePI1,kjrh",
                    9185: "orjN,oqLN,or7L,cEKB,cEQH,8fHN,8g3X,bbH1,cEyz,oqXP,e8kt,e8UF,izDp,fDKl,fDWh,iz/z,lvwJ,lw4V,pWVL,mYAh,k06N,5kaD,5jCx,j/yN,k06T,bcr9,5ksL,5kQP,bcPj,bcrf",
                    "8dec": "kkdP,kjI9,eQ2r,eQLx,drUz,ds3V,6Arz,hzzF,7YvP,5cnp,5chN,drJj,5cnp,orDX,eQp1,3RgX,c4D1,3QWr,3RDx,9l5P,9kA9,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e85": "lvCF,orB/,orNX,lvON,fDm1,k0j3,izxt,iA5F,5kWV,3RD3,8gDX,6Nwn,6N2d,fDE9,6Nef,e7Sj,e82r,e7Gh,5jID,5jCx,8g3R,5jID,iz3j,6MG9,oqRN,or7R,iz9l,iyTn,oqRT,orpT,or+3,lv+P,lvqJ,orpZ,e8Cr,bcDh,bcfd,e8et,e8Cx",
                    9708: "orZZ,oqRT,fDs7,orpZ,fDWh,fDEf,izDp,izVD,iyZd,izfr,fDg5,fC+3,h3zr,luMx,lw4V,h4TV,cFcF,e8qv,3ReV,bcrf,6Nqb,5kKT,6NCj,9JBz,9IXn,5kaD,6ML/,5jUF,3QuT,3QoN,9Ith,8fNP,bbT3,cEyz,cFAJ,cEQH",
                    "943e": "kjaj,kjCx,n3ox,n2Yp,hzop,drDN,iY9z,dsBF,gccj,gcyV,iYqr,iXUN,lI6P,kk8h,n3zH,n45x,kjYX,lHMp,orJz,n3QF,9jYH,9k2p,dsf9,9l5V,9lbx,9kjb,9kR1,6Beb,6Am1,3QoH,3RDx,5cEb,3QLh,3RgX,5da1,9kA3,3R09,hztX,hzQx,eQ2x,ePI1,hzu1",
                    "9cb1": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,c4aP,ds3V,drJp,6ACP,5chN,7YSj,7YBx,7Zir,7Z1F,dsBz,dsMV,dsf3,dsqp,iX+j,iXJx,iYqr,iY9F,3Rmz,orJF,n3Fj,3Rbp,9koP,hzKV,hzop,9k2p,9koV",
                    "9cdc": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,3QLb,6AIx,n3ox,n4b9,gctb,kkdV,hArP,hAD9,eQLx,eQFP,6BjV,3RmF,3RJ3,6BjV,3R03,6AZp,eQjp,eQuz,c4IF,c4m9,eQ89,hAgz,hzW9,kk2z,iY41,iXUH,kjI9,9kjb,hzFh,hziN,9jYN,9kjh",
                    "9b4d": "or0z,n321,lH3p,drJp,ds3V,lHpV,lH3p,drUz,lHeF,hzoj,hzKV,drOX,7Yf1,3QoN,dr+b,5cEh,3QQV,3RDx,5dwx,6Beb,6BjV,n3/V,n3u9,6AO9,9kur,9koV,aIhV,9kWz,9kLp,eQjp,eQAb,eQdN,gchX,eQp1,hAmb,hz/N,kk2z,iY9F,iX+j,kjTp",
                    "9edd": "kjrb,kj4N,aI0X,n321,aHRH,aIhV,dr+b,drDN,6Axb,7Yqh,7YeX,5ct1,5chH,7Y3N,3QWr,3R09,aIPF,orJF,hA5j,hAxx,5dwx,3RxV,3Rsh,9kQX,aIEp,9kLj,9kux,c4gx,gc6N,eQ2r,iXDV,orsN,n2SH,hziN,hzFh,n3dh,n2SN",
                    "4e9f": "q1oL,q2CF,lgQv,aanL,8CaX,8C4x,aa4d,jGuT,jG/t,gwg9,aaAJ,ab57,aa+F,gvSd,5qXb,5smd,dkPr,jG51,jFH5,dkpB,dkPx",
                    "4ff3": "iXbH,or6h,3QzX,iXn1,3R03,9kA9,n3u9,3RgX,n3L1,9kQX,9lbx,9kdz,9kA9,eQ83,ePTh,eQFP,eQp1,kjYX,kkjx,kjlz,kjI9",
                    "8bee": "kjfX,n2Yp,gbpH,gbB1,5ct1,5cyF,7YvV,3QWr,iXJx,iYqx,5dwx,3RxV,5dlh,aInr,aJ4x,eQLr,eQ2x,orDX,iY41,kk2z,n3/V,n3or,kjNN",
                    "52a2": "lHGH,lGZN,lHez,aI6F,5chN,6Axb,5cJV,5cPx,6AO9,gc19,gbGF,iXUH,iYqx,5dwx,3RxV,5dlh,3R5H,9kWF,orJF",
                    8401: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,7Yqb,iXyh,7Zir,7Y3N,iY3X,7YY1,gbvj,gcyV,dsvX,dr+h,aIcb,aIK1,6ACP,3QA1,3Qup,6AZj,3Rsh,3RxV",
                    "85ff": "n45r,n2SN,oryj,lHMp,lHpP,orbV,kk8b,kjg1,eQ83,kjI9,eQAb,eQuF,gccj,gci1,gbAX,gbGF,ePYP,ePTh,ePwH,hziN,hAxx,eQLx,c4aP,c4Zx,9l0b,9kux,6AIr,6BjV,3RDr,3QQV,dsqj,3Rbp,dr+b,aHXp,aHRN,3QFz,c3/F",
                    5453: "lw4P,lvkD,orU1,izVD,izxt,orw3,e88h,e8ID,5kaD,3QYT,3RJ9,6NIp,luMr,lv8B,cEKB,cEmx,luMx",
                    "561f": "lHGH,lHpV,kjTj,iX+p,9kdF,9kLj,9koV,7Z7b,6BjV,7Zix,c4Zx,eQAh,hAxx,lIcx,lHXF,3RmF,gbMb,gci1,orhr,gbXx,lGZH,lHeF,c3/F,c3KN,lGZN,c4aP,c4xp,6AZp,6ACV,c4aV",
                    "5ce4": "7YeX,oqX1,3QQP,9kFN,eQdN,3Rmz,eQuF,iY3X,dsSx,iXJr,iYqx,iXyb,7Yqh,7Y3N,iXbN,orPb,n3u9,n3Fj,iX+p,ds3V",
                    9968: "gbpH,oqX1,kjfX,kjCx,iXJx,hzKV,gbGz,5cyF,5cEh,7YBx,5dwr,3RDx,3RmF,5da1,orE1,lHB3,lI6V,hzW3,c4m9,c4TV,hArV",
                    "61ac": "3QzX,oqX1,7YH3,5cJV,5dqP,7Z1F,3R5H,5d4p,9kLp,ePTb,eQLx,gccj,eQjp,kjCr,kk8h,hzFb,kjlF,drDH,iXbN,9l0b,c4Oh,c4gx,9kux,9l0h,hAmb,n3Wh,n3ox,hzQx,hAmh",
                    "6d63": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QLb,3QQV,7YMN,c4rN,c4Zr,c4aV,c4CX,5da1,3RmF,3RDx,6Bpx,gc13,gcth,hzKP,kjCx,kkjx,hArV,oryj,lHS1",
                    8930: "orsH,orn9,kkdP,n45x,n2Yp,kj4N,kk2z,kjlF,lHMj,eQjp,c4IF,aI+V,aJ4x,ePwH,eQLx,lHpP,ePYV,c3/F,aHXp,aHRN,hAgz,hzzF,aI6z,aIPF,c4m3,6Axh,5ct1,5cnp,7YBr,3QWx,3R09,5c+N,9kFH,5dfF,3RxV,3RDx,6B8z,7Z7h",
                    "5a3c": "pW3x,cEsD,6MSb,5jCr,bbZ5,j/WR,j/yN,lv+J,lvqJ,9IXh,9JHF,izrn,orpZ,or+3,iz/z,izrt,e8Uz,5kWV,5kaD,e88n,e8UF",
                    "7f03": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,fDs7,9IRr,k0u/,k06T,3R8Z,orw3,bcDb,bcVp,e8qp,bcxl,h4TP,h4BN,5kEH,mYAh,mYSp,5kWV,5kEN",
                    "675e": "3QFz,or0F,6Bpr,3RDx,3R5N,5cV9,eQ89,eQFV,lI6V,lHB9,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh",
                    "69bb": "3QzX,oqX1,5cPr,3R09,5c+N,eQdN,ePYV,ePNz,dr+h,drDH,hzop,kjrb,kj4N,kk8b,kjCx,eQoX,eQLx,5dwx,3RxV,5dlh,aI+P,6B31,c4Iz,9l0h,aIhP,9kux,6Axh,hAmb,n3Wh,n3ox,hzQx,hAmh",
                    6772: "lvOH,lv2F,3R2T,fDsd,3RJ3,3RD3,bclj,bc91,3QuT,3QoN,cFGP,cEmx,or1P,orO1,izPx,iz3p,or1V",
                    8662: "orbP,n2SN,kjYX,orE1,n3/P,n3L1,hArP,iYqx,kkjx,kjI9,6AO9,3QQV,5cnj,3QA1,3QFF,5cEh,gbMh,drDH,ds9x,9k7X,aHXp,kj4H,iXhp,iXsz,kjg1,lHvr,iXDV,hAgz,gc6N,iY3X,eQp1,dsBF,dsMV,eQFV,6Bpr,3RDx,3RxV,5dlh,aIVh,aIK1,5da1,3Rbp",
                    "65d6": "lHez,oqX1,kj4H,kjCx,kjfX,7Yf1,3QoN,5cyz,3QLh,5cJV,ePYV,ePI1,oryj,hzQx,kkjr,kjNN,iY3X,gci1,dskN,gcyP,gc6N,dsHb,eQuF,c4gr,c4Zx,c4Ob,5dlh,3RmF,3Rh1,6B2X,9kR1,9kFN,6ATN,6B31",
                    "65ab": "n3iP,n2SN,ePwH,n37F,orUP,n3zN,7YMN,3QQV,hAmb,3Rsh,hz/H,hAxx,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "7f71": "lveB,ordX,orBV,lvCL,e8en,k0cZ,h3zr,h4TV,bc91,cEQH,cFcF,bclj,9ILf,9JjB,6Nqb,6MG9,5kyL,3Rr1,3Rx7,5kQP,e8Oz,e7Gn,3QuT,9J1n,3R2Z,oqRN,luSD,lv+P,or+3,oqRT",
                    "951d": "gbpH,or0F,kjwP,kjg1,kk8b,kjNN,eQ83,eQFV,gbAX,gbRV,c4aP,c3KN,c4Zr,c4m9,eQAb,5dlh,3RmF,3Rh1,5d4p,9kFH,7YSp,6ACP,3QFF,gbGF,hAmb,n3Wh,n3zN,hz/N,hAmh",
                    "9e3e": "n45r,n2SN,orn3,n3u9,hA5j,n3Fp,hArP,kk2F,n3iP,hzKV,hzoj,kjlF,ds3P,gc19,aIt3,c4gx,aIJX,c4IF,dsBF,drUF,9kdF,9l5V,6BjV,3RmF,3Rh1,5d4p,6AaH,6B31",
                    "7aa0": "n3u3,orhx,iYkP,kkjx,lIcx,lH3p,iXbN,gbvj,iXsF,gcyP,iY9F,drUz,dsBF,gc13,c4m9,3R09,3RDr,3RxV,6AZp,7YMN,7YBr,6ACV,3Qup,3QoN,7Zir,7Y3N,gcnz,aIPF,aI6F,gbGF,gcnF",
                    "525e": "or6b,kjrh,ePwN,ePCj,eQ89,6AO9,3QQV,3QLh,5cyF,eQdH,kjrh,lH3j,lHB9,9kQX,kjZ1,5dfz,3Rsh,3RxV,5dwx,or+x,7Yqb,c45h,c3Qp,7Y9p,7Yqh",
                    "4fce": "ePwH,or6h,gbXr,kjlF,3QoH,dr+h,9kdz,5cPx,3RDr,3QQV,3Rsb,n3Wh,n3u9,3R09,aIVb,aIt9,hzW3,hAmh",
                    "8c35": "kjaj,n2SN,hziH,hzu1,5ct1,7Yqh,3QLb,6ACV,kjwV,kkjx,kk2z,n3/V,n3ox,kjrb,orn9,hzQr,iXUN,gcEr,gbXx,iYfb,hArV,gchX,hAb1,dsMP,dskN,aIyH,aI+V,7YH3,7Zix,5dwx,5cV9,7YH9",
                    "575c": "7Ykz,or0F,9kur,6AaN,iXbH,iXJx,n45r,n3u9,6AO9,3QQV,3R5H,9kWF,kk2F,gc6H,gcEx,6Bpx,5dqV,5dlh,6B8F",
                    "82fb": "lIcr,lGZN,orDX,iY41,iXyb,or6h,aHRH,gbMh,3QFz,drUF,5d4j,3Rh1,5dfF,gcnF,ds9r,dsSx,9kFH,aIt9",
                    8489: "n45r,n2SN,oryj,lHMp,lHpP,orbV,aIt3,kjI9,7YH3,6AO9,3QLh,3Qup,3Rsb,3Rh1,5c+N,6AO9,6B8z,aIPF,aI6F,6ArF,dsSr,drDN,gcnz,iY9F,iXsF,gbGF,gcnF",
                    "63f6": "oqWX,5ct1,3Qup,5chN,drUz,aHRN,iXbH,iXsF,lHkb,lHGN,3R5N,3RgX,lHS1,lIcx,hAxx,eQAh,c4Zx,7Zix,6BjV,6Beh,7Z1F,9kFH,7YBx,7Yqh,lHpP,7YvV,hz/H,hzKV,ds3P,dskN",
                    "54bf": "orn3,iXyh,3QWr,kjCx,5cV3,aIK1,lHS1,lHGH,lI6V,dsMV,dskN,hAxr,hz/N,kj4H,kjlF,aI6F,aHRN,kj4N",
                    5662: "lHB3,oryp,c4aP,lHpV,lI6V,c4TV,eQ83,ds9x,gctb,gbXx,dsHb,eQuF,kjTj,dsqp,hAaX,iY9F,iXP3,hz/N,9kjb,9lbx,aIEj,7YSp,5cV9,3QQV,3QLh,3RDr,7Z1F,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "5f82": "iXbH,or6h,drDH,kjwV,3QFz,gbGF,5dwr,5cJV,5dlb,lI1h,lHB9,5cV9,aIVb,aIt9,gc13,gcth",
                    "5eea": "n45r,n2Yp,5cnp,3QoN,6ACP,3QFF,7Zir,7YkF,3RxP,6B8F,3R03,5c+N,7YMN,aInr,aIPF,kkjr,kjlF,kjTj,lHGN,eQ83,hzW9,hAb1,eQp1,n3zH,orn9,ds3P,iXDV,iYfh,dsHh,ds3V",
                    6215: "hztX,n321,hzKP,hzop,3QQP,orbV,3R03,c4TV,dsMV,6Bpr,5dwx,3RxV,aIK1,oryp,kk8b,lHXF,hzW3,hArV,c3KH,c4aV,c3VX,7Yf1,3QoN",
                    "6ee2": "kjfX,n2Yp,lIcr,lHkh,orJz,kk2F,kjI3,orn9,ePTb,hzKV,hAxx,gcEx,eQFV,ds9r,dsHh,3Rbj,dsqp,3RDr,3QLh,6B8z,5dlh,9kur,9l0h,3Quj,c3/F,hziH,ePCp",
                    "905b": "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,dsqj,7YSp,aIhP,aI+V,hz/H,iXJx,hzW3,ePYV,ePTh,n3dh,orsN,n3KX,n45x,lIcx,gcEx,eQFV,gcth,eQjj,hAgF,n3QF,7ZcP,dsMV,ds3V,7YvV,7ZcV",
                    "5b53": "oqRN,or+3,k0cZ,5kgJ,3QYT,3QSX,5j+B,iyZd,9JjB,6NCj,6NIp",
                    "753e": "pWfz,luMx,h3RF,h4jJ,lveH,pWJP,pXbJ,lvIR,h4NP,9Ith,9JBz,5kgD,e8et,e8Ot,5kQP,5jID,e7Gn,e8Oz",
                    "67c1": "3QFz,or0F,6Bpr,3RDx,3Rbp,5c+N,gc6N,dsMP,aIyN,hArP,iYqx,kkjx,kjCx,hzKV,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,oryj,lHS1",
                    "6a97": "kjaj,kjCx,n3ox,n2Yp,gbpN,drDN,hAgz,dsBF,gc6H,gcEx,iYkP,iX+p,lI6P,kk8h,n3zH,n45x,kjYX,lHMp,n3Qz,orJF,3R03,c4m9,3RDr,3RxV,5dfF,9kFN,9kur,5cyF,3Qup,3QoN,aJ4r,aHRN,hztX,hzQx,eQ2x,ePI1,hzu1",
                    "8d3d": "lHkb,lGZN,lHvr,lHXF,eQuF,dsHh,dsSx,eQLx,hzQr,eQdN,ds3P,hz/N,orsN,oqWX,ePI1,drJp,iXsz,gbpN,9kA3,7YH9,5cJV,3QFF,3Qup,7YH3,5d4p,3RmF,3Rsh,7Z1z,c4IF,c3/F,7YkF",
                    6715: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QWr,c4D1,kjZ1,kjI3,kkdV,orn3,lHMp,lHXz,orUV,eQ2r,eQLx,3RDr,c4D1",
                    "71f9": "orhr,oqLN,or+r,orsN,kjNH,orJF,n3KX,kk8h,dsHh,c4IF,c4D1,dskH,dsqp,gcnF,kk2z,hA5p,hz/N,kjCr,hzFh,eQ2x,c3VX,c3/F,dr+h,kjrh,n321,kj4H,or0F,hziH,hzop,kjlF,gbGz,drJp,drDN,kkjr,hAmh,eQLx,6B2X,9l0h,3RDr,3RxV,6AZp,9kA9,aIt9,9kA3,6ACV,3Qup,3QoN,9kdz,7Yf1",
                    "78d9": "kjaj,kjwV,drDN,n3Qz,orE1,lHB3,lIcx,gbXr,kjZ1,hAxr,kk8h,hAgz,dskN,dsMV,eQAh,6AIr,dsBF,aIEj,3Rbp,3Rh1,5dfF,9lbr,7ZcV,c4Ob,9l0h,5dwx,ePHX,ePYV,6ACV,6Am1,ePI1",
                    "94b7": "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,lIcr,lHB9,5cV9,5dwx,hAaX,hArV,aI+V,aIK1,hAb1",
                    "955b": "oqWX,ePwN,kjrb,kjap,gbGz,gbvp,c3KH,c45h,gbAX,3QA1,6Axh,3QQP,6AIx,n3ox,n45x,n3Qz,orE1,3RgX,lHS1,3Rsb,c4Oh,c4rN,3R5N,6Beb,6ATN,9kFH,9l0h,eQdH,eQAh,kk8h,kjNN,hAxr,hzW9",
                    "759d": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gbGz,c3KN,kj4H,hzop,5d4j,iX+p,eQFP,5dqV,5cJV,ePYV",
                    8936: "n31X,oqRp,lGZH,lHkh,kjrh,ePwN,3QzX,hzu1,7ZcP,7YBx,dsvX,aIyN,eQLr,n45x,n3QF,iYkP,kk8h,gcnz,kkjx,eQdH,n3zN,n3iV,iXP3,kjCx,gbRP,kjNN,gbMb,ePNF,c4aV,5cPr,aInx,aI+V,5dqV,5cPx",
                    "86aa": "6Arz,or0F,6AIr,5chN,9koP,5cV9,orPb,3Rsh,iY3X,lHGN,gc6H,dsw1,aJ4r,9kFN,ds9r,iXJx,iXbN,drDN,ds9x",
                    8723: "oqWX,6Am1,6AaN,7Yqb,6Am1,6ACP,9kjh,3QQP,9kLp,kjTp,n3Wb,lHXF,lHB3,n3ox,kjwP,kkdV,gctb,gbXx,c4TP,c4gx,9kQX,5da1,3RmF,3RDx,6Bpx,iXyb,dr+h,drDN,iXbN,iXyh",
                    "883c": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,3QWr,3R5N,5dfF,7ZcV,7YH9,9kFH,6ATN,5d4p,3Rsh,3RDx,aJ4r,aIyN,gc6N,ds9x,eQLr,eQdN,dskH,dsMV,c4Ob,c4rN,gcnz,aIPF,lHB3,kjNN,kkdP,lI1h,dr+b,iXyh,iXbN,drDN,dr+h,hAgz,orJF,or+x,hAxx,hAgF,hA5j,oryp,orhx,hzQx,hA5p",
                    "7b60": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,6Arz,gbGF,7YBr,5chN,6ATH,6B31,9l5V,aIJX,9kWF,gchX,c4rN,dsqj,dsSx,5dwx,3RxV,3Rsh,5dfF,drDH,ds9x",
                    "825a": "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,7ZcP,7YMN,oryj,dsqp,dsHb,orPh,gc13,gcEx,lIcr,lHB9,5c+H,aIyN,aI+V,5dqV,5c+N,dsf3,dsSx,iYqx,iXP9,dsf9",
                    "826e": "lhkL,lgj/,aaH1,eY9V,gvF9,eXy/,bN0F,3RJ9,3RPJ,8CaR,3QIj,3QBL,oqYL,orZB,i6I5,i5Hf",
                    "8e05": "or0z,gbGF,ePI1,hziH,hzop,kjrh,n2SH,n3iV,orUP,n3zN,hz/N,eQ2x,kkjr,kjNN,eQAb,kk8h,aIyH,3R5N,3RDx,3R5H,6ACV,9koV,6ACP,3QA1,3QoN,7Z7b,7YMN,dsBz,aIPF,aI6F,drUF,dsBF",
                    "8e40": "kkjr,kjCx,orPb,gcth,gci1,orE1,n3zH,dskN,dsSx,3RgX,c4D1,9kWz,5dwx,5cPr,9kLp,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,aJ4r,aInx,hzzz,6ArF,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "9f0b": "orJz,or6h,lGZH,lIcx,lHpP,kjwV,hzu1,hziN,lHMj,iX+p,hAb1,hAxx,iYqx,9k7X,9l0h,dsf3,5cV9,3R5N,3RDx,5dwx,gchX,dsw1,dr+h,gbMh,gci1,c4Ob,6Beh,6Am1,c3W1,c4Oh",
                    "9c9b": "iXbH,or0F,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,iXUH,gbXx,gcEr,iYfh,eQAb,c4Oh,3QWx,5chH,6ACV,3RDr,c4rN,eQdN,lIcr,lHB9,oryj,n3L1,9koP,hzKV,hzop,9k2p,9koV",
                    "9e58": "kjaj,kjlF,gbGF,eQ2r,gbXx,gbpN,ePwN,gbvj,n2Yp,n3iV,gbRV,aHXj,aIhV,7YvP,7Y9p,5cyz,3QLh,5cJV,ds3V,drJp,3Qup,7Z1z,7YH9,5d9X,3RmF,3Rsh,6Bpx,c4Zx,c4rN,lHGN,lI6V,eQFV,dsHh,eQuF,iY3X,hAgF,orJz,lHMp",
                    "9b13": "n3iP,n321,hzu1,ePCp,ePYV,gbMh,hziH,hzQx,kjwP,kjg1,lHGH,lHMp,n3QF,orPh,lI6P,iY9F,hA5p,hz/N,eQdH,eQp1,hAxx,ds9r,dskN,aIJX,aI6F,5cyF,3QLb,3QA1,3Rmz,3Rbp,5chH,5dwx,7Z7b,7YkF,5d9X,7YY1,aJ4r,c4Zx,c3KN,aHRN",
                    "4e28": "3R03,orn9",
                    "4faa": "orhr,gbvp,iXsz,3QFF,3QWr,6ATN,eQdN,ds3P,iYkV,lI6V,n45r,lIi9,lHvx,orDX,lHXF,lHGH,iXUN,dsSx,dsY9,dsMP,3RxV",
                    "8bc3": "luYt,oqRT,h3zr,h3Lz,5jOz,5jUF,8g3X,5kyL,3Rr1,3Rx7,5kQP,mYMj,mY05,mYSp,bcf7,izrt,izPx,bcDh,bcfd",
                    "90d7": "oqRj,kjwV,iXP9,iXUN,iXbH,iXhp,kjlF,n3ox,orn9,aHRH,iXyh,gc6H,gbpN,3QQP,ePYV,3RgX,n3L1,n45x,kkjx,gcnF,c4Zx,9lbx,7ZcV,7Z1F,5cV3,5c+N,c4rN,c3W1,5ct1",
                    5889: "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,orJz,orE1,n45r,n3iV,5cJV,3QLh,3R03,c4m9,c4TV,3RxV,3Rsh,lHRX,3Rh1,kjI3,kkdV,eQFV,eQ89,hAxr,hzW9,9kA3,9l5V,6BjP,6AO9",
                    "83aa": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,gbvj,hzQx,gbMb,5cEh,3QFF,5ct1,9kur,7Y3N,3QWr,3R09,5d4p,aI+V,5dwr,3RDx,3RxV,9kLp,hA5p,eQAb,gcnF,drDH,dsSx",
                    8572: "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXJr,kjI9,kjfX,iXsF,eQ83,ePCp,3QLb,hzFh,9jYH,9kFN,3R03,5c+N,7YSp,hA5p,iYkV,dsqj,dsSx,3Rsb,dsHh,hzoj,hzW9,c4m9,c3Qp,hzop",
                    "652e": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,n3/P,n3iV,hA5j,oryp,eQLr,hAxx,hzKV,ePYV,9kFH,dskN,9kWz,dsBF,9kur,9l5V,aIVb,aIt9,c4gr,c4TV,9kLj,3QQV,3QLh,6ATH,3R5N,3Rbp,5da1,7Z1z,6B8F,3RxV,3RDx,5dlb,6BjV,lI1b,lHvx,kjCx,kk8h,lI1h,eQ83,eQjp,gccp,gc19,eQ89,gchX,eQp1,eQAh,gcth,gci1",
                    "55b9": "lIcr,lHpV,oryj,lHMp,ePTh,eQAb,eQ2x,lHMj,eQLx,c4xj,hA5p,3Rbj,9kLp,3QLb,3RDx,7ZcP,7YvV,c4aP,c4TV,lGZH,lHeF,c3/F,c3KN,drDN,lGZN",
                    "5c98": "6AlX,oqX1,hzFb,6Axh,6AaN,hziN,aInr,lHvx,lI1h,aIVh,9kQX,5da1,3RmF,3RDx,6Bpx,3QLb,3QQV,5cV9,9kLp,hA5p",
                    7338: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,kjYX,n3L1,kjCr,kkjx,n45x,n3ox,6AIx,3QLh,9lbr,9kLp,dsqj,dsSx,5d4j,hA5p,hAxx,5dwx,5d4p",
                    "60b1": "3QzX,oqX1,n3zH,3R5N,3Rmz,orJF,9kWz,9lbx,9koP,9kFN,eQdH,eQ2x,eQFP,eQuF,kk2z,kkjx,kjwP,kjNN,gbMb,iXsF,drDH,iXbN",
                    "6d35": "kjaj,n2SN,ePCj,hziN,3Quj,c3/F,5dfz,3Rsh,3RxV,5dwx,kkjx,kjCx,gbGz,orn9,dsBz,ds9x,hzQr,hAgF,9kWF,9kux,hzQx",
                    "701b": "kjaj,n2SN,ePCj,hziN,5chH,c3W1,3QzX,5cyF,c3/F,c45h,c4aV,5cJV,3QLh,6Arz,6ACV,9koP,9kdF,aInr,aIEp,7YSp,3QWx,5d4j,7YH9,c4m9,7ZcP,7Z1F,5dC3,3RJ9,3RDx,5dqV,c4TV,c4IF,5dfF,3Rh1,kk8b,kjrh,n3dh,n45r,n321,n3zH,orn9,eQAb,hAmh,hzFh,ePTh,eQAh",
                    "59dd": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,lHB3,hzKV,3Rbj,n3Fp,c4rH,3QLh,5dwr,aIPF,ds3P,dsSx,iYfb,iXJx",
                    "7edb": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,dsvX,3Rh1,c4m3,c4TV,9kA3,7YBx,7Zix,eQLr,eQFV,gcnF,iX+p,oryj,hzQx,lHGH,lI6V,gccp,eQ89,eQ2x",
                    7480: "mXV/,mXy1,mY61,k06T,k0T9,mYSp,k0u/,orI5,cEQB,h4jP,3R2T,fDsd,5kWP,5kmP,8glZ,8gQ3,bcPd,bclj,e8kt,e8UF,fDQb,h4vR,5kEH,e8Cx,8fZL,6MA3,6Mo1,mXJZ,6MA3,fCNX,fDa5",
                    6984: "3QFz,or0F,3QWr,3R09,9kR1,c4D1,6B2X,5da1,3RmF,3RxV,5dwx,6Bpx,9l5P,eQFV,eQ89,9kA9,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,n3or,iXJx,hz/H,orsN,orJz,iX+p,lIcr,lHS1,hArP,kk2F",
                    6225: "kjCr,kjg1,iYqr,iXUN,n3/P,lIcx,orJz,7Z1F,3RxV,5dwx,gcEr,eQLx,3QWx,3QQV,6AaH,6AIx,9kur,9k2p,c3Qj,c4gx,aHRH,drP1,ePTb,6Axh,n31X,n3ox,hzQx,hzu1,n321",
                    "6c15": "hziH,or0F,n3/P,n37F,kjrb,kk2F,hztX,hAmh,gcth,6Beh,3RDx,6Bpx,eQ2r,7YBx,5cEh,3QA1,3Qup",
                    "98d9": "lHvr,lGZN,or6b,n3iV,or0z,kjlF,gbpN,gbXr,kjlF,ds3P,6ACV,3QFF,5csX,6Agp,3QoN,drJj,6Agp,c3/z,drP1,c4m3,ds9x,aIcb,aIyN,aHRH,aI6F,5cPr,6ACV,3R03,6AZp,n3Fp,n3/V,6BjV,3RDx,eQoX,9l0h,9kQX,gcth",
                    "619d": "n37z,or0F,n2SH,n3ox,hziH,hzKV,ePNF,9kdF,9k81,ds9r,drDN,oryj,kjI9,lIcr,lHGN,lI6P,iYkV,gcth,aIyN,aJ4r,hA5p,iX+p,6Bpr,7ZcV,6B8z,5dfF,3Rh1,3QQV,5cEh,6Axh,5chH,6Agp,6ATH,7YH9,lH3j,lHpV,iXDV,iXhp,lH3p",
                    "77bd": "kjlz,or0F,kjaj,kjwV,n3or,n2SN,lIcr,lHB9,iY9z,orJF,iXUH,iYkV,hArV,c4xp,c4rN,c3KH,c4gx,drOX,c3W1,c45b,dr+h,hA5j,c4TV,c4Zx,6Arz,6AZp,7YSj,7YkF,ePYP,hzKV,hzop,ePCp,ePYV,aIPz,3RmF,3QFF,aI6F,aIPF",
                    9503: "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,aIhP,aHRN,c4Zr,c4gx,7YH3,7ZcV,3RDr,3QWx,c4CX,3Rh1,gbGz,3QFF,6ACV,lHGH,lI1h,gcth,gc6N,lHGN",
                    "74e0": "or0z,kjlF,gbpN,kjlz,gbXx,lGZH,lHpV,gbMb,gbB1,drDH,ds9x,dr+b,9k2p,9koV,6ACV,3QFF,5ct1,3QWr,5cV9,lHB9,n3/V,lHXz,dsBF,3RDx,5dlb,6B8F,5da1,5d4p,kjTp",
                    "764d": "n3Fj,orsN,lIcr,lH91,6Am1,3QoN,5cJP,5cyF,aI6z,aIhV,gbRP,gbGF,gchX,gc19,gcEr,gcth,aIVb,aJ4x,5dlb,5dqV,5dwx,gcyP,5dqV,hA5j,iXUN,gccj,7YSp,3QWx,3RgX,7YH9,dsf9,gbMb,5cEh,c3KH,ePI1,kj4H,hzop",
                    "531a": "q2J7,q1ih,5qXh,5smd",
                    "50a5": "iXbH,or0F,3QzX,kjg1,3QQP,9kFN,c4rN,c4CX,5da1,3RmF,3RDx,5dwx,hArP,kkjx,kjwV,hzFh,oryj,kjTp,lHXz,n3Wh,n3or,lHB9,c4gr,gbXx,gcth,c4Oh,c4gx",
                    "8c16": "kjfX,n2Yp,gbpH,gbB1,5ct1,7Yqh,3QLb,9kFN,hA5p,iY9z,lI1h,iXP3,kjCx,kjTj,iY41,orPb,lHpV,hzKP,hArV,eQLr,ePTh,c4rH,c4TV,9l0h,3R5N,3R09,9kFH,5dfF,3RxV,3RDx",
                    "755a": "mXQ3,pWrH,mYAb,mXK3,orH/,lvON,cEmr,lvkD,iA5z,iyNh,cFGP,izJB,5kgD,e8et,9Izd,9JvD,e8Ix,5kKT,5jOz,e7Mj,e8ID",
                    "82aa": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gctb,gbB1,3QA1,3QFF,6ACV,6Bpr,5dwx,3RxV,3Rsh,5da1,7YMN,eQ89,aI+P,aI6F",
                    "83f8": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,hztX,gbGF,eQ2r,ePwN,ePHX,6Am1,3QoN,aI0X,aIhV,3QQV,3QLh,3RxP,3RmF,7YMN,aIJX,9kWF,9l0h,gcnz,c4Zx,c4m3,hAgF",
                    "5c2c": "pW9t,8fNP,5jCx,8gfT,bcrf,izDv,8gDX,izPx,8gW3,5kWV,5k4H,6MM5,j/WR,j/yN,pWVL,h47D,h4TP,orI5",
                    5476: "iXyb,iXUN,c4rN,3QA1,6ATH,aIhV,orbV,kjYX,kkdV,aI+V,3R5N,3RDr,9kR1,hAb1,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "8f94": "n31X,kj4N,hzu1,iXsz,drDN,dr+h,aHRH,aIch,iXP3,aIt9,hA5j,hzFh,orn9,lHMj,lHpV,n3Wb,kjZ1,hAmh,kkjr,dsw1,dsSx,aIEj,aJ4x,ePYP,eQjp,7Z1z,3RmF,3QFF,7YkF,7Z1F",
                    "5d5b": "n2Yj,lH3p,kjap,kkdV,n3/V,kjI3,orn9,ePwH,ePI1,iXP9,hz/N,eQAh,eQLx,dsHb,5dlh,3RmF,5da1,c4CX,7YY1,ePYP,eQjp,9kA3,9k81,6AlX,6AO9,3QzX,c3W1,c4m9,5cV9,3QWx",
                    9995: "gbpH,oqRp,kjaj,kjrh,hzzF,gbAX,5ct1,7Yqh,9l5P,9koV,aInr,aIVh,c4TP,c4aV,9kWz,dsBF,dsf3,9kA9,7YMH,3QQV,3QLh,6ATH,3R5N,3Rbp,5da1,7Z1z,6B8F,3RxV,3RDx,5dlb,6BjV,ePTb,hzFh,hAxx,eQLx,oryj,hA5p,n3iP,n3/V,eQ2r,gbXx,gc6N,eQdN,eQ2x,eQoX,eQAh,gcth,gci1,eQp1,lHvr,kjCx,kk8h,lI1h,lHvx",
                    9604: "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,9l0b,7Z7h,7YMN,9kA9,hzW9,kjTp,kjwV,hzzz,lHvx,dsvX,dr+h,kjaj,3Qup,gbMb,gci1,aIK1,aIch,gbMh",
                    "6e6e": "luYt,oqRT,mYSj,mXQ9,e8wv,mYul,mYc7,e8et,fCU1,iyNh,3QuN,cEEF,5kWP,5jUF,cF6J,5kmP,9JBt,9ILl,iz9f,iz/z,e8Oz,e7Yl,iz9l",
                    9026: "lH8X,oqRp,n45r,n3dh,dsBz,c4Oh,c4m3,ds9x,6ACP,iXDV,iXUN,7YMN,6AO9,6B2X,iY41,iYkV,7ZcV,6Beh,3RDr,3QLh,6Am1,hzu1,hziN,6AlX,3QoN",
                    "5ad6": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,or+r,orhx,gcnz,orJF,oryj,gccp,dsHb,dskN,aInr,aJ4x,aIJX,5da1,3Rbp,5c+N,9kFH,3QQV,5dqP,7Z7h,kjI3,kkdV,gcyV,gc19,kjI9",
                    "7f25": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,9kFH,3QQV,5dqP,7Z7h,5c+H,3Rbp,5da1,aIK1,aInr,aJ4x,dsHb,dskN,orJz,gcnF,gccj,oryp,or+r,orhx,gcyP,kkdV,kjI9,gc19,gcyV",
                    6809: "3QFz,or0F,gccj,3Rbp,gbXr,gcyV,7ZcV,6Beh,7Z1F,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,lIcr,lHvx,orPb,iYfh,iXUH,orsN",
                    "69f2": "3QzX,oqX1,3QQP,gbRV,gccp,5d4p,3R5N,6AO3,gc19,kjTp,kjCx,iXDP,n3ox,iXbH,iXsF,c3KH,gbvp,dr+b,ePNF,c4xj,c4aV,aJ4r,aIK1,orUP,3RxV,iYfb,kk2F,gcnz,eQAh,7YvP,7YSp",
                    6661: "ePNz,ePwN,lIcr,lHpV,orJz,n3Wh,3Rbj,oryp,5dfz,3Rsh,5dqV,hArV,hzKV,3QQV,9l5P,9koV,ds3P,dsMV,lGZH,lHeF,7YkF,7Y3N,lGZN",
                    "80db": "iz9f,iyTn,cEKv,cEEF,cEsD,3QoH,5jID,oqRT,or7R,5j+B,3QGV,mYuf,3Rl5,izrn,iz/z,e8en,mYcd,mYMj,e8Oz,e8et",
                    7173: "oqWX,6Am1,3QoN,5cEb,7YkF,iXbH,ePwN,hztX,kjrh,iX+j,iXDV,dsf3,orn9,c4Zr,c4IF,hAgz,hAxx,3Rbj,6B8F,n3QF,n45x,5dwx,3RxV,5dlh,7YvP,ds3V,dsqp,7YSp,7YvV",
                    7826: "pWlv,fDa5,fCO1,h4dD,fDa5,orZZ,k0v5,iA5z,fE6p,fDKl,h4pL,pWPL,lv8v,lvqJ,fCZZ,mXK3,cFGP,cEmx,cF0D,8fTV,6Mu7,6Mo1,8fZL,8gK7,5kKT,5kEN,5j+B,8fZR",
                    9497: "h3zr,pWfF,lveB,luYz,mYc7,mYMj,fE0j,5kaD,8g3R,5jUF,h3RF,h3Lt,h41H,cEQB,cEmx,izJv,h4vR,k0cT,fDsd,5kWV",
                    9542: "gbpH,or0F,kjwP,kjg1,iYqr,iXJx,dsSr,hAgF,orDX,eQp1,kk2z,n3/V,n3u3,kjTp,ds9r,hA5p,gbAX,gbMh,c4aP,c3KN,aJ4r,aInx,aIVb,9l0h,5d4p,3R09,3QWx,3RDr,3RxV,5dfF,9kFN,dsqp,gbGz,3QFF,6ACV",
                    "9e5e": "n3or,lGZN,orJz,lHMp,iY9z,kjZ1,gcnz,gcth,hArV,lI6V,lHGN,dskN,dsSx,6Bpx,3Rsh,3RmF,5da1,9kA3,9l0h,7YBr,5cPx,5chN,7Y3N,aInr,aHRN,ePCj,eQ2x,drDH,gbvp,kj4H,iXhp,iXsz,kjg1,kjCr,iXDV,5cyz,ePNF",
                    "88ce": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,5dwr,5cPx,dsvX,5da1,ds9r,dsSx,9l5P,9kA9,aIhP,drUF,ePTh,hzW3,lHB9,lI6V,hArV,hzW9",
                    "4eeb": "orbP,iXhp,iXbN,3QFz,kjlF,9l0b,3RDx,5dqP,5cJV,iY9F,dr+b,orE1",
                    "4ea0": "18x/z,1mgtx,11DtH,11JDx",
                    9672: "orUP,n3ox,5d4j,n3Fp,5cyz,5dC9,aJ4r,aIch,hAmb,c4Oh,c4gr,hzQx,eQLr,ePTh,iXyb,iYqx,aHXj,9k81,aI6F,gbGF,hzu1,iXsF,n37F,n2SN,3QoN",
                    "57cf": "oqWX,6Am1,6AaN,7Yqb,6Am1,3QFz,c4rN,eQdN,ePYV,iXP9,lHB9,lHkh,hzFb,hziN,9koP,3Rbp,3RDx,7YMH,7Zix,gchX,7YY1,eQLr,eQAh,lI1b,7Z7h,lHMj,n45x",
                    8331: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,3R03,iXP9,5dwr,5dqV,aIEp,aIhP,6ArF,5cnp,5chN,c4Zr,c3KN,gbAX,gcth,ePCj,hzu1",
                    "84bf": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXP3,kjI9,iXbH,iYqx,3Rmz,3RxV,aI+V,aHXp,3Qup,gbGz,gcnF,dsBF,drUF,gbGF,7Yqb,7YY1,5da1,5cEh,7Yqh",
                    "63ce": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,iXDP,lHvx,lIcx,iYkV,hzQr,hAxx,c4TP,c4m9,5cJP,5dwx,orsH,n3Fp,eQ83,9kA9,9l5V,eQFV,eQ89",
                    5522: "oryj,iX+p,kjYX,n3Wh,n3or,kjNN,gccj,9kLp,5cPx,3QLh,3QFF,9kur,iXJx,iYfh,9l0h,9kLj,3RxV,3RDx,iXbH,iXyh,9kjh,9jYN,iXbN",
                    "56e1": "jGOf,jFNv,jGuT,eXLZ,aahb,8BZZ,8BTz,8CHl,aaAJ,dkPx,mQQb,q1ib,q2Jd,5smd,5qXh,q1ih",
                    "72b8": "n2SH,iXyh,6Axh,3QA1,5cnp,gbMb,c3KN,orbP,hziN,kjNH,eQdN,eQLx,6Bpx,3Rsh,3RmF,5da1,aInr,aIVh,gctb,n3Wh,n3u9",
                    6019: "3QzX,oqX1,orDX,c4D1,iXJr,iYqx,gbMb,iXsF,iXbH,ePwN,5cV3,5dqV,c4TV,c4m9,5cV9",
                    "6cd4": "kjfX,n2Yp,iYqr,iXyh,orPb,5dlh,5cPx,orhx,c4Ob,c4gx,3Quj,c3/F,hziH,ePCp",
                    "6ef9": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QFz,6ACV,kjwV,kkjx,iYkV,gbXr,hAgF,iXUH,gc6N,eQjp,eQAh,gcyV,c4m3,dsMV,9kLj,aIyN,c4CX,5da1,3Rbp,5c+N,c4Ob,9l0h,9kur,9lbx,orsH,kjNN,n3Wb,n3zN",
                    "5c63": "j/KJ,k0N3,or+3,oqXP,8fNP,3QoN,e82l,3QSX,bbT3,fDm7,izfl,fD49,izJv,3Rl5,3RJ9,3Rk/,6N8j,3QYT,9J7t,6N8j,8gPZ,8gy5,cF0D,cFGV,h4jJ,cF6P,fE0d,fDKl",
                    "9a98": "ePCj,n2Yp,n3dh,lHkh,kjlF,iXyh,hzFh,gbGF,hzu1,hzQr,hzW9,iXUN,kjI3,lHB9,n3u9,kkjr,kjCx,n3KX,n3/V,gchX,orE1,hArP,eQjp,eQ89,drUz,dsBF,aIPF,c45b,9kjh,9l5V,6BjV,3RmF,3Rbp,5chH,6B31",
                    "987c": "mXV/,mXy1,orZZ,orjT,izxt,orI5,cFcF,8gr/,5kgJ,3QSX,3QMR,8grV,5kKT,3RJ9,8gK1,izVD,izln,8g9T,8fZL,6MA3,6Mo1,mXJZ,6MA3,fCNX,fDa5",
                    "683e": "n3u3,orhx,lGZH,lIcx,ePYP,lHpV,lHMj,eQjp,eQFP,iY9F,iXsz,ePCp,3R03,dsf9,5dwr,5dqV,6B8F,7YSp,9kFN,9kur,7YvV,6ArF,5cnp,5chN,aJ4r,aHRN",
                    "8f71": "or0z,ePCp,eQ2x,hzFb,gbMh,3QLh,7Y3H,9kux,lHvr,lGZN,iYqr,iXUN,c4Iz,orJF,c4TP,5dqV,5d4p,c4xp,c4TV",
                    "89d1": "kjrb,or6h,n3or,n3dh,iXP3,kjNN,kjap,6Agp,5chN,6AO3,6ArF,c4gr,6AIx,6Axb,c45h,aI0X,9kjh,7YBr,aIyN,3QQP,3QWx,5c+N,9kWF,hAgF,9kWz,5dfF,3Rsh,3RDx,6Bpx,aI+P,lI6V,lHMp,aIEp,gc13,eQ89,ePTh,gbGF,iXsF,hzKP,gbB1",
                    "817c": "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,5kmJ,k0j3,orO1,5kEH,k0B1,bcld,bcDh,fDQb,fDyj,orjN,os49,5kax,k06T,k0N3,5kQP,5kaD",
                    "795c": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ePYV,orDX,aIK1,hzQr,hAxx,5cV3,aIt9,aI+V,5dqV,5cV9",
                    "76f9": "hzzz,hziN,c3KH,c3/F,6Bpr,3RDx,3Rh1,5d4p,oryp,kjwP,kkdV,hzQr,c4gx,c4Oh,hAmh,n2SH,n37F,6ArF,6AaN,n2SN",
                    "94d2": "gbpH,or0F,kjCr,kjg1,lIcr,lHB9,3Rsb,lI1h,5cV3,5d4p,7Zix,aIyH,aIVh,aHRH,aInx,gbRP,gbB1,gctb,gc6N,5c+H,lHGN,6ACP,3QFF,gbGF",
                    9572: "ePwH,oqX1,kjlz,kjap,kjwP,lHpV,lIcx,kkjx,eQAb,gcyV,iYkV,iY9F,gcnF,aJ4x,c4rH,c4IF,9l0b,9kA9,5dqP,6Beh,5c+H,3Rbp,5da1,9kR1,3QQP,7YMN,6Axb,3QA1,gbB1,gbvj,gbGF,c45b,c3KN,aIhP,gccp,iX+p,iXP9,kjI3,hzW9,ePYV,dsf3,gbXx,oryj,n3L1",
                    "75eb": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QWr,eQ2x,eQoX,5da1,c4Ob,c4rN,7ZcP,aIPF,5dlb,3RxV,5dwx,hAxx,hA5p,iXJr,hzW9,aIEj,7YH9,gbGz,c3KN",
                    8027: "3QFz,or0F,3QWr,3R09,5d4p,aI+V,aInr,aJ4x,dsqj,9kFN,5dfF,3RxV,3RDx,hAgz,dsSx,ds9r,hA5p,drDH,ds3V,hzKP,hzop,lGZH,lHpV,kjTj,n3u9,n3/P,kk2F,iXJr,iYqx,orDX,eQp1,9koP,aIch,c3VX,6AaN",
                    "98a6": "gbMb,or6h,ePwH,hzW9,iXmX,hziN,kjI3,kj4N,n3db,n3ox,kjfX,n321,or+r,oryp,lHXz,orJF,iY9z,hAgF,eQjp,eQFP,hAgF,hArP,lI6V,lHMp,hA5p,eQ83,7YH9,5cyF,5dwr,5ct1,3R5H,6ATN,aI6z,aIPF,7Z1z,dsBF,drUF,7YkF,7Z1F",
                    "86ed": "pW9t,5jOz,5jCx,6MS5,5jOz,5k4B,9ILl,5kWP,5kaD,e8wv,5kyR,bcf7,bcPj,izVx,fE0j,h47x,h4HT,mYAb,h4dJ,mY61,mYSp,j/WL,e7Yl,e7Ah,j/yN,j/WR",
                    "877b": "oqWX,5ct1,5chN,6Axb,5ct1,5cJP,7Yqh,3QWr,gbXx,gcEx,5dwx,3RxV,5dlh,aIJX,3Rh1,dsHb,c4IF,c4xj,dskN,aI+P,aIyN,7YMH,7ZcV,orDX,gci1,kjCr,kkjx,iXyb,dr+h,drDN,iXbN,iXyh",
                    "87d3": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,5cV3,5c+N,9kWF,6Bpr,9l0h,c4Zx,aIt3,eQjp,7YH3,7YMN,aIK1,dsqj,aIPF,5dfF,3Rh1,eQoX,hAb1,lI1h,lHGN,iXJr,oryp,hzW3,hArV,eQFV,eQ89,hzW9,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7b2a": "j/yH,pWlB,mYc7,mXK3,mYSj,mYul,k0MZ,mYAh,pX5N,k0j3,k00R,mXQ9,e7Sj,e8Cx,5kWP,5jCx,h4BH,bcDh,bbT9,h3RF,h4BN",
                    "7bab": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,kjTp,iXDP,lHeF,3R5H,iXUN,7YXX,5dfF,3RxP,9l5V,9kur,5cJV,9kdz,6ArF,3Qup,c3VX,c4Oh,hAmh,hzu1,eQLr,ePwN",
                    8221: "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,5dwr,5cV9,lHRX,5da1,lHB3,lI6V",
                    "7c91": "3QFz,or0F,c45b,aIhV,7Y3H,drP1,gbXr,gbpN,lHvr,iXyh,hzzz,lGZN,eQoX,lHS1,eQ83,eQFV,lI6V,lHB9,5cV9,3R5N,3RDx,6Bpx",
                    "9eb8": "or0z,drUF,7Y3N,drDH,ds9x,hzKP,hzop,lGZH,lHvx,iYkP,iX+p,dskH,dsSx,orJz,aIPF,3R5N,3RDr,aIPF,5cEb,7Yf1,3QoH,3Qup,9koV,aIhV,aI11",
                    9190: "n3or,n2SN,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,iY3X,iXUN,gcEr,gcth,aIVb,aJ4x,3RgX,6Beh,lI1h,lIcx,5dwx,3RxV,oryj,dsqp,iXbH,5chN,5cPx,iXJx,iXbN,7YXX,7YMN,dskN,dsw1,7YY1",
                    "8df7": "lI6P,kjI9,iYkP,eQp1,dskN,dsf9,drUz,ds3V,drJj,5cnp,5chN,7YvP,5cnp,hzzz,6ArF,aI+P,aIt9,aIPz,5dfF,3RDx,6Bpx,3R03,6AZp,aIEp,gcEr,dsSx,dsMV,hAb1,lHMp,oryp,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e8f": "6Arz,hzzF,6AaH,6ACV,drJj,6Agp,ds3P,drUF,gc6H,eQ89,5c+H,eQdN,gbXr,3QWx,kjI3,iXP9,iX+j,iYqx,5dwx,3RxV,5dlh,6B2X,6Beh,9l0b,9kR1,c4CX,c4Oh,eQAb,eQp1,6B8z,gcnF,n45r,n3u9,orPb,lI1h,lHMj,oryp,n2Yj,n3iV,hzKV,hzop,n2Yp",
                    "970f": "orUP,oqRp,gc13,orn9,gcnz,gci1,iY3X,iY9F,iXsz,iXyh,gbMb,gbGF,hziH,lGZN,lIcx,hAxx,3Rbj,dsqp,6Bpr,6AZp,9kLj,9l5V,c4Zr,c4xp,c3KH,c4aV,9koP,9k2p,6AaH,6ACV,ds3P,3QQV",
                    "9cb2": "j/yH,pWfF,mXJZ,mY0b,iz3p,9IFp,e7Gh,e82r,6MS5,5jCx,6Ne9,5kmP,5kgJ,e8et,bcf7,bcrf,cFGP,8gE1,6NIj,5kWV,5kKT,6Nqh,e8Cx,lvqD,lv+P,9IRl,izfr,iyTn,9Itn,9IRr,iz/t,or+3,orpZ,izrt,iz/z",
                    "9cdd": "j/yH,pW9z,mXJZ,mY0b,iz3p,9IFp,e7Gh,e82r,6MS5,5jCx,bcVj,bc97,e8Ot,cFuT,cF6J,e8et,mYuf,bcxl,mYc7,mYSp,pWJJ,orB/,orNX,pX5T,k0cT,k0N3,h4NJ,h4dJ,9IRl,izfr,iyTn,9Itn,9IRr,8glZ,8gQ3,5kQP,5kmP,8gm3",
                    "9b51": "or0z,lH3p,drJp,ds3V,lHpV,lH3p,drUz,lHeF,hzoj,hzKV,drOX,7Yf1,3QoN,dr+b,5cEh,3QQV,3RDx,5dwx,6Beb,6BjV,dsMV,dsf9,6AO9,9kFH,9kLp,aIPF,9kWF,eQoX,9kLp,kjTj,hAgF,hA5j,kk2F,iXP3,gc19,gcyV,iYkV,lHvr,lIcx,orDX,n3L1,aIhP,9koV,9kux",
                    "9ee0": "7Ykz,n37F,7Y3H,7YBx,c4aP,c3Qp,kjwP,iXyh,iXmX,kjap,kkjr,kjNN,eQjj,eQFV,orJz,eQuF,3QLb,5cEh,5csX,3QA1,5cPr,3QWx,3QoH,5chN,n2SH,n3ox,gbXx,gbpN,n2SN,aI+P,5dqV,5d4p,aIEp,aI+V",
                    "9f10": "oqRj,orJF,lHB9,lIcx,iYqx,hArV,hAmh,iY9F,hzKP,hA5p,eQjj,ePYV,eQAb,aIVh,aIyN,3R5N,7YMH,7ZcV,3RxV,3QWr,aInx,aI11,ePI1,7YBr,7Y3N,7YeX,5ct1,3Qup,hziH,hzop,n3iV,orbV,kjTj,c4xp,c4aV,kjwV,kjTp",
                    "502c": "orbP,iXhp,iXbN,3QFz,kjlF,dsqj,3Rbp,gbXr,gcth,oryj,iX+p,lIcr,lHMp,9koP,9lbx,dsHb,iYfh,iXJx,ds9x,dsHh",
                    "8bf0": "luYt,oqRT,h3zr,h3Lz,5jOz,5jUF,8g3X,fE6j,fDa5,pWPF,fDEf,iz9f,mY67,lv+J,lvkD,bc91,bcJn,5kKT,5kaD,bc97",
                    "52ac": "hziH,or0F,lH8X,lHB9,6AO9,5cPx,6ACV,kjNH,kkjx,5dwx,3RxV,5dlh,3R5H,9kWF,orJF,aIhP,hzKV,hzu1,aI11,aIhV",
                    "82ab": "iXDP,orbV,oryj,iX+p,lGZH,lIcx,gcnz,gbGF,c3Qj,c4TV,c4aP,7YvV,5cyF,3Qup,3QoN,6Bpr,3RDx,3Rh1,5d4p,c4xp",
                    "83e5": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,3QFz,hzzF,3QWr,6ATN,gc6N,hArV,c4rH,c4Zx,3Rsb,c4Oh,aIcb,7YBx,6AaH,drP1,eQ2r,ePwN",
                    8627: "n45r,n2SN,kjNH,kk8h,orDX,lHS1,lHkb,or6h,hztX,kjap,ePwH,ePI1,6Am1,3QoN,6AlX,3QLh,3RDx,5dwr,9kWF,5dfF,5da1,aI+P,9l0h,dskH,9kWF,c4xj,aIt9,aInx,7YBr,7YH9,9kFN,7YXX,6AZp,5cV9,5cPx,dsSr,ds3V,gctb,eQuF,eQdN,gc19,hzW9,eQ2r,hAb1,hAxr,iYqx,iXyh,6Axh,5cyF,lHGH,iXUN",
                    5454: "orDX,hAb1,6AO9,3QQV,3QLh,5d9X,6AZp,3RDr,c4IF,hAgF,hzQr,hAxx,kj4H,kjrh,c45h,c3KN,kj4N",
                    "55d1": "lI1b,lHvx,hzKP,hAxx,oryj,hA5p,ds9x,dsMP,ds3V,c4TP,eQAh,3RxP,9l5V,9kjh,3QLh,3RDr,3QFF,9kQX,3Rh1,3R03,9kA9,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "5ccb": "6AlX,oqX1,5dfz,3Rsh,3RxV,5dwx,kkjx,kjI9,gbRP,orsN,dsBz,dsf9,iXyb,6Axh,6AaN,iXbN,hzW3,9kA9,9kWF,hAgF,hzW9",
                    9969: "gbpH,oqX1,gbAX,5ct1,9koV,hzFb,iXDV,kjwV,kjap,gbRP,orsN,kkdP,kjI9,gc6H,gcth,c4gr,c4IF,6B8F,3RxV,5dwx,6Bpx",
                    6194: "3QzX,oqX1,5cPr,3QQV,3R5H,5c+N,5dfz,3RmF,3RDr,5dqV,9kA3,9lbx,dsMP,dsf9,hzW3,hArV,lIcr,lHB9,n3KX,oryp,9kQX,lHS1,kjCr,7YBx,kjrb,orn9,gbMb,iXsF,iXbH,drDN",
                    "6e1a": "kjfX,n2Yp,ePCj,hziN,c3/z,9k2p,3Qup,9l5P,9kA9,lIcr,9kjh,kjCr,kk8h,gcEr,gbRV,oryj,gccp,5cV3,dsf9,dsMV,5dqV,5cV9",
                    "5bf0": "n3zH,orn9,kkdP,n45x,n2Yp,kj4N,hzKP,kjwV,kjNH,hz/N,ePwH,eQLx,9kur,5cyF,3Qup,3QoN,7YBr,3QWx,3R09,5c+N,7YSj,5dfF,3RxV,3RDx,7ZcP,5dfF,kjfX,hzu1,hAgF,kk2F,kjg1,c3/z,9kdF,9kWF,c4IF,c4D1,c3/F",
                    "5a62": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,lHB3,oryp,hAmb,hzQx,lHMj,dsqp,9kux,9lbx,3RgX,c4D1,lHvr,ds9x,dsHh,lI1h,lHvx",
                    "7f07": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,3QSR,6N2d,bcfd,6N27,3Re/,3RJ9,e8wv,3Rl5,e82l,e8UF,9JBt,9JjB,lvqD,lvUT,izVx,orU7,orpZ,izrt,izVD",
                    6748: "3QFz,or0F,3QWr,dsMV,kkdV,kjI9,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,hzW3,dsf9,5dqV,5dwx,gchX,eQp1",
                    "69ab": "3QzX,oqX1,c4CX,3Rh1,9kur,9lbx,n3u3,c4m9,kjwP,orsN,iXbH,iXyh,c3KH,gbvp,ePNz,dr+h,dsSr,dskN,gc6H,gcyV,iYkP,iXUN,lHGH,lIcx,orDX,n3QF,dsBz,lHXF",
                    6603: "lvOH,lv2F,e8Uz,e7Mj,8fNP,3QoN,3QGP,3QMR,9J7z,bclj,9J7t,5kEN,3RD3,3RJ9,or1P,orO1,izPx,iz3p,or1V",
                    5216: "hzW3,hzu1,c3VX,c4m9,3QoH,6Am1,n321,n3u9,5cV9,3QWx,3QQV,5dfz,3Rsh,3RxV,5dwx,or+x,9kWz,lHXF",
                    7080: "oqWX,6Am1,3QoN,5cEb,7YkF,5cPr,5cV9,aIPF,dsHh,hAmh,hA5j,eQjp,aInx,aIhV,5dfz,3Rsh,3RxV,5dwx,hAxx,hzW9,n3QF,n3ox,hztX,kjrh,ePwH,iXbN",
                    "782d": "ordR,oqRT,fCNX,or1V,pXbJ,mY67,k0AX,lvIR,izrn,iA5F,h4TV,5kaD,8glZ,5ksL,5kWV,iyZd,izfr,8g3X,8fNP,iyZj",
                    "7f79": "lveB,ordX,orBV,lvCL,fDg5,k0j3,3R2T,izrt,iA5F,5kWP,5kgJ,9J1n,9JBz,e8Ot,e8et,izVx,k0B1,5kEH,izPx,e7Sj,bbZ5,3QAJ,iyZj,e7Ab,bbB1,oqRN,or+3,lv+P,luSD,oqRT",
                    "951e": "gbpH,or0F,kjwP,kjg1,iYkP,iXP9,c4m3,c4Zx,c3KH,c4aV,gbMb,gbB1,gbGz,3QFF,6ACV,aIEj,5cPx,5dwr,aIPF,lHRX,3Rh1,lHB3,lI6V,gcyV,gc19,lHB9",
                    "9e41": "iXsz,or0F,lGZH,lHvx,hziH,iXbN,iXJx,hzQx,ePCj,ePYV,c3/F,5cyF,3QA1,5cnp,aIhP,9jYN,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,kjYX,iY9F,orJz,lHMp",
                    "7aac": "n3u3,orhx,iYkP,kkjx,lIcx,lH3p,iXbN,gbAX,iXyh,gctb,iY41,dsSr,dsHh,gc6N,hzW9,gbXx,drP1,drDN,9kA3,9k81,6AlX,6AO9,3QzX,c3W1,c4m9,5cV9,3QWx,5dfz,3Rsh,5dqV,c4TV,7YXX,c4D1",
                    5261: "orbP,iXDV,gbGF,ePCp,ePwN,iXDP,eQdN,lHGH,hzQx,iXsz,lH91,ds3P,7YvV,5cyF,3Qup,3QoN,c3VX,9k81,5c+H,9koV,c4rH,7YBx,kjYX,9kR1,or+r,5dwx,3RxV,3Rsh,5dfF",
                    "9fa0": "kj4H,orn9,kkjx,kjwP,kjTp,5d4j,aIEp,3Rmz,3Rsh,5dqV,aI+V,aHXp,3Qup,7ZcP,7Y9p,5cJP,aIhV,hzFb,dr+h,drP1,hzu1,hzFh,hzQr,hz/N,dskN,ds9x,hzQx,hAaX,hAmh,dsHh,dsw1,hAb1",
                    "8c36": "kjfX,n2Yp,gbpH,gbvp,5cnp,6AlX,3QoN,5d4j,3QFF,eQ2r,3QWx,ds9r,dr+h,dsvX,dskN,aIyH,aIK1,aIcb,aInx,7YBr,7Yqh,7YXX,7YMN,aJa3,3Rh1,6Bv3,5dC9,3RDx,6Beh,orPh,kkjr,lIcx,gbGz,gcK9,5c+H,eQdN,iXyb,lHpV,orbV,kjCr,lHpV,iXP3,lHMp,oryp,iY3X,lHMp",
                    "573b": "7Ykz,or0F,9kur,6AaN,iXbH,iXJx,orUP,n3u9,6AO9,3QQV,gctb,3Rsh,gc13,gcEx",
                    "82d3": "lIcr,lGZN,orDX,iY41,iXyb,or6h,c3KH,c3Qp,ePYV,hzW9,eQjp,c4TV,c4Zx,dsf3,c4rN,aI6z,aIPF,5cV9,3R5H,6AIx",
                    8478: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,eQAb,ePI1,hzW3,c4m9,6ATH,9kA9,6B8z,3RmF,3QQV,5cEh,9kjh,6AaH,9k81,6Bpr,7ZcV,hztX,hAmh,c4Oh,c3W1,hzu1",
                    6371: "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,lIcr,lHvx,7YBx,3QLh,5dwr,5c+N,aIPz,5dfF,9kLj,9l5V,dsSr,dskN,kk2z,dsBF,hA5j,hArV",
                    "54cc": "orPb,lHpV,9koV,3QA1,6B2X,3R5N,3R09,iXP9,kk8h,hA5j,7Z1F,3RDx,gcyP,dsBF,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5659: "hzFb,oryp,hAxx,iX+j,kjTp,iY9z,iXP9,gbXr,c4gx,c4Oh,gcth,dskH,gci1,gc6H,dsw1,aIEj,5cPx,5dfF,6B31,3Rsb,5dqV,9l5V,9koV,3QQV,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "5f87": "iXbH,or6h,drDH,kjwV,3QFz,ePNF,5dfz,3Rsh,3RxV,5dwx,kkjx,kjI9,gbRP,orsN,dsBz,dsf9,hzW3,hAgF,9kWF,9kA9,hzW9",
                    "81ba": "n3Fj,orsN,n45r,n2Yp,5cnp,3QoN,3QLb,c45h,c4Oh,5dlh,3RmF,5da1,6Axb,6Beh,9l0b,9kjh,eQFP,eQ89,kjI9,iXyb,ePTh,lHkb,iXn1,iXDP,lHB9,kjYX,lHMp,iYkP,iXUN,hAmb,hz/N,gctb,gc6N,eQoX,iY41",
                    "6c35": "k0iZ,ordX,j/WL,fDsd,3QSR,cFcL",
                    "6ea5": "kjfX,n2Yp,lIcr,lHkh,orJz,n3Wh,c4xj,oryp,c4TP,iYkV,iXDV,c4aV,3Quj,c3/F,3RgX,3RmF,5dlh,aIVh,9kjb,9lbx,5c+H,6AO9,dsMP,ds3V,gbRP,gcyV,hziH,ePCp",
                    "66b9": "luYt,oqRT,h3zr,h3Lz,6MA3,3QoN,6MzZ,3QMR,3RJ9,fDm1,5kaD,cEKv,h4dJ,fE6j,fDsd,cF0D,cFAP,9JBt,9J1t,6N27,6NIp,h4vL,6Nkl,lvkx,lvUT,izVx,orU7,orjT,izln,izVD",
                    "5b62": "n2SH,n3ox,kjlF,5cyF,3QA1,5cnp,gbRP,c3KN,oryj,iXJx,kjI3,kkdV,9l5V,7Z7h,7Z1F,9kR1,c4m3,c4IF,gcnF,gc19,5cV9,3R5N,3RDx,5dwx",
                    9095: "or6b,lGZN,iXyh,iX+j,lHpV,oryp,or+r,lHS1,iYqx,c4m3,aIt9,9kA9,9k2j,9l5V,c4TV,c3Qp,5cnp,3QA1,3RDx,6Bpx,hAmb,eQAh,ePI1,hzu1,hAmh",
                    "67fd": "3QFz,or0F,5dwr,5cPx,dsvX,5da1,9kA3,9l5V,eQ83,eQdN,lI6V,n3/V,n3ox,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,eQLr,eQFV,gcnF,kjNN",
                    "6aab": "3QzX,oqX1,7YMH,3QQV,5dqP,6Beh,5c+H,3Rbp,5da1,9kR1,9kA3,9l0h,c4Iz,c4rN,9lbr,gcnF,iY9F,iYkV,gcyV,eQAh,9kjb,gccp,iX+p,iXJx,kjCr,ePTh,c4gx,hzQr,eQdN,kjrb,lHkh,lIcx,kkjx,orsH,n3Fp,iXbH,iXsF,c3KH,gbvp,c45b,gbGF",
                    "8d40": "or6b,ePTh,ePwN,gc13,ePTh,hAxr,eQLx,eQp1,gccp,oryp,n3/P,iX+p,kjrb,kjI9,ePHX,lH91,9kA3,7YH9,5cJV,3QFF,3Qup,7Ykz,c3/F,c4IF,7Z1F,7YH3,5d4p,3RmF,3RxV",
                    8112: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,dsqj,5cPx,5dwr,dsBF,orDX,3Rh1,gcnz,lI6V,lHB3,gccp,eQLr,eQ2x",
                    "721d": "oqWX,6Am1,3QoN,5cEb,7YkF,3Rbj,5c+N,5cV3,3QWx,3QQV,ds3V,dsqp,7YSp,7YvV,aIEj,aIhV,c4Zr,c4D1,dsMP,5dqV,3Rsh,5dfF,9kWz,7Z7h,hztX,kjrh,ePwH,iXbN,iXUH,gc6N,iY9z,hAgF,gcnF,lI6P,kk8h,kjYX,lHMp,lHvr,kjI9,orUP,n3iV,gbRP,iXDV,iYqx,gcEx,gbRV",
                    "78c9": "mY05,mXy1,fCNX,mXQ9,orvZ,orB/,orU7,mYGn,lvON,izxz,izrt,mYo9,izVD,iz/z,fDQb,fE6p,e8UF,bcJn,e8Ix,bcVp,fDm1,fDEf,e8qv,bcfd,bcr9,e8et,3Rk/,9JjB,3RJ3,3RD3,6Nqh,6Ne9,3R2Z,3QYT,8gW3,8g9T,h3Lt,h41H,8g3X,8fNP,h3Lz",
                    "94b8": "gbpH,or0F,kjCr,kjg1,iYqr,iXP9,c4m3,n3L1,5d4j,dsqp,dsMV,5dqV,6Beh,gcnz,3RmF,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF",
                    "955e": "ePwH,oqX1,gbMb,gbvp,c3KH,c45h,gbAX,3QA1,6Axh,3QLb,6AIx,kjCx,kjfX,kjrh,kjTj,kjwV,orbP,lHvx,kjYX,orJF,lIcr,lHS1,hAaX,hAxx,gccj,iY9F,hAmb,c4Oh,3Rbp,3RDr,9l5V,c4CX,c4Zx,3R03,5c+N,eQdN,eQ2x",
                    "75ac": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QLb,6AIx,hzQx,hAxx,c4m3,c4TV,5dqV,3Rsh,5dfF,3R03,6AZp,eQjp,c3KH,gbGF,kj4H,hzop",
                    8941: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,aIhP,drUF,ePTh,n3or,n3zN,iXUN,iXJx,eQ2x,eQdN,5c+N,3R09,5cPx,5dwr,5da1,3RDr,6Bpx,iYfb,5dlh,iYqr,n45x,n3L1,iY41,iYqx,eQLr,aJ4x,aIK1,eQp1,eQLx",
                    8693: "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cPx,6ATH,3Rh1,5dfF,dsBF,ds9x,hzQx,hAgF,lHXF,lHpV,3RDr,or+x,iXyb,dr+h,drDN,iXbN,iXyh",
                    "873b": "oqWX,n321,5ct1,5chN,6ACP,5ct1,9kjb,5cPx,aI+P,aIt9,7YH3,7ZcV,3R03,dsf9,dsMV,5dqV,3Rsh,5dfF,gbXr,gcEx,iYkP,iXP9,lHvr,lIcx,gchX,orE1,dr+b,iXyh,iXbN,drDN,dr+h",
                    "7f36": "j/EN,pWfF,mYMd,mXK3,fCNX,fE6p,bbH1,5jID,5kQP,bcPj,mYc7,5kgJ",
                    "7b6e": "iXbH,or6h,gcyP,gbvp,lHXz,iYkV,lHRX,lIcx,orPb,iXUN,lH8X,lHB9,iXDP,lHeF,3R03,gc19,3QoH,3RDx,6AaH,aI6F,drUF,7YvP,aI6F,6ATH,aIPF,dsBF,7ZcP,aIPF",
                    "825f": "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,3RDr,3QWx,eQoX,3Rh1,c4m3,c4TV,6BjP,6AO9,hzW3,hAxx,kjNH,iX+p,n3KX,oryp,lHB3,lI6V,iY9z,kk8h,eQFP,9l5V,9kA9,eQ89,eQFV",
                    "66a8": "lHvr,lGZN,eQ2r,hzFh,gbRP,ePI1,ePwN,oqLN,orhx,iXJx,iXbN,orUP,orsN,n3Fj,kjNN,kkjx,gcEr,eQLx,eQAh,hAb1,kjZ1,eQdH,orJF,9k7X,9l0h,3RDr,3QoN,c4Ob,6Beh,6Am1,c3W1,c4Oh",
                    "8e59": "ds3P,lHpV,gbXr,dskN,drOX,gbMh,c3KH,ePCp,n2Yp,n45x,orUV,orDX,iY41,dsMV,dsSx,gcEx,hztX,hA5p,kjNH,kjwV,7Yqb,6Axh,3Qup,3QoN,6Axb,3R09,3RDx,9kFH,3R5N,6Beb,6ATN,c3/z,9kdF,9kWF,c4IF,c3/F",
                    "8e39": "n3u3,iXP9,iYkV,n3/V,iY3X,orE1,gbXr,gcEx,c4rH,gci1,5d4j,c4xp,c4Iz,5dfF,drUz,ds3V,drJj,5cnp,5chN,7YvP,5cnp,hzzz,6ArF,3Rsb,5dqV,c4TV,c4m9,3R09,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "9f0d": "kk2z,kjlF,lHB3,iXP9,hziH,hAxx,9l0b,9k81,5dwr,3RDx,3R5N,5cV9,dsf9,oqRj,orbV,n3iV,n2Yp,oqRp,orsH,orPh,n3Wh,n3zN,orsN,lHXz,lHeF,iXsF,iY9F,lHXF,gbMb,dr+h,dsw1,gci1,gbRV,gbMh,c3VX,c4Oh,6Beh,6Am1,c3W1",
                    "9c9e": "n3iP,or6h,orDX,n3Fp,orn3,gbGF,ePCp,ePwN,iYqr,iXbN,lH8X,lI1h,aHXj,gbRV,ePTb,eQjp,c4m9,6AO9,9k7X,9l0h,3RDr,3QoN,eQLr,eQFV,gcnF,iX+p,6Beb,c4Oh,c3W1,6Am1,6Beh",
                    "9ab6": "luSx,lv2F,h3RF,fDm1,h47D,h3zx,fCO1,h3Fx,oqRT,ordX,h41H,bbH1,bc3b,8g3R,8fHT,3QML,5k4H,e82r,e7Gn,3QuT,3RqX,5kyR,6NIj,3RJ9,6Nwn,9Jpx,mYAh,os43,orw3,5kmP,8gy5,fE6j,fDEf",
                    "9b1f": "n3u3,n321,hzu1,ePCp,eQ2x,gbXx,hziH,hzW9,kjfX,kjlF,kjCx,lHGH,lHMp,n3QF,orPh,lI6P,kk8h,iY41,iX+p,gc6H,gcnF,iYqx,dsqj,c4xp,c4aP,ds3V,aJ4r,aHRN,5d9X,6Beh,6ATH,5c+N,3Rsh,3RDx,3R03,3QQV,6ACV,7YvP,5cyF,5chN,c4Ob,c3W1,drP1,dsHh,c4Oh,9kWz,9kdF,7YkF,7Z1F,9kWF",
                    "79ba": "lvUN,luYz,8gfT,orpZ,9Jpr,6MG9,8gK1,bcxl,5kEH,3Rx7,3RD3,5kWV,e8UF,e7Ah,3QoN,oqXJ,orU7,izVD,iyZj,oqXP",
                    "4f7c": "orhr,gbvp,iXsz,3QFF,3QWr,9kR1,hArV,eQR3,lI1h,n45r,lIi9,lHvx,orDX,lHXF,lHMj,hz/N,ds3V,gc6H,c4D1,3RDx,3RJ9",
                    "8bcb": "lH3j,oqLN,iXbH,iXsF,3QFF,3QA1,6ACP,3QFF,7YSj,5cV9,5cPx,n3ox,or+x,n3Qz,6B8F,3RxV,6Bv9,eQ83,eQLx,3RgX,5d4p",
                    "90db": "orsH,lGZN,hz/H,lHMp,kjrb,hzKV,hztX,kjap,ePCj,eQdN,c4aV,5cJV,3QLh,5cyF,aIEj,6AaN,3Rmz,n3QF,n45x,iYqx,gcth,dsSx,9lbx,7ZcV,aIPF",
                    "589a": "oqWX,7Yf1,7Y3N,9kjb,7Yf1,aJ4r,aInx,3RgX,dsw1,9kWz,5dwx,9kLj,5cPx,5cJV,gbXr,ePYV,kjwP,iXJx,n3iP,lHvx,n3zH,n3Wh,eQAh,eQuF,eQdH,hAb1,n3L1,hz/H,iX+p,hAxr,iYkV,hziH,hzFh",
                    8393: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,iXsz,ePCp,ePwN,hAmb,hzzF,aHRH,aJ4x,c4m3,ds9x,7YH3,9kux,6BjP,6ArF,ePNF,eQuF,5dfF,3Rh1,3Rbp",
                    "857b": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hzQr,hzu1,9k81,9kur,9jYN,c3VX,c4aV,ePYP,ePI1,gcEr,gc19,iYfb,9l0h,9kLj,iX+p,9kFH,9lbx,9kdz,5chN,5cJV,6ACV,7YSj,3QWx,5dwr,7Z7h",
                    "5f0b": "pWrB,izfr,5kKT,5kQP,6NIp,8gW9,iyNb,k0N3,pWPF,mYul",
                    5588: "pWrB,fDgb,fDm7,izxz,lveB,lvwP,pWVL,h4vR,fDQh,fE6p,iA5F,lvOH,or+3,bcf7,e8qv,8gPZ,8g9T,mXxX,mXQ9,cEEF,cEmx,mXy1,bc91,5kaD,5kQP,bcPj,bc97",
                    "5c99": "q2v/,oqYL,jFAr,jG/t,ormB,jGbr,eX93,dkpB,dkj1,a9T9,5r8f,5s95,aaU5,dlJT,dlDp,eXYX,jGop,5rEF,eXy/",
                    7331: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,orhr,orUV,kjZ1,eQp1,dsqp,eQdN,iY9z,lHMp,hArP,iYqx,iXJx,ds3P,hz/N,3RgX,c4D1,9kWz,5dwx,5cPr,9kLp,aJ4r,aIhV",
                    "60dd": "3QzX,oqX1,3QWr,hzQx,hAxx,5dwx,3RxV,3Rsh,5dfF,orDX,hAb1,iYfb,n3/V,lHB3,iXUN,gbMb,iXsF,iXbH,drDN,aIVb,eQAh,eQdN,aIyN,aIVh",
                    "6d1a": "kjaj,n2SN,ePCj,hziN,3Quj,c3/F,dsqj,3Rbp,c4Ob,c4gx,7Zir,7YvV,9kux,ePYP,eQ2x,gc6N,hAb1,lI6V,lHB9,hzKP,orsN,iXUH,hA5p,eQFV,eQLx",
                    7039: "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QLb,c45h,c4TV,5dqV,3Rsh,3RmF,c4CX,5da1,5cV3,c4m9,9l0b,9koV,kjYX,kjCx,kkjr,kkdV,n3Fp,orsN,n3u9,lHpV,kjlF,eQFP,hArV,hAgF,eQuF,eQFV,eQjj,hA5p,hzW9,eQ89,eQjp,ePYP,hzKV,hzzF,ePNF,ePYV",
                    "5a08": "n3u3,orhx,lGZH,lIcx,gbvj,iXsF,lHpP,gbRV,gccj,lHMp,iY9z,gcyV,eQ2r,9koV,5d4p,3RmF,3RxV,3QzX,3QLh,7YY1,9kWF,c4IF,c3KH,c4Zx",
                    "7ee0": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,3QML,3QSX,5kgJ,9JjB,orI5,orjN,os49,h4NJ,h4dJ,bcf7,9J7z,5kEN,3RD3,3RJ9,k0cT,k0N3,e8Oz,e8et,k0cZ",
                    7481: "lHkb,lGZN,ePTb,ePNF,ePwN,6AaH,6Am1,7Yqh,lH8X,6Am1,lHGH,orE1,gc13,kjZ1,iX+j,iYfh,dskN,dsHb,hA5p,6Bpr,9l5V,5dlb,3Rsh,3Rbp,5c+N,9kFN,7Z1z,9kR1,5cJP,7YBx,lHvr,c4gx,c4TV,lI6V,lHvx",
                    "696b": "3QFz,or0F,5cV3,5d4p,7Zix,gctb,3Rsh,gbXr,gcEx,5c+H,gc6N,aIVb,aIyN,dskH,dsHh,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,iXUH,n3zN,n3Wh,iYfh,iXUN",
                    6224: "n2SH,n3ox,kjrh,kjI9,c4m9,aInx,ePNz,c4aV,hzzz,hzKV,ePYV,c3/F,aHRH,c3Qp,n2Yp,lI6P,n3Wh,iXUH,iYqx,orDX,7YY1,3RxV,5dwx,eQLr,3R09,3QWx,5chH,5c+N,5cnj,9k2p,9kA9,5cV9,9koP,5cJV,5cyz,9kdF",
                    "6c18": "hziH,or0F,hztX,hAmh,6Beh,3RDx,6Bpx,eQdH,3R5N,ePTb,7Yqh,3Qup,kk2z,kjrh,n3/P,n3Wh,n37F",
                    "98da": "aInr,kjg1,kjCr,aI11,kjYX,lHMp,lI6P,kk8h,gcyP,iY9F,orJF,iY9z,gccp,gc6N,9kLj,aIyN,dsvX,7YY1,6AZp,9kQX,aIPF,6B8z,7YY1,5dlb,6BjV,dsMV,9l0b,aIVh,9l5P,aJ4x,5dwr,6BjV,3RDr,3Rbp,6AO9,n3u9,n2Yp,5cnp,3QoN",
                    "753a": "6MG3,or1V,5ksF,3Rl5,5kEN,orO1,orvZ,os49,fCNX,fDm7,oqLH,orjT,6MY7,6Mo1,oqLN",
                    9502: "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,hzW3,hz/N,hArV,3RgX,lHS1,3QWr,3RDx,9l5P,9kA9,dsMP,lI6V,lHB9,dsf9,dsMV",
                    "765e": "n3Fj,orsN,lIcr,lH91,6Am1,3QoN,3QWr,kjCx,3RgX,6Beh,aIVh,3RDr,6Beh,6Bpr,dsSx,dsw1,6B31,9kA3,7YMN,5cyz,aIhV,hz/H,hzzF,gchX,iY9F,hAgz,hAxx,dsHh,c3KH,ePI1,kj4H,hzu1,c45b,ePTh,eQdN,c4rN,c45h",
                    "53f5": "q2J7,q1ih,5qXh,5smd,bNk5,jGHX,jG51,bMJh,bNkb",
                    "50a7": "iXbH,or0F,3QzX,kjg1,6AIr,3QLh,3RxP,6B8F,7Ykz,7Zix,7YBr,gbXx,iY9F,iYkP,lIcx,lHpV,iXyh,oryj,n3L1,ds9r,dsMV,7Z1z,dsBF",
                    "8c19": "luYt,oqRT,h3zr,h3Lz,5jOz,8fZR,9Jvx,9IXn,h3Xv,h4TV,izxt,k0cZ,k0AX,izJB,lveB,lv+P,pWJJ,mYof,5kax,e88n,e8ID,5kKT,5kaD",
                    "5def": "n2Yj,n3dh,lHkh,hzop,hziN,hzKP,kjlF,ePCj,ePTh,7Ykz,ePNF,7YvP,6AaN,3QQP,6AO9,eQ89,3Rbj,eQjp,5dwr,3RDx,3Rsh,5dfF,eQuF,hAmb,eQFV,gbXr,gcyV,lHRX,gc19,lHvr,lI6V,oryj,n3L1",
                    "829f": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,aHXj,aI11,dr+h,gbMh,gci1,dsw1,c4IF,c4Zx,aIcb,aIK1,9kR1,5cPx,3QFF,3Qup,3RxP,3RmF,6AO9,9koV",
                    "83f9": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,hzoj,ePNF,aI6z,drDN,7Yqb,3Qup,3QoN,3RDr,3QLh,3Rsb,gcth,gbXx,3QWx,7Z7b,7YBx,c4gr,c4Oh",
                    "5c34": "pW9t,8fNP,5jCx,8g3R,8gQ3,8g9N,e88n,e8ID,8gK7,e8wv,8gy5,8glZ,e8kz,8gW3,5kWV,5k4H,6MM5,j/WR,j/yN,mY61,izln,h4jJ,pWJP,pX5N,k0o/,lw4P,lvIR,iz/t,lvON",
                    5466: "n3u3,gbMh,gc6N,kjTj,7Yqh,7YSp,6AZj,9kFN,3Rbj,6B8F,orJF,iY3X,iYqx,5dwx,3RxV,3Rsh,kj4H,kjlF,aI6F,aHRN,kj4N",
                    "561e": "lHMj,lHpV,orsH,hz/N,hzQx,orhx,orPb,6Beh,3Rh1,3RxP,5dwx,hAxx,hAb1,3R03,hzW9,7Yqb,7YY1,lGZH,lHeF,c3/F,c3KN,lGZN,eQjj,aIEp,aIhV,ePYV,eQjp",
                    "5d6f": "8fNJ,pW9z,5jOt,5jUF,6MSb,8g9T,e8kz,mYof,pW/H,orI5,orvZ,pWDJ,mYMd,mY0b,izfl,izVD,j/WL,8fZR,8fBN,j/yN,e8Uz,e82r,bcld,bcPj,5kyL,bcxl,5kWP,5kaD",
                    "5e80": "n3zH,orn9,lIcr,lH91,7Yf1,3QoN,hzQr,6AIx,5cV9,5dwx,7Zix,c4rH,eQAh",
                    9606: "n31X,oqRp,n3db,n45x,5dwx,3RxV,3Rsh,6Beb,6B8F,9kFN,aIt9,9kLj,aIK1,7YBr,5cEh,iXyh,iY41,dsw1,dr+h,gchX,gbMh,lHvr,kjI9,3Quj,kjap",
                    "6e4e": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,5kgD,k0cZ,orI5,5kyL,k0v5,bcf7,bcxl,fDKf,fDsd,or7L,os49,5j+v,j/WR,k0N3,5kQP,5j+B",
                    9011: "lH8X,oqRp,hziH,hzu1,6Am1,3QoN,6AlX,3QLh,3RDx,9lbr,9l5V,eQjp,gctb,dsw1,dsf3,gbRV,9kjb,eQdN,7YH3,6ATN,7YSp,oryp,lI1b,n3QF,iXyb,iYqx",
                    "5ae6": "oqRj,c3Qp,6ACV,5chH,aIch,iXyh,iXbN,hzKP,kjCx,kkjx,hArV,3RgX,c4D1,6B8z,5dlh,6BjV,aI+V,aIt9,5cV9,orDX,kjZ1,lI1b,n3/V,n3u3,lHGN,hAmb,dsHh,dskN,hz/N,hAmh",
                    "7f26": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,3QSR,3QYT,5kmP,6Nkl,9JvD,9IXn,8glZ,5kEN,3RD3,3RJ9,fDQb,cFoN,cF6J,fDyj,lvUN,lvqJ,cFGP,fE6p,fDgb,cEQH,cFGV,izrn,orpZ,orU7,izVD,izrt",
                    "67d8": "3QFz,or0F,aIhP,gccp,lHS1,lHvr,lIcx,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,5c+H,eQdN,eQFV,5dqV,5c+N",
                    "6a44": "3QzX,oqX1,5cJP,5cPx,7YSp,hz/H,3R5N,hzKP,hA5p,iXbH,iXyh,c3KH,ePCp,dr+b,ePNF,dskH,ds9x,aInr,aIyN,hzQr,5cPx,hzW3,lHMp,lHpV,eQjj,n3/V,dsvX,aIK1,5dwx,3Rbj,9l5V,hArV,hAgz,hAxx",
                    6657: "fD43,fCO1,h3Xv,orB/,pWPL,h4TP,orB/,izDp,k0j3,h47x,h4HT,cFcL,mXxX,mXQ9,8fTV,8fBN,mXy1,bc91,bcJn,5kKT,5kaD,bc97",
                    "80c2": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,orDX,3Rh1,gc13,gcyV,kkdP,c4TV,c4m9,kjI9,kkdV",
                    7850: "mY05,mXy1,fCNX,mXQ9,k0H1,k0o/,5kKN,3RD3,5kWV,os49,orpZ,3R2Z,h3Lt,h41H,8g3X,8fNP,h3Lz,fDWh,9JvD,9Jdv,fDEf,fDWn",
                    9495: "gbpH,or0F,gbRP,gbB1,aHRH,aIhV,6ACP,3QFF,gbGF,kjCr,kjg1,oryj,aIEp,3RDx,3QWr,3R09,5d4p,aI+V,hArV,hzW3,hAxx",
                    9535: "ePwH,oqX1,gbvj,gbB1,gbGF,gbAX,3QA1,6Axh,c3KH,c45h,kjrb,kjg1,eQdH,hzQx,9koP,dskN,orsH,3R5N,iX+j,orPh,hAmb,kjZ1,gcyP,5dqV,3Rsh,5dfF,aIJX,9kWF,dsSr,dsqp,eQoX,kkjx,lIcx,lHXF",
                    "9e63": "n31X,oqRp,orbP,n3dh,orJz,lHMp,lI6V,gcyV,eQAh,hAgz,iY9F,lHMj,dsqp,dsSx,5dwx,3RxV,3Rsh,5dfF,9kFH,9l0h,9koP,6AIx,6AaH,aHXp,lH8X,3QA1,3QLb,lHkh,gbpH,gc19,iXhj,iXJx,ds9x,drJp,lHB3,lGZN",
                    "88e3": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,aIhP,drUF,ePTh,hzQr,n3L1,orE1,hAxr,n3L1,gc13,gcyV,7YMH,dsf9,dsqj,7YY1,6Beb,dsMV,5cPr,5dwx",
                    "4ede": "orbP,iXhp,iXbN,3QFz,kjlF,3QQP,3QWx,9kLp,lHMp,lHpP,lIcx,5dwx,3RxV,3Rsh,5dfF,gbXr,ds9x",
                    5156: "n3u3,orhx,lGZH,lIcx,ePwH,iXsF,eQLr,iY9F,c3/z,hzW9,c4Iz,c3W1,aIVb,eQjp,c4xj,5d4p,3Rh1,3RxV,5dwx,6Bpx,c4aP,7YvV,5cyF,3Qup,3QoN",
                    9674: "lHB3,oryp,hAmb,hzQx,lHMj,dsqp,c4rN,9kux,9lbr,9koV,3RgX,c4D1,3QoH,lGZN,lHkh,iXyh,gbB1,dr+h,aIch,9kdF,9k81,aHXp,lHvr,ds9x,dsHh,lI1h,lHvx",
                    "57a7": "oqWX,6Am1,6AaN,7Yqb,6Am1,3QQP,kjwV,kkjx,5dwx,3RxV,3Rsh,5dfF,hziH,hzFh,oryj,kjI9,9kWz,gcnF,gc6N,9kFN,9kWF",
                    "839b": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbpH,gbRV,c3W1,c3Qj,c4aV,7Yqh,3Qup,3QoN,7Y9j,3QWx,3RDx,7YBr,7Zix,c4TP,c4m9,gc13,hArV,7YXX,gci1",
                    "84ba": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hz/H,iXP9,hArP,hzzF,7YkF,3QoN,3QFz,3QQV,9kLp,dsqp,ds9r,dsHh,c4aP,eQ89,9lbr,9kjh,7YSj,3Rsh,3RxV,gbpH,ePCp,drUz,9jYN",
                    6452: "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,iXJr,iYkV,n3/V,n3ox,7YBx,3QLh,3R03,6AZp,dsqp,dsMP,dsf9,9kA3,9lbx,dsBz,3RmF,gctb,eQuF,eQjj,gc6N",
                    5523: "kjI3,oryp,hArP,hzQx,dskH,5c+N,3Rbp,3RDx,6Bpx,7Yqb,aJ4x,lGZH,lHeF,c3/F,c3KN,lGZN,kjCr,kkdV,eQFV,eQ2x,kjCx",
                    "56f5": "jFG/,jFNv,lgwZ,ortf,lh7T,jGOl,jGUV,i5+H,aaaN,8CaX,8CHr,bNkb,dkVR,gvYD,q1ib,q2Jd,5smd,5qXh,q1ih",
                    "72c3": "n2SH,iXyh,6Axh,3QA1,5cnp,gbMb,c3KN,orbP,hziN,lHvr,lI1h,5dlh,5cJP,5dwx,dsHb,ds3V,5c+H,lHGN",
                    6035: "3QzX,oqX1,gc6H,5cyF,5dwr,gcnF,oryj,3Rbp,kkdP,n3Wh,hzKP,hAxx,ePTb,hzzF,iXbH,drDN",
                    "6cad": "kjfX,lH91,n2Yp,hAxr,hzFh,n3Wb,kkdV,3Rbj,oryp,gcnz,5dwx,5cyz,gc6N,c3/z,3Qup,hziH,ePCp",
                    "6f2f": "luYt,oqRT,lv+J,lveH,izDp,orB/,e88h,h4jP,e8qp,e82r,bc91,fDQh,bcPd,bc3b,9JBt,cFuT,bcr9,5ksL,3R93,5kgJ,9J1n,5j+B,5jUF,5kQJ,8gy5,cEEz,3QuT,iyNb,fCU7,izfl,ordX,or+3,iz/z,izfr",
                    "5c66": "luSx,lv+P,or+3,oqRT,5jID,3QoN,fD9/,3QMR,cEyt,h41H,j/WL,h3Lz,izxt,k0cZ,k0MZ,izVD,e8wv,k0v5,fDWh,e8Oz,e8en,fDyj,h4TP,h4dJ,bc91,bcVp,cFcF,8gm3,3RD3,3RJ9,bcDb,8gE1,3R2Z,3QYT",
                    "9a9b": "oqLH,orhx,kjlF,iXyb,lH91,hzKP,iXJx,iXbN,iXsz,ePNF,drP1,hztX,ePwN,orDX,kjNN,lIcr,lHMp,lI6P,kkdV,eQjp,eQdN,iY3X,eQFV,eQLx,c3VX,c4IF,9kWF,c45b,9kjh,9l5V,6BjV,3RmF,3Rbp,5chH,6B31",
                    "740a": "or7L,oqLN,orH/,orjT,orBV,5ksL,3R93,5kgJ,e8kt,3QGV,fDKf,fDgb,k06T,oqXJ,6MA3,6Mo1,8fZL,6MA3,h3zr,h3XB,9Jvx,8gQ3,9JHF,e8UF,h4HT,k0T9,lw4V,os49,orO1,3Rr1",
                    "684a": "lHpP,or0F,orJz,lHMp,orn3,kjI9,drUF,c3Qp,c3KN,hAxr,hziN,kjfX,kk8h,gccj,dsBF,c4TV,c4Zx,aI6z,aIPF,dsf3,5cV9,3QWx,5cJV,7Yqb,6ArF,5cnp,5chN,7YXX,6B8F,5dqV,5dwx",
                    "8f72": "or0z,ePwN,eQ2x,3QLb,hzFh,9kur,9jYN,5dfz,3Rsh,5dqV,n3/V,n3u3,n45x,lGZH,lHvx,aIyH,hz/N,hAgF,aIPF,aIyN",
                    "726e": "iXbH,or6h,gbGz,kjlF,aHXj,ePTh,c4Ob,c45h,7Y3H,7Zix,eQ83,3R09,hAxr,gcEx,eQFV,eQAh,iX+p,n3zN,orsN,n3Qz,orE1,lHpP,lI6V",
                    "817d": "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,5kWP,5kaD,5kQJ,cFAP,cF0J,5kgJ,cFcF,5ksL,5kEH,cFoN,k0iZ,k0H7,fDWh,orU7,orw3,fDyj,fDWn",
                    7953: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ePYV,3QWr,3R09,5d4p,9l0h,c4TV,eQFV,eQdN,7YvV,3RDr,c4rN,oryj,eQdN,lI1b,n3QF,kjCr,kkjx",
                    7707: "hzzz,hziN,c3KH,c3/F,hz/H,aIhV,eQLr,hAmh,c4TP,aI+V,5d4p,3R09,3QWx,orDX,9kR1,n2SH,n37F,6ArF,6AaN,n2SN",
                    "94d5": "gbpH,or0F,kjwP,kjg1,kkjr,kjI9,orDX,kjZ1,ds9x,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,dsMP,dsqp,9kLj,9l5V,3Rbj,hA5p,hArV,5dqV,3Rsh,5dfF",
                    9573: "ePwH,oqX1,kjrb,kjap,kjNH,gc6N,eQdN,kk2z,eQuF,iXP3,iYkV,eQFV,eQ89,dskH,7YMN,7YSp,9kR1,dsHb,9l0h,7ZcV,7Zix,9lbx,aIVb,dsSx,c4rH,c4D1,3R5H,5c+N,5d9X,3Rh1,3Rsb,5dlh,5dwr,3RDx,3QQP,5cPx,lHvx,lIcx,oryj,n3L1,c3KH,c45h,gbAX,3QA1,6Axh,gbMb,gbvp",
                    "75e7": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QWr,3R09,6B31,9lbx,dsMP,c4Zx,9kFH,c4D1,hAgz,9kWF,gc6H,hzW9,eQ2r,dsf9,5cJP,aIt9,gbGz,c3KN,kj4H,hzop",
                    8029: "3QFz,or0F,3R5H,5c+N,dskN,dsSx,5dwx,3RxV,5dlh,7YBr,7Zo9,eQuz,7Z1F,aIyH,aJ4x,9koP,aIch,c3VX,6AaN,drDH,ds3V,hzKP,hzop,lGZH,lHpV,lIi3,lHB9,iYqr,iYkV,iXUN,gcK3,gc19,orUP,gcyV,gccj,oryp",
                    "864d": "kjI3,orn9,n3Wb,n3u9,hArP,iYqx,kkjx,kjg1,6Am1,3QoN,7Yqb,7YBx,eQAh,6BjP,3RxV,3R09,5cPx,gbXx",
                    "86f3": "oqWX,5ct1,5chN,6Axb,5ct1,5cJP,9kjh,3QWr,6ATN,orsN,9kur,kjCx,lIcr,lHS1,3Rsb,lI1h,7ZcP,6Bpx,hAxx,hAb1,6B31,dr+b,iXyh,iXbN,drDN,dr+h",
                    8760: "pW9t,5jOz,5jCx,6MS5,5jOz,9ILf,5k4H,e8wv,5kyR,9J1n,9JBz,os43,orjT,5kgD,5kQP,e8Oz,e8et,5kgJ,e7Yf,j/WR,j/yN,e7Ah,e7Yl,h4jJ,h4HT,lvUT,lvwP,h4jP",
                    "87bd": "orbP,lHkh,kjap,kj4N,n3db,n3QF,iXUN,hzKV,gbB1,gbpN,kjwP,iXJx,hA5p,gcth,gcEx,eQjj,gbXx,ds3P,c4rN,5cyz,drUF,5cPr,5chN,6AIr,3QWx,5dwr,5c+N,3RDr,6Bpx,dsBz,5dfF,aI+P,7ZcV,7YSp,aIEp,aI+V,aIhP,7YvV,7Y9p,aHXp,aIhV",
                    "7b19": "j/yH,pWlB,mYc7,mXK3,mYSj,mYul,k0MZ,mYAh,pX5N,k0j3,k00R,mXQ9,5kgD,h4dJ,5jCr,5kWV,9Jpr,9IFp,e7Sj,e8Oz,bbH1,fD49",
                    "7bb4": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,hA5j,c4xp,6B8F,3RxV,5dwx,6Bpx,c4TP,aI+V,3R5N,c3/z,c4m9,gctb,hAgF,eQFP,ePCp,5cnp,3QoN,5cV3,9kA9,9kdF,5cyF,5cV9",
                    8222: "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,orJz,6B8F,iYqr,6Bpx,6ATN,iXUN",
                    "7c9d": "3QFz,or0F,3QQP,7YMN,lHGN,lIcx,gccj,gcEx,5dwx,3RxV,5dlh,3Rbj,6B8F,iY9F,iXyb,lHvx,lGZH,iXn1,gbXr,gbpN,aIhP,c45h,drOX,7Y3N",
                    "9eb4": "or0z,drUF,7Y3N,5cEb,7Yf1,3QoH,3Qup,9koV,aIhV,aI11,ds9r,drDN,hzoj,hzKV,lHvr,lGZN,orDX,iXP9,kjNH,kkjx,5dwx,3RxV,5dlh,hAaX,3Rh1,eQuz,gcth,gc6H,eQjp,dsMP,dskN,7ZcP,aIPF,aIEj,7YH9",
                    "918d": "orjN,oqLN,or7L,cEKB,cEQH,8g3R,8fHT,bbH1,cEyz,oqXP,lv+J,lvCL,e8kt,e8UF,6Nqb,e8Cx,9JBt,9Jpx,bcr9,6Nef,3R2Z,6Ne9,3Rr1,3RJ9,k06N,5kaD,5jCx,j/yN,k06T,iz/t,izDv,orB/,or+3,iz/z",
                    "8df8": "orn3,eQ89,hA5p,lHB3,lHMp,n45r,iY9F,hAxr,eQLx,eQAh,gcnF,orJF,3RgX,dsw1,aInr,aJ4x,7YvP,5cnp,5chN,drJj,5cnp,drUz,ds3V,6Arz,hzzF,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e94": "6Arz,hzzF,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,dsMP,dsqp,aIyH,aJ4x,9kLj,7YMN,7Zir,9l5V,6B2X,6Beh,3Rmz,7Z1F,3R5H,3RDx,lHXz,aIPF,iX+j,iYkV,orDX,n3QF,n45r,n3u9,7YH9,3QLh,n2Yj,n3dh,hzFh,hzop,n2Yp,gccj,lHMp,lI6V,gcyV,gccp",
                    "970e": "orUP,oqRp,iXP3,orn9,kjTj,iY41,iYfb,kk2F,iYqr,lIcx,lGZN,iXbN,iXsz,kjg1,kjrb,iXDV,gc13,hzW9,gbvj,gcyV,ds3P,ePTh,eQoX,dsqp,c3KH,c4Zx,aInr,7YvV,3Rsh,3RDx,9kQX,7YY1,3QA1,3QoN,9lbr,9jYN",
                    "9c7f": "kj4H,oqX1,lH3j,lHpV,hzzF,9kdF,5chH,6ACV,ds3P,drJp,hAxr,hzW9,lI1b,kkdV,orDX,aIK1,3QWx,6Bpr,3RDx,3Rsh,5dfF,dsBF,9koP,hzKV,hzop,9k2p,9koV",
                    "9cb3": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,7Zir,7YH9,iXUH,iYkV,9koP,hzKV,hzop,9k2p,9koV,c4Zr,3RDx,3R09,c4m9,c4Zx,eQFP,n3/V,n3zN,eQdN,eQFV",
                    "9cdf": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,7Zir,7YH9,9l0b,5dlh,3RmF,5c+H,5d4p,dsHb,dskN,gctb,gcnF,lHXF,lHMj,kjTp,hA5p,gc6N,lIcr,lHB9,orPb,n3QF,n3Fj,orsN,9koP,hzKV,hzop,9k2p,9koV,aIt3,iXP9,iYkV,aI+V,aIt9",
                    "98e8": "or0z,kj4N,hzu1,kjrb,ePwN,9kjh,dr+h,3QoH,9kjh,6AZj,3R09,gc19,gcth,aIVh,aIt9,dsHb,dsf9,6B8z,9l5V,9kQX,7YY1,3RxV,3RDx,n3KX,hAxx,hzKP,n3Fp,hAaX,iX+p",
                    "9edf": "7Ykz,n37F,7Y3H,7YBx,c4aP,c3Qp,kjwP,iXyh,iXmX,kjap,3QoH,5chN,5csX,3QA1,3QLb,5cEh,5cPr,3QWx,3R5H,3Rbp,6Beh,9lbx,aJ4x,aIK1,7YMH,dsBF,6B8z,9kLp,eQdH,eQjp,kkdV,lI6V,lHMp,iXP3,orE1,hAaX,kjNN,n2SH,n3ox,gbXx,gbpN,n2SN",
                    "4e5c": "or6b,5cEh,3QQV,3Rsh,6Bpx,aIyH,9kWF,iY9F,gbpN",
                    "500f": "iXbH,or6h,3QzX,iXn1,3QQP,3QWx,7YSp,dsqp,c4Ob,dsBF,aInr,aJ4x,kjrb,9kjh,oryj,iXJx,lHGH,lI6V,hAb1,eQ2x,ePYV,iXUH,gcnF,eQFV,eQLx,5dqP,7YY1",
                    "8bf3": "kjfX,n2SN,hziH,hzu1,5ct1,7Yqh,3QLb,3QQV,7YH9,iXP9,or6h,gbGz,orn9,eQ83,9kdF,eQLr,eQdN,5dwr,5c+N,n3zH,n45x,5dfz,n3QF",
                    "52ad": "n2SH,n3ox,gbXx,ePYV,gbMh,ePwH,iXsF,n37F,3R03,aIPF,orJF,iXUH,iYqx,5dwx,3RxV,3Rsh,5dfF,c4gr,6AIx,6Agp,c3Qp,c4gx",
                    "82b8": "iXDP,orbV,oryj,iX+p,lGZH,lIcx,gcnz,gbGF,c3Qj,c4TV,5cyz,c4rN,5dlb,5ct1,3Rsb,7YY1",
                    "83d8": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,3QFz,hzzF,3RxP,6Beh,5dqP,3R09,aIK1,eQuz,aI+V,aIt3,eQjp,aIcb,7YBx,drOX,6AaN,ePwH,ePYV",
                    8605: "n45r,n2SN,oryj,lHMp,lHpP,orbV,hziH,kjg1,drDH,hzzF,3QzX,drP1,3QLb,3QQV,6AO9,gc19,iX+p,iXJx,dr+b,dsw1,eQR3,eQuF,eQFP,5dqV,3Rsh,5dfF,6AO3,3Rbp,7YXX,7YkF,iYfb,iYqx,kjI3,gbMh,aIch,aIyN,aIK1,gci1,gbMh",
                    5456: "os43,orjT,9IXn,3QGV,3R2T,9JjB,lvIR,h4jJ,h4TV,5kWV,3RD3,3Rx7,5kEN,mXxX,mXW5,cEKB,cEmx,mXy1",
                    "55eb": "os43,or7R,e8Ix,orU7,fDg5,fE6p,orjN,fDm7,lvUN,lvkD,izlh,izVD,bbT3,bclj,9J7z,3QMR,3R8Z,9ILl,3Rk/,9JHF,bcVp,bcxl,3RJ3,9JjB,mXxX,mXQ9,cEEF,cEmx,mXy1",
                    "5ce5": "7YeX,oqX1,5cV3,3R5N,5d4p,hA5p,kk2F,kjCx,iXDP,orsN,iXyb,7Yqh,7Y3N,iXbN,gbXr,gcyV,aI+V,aInx,dsY3,ds3V",
                    "996a": "h3zr,pW9z,h3Lt,5jOz,9IRr,iz9f,k00X,lveH,luSD,pXbJ,mYcd,5kyL,orI5,5kgD,5kQP,fE6j,fDm7",
                    "61a7": "3QzX,oqX1,3RDr,3QLh,6ACP,6BjV,c4TP,c4aV,hzKP,hAxx,lI6P,lHpV,orsH,n3Fp,iXUH,kjI9,kk2z,iY41,kjlz,hzFh,drDH,kj4N,3Rbj,eQjp,9koP,9l5V,eQFV,ePYV,9koV",
                    "6dc7": "kjfX,n2Yp,kkdP,kjwV,7Z1z,orJF,7Yqb,7Zix,3Quj,c3/F,5cV3,3QLh,3RDr,5dfF,orn3,7YH9,ePCj,hziN,gcnz,gc19,c4m3,c4IF",
                    "8e47": "n3zH,orn9,kkdP,n45x,n2Yp,kj4N,kk2z,kjlF,hzzz,hAgF,eQLr,ePwN,lHMj,eQjp,aI+V,aJ4x,aHRH,aHXp,ePTh,lHpP,ePYV,3R03,9kA9,3RxP,3QWx,6Axh,3QA1,6B8z,6AO9,c4CX,9kR1,9kjh,c45h,c4D1",
                    "5a75": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,lHRX,3Rh1,orPb,n3QF,n3Fj,orsN,hArP,hzW9,9kur,9lbx,lHB3,lI6V,dsMV,dsf9,lHB9",
                    "7f08": "oqXJ,iyNh,h3zx,h3RF,iz9f,bbB1,bbT9,5jCr,6MG9,izxt,izfr,e82l,e8kz,h4BH,e8qv,fE6j,iz/z,bc/p,6Nwn,3R93,3R2Z,orU1,6Nwn,mY05,mYij,9J7z,9IRr,mY0b",
                    6769: "3QFz,or0F,5d9X,3RmF,3Rsh,6Bpx,eQLx,eQdN,kjNN,n3u3,n3Wh,gcth,aInr,aIVh,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN",
                    6615: "gbRP,gbvp,orUP,n3zN,7YMN,3QQV,hAmb,3Rsh,hz/H,hAxx,lH3j,aHXp,aIhV,lHpV,lH3p",
                    "809f": "izfl,iyTn,cEsx,cEQH,3QoH,5jID,oqRT,ordX,5k4H,3QMR,5ksF,3Rl5,3Rr1,6NCj,cFAP,cF6P,izJB,iA5z,izrt,mYid,mYMj",
                    "709c": "or0z,7YkF,3QoN,iXhj,ePCp,kjwP,iXyh,kkjr,kjI9,gc13,gcyV,c4m3,c4Zx,7Zix,6BjV,7Z7h,5cJP,7Yqh,orDX,3Rh1",
                    "781c": "ordR,oqRT,fCNX,or1V,3QGP,3QMR,5kaD,6N2d,orpZ,orU7,5kKT,3RD3,3RJ9,6NIp,k0AX,bclj,cFoH,k0o/,8fNJ,h3Lz,h41H,8g3X,8fNP",
                    "7f81": "lHpP,orbV,oryj,lHMp,iXJr,eQ2x,ePI1,iXn1,hz/H,hziN,hAaX,hArV,c4TV,gchX,aIEp,aJ4x,5dwx,3RxV,3Rsh,5dfF,7YSj,7ZcV,6AaH,6ATN,3QLb,ePTh,oqRj,orUV,lI6V,lH3p,oqRp,9k2j,c3Qp,c4m9,9kA9,9k2p",
                    "951f": "or0z,gbpN,kjwP,kjg1,kkdP,kjI9,gbAX,gbRV,c4aP,c3KN,9kLj,9kA9,aJ4r,7Z1F,5dwr,3RDx,3Rsh,5dfF,dsBF,dsf3,3R09,3R5N,5d4p,6ACP,3QFF,gbGF,hArP,hzW9,n3u9,n3/V,hArV",
                    "9e42": "n3u3,n2SN,orJz,lHMp,iY9z,kjZ1,gcnz,gcth,hArV,lI6V,lHGN,dskN,dsSx,6Bpx,5dqV,3Rsh,3RmF,5da1,9l0b,9kA9,3QWr,kjCx,kjrh,3QLh,3QzX,kjg1,kj4N,3QoN,drDH,drJp,drP1,ds9r,dr+h",
                    "7aa8": "n3u3,orhx,iYkP,kkjx,lIcx,lH3p,iXbN,gbvj,iXsF,gcyP,iY9F,gbGz,gcnF,gc13,hzW9,dskH,eQjp,ePYP,ds9x,c4Zr,c3KN,6Arz,6B8F,9kWz,3RmF,3QFF,9kdF,9kWF",
                    "525c": "n3iP,or6h,iXUH,kjTp,lHMp,lH3p,iXbN,c3KH,iXn1,c3/z,ePCp,gbvj,gbMh,dr+h,3QoN,6AZj,3R09,3QWx,gbXx,gccp,c4xp,aIyN,c4m9,kk2z,9kWF,or+r,5dwx,3RxV,3Rsh,5dfF",
                    "6c46": "orhr,hAgF,gcEx,gbpH,hzzF,n3u9,hzW3,3R09,3QWx,5cJV,5chH,5cnp,aIhV,ds3V,drJp,c4xj,eQuF,dskH,c4rN,5dqV,5dwx",
                    5369: "3QSR,ordX,orI5,cFiR,bcrf,cF6P",
                    5742: "oqWX,6Am1,6AaN,7Yqb,6Am1,3QzX,3QFF,7YBx,n3ox,or+x,hzW3,hAxx,c4Oh,3QWx,3QQV,eQdH,aIEp,3RDx,3RJ9,iXbH,iXyh",
                    8311: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbRP,iXP9,ds9r,dsf9,c4xj,c4D1,dsBF,gcnF,gbB1,aI11,aI+V,6BjV,3RmF,3Rh1,5d4p,7Y3H,7YY1",
                    "843c": "n45r,n2SN,oryj,lHMp,lHpP,orbV,dsHb,drP1,aHRH,aJ4x,aInr,7YBx,7Z1F,6B8F,3Rbp,3R5N,iXJr,gbXx,gbB1,iXn1,iXJx,iXUH,iYfh,hAmh,gcth,gc6N,iXUN",
                    "637a": "or0z,5cyF,3QA1,5cnp,hzKP,aHRN,kj4H,kjwV,kkjr,kjI9,orDX,kjZ1,eQ2x,eQAb,eQdN,kjYX,eQLx,c4Zr,c4gx,c4CX,5da1,3Rbp,5c+N,aIEj,5cJV,6Bpr,aIVh",
                    "54d9": "gbMb,n3Fp,oryp,gcEr,n3Fp,gc13,gcnF,c4Zr,c4aV,c4CX,5cJV,5dqV,3RxP,7Z7h,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "565c": "kjrb,orhx,n3or,n3QF,kjTp,eQjp,hzKP,hArV,c4Zr,c45h,6AIr,6Beh,lGZH,lHeF,aI6F,aHRN,lGZN,eQFP,kkdV,kjwV,ePYV,eQFV,9l0b,3Rsh,3QWx,9kux,9kA9,9l0h",
                    "5f89": "iXbH,or6h,drDH,kjwV,3QFz,ePNF,iY3X,3Rh1,n3/P,kk2F,n3u3,kjTp,iYqr,iXJx,eQ83,eQFV,aJ4r,aIhV",
                    "5fc4": "3R03,orn9,hzFb,c45h,dsBz,gci1",
                    "6c54": "kjfX,n2Yp,hziH,ePCp,c3/z,3Qup,orn3,ePNF,lIcr,lHB9,gbRP,gcyV,5cJV,3QQV,3RDx,6Bpx",
                    "6ea7": "luYt,oqRT,mYSj,mXQ9,e8wv,mYul,mYc7,e8et,fCU1,iyNh,3QuN,cEEF,cF6J,3R93,bbY/,bcPj,9IXh,5j+B,5jUF,9Jjv,5kQP,5kWV,iz9f,iz/z,e8Oz,e7Yl,iz9l",
                    9074: "kjfX,n2Yp,ePwH,ePI1,6Am1,3QoN,6AlX,3QLh,3RDx,eQFP,5dqV,dsSr,dsBF,9kWF,9lbx,6ACP,6AIx,aIEp,dsqp,dsf9,9koP,eQ89,aIyH,aInx,iYfb,gcEx,gbXr,iXUN,orDX,gci1,lHXz,orUV,orn3,lHMp,kkjr,kjCx",
                    "9a75": "oqLH,or7R,fDa5,luSx,e7Gn,e82r,5k4H,3QMR,3QGV,5jOz,bbY/,9Inh,5kWP,5kaD,5kKN,orU7,orw3,5kmP,cFuN,cF6P,izxt,izVD",
                    "738e": "ordR,oqLN,8fTP,or1V,8g3R,6Mo1,h3zr,h41H,os43,orpZ,orNX,5kEN,3Rl5,3Re/,5kmP",
                    6832: "3QFz,or0F,5d9X,3RmF,3Rsh,6Bpx,aJ4x,aIEp,eQp1,dsMP,dsw1,aInr,lIcx,n45x,lHB3,lI1h,hAaX,orE1,hzW3,hAxx,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh",
                    7337: "or1P,pW9z,pWxx,ordX,mXxX,mYij,mXQ3,cEEF,bbN3,cEWx,cEQH,mY0b,k0T3,k0o/,orZZ,lw4V,pW/H,e8Cx,5kmP,8fNJ,8g9T,5kWP,e8Cx,k0cT,5kgJ,5jID,j/ET,k0cZ",
                    "8d45": "hzzz,7YkF,3QoN,7Ykz,5cJV,9koP,n3iV,n2Yp,9k2p,3QWr,3R09,c4TV,7YXX,3RxV,9kA3,gcth,iYfh,gctb,gbXx,lHS1,lIcr,lHvx,oryj,n3L1",
                    "8c5a": "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,5kgD,3R93,6Nkl,h4vR,k0j3,h47x,lvCL,orB/,orZZ,orjT,iz/t,e8wB,8gW9,6MY1,cFiR,h4pF,cEWD",
                    7228: "3QuN,3QSX,6N2d,8gfZ,5kax,6MSb,6Ne9,5kmP,6N27,3Re/,3RD3,6NIj,6NCj,bclj,cEWx,6MA3,6Mo1,bcVj,bbB1,e8Cr,cFuT,cF6J,e8qv,e7Yf,cEQH,cEsx,e7Mj,h3Rz,cEEF,fDg5,fCU7,fDWh,fDsd,cFiL,h4vR,h4TP,iA5F,iyNh,h3zx,iyTh,oqRT,oqXP,luSx,luYz,iz9f,or7R,orI5,izJB,iz/t,or+3,orU7,lv+J,lvUT,mYid,mY67,k06T,k0j3,mYij",
                    "78ec": "kjrb,or6h,kjaj,kjCx,n3u3,n2SN,iX+j,kjZ1,n3L1,n3/V,kkdV,kkjx,hAaX,hAxx,dsBF,dsw1,c4Zr,gcnF,aI0X,aIVh,aInr,6ArF,5cnp,5chN,c3KH,drJp,hzop,hzW9,eQ89,ePCp,hzFb,ePTh,7Yqb,3QLh,3RmF,7Z1F,7Yqh",
                    "94b9": "gbpH,or0F,kjCr,kjg1,iYqr,iXP9,n3Wb,lI6V,orDX,eQjp,5cPx,6ACP,3QFF,gbGF,gbRP,gbB1,aHRH,aIhV,3RDr,aIEp,3Rbj,3Rh1,aJ4x,dsSx,dsqp",
                    "955f": "ePwH,oqX1,gbGz,gbvp,gbAX,3QA1,6Axh,c3KH,c45h,kjrb,kjg1,orhr,n3u9,lHMj,lHpV,iX+j,orJF,lIcr,lHXF,hAaX,hAxx,gcEx,eQFV,hAmb,3Rsh,3RDx,3Rsb,6B31,3Rbp,c4CX,6B31,aJ4r,aIVh,3R03,5c+N,gc6N,gbXx,lHvr,6AIx,3QLh",
                    "75a3": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,ePNz,aHRN,kj4H,hzop,eQLr,ePYV,hAgz,gcth,iXUH,7YMN,3QQV,6Bpr,3RDx,3RmF,5da1,dsw1",
                    8966: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,3QWr,9kux,9lbx,5dwx,3RxV,9kWz,5dfF,5d4j,9kLp,c4CX,9kFN,c4gr,c4Zx,aIhP,drUF,ePTh,gbXr,kjCx,kkjx,gcEx,eQuz,eQFV,hArP,hAgF,hzW3,hA5p,eQjj,eQ89,n3KX,eQp1,n3u3,n3/V",
                    "86a9": "hzW3,orn9,hziH,hAxx,n31X,kjg1,kk8h,n3Wh,5cV3,gc19,5dqP,5chN,6Beb,3RDx,9l0b,dsHh,drP1,9k81,9l0h",
                    "871e": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,9lbr,9kux,orPb,9l0h,9kFH,orsN,3QWr,6ATN,3RDr,6Beh,dskH,dsHh,hAmb,hz/N,lHvr,lIcx,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7f42": "lHez,kjlF,gbpN,gbXr,kjlF,gc6H,kk2F,lHXF,gcEr,kk2F,kkdP,orUV,oryp,kjTp,kjwP,orbV,oqRp,kjap,c3VX,ePNF,dsHb,drUF,9jYH,9lbx,6AlX,3QA1,3Rsh,6Beh,dsf3,3R09",
                    "7b7b": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,iXP3,7YH9,5cJV,3QA1,3QoN,9kjb,5cV9,3Rh1,3RDx,drUz,dsBF,iYqr,iXbN,aIPz,gcnF,gbGF,aI6F,aIPF",
                    8268: "or0z,lH3p,lHkh,5cEh,3QFF,gbGz,hzu1,drDH,ds3V,9kdz,aI11,lH3j,5cnp,3QoN,5cV3,5c+N,9kWF,3RgX,3RmF,5dlh,aIVh,eQjp,c4m9,eQLr,eQ2x,c4TP,aIVh,7Zix,c4CX,9kFN,9kA9,hAmb,hz/N,iYqr,kkjx,kjCx,iXJx,orsH,lHGN,orPb,n3Wh,lI1h,n3or,n45x",
                    "7fbf": "oqRN,orjT,fDm7,mYMd,fDyj,k0u/,lvCL,fE0d,or+3,orw3,fCU1,mY67,luYt,j/QV,e7Yf,8fZR,3QuT,bcVj,bbB1,3Rk/,e8wB",
                    "8e69": "lH8X,oqLN,orhr,lHkh,ePNz,or0F,ds9r,kjCx,kj4N,drDN,hztX,gbvp,gbRP,hzFh,dskH,eQp1,kkjx,kjNN,orDX,hzW9,iX+j,eQAh,dsSx,9kA3,3R09,3RDx,6Beb,6AO9,3R03,6Axh,7Yqh,3QzX,6Axh,c4Iz,9kWF,9kdF,c3/F,c4IF",
                    "8e35": "kkjr,kjCx,n3zH,orUV,3RgX,n3L1,3QWr,3RDx,6AaH,6AIx,drJj,6Agp,ds3P,drUF,eQFP,eQ89,7YH3,7ZcV,hzzz,6ArF,n2Yj,n3iV,hzKV,hzop,n2Yp,c4TP,hArV,hzW9,c4m9,c4TV",
                    "96b9": "gbpH,orbV,3QFz,kjlF,5dwr,5cEh,9kjb,9l5V,eQFP,ePTh,kjrb,kkjx,lHMj,orsN,5d4j,kjTp",
                    "9c9f": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,9kFH,7YSp,c4Zr,c4m9,dsHb,5dlh,3RmF,5da1,gc13,gcyV,lI6V,lHB9,iYkP,iXP9,9koP,hzKV,hzop,9k2p,9koV",
                    "9aba": "luSx,lv2F,h3RF,fDm1,h47D,h3zx,fCO1,h3Fx,oqRT,ordX,h41H,bbH1,bc3b,8g3R,8fHT,3QML,5k4H,e82r,e7Gn,3QuT,3R2T,5kmP,orw3,or+3,iA5z,izDv,e8Ot,5kQP,5kyR,e8wB,e8Oz",
                    "9b23": "n3or,n321,kjg1,hzop,hzQx,iXDV,kj4H,kjI9,n3zH,n3L1,orUV,lI6P,kk2F,kjTp,hz/H,hAmh,iYqx,eQAb,gcnF,gc13,eQdN,ePNz,gbB1,aIhP,ds3V,dsqj,aIEp,9l0b,6Beh,3RDx,6Bpx,3Rmz,3R09,9kA9,7YXX,9kLp,6AZj,5da1,9k2j,3Qup,3QLh,6Arz,5cJV,9kdz,7YvV,dsMP,aI+V,aHXp,drJp,dsMV",
                    "4e3f": "pWDD,cF0J,6MM5,5jOz,5jID",
                    "4fac": "orhr,gbvp,iXsz,3QFF,6B8z,3Rbp,eQjp,gcK3,9kWF,3RJ3,6BjV,dsw1,aIhP,gci1,orE1,iXP3,lHB9,lIcx,n4b9,lIcr,iYqx",
                    "8bcf": "mQq9,q1oR,i5ub,i5Hf,5r8f,8BZZ,dkPr,jGuZ,orGd,ormB,osaJ,gwmJ,eY9V,eY3l,gw3b,dl0p,5rEL,5sfF,dlDp,dl0v",
                    "90eb": "lH8X,or6h,lHkb,dr+h,9k2p,9kFH,9jYN,3QQP,c4aV,3RgX,n3L1,n45x,iYqx,gcth,dsSx,9lbx,7ZcV,7Z7h,9kWF,hzoj,hzW9,lH3j,lHB9,dsf9,drJp,lH3p",
                    5880: "oqWX,7Yf1,7Y3N,9kjb,7Yf1,hziH,hzFh,kjwP,kkjx,n45x,n3iV,6ACV,3QFF,6Bpr,6AIx,aIJX,3Rh1,7YH3,aIyN,9l5P,9kFN,c4TP,eQuF,hArV,dsvX,hAb1,c4m3,eQjp,hzW9",
                    "839c": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,drDH,hzzF,3QzX,ePI1,3QWr,3R09,7Z1F,c4TV,eQFV,eQdH,eQLx,aInr,hA5p,ePYP,7YvV,c4xj,aIEp,3RDx",
                    "85a4": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXbH,iXDV,iXmX,drJp,aHRN,drJj,ds3V,9kjh,3QoN,c3Qj,9kdF,3Rbj,iX+p,3RDr,3QQV,iY9z,3RmF,gcnz,gcEx,gbXr,gccp,c4xj,c4m9,c4Zr,c4IF,7Z1z,7Zix,7YBr,7YSp",
                    "5fd2": "lv+J,luMx,orNX,mYGn,pWPF,h4pL,5kQP,5kWV,8gW9,bcld,8gr/,fD9/,cEQH,6MnX,9Itn,8gfT,5kgJ,5j+B,6MG9,cEEF",
                    5581: "lv+J,lvqJ,9Jjv,orI5,9Jvx,8gm3,8gK1,bcJn,5kKN,3RD3,5kWV,e8UF,e88n,3QYT,mXxX,mXW5,cEKB,cEmx,mXy1,orpT,or+3,iz/z,izrt,orpZ",
                    "5c91": "orn3,hzW9,lI1b,hAmh,hzu1,lH91,aHRH,aHXp,ds3V,gc19,aI+V,aJ4x,aIyH,c4m9,9kjb,9kR1,3R09",
                    7350: "n2SH,iXsF,6ArF,3Qup,5chN,drUz,9jYN,or6b,hziN,n3Fj,orsN,lHpP,lI6V,iXUH,kjI9,kk2z,iY41,hzKP,hAxx,c4TP,c4aV,3Rbj,9kLp,6Bpr,6Axh,ePYP,eQFV,9l5V,9koV,ePYV",
                    "60d8": "3QzX,oqX1,3QWr,n3ox,n45x,5dwx,3RxV,3Rsh,5dfF,9l0b,9kFN,dsqp,dsMP,dsf9,eQoX,dsw1,hzW3,hArV,kjNH,iX+p,iY9z,kk8h,iXsz,gbMh,drDH,iXbN",
                    "6d4f": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5cyz,5cEh,aIyN,gci1,kjZ1,kjrb,kk2F,lHGH,orn9,gbRP,9kR1,7YY1,5dlb,3RxV,5dwx,or+x,aIVb,lI1h",
                    7035: "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5c+H,3QQV,3RxP,5da1,6Axb,6Bpx,aIt3,6AO9,6B8z,aIPF,9koP,9l5V,hA5j,c4xp,eQ2r,eQAh,kjCr,hzFh,hAxr,kk8h,oryj,iX+p,n3Qz,orPh,orhr,n3u9,lI6P,lHpV,c4gr,hzQx,hAmh,c4Oh,c4gx",
                    "59e3": "oqRj,c3Qp,6ACV,5chH,aIch,iXyh,iXbN,kkjr,kjrh,oryj,lHS1,ePYP,iXUN,eQdH,aIyN,3RxV,3RDx,3QQP,3QWx,5c+N,aIVh,eQAh,iYfb,gcEx",
                    "7ee1": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aHXp,aIch,5chH,6Axh,3QWr,iXJx,iYkV,5dqV,3Rsh,5dfF,aInr,aI+V,eQFP,eQ2x,oryj,iX+p,kjYX,n3Wh,n3or,kjNN",
                    7487: "n37z,n2SN,n3or,orbV,lHGH,lHkh,lHpP,6ACV,3QFF,3QWr,5cV9,gc19,gbRV,ePwH,ePTh,6AaH,6Am1,7Yqh,n31X,6Am1,hz/H,orJF,lIcr,lHS1,hAaX,hAxx,gcEx,eQFV,gctb,3Rsh,3RDx,3Rsb,6B31,3R5N,c4CX,6B31,aJ4r,aIVh",
                    6980: "3QFz,or0F,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,5cPr,c4gx,c4xp,5d4p,5cPx,5dfz,c4IF,c4Zx,5dwx,5dfF,lHGH,lI1h,gcth,gc6N,lHGN",
                    "622c": "lHvr,lH3p,hzKP,iXJx,iXbH,hzop,eQ83,ePwN,lHkb,ePTh,ePHX,lH91,9kur,9k2p,3QQP,3QWx,eQLx,gcEx,iXUH,iYqx,n3/P,lIcx,orJz,7Z1F,3RxV,5dwx,c3Qj,c4gx,6AIx,6Agp,c3Qp",
                    "6c19": "or0z,hziN,n3/P,n37F,kjrb,kk2F,hztX,hAmh,6Beh,3RDx,6Bpx,c4CX,6B31,6Am1,c3W1,6AIr,eQ2x",
                    "6bb3": "h3Fx,j/QV,or1V,orB/,izDv,h4vR,h4NP,e7Gh,e8ID,cFuT,9JjB,5j+B,3QAP,3QuT,3RJ3,3RD3,5kEN,8gfZ,9IRr,bbT9",
                    "61d1": "lH3j,n2SN,iXbH,hzop,ePHX,c3KN,ds9r,eQ89,gc19,dskH,eQ89,dsvX,eQuF,gcnF,dsHb,eQuF,aIVb,c4TV,hArV,hzKV,aIhV,kjTj,aIEp,kjwP,kkdV,orn3,lHB9,lHXz,orJF,n3db,n45x,7Yqb,5cEh,3QQV,3Rh1,5dfF,6B8F,6Bpr,7ZcV,7YH3,6ATN,5chH,7Y9p",
                    7540: "lvUN,luYz,izrn,orpZ,e8Uz,e7Ah,3Rk/,e8wB,3QoH,3QuT,5jUF,8g3X,e82r,oqXJ,iyZj,izVD,orU7,oqXP",
                    "9e20": "oqWX,7Yf1,3QoN,kj4H,kjrh,9kjh,c4gx,9l0b,9kux,5d9X,3RmF,3Rsh,6Bpx,dsSx,dsf9,lHB9,lI6V,hArV,gcth,gcnF,orJz,lHMp,iY9z,kjTp",
                    7654: "n3KX,oryp,n45r,n37F,7YkF,3QoN,5cJP,3QLh,6AO3,5cV9,3R5N,3Rsh,5dlh,6BjP,5dwx,6B2X,7YSp,c4gr,c4Oh,gcEr,gbMh,iY9z,hAb1,kjwP,kkdV,hz/H,iXP9,lHMj,kjTp,kj4H,hzop,c3KH,gbGF,9l0b,eQAh,eQ2x,9kux,9l0h",
                    5326: "q2J7,q1ih,5qXh,5smd,ab57,8C+Z,8CUp,aaU5,jGOl,jGop,orMx,bNdD,8CnV,bMjf,bMWf,i5U7,8BZZ,gvyB,gv2l,or3j,lgQp,lgdB",
                    "50a9": "iXbH,or0F,3QzX,kjg1,6Arz,c4m9,iXP9,iXyh,gbMb,dr+h,7YMN,lHMj,3Rbp,kjI3,oryp,lIcr,lHGN,5dlb,lI1h,5d4j,5dC9,aJ4r,aIEp,gccj,gcEx,orJz,n3Wh",
                    "8c1b": "kjfX,n2Yp,orsH,lHMp,hzW3,iXP9,iY9z,hAb1,kjwP,kkdV,dr+b,gbRV,gcEx,dsMV,3Rbj,dsqp,6B2X,5dfF,6Beh,c4Oh,c4gx,5cPx,7Yqb,5ct1,gbB1,gbpN",
                    "574c": "orbP,iXhp,iXbN,iXsz,iY9F,dsBF,c4D1,c4xp,dskN,c3/z,ePYV,iXDV,iYqr,iYkV,oryp,3R03,aIt9,3QoH,3RDx,7Z7b,7Yf1",
                    "82c4": "iXDP,orbV,oryj,iX+p,lGZH,lIcx,3R03,hzW9,aIyH,7Z1F,ePwH,eQLx",
                    "83ea": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,gccj,iXP9,dsMP,gcEx,gbvp,drDN,c4Zr,c3KN,c4aP,6Agp,6AaN,9kjb,3QLh,3Rsh,9l0h,9kjh",
                    "624c": "or0z,5cyF,3QA1,5cnp,ePYP,aHRN,iXbH,iXDV",
                    "549d": "pWDD,h3XB,h4jP,k0iZ,8fZR,8gm3,5jUz,5kWV,8gW3,8gy5,9JjB,h4NP,k0T9,h4NJ,h4vR,pX5T,mXxX,mXQ9,cEEF,cEmx,mXy1",
                    5608: "mYSj,mY0b,h41B,h4TV,pWJJ,e8kz,e8Cr,pW/N,8g9N,8gQ3,luMr,lv2F,cEEF,cEmx,luMx,k0T3,e8UF,e82r,k00X,k0T9,bcPd,5kQP,5kaD,bc97,bcPj",
                    "5d5d": "7YeX,oqX1,3QQP,3QWx,5c+N,6B31,aIVh,aIhP,aJ4x,dskH,9kA9,6AZp,3RxV,3RDx,iXDP,iYqx,iXyb,7Yqh,7Y3N,iXbN,kjI3,n3ox,n3Wb,kk2F,eQjj,oryp,hAaX,dsMV,ds3P,hz/N",
                    "5e91": "lHMj,orn9,lIcr,lH91,7Yf1,3QoN,3QLb,dskN,hz/N,hAmb,hzKV,dr+b,dsMV,aIEj,5d4p,3Rh1,3RDx,6Bpx",
                    "6e6b": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,c4gr,6ArF,aIEj,c4rN,gbMb,gccp,n3Fj,lHpV,orPb,9l0h,3Rbp,3RDr,9l0h,lHB3,3R09,eQoX,hAb1,kkjr,hArV",
                    "5ad8": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,kk8b,kjCx,hA5j,n3Fp,gccj,dsf9,dsw1,eQuz,aInx,aIVh,9l5P,c4Oh,aIEj,5d4p,3R5N,5cV9,7YH3,3QLh,3RDr,7Z1F,n3or,n3Wh,hAmh,hzQx,n3ox",
                    "7f27": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,8gfT,3QMR,3RJ3,8gE1,3R8Z,3Re/,bcrf,9JBt,cFuT,bcJh,bc97,fDQh,e8wv,e8et,h4pL,lvkx,lvUT,orBV,izDv,izVx,orU7,orjT,izln,izVD",
                    "680a": "3QFz,or0F,3QLb,eQjp,oryp,kkdP,lI1h,hzW3,hAxx,iXbH,iXDV,aHRH,gbB1,c4gr,ePTh,c4TP,6ATN,6Bpr,3RDx,3RmF,5da1,eQp1",
                    "6a3e": "3QzX,oqX1,5cyz,6Axh,aIch,6Axb,3QWx,3RDx,9lh3,6Bv9,aIVh,dsBF,orJF,lIcr,n3/V,iYw3,iX+p,9kLp,9kR1,aIPF,dsY3,c539,7Z7h,6B31,6AZp,aInr,aIyN,orhr,6AIx,kjwP,kjI9,gbMb,gc6N,ePNz,dr+h,c3KH,gbvp,iXsz,iXbN",
                    6677: "lHXz,lHeF,drJj,hzFh,gbGz,gc19,eQ89,c4aV,9k2p,9jYN,drUz,9kFN,9lbx,gchX,aIK1,c4TP,dsHh,or0z,iXsF,iY9F,orJF,or0F,6B8z,3RmF,3QFF,6ArF,6B8F",
                    "80c4": "gc13,orn9,iXhj,iYkV,aIVb,aI11,7YeX,7Z7h,3QzX,drP1,dsHh,5dlh,3RmF,3Rh1,5d4p,gcyP,lI6V,lH3p,gbvp,gcyV",
                    7168: "3QFz,or0F,ds3P,dsSx,n3zH,ds9x,n3iP,n3/V,ePwH,kjap,hzKP,hzop,iXJr,iYfh,dsHh,9jYH,c45h,5cV3,aIt9,aIVh,5dlh,5cV9",
                    7847: "mY05,mXy1,fCNX,mXQ9,9Jvx,izDv,izVx,8gm3,mYid,pWVR,h3Lt,h41H,8g3X,8fNP,h3Lz,mYc7,mYSp,5kWV,5kgJ,mYcd",
                    "949a": "gbpH,or0F,kjCr,kjg1,kkjr,kjNN,c4m3,kkdV,aHRH,aIhV,gbRP,gbB1,gbGz,3QFF,6ACV,hAgz,3RmF,c4Zr,eQAh",
                    9544: "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,n3u3,n3/V,kkdV,kjI9,iXP9,hzW9,hAxx,eQLx,dsMV,eQAh,orJz,dsBF,oryj,gccp,dsf9,9kQX,7YY1,3R09,3QWx,3RDr,3RxV,7YY1,7ZcP,c4TV,c4m9,7YH9",
                    "9e66": "ePwH,n2SN,n321,ePI1,kjaj,drJp,c3KN,c3VX,drJp,c45b,ds3V,ePYV,kjwV,c4gr,ds3V,eQ2r,n3ox,n3dh,ePTh,aI0X,7Yf1,3QQV,9koP,3Qup,9jYH,9kux,7ZcP,7YMN,5dfz,3Rsh,3RxV,5dwx,c4Zx,c4rN,lHGN,lI6V,eQFV,eQuF,iY3X,hAgF,orJz,lHMp",
                    "88e5": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,aIhP,drUF,ePTh,n3u3,lHGN,lHXz,lI1h,lIcx,5dwx,3RxV,3Rsh,5dfF,dsqj,dsHh,3R03,iXP9,9l0b,hAmh,hA5p,9kLp,9l0h",
                    "4f1b": "orbP,iXhp,iXbN,3QFz,kjlF,5dwr,5cPx,n3ox,n45x,iYfb,eQuF,9kA9,9l5P,hzW9",
                    "4eb3": "n3u3,orhx,lGZH,lIcx,aHRH,drJp,dsSx,aI+V,aI6z,c4D1,aInr,5cPx,3R09,3RDx,5dwx,7Y3H,7Z7h,iXsz,iY9F,gcnF,gbGF,iXsF",
                    9688: "izDp,orB/,lvkx,lvUT,e8Uz,e82r,e88h,3QYT,3R2Z,5ksL,cFcF,bcrf,3RD3,3RJ9,8gDX,bcPj,bbH1,9Izj,9IFp,bbZ5,fDa5,iyZj,lv8B,or7R,oqLN,3QoN,orjN,orU7,izVD,izln,orjT",
                    "57b4": "pW9t,6MA3,6Mo1,8fZL,6MA3,iyNb,iz9l,lwaV,lveH,pWPF,mYul,h4jJ,cFcL,8gK7,6N27,cFoN,izVD,h4TP,5kWV,5kaD,h47D",
                    "835e": "lIcr,lGZN,orDX,iY41,iXyb,or6h,gbGz,hAmh,gbXr,ds9x,9kdF,7Y9p,7Y3N,9koP,6ACV,3QFF,9kLj,3Rbp,7Zir,7ZcV,9kWF,c4xp,drDH,dsSx",
                    "84e0": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXP3,kjI9,iXhj,iYkV,gbGz,c3/F,c4IF,gcnF,hA5j,ds9x,ds3V,hzKP,dskN,dsqp,aInr,5cyF,6B31,5d9X,7YSp,3Rsb,3RxV,9l5V,9k2p,3Qup",
                    "63c6": "oqWX,5ct1,3Qup,5chN,gbMb,c3KN,iXbH,iXyh,lHvr,lHMp,kjTp,ePYV,iXJr,hzW9,n3Qz,iYfh,gcEx,kkjr,iYkV,lI1b,n3/V,eQuz,eQ89,aInr,aI+V,eQjj,9kLp,3QQV,3QLh,9kLj,3RxV,3RDx",
                    "550f": "7Yqb,eQjp,gccp,eQLr,ePYV,3RgX,dsw1,6B8z,5dlh,6BjV,aI+V,aIt9,5cV9,orn3,iY9F,hArV,hAxx,hzKP,hzW9,iX+p,orUV,kj4H,kjlF,aI6F,aHRN,kj4N",
                    "56eb": "i5H9,orgh,lgwT,lher,aaNH,8CAT,8Cut,aau9,a9ZJ,aa4d,bMPH,i6oJ,jGuZ,jGbl,i65b,eXft,eX93,q1ib,q2Jd,5smd,5qXh,q1ih",
                    "72c1": "n2SH,iXyh,6Axh,3QA1,5cnp,gbMb,c3KN,orbP,hziN,orDX,gbXx,gcEx,eQLr,iYfh,gcnz,5dfF,3Rsh,3RDx,6Bpx,gc6H,6ATN,3QWx",
                    6026: "3QzX,oqX1,n3Fj,3Rbp,n3iP,n3/V,gbMb,iXsF,eQLr,ePYV,iYfb,hAgF,hzW3,iXJx,drDH,iXbN",
                    "6f36": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,7Yqb,5cyF,9kur,5cPx,3R09,3RmF,6B8F,7YMH,6AZp,5dwr,7ZcV,oryj,aIEp,gbXr,gbRV,ds3V,dsMV,gcyV,gbRV,lI6P,iYkV,iXDV,lHpV,lI6V",
                    "7fbc": "lH3j,lI1h,orPh,oqRp,6Agp,3QoN,3QLb,aIhV,c4gx,aIhP,c45h,aI6z,aIt9,7YH3,7YkF,7ZcP,7YSp,5c+H,5dwx,5csX,5cV9,3Rmz,aIPF,c4D1,aIEj,aI+V,aIPz,c4Oh,drOX,dsSx,iXUH,c4rN,kjYX,iX+p,iXP3,kjCx,gctb,gbMh,iXsz,iYkV",
                    "9a9c": "kjlz,or0F,kj4H,kjCx,n3or,n2SN,lH3j,lHpV,kjfX,gbB1,drDN,hztX,hzKV,ePYV,dr+h,c3VX,c4IF,aIPF,c45b,9kjh,9l5V,6BjV,3RmF,3Rbp,5chH,6B31,eQdH,eQjp,lI6V,lHMj,lIcx,orDX,kjNN,iY3X,eQFV,eQLx",
                    "73e9": "n3db,n2SN,gbpH,gbMh,6AaH,6Am1,7Yqh,eQ83,3R09,iXUH,ePYV,kjwP,orsN,6AlX,n321,5d9X,3RmF,5dlh,gcth,gccj,gcEx,lI6P,lHS1",
                    6849: "3QFz,or0F,3QQP,3QWx,5c+N,9l0h,dsHh,dsSr,ds3V,ePTh,gc6H,7YH9,5dfF,3RxV,3RDx,hArP,iYqx,kkjx,kjCx,hzKV,iXbH,iXDV,aHRH,gbB1,oryj,lHS1",
                    "8f73": "or0z,ePwN,eQ2x,3QLb,hzFh,9jYH,9kux,lHvr,lGZN,hAgz,orJF,lIcr,lHXF,dskH,dsSx,hAxx,hz/N,6ATN,3QWx",
                    "729f": "oqRj,orhx,lHvx,lH3p,iXbN,iXJx,eQ2x,ds3V,dr+h,ePNF,9k2j,c3W1,aIVb,aI11,6AaH,6Bpx,c4m3,3R09,dsMP,dsf9,c4Zr,eQFV,lHXz,dsBF,gcEr,iYqx,iXUN,gc6N,gcEx,lI6P,orUV,oryp,lHMp,lI6V",
                    "816d": "3QoH,5jID,oqRT,or7R,5j+B,3QGV,h4dD,h4NP,e8Uz,e88n,e8wv,9J1t,9JBz,6NCj,3Rr1,3Rl5,5ksL,cEKv,cEsD,k0AX,orO1,os49,k0T9,iz9f,iyTn,k06N,orjT,orB/,k0o/,k06T",
                    "795a": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ePYV,kjYX,3Rh1,kjI3,kkjx,hzQr,orsN,eQFP,eQp1,9kQX,9lbx",
                    7708: "gbGz,gbpN,gbRP,iXJx,iYqx,hAxx,gcyV,6Bpr,3RDx,3RmF,5da1,dsw1,3QLb,3QQV,dsqp,oryp,c3KH,c3/F,lGZH,lHeF,6ArF,6AaN,lGZN",
                    "94d6": "ePwH,oqX1,gbMb,gbvp,aHRH,aIch,gbAX,3QA1,6Axh,3QQP,5cPx,kjCx,kkjx,n3Wb,lI6V,orDX,gci1,6Beh,3RDx,5dwx,7Zix,dsSr,c4Zx,6B8F,3Rbp,9kA3,7YMN,9kLp,eQjp,eQ2x,kjrb,kjg1",
                    "953a": "or0z,lHeF,hziN,iXDP,lHeF,kkjr,kjCx,n3u3,orUV,3RgX,n3L1,3QWr,3RDx,3QoH,5cJV,7Y9j,6Am1,6Axb,7YvV,gbGz,5cyF,gbvj,gbRV,c4aP,c3Qp,7ZcP,7YH9,eQ83,eQFV,c4m3,hzW9,hArV,c4TV,c4m9",
                    7603: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,5cV3,3R5N,6B31,eQp1,iXP9,iYqr,iXDV,gbXr,iXUN,eQjj,aInx,aIhV,6ACP,6AIx,7YMN,eQFV,6Bpr,c4IF,9kLj,ds9x,kj4H,hzop,gbGz,c3KN",
                    8028: "3QzX,oqX1,3QLb,6AIx,n3ox,n45x,kkdP,kjI9,hzW3,hAxx,hz/H,c4rN,c4xp,dsw1,gchX,eQuF,c4TV,c4Zx,gcEr,eQFV,dsHh,aIVb,5dlh,3RmF,3Rh1,6AZj,6ATN,9lbr,9kA9,9kdz,7Yqh,6AaH,aHXp,dr+b,drDN,hziH,hzFh,lHkb,lGZN",
                    8654: "kjI3,orn9,n3Wb,n3u9,hArP,iYqx,kkjx,kjg1,6Am1,3QoN,3QLb,3QWx,5c+N,6B31,aI+V,aIcb,aJ4x,9kur,6AZp,3RxV,3RDx,c4xj,aIEp,eQAb,dsHh,dsf9,eQ2x,iXJx,ePTb,hAb1",
                    "86d0": "6MG3,pWfF,6MS5,5jCx,5kax,9IRr,pWVL,5kyR,5kKN,pX5T,cF6J,cFGV,5kmJ,k0j3,k0T9,5kWV,5kmP,e82l,k00X,j/ET,e7Gn,e82r",
                    8770: "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,3RgX,9kR1,3QWr,3RDx,7ZcP,7YH9,c4gr,c4Zx,hAaX,c4D1,eQdH,eQAh,gbXr,lHS1,orE1,gcEr,lHS1,lHvr,lIcx,iXyb,dr+h,drDN,iXbN,iXyh",
                    "87d1": "oqWX,6Am1,6AaN,6AlX,7YvV,9kjh,6Bpr,6AIx,9kQX,3Rh1,c4m3,c4TV,hAxr,hzQx,kk8b,iY9F,lHB3,lI6V,iX+j,kjNN,oryj,n3L1,9l5P,eQFV,eQ89,9kA9,9l5V,dr+b,iXyh,iXbN,drDN,dr+h",
                    "7b2e": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iXUH,orPh,iYkP,lHXF,lHez,iXDV,aHRH,hzzF,eQLr,ePI1,3QQP,ePYV,6BjP,6ACV,aIhP,aIVh",
                    "7bd1": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,dsf3,kjI9,drDH,dsSx,7Z1z,c4IF,c3/F,7YkF,9kA3,7YH9,6AIx,3QA1,3QoN,7YH3,6ATN,3Rsh,3RxV,ePNz,hzzF,hAgF,eQuF,ePNF",
                    8223: "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,3QWr,6ATN,gcth,n3/V,kjYX,n3Fp,lHB3,iXP9,6Beh,3RDx",
                    "7c9c": "n31X,lH91,lI1h,n3Wh,iYkP,hArV,hzop,iXhp,orn3,hzW9,3R03,eQ89,3RxP,9kLp,9koP,3Qup,aJ4r,aHRN,eQuz,c4xp,ePNz,c4aV",
                    "8d73": "3RDr,3QWx,6Am1,3QoN,c3VX,6Am1,or6b,6Axh,kjfX,kjCx,gc13,gbvp,aIt3,aIch,n3/P,6BjV,kjTj,c4xp,dsMV",
                    9191: "orjN,oqLN,orvZ,os49,mYMj,orNX,fDQh,fE6p,izDp,fDQh,lvCF,fDsd,k0MZ,k0B1,or7L,cEKB,cEQH,bbH1,cEyz,oqXP,8g3R,8fHT,3R8Z,cF6P,cFAP,5kQP,3Rx7,6N8d,6NCj,9JBt,9J7z,5kax,k06T,j/yN,5jCx,5kaD",
                    "8de3": "6Arz,hzzF,7YBr,5ct1,5chN,drJj,5cnp,ds3P,drUF,eQLr,eQ2x,eQuz,5dfF,3Rsh,3RDx,6Bpx,3QWr,6ATN,eQdN,orDX,eQp1,kjNH,kkdV,n3zH,iXP9,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e90": "6Arz,hzzF,7YvP,5cnp,5chN,ePCj,5cnp,ds3P,drUF,c4gr,3QWx,5cV9,7YBr,7YH9,c4xj,3Rbp,5da1,6Bpr,3RDx,6Beh,c4Oh,aIEj,aIK1,7YXX,7YSp,hA5j,eQuF,eQjj,hAgF,lHB3,n3ox,orn9,orDX,n3Fp,lHS1,lI6P,n3Wh,orUV,n2Yj,hzop,hzFh,n3dh,n2Yp,dsMP,iYkV,iXP9,dsf9,dsMV",
                    "972a": "orUP,oqRp,iYqr,lIcx,lGZN,iXbN,kjfX,iXsF,iXDP,kjrh,orn3,iXP9,iY3X,kjTp,kk2z,iYfh,eQ2r,gcyV,gbvj,ePTh,aIcb,c3Qp,3QzX,7Yqh,3RxP,3R09,9kQX,3Rh1,9kA3,9l5V,6Bpr,6AIx,dsSr,c4TV,c4Iz,dsw1,dsf3,c4rN",
                    "9c82": "kj4H,oqX1,lH3j,lHpV,hzzF,9kdF,drJj,ds3V,5chH,6ACV,3QWr,7YSp,kjTp,kkjr,kjI9,orDX,lHXF,eQjj,eQFV,5dqV,3Rsh,5dfF,hzoj,hzKV,9koV,9k2p,hzop",
                    "9cb4": "j/yH,pW9z,mXJZ,mY0b,iz3p,9IFp,e7Gh,e82r,6MS5,5jCx,lvOH,e8Cx,izDp,iz/z,9IRl,izfr,iyTn,9Itn,9IRr,5kmJ,5kWV,os49,orw3,5kmP,9Jjv,9JvD,e8ID,e8wB,9JjB",
                    "9ce2": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,3RDr,3QQV,6B8z,5da1,5c+H,6AO9,dsMP,ds3V,iXJr,iYfh,orsH,gc6N,gchX,orE1,9kjb,hzFh,hziN,9jYN,9kjh,7YBr,aInx,aIVh,7Z7h,7YBx,gctb,gbXx,lHvx,lI1h,gcth",
                    "990d": "or+r,oqX1,6Am1,3QoN,5c+H,3R09,3QWx,c4gx,c4IF,9kWF,9kA9,9kux,aIPz,aInx,7YSj,5dfF,3RxV,3RDx,7ZcP,5dfF,dsSr,dsHh,gccp,gc6H,ds3V,drUF,gbGz,gbMh,hzQx,kjNN,n3zN,lHXz,n3L1,kjrb,kkdV,kjTj,hAgF,gcyV,gcEx,dsqj,dskN",
                    "9ee2": "kjrb,kj4N,aI0X,n321,aHRH,aIch,dr+b,drDN,6Axb,7Yqh,7YeX,5ct1,5chH,7Y3N,3QQP,3R09,5d4p,aI+V,c4TV,c4rN,9kur,eQjp,9kFH,5dfF,3RxV,3RDx,hAmb,eQLx,eQ2r,hz/N,iYqr,lI1h,kkdP,kjI9,orE1,n2SH,n3dh,hzFh,hziN,n2SN",
                    "4e69": "drUz,or0F,iXP3,iXsF,oryj,5d4p,3Rh1,3RDx,6Bpx,ds9r,5cPx,5chN,drDN,ds9x",
                    "502e": "orbP,iXhp,iXbN,3QFz,kjlF,aIt3,3QLh,3RDr,aIPF,n3Fj,3Rbp,iXJr,iYfh,c4Zr,c45h,n3Wb,eQAh,eQ2x,n3ox,n3Wh",
                    "8bf6": "kjfX,n2Yp,gbpH,gbB1,5ct1,7Yqh,3QLb,aIEp,eQjp,eQ2r,eQFV,c4aP,gbXx,aJ4r,aIch,3RDr,aIEp,lI1b,hAxx,iXDP,iYkV,oryj,iXJx",
                    "52be": "n3db,or0F,lGZH,lHGN,lHpP,gbvp,gbRV,iXJx,9jYH,gbRV,eQ83,dsf9,5cnp,5chN,6ATH,aIhV,3R5H,9kWF,orJF,iXUH,iYqx,5dwx,3RxV,3Rsh,5dfF",
                    "82be": "iXDP,orbV,oryj,iX+p,lGZH,lIcx,3R03,hzW9,6AZj,5da1,5dfF,6Beh,c4Oh,c3W1,5ct1,eQLr,ePwN",
                    5807: "lIcr,lGZN,orDX,hAb1,hzFh,or6h,3R03,hzW9,3QoH,3RDx,6Beb,6Am1,9k2j,9l5V,c3VX,ePI1,eQAh,c4Oh,c3W1",
                    8629: "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXbH,lH91,kjI3,kjg1,gbpH,gc19,dr+b,iXyh,lHXz,iX+p,kkjr,kjZ1,kkdP,hArV,dsw1,hAgz,dsSx,dskH,aIch,aIEp,c4Iz,9koV,7YH9,3R09,3QWx,3QoH,3QA1,5cEh,6ACV,6AZj,5da1,3Rsh,3RDx,9kWz,7Z7h,7Yf1,ds9r,iXJx,iXn1,drP1,ds9x",
                    5443: "os43,orjT,9IXn,3QGV,8gW3,5kWV,5ksL,6N8j,izxz,iz/z,cFAP,bcJn,bcDh,cFiR,mXxX,mXW5,cEKB,cEmx,mXy1",
                    "55ec": "lIcr,lHpV,orJz,iY9F,iXP3,orn9,aI6z,hzQx,3QWr,ds9x,5dfz,3Rsh,5dqV,gcyV,gc6H,gcEx,lGZH,lHeF,c3/F,c3KN,lGZN,dskH,dsBF,9kWF,9kFN,dskN",
                    "996b": "gbpH,oqX1,kjaj,kjwV,iXDV,hzFh,gbAX,5ct1,9koV,3QQP,dsw1,n3L1,orUP,lHB9,eQ2r,eQLx,3RDr,dsw1",
                    "61b7": "oqWX,n321,3QA1,3QQP,6AO9,9kA9,6AO3,3Rbp,3RDx,c4xj,3Rbp,c4aP,c4TV,9kWF,7YSj,7ZcV,iXsz,gbMh,drDH,iXbN,iXP3,ePYV,gccj,iX+p,orsH,eQdN,lHMj,lHvx,lIcr,lHXF,gchX,iY9F,iYkP,eQLx,orPb,eQAh",
                    "6dc5": "kjfX,n2Yp,ePCj,hziN,3Quj,drUF,hzQr,9kdF,kjTj,kjwV,3R03,orn9,3R5H,6B31,lHS1,n3/V,hAaX,hAxx,3Rsb,hAmh,gc6H,eQjp",
                    "8b07": "n3u3,orn9,kkdP,n45x,n2Yp,kj4N,kk2z,kjlF,hzzz,hAgF,eQLr,ePwN,eQjj,lHMp,eQuz,eQp1,aI+V,aJ4x,ePYP,lHpV,ePTb,aHXp,aHRN,c4m3,dsf9,c45b,c4D1,aIEj,aIhV,9kdz,9kWF,6Arz,6B8F,3RmF,3QFF,6ArF",
                    "80ec": "or0z,kjap,hzKV,gbpH,gbvp,hzzF,lHvx,n3ox,n2SH,n3u9,n3Fj,n45x,gccp,kjYX,gcyV,gcEx,gc13,dsf9,aIhV,aIch,6Axb,6ACV,9kA9,6AZp,6B31,aIJX,aIEp,dsf9,3RgX,3RmF,5dlh,eQAh,ePI1,3QA1",
                    "7f0b": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,3QQP,3QWx,7YSp,9kLp,3Rsb,7YSp,7Z7b,c4Oh,c4gx,7YBx,eQLr,ePYV,oryj,eQjp,lI1b,hAmh,hzQx,lHvx,lI1h",
                    "67a5": "3QFz,or0F,3QQP,6AO9,n3u9,n45x,kk2z,9kWF,3R5N,6B8z,5dlh,5dqV,6Bpx,gcEx,gc6N,ds3P,ePTh,gbAX,aHRN,iXbH,iXDV",
                    "69d4": "3QzX,oqX1,aIJX,3Rh1,7YMH,7Z7h,7YvP,dsqp,eQjp,9lbr,c4Oh,ds9r,dsSx,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN,iYkP,iXP9,orDX,lHGN,gcyP,gc19,lHB9,lI6V,gcyV",
                    6600: "ePTb,ePwN,oryj,hzQx,kjNH,kkjx,5dwx,3RxV,3Rsh,5dfF,9kA3,9kLp,c4Oh,gccj,dsw1,kj4H,kjrh,9kjh,9jYN,kj4N",
                    "809c": "izfl,iyTn,cEsx,cEQH,3QoH,5jID,oqRT,ordX,5k4H,3QMR,3R8Z,3Re/,5kEN,9JHF,h4NJ,bcrf,bclj,orU1,izxz",
                    7096: "or0z,7YkF,3QoN,5cJP,7Yqh,6Bpr,3RDx,3RmF,5da1,orE1,kjCr,kkjx,gbGz,iXDV,iXhj,ePCp,hzW3,c4m9,c4TV,hArV",
                    "781d": "lHpP,lGZN,drDH,lHeF,dsSr,ds9x,iXP3,iYkV,orDX,dsw1,5cPx,5dqV,3RDr,7Z7h,ePHX,ePYV,7YvV,7Yf1,ePI1",
                    "7f7e": "lveB,ordX,orBV,lvCL,izDp,k0v5,j/WL,izfr,e82l,fDa5,fDKf,e8qv,cF0D,h4dJ,6MzZ,6Nwn,oqRN,or+3,lv+P,luSD,oqRT,cFGP,h4TV,h3zx,cEmx,cFGV,9Jvx,3Rx7,3QAP,9Izj,9JvD",
                    9522: "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,gctb,gc6N,c4CX,iY41,c4Iz,9kWF,9kLp,c4xp,c4IF,5dqP,lI6V,lHB9,5cV9,5dqV",
                    "9e44": "hziH,n2Yp,kjCr,kjap,ePwH,eQ2x,or0z,ePNF,lHMj,orJF,iY9z,kjZ1,gcnz,gcth,hArV,lI6V,lHGN,dskN,dsSx,6Bpx,3Rsh,3RmF,5da1,9kA3,9l0h,c4aP,c3Qp,5cnp,5cJV,c4aV",
                    "7aad": "orn3,n3u9,kkdP,lIcx,n45x,n2Yp,kj4N,hzoj,kjlF,gbRP,hzFh,hAaX,gccp,kk2z,hArV,c4m3,iXP9,aInr,7YBx,3Rsh,3RxV,9jYH,9lbx,9kQX,7YY1,3QLh,3QA1,aHXj,aI11,c45h,ds3V,dsqj,c4D1,aIVh,aI+V,eQLr,eQFV,ePwN",
                    "84af": "lHXz,lGZN,orsH,kjNN,or0z,kjlF,aIVb,iYfh,aInr,aIEp,aHXj,aIch,ePTb,ePCp,eQjj,eQ2x,or+r,3RDx,3RxV,5dlh,3R5H,3Rbp,iX+p,iXJx,5cPx,3QQV,3QFz,3QLh,iXyh,iXhp,5cnp,3QoN",
                    "7c74": "orhr,hAgF,gcyV,gcEx,c4xj,eQuF,aHXj,aI+V,ePNz,c4aV,gbpH,gbvp,hzzF,n3u9,3R03,hzW9,9koP,3Qup,9kLj,5dlh,5dqV",
                    "537a": "oqXJ,orO1,lvqJ,h4dJ,fDm7,h41H,e8wv,e7Sp,e8Uz,e8Oz,fDQh,k0j3,h4vL,lv+P,e7Ab,e7Gn,k00X,lveH,luMx,8gfT,6N8j,6Nef,8gy5,bcxl,bbT9,5jUF,3QMR,3Rx7,5kQP,6NCj",
                    5769: "pW9t,6MA3,6Mo1,8fZL,6MA3,iyNb,iz9l,pX5N,5kKT,5kgJ,pWDJ,cF0D,cFuT,k00R,k0T9",
                    "831a": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbRP,ePCp,5cnp,5ct1,7YvV,aHXj,aInx,7YXX,6B8F,6Beh,7ZcV,eQFV,eQdN,3R5N",
                    "638e": "oqWX,5ct1,3Qup,5chN,gbMb,c3KN,iXbH,iXyh,kkdP,kjwV,oryj,iX+p,ePYV,eQAb,iX+p,dr+b,dsSx,5d4j,3Rh1,3RmF,5dlh,dsHh,aIhP,aIK1,7YY1,7YvV,aIhV",
                    "54da": "h47x,k0j3,orw3,orU7,izVD,h4NP,h4TV,3Rk/,fDKl,9Jpr,5kWV,bcr9,5k4H,5j+B,cFGP,cEWD,mXxX,mXW5,cEKB,cEmx,mXy1",
                    "564c": "mYo9,pWJP,pXbJ,mYAh,fDKf,lvIR,izVx,h4BN,h4pF,izxz,8gPZ,8gfZ,luMr,lv2F,cEEF,cEmx,luMx,lw4P,fE6p,fDm7,lvkD,lw4V,bcf7,bcPj,5kQP,5kgJ,bcfd",
                    "5f8c": "kj4H,or0F,lHkb,gbpN,3QzX,hzu1,3QLb,3QQV,5cV9,c4Oh,dsHh,ds9x,aIcb,eQ89,aIt3,5dfF,3RxV,3RDx,hAmb,eQFV,gcyP,gbRV,lHXF,kjYX,kjCx,oryp",
                    "5fc9": "3QFz,or0F,3QWr,9kLp,lHMp,lHvr,lIcx,5dwx,3RxV,3Rsh,5dfF,hzKP,eQ2x,drDH,iXbN",
                    "6c5c": "luYt,oqRT,iyNb,fCU7,3QuN,cEEF,6NIj,5kWV,3RD3,3QYT,5k4H,mY0b,mYGn,fDWn,fDgb",
                    "6ebd": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,3QGP,8g3X,ordX,or+3,lvUN,lvkD,iA5z,izln,izrn,cF0J,cF6P,e8qv,h4vL,cFAP,cFGV,e8Ix,fE0j,bcDb,5kEN,3Rl5,3Re/,6Ne9,6N8j,9J1n,9JBz",
                    "907d": "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,aI+P,9l0h,ds3P,dsSx,aInr,dsqp,c4xj,9kWF,5dwx,7Z7h,5dfz,9kWF,6AZp,5cV9,5cPx,7YBr,9kFN,iYqr,kkjx,kjrh,6Axh,5cyF,iY3X,gbXx,hAmb,gcth,gcnF,gc6N,hzW9,iXP9,orsH,kjNN,n3Wb,n3zN",
                    "9a77": "oqLH,or1V,fD49,luSx,e7Gn,e7Yl,5j+B,3QGV,3QAP,5jID,bbT3,9Inh,bcf7,e8qv,mYof,mYAb,cFoN,bcJn,bcPj,5kWP,mYSp,mY67,5kaD,5kWV",
                    7391: "ordR,oqLN,9IFj,or1V,8fBH,9IRr,h41B,h3zx,6NIj,3RJ9,3Rx7,5kEN,orO1,orpZ,cF0J,6MY7,3QMR,3QGV",
                    6833: "3QFz,or0F,6Bpr,5dwx,5da1,6AZp,c4xp,kkjr,9kux,kjI3,kk8h,orDX,gci1,gbXr,gcEx,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,c4Zr,9kLp",
                    7352: "hzzz,or0F,hziH,hzQx,kjwP,kjap,n2Yj,n3iV,iXP3,oryp,lHGH,lIcx,c4m9,aIPz,c4D1,9k2j,9lbx,3QoH,3Qup,5cyF,7YBx,9kA9,aIt9,7YSj,5dfF,3RxV,3RDx,iY3X,dsSx,hztX,ePI1,c3KN,ePHX,ePYV,c4aV,aIch",
                    "8d46": "lv2z,8fTV,3QoN,8fTP,3QSX,9IRl,ordX,oqRT,9Itn,6MY1,9J7z,mYij,mYMj,iz/z,izxz,h4BH,e8Cx,8gW9,8gDX,9JjB,6Ne9,3Rr1",
                    8136: "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,3QYN,e88n,e8UF,5kWV,3RD3,5kKT,8gPZ,cFiR,8gfZ,h4vL,cFiR,izVx,orU7,orw3,izxz,izVD",
                    "706c": "1bXjn,1wykF,1wAj7,1b+Cp,1c1f3,1wCXZ,1wFAD,1c3TV",
                    "78f2": "n3iP,n2SN,ePwH,n37F,gc13,eQ2x,kjCr,iXP9,n3u3,orhx,kjTj,kkdV,hArV,hA5p,eQLr,eQjp,n3Fp,n45x,aInr,aJ4x,3RgX,c4D1,9kLj,5cPx,5dwr,9kWF,gbAX,7Yf1,7YvV,gbRV,gbB1",
                    "94ba": "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,kkdP,lI1h,iYqr,iXP9,6AO9,9kLp,3R03,3R5N,5da1,c4Zx,eQLx,6Bpr,5dwx,3RxV,6B8F,dsw1,orE1",
                    "955d": "gbpH,or0F,kjwP,kjg1,oryj,n3L1,lIcr,lHvx,iY9z,kk8h,kjNH,iX+p,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,eQAb,eQdN,c4CX,gci1,5dfz,3Rsh,5dqV,hArV,hzW9,c4m9,3R09,c4Iz,7Z1F,7YSp,c4xp,c4IF",
                    "75b3": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gbGz,c3KN,kj4H,hzop,iXP3,5cV9,5dlh,iYfh,gbRP,gcEx,aIVb,aIt9",
                    "897b": "lH8X,oqX1,kj4H,kjlF,c3KN,3QzX,ePI1,9kjb,c3/F,dr+h,eQLr,ePYV,eQFP,n3/V,n3Wh,kkdP,kk8h,hAmb,hArV,hzQr,hzW9,kjI3,kjCx,eQ2r,n3ox,n3u9,oryj,kjTp,kjZ1,eQp1,iXUH,eQdN,n3Fj,n3L1,aInr,eQjp,aJ4r,eQuF,c4xj,c4IF,9l0b,9kA9,6AIr,6BjV,3R5H,3Rh1",
                    "86b6": "pW9t,5jOz,5jCx,6MS5,5jOz,9ILf,5kaD,k0T3,k06T,pX5N,5kKT,5kmP,pWJP,cFuN,cF6P,e7Yf,j/WR,j/yN,e7Ah,e7Yl",
                    8725: "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cPx,orn3,3R09,n3/P,lHS1,6B31,3R5N,hAmb,3Rsh,hAaX,hAxx,eQjj,gc6N,gbXr,c45h,kjTj,kjwV,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7f44": "n3or,n2SN,kjaj,kjwV,or0z,kjlF,ePNz,hzzF,ePCj,ePYV,hzKV,hzop,drJp,c3KN,9k7X,c3/F,aIPz,aI6F,7Y9j,7ZcV,5csX,3QA1,3Rsh,5dlh,aIt3,3R09,c4m3,c4rN,hArV,hz/N,gccj,c4TV,c4Zx,iYqr,iYkV,kk8h,n3Wh,n3Fp,kjTp,iXUN",
                    "7b62": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,hzzz,5cyF,3QA1,5cnp,c4aP,7Y3N,ePwH,ePYV,aIJX,eQp1,aIt3,aI+V,eQFV,eQ89,5cV9,3R5N,3RDx,6Bpx",
                    "887e": "iXbH,iXhp,lHpV,orn9,lHMp,iYkV,iYqx,iXUH,kjI9,hzFb,hAgF,dsf9,c3Qj,c4TV,c4m3,6ArF,5cnp,5chN,9koP,3QQV,3QWx,5cV9,9l0b,6B31,3RDr,3RxV,5dfF,9kFN,aIyN",
                    "7fce": "or1P,mXQ9,fCO1,fD9/,h3RF,e7Gh,e88n,6MG9,3QML,8fHT,5kmJ,3Re/,5kyR,mYul,mYcd,h47x,mXQ9,h4jJ,izrt,bcf7,fDKl,fE6j,bcDh,izPr,h4HT,mYAb,mYSp,5kWV,3RD3,5kKT",
                    "8db5": "pWPF,izrt,lvwJ,lw4V,6NIp,5kQP,5kKT,6Nqh,fDE9,cFiR,e7Sj,e82r,e7Gh,5jID,5jCx,8g3R,5jID,iz3j,6MG9,iyTh,iz9l,or7R,oqRT",
                    "8e3d": "orPb,n3ox,7YXX,n3L1,7Z1z,6ATN,6BjP,9l0h,3RxP,5dwx,dsSx,dsf9,3R09,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,6Arz,hzzF,n2Yj,n3dh,hzFh,hzop,n2Yp,kkdP,hArV,hzW9,kjI9,kkdV",
                    "96bc": "kj4H,or6h,lIcr,lHeF,iXsz,iYkV,gcyP,gbGF,drUz,dsSx,n37z,c3/F,n3zH,orn9,dskH,lHGN,3R03,aIt9,9jYH,9lbx",
                    "9ca0": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3QQP,3QWx,5c+N,7YY1,n3L1,n3u3,n45x,eQFP,eQ89,7YMH,5da1,3Rsh,3RDx,9koP,hzKV,hzop,9k2p,9koV,iXP3,iYkV,aI+V,aIt9,iXP9",
                    "9abc": "kjaj,kjlF,gbGF,eQ2r,gbXx,gbpN,ePwN,gbvj,n2Yp,n3iV,gbRV,oryj,hzW9,lHMj,lI6V,kkdV,c4m9,c4gx,aHXj,aIhV,7YvP,7Y9p,3QLb,5cJV,ds3V,drJp,3Qup,c4Zr,c4TV,iXUN,5c+H,aIyN,aIVh,5dlh,5c+N",
                    "9ebd": "n3zH,orsN,n45r,n2Yp,5cnp,3QoN,3RDr,7Z1F,5dqP,5cPx,aIK1,7Yqb,c4m9,kjwP,ds3V,iXP3,iXn1,iYqr,iX+p,dsHb,kk8h,gcyP,eQLx,gchX,hAgF,gc13,eQdN,ePHX,hzFh",
                    5315: "oqRN,6Mu7,3QGV,3RJ9,6NIp,k0T3,fDm7,e7Mj",
                    "4f94": "orbP,iXhp,iXbN,3QFz,kjlF,hA5j,3Rbp,c4aP,gc19,dsHb,ds9x,9kjb,9lbx,hArP,lHXF,iYfb,iXJx,orE1",
                    "8bce": "kjfX,n2Yp,gbpH,gbB1,3QA1,3QFF,6ACV,orDX,5da1,lIcr,gcEx,gbXx,lHvx,c4gr,5cPx,5dwx,c4Zx",
                    "90ef": "kjfX,lH91,orbP,iXDV,ePCp,ePwN,hzQr,lHGN,eQdH,iXDV,c4rH,7YBx,5c+N,9k7X,c3W1,ds3P,7YvV,5cyF,3Qup,3QoN,3RgX,n3L1,n45x,hAxx,eQAh,c4Zx,7Zix,6BjV,6Beh,7Z1F",
                    8385: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,c3KH,hzzF,3QzX,drP1,5dwr,5cyF,aIPz,6B31,6AO3,aInx,dr+b,dsMV,gc6H,eQjp",
                    "85a8": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXDP,hzKV,gbRV,iX+j,gccp,c4TP,eQLx,ePCp,c3KN,c4Iz,c3/F,c4xj,5d4p,3Rh1,3RDx,5dwx,6AZj,7ZcV,c4aP,9kjh,6Am1,9kjb,9kA9,7YH9,3QLh,3QFF,7Ykz,5cJV,iXmX,gbB1,gcth,iYfh,iXn1",
                    7519: "lv+J,luMx,orNX,mYGn,pWPF,h4pL,5kQP,5kWV,8gW9,fCNX,fDyj,iyZd,6MA3,6MY7,izln,bbMZ,bc97",
                    "559f": "izJv,orI5,lvkx,lw4V,bcPd,bcfd,8gfT,8gQ3,3R2T,e8et,e8Oz,5kQP,3Rx7,3Rr1,mXxX,mXQ9,cEEF,cEmx,mXy1,orjN,os49,iA5F,iz/z,izln,orjT",
                    "5c9a": "hzW3,orn9,lI1b,hAmh,hzu1,lH91,3QoH,6Am1,ePI1,eQAh,5dlh,3RxV,5dwx,c45b,5da1,c4xj,aIEp,5cJV,5cEh",
                    "734d": "n2SH,iXsF,6ArF,3Qup,5chN,drUz,9jYN,or6b,hziN,n3Fj,orsN,lHpP,lI6V,iXUH,kjI9,kk2z,iY41,hzKP,hAxx,c4TP,c4aV,5dwr,3RxV,3Rh1,9kR1,9kA3,6AO9,3QQV,ePYP,9koV,9l5V,eQFV,ePYV",
                    "60c6": "3QzX,oqX1,3QFz,9kux,n3ox,n45x,5dwx,3RxV,3Rsh,5dfF,eQdH,eQAh,hAmb,hz/N,kjYX,eQp1,gbMb,iXsF,iXbH,drDN,7Z7b,c4Oh,c4rN,7YMN,7Z7h",
                    "6d52": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,6AO3,5cPx,5cJV,ePYV,ePNF,lHkb,iXDV,hzW3,orE1,kkdP,kjTp,dskH,dsSx,3Rmz,kk2F",
                    "704f": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,6ML/,5jUF,5ksF,6N8j,3ReV,3Rl5,6Nwn,e8ID,3RJ3,6Nwn,8gW3,iA5F,izJB,8gy5,3QSR,5kaD,9IXn,fD9/,fDyj,h47x,fDm7,lv8v,lvwP,os43,orI5,izPr,orU7,9J7t,cF6P,cEKB,9ILl,9J7z,izxt,iz9l,or7R,orw3,izxz",
                    "59d8": "oqRj,c3Qp,6ACV,5chH,aIch,iXyh,iXbN,3QWr,6ATN,kjNN,kkjr,kjCx,3Rsb,kk8h,ds9r,dsSx,orhr,lHGN,lHXz,orUV",
                    "7ee8": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIhV,5chH,6Axh,c4xj,3QQV,7Z1z,6Beh,9lbx,dsSx,ds9x,hzW9,hArV,lI6V,lHvx,orsH,n3Fp,n3Qz,orPh,3RgX,lHS1",
                    "748b": "lHkb,lGZN,ePwH,ePTh,6AaH,6Am1,7Yqh,6Bpr,6AIx,9kQX,3Rh1,c4TP,c4m9,hzQr,hAxx,kjNH,iX+p,iY9z,kk8h,lHB3,lI6V,oryj,n3L1,6AlX,lH91,9kA3,eQ89,eQFV,9l5V,9kA9",
                    6998: "lH3j,oqX1,n3iP,n321,iXbH,iXJx,n37z,iXsF,ePwN,eQ2r,hzFh,eQLr,eQdN,n3zN,n45x,kjNH,kkdV,hArV,hz/N,3R03,dsf9,3RDr,3RxV,5dfF,9kFN,9kur,5cyF,3Qup,3QoN,aJ4r,aHRN",
                    "81e7": "n2Yj,hzop,hzzF,drDH,drUF,drJj,9k2p,7Y3N,3QoH,7YkF,lHeF,lIcx,orPb,n3/V,orDX,hAb1,6Beh,3RDx,6Bpx,gcEr,dsSx,3R5N,3R09,6AZj,6ACV,iXDV,iX+p,eQ83,iXP9,ePYP,eQjp,aIEp,aIhV,6AO3,aIt9",
                    "6c1a": "hziH,or0F,hztX,hAmh,6Beh,3RDx,6Bpx,eQjj,5d4p,6AIr,eQ2x,3Quj,6ArF,ePNF,kk2z,kjrh,n37z,n3/V",
                    "5f40": "n3or,n2SN,kjaj,kjwV,or0z,kjlF,gbpH,hziN,hzQx,gbXx,ePCj,ePYV,c3KH,c4aV,9koV,9k2p,6Agp,6AIx,5cPx,3QQV,3QLh,3R5H,7Z1F,dsMV,eQFV,eQdN,c4xj,9kWF,3RDx,hAxr,hArV,iYfh,n3Wh,n3Fp,iX+p,hz/N",
                    6206: "n3or,n2SN,kjrb,n3iV,n2Yj,kjg1,or0z,n37F,kjCr,kj4N,gbvj,gbRV,9kdz,drUF,aHRH,aInx,5cnj,6Am1,6Axb,5cEh,3QQV,3RmF,5dfF,6AO3,5c+N,3RDr,5dqV,7ZcP,aIPF,7YSp,c4Iz,aIPF,aI+P,dsMV,dsqp,aIEp,eQLr,eQdN,hAgz,eQuF,hAaX,hAmh,iXUH,iY41,kk8h,n45x,n3Fp,orDX,lHGN,lHRX,kk2F,iYkV,iYqx,iXDP,ds3V,drJp,iXhp,iXDV",
                    "754e": "9k7X,n321,3QFz,3QLh,eQjp,oryp,kk8b,lHXF,hAxr,hzKV,3RDr,eQjp,gbpH,gbMh,n2SH,n3dh,9kjh,9jYN,n2SN",
                    9507: "gbpH,or0F,kjwP,kjg1,n3Fj,lHvx,orJz,7Z1F,3RDx,7Zix,5d4j,c4Zx,n3/P,lI6V,lHGH,5c+N,3R09,5cPx,6ACP,3QFF,gbGF,gbAX,gbMh,c4aP,c3KN,gchX,9koV",
                    "9e22": "lI6P,lGZN,orDX,n3QF,orn3,lHB9,iX+p,hAxx,iYqx,gbMb,iXJx,dsf3,eQ2x,c4xj,dsw1,gci1,gbGF,aI6F,aI+V,6BjV,3RmF,3Rh1,5d4p,7Y3H,7YY1",
                    "765c": "n3Fj,orsN,lIcr,lH91,6Am1,3QoN,3QFz,5cEh,iXyh,iX+p,gccp,gbMh,c4xj,c4aV,c4Iz,c4Zx,9lbx,3Rh1,5c+H,3Rbp,3QQP,5cPx,7YSj,7YvV,dskH,7YMN,7YBr,ds9x,9kWz,7Z1F,3RDx,eQoX,gcnF,iY9F,iYkV,eQFV,eQLx,c3KH,ePI1,iXbH,gbB1",
                    "532e": "q2J7,q1ih,5qXh,5smd,8CnP,702n,bMW9,8CaX,6/rt,6/l3,a9ZJ,dkCz,dlqr,aaNH,gv2f,gwg9,ort9,gvFf,mRkB,jGHX,jFU3,mQwP,mRkH",
                    "50ba": "iXbH,or0F,3QzX,kjg1,5cV3,3R5N,5d4p,c4xp,c4aP,c4TV,5cEb,aIt9,9kWz,5dwx,eQ83,eQAh,ePTb,ePYV,kjTp,n3Fp,n3ox,iXyb,orhx,iXJr,kjI9,iYfb,lIcx,n45x,n3QF,kk2F,eQLx",
                    "8c18": "luYt,oqRT,h3zr,h3Lz,5jOz,8fZR,cEKv,cEQH,e8et,fDEf,k0u/,h4vR,cFAP,cFGV,k0MZ,mYSp,mYof,lvwJ,pWVR,ordR,lvkD,izlh,fDa5,9IXh,9JBz,5kQP,5kaD,9IXn",
                    "57a9": "orU1,oqXP,e8qp,orB/,e7Gh,e8Oz,ordR,e82r,h3Xv,j/KP,k0H1,h4vR,3R2T,bcfd,3QoH,3RJ9,8gK1,8fNP",
                    "82ce": "mYSj,mXy1,pWPF,k0o/,k00R,pWrH,fDs7,izrt,cFAJ,fE6p,fCU7,cEmx,5kWP,5jCx",
                    "83c5": "lIcr,lGZN,orDX,iY41,iXyb,or6h,hzW3,iXJx,dsMP,gcEx,gbvp,drDN,aIcb,aIK1,dsw1,dr+h,3QLh,3RmF,7Z1F,7Yqh",
                    "626a": "or0z,5cyF,3QA1,5cnp,hzKP,aHRN,kj4H,kjwV,lHMj,n3zN,3R03,kjI9,5dlb,3RxV,5dwx,lIcx,lHXF",
                    "54d0": "k0MZ,k0cZ,8gx/,k0v5,e8en,e8Oz,8gPZ,8gfZ,3RJ3,3QSX,ordX,os49,mXxX,mXQ9,cEEF,cEmx,mXy1",
                    "560c": "os43,ordX,h4BH,orO1,orvZ,h4jP,e8Ix,e8et,bc35,bcVp,bcr9,5ksL,3R93,5kgJ,5jUz,5j+B,9J1t,5kWP,9Jpx,mXxX,mXQ9,cEEF,cEmx,mXy1,lw4P,h4TV,h41H,lveH,lw4V",
                    "5d6b": "7YeX,oqX1,6ATH,3Rbp,5c+H,5cEh,dskN,eQdN,dskH,ds3V,iXP9,iYfb,dsw1,dsMV,eQFP,c4TV,5da1,5dqV,3RDr,6BjV,lHpP,lIcx,orsH,n3Fp,n3Qz,orPh,iXyb,7Yqh,7Y3N,iXbN",
                    "5e8b": "n3zH,orn9,lIcr,lH91,7Yf1,3QoN,3QFz,3QLh,5cPx,c4IF,dsBF,ds3V,aInr,6AZp,5dfF,3RxV,3RDx,gbMb,gcyV,dskH,iXUN",
                    "960a": "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,9kjb,9kWF,hAaX,hzKV,3Quj,kjap,6B8z,c4IF,c45h,6Axh,6B8F,ePYP,kjwV,kjZ1,eQp1,ePYV",
                    "6eb2": "kjfX,n2Yp,ePCj,hziN,5cnj,c3/F,3QFz,3QLh,5cPx,9kWF,c4TV,c4aV,aInr,5dfF,3RxV,3RDx,oryj,c4xp,lHB3,kjwV,ePYV,eQFV,kkdV,kk2F,hAgz,hArV,hzKP,hzW9",
                    9016: "lH8X,oqRp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,5c+H,c4IF,orJF,gctb,iYqx,6Bpr,c4IF,7YvP,6AIx,7YH9,iXP9,n3dh,hzFb,orn9,eQ83,9kdF,eQjj,hA5p",
                    "5adc": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,n3KX,oryp,lHB3,lI6V,iX+j,kjNN,kk8b,iY9F,hzQr,hAxx,c4TP,c4m9,3RgX,9kR1,6AIr,6Bpx,eQ83,eQFV,9l5V,9kA9,eQ89",
                    "7f2a": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,3R2T,3Re/,6NCj,9Jpr,8gy5,6N8j,6N2d,9J1n,9J7z,cFiR,bc91,fDEf,fDQh,bcVp,iA5z,os49,orO1,orjN,orB/,izDv,lv+J,izPx,lvOH,k0H7,k0cT,lvkD,izlh,lvwP",
                    "67e9": "3QFz,or0F,5dwr,5cPx,n3ox,n45x,gc6H,kjZ1,hA5j,hAxx,gcEx,aIK1,9kFN,9kA9,9lbr,c4Oh,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh",
                    "6aa0": "lH8X,oqX1,hziH,kjg1,iXhj,iXJx,ds9x,aIch,aI6F,c4m3,c4rN,iYkV,lI6V,lHMj,lIcx,iXUH,orE1,c4Zr,hAb1,9jYH,9lbx,3R03,9kA9,7YSj,5dfF,3RxV,3RDx,3QoH,3Qup,5cyF,9kux,n2SH,n3ox,or6b,lHkh,dr+b,gbMh,gbB1,drP1,dr+h",
                    6684: "fD43,fCO1,pWJJ,orB/,k00R,mY67,mYSp,k0N3,izlh,iA5F,cFAJ,cF0J,5k4B,5kWV,mXxX,mXQ9,8fTV,8fBN,mXy1,fDs7,fE0j,9JBz,9J1t,fDsd",
                    "80d9": "hzFb,hzop,c45b,c3/F,c3Qp,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,kjI3,kkjx,oryj,iXJx,9l5P,9kLp,eQjj,eQFV,3Rbj,kjTp",
                    7145: "oqWX,6Am1,3QoN,5cEb,7YkF,3QWr,lHvx,n3zN,hzQr,hz/N,dskH,ds9x,dsvX,dsSx,c4Zx,7Z7h,3Rbp,aIJX,9kR1,3RDx,9kFH,9kjh,gccj,hAb1,lHS1,lI6V,gcyV,gcEx,hztX,kjrh,ePwH,iXbN",
                    "784c": "or7L,oqLN,fCNX,or1V,pWJJ,k06T,mYc7,mYMj,lv+P,cF0J,cEWD,k0iZ,cFAP,cFGV,h3Lt,h41H,8g3X,8fNP,h3Lz,bcJh,5kKT,5kmP,bclj,bcJn",
                    "949b": "kjCr,kjg1,gbAX,gbRV,c4aP,c3KN,7YvP,5cyF,gbGF,hAxr,hzW9,orDX,c4D1,3QQV,5d4j,6AZp,3RDr,c4D1,or0z,gbpN",
                    9545: "gbpH,or0F,kjCr,kjg1,kjNH,kkjx,n45x,n3zN,6ATN,3QWx,6ACP,3QFF,gbGF,gbAX,gbRV,c4gr,c3KN,dsSr,dsw1,9kQX,9lbx,hAaX,hAxx,5dwx,5da1,hAb1",
                    "9e67": "n3db,or0F,lHB3,lH3p,6Agp,3QoN,5csX,3QA1,3QLb,5cEh,5cPr,3QWx,3R5H,5c+N,5dfz,3Rsh,3RxV,5dwx,dsSx,dsqp,lHMp,lI6V,gcyV,eQAh,iY9z,hAgF,orJz,lHMp,iXJr,9kux,9kdF,iXsF,gc13,gbB1",
                    "88f1": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,aIhP,drUF,ePTh,lIcr,lHB9,hzW3,hArV,dsSr,ds9x,7Z7b,aJ4x,aIPz,9kWF,6Beh,3RDx,6B2X,3R5N,aIyN,6ACP,dsw1,orE1",
                    "4ef3": "orbP,iXhp,iXbN,3QFz,lHeF,6AZj,3R09,3QWx,n3ox,eQjj,eQ2x,hAxr,eQAh,6Bpr,3RDx,3Rsh,5dfF,orJF",
                    "886e": "n45r,n2SN,orn3,n3u9,kjlz,kk2F,hzW9,c4m9,aInx,c4aV,aHRH,aHXp,c3/F,hzW9,gbpH,gcyV,dsBF,3QoH,3Qup,5cyF,7YvV,9kux,7YvP,3QQV,3QWx,5c+N,9l0b,6B31,9kFH,5dfF,3RxV",
                    "968d": "lHGH,orE1,iYfb,iXJx,ds3P,dsMV,9l0b,9kux,5cEb,5dwx,dsqj,5d4p,aHXj,9k81,9kdF,aIch,dr+h,gbB1,iXyh,n3dh,n2SN,3QoN,lHvr,gbXx,gcth,lI1h,lHvx",
                    5793: "oqWX,7Yf1,7Y3N,9kjb,7Yf1,9kur,9kA9,gcth,iYfh,lHvr,lIcx,hziH,hzFh,oryj,n3L1,lHRX,gbXx,gcth,c4TP,6AZp,3QQV,3QLh,3RxP,7YY1",
                    "832f": "lIcr,lGZN,orDX,iY41,iXyb,or6h,aHRH,gbMh,3QFz,drUF,3QQP,3QWx,c4D1,gci1,eQFP,gcth,ds9r,dsSx,c4CX,6Beh,3RDx",
                    "84a1": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXP3,kjI9,iXmX,iYfh,gbRP,hzFh,hAaX,gccp,c4TP,eQLx,ePCp,c3KN,c4m3,ds9x,aHRH,aJ4x,aInr,7YvV,5cyF,3Qup,3QoN,7YvP,7Z1F,5dfF,3Rh1,3Rbp,5c+N",
                    "63be": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,orsH,iXJx,iYfh,lHB3,lI1h,gcth,gbRP,gcEx,gccj,c4gx,c4aV,eQjj,dsw1,5da1,3Rbp,3R5N,5cEb,5cPx,6ATN,7YSp,c4xj,9kA9,7YvV,7Yqh,aIPz,dsMV,5dwr,aIK1",
                    5511: "fD9/,mY67,fDyd,izln,fDKf,lvUT,mYGn,fE6j,izVD,cEQB,cFAP,5kWP,5j+B,pWPF,5ksL,luMr,lv2F,cEEF,cEmx,luMx",
                    "56f9": "ort9,mQWL,gvfj,gv8L,mQWF,gw3b,gw9B,eXFj,gvFf,dkIT,dljT,8Chv,5rRD,aahb,q1ib,q2Jd,5smd,5qXh,q1ih",
                    "72ce": "n2SH,iXyh,6Axh,3QA1,5cnp,gbMb,c3KN,orbP,hziN,3RgX,lHS1,hzQr,hAxx,lHvr,lIcx,dsSx,ds9x,lHvx",
                    "601b": "3QzX,oqX1,5dwr,5cEh,gbXr,gcth,iXsz,gbMh,drDH,iXbN,aIVb,lI1h,lHvx,aInx,aIVh",
                    "6f4b": "kjfX,n2Yp,ePCj,hziN,c3/z,3Qup,ePNz,lHvx,orhx,hz/H,lHvx,ePYP,eQdN,6ACP,c45h,c4gr,6AO9,6AZj,c4D1,5cyz,5da1,3Rmz,7Zix,iYqx,iY9z,iYw9,hAaX,orPh,eQAb,7Z7h,3RJ9",
                    "5f2a": "oqLH,ordX,k00X,j/ET,fCU7,fDgb,5k4H,3QMR,3QGV,5jOz,5kWP,5kgJ,cFoH,5kEN,cFcF,cFAP,fDs7,fDyj,h4vR,mYSp,os49,orw3,fE6j,izVD",
                    "9a9d": "n2SH,n37F,ePNF,kjaj,drJp,dr+h,5cEh,3QFF,3QA1,5cnp,aI6z,9jYN,7Zir,7YBx,c4CX,3Rh1,dsqj,hAmh,n3Wh,n3Qz,n45x,gcEx,eQFV,iXUH,gci1,hA5j,eQ89,eQ2x,n3ox,oryp,c4Zr,3RDx,3QWx,c4gx,c4Zx",
                    "73e7": "n3db,n2SN,n31X,6Am1,6AaN,7Yqb,6Am1,3QLb,7YH9,orn9,orDX,5da1,3RmF,3RDx,6Bpx,dsBz,aJ4x,kkdP,hAgF,iXDP,gc19,c45h,gbpH,gbMh",
                    6829: "3QzX,oqX1,5cV3,3R5N,5d4p,lHMp,lHvx,gc13,hzQx,aIhP,dsqp,ePNz,dr+h,c3KH,gbvp,iXyb,iXbN,gctb,hAgF,aIJX,dsSx,5dlb,3RxV,5dwx,lIcx,lHXF",
                    "8f75": "oqWX,ePwN,ePTh,3QFz,gbGF,aHRH,aIhV,kjwP,kj4N,3QQP,7YMN,3RDr,7Z1F,kjI3,kk8h,c4Oh,c4m9,kjI9",
                    "725d": "fCNX,luYz,izlh,iyTn,e88h,bbZ5,9Izj,9Itn,or7L,3QMR,orvZ,5kmP,3Re/,3RJ9,8gW9,cF6J,k0N3",
                    8167: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QWr,eQ2x,eQjp,3Rbp,3R5N,7YBr,7YSp,aIEj,aInx,7Z1z,dsBF,5dfz,3Rsh,5dqV,eQFV,gcEr,n3Fp,oryp,gbMb,n3Fp,hAgz,hzW9",
                    7962: "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,ds3V,5cV3,3R5N,3Rbp,5da1,hAb1,hArP,iYqx,kkjx,kjI9,hzQr,orsN,7YvP,c4m9,7Zir,c4Oh",
                    "771a": "pWrB,lv2F,j/ET,j/WL,k0H7,orU1,mYMj,mXW5,pWJJ,h4jP,h3Fx,h4Z/,iA5F,bcJh,bbZ5,8fZL,8gK7,5kKN,e8ID,e7Yl,5j+B,5kKT",
                    "94d7": "gbpH,or0F,kjwP,kjg1,kkdP,kjI9,gctb,hArV,hzW3,gc6N,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,dsSr,ds3V,3RDr,c4D1,3QWx,orDX,c4D1",
                    "77e7": "hziH,oqX1,iXDP,iXhp,drDH,ds3V,iXsz,9kdF,3QoN,3QWr,9kdF,5c+H,3Rbp,3Rh1,5dfF,dsBF,dsf9,hzW9,hAgF,iY9F,lHXF,lHB9,3RDr,or+x",
                    "75f1": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,iXP3,3R09,3RgX,iY41,7YXX,7Zix,7Yqb,7YH9,c4m3,c45h,c4TP,c4D1,gchX,gcEx,gbMb,gc19,c3KH,gbGF,hzoj,kj4N",
                    8031: "3QzX,oqX1,3QLb,6AIx,lHvx,lIcx,orDX,n3QF,lGZH,lHkh,hzFb,hziN,hAxr,hzW9,dsSr,gcyV,iYfb,dsHh,dsvX,iY41,gccj,dsf9,aJ4r,aIyN,5cV3,aIK1,drDH,dr+h,6AaH,aHXp,7Yqb,9kdF,7YXX,7Zix,5dwx,5da1,7YY1",
                    "866c": "6Arz,or0F,6AO3,5chN,9koP,5cV9,6Bpr,3RDx,3Rh1,5d4p,oryp,iXJr,ds9x,drDN,iXbN,iXJx",
                    8713: "oqWX,5ct1,5chN,5csX,6ACV,9kjh,3QLb,7YH9,eQ89,ePYV,kjI9,n3u9,n3dh,orUP,lHMp,7Z1z,kk2F,7Zir,7YSp,gc6H,gcEx,3RDr,3R5N,6AIx,drDH,iXbN,iXyh,dr+h,drDN",
                    "874c": "oqWX,5ct1,5chN,6ACP,5ct1,5cPr,7Yqh,n3zH,3R5N,orDX,lHpV,3RxP,orUV,7YXX,7Zix,c4xj,aIK1,9kur,dsf9,gchX,gbRV,kjYX,hAmh,c4Ob,eQp1,iXyb,dr+h,drDN,iXbN,iXyh",
                    "87c0": "oqWX,5ct1,5chN,6ACP,5ct1,7YvP,5cPx,9lbr,9kjh,dsqj,3Rbp,c4Ob,eQuF,dsHb,ds9x,iY9F,hArP,iYqx,dsSr,eQFV,hAaX,hzW9,kjTp,lHpP,lI6V,iXJr,kjwV,ePYP,gbXx,orsH,n3Fp,dr+b,drDN,iXbN,iXyh,dr+h",
                    "7b31": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,lHez,kjrh,iXDV,aHRH,hzzF,ePHX,eQFV,5dqV,3Rsh,3RmF,5da1,7YSj,c4xp,c45h,7Yqh,7YSp",
                    "7bc1": "kj4H,or0F,n3or,n321,n45r,n3L1,kjNH,orJF,kk8b,n3QF,kjrb,n37F,hzKP,iXJx,eQuz,ePNF,9k2j,9l5V,6Beb,6Am1,3QoH,3RDx,9kA3,3R09,hzzz,c3/F,c4IF,hAgF,hzzF",
                    "822d": "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,6B2X,3R5N,lHGN,eQoX,eQdN,gcEr,dsBF,6Bpr,3RDx,3Rsh,5dfF,n3QF",
                    "7c9e": "3QFz,or0F,c45b,aIhV,7Y3H,drP1,gbXr,gbpN,lHvr,iXyh,iXmX,lGZN,lIcr,lHGN,lI1b,9l0h,9l5V,9kLj,aIK1,lHS1,gc6H,5c+N,5dwx,gcEx,gc6N",
                    "8d84": "6Axb,or6h,3RDr,3QWx,6Am1,3QoN,c3VX,6Am1,aIt3,aIch,7Zir,7YH9,7ZcP,lI6V,lHMp,7YSp,dsMP,dsqp,hA5j,hArV,kjfX,kjCx,gc13,gbvp",
                    "91a2": "orjN,oqLN,or7L,cEKB,cEQH,8fHN,8g3X,bbH1,cEyz,oqXP,mYSj,mYij,pW/H,mYAh,h4dJ,5kyL,bcxl,5l0V,5kgJ,5kWP,bcVp,bclj,5kmP,bcJh,5kKT,k06N,5kaD,5jCx,j/yN,k06T,k0oV,fDEf,fE0j,k0N3,k0o/",
                    "8df9": "kjNH,n3u9,gbXr,gc6N,6ATN,3QWx,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,6Arz,hzzF,6ATH,3Rh1,3RDx,n3Wb,5dlh,n3KX,orUV,eQLr,eQp1,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e9c": "6AlX,hzu1,7Yqb,5cnp,5chN,drDN,c45b,c3W1,7YBr,c4gx,c4Oh,7Z7h,3RxP,3Rsh,5da1,6AZp,5c+N,3QWx,3QQV,9kLj,6AZp,gccj,eQdN,eQ89,orn9,kjrb,n3iV,iXUH,iXyh,iXJr,gbXx,ePYV,eQoX,gcnF,iY9F,iYqr,iY41,gcEr,eQLx,eQAh,orPh,lHRX,lI6V,lHpP,lHGN,n3KX,kjTp,n2SH,n321,n37F,hzzF,hziN,n2SN",
                    "972d": "orPb,oqX1,iYqr,lIcx,lGZN,iXbN,hzzz,iXn1,kjrb,iXDV,hAaX,iX+p,kk2z,iYfh,orn3,iXP9,eQuz,eQjp,gbXr,gcyV,dsMV,dsf9,gc19,gcyV,6ACP,c4xp,aIyH,aJ4x,5dwx,3RxV,5dlb,5c+N,9kFN,6AZj,9kWF,6BjV,3Quj,7Yqh,5csX,c3W1,c3KN,gbvj,ePI1",
                    "9c85": "oqWX,kj4N,lH3p,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3QQP,7YMN,aIEp,orE1,kkdP,lI1h,hzW3,hAxx,dsqj,dsSx,9l5V,3Rbp,3R5N,9kQX,7YY1,3RxV,3RDx,9koP,hzKV,hzop,9k2p,9koV",
                    "9cb5": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3QWr,3R09,6AZp,dsqp,6Bpr,3RDx,3Rsh,5dfF,dsBF,hAgz,hArV,hzW3,hA5p,n3Fj,lHB9,dsf9,dsMV,lI6V,lHXF,9koP,hzKV,hzop,9k2p,9koV",
                    "977c": "oqWX,iXn1,iXyh,or6h,lGZH,lHvx,3QFz,iXsF,7Y3H,7YBx,5dwr,5cV9,hz/H,hAmh,gbvj,gbRV,c4aV,c3Qp,gbvp,c4Ob,n3Wh,n3zN,c4rN,c4Oh",
                    "992e": "n3or,n2SN,iXbH,n37F,lHez,iXDV,ePCp,ePwN,gbGz,iXhp,kjI3,orE1,lI1h,kkjx,dsBz,hAxx,iYfb,gci1,iX+j,kjZ1,hzQr,aHXp,aHRN,hzW3,aIVh,aI+V,eQ2r,eQ89,9kdz,9kR1,c4D1,c3/F,3QFF,3Quj,3QLh,5cPx,aI6z,aIK1,7YH3,5d4p,3RmF,3RDx,7Z7b,5da1",
                    "9ee9": "iXmX,kjap,kjwP,iXyh,7Ykz,n37F,7Y3H,7YBx,c4aP,c3Qp,aIyH,c4m9,eQdH,dsqp,hz/H,hAxx,gcEx,eQFV,dsBz,7Z1F,3R5N,9lbr,9kA9,5dwr,7Z7h,orJz,hAgF,lHMj,lI6V,3QWr,5cPx,5cEb,3QLh,3QzX,5ct1,5chH,3QoN,n2SH,n3ox,gbXx,gbpN,n2SN",
                    "4e93": "orNX,or1V,iyNb,iA5F,izfl,bc3b,3QuT,izJv,5kyR",
                    "502d": "orbP,iXhp,iXbN,3QFz,kjlF,3QQP,3QWx,5c+N,6B31,9l0h,c4Oh,c4aP,c4Zx,eQdH,9kA9,3RxV,iY9z,eQLx,iXUH,ePYV,ePTh,kkjr,kjrh,n3or,orPh,gccj,n3Fp",
                    "8bf9": "luYt,oqRT,h3zr,h3Lz,5jOz,8fZR,6MS5,6MY7,8gr/,mYo9,3Re/,mXV/,mYSp,6MY1,mY67,e8qp,e88n,izlh,izDv,izJv,iA5F,9JHF,3Rl5,3RJ3,8gE1,fDQh",
                    "54ff": "lGZH,lHvx,hzQx,gbRV,hzFh,gbpH,kjlF,or0F,dsSr,drDN,dsHb,5dlh,3RmF,3Rh1,5d4p,lHGH,lI6V,hArV,hz/N,lHGN,6ATH,aIyN,aI6F,6ArF,6ATN",
                    "82b0": "iXDP,orbV,oryj,iX+p,lGZH,lIcx,c4m3,hzW9,ePwH,eQLx,c3VX,c4IF,5cEh,3QA1,3Qup,3RxP,3Rsh,6AZp,9koV,aIch",
                    8418: "lIcr,lGZN,orDX,kjZ1,kjrb,or6h,iXJr,gbRV,drUF,c3Qp,c3KN,hAxr,hziN,gccj,dsMV,dsSx,ds3P,dsqp,aIVb,aI11,9kLj,6B8F,5dqV,5dwx,aIt3,5cV9,3QWx,5cJV,9koP,6ArF,5cnp,5chN",
                    8616: "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXmX,kjlF,gbvj,gbXx,iXJx,iXhp,aHXp,aInx,ds9x,drJp,gcnz,aIPF,gc6H,gcEx,gchX,hAb1,iY41,iYkP,iX+p,kk2z,iY9F,gctb,iYfh,dsqj,dsMV,7Y3H,7Zix,3R03,9kA9,3RDr,3RxV,5dfF,6AZp,6ACP,3Qup,3QoN",
                    5421: "5cPr,orhx,7YMH,3QQV,gbXr,gccp,iYqr,eQuF,orDX,5da1,3RmF,3RDx,6Bpx,lGZH,lHkh,c45h,c3KN,lGZN",
                    "55d4": "lIcr,lHvx,iY3X,orE1,gcyP,gc19,dsf3,dsMV,aI+P,aIt9,7YBr,7Zix,7YH3,iXP9,iYkV,7ZcV,3RDr,5dlh,3QWr,5c+N,kj4H,kjrh,aIch,aHRN,kj4N",
                    "5d03": "7YeX,oqX1,5cyz,5cEh,aIyN,6Bpr,c4D1,oryj,3Rbp,kkdP,kjCx,eQoX,hAmh,eQdH,gc19,hzQx,iXyb,7Yqh,7Y3N,iXbN,dsSr,ds3V",
                    "996c": "gbpH,oqX1,gbAX,5ct1,9koV,hzFb,iXDV,kjwV,kjap,gbRP,orsN,kkjr,kjI9,hA5j,7YSp,3QWx,5d9X,3RmF,3Rsh,5dqV,dsMV,ds9x",
                    "61d4": "3QzX,oqX1,3R5H,5d4p,9kLp,9koP,9lbx,5cJP,7YH9,5dqP,7Z1F,c4rH,c4IF,iXsz,gbMh,drDH,iXbN,n45r,n3iV,oryj,n3Fp,ds9r,lHvx,lI6V,dsMV,ds9x,gc6H,iXUN,iY9F,gcnF,gc6N",
                    "6dde": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,orhr,3QWx,iXP3,iXyh,gc6H,n3L1,n3Wb,gcEx,gcnz,5cV9,6BjV,3RDr,9l5V,dsf3,aIyN,7Ykz,ds3V",
                    "8fb6": "lH8X,oqRp,hziH,hzzF,7YkF,3QWx,3RDx,7Ykz,3QoN",
                    "5aaa": "oqRj,aHXp,6Axh,5dwr,5cEh,5dlb,dsHh,ds9x,5cPx,dskH,5c+N,5d9X,dsw1,kjI3,kk2F,iXbH,iXyh,9kjh,3QoN,hAgz,n3QF,n3u9,hzW9,hAgF",
                    "7f0c": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MG9,8g3R,5j+B,9J1n,5kgJ,3R93,3Rr1,5kKT,6Nwn,9Jdp,8gy5,6NIj,9JBz,orBV,cFcL,izlh,izVD,cFuN,orU7,orjT,cEWD,cFuT",
                    "69b1": "3QzX,oqX1,6Axb,c4rN,dskN,aIyH,3R5N,3Rbp,5da1,3RDr,7Z1F,aIK1,c4D1,7Z1z,c4Zx,gcEr,gbRV,lHpP,lIcx,orsH,n3Fp,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,dsHb,iYfh,iXP9,dsf9,dsHh",
                    7085: "lvOH,lv2F,fDs7,bcfd,5jUF,3QuT,3QoN,e7Yf,bbT9,9Jdp,e8Cx,bcf7,5kEN,3RD3,3RJ9,or1P,iz3p,izPx,orO1,or1V",
                    8093: "n3u3,orhx,lGZH,lIcx,lHez,hzzF,hAmh,c3/z,c4IF,9kWz,9kdF,5c+H,3Rbp,3Rh1,5dfF,eQuF,ePNF,3QFF",
                    "709d": "or0z,7YkF,3QoN,5cJP,7Yqh,6BjP,3RxV,3Rbp,5c+N,gc6N,gcth,aIVh,9kWF,aIK1,gcEr,kk2F,n3L1,orE1,n3KX,kjTp,gbXx,hzzz,kjwV,ePCj,iXhp",
                    7839: "n3iP,n2Yp,ePwH,n37F,gc6H,aIK1,5dwx,3QWr,3R09,9kWF,eQFV,gcyV,orPb,iYfh,iXUH,orsN,lIcr,lHvx,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "76cd": "orn3,hzW9,drP1,dsHh,c4Ob,eQuF,hziH,hAxx,lI1b,lH91,3QoH,3RDx,3QzX,9k81,9kWF,3RmF,9kFH,3R5N,3QQP,9koV",
                    "952a": "gbpH,or0F,kjwP,kjg1,hzFb,hzu1,hzzz,3QFF,6ACV,c3KH,c4aV,c4m3,c4rN,hAmh,lI1h,lHRX,iY41,eQ89,oryj,iXP9,lHGH,lIcx,dsSx,c4TV,dsHh,5dwr,7ZcV,5dlb,3Rsh,3Rh1,5d4p,9kLp,7Z1z,aIK1,3QWr,6AO9",
                    "9e46": "kj4H,n321,kjCr,n3dh,eQ2r,iXsF,ePwN,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,orJz,lHMp,iY9z,kjZ1,c3Qj,5cnp,5cJV,c4aV,c3Qp",
                    "7ab3": "n3u3,orn9,kkdP,lIcx,n45x,n2Yp,kj4N,iXmX,kjlF,iYfb,kk2F,gctb,gc19,6AO9,3QQV,6ACP,5cEh,5cyF,ePNF,aIhP,c45h,3QoH,5cnp,gbvp,gbRV,eQjj,5d4p,5da1,6B8F,5dlh,3RDr,c4IF,eQuF",
                    "527d": "n3KX,n2SN,aIVb,kk8h,aHRH,aIK1,dsqj,drJp,n3u3,gc19,gbGz,n37F,aIhP,3QQV,3QLh,5cyF,5chH,7Yf1,7YMH,5da1,5dlb,3RxV,3RDx,or+x,gccj,kjTp,kjap,gbvp,gccp",
                    "516e": "i5ub,or9J,i6BB,i5NP,orMx,i6Vd,i655,dkCz,dlqr,708X,3Rjd,3RcF,6/Er",
                    "961d": "bbH1,9Izj,9IFp,bbZ5,fDa5,iyZj,lv8B,or7R,oqLN,3QoN",
                    5785: "7YeX,oqX1,9kjb,6AaN,iXbH,iXyh,kkjr,kjwV,n3Wb,lI6V,oryj,eQjp,6AIx,3QLh,3QFF,6Bpr,3RDx,3RmF,5da1,eQp1,c4TP,5cV9",
                    8306: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbRP,ePCp,7Y9p,7Yf1,9koV,c4aP,7YvV,5cyF,3Qup,3QoN,3R5H,eQdN,eQFV,9l5V,7Z7h,7Z1F,9kR1",
                    8469: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,hzzz,ePCp,ePYV,3QQV,3Qup,ePCp,9koP,9k2p,6Bpr,5dwx,3RxV,3R5N,5cV9,gc19,gcyV,aI+V,aIt9,gchX,aIK1",
                    "63b4": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,hArP,hzW9,dskH,dsHh,9l5P,9kA9,c4Ob,aIVh,hAaX,9kR1,lHvr,5cPx,5dwx,lIcx,lHvx",
                    "54dc": "n3Fj,orsN,lHpP,lIcx,kjI3,gcnF,eQFV,eQLx,3Rmz,dsBF,3QWr,6ATN,dskN,dr+b,ds3V,gc6N,hAb1,lI6V,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5654: "q1OH,q269,mR19,gvlJ,mQJH,lgJX,q2j1,lher,gwmJ,mRE7,jGOl,mRkB,q2CF,i6bF,i6BH,6/Rj,8Chv,8CHl,702n,5rl7,5smd,oqLH,or3j,dkCz,dkj1,oqLN,eXsl,eY3l,aaU5,aahb,eXsr",
                    "5f95": "kj4H,or0F,ePwH,kjrh,3QzX,gbB1,c4rH,5cyF,6Bpr,c4D1,oryj,3Rbp,kjCr,kkdV,hzQr,eQdN,eQoX,hAmh,ds3P,dsSx",
                    "5fd6": "3QzX,oqX1,3RgX,3RmF,5dlh,orPh,kjCr,kkjx,c4xj,eQdN,iXyb,gbRV,drDH,iXbN",
                    "6c4a": "luYt,oqRT,iyNb,fCU7,cEEz,3QuT,3QGP,3QMR,cFiR,izVD,mYGn,mXW5,k00R,fDm7,3RJ9,izxt,h4pL",
                    "6ebb": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,5kax,3R2Z,5kmP,fDyj,fDa5,fDKf,fE6p,5kWV,3RD3,5kKT,bcPd,6Nkl,cFiL,9JvD,9IXh,cEKB,6ML/,bcfd,lvUN,lvkD,izlh,orjT,orU7,izVD,izln",
                    9082: "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,dsHb,6Beh,aIEj,dsw1,9lbr,9kLp,c4Iz,c4Zx,dr+b,dskN,9kFH,9kjh,5cV3,6ATN,hz/N,hzFh,5cEh,6AIr,hzQx,lHGN,lHpV,orbP,hzzF,n3KX,n3/V,hArV,gcth,gccj,iY9F,n3QF",
                    "9a78": "oqLH,or1V,fD49,luSx,e7Gn,e7Yl,5j+B,3QGV,3QAP,5jID,bbT3,9Inh,orvZ,izfr,3R2T,k0cZ,5kyL,3Rr1,5kKT,orU7,k0u/,k0T9,cFoH,e8wB",
                    "73ae": "n3iP,n2SN,7Ykz,n37F,6AaH,7YvV,gbRP,gbpN,lIcr,lHB9,hArP,hAmh,hzW9,ds9r,dsSx,7Zix,6BjV,7Z7h,orDX,3Rh1",
                    6860: "3QFz,or0F,5dwr,5cPx,lHXz,5dfF,lHvr,lI6V,5d4j,lHMp,eQ2r,c4m9,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,c4Ob,eQLx",
                    "6b81": "orgb,oqSl,oqYF,gv8L,dkj1,dkIT,gv8L,lgjV,lgDx,eXm1,8BTz,3Qvl,3Q/B,3R6f,5rRJ,bNx9,dlDp,dl0v,aau3,5s2H,3RJ9,3RPJ,gwmD,gwg9,gw9B,orZB,orzF,i6i9,gvFf",
                    "8d48": "lv2z,8fTV,3QoN,8fTP,3QSX,9IRl,ordX,oqRT,9Itn,os43,orpZ,6N2d,5kaD,6Nqb,3Re/,fDEf,fE6j,fDyj,k0MZ,k0j3,9Jvx,cFGV,e8Cr,bcDh,5kWV",
                    "811e": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3RDr,3QQV,orDX,3Rh1,lI1b,hAmh,gcnF,eQLr,hAmh,eQjj,hzW9,ePYV,lHB3,hzW9,aI+P,aIt9",
                    7118: "lI1b,lH3p,iXmX,iY9F,gcEr,gbpN,eQuz,9kWF,7YY1,7YSp,aIhP,9kux,dsMP,ds9x,3RDr,5dqV,5d4j,3Rbp,3QQP,5cJV,5cnj,3QoN,7Y3H,gbXx,orn9",
                    7905: "n3db,n2SN,ePwH,n37F,n3zH,orn9,lHvr,lHMp,ds9r,dsf9,dsqp,aIt9,5cV9,3QWx,5cJV,9kQX,9koV,3RDr,7Z1F,hAgF,orJz,kjZ1,lIcr,lHXF,lI6P,7ZcV,3Rh1,hztX,hzFh,9kjh,9k81,hzu1,iXJr,iX+p,gccp,gbXx,iXJx",
                    9561: "gbpH,or0F,kjwP,kjg1,n45r,n3ox,hAgz,kk2F,kjTj,hA5p,c4Ob,c4rN,6AO3,6Bpx,3RgX,9kR1,6ACP,3QFF,gbGF,gbAX,gbRV,c4aP,c3KN,kkdP,hArV,hzW9,kjI9,kkdV,eQdH,eQAh,9l0h,9kFN,eQdN",
                    "75b4": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,5d4j,3Rh1,3RmF,5dlh,hAmh,hzKP,hAxx,aHRH,ePNF,kj4H,hzop,eQ2r,eQjp,9kLp,9kux,eQ2x",
                    "758b": "q1oL,q2CF,os49,lher,5rEF,q1/L,5sm7,5ryb,a9ZP,5qXh,jFTZ,a9ZP,gw9v,gvFf",
                    "86c4": "6MG3,pWfF,6MS5,5jCx,5kax,9IRr,pWVL,cFiR,k0cT,k0T9,5kmJ,5kKT,cFuT,cF6P,5kmP,k00R,e82r,e7Gn,j/ET,k00X",
                    "872e": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,7YSj,7YBx,3R03,3R5N,c4Zx,7Zir,3RDx,aIK1,gccp,oryp,lI1b,n3QF,kjwP,kkjx,iXyb,dr+h,drDN,iXbN,iXyh,gbXr,gc6N,aIyN,aInx,gbXx",
                    "7f45": "oqWX,5ct1,5chN,5csX,6Axh,7Yqh,3QLb,6AIx,kjCx,kkjx,iYkV,gc13,hAgF,gcyP,eQAh,eQp1,gccp,iX+p,oryj,kjTp,n3Wb,n3Fp,c4m3,dsMV,9kLj,aIyN,c4Ob,9l0h,9kA3,9lbx,c4CX,5da1,3Rbp,5c+N,dr+b,iXyh,iXbN,drDN,dr+h",
                    "7b72": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,dsf3,hzW9,gchX,eQjp,ePYP,gbMh,aIVb,aI11,7YeX,7Z7h,5d4j,3RmF,5dlh,dsHh,drP1,3QA1",
                    8885: "n3iP,orhx,iXJr,kjwV,iX+j,kjZ1,n3L1,n37F,hzzF,hAxx,c4Zx,aI+V,aIVh,7YSj,9kR1,aIt3,9kA9,3RxV,3RDx,5cV3,3QWx,3QQV,aIhV,6AaH,7Yf1,eQ89,drDH,dsHh",
                    "7fd5": "iXbH,iXhp,lHpV,orn9,lHMp,iYkV,iYqx,kjTj,kjwV,c4rH,c4TV,5dqV,3Rsh,3RmF,aI+P,5c+N,9kLj,7YY1,9koP,5ct1,5cnp,9k7X,7YkF,c3Qj,c4gx,5cPx,3QQV,3QLh,hAgz,eQuF,ePNF,hzzF,hAgF",
                    "8dbf": "orjN,or+3,mYMj,h4pL,h4TV,e8UF,8gK7,3Re/,3R93,3QML,9J7z,orw3,6MG3,iz3p,e7Gh,5jID,5jCx,e82l,e7Sp,cFcF,5kWV,3RJ9,8g3R,5jID,oqRN,or7R,iz9l,iyTn,oqRT",
                    "8e31": "6Arz,hzzF,6AaH,6ACV,drJj,6Agp,ds3P,drUF,hAxr,hz/N,kk8b,eQAh,eQp1,kjZ1,orDX,n3QF,lIcr,lHB9,7YH9,3QLh,3R03,3R5N,5da1,7Z7h,aI+V,c4TV,c4rN,aIEj,9kLp,5dlh,3RDx,n2Yj,n3iV,hzKV,hzop,n2Yp",
                    "96bd": "or6b,kjap,kj4N,c3/z,n37F,aI0X,aIPF,7YSp,7Zix,6Bpx,3Rsh,3RmF,3QoH,3Qup,5cyF,7YvV,aIhV,dsSr,drUF,gbGz,gcyV,iYkP,iXsF,lHez,lIcx,n3Fj,orn9,dskH,lHGN",
                    "9ca1": "iXbH,oqX1,lH8X,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,3QWr,kjCx,kjTp,5d4p,3R5N,5cV9,3Rmz,kk2F,kkjx,3RDx,3RxV,5dlh,dsHb,c4TV,c4rH,dsf9,n3or,n45x,9kjb,hzFh,hziN,9jYN,9kjh",
                    "9ac1": "luSx,lv2F,h3RF,fDm1,h47D,h3zx,fCO1,h3Fx,oqRT,ordX,h41H,bbH1,bc3b,8g3R,8fHT,3QML,5k4H,e82r,e7Gn,3QuT,9Jdp,6N2d,5kWP,9Jpx,orH/,3Rl5,k0iZ,k0H7,bcVj,bcfd,orU1,fDWn,fDyj,orw3,orU7",
                    "9ebe": "n3zH,orsN,n45r,n2Yp,5cnp,3QoN,6Beb,6ArF,6Bpr,3RDx,3R5N,5cV9,c4m9,c45b,c4Oh,9kWz,9kjh,hAmb,eQLx,kk8b,eQAh,iX+j,iYqx,iXmX,iXP9,ePYP,kjwV,hzFb,ePI1,gc13,hzQx,hAgz,eQdN",
                    "4e47": "kjaj,lHpV,orJF,lHB3,5cV9,3R5N,3RxV,5dwx,6Bpx,drDH,eQFV",
                    "4fe6": "orbP,iXhp,iXbN,3QFz,kjlF,5d4j,3Rh1,3RmF,5dlh,eQAh,c4xj,c4Zx,7YXX,9kLp,6ACP,9kA9,gccp,oryp,lIcr,lHpV,iXJr,iYkV,gcEr,gbMh",
                    "8bd2": "luYt,oqRT,h3zr,h3Lz,5jOz,5jUF,8g3X,lvUN,h4TV,iA5z,izln,pWVR,5kgD,e8et,e8Oz,5kQP,5kgJ",
                    "90fe": "orvZ,oqLN,5jCx,5ksL,3Rk/,orI5,os49,k0T9,h4HT,e8UF,9JHF,8gQ3,8gK7,9Jpx,6N8d,8g9T,cEEF,6MzZ,6MG9,e8kz,e7Gn,k0cT,j/KP,e7Yf,fDa5,h3Lt,mXK3,mYcd,h4dJ,h3Lz",
                    "9f19": "n3zH,n2SN,lHkb,or6h,lH3j,lHB9,gbGz,hzzF,hzKP,gbRV,ds3P,eQ2x,3R03,dsf9,5chH,5dwx,6Arz,5ct1,aIVb,aI11,gcEr,gcyV,hAgF,iY41,gccj,gci1,kkjx,kjTp,orPb,kk8h,n45r,n3L1,gbpH,gc19,drOX,7Yf1,7Z7h,dsHh,kjfX,kjCx,iXJx,iXn1,kjg1",
                    "837c": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,drDH,drJp,gbMh,iXP9,eQuF,dsMV,dsSx,ds3P,dsqp,aIVb,aI11,9kLj,6B8F,5dqV,5dwx,5cJP,3QWx,5cV9,dsf9,9koP,6ArF,5cnp,5chN",
                    8587: "lIcr,lGZN,orDX,iY41,iXyb,or6h,gbpH,iXn1,c3KH,ePI1,3Quj,drJp,3QFz,5cEh,9kjh,9kFN,5c+N,6AZp,3Rbj,9l5V,gcyV,gcnz,gcEx,eQoX,iYfh,gc6H,eQdN,ePTh,gbMh,eQ2r,hzQx,c4rH,c45h,c4Iz,9kWF,5dwx",
                    "5f11": "hzKP,n2Yp,n3iP,hzop,kkdP,kjI9,n3Qz,lI1h,orDX,gci1,3RxV,3RDx,7Zix,6B2X,5c+N,5cPx,eQdH,5c+N,eQ2r,eQjp,gbGz,5cyF,3QA1,aI0X,5chN,ds3P,drDN,7YBr,aIch",
                    "557e": "oryj,n3iV,orPb,7Z7h,3Rbp,n3u3,3R09,gccj,gbMh,aIEj,c4rN,ds9r,7YkF,hAaX,eQp1,dsMP,hAxx,3RDr,7Z7h,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5c9c": "lH3j,iXhp,iYkV,lI6V,iXP3,orn9,c4m3,gc19,c3VX,c4TV,gcyV,gbB1,5ct1,3QFF,3RDx,6Bpx",
                    7357: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or0z,hziN,iXP3,kjCx,kjYX,iX+p,gcnz,kk8h,hAmb,hAD9,gcK9,eQLx,eQAb,7Z7h,3Rbp,3RJ3,7Z7h,3QWr,6ATN,gc6N,eQoX,c4D1,c4gx,eQ2x,hAaX,hzQx,n4b3,n3iV,6ACV,3QFF",
                    "60da": "3QzX,oqX1,7Yqb,5cyF,9kur,5cPx,3R09,3Rsh,6Beh,9l5P,6Bpx,aIyH,7YSp,ds9r,dskN,hAgF,lHXF,lHMj,iX+p,gc19,gbXx,kjlz,hzFh,drDH,iXbN,orn3,iXJx,lHB3,lI6V,dsMV,c4Oh,dsBF",
                    "6d54": "luYt,oqRT,lvUN,lveH,or7L,orU7,izVD,iz9l,fCU1,iyNh,3QuN,cEEF,5kgD,3R93,3Re/,5kyR,h4vR,e7Yf,e8UF,8gfT,bc97",
                    "705e": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,c4gr,3QWx,ePTb,eQdN,gbRP,c4aV,c4m9,gc19,6Arz,6AZp,3RgX,5dfF,eQuF,eQLx,3RDx,3RxV,9kWz,9lbx,c4Zr,c4IF,hAxr,lIcx,lHkh,hzFh,hzW3,hzQx,kjCr,kjI9,kk8b,kk2F,hAgz,hAmh,oryj,hA5p,orbP,orUV,aIyH,7YMN,7Yqh,aIch,aIyN",
                    "59f9": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,lHRX,oryp,hArP,kkjx,kjCx,hzKV,hAgz,gbXx,gccj,5d4p,3Rh1,3RDx,6Bpx,aInr,c4TV",
                    "749e": "lHkb,lGZN,ePwH,ePTh,6AaH,6Am1,7Yqh,lH8X,6Am1,iX+j,oryp,orJz,iY9F,n3/P,lHXF,n3u3,lHMp,iYqr,iXJx,eQuz,gcth,gc6H,eQjp,dsSr,ds9x,aIt3,aI+V,7Zir,7YBx,dsvX,7YY1,5c+N,3QWx,3QQV,6B8z,3RxV,3RDx",
                    6978: "3QzX,oqX1,3R03,9kA9,lHB9,lHpP,n3Fp,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,ds9r,7Yqh,gccj,gbRV,eQoX,hAb1,c4rH,aIEp,5d9X,9l0h,orPh,hArP,kkjx,5dwr,9l5V",
                    "74ef": "ordR,oqLN,6Mo1,6MY7,j/KJ,9IXn,9Ith,k00X,8gDX,5ksL,5kmP,orw3,os43,orpZ,izxt,izVD,5kKT,3RD3,3RJ9,5kWV,fDE9,cFiR",
                    "6c21": "hziH,or0F,hztX,hAmh,6Beh,3RDx,6Bpx,7YXX,7YSp,9kA9,c3/F,gbGz,c3Qp,ePNz,eQjp,aInx,7Yf1,7Y3N,3QWr,6Axh,6AO3,7YBx,kk2z,kjrh,n37z,n3/V",
                    "6bc2": "n3or,n2SN,kjaj,kjwV,or0z,kjlF,gbXr,hzQx,hziN,gbpN,ds3P,drDN,ePNz,9k2p,9kux,3QLb,aIch,6AO3,6AaN,3R5H,7Z1F,dsMV,eQFV,eQdN,c4xj,7Z1F,3RDx,hAxr,hArV,iYfh,n3Wh,n3Fp,iX+p,hz/N",
                    8080: "lH8X,lI1h,dsHh,drP1,hAxr,hziN,orn3,c4m9,3R09",
                    "754b": "gbRP,gbvp,orDX,gbXx,iYqr,iXUN,iYkP,eQFV,c4Oh,5cV9,3QQV,3QLh,eQdH,dskN,aIEp,3RDx,n37z,9kdF,n2Yj,n3iV,9koV,9k2p,n2Yp",
                    "9e28": "oqRj,hzop,gbB1,gbRV,hzKV,kjfX,n3dh,3QFz,drUF,aHRH,aIhV,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,orJz,lHMp,kjYX,iY9F",
                    7656: "n3Fj,orsN,lIcr,lH91,6Am1,3QoN,3QFz,7Yqh,hzFh,hzW9,dsf9,dr+h,7ZcP,7YSp,c4Iz,3RmF,c4rH,c4Zx,eQjj,dsw1,dsHb,eQFV,gc6H,gcEx,iY3X,hAgF,hztX,kj4N,c3KH,ePI1,9koP,9kFN,5c+N,5cJV,9koV",
                    "533e": "or+r,oqLN,3QoN,3RDx,6Beb,6BjV,gcyV,gbMh,6Axh,gc13,7YH9,7YXX,gci1,c45b,c4TV,7Y9j,9k81,lH91,lI1h,iYfh,iXn1,lHB3,n3u9",
                    "50d6": "iXbH,or0F,3QzX,kjg1,aJ4r,aIch,dsHb,c4IF,c4m3,ds9x,hzQx,hAmh,eQAh,eQ2x,kkdP,kjwV,oryj,kjTp,n45r,n3dh,5cPr,7YBx,7Z7h,5dlh,5cPx",
                    "8c1d": "kjfX,n2Yp,hziH,hzu1,5ct1,7Yqh,3QLb,6AIx,lHvx,lI6V,hArV,hzQx,orsH,n3Fp,aJ4r,aIyN,3R5H,eQdN,eQLx,5dwx,3RxV,5dlh,eQoX,6B31,6Beb,eQAh",
                    "82a4": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbvj,gbXx,eQ2x,c45h,5cEh,3QFF,5ct1,aIt3,aHRN,6Bpr,3RDx,3Rh1,5d4p,gccp",
                    "83c0": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hz/H,iXP9,dsMP,gcEx,gbvp,drDN,7Y3H,drUF,6Axb,9k81,c3/z,c4gx,9kux,5cyF,3Qup,3QoN,5dwr,3RDx,3Rbp,5c+N,c4rN,c4Oh,7Z7h,7Z1F,9kR1",
                    "629f": "or0z,5cyF,3QA1,5cnp,ePYP,aHRN,eQLr,eQ2x,iXP3,iYkV,iXbH,iXDV,n3KX,aInx,aI+V,6B31,3Rmz,7YMN",
                    "54ad": "fDKf,pWVR,fDs7,fE0j,lw4P,lvkD,mXxX,mXW5,bbZ5,bbB1,mXy1,5kQJ,bcPj,bcfd,5kgJ,5kQP",
                    5601: "n3/P,orPh,kkjr,kjrh,9kjh,3QA1,7YBr,5cEh,6AZj,7YMN,3QWr,5cV9,hzW9,eQjj,eQ89,c4aP,c4xp,dsSr,3Rh1,6Bpr,3RDx,9kWF,hAb1,orE1,kj4H,kjg1,c3W1,c3KN,kj4N",
                    "5d4b": "9k7X,oqX1,3QFz,7YBx,n3ox,n45x,kkjx,kjCx,n3KX,kjZ1,9lbr,9kFN,dskH,dsSx,iXyb,9kjh,9jYN,iXbN,5c+H,hz/N,hAxx,5dwx,5c+N",
                    "5e96": "n3zH,orn9,lIcr,lH3p,5cnp,3QoN,5dwr,3RxV,3QWx,5cJV,ePYV,eQuF,aIPF,aIhV,kjCr,ePNF,hzKP,hArV,7ZcV,6Beh,7Z1F",
                    "960b": "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,5dfF,7Z7b,6Beh,6AZp,7YMN,dskN,ds9r,9kux,6Axh,kjaj,3Qup,kjCr,iXyh,dr+h,dsBF,iY9F,iXUN,gccj,gcnF,gbMb,gbXx",
                    "6e5f": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5dwr,5cEh,dsqj,5d4p,dr+b,dsSx,9l5P,9koV,iXDP,iYkV,oryj,lHB9,gcyP,lI6V,lHpV,gbRV,gcyV",
                    9021: "lH8X,oqRp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,5dqP,5dlh,c4m9,5cJP,5cPx,dsHh,eQAh,eQ89,c4aP,gc6N,iXP3,ePTh,eQLr,hAmh,lI1b,iYqx,kjwP,kkdV,oryj,kjCx",
                    "5b09": "pW3x,cEsD,6MSb,5jCr,bbZ5,j/WR,j/yN,lvIL,pWVR,lvqD,lv+P,os43,orjT,cFuN,e8Oz,e8en,cF6P,bcVj,bc97,iz/t,fE0j,fDsd,izrt,iz/z,8gPZ,5kQP,5kgJ,8gfZ,8gQ3",
                    "7f2b": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,9kLj,3QQV,5dwr,9kWF,iY3X,3Rh1,gc13,gcyV,aJ4r,aInx,lI6P,n3Wh,orUV,orDX,n3Fp,lHS1,lHB3,n3ox,orn9,iYkP,dsMV,dsf9,iXP9,iYkV",
                    "67b0": "3QFz,or0F,lHRX,3Rh1,lHB3,lI6V,eQdH,hzW9,hAxr,eQAh,c4gr,c4Zx,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN",
                    "6a50": "n3/P,n2Yp,hAxr,iYqx,iXhp,hziN,hAgz,hzzF,hzQr,drUF,c3Qp,c3KN,3R03,aIt9,3RDr,3RxV,5dfF,7YSp,7YvP,5cyF,3Qup,3QoN,9lbr,9jYN,orn3,kjI9,iXP9,lHXz,lHeF,kjlF,kk2F,lHXF,ePTb,c45h,c4IF,eQuF,ePTh",
                    "668c": "fD43,fCO1,fDg5,lvwP,orw3,ordX,k0cT,lvkD,orH/,mYul,k0B1,fE6p,lw4P,izVD,lvOH,or+3,fDs7,fDWn,bcVj,bc3b,fDE9,9Jdv,3QSX,3QMR,9Jdp,3RD3,3RJ9,mXxX,8fBN,8fTV,mXQ9,mXy1",
                    "80cd": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QQP,6AO9,n3u9,orPh,lHXz,dsBF,3RDx,5dlb,6B8F,5da1,5d4p,lHMp",
                    7172: "or6b,lGZN,ePHX,lH91,ePTb,ePYV,gc19,hz/N,hAaX,gcnF,eQFV,eQLx,iXDP,iYqx,eQjj,lHMp,dsf3,9kA9,6ACV,3Qup,3QoN,aIcb,9kdF,7YMH,aIK1,9kA3,6AZp,3RxV,3RDx,lHB3,orn9,orsN,orJF,lHXF,lHB9",
                    "786a": "n3iP,n2SN,ePwH,n37F,n3Fj,lHvx,lHGH,5c+N,3R09,5cPx,gchX,aInx,iYqr,iXJx,n3/P,lI6V,orJz,7Z1F,3RDx,7Zix,5d4j,c4Zx,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    "949c": "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,gc6H,gcyV,aI+V,aIyN,5dwr,5c+N,lHGN,lIcx",
                    9546: "gbpH,or0F,kjwP,kjg1,lIcr,lHvx,orPb,kk8h,kjNH,orsN,eQFP,eQ89,9kur,9lbx,6ACP,3QFF,gbGF,gbAX,gbRV,c4aP,c3KN,aIJX,9kR1,3QWx,3RDr,9kR1,hzW3,hArV,c4TV,c4m9,hzW9",
                    "9e68": "n2SH,n37F,gbGF,gc13,n3u9,n3iV,iXJr,kjwV,kjI3,hzKV,iXmX,kjap,gbpH,kjlF,gbMb,drUF,c3Qp,c3KN,ePTb,c4gx,c4m9,9kFH,9kLp,9l0h,5dfz,3Rsh,3RxV,5dwx,dsSx,dsqp,lHMp,lI6V,gcyV,eQAh,iY9z,hAgF,orJz,lHMp,aI6z,9k81,9k2p,6Agj,6Am1,7Yqh,9koV,6AO3,3QFF,3Qup",
                    "4f22": "orbP,iXhp,iXbN,3QFz,kjlF,eQjj,5cJV,gcEr,gbXx,hzQx,kjNN,n45r,n3u9,n3Qz,5dfF,3Rh1,5d4p",
                    "88a4": "n45r,n2SN,orn3,n3u9,lHez,c3/F,aI11,c3Qp,hzFb,ePwN,kj4H,kjwV,iXJr,iYfh,dsHh,c4TV,dsSx,gc13,dsqp,lHMj,gccp,c4gx,aIt3,5cyF,3Qup,3QoN,7YvP,3QQV,3QWx,5c+N,9l0b,6B31,9kFH,5dfF,3RxV,3RDx",
                    9697: "lHGH,orE1,lHMj,5d4p,3Rh1,3RDx,5dwx,7ZcP,6Bpx,6B31,aIVh,9kFH,5cJV,3QFF,3QA1,3QoH,n2SN,n3dh,iXyh,gbB1,dr+h,aIch,9kdF,9k81,c3KN,hAmb,hzQx,ds9r,lHvx,lI1h,dsHh,ds9x",
                    "57a0": "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,eQ2r,eQFV,n3/V,n3ox,3QWx,3R09,6AZp,aI+P,7Z1F,dsqj,9kR1,3RxV,3RDx,iXJr,iYkV",
                    "834f": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,c3KH,hzzF,3QzX,drP1,5dqP,5cJV,gccj,5d4p,hAmb,gbXx,aIcb,aJ4x",
                    "84b9": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXDP,kjrh,kjYX,iX+p,hzoj,hArV,ePNz,eQAh,9l0h,9kdF,c4Zr,c3KN,3Rbj,hA5p,3RDr,3RxV,7YY1,7Yqb,3Qup,3QoN,hzKP,3QQV",
                    6445: "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXsF,iX+j,oryp,lI1b,lHMp,gcyP,iYqx,iXDV,7YvV,3QFF,6AIr,5cPx,7YMH,3R5N,3RmF,5dlh,6Beh,6Bpr,7ZcV,9kQX,7YY1,dsMP,c4TV,c4rN,gc6N,gcnz,ds9x",
                    "56ff": "dkvV,ormH,6/xX,i5+N,i6v7,8CAT,6/XZ,8CnV,bNdx,bMPH,bMJh,eXSh,eXm1,lgjV,lhkR,q1ib,q2Jd,5smd,5qXh,q1ih",
                    "72cd": "n2SH,iXyh,6Axh,3QA1,5cnp,gbMb,c3KN,orsH,hzKV,kjI3,kkdV,9l5V,7Z7h,7Z1F,9kR1,dsf3,dsBF,hAgF,hzW9,5cV9,3R5N,3RDx,6Bpx,hziH,orbV",
                    "600f": "3QzX,oqX1,5cEb,5cJV,aIEp,oryp,gbMb,iXsF,c4Zr,c45h,aIEj,5dqV,5dwx,c4Ob,iYfh,iXJx,c4gx,iXbH,ePwN",
                    "6cf1": "kjfX,n2Yp,ePCj,hziN,c4Zr,c3/F,c4Ob,kk8h,kjCx,c4gx,3Quj,aI11,3QFz,3QLh,aIEp,oryp,3RDr,aIEp",
                    "6f74": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5cyz,3QLh,6AIx,kjCx,n3dh,hzFb,orn9,9kdz,ds9x,lIcr,c4m9,kjNH,kk8h,gchX,orE1,gcEr,gc19,7YSj,7Zix,c4Zr,3RDx,3Rbp,c4xp,c4Zx",
                    "5f29": "or0z,iXhp,gbMh,gbpH,gbvp,hzzF,lHpV,lGZH,lHvx,n3zH,n45x,hAb1,gc6N,gc19,kjYX,gcyV,gcEx,ePHX,eQAh,c4Oh,c45h,9k81,9lbx,6Bpx,3Rsh,3RmF,5da1",
                    "9a9f": "n2SH,n37F,ePNF,kjaj,drJp,dr+h,6Axh,3QA1,5cnp,aI6z,9jYN,oryj,n3L1,iXJr,iYkV,lI6V,lHvx,6AIx,3QQV,5c+H,3Rbp,5da1,gci1,gc19,gcnz,gcEx,5dwx,3RxV,5dlh,c4Zr,7Z1F,dsBz,aI+V,aIEj,dsf9,7YH3,c4D1",
                    "73de": "or7L,oqLN,pWJJ,izln,mYid,mYMj,lv+P,e8kz,cEWD,cEQH,h3zr,h3XB,6MnX,6MA3,8fZR,oqXJ,6MA3,k0iZ,cFAP,cFGV,bcJh,5kKT,5kgJ,bcfd,bcJn",
                    "68b5": "ePNz,or0F,iXmX,gbpN,hzKP,iXyh,kk2z,hA5p,gcEr,iYfh,orJz,eQuF,lHGH,lIcx,lGZH,lHvx,7YMH,aInx,5dwr,3RDx,3RmF,5da1,dsw1,dr+h,6Axh,3QA1",
                    "8f76": "oqWX,ePwN,ePTh,3QFz,hzzF,aHRH,aIhV,lHpP,lGZN,hzKP,n3u9,kkdP,kjI9,orDX,c4D1,3QWx,3RDr,c4D1,ds3P,dsSx",
                    7266: "3QML,or7R,6NIj,3RJ9,3Rr1,5kyR,mYul,orZZ,lvwP,izxt,iA5F,iyTh,izln,fCNX,luYz,e88h,9Itn,e8Uz,e8kz",
                    "584d": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3RDr,3QWx,9kA3,9l5V,c4CX,3Rh1,gchX,aJ4x,aIhP,gccp,oryp,kjYX,n3Wh,n3or,kjNN,iYkP,iXJx,gbRP,gcEx",
                    7957: "lH8X,oqRp,kj4H,kjap,kjrh,iXyh,drDN,3QFz,hzzF,7YXX,5c+N,5cV9,n3u9,or+x,lHXz,9kWF,3RDx,6Bpx,eQdH,eQLx,3Rmz,5da1,gbGz,ds3V",
                    7722: "pWlv,mXQ9,luYz,or7L,orw3,lvwP,fDa5,e7Gn,lv8v,izln,lvUN,lw4V,pXhV,pWPL,izDv,h4vR,h4Z/,iAbL,bcJh,bbZ5,8fZL,8gK7,5kKN,e8ID,e7Yl,5j+B,5kKT",
                    "94d9": "gbpH,or0F,kjwP,kjg1,lI6P,lHvx,iYfb,eQjp,dsf9,ds9x,gbAX,gbMh,c4aP,c3KN,aI+P,aInx,5dwr,3RDx,3RmF,5da1,aIK1,aIyH,7YMN,3QQV,7YvP,5cyF,gbGF,gcEr,dsSx,dsMV,eQuF,hA5p,oryp",
                    "77ec": "gbpH,oqX1,hzFb,hzop,c3KH,c45h,hztX,9k81,3QoN,3QLb,9k81,3RDr,3QWx,aIt3,aI+V,orDX,3Rh1,lI1b,hAmh,eQp1,eQjj,hzW9,lHB9,ePYP,hzW9,eQLr,hAmh",
                    "75fc": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,c4xj,hA5p,eQ83,eQuF,c3KH,gbGF,kj4H,hzop,iYkP,5dqV,5cJV,iXDV,iYkV,c4Iz,9kWF,9kA9,c4m9,c4IF",
                    "800b": "n3Fj,n321,kjCr,orhx,kj4H,kkjx,orJz,ePI1,ePwN,hzKP,ePYV,ds9x,dsHh,eQAh,c3KH,c4Zx,c45b,9kdF,9kWF,aIK1,3R03,7YH9,3QoH,3RDx,6Beb,6Am1,gc13,hAb1",
                    "866e": "6Arz,or0F,6ACP,5chN,5cPr,7YvV,3R03,6AZp,lHMp,lI1h,5dlh,3RxV,3RDx,6Bpx,ds3P,iXDV,iXhp,drJp,ds3V",
                    "86de": "6MG3,pWfF,6MS5,5jCx,9IRl,5kaD,orH/,cFiR,orpT,pXbP,iA5z,izrt,5kmJ,cF6P,cFuT,5kKT,5kmP,k00R,e82r,e7Gn,j/ET,k00X",
                    "876e": "oqWX,5ct1,5chN,6ACP,5ct1,7Yqb,5cJV,3QWr,3R09,5d4p,aI+V,aIEp,7YH3,c4xp,7YSj,5dfF,3RxV,3RDx,gc6H,gcyV,orsH,hzQx,lIcr,lHGN,dsMP,iYkV,iXUN,dskN,dsMV,iXyb,dr+h,drDN,iXbN,iXyh",
                    "87ca": "oqRj,orJF,lHB9,n3iP,kjI9,eQ89,ds9x,ePYV,gbpH,gbvp,iXDV,kj4H,kkjx,hAmh,5dfz,dsBF,5dwr,5c+N,3RDr,6Bpx,3QWr,6AIx,5chH,5cPx,drUz,5cyF,7ZcP,aI+V,aIEp,7YSp,7ZcV,7YvP,aIhV,aHXp,7Y9p,7YvV",
                    "7b20": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,eQ83,gbXx,drJj,dsMV,5cPr,c45h,c4CX,5c+N,3QoH,3RDx",
                    "7bcc": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,drDH,hzzF,3QzX,gbB1,3QLb,3QQV,5cV9,7YSp,aIEp,c4m3,9koV,aIVb,aInx,7Ykz,7Zix,7YSj,5dfF,3RxV,3RDx,dr+b,dsSx,gbXr,gcnF,dsBF",
                    "822f": "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,orJz,3RmF,iXUH,iYqx,c4Zx,c4rN,iXUN",
                    "7ca2": "lH8X,n2Yp,gbvj,iXsF,c4aP,ePNF,eQuz,c4xp,gcEr,gcyV,hAgF,kjTp,lHMp,gbXr,kjTp,orn3,kjwV,n3u3,n3/V,lI6V,kk8h,3R03,eQ89,9kLj,3RxV,aHRH,aJ4x,3Quj,9koV",
                    "8d94": "6Arz,or0F,3RDr,3QWx,6Agp,3QoN,c3Qj,6Agp,gbRP,gbpN,kjaj,kjwV,lHRX,lHvx,c4Ob,lI1h,7Z7b,6BjV,7Zix,or+x,lHB3,dsf9,c4gx,aI6z,aIhV,7YBr,7YH9,dsw1,gci1,gc19,aIEj,dsf9",
                    "91a3": "n3or,n2SN,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,3R03,5c+N,lHGN,lIcx,orJz,n3Wh,9kWz,iY9F,c4CX,c4TV,hArV,hAb1,eQLr,eQjp,5cPr,iXJx,iXbN,5chN,5cPx,9kQX,5da1,5dqV,9l5V,9kR1",
                    "8dfb": "6Arz,hzzF,7YvP,5cnp,5chN,drJj,5cnp,ds3P,drUF,dsf3,dskN,eQp1,kkjx,kjI9,iX+j,dsMV,dsSx,3Rsb,c4Oh,3R03,6AZp,c4xp,orDX,lHXF,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e9e": "6AlX,n321,n2SN,hziN,hzu1,6Arz,5cnp,5chN,aHRN,aIcb,aI11,c4gr,c4TV,5c+N,3QWx,3QQV,9kFH,5dfF,3RxV,3RDx,eQLr,hArV,eQuF,orUP,hArV,kkjr,lIcx,kk2z,iYfh,kjYX,kjNN,iXUH,iY41,n3KX,n3zN,oryj,n3Fp,orbP,hzKV,ePNF,eQ2r,hzKV,lHvr,kjCx,kjrb,lHeF,hz/H,hAb1,eQp1,eQdN,hz/N",
                    9730: "orUP,oqRp,iXP3,orn9,kjTj,iY41,iYfb,kk2F,iYqr,lIcx,lGZN,iXbN,kjfX,iXsF,iXDP,kjrh,ds9r,hzQx,drDH,dskN,gc6H,gbpN,drOX,hzu1,9kur,9k81,6AlX,6AIx,3QzX,c3W1,c4gx,5cPx,3QQV,5cEh,3RgX,7ZcV,eQFV,eQoX,eQLx,c4xj,hAgF,3RDr,9kR1",
                    "9c86": "kj4H,oqX1,lH3j,lHpV,hzzF,9kdF,drJj,ds3V,5chH,6ACV,lHRX,3Rh1,lHB3,lI6V,eQdH,hzW9,hArP,eQAh,c4gr,c4Zx,9koP,hzKV,hzop,9k2p,9koV",
                    "9cb6": "iXbH,or0F,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6Axb,5chN,5cJP,7YBx,9kFH,5c+N,3Rbp,3Rsh,5dlh,9l5P,6Bpx,aIEj,7Z1F,aIPz,eQFV,eQ89,hA5j,gci1,gbXr,n3L1,orE1,gcEr,n3L1,9koP,hzKV,hzop,9k2p,9koV",
                    9785: "oqWX,iXn1,iXyh,or6h,lGZH,lHvx,3QFz,iXsF,7Y3H,7YBx,3QWr,9kR1,orE1,3RDr,9kR1,aInr,aJ4x,aIyH,iXUN,iYfh,aIVh,gbvj,gbRV,c4aV,c3Qp,gbvp",
                    9955: "kjaj,kjI9,lHez,iXsF,iXJx,eQ2x,gbRV,orPb,n3Wh,lIi3,n4b9,n3Fp,gccp,eQdN,aHXp,kjYX,kkjx,lI1b,iYfh,iYqx,gcK3,eQR9,eQLx,hArV,hAgF,gcnF,eQp1,dsqj,aJa9,c4CX,c4gx,7YvP,7Z7h,aIVh,aIhV,3QQV,5cV9,9kA3,9kWF,7YSj,3RxV,3RJ9,6BjP,5dfF,orhr,oqX1,lH91,lHvx,orhx",
                    "9ee7": "orbP,oqRp,lGZH,lHvx,hziH,kjg1,iXDP,kjrh,or0z,hzzF,kjI3,oryp,n3Fj,n45x,iYqx,hArV,hA5j,kk2F,n3QF,6AO3,gc19,6AaH,6Bpx,9l5P,9k2p,eQoX,dsqp,ds3P,ePTh,3QoH,5cnp,5cJP,3QQV,3Rbj,5d4p,5dqP,3RDx,c4Ob,gcth,gbB1,c3W1,c4Oh",
                    "4e8d": "orNX,or1V,h3zr,h4TV,h4dD,5kgJ,3QYT,3QSX,5j+B",
                    "4f5f": "orhr,gbvp,iXsz,3QFF,7YMH,5dfF,3RDx,9l0b,c4D1,c4m3,hArV,lI6V,n45x,lI6P,lHGN,oryj,hzQx,kjNH,c4Zx,c539",
                    "51c7": "iXmX,n2Yp,5cnj,ePNF,ds3P,7YkF,aIyH,dsf9,gcnz,5cV9,6Bpx,3RDr,9l5V,orhr,3QWx,iXP3,iXyh,n3KX,gc6N,gcEr,n3Wh",
                    "90b8": "orvZ,mXy1,5jCx,9IFp,5j+v,8fTV,8grV,5kmP,bc3b,lv8B,fCNX,fDyj,8gK1,6NCj,8gW9,cFGV,fDWn,iA5F,os49,orO1,3Rr1",
                    "580b": "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,hA5j,hzQx,hAxr,hAgF,c4Iz,c4Zx,c4gr,c4xp,3QLb,6AIx,n3ox,n3u9,n3Fp,5d4p,3R5N,5cV9,3RgX,5dfF,n3QF,n45x,5dwx,3RxV,5dlh",
                    8368: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hztX,hAgF,c4IF,c3W1,eQuz,ePNF,aIJX,5da1,3Rbp,3R5N,6Axb,5cJV,9lbr,9jYN",
                    8556: "n45r,n2SN,oryj,lHMp,lHpP,orbV,kjfX,iXsF,hzoj,iXbN,aHXj,gbMh,ds9r,dsBF,gcnF,gbXx,iYkP,iXJx,aInx,aI+V,7Y3H,7Zix,3R03,9kA9,3RxP,3RmF,5d4p,6ATN,6ACP,5cEh,3QA1,3QoN",
                    "647a": "oqWX,5ct1,3Qup,5chN,ePNz,aHRN,iXbH,iXyh,lHkb,lHGN,dskN,hz/H,ePYV,iXJr,hzW9,lHRX,lIcx,dsSx,eQoX,eQuF,hArV,iYfh,9kA3,c4xp,6BjP,6ACV,9koP,3QQV,3RxV,9l5V,9koV",
                    5537: "n3KX,oryp,lHpP,lIcx,lHRX,gbXx,gcyV,eQFP,hAmh,aInr,aIVh,7Z7b,7YBx,5d9X,3RmF,5dlh,dsHh,ds9x,3QWx,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5e37": "3QzX,oqX1,n3or,3QWx,kjrb,orn9,lIcr,lHvx,gbXr,gcyV,aI+P,aIt9,5cPr,5dwx,lHRX,5da1,oryj,n3L1,c3/z,aIch,iXyh,iXbN,aHRN",
                    "72fb": "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,oryj,iXDV,iYqx,hAxr,lI1h,dsSr,gcth,dr+b,hzW9,aIhP,eQdN,dsf3,dsHh,c4Oh,5cV9,3QQV,3QLh,aIt3,5dfF,3RxV,3RDx",
                    "606a": "3QzX,oqX1,c4Zr,c4TV,iXUN,orsH,iXJx,lHB3,lI6V,iYfh,eQjp,c4aV,c45h,iXsz,gbMh,drDH,iXbN,5cV3,aIt9,aIVh,5dlh,5cV9",
                    "6d39": "luYt,oqRT,mYSj,mXW5,e82l,e8ID,3QuN,cEEF,5kWP,5jUF,iyNb,fCU7,izVx,9JvD,9IRr,izfr,izVD",
                    "6fc9": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,aIt3,aIch,gbMb,gc19,oryj,lHGN,n3Wb,orJF,lIcr,lHMp,3Rbp,5dC3,5da1,aIJX,aJ4x,gcEr,gci1,5dlb,lI1h,5cEb,5cV9,lHB9,lHkh,5cEh",
                    5997: "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,gbXr,lHS1,n3L1,gcEr,lHS1,eQoX,gccp,dsf3,dsHh,5d4p",
                    "7ead": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,3RCZ,6Nwn,5kKN,5kaD,fDKl,fDm1,fE6p,lv+J,lvqJ",
                    "741b": "mY05,mXy1,h41B,h3zx,lvwJ,izln,lveB,orjT,os49,lw4V,iA5z,lvUT,fDm1,fE6p,3Rk/,izJB,cFuN,6NIp,6MY1,cF6P,8fBH,bc3b,mXQ3,9IFp",
                    6924: "3QzX,oqX1,3QQP,3QWx,5c+N,6B31,c4Zx,dsSx,dskN,7Z1z,c4rN,gccj,9koV,n3Qz,hAgF,hz/H,n3zN,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,hzKP,n3iV,n45x,hAxx,hzKV",
                    "8f8d": "oqWX,ePwN,ePYV,kjTp,n3Fp,n3ox,3QFz,hzzF,aHRH,aIhV,c4gr,c4xp,9kLp,3QQV,9kur,7YBx,3Rbp,3RgX,9lbx,c4Zx,c4IF,9kWz,7Z1F,3RDx,eQLr,iY9F,kk2F,n3Qz,n45x,kkjx,eQp1,eQjj,iXJx,kjCx,lGZH,lHkh",
                    "643f": "or0z,n2SN,n31X,7Yf1,3QoN,c3/z,c3KN,hziH,hzzF,gbMb,lHB9,n3u9,gchX,lHB9,ePYP,eQjp,c4Zr,c4D1,hAgz,hAxx,or+r,n3QF,n3Wb,5dlh,3RmF,5da1,c4aP,c4rN,6ATN,6ACV,c4aV",
                    "81c1": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QQP,6AIx,lHvx,lIcx,orsH,n3Fp,iX+j,kjNN,kk8b,iY9F,hzW3,hAxx,eQ83,eQFV,9l5V,9kA9,c4Zr,c4m9,3RDr,6Beh,hAgz,3RmF,3Rbj,hA5p,6ATH,3R09",
                    "603c": "lGZH,lHvx,kjCx,c3KN,ds3P,iXhp,dsqj,c4D1,c4IF,dsHh,orPh,kjNH,kkjx,gchX,hA5p,6Bpr,9l0h,6B8z,5dfF,3Rh1,3QQV,5cEh,aIch,7YMH,9kFN,5chH,9k81",
                    7762: "hzoj,hzKV,ds3P,drJp,orDX,gbXx,kjNH,3R5N,5c+H,5dC9,6Bv9,5dlb,orPh,iX+j,iYw9,kkp9,eQR3,eQjp,aIEj,aJa9,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94e9": "gbpH,or0F,kjfX,kjwV,gbRP,gbB1,hzQr,hzW9,iX+p,orUV,orn3,iY9F,hArV,hAxx,c4gr,c4Zx,aHRH,aIhV,6ACP,3QFF,gbGF,eQoX,5da1,3Rbp,5c+N,9kFH,5cPx,9l0b,5dwx",
                    "7a39": "lGZH,orbV,3QFz,n37F,5c+H,3QWx,3RDr,5dlh,7YBr,7Zix,7YH3,iXP9,iYkV,7ZcV,aIt3,aI+V,dr+b,c4aV,9jYH,ePI1,hzKP,hziN,gcyP,gc19,dsf3,dsMV,orDX,iY41,lHvr,lIcx",
                    "761b": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,c3KH,gbGF,kj4H,hzop,hA5j,hzKV,ePYP,eQjp,c4xj,c4aV,kjI3,9kA9,hAgz,hAxx,aJ4x,9l5V,9kQX,c4Oh,hAmh,6B2X,7YSp,5dlb,3Rsh,3R5N,5cV9,6AO9,3QLb,5cJV,5dwr,6BjV",
                    8288: "hzFb,or6h,hArP,hzu1,orDX,hAb1,lHRX,lI6V,lH3j,lHkh,3R03,orn9,drDH,dsSx",
                    "4ffe": "iXbH,or6h,3QzX,kjg1,aIJX,3Rh1,7Yqb,7Zix,9koP,9kux,dsqp,lHMp,oryj,lHB9,hArP,hzKV,lHpP,ds3V,dsMV,lI6V,lHpV",
                    "8bfc": "luYt,oqRT,h3zr,h3Lz,5jOz,8fZR,6MS5,6MY7,cFiR,8gW3,bcJn,h4vR,k0j3,iz/t,fDQh,or7L,or+3,fD9/,orw3,bcr9,fDm7,h4pF,bc3b,h4vL,6Nkl,3R93,5kgJ",
                    "52d0": "n2Yj,n3u9,kjrh,ePTh,drUF,ePI1,iXP3,iXbN,hzW3,hAxx,6Bpx,5dqV,5dlh,6B8F,3R03,aIPF,orJF,5chH,7YMN,5cnj,c3Qp,c4m9,7YH9,c4aP,6ACV,6Arz,c3/F",
                    "82c8": "iXDP,orbV,oryj,iX+p,lGZH,lIcx,eQdH,9kFN,3QQV,5d9X,3RmF,3Rsh,5dqV,c4TV,c45h,gcEr,gbB1,6Am1,3QoN",
                    "840b": "n45r,n2SN,oryj,lHMp,lHpP,orbV,kkdP,kjap,c4m3,lHB9,aIhP,7Yqh,5d4p,3Rsh,3RDx,9jYH,9lbx,7YSj,5cJV,3QA1,3QoN,c3VX,c4IF,hAgF,hzu1,eQLr,ePwN",
                    "863c": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXUH,kjI9,iYqr,iXhp,5cnp,3QoN,c4gr,3QWx,3RgX,c4D1,5d9X,5dqV,5cyz,5cPx,7YBr,7YkF,7ZcP,7YY1,aIJX,aI+V,aI6z,aInx,ePNz,drP1,ds3P,hzKV,eQ83,gbXx,gc13,gbB1,gcEr,gccp,dsSr,eQFV,dsBz,hAgF,eQjj,dskN",
                    5457: "k0u/,9JjB,5kgJ,3QSX,3QMR,3RJ3,9JjB,bcPd,or+3,orpZ,bcfd,mXxX,mXW5,cEKB,cEmx,mXy1",
                    "55e6": "iX+j,oryp,lI6P,lHvx,gcyP,iYqx,iXDV,gbMh,dsf3,gccp,dsvX,ds9x,9kA3,eQuF,9l5P,9koV,7Zir,aIVh,3RDr,6Beh,3R5H,5d4p,9kLp,3QLb,7YH9,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "5d27": "n2Yj,kjap,kkdV,n3/V,kjI3,orn9,3QFz,hzzF,c3VX,5chN,ds9r,drDN,7YBr,aIch,dsqj,aIt9,aJ4r,eQuF,aIJX,5cV9,5dqV,3RxP,6Beh",
                    9974: "h3zr,pW9z,luSx,lveH,k00X,iz9l,h3Lt,5jOz,9IRr,lvUN,h4TV,iA5z,izrt,k0cZ,pWVR,e8en,e8Oz,5kQP,5kgJ,e8et",
                    "61f5": "3QzX,oqX1,6Beb,6AO9,9kA3,9l0h,c4TP,eQLx,ePYV,c45h,iXsz,gbMh,drDH,iXbN,orsH,hz/N,hAgz,orJF,n3iP,n45x,3R03,c4m9,c4Oh,3Rsh,3R09,hzQr,kjCx,kkdV,hArV,hzQx",
                    "6e0e": "kjfX,n2Yp,lI1b,lHpV,hz/H,orsN,hzzz,hAxx,eQAh,eQjj,9kLp,5cPx,3QLh,3QFF,c3/z,5cnp,hziH,ePCp,eQ83,gbXx,c4gr,ds3V,aJ4r,aIch,9kLj,3RxV,3RDx",
                    "8fd3": "lH8X,oqRp,n3Wb,n3dh,n3KX,7YY1,6AZp,6ATN,7YH9,gc6H,7Yqh,hzKP,kjCx,hAxr,hzFh,3RDr,3QLh,6Am1,3QoN,6AlX,hzu1,hziN",
                    "5a9b": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,orPb,lHpV,iY9z,lI1h,kjTj,iY41,iXP3,kjCx,hArP,hzKV,ePYP,eQLx,hA5j,dskN,3QLh,c4rH,c4Oh,9l0h,3R5N,3R09,9kFH,5dfF,3RxV,3RDx",
                    "7f0f": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,n3or,3QWx,orn3,kjrh,n45r,n3zN,n3Qz,7Z1F,3R5N,9kLj,7YSp,5dfF,3RxV,3RDx,gccj,gcyV,dsMP,iYkV,iX+p,dsqp,dsMV",
                    "676a": "3QFz,or0F,3QWr,3R09,5d4p,aI+V,c4TV,orDX,9kR1,eQLr,hAmh,hz/H,gc6N,aIhV,aHRH,gbB1,ePTb,ds3V,iXbH,iXDV",
                    "69c1": "3QzX,oqX1,3QQP,ds3V,dsMV,5dqV,3Rsh,3RmF,5da1,gbGz,ePTh,c3KH,gbvp,iXyb,iXbN,lIcr,lHpV,orsH,n3Fp,7Z1z,aIPF,aIt9,7YH9,7Z1F,gctb,iYfh,iXJx,gbXx,gcth",
                    "66f7": "lvOH,lv2F,bbMZ,h41H,e7Yf,e8UF,5kWV,3RD3,3Rx7,6Nwh,6MM5,bbZ5,8g9N,cFcL,8gDX,bcrf,or1P,orO1,izPx,iz3p,or1V",
                    "80bc": "hzKP,hzop,c3Qj,c4aV,3QoH,5cnp,n2Yp,n3iV,5cJV,3QLh,3R03,6AZp,oryp,3Rsb,orPh,c4m3,c4Zx,iYkP,iXUN",
                    "70bb": "or0z,7YkF,3QoN,5cJP,7Yqh,aInr,kjZ1,n3L1,n3u3,n45x,iXyb,kjwV,ePCj,iXhp,5d4j,gccp,gcyV,5dqV,5d4p",
                    "783a": "ordR,oqRT,fCNX,or1V,h4jJ,h4TV,6NIp,5kQP,5kKT,6Nqh,3R8Z,9Jpx,lvON,os43,orpZ,6N2d,3QSX,h3Lt,h41H,8g3X,8fNP,h3Lz",
                    "76e5": "or0z,n2SN,c3KN,c3/F,c4CX,c4Zx,n45x,n3Wh,kjYX,iX+p,eQAh,hAxr,hAmh,ePNz,iXJx,kjCx,kjlF,hziH,hzu1,ds9r,c4m9,dskN,orsN,9kLj,7YSp,3Rbp,3QoH,3RDx,3QzX,9k81,9l0h,3Rsh,9koP,3QQV",
                    "952b": "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,gcEr,gc19,iYkP,hAmh,hA5j,iXUN,lHB3,lIcx,orDX,n3QF,c4rH,c4TV,5dqV,5c+N,c4rN",
                    "9e47": "n2Yj,oqLN,n37z,n3ox,5cPx,3QQV,5cEh,kjlz,7YkF,hzoj,hzKV,3QoH,kj4N,ePHX,aHXp,aIhP,ePTh,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,kjYX,iY9F,orJz,lHMp",
                    8864: "lHez,oqX1,kj4H,kjwV,iXDV,c3KN,3QFz,gbGF,ePYP,dr+h,aInr,drUF",
                    5282: "n3Qz,n2Yp,5cnp,3QoN,3QFz,5cEh,hzFh,hzoj,hzQx,ePHX,c3W1,c4gx,eQ2x,kjCr,iXDV,iXsz,kjg1,kjNH,gc19,hz/H,hAgF,gcnF,eQp1,eQdH,9kFN,3QQV,6B2X,9kFN,5dlb,3RxV,5dwx,or+x,9l0b,kk8h",
                    "5dfd": "luSx,lveH,ordX,oqRT,iyTn,h3Lz,h47D,izln,iz/t,h4NP,h4pL,izxz,orw3,orU7,lvUT,lvwP,8grV,fDEf,8fBH,8gW9,fDg5,8g3X,cFAJ,cEsD,3RCZ,6Nef,6MS5,3QoN",
                    9622: "orZZ,ordX,orH/,6Nkl,5kEN,5kWV,8gW9,3QoH,oqLN,or1V,j/QV,iyZj,h3RF,bbT9,9Izj,bbH7,3QAJ,3QGV,5k4H,8gfZ,orpZ",
                    "576b": "8fTP,pWfF,9IXh,6Mo1,j/yH,k06T,e8wv,pWVR,lw4P,lvIR,e8Ot,5kQP,5kgJ,e8et,e8Oz",
                    8314: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,dsMP,gcEx,gbvp,drDN,3R03,dsf9,3QoH,3RDx,9l0b,9k81",
                    8476: "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXP3,kjI9,iXhj,iYkV,7Y3H,aHXp,aJ4x,7ZcV,7Ykz,7Z1F,7YH3,3R09,3QQV,gbGz,gcnF,dsBF,drUF,gbGF",
                    "636d": "or0z,5cyF,3QA1,5cnp,ePYP,aHRN,iXbH,iXDV,orDX,lHGN,lHRX,dsw1,9kA9,9lbr,9koV,3Rmz,c4IF,hzW3,hArV,lHB3,dsf9,dsMV,lI6V",
                    "54a9": "lHGH,orhx,kjYX,n3Wh,orPh,iYqr,iXyh,3Rbj,iX+p,aI6z,aJ4x,eQFP,ePYV,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5686: "n45r,n3dh,orJz,lHXF,lHB3,orn9,kjTj,iX+p,iXDP,iYqx,3QQP,aIhV,aI+V,5dqV,3Rsh,kj4H,kjlF,aI6F,aHRN,kj4N,gbXr,gcth,dsHh,ds9x,gbXx,5dfz,7Z1F,7YH9,5cV9,5dfF",
                    "5f99": "kj4H,or0F,ePwH,kjrh,3QzX,gbB1,3QLb,7YH9,c4m9,7YH3,3Rh1,3RDx,orDX,3Rh1,kkdP,kjZ1,gbRP,gcEx,lHB3,gc19,aI+P,aIK1",
                    "5fcf": "3QzX,oqX1,n3KX,3Rh1,n3u3,orUV,eQLr,eQ2x,iXyb,gbRV,drDH,iXbN",
                    "6eb7": "lH8X,oqRp,ePCj,hziN,3Quj,c3/F,c4xj,7YBx,c4gr,gccp,hz/N,kjTj,gbXx,kjCr,kk8h,gccj,7YSp,6ATN,hAmb,eQp1,9l0h,5cEb,n3dh,n45x,5dwx,5cEh",
                    9088: "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,7Zir,6Bpx,6Beh,7Z1F,dsBF,5c+H,6AZp,dsqp,gctb,gc6N,iX+j,orJF,n37z,orsN,iXDP,kjrh,kjI3,lHvx,lHGH,iXJx,hzFh,hzzF,hzFb,eQ2x,6AIx,5cJV,c4gr,7YkF,c3/z,ePYV,dskH,dsHh,iYfh,iXUN,dskN",
                    "9a7a": "n2SH,n3dh,ePTh,kjaj,drJp,ds3V,5cJV,3QLh,3QFF,5ct1,aIcb,9jYN,aJ4r,aIyN,5cV3,5dwx,gcEx,gc19,gccj,lI6V,lHB9,orsH,hzKV",
                    "73a2": "or7L,oqLN,oqXJ,6MA3,6Mo1,8fZL,6MA3,h3zr,h3XB,mYid,fDgb,fE6j,orO1,fDs7,fDWn,5kKT,3Rr1,3Rl5,5ksL,3QSR,3QYT,9Jdv,fDEf",
                    6861: "3QFz,or0F,3QQP,7YMN,aIyN,aI+P,aInx,aIJX,5da1,3RmF,3RDx,5dwx,gcEr,dsSx,dsMV,eQuF,hA5p,lHGN,orsN,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,dsf3,dskN,iYfh,kjCr,lI6V",
                    "6b82": "orgb,oqSl,oqYF,gv8L,dkj1,dkIT,gv8L,3Qvf,aa4d,eXm1,lgDx,lgj/,i6H/,i6bL,bMW9,bNqB,5sm7,5rrN,5s8/,orZB,ortf,5rEL",
                    "8d49": "dsf3,orn9,c4Zr,c4TV,dsBF,gccp,gbRP,drUF,c3Qp,c3KN,7Ykz,c3/F,c4IF,7Z1F,9kA3,7YH9,5cJV,3QFF,3Qup,7YH3,5d4p,3RmF,3Rsh,hziH,hAxx,kjrb,iXDV,lI1b,lH91,iX+j,kjZ1",
                    "812c": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,5c+H,3Rbp,5da1,c4D1,eQAh,eQ89,aJ4r,aInx,lIcr,hArV,lHvr,orUV,hz/H,kjI9,kjYX,hAgF",
                    7166: "gbRP,gbvp,orsH,hzQx,lHGH,lIcx,9lbx,7ZcV,7Z7h,9kWF,3RDr,5dqV,5d4j,3Rbp,3QQP,5cJV,5cnj,3QoN,n2Yj,9k2p,9koV,n3iV,n2Yp,dsHb,hAmh,hz/N,dskN,dsHh",
                    "78f4": "q1I7,q1ih,i5ub,q1vf,gvsb,jGh/,mR19,q269,q1Vb,lgQp,mQQb,i6BB,i6i9,gwmD,lher,orMD,q2j7,mRkB,q2CF,mRE7,jGOl,708R,8CNR,8Chp,6/Rp,5sm7,5rld,jFNp,a9Tf,aa4d,jF+t,jFNv,eY3f,aaU5,aanL,eXy/,eY3l",
                    "94bd": "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,gcyP,gc6N,5cPr,5dwx,aI+P,lI6V,lHGN,aIyN,aI+V",
                    9562: "ePwH,oqX1,kjlz,kjap,iXP3,kjCx,kjYX,iX+p,hzQr,hAb1,eQ2r,c4gx,c4D1,eQp1,eQdH,6ATN,3QWx,3QLb,5cJV,n3iV,n4b9,gcnz,kk8h,hAmb,hAD9,gcK9,eQLx,eQAb,7Z7h,3Rbp,3RJ3,7Z7h,6Axb,3QA1,gbB1,gbvj,gbGF,c3/z,c3KN",
                    "75b8": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,5dwr,5cEh,ds9r,dsHh,c3KH,gbGF,kj4H,hzop,9l0b,hAmh,hzQx,9kux,9l0h",
                    "80e5": "oqRj,orUV,n3/V,lI1h,kjI3,kjZ1,gc13,orn9,gcEr,gbXx,iXyh,lHez,kjlF,iXsF,ePwN,aIPz,aI6F,7Ykz,7Z1F,3QFz,drUF,dsBF,5dfF,3Rh1,5d4p",
                    9889: "gbGz,or0F,gbvj,gbRV,kjCr,kj4N,n45r,n3u9,iX+j,n3Wh,eQoX,7YY1,3R09,3QWx,3RDr,6Beh,9l5P,iYkV,iXP9,9kA9,6ACP,c4aV,c3Qp,6Agp,6ACV",
                    "86b5": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cPx,5d4j,3Rh1,3RmF,5dlh,lI1h,lHvr,lIcx,dr+b,iXyh,iXbN,drDN,dr+h,aIt3,hzW9,hAb1,aIK1,aIt9",
                    "871a": "ePYP,orbV,oryj,eQjp,lIcr,lHMp,iX+j,iYkV,gcEr,gccp,gbpH,gbRV,iXDP,iXhp,lGZH,lHpV,eQ83,c4m9,5cV9,5dqP,5chN,3RDr,6BjV,9l0b,c4Oh,c3W1,9k81,9l0h",
                    "87c6": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,3QQV,9lbr,9kux,aIJX,9kR1,3QWx,3RDr,9kR1,eQ83,eQFV,lIcr,lHvx,orPb,kk8h,kjNH,orsN,c4TP,hArV,hzW9,c4m9,c4TV,iXyb,dr+h,drDN,iXbN,iXyh",
                    8210: "orbP,n2SN,c3/z,n37F,hziH,hzKV,orUP,n3u9,3R09,6AZp,7Zir,3RDx,7Z1F,n3QF,eQ83,eQLx,c4aP,5cJV,5cnp,c3Qp,c4aV",
                    "7b71": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,drDH,hzzF,3QzX,gbB1,ds3P,6ACV,gccj,aIt9,dsSr,dskN,dsHb,aIVh,3R09,3QWx,aIEj,9kLp,3RxV,3RDx",
                    "7c1f": "kj4H,or0F,n3or,n321,kjNH,orJF,n45r,n3L1,n3Qz,kkdV,n37z,kjwV,iYqr,iXbN,dsqj,iX+p,iXDP,ds3V,aIPz,aI6F,5dwr,5chN,3R03,7YH9,gbvj,drJp,dsMV,gcyV,gbvp,c3/z,c4IF,7Z1F,7YkF,c3/F",
                    8888: "or0z,iXsF,ePwN,lGZH,lHvx,gbXx,ePYV,gbMh,dsf3,6ArF,5cnp,5chN,c3KH,c3Qp,c4Zx,aIyH,9kFN,5dfF,3RxV,3RDx,9l0b,6B31,9koP,3QQV,3QWx,5cV9,gccj,gcyV,lI6V,lHMp,gccp",
                    "7fe5": "n3KX,n37F,orPb,ePI1,ePCp,kkjr,kj4N,orn3,kjI9,eQuz,ePYV,aIyH,aI+V,5dqV,3Rsh,5c+H,5d4p,7Z1F,7YSj,6B31,7Yqb,5ct1,5cnp,7YeX,6ArF,aHXj,aInx,5cPx,3QQV,hzKP,hAgF,c4IF,c4aV,hzKV",
                    9162: "n3or,n2SN,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,kjYX,3Rh1,kjNH,kkjx,oryj,hzW9,eQFP,eQp1,9kQX,9lbx,5cPr,iXJx,iXbN,5chN,5cPx",
                    "8dbc": "orZZ,orw3,3Rx1,orU7,3QYN,8gr/,orB/,h4TP,h4dJ,6MG3,iz3p,5jCr,5jID,8g3X,e7Sj,e82r,5jIx,e7Gn,oqRN,or7R,iz9l,iyTn,oqRT",
                    "8e49": "n3Fj,orsN,orUP,n3Wh,lHB3,lIcx,hArP,hz/N,dsf3,dsSx,drUz,ds3V,drJj,5cnp,5chN,7YvP,5cnp,hzzz,6ArF,lHXz,c4xp,7YMN,3QQV,5dwr,5c+N,aIPz,5dfF,aI+P,aIEp,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "89e5": "iXbH,or0F,lH8X,lHpV,hzzF,3QFF,3QQP,hzKV,hzop,5cnp,3QoN,9koP,9k2p,drJj,ds3V,gcEr,gc19,6Bpr,3RDx,3Rsh,5dfF,gcnF,gccj,7YSp,3QWx,lHB3,iXUN,gchX,orE1,lI6P,hAgF",
                    "96ce": "hzFb,hzop,drJj,dr+h,6AaH,6Am1,7YvV,7Yqb,lHkh,lH3p,6Agp,lHB3,3R09,orsH,iXDV,lHXz,orE1,5dfz,kk2F,5cV3,5dwx,aI+P,aIt9,gc13,gcyV,kkjr,kjI9",
                    "9ca2": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,3QWr,6ATN,3Rh1,3RmF,3RDx,6ATH,gc6N,gbXx,n3or,kjNN,orJz,eQjp,eQLx,aIEj,aJ4x,hAmb,6Beh,lHMj,lIcx,9kjb,hzFh,hziN,9jYN,9kjh",
                    "9ccc": "kjlz,or0F,kj4H,kjCx,n3iP,n2Yp,iXP3,oryp,lI6P,lHGN,lI1b,kk8h,gccp,eQLr,eQFV,gcnF,kjNN,kjfX,hzu1,ePwN,hztX,hzKV,gbRV,c3Qj,ePNF,eQdN,c4m9,6AO9,9kdz,9kWF,3QoH,5cnp,3QQP,5cEh,3Rbj,5c+N,3RxP,5dlh,6B8z,c4IF,c3/F,6ArF,6B8F",
                    "9ac0": "luSx,lv2F,h3RF,fDm1,h47D,h3zx,fCO1,h3Fx,oqRT,ordX,h41H,bbH1,bc3b,8g3R,8fHT,3QML,5k4H,e82r,e7Gn,3QuT,cFoH,3Rr1,9JHz,9J1t,fDQh,lvON,orNX,lvCL,iA5z,izxz,lvwJ,fDyj,fE6p,lw4V,lvwP",
                    "7e3b": "n3zH,orn9,n45r,n2Yp,5cnp,3QoN,6AIr,3QLh,3Rsb,6B31,7YMH,3R5N,6BjP,9l0h,7YvP,7Z7h,c4Iz,7YH9,aIJX,aInx,eQdN,hAgz,gci1,eQLr,hAmh,kk8b,eQAh,iX+j,iYqx,iXmX,iXP9,ePYP,kjwV,hzQr,gc19,ePHX,hzFh",
                    "592d": "orJz,lH3p,n3u3,gc19,9koV,3Qup,3QoN,3RDr,3RxV,9kLp,gc6N,gbpH,gcEx",
                    "4fe8": "c3KH,or0F,3QzX,hzu1,3QLb,6ACV,ePYV,eQLx,iYqr,gcyV,gbXr,iXDV,n3zH,eQdN,n45r,n3iV,eQuz,n3QF",
                    "8bd3": "mQq9,q1oR,i5ub,i5Hf,5r8f,5reP,8C4x,aa+z,aanL,eXyV,eY9V,jGUP,jGh/,aaH1,jGBn,5sm7,5ryb,ormH,osaJ",
                    9104: "orvZ,oqLN,fDg5,ordX,or1P,fD49,6ML/,e7Yl,8glZ,5jCx,bbH1,bcfd,3Rk/,orI5,os49,iA5F,fDWn,cFGV,8gW9,6NCj,6Nwn,8gE1,j/EN,k0cZ,fDsd,fCU7,j/ET",
                    "83b6": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,c3KH,c3Qp,ePYV,hzW9,eQjp,c4TV,c4Zx,c4Iz,c3/F,6Arz,9k81,6AO3,9kux,9kWz,5d4p,3QoH,3RDx",
                    "858f": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXP3,kjI9,iXhj,iYkV,gbMb,iXyh,iY3X,gci1,gbpH,gcEx,c4Ob,c3W1,5dwr,6BjV,6B8z,3RmF,3QLh,5cyF,6ArF,5chH,6Agp,5c+H,6AO9,ePHX,eQAh,9l0h,9k81,ePI1",
                    "535f": "3Rbj,oryp,hAgz,dsMV,kjaj,kjwV,aIhV,aHXp,kjap",
                    "55d6": "lHB3,kjwV,ePYV,eQFV,kkdV,kk2F,c4xj,oryp,c4aP,c4TV,6ATN,3QLh,3QFF,3RDr,3RxV,6B31,aInx,hArP,hzKV,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "5cb5": "6MzZ,pW9z,pWVL,cFiR,k06N,k0T9,j/WL,6MM5,6Mo1,j/yN,5kgD,cF0J,cFAP,5kQP,5kgJ",
                    7360: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,oryj,kjTp,dr+h,iXDP,hzW9,lIcr,lHpV,hAgz,iYkV,dsSr,kjTp,c4gr,c4Oh,9kLj,5d4p,3R5N,5cV9,5cJP,7YH9,5dqP,7Z1F,eQAb,9l0h,9kux,eQ2x,eQAh",
                    "60b4": "3QzX,oqX1,c4CX,3Rh1,9kur,9lbx,eQ2r,hz/N,iXUN,gccj,hz/N,eQoX,hAmh,iYfh,eQLr,hAmh,lHvr,lIcx,oryj,n3L1,gbMb,iXsF,iXbH,drDN",
                    "6d33": "kjaj,n2SN,ePCj,hziN,5cnj,c3/F,3QzX,c4rN,iXUN,iXyh,orbP,aIhV,5d4p,6B8z,kk2F,kkjx,6Bpx,6B8F",
                    "5b80": "NaUH,VpZV,ARc3,J4P1,J1nF,ANMN",
                    "5a0c": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,iYfb,iXJx,5d4j,n3Fp,5dwr,5cEh,9kur,9l0h,eQ2r,n3ox,n3Wh,eQAh,eQ2x",
                    "74a8": "lHkb,lGZN,ePwH,ePTh,6AaH,6Am1,7Yqh,9lbr,9kux,aIVb,c4TV,c4m3,aIyN,7YSj,3QWx,3QQV,3RDr,7Z1F,c4CX,3Rh1,lH8X,6Am1,kjI3,orn9,hzKP,kjCx,kjTp,hA5p,eQ89,iXJr,gc6N,n3Fj,n3u9,n3Qz,n45x,kkjx,eQp1,kk2z,iY9F,eQLx",
                    6934: "3QzX,oqX1,3QQP,lHpV,n3u9,iXbH,iXyh,c3KH,gbvp,dr+b,ePNF,c4aP,c4m9,9kA3,6Axh,3RDr,aIEp,3R5H,9l0h,c4TV,dsMV,dsqp,gc6H,hA5p,n3Fp,n3Wh,hAmh,gcyV,gcEx,hzW3,hzKV",
                    "74f4": "gbpH,or0F,iXJr,n37F,gbMb,hzzF,drJj,ds3V,6ArF,5cEb,7Yf1,7Z1z,5d4p,5c+N,n3zN,n45r,n3u9,hz/H,hAmh,5dlh,3RxV,3RDx,5dwx,eQjj,c4D1",
                    "6c29": "hziH,or0F,hztX,hAmh,6Beh,3RDx,6Bpx,5cnj,5da1,ePTb,5cEh,eQjj,ePI1,5cV3,eQ89,aIEj,9kFN,9kdz,aI11,kk2z,kjrh,n37z,n3/V",
                    "89f3": "n3or,n2SN,lH3j,lHpV,or0z,lHeF,iXJr,kjCx,kj4N,iXbN,hzKP,hzop,drDH,gbB1,ePCj,ePTh,c3/F,5cyF,3QLb,5cJV,c4aV,c3Qp,3Qup,6ACP,6Agp,9k2j,9koV,eQdH,eQFV,dsMV,7Z1F,3R5N,c4xj,6Beh,3RDx,hAxr,hArV,iYfh,n3Wh,n3Fp,iX+p,hz/N",
                    "807f": "3R03,orn9,9jYH,9lbx,c4TP,c3Qp,hziH,hAxx,kjfX,kk8h,eQAh,ePI1",
                    7548: "9kdz,n37F,3QQP,7YMN,n3zN,or+x,hz/H,hArV,aI+V,3R5N,c4xj,9kR1,3RDx,gbvj,gbRV,n2Yj,n3iV,9koV,9k2p,n2Yp",
                    "950a": "gbpH,or0F,kjwP,kjg1,n3/P,lHvx,hArP,lIcx,kjYX,hAgF,hz/H,kjI9,5d4j,3Rh1,3RmF,5dlh,gcth,ds9r,dsSx,c3KH,c4aV,gbMb,gbB1,gbGz,3QFF,6ACV,9kLj,aIyN",
                    "9e29": "or0z,c3/F,3QoN,dr+b,5cEh,7YBx,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,kjYX,iY9F,orJz,lHMp,hzKP,iXJx,kjCx,kjap,hziN",
                    "766b": "n3zH,orn9,lIcr,lH91,6Am1,3QoN,7YSj,7YkF,9kQX,gci1,gcEx,9lbx,5dwr,7Z7h,3Rbp,dsHb,7Z7h,iYfb,gcth,iY3X,iYqx,iXyb,iXUN,gbXr,kjCx,7YBr,ds9x,7YMH,gc6N,gbMh,7Yqh,ePHX,c3KN,iXbH,gbB1,5c+H,6AO9,6ACP,5cEh",
                    "8d5c": "lHvr,lGZN,6AaN,6AIx,c45b,6Axh,lHkb,gbMh,lIcr,lHGN,iX+j,iYkV,gcEr,gc6N,orJz,gcnF,aIPz,7Z1F,5d4p,3R09,3QWx,7Z1z,3RDx,7ZcP,dsMV,dsqp,7YSp,c4gr,gbXx,gbB1,c3W1,c4gx",
                    5106: "drDH,or0F,3QzX,iXn1,3Rbj,3Rh1,gci1,gbRV,ePTb,hzQx,orhr,iXJx,iX+j,oryp,lHpP,lHS1,hAgz,orUV,kkp3,kk8h,kkjr,7Zix,3RmF,3RJ3,7Z7h,dsHh,ds9r,dskN,5c+N,5cPx,ds9x",
                    "8c1f": "kjfX,n2Yp,gbpH,gbB1,5ct1,7Yqh,9lbr,9koV,7YXX,3RxV,3RDx,3QLb,3QQV,9kLp,c4xp,eQ2r,eQFV,orsH,kjNN,kk2z,orJF,lHpP,lIcx,c4TP,hArV,hzQx,c4gx,c4TV",
                    "587e": "n37z,or0F,n2SH,n3ox,ePCj,ePYV,c3/F,9kdF,9k81,c4gr,c3KN,aIyH,c4xp,oryp,lHGH,lI1h,aIVh,9l5V,9lbx,aJ4x,hzW3,dsBF,3R03,9kA9,3QoH,3RDx,6Beb,6Am1,kjaj,hzop,hzKV,kjwV,kjap",
                    "82e1": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,hzzz,5cyF,5cEh,7YBx,eQ2r,c4m9,hAgz,9kWF,5c+N,3QWx,3QQV,5dwr,9kWF",
                    8426: "n45r,n2SN,oryj,lHMp,lHpP,orbV,gbpH,iXhp,iYqx,gcyV,hzW3,ePTh,eQjp,gchX,aI11,aIVh,9l0b,c4IF,aIt3,3R09,3QWx,9koP,7YvV,5cyF,3Qup,3QoN,3Rsb,7YSp,9kLp",
                    "62bb": "or0z,5cyF,3QA1,5cnp,ePYP,aHRN,iXbH,iXDV,3RgX,orE1,eQ83,eQFV,aI+P,iYkV,iXP9,c4m9,aIt9,aI+V",
                    "54c2": "q2J7,q1ON,q2j1,dljT,bNkb,bNqB,aah5,dl6V,q269,oqLH,or3j,dkCz,dkj1,oqLN,lhrj,5sfF,5rrN,lgDx,lhrp",
                    5624: "lvqD,h4dJ,cEKB,bcVj,bbZ5,bcDb,9Jpx,5kgJ,3QSX,3QMR,3RCZ,3Rx7,6N8j,9IXn,cF6P,fDE9,h4jP,e8wv,h4HT,lvUT,fE6j,h4NP,iA5z,os49,orI5,izJB,izDp,orB/,ordX,izfr,luMr,lv2F,bbT9,bbB1,luMx",
                    "5d4a": "7YeX,oqX1,5cJP,5cPx,9kLp,5dwr,7Z7h,c4Zr,aJ4x,aIVh,gcth,c4Ob,eQLx,c4rH,c4gx,gc6H,aIyN,eQ2r,eQdN,iYqr,iXJx,n3u3,orUV,iXyb,7Yqh,7Y3N,iXbN,3RgX,n3L1",
                    "5ea5": "n3zH,orn9,lIcr,lH91,7Yf1,3QoN,iXJr,drUF,3QQP,ds3V,dsqj,5cPx,eQFP,eQ89,6Bpr,dsBF,iY3X,3Rh1",
                    "960c": "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,aInr,5da1,c4aP,c4IF,6AO9,5cJV,5cEh,kjaj,3Qup,kk2z,kjrh,gchX,hAgF,hzW3,gc6N,gbRP,hzFh,drUz,ePNF,eQAh,dsHh",
                    "6e86": "luSx,oqLN,fCU1,iyNh,3QoH,cEyz,bc35,6MA3,8glZ,9J1t,5j+v,5k4H,6MY7,h47D,h3Xv,h4jP,h3Lt,ordX,k0cZ,cEKv,cF6P,lvCF,lw4V,fE6p,8gE1,3R93,5kWP,fDKl,izJB",
                    9035: "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,6Axb,6Bpx,dsqj,6AZp,aInr,aIVh,gc13,c45h,c4Zr,eQAh,hzFb,hAxx,oryj,hA5p,lHvr,lI1h",
                    "5b17": "oqRj,aHXp,6Axh,3QoH,9kjh,iXyh,iXbN,n3Fj,oryp,n3iP,n45x,9l0b,9kA9,3QQP,3RDx,kjCr,kkdV,eQFV,eQ2x,kjCx,iXUH,iY9F,gcnF,gc6N,iXUN,c4m3,c4Oh,6Beh,6AO9,c4m9",
                    "7f2c": "n37z,hziN,gbpN,gbGF,hzzz,ePNF,aHRN,aI6F,5chH,6ArF,gbRP,gccp,orn3,gc19,kjCr,kjNN,lIcr,lHS1,lI1b,hAb1,hAxx,7Zix,dsHb,6Beh,3Rbp,3R5N,3RDr,6Beh,7YXX,hAb1,7YBr,7YMN,c4rN,c4gx,7YBx",
                    "680c": "3QFz,or0F,3QQP,7YH9,hzW9,hArV,dsMV,dsf9,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,orDX,hAb1,lIcr,lHS1",
                    "6a5b": "3QzX,oqX1,3QFz,6ACV,n3iV,n4b9,gcnz,kk8h,hAmb,hAD9,eQLx,eQAb,7Z7h,3Rbp,3RJ3,7Z7h,3QWr,6ATN,eQdN,eQ2r,c4gx,c4D1,eQp1,hzQr,hAb1,kjCr,iXP9,iX+j,kjZ1,iXbH,iXyh,c3KH,gbvp,ePTb,gbGF",
                    "66a7": "ePNz,ePwN,gbRP,iXJx,iYqx,gcyV,gccj,aIyN,7YBx,7YvV,dsSr,ds3V,aIyH,aI+V,6B31,3QWx,3QQV,7YMH,5dfF,3RxV,3RDx,lI6P,kk8h,kjYX,lHMp,lHvr,kjI9,orUP,n3iV,lGZH,lHeF,7YkF,7Y3N,lGZN",
                    "80d7": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QWr,3R5N,9l0h,eQ2r,n3L1,orE1,eQLr,n3L1,c4Iz,7YMN,7YH9,aIt3,eQp1,gci1",
                    "714a": "oqWX,6Am1,3QoN,5cEb,7YkF,5dwr,5cPx,c4m3,c4TV,hAxr,hzQx,iYkP,kkjx,lIcx,lHvx,iXDV,hztX,kjrh,ePwH,iXbN,n3Fj,orsN,9l5P,eQFV,eQ89,9kA9,9l5V",
                    "789b": "n3iP,n2SN,ePwH,n37F,lIcr,lHvx,iXP3,iYkV,gcEr,gbXx,orDX,gci1,aIJX,6B31,5d4p,3R09,3QWx,7YH3,dsf9,dsMV,7ZcV,6B2X,5dfF,3RxV,3RDx,hztX,hzKV,7YvV,7Yf1,hzu1",
                    "94a3": "or0z,gbpN,kjCr,kjg1,gbAX,gbRV,aInr,aHRN,7YBr,5cEh,5cyF,gbGF,or+r,n3Fp,7YSp,3QWx,3QQV,3Rbj,3Rh1,7ZcV,hArV,hA5p,c4CX,aIK1,7Z1F,3RDx",
                    9549: "gbpH,or0F,kjwP,kjg1,n45r,n3ox,aIPz,c4Oh,c4rH,aIEp,c3KH,c4aV,gbRP,gbB1,gbGz,3QFF,6ACV,9l5P,9kA9,5d9X,9kR1,5dlb,3RxV,5dwx,eQLx,eQ2x,3QWx,kk8b,hAmh,hz/N,kjNN,kk8h",
                    "9e69": "or6b,lHkh,gbpN,ds9r,drP1,lHkb,gc6N,kjI3,iXJx,iXmX,kjap,aIcb,5cEh,3QFF,5ct1,7YeX,5chN,5c+H,7YBx,9kFH,9l0h,5dfz,3Rsh,3RxV,5dwx,dsSx,dsqp,lHMp,lI6V,gcyV,eQAh,iY9z,hAgF,orJz,lHMp,lGZH,lHGN,gbAX,gbXx,aInx,aI11,gbB1",
                    "88fc": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,aIhP,drUF,ePTh,kkdP,kjI9,c4m3,gc6N,eQdH,eQLx,5dwx,3RxV,3Rsh,5dfF,5cJP,5cV9,6AZp,c4TV,eQFV,eQoX,c4D1,9kFN,7YBx,7YvV,hzW3,n3u9,n3/V,hArV,hzW9",
                    "4f64": "iXbH,or6h,3QFz,kjlF,5dwr,3RDx,3Rsh,5dfF,gcnF,gc19,aIEj,c4xp,6B8z,5cV9,n3u9,n3/P,n3iV",
                    "4eb5": "n3u3,orhx,lGZH,lIcx,gbRP,lHpV,lHMj,gccp,eQLr,iY9F,iXsz,ePwN,gc13,dsf9,9kjh,9kA3,5cEh,5d4j,7YH9,dsf3,9kR1,3Rmz,3Rsh,dsHh,drP1,3QA1",
                    "96b0": "lvUN,lvkD,h4HN,e8wB,e8Oz,fE6j,9JjB,9JHF,bcPj,3RJ3,6NCj,6Nkf,3Rl5,3R2T,6N2d,6ML/,3QGV,bcf7,9J7z,9ILl,fDyj,e8en,e7Yl,h47D,bbH1,9Izj,bbT9,fD49,iyTn,lv2F,or1V,oqLN,3QoN,orjN,izln,izVD,orU7,orjT",
                    "57d5": "6Arz,or0F,7YvP,5chN,9l5P,9kA9,eQ2r,eQLx,3RgX,eQp1,3QWr,3RDx,hziH,hzKV,iXP3,n3u9,n3/V,iYkV,iXP9",
                    8347: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,hzzz,ePCp,ePwN,ePYP,c3/F,aHXp,aHRN,3QFz,c3/F,5c+H,3Rbp,3Rh1,5dfF,c4IF,c4m3,c4Zx,gcyP,gc6N",
                    "84b4": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXJr,kjI9,kjfX,iXsF,hz/H,hziN,eQ83,9kA9,9k2p,ePCp,hzFb,6Axh,3Qup,3QoN,3QWr,3R09,7YSp,iX+p,iYkV,5dqV,3Rsh,5dfF,aI+P,aIEp,iX+p,eQFP,eQjp",
                    6441: "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,iYfb,iXUN,kjYX,hAb1,eQdN,eQAb,hAb1,7Zir,9l5V,6Beb,5dlh,3RmF,3R5N,5cV9,9kA9,7YXX,9kLp,7Yqb,9koV,n3u3,c4m9,c4TV,n3/V,n3u9",
                    "552a": "lI6P,lHpV,iXJr,iYfh,gcEr,gbRV,oryj,gccp,aIch,aI6F,aJ4r,gci1,aIt3,aIPF,7Zir,7Yqh,dsqj,3Rbp,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5704: "mRkB,mQwP,eXlX,mQWL,eY3f,eX2v,eXLT,jGHX,jFU3,q1ib,q2Jd,5smd,5qXh,q1ih,bMCD,bNdD,8CAT,8BZZ,bMCJ",
                    "72d2": "n2SH,iXyh,6Axh,3QA1,5cnp,gbMb,c3KN,orbP,hziN,lHvr,lI6V,hArV,hzQx,ds9x,dsSx,7Zix,6BjV,7Z7h,orJz,3RmF,orsH,6ATN,3QWx",
                    "600d": "3QzX,oqX1,kjNH,3R5N,kjCr,kkjx,ePTb,orn9,eQFP,eQdN,9kFH,9l5V,kjlz,hzFh,ePwH,kj4N",
                    "6cd7": "luYt,oqRT,iyNb,fCU7,cEEz,3QuT,8gfT,9J7z,mYij,mYAb,bcDh,9JvD,9JBz,5k4B,mY0b,mYSp,5kWV,5k4H",
                    "6f2a": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5cyz,3QLh,6AIx,kjCx,n3dh,hzFb,orn9,9kdz,ds9x,orJz,kk2F,eQ89,eQFV,5dqV,3Rsh,3RmF,5da1,kkjr,kjNN,eQLr,iY9F,7Z1z,c4IF,c4rN,7YMN,7Z1F",
                    "5f2d": "oqLH,ordX,k00X,j/ET,fCU7,fDgb,5k4H,3QMR,3QGV,5jOz,5kgD,5ksL,8gW9,orU1,3Rx7,orpT,os49,5kmJ,orw3,cFuN,cF6P,izxt,izVD",
                    "9aa0": "oqLH,or6h,gbMh,n2Yj,ePCp,ePYV,5cJV,3QLh,5cyF,aIcb,9jYN,aJ4r,aInx,dskH,dsHh,aIJX,5da1,3Rbp,5c+N,9kFH,5cPx,5dqP,7Z7h,orJz,gcnF,gccj,oryp,or+r,orhx,gcyP,kkdV,kjI9,gc19,gcyV",
                    "73ba": "orbP,kjlF,iXhp,iXbN,lHkb,lI6V,iY9F,iXP3,eQ89,ds9x,ePYV,hzFb,drJp,drDN,gchX,dsMV,dsSx,aHXj,aI+V,3R03,aIt9,3RDr,3QoN,6B2X,5dfF,7YeX,7Z7h",
                    "688f": "3QFz,or0F,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,hzQr,lHB9,kkdP,kjI9,eQoX,orE1,eQ2r,eQLx,5cV3,aIt9,aI+V,5dqV,5cV9",
                    "8f78": "oqWX,gbpN,gbvp,gbMh,3QFz,hzzF,c3KH,c4aV,lHpP,lGZN,orDX,n3L1,eQ2x,gchX,eQp1,aIt9,7YH3,7YMN,c4IF,9l0b,3R5N,3QWx,n3KX,eQLx",
                    "726f": "3QGP,or1V,orH/,bcxl,izrn,iA5F,iyTh,izfr,fCNX,luSD,9Inb,9Itn,e82r,5kgD,bcfd,bcPj,5kQP,5kgJ",
                    "5ab5": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QQP,3QWx,5c+N,7Z1F,aIPF,aIt3,aIVh,c4xj,7YMN,3RxV,3RDx,gchX,aJ4x,gbRP,gcEx,aIhP,gccp,oryp,kjYX,n3Wh,n3or,kjNN,iYkP,iXJx",
                    7719: "iyTh,izfr,e82l,e7Gn,pX5N,h4dJ,h4TV,lv+J,fEcv,8fHN,mXE7,mY0b,8g3X,8fHT,5kWP,cFGV,cF6P,5kmP,5kWV",
                    "94d8": "gbpH,or0F,kjwP,kjg1,lHRX,lHB9,lHMj,5d4p,3R5N,aIyH,3QQV,dsvX,dsf9,iXP9,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,7ZcP,6Bpx,c4Zx,dsMV,eQLx,lIcx,lI1h,3Rsh",
                    "96c9": "hziH,oqX1,iXyb,iXhp,orsH,kjwV,n3Qz,orE1,lHGH,lIcx,3R03,n3u9,5dwr,5c+N,aIyH,aI+V,gcyP,gc6N,5dfz,lHXF,3QLb,9k81,3QoN,iXmX,9k81,drDH,dr+h",
                    "75ff": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QQP,3QWx,7Z7h,9l0h,9koP,9lbx,3RDr,3RxV,5dfF,6AZp,7YMN,aIEp,iX+j,dsqp,iXJr,iYfh,gcyP,gbRV,c4TP,eQuF,eQ83,c4aV,c3KH,gbGF,kj4H,hzop",
                    8035: "orjN,oqLN,3QSR,ordX,5ksF,3Rl5,5kEN,mYAh,mYc7,mYSp,iyZd,izfr,cEQB,cEyz,5jCr,9IXn,oqXJ,6MA3",
                    "867f": "os43,oqLN,ordR,lveH,fC+3,lveB,lvUT,h4HT,fDQh,fDKl,h4pL,5kgD,fDsd,5kWP,5jCx,3RJ3,6NCj,9Jvx,cFuT,cEyz,9Izj,9JvD",
                    "86f4": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,3QWr,6ATN,c4rN,3Rsb,c4Oh,dsSr,dsMV,eQuF,iXUN,ds9r,dsf9,lIcx,lHvx,n3KX,oryp,iXyb,dr+h,drDN,iXbN,iXyh",
                    "878b": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,3QQV,3QWr,5c+N,c4TV,c4m9,aIyH,3RxV,3RDx,orDX,c4D1,lHGH,kjI9,eQ89,eQFV,kkdV,kk8h,hAmb,hArV,hzW3,hz/N,iXyb,dr+h,drDN,iXbN,iXyh",
                    "87db": "oqWX,5ct1,5chN,6Axb,5ct1,7Yqb,5cJV,7YH3,9kux,9kQX,7YSp,6AIr,6B31,3Rbj,3Rh1,9lbx,dsHb,gcEx,iXJr,iY41,lHXz,lHpV,kk8b,n45x,orsH,iXUN,c4CX,gci1,gbXx,c4gx,c4D1,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7b25": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iXUH,orPh,iYkP,lHXF,lHez,iXDV,gbAX,gcyV,5dqV,3Rsh,3RmF,5da1,drJj,dsw1,6AZj,aIEp,aI6F,6ArF,6AZp",
                    "7bdd": "kj4H,or0F,n3or,n321,n45r,n3L1,kjNH,orJF,kkdP,n3QF,eQjj,kjTp,ePYP,kjwV,n37F,hArP,hzop,gbAX,gcth,eQLr,ePwN,6AO3,dsf9,6AaH,6Bpx,9kWz,9kdF,3Rbj,3Rh1,5dfF,c4IF,c3/F,3QFF",
                    8228: "lH8X,or6h,gbGz,iXn1,drDH,ds9x,7Ykz,aI11,5cyz,3QLh,5cJV,lHpV,lH3p,5cnp,3QoN,3QWr,6ATN,n3zN,or+x,hz/H,hArV,aI+V,3Rbp,3RDr,c4xp",
                    "7cb2": "kjlz,or0F,n3or,n37F,n3Fj,n3/V,lI6V,gccp,eQ83,c4m9,3R09,9kLj,3RxV,3Quj,9koV,aJ4r,aHRN,eQuz,c4xp,gcEr,gcyV,kjZ1,hziH,lH3p,gbGz,iXhp,c4aP,ePNF,drDH,drJp,iXJx,kjCx,kjap",
                    "8d91": "6Arz,or0F,3RDr,3QWx,6Am1,3QoH,6Agp,c3Qp,gc13,hzQx,aIt3,dskN,aI6z,aIhV,6ATH,aIPF,6Bpx,iY9z,aIPF,iYkP,lIcx,lHMp,iXUH,orE1,kjwP,kj4N,gbpH,gbRV",
                    "91aa": "orjN,oqLN,or7L,cEKB,cEQH,8fHN,8g3X,bbH1,cEyz,oqXP,k0oV,lvwP,lvIL,izxz,k0MZ,lvUT,lw4P,izVD,iA5z,os49,orU7,orvZ,orI5,izJB,cF6J,fDKl,bcVj,fDQh,cFoH,9Jdv,9J7z,6N8d,6Nef,8gE1,9JvD,6NCd,5kKT,3Rl5,3R93,k06N,5kaD,5jCx,j/yN,k06T",
                    "8de4": "6Arz,hzzF,6AaH,6AIx,drJj,6Agp,ds9r,drUF,hz/H,eQ2x,eQLr,hAmh,eQAb,aIVh,3R09,3RxP,aIyN,eQdN,kkjr,kjI9,oryj,lHS1,n2Yj,n3iV,hzKV,hzop,n2Yp",
                    "8c78": "hziH,or6h,ePNz,hzop,kjfX,hzFh,lHB3,kjI9,drP1,drJp,gbMb,dsf9,6AO9,3QQV,5cyF,5cnj,5ct1,c4m9,9k2j,9k81,ePYV",
                    "973e": "orUP,oqRp,iYqr,lIcx,lGZN,iXbN,iXsz,kjg1,kjrb,iXDV,orn3,iXP9,iY3X,kjTp,kk2z,iYfh,c4xj,c4TV,3Rmz,eQuF,3R5H,3RDx,6BjP,6AZp,3QFz,3QLh,6AIx,aInx,dr+h,gbXr,c3/F,c3Qp,aIcb,9k2p,9koP,7Yqh,6Am1,6Agp,ePCj,ePI1,hzFh,ePYP,gbMh,drUz,ePNF,eQFP,dsMV,9l5V,9kLp,eQjp,eQFV",
                    "9c87": "luMr,pW9z,mXE1,mY0b,iz3p,9IFp,e7Gh,e82r,6MS5,5jCx,pWVL,cFiR,k0T3,k0v5,9IRl,izfr,iyTn,9Itn,9IRr,5kmJ,cF6P,cFAP,5kQP,5kmP",
                    "9cb7": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3QWr,6ATN,n3zN,n45x,5dwx,3RxV,5dlh,eQjj,eQFV,hArP,hA5p,kk2z,eQuF,9koP,hzKV,hzop,9k2p,9koV,7Z7b,c4Oh,c4D1,7YY1,7Z7h",
                    9791: "oqWX,iXn1,iXyh,or6h,lGZH,lHvx,7YBr,7Y3N,iXsz,3QFF,hz/H,iXP9,iYqr,iY41,orPb,eQAh,7YY1,eQAb,9lbx,7Zix,3RDr,3Rh1,6ATN,3QWx,6ATH,eQdN,eQ2x,gbvj,gbRV,c4aV,c3Qp,gbvp",
                    9954: "n45r,n2SN,orn3,n3u9,kj4H,lHeF,iXsz,hziN,hzFb,ePCp,ePwN,lHGH,iXJx,gcnz,lHXF,gcEr,gc19,kjI9,kkjx,iX+j,iYkV,hArP,hA5p,aHRH,aHXp,eQ89,aI+V,aJ4x,dsf3,c4rN,7Yqb,7Z1F,aIPF,aIch,3QLh,3QQV,5cV9,6AZj,5da1,3Rsh,3RDx,7ZcP,5dfF,9kjb,9kWF",
                    "9ee5": "7Ykz,n37F,7Y3H,7YBx,c4aP,c3Qp,kjwP,iXyh,iXmX,kjap,lHXz,orE1,kkjr,kjNN,c4Iz,5dfF,3Rh1,7ZcP,5dwx,5c+H,9kLp,3QWr,5cPx,5cEb,3QLh,3QzX,5ct1,5chH,3QoN,n2SH,n3ox,gbXx,gbpN,n2SN,hArP,c4TV,c4xp,hA5p,hArV",
                    "4e0c": "osaD,oqSl,3Rpx,orMD,3QoH,3Qvl,5reP,8C4x,orgh",
                    "4f57": "orhr,gbvp,iXsz,3QFF,6AIr,eQLx,hAD3,kkp9,kjCx,hzQx,kk2z,oryp,hA5j,5d4p,3Rh1,3RxV,5dwx,9lbx",
                    5196: "1wx0b,1R7nh,1RgBV,1wGeV",
                    "90b0": "or6b,hziN,hz/N,gc6H,kjCx,9kWz,7Z7h,7ZcV,9lbx,dsSx,gcth,iYqx,n45x,n3L1,3Rh1,dsf3,5cV9,5cnp,drJp,dsf9",
                    "580d": "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,oryj,iXJx,lHGH,lHXF,kk2F,gccp,5d4p,3Rh1,3RDx,6Bpx,7Z1z,6Beh,aIyH,7YMN,3QQV,3QLh,aInr,gbXx,gcth,aIVh,aInx",
                    "831b": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,eQuz,ePNF,aIt3,9kA9,5da1,3Rsh,3RDx,7YMH,9kWF,6AIr,3QLh,3QFF,hzzF,hAgF,c4IF,c3/F",
                    "853b": "n45r,n2SN,oryj,lHMp,lHpP,orbV,iXP3,kjI9,gcyP,iYqx,iXhp,gbpN,gc13,gbB1,drDH,dsf9,drOX,6Am1,3QoN,ds3P,5cJV,3QWx,3RxV,5dwx,6Bpx,aIyH,5dlh,c4m3,c4TV,5c+N,5cV9,gchX,c4D1,eQLr,eQp1",
                    "64b7": "oqWX,5ct1,3Qup,5chN,drUz,aHRN,iXbH,iXyh,kjNH,kjrh,gbMb,gc6N,orhr,gbXx,lIcr,lHS1,hAaX,lI6V,dsBz,6B8F,3R5N,3R09,6B8z,5dlh,3RDx,7ZcP,hArV,hA5p,7YSp,7YH3,c4m9,c45h,7Yqh,7YH9",
                    5556: "kjCr,lHvx,orDX,iY41,gc6N,eQ2x,ePYV,iY3X,gcyV,eQLx,n3/P,lI1h,9kWz,c4TV,3RDr,9kR1,5cV9,3QQV,3QLh,dsvX,9kR1,9kA3,aIt9,lGZH,c3KN,c3/F,lHeF,lGZN",
                    "5e44": "3QzX,oqX1,3QFz,9kux,n3ox,n3/V,iYkV,iXJx,gcEr,gc19,gcnz,c4rN,c4TV,dsHh,3RgX,c4D1,3QQP,3RDx,7ZcP,7YH9,aI6z,9kjh,kjrh,kj4N,9jYN",
                    7317: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,lHpP,lIcx,hziH,or6h,oryj,lHMp,eQLx,ePTh,lHMp,5dfz,3Rsh,5dqV,eQFV,7YXX,7YBx,c4gx,c4D1,7YY1",
                    "607d": "3QzX,oqX1,eQoX,3Rh1,hzQr,hArV,lHRX,ds9x,dsMV,9koP,9lbx,iXsz,gbMh,drDH,iXbN,kjwP,n3ox,n45x,kkdV",
                    "6d27": "kjfX,n2Yp,lIcr,lHkh,oryj,lHMp,ePTh,dsHb,dsf9,9kA3,9l0h,3Quj,c3/F,iXP3,3R09,hzW9,hAmh,5dlh,3RmF,5da1,hziH,ePCp",
                    "6fa7": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3RDr,3QLh,6B8z,3Rh1,3R5H,6AO9,dsMP,ds3V,orDX,gci1,gc6H,orsN,iYfb,iXJx,7YBr,7Z7h,aIVh,aInx,7YBx,gctb,lI1h,lHvx,gbXx,gcth",
                    "59ca": "oqRj,c3Qp,6ACV,5chH,aIch,iXyh,iXbN,3RgX,orE1,3QLb,3QQV,dsqp,6Beb,5dqV,6Bpx,eQLx,eQ2x,iXJx,kkdV",
                    "7eb0": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,8grV,3QYT,orjT,fDE9,fDm7,iA5z,fDWn,6NIj,3RJ9,3Rx7,5kEN,orO1",
                    "741a": "mXV/,mXy1,k06N,k0N3,or+3,orjT,8g9T,3QGV,6MnX,6MA3,8fZR,mXJZ,6MA3,fD9/,fCO1,e8Uz,e8et,9Jjv,h4vR,9J1n,5kgJ,5kQP,9JBz,9J1t",
                    "68f0": "3QFz,or0F,5dwr,5cPx,n3KX,5da1,orUP,n3u9,iXJr,iYqx,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,eQLr,eQ2x,9kur,9lbx,hz/H,aIyN,aIVb,hAmh",
                    "8f8e": "or0z,drDN,dr+h,3QFz,gbGF,aIhP,9jYN,9lbr,9kux,dsvX,5da1,gcEr,iYfh,lIcx,lHXz,iX+p,gcnF,gc6H,iXJx,lHGN,kj4H,kjwV,5dwr,5cPx,ds9x,dsSx,5dwx",
                    "64d8": "kjaj,kjCx,n3ox,n2Yp,hzop,drDN,c4TP,c3Qp,9k7X,9l0h,6Bpr,6AaN,3QQP,3QWx,5cV9,c4m9,iY9z,dsBF,iX+j,iYkV,gcEr,gc6N,lI6P,kk8h,n3zH,n45x,kjYX,lHMp,orJz,n3QF,hzQr,eQ2x,ePI1,hzu1,hzQx",
                    "81a6": "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,dsf3,6ACV,c4m3,c4xp,9kLp,6ATN,3QWx,3QQV,7YMH,9kA9,9kWz,7Z1F,7Zix,c4Iz,c4Zx,3RxP,dsMV,orDX,gci1,lHXz,orUV,orn3,lHGN,kkjr,kjCx,gcEr,iYfh,iXUH,gbXx",
                    "605d": "drUz,or0F,lHGH,lIcx,eQLx,dsMV,eQAh,dskH,gci1,lHS1,lGZH,lHvx,iXDP,iXhp,gbpH,gbXx,5chH,9k81,aIcb,5cEh,3QQV,3Rh1,5dfF,6B8F,9l0b,6Bpx,7YMH,aIt9",
                    7765: "hzoj,hzKV,ds3P,drJp,orJz,lHGN,n4b3,lIcx,eQLx,eQ89,lHB9,lIcx,iXP3,iYqx,lHXz,eQuF,9kFN,9kA3,9lh9,aJ4x,c4Ob,3Rsh,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94eb": "ePwH,oqX1,kjrb,kjg1,gbvj,gbMh,gbAX,3QA1,6Axh,aHRH,aIhV,eQdH,c4gx,orsH,7YMN,3QQV,6Bpr,3RDx,3Rsh,5dfF,orJF,iYqr,eQuF,aJ4x,gc6H,iXJx",
                    "7a37": "orbP,lGZN,3QFz,n37F,3QWr,3R09,aIVh,c4Oh,c4rN,9kur,dsqp,aIyH,3RxV,3RDx,gctb,dsSx,ds9r,gc6N,dr+b,c4aV,9jYH,ePI1,hzKP,hziN,kkdP,kjI9,n3KX,hAb1,n3/P,hArV,hzW9,n3u9,n3zN,n3/V",
                    "763c": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,7ZcP,7Yqh,9kLj,7YSp,5cV9,3QQV,3QFF,7YSj,5dfF,3RxV,3RDx,ds9r,dsHh,c3KH,gbGF,kj4H,hzop,iYkP,iXDV,kk2z,hAgF,hzW3,kjI9,aIVb,gcth,gbXx,aInx,aIVh",
                    "5b5b": "lI6P,lH3p,iXP3,orn9,gbpH,iXhp,iYqx,gcyV,gbGz,gcnF,dsf9,5cV9,3QWx,3QQV,5cEh,aJ4r,aHRN",
                    "501c": "orbP,iXhp,iXbN,3QFz,kjlF,3QLb,6AIx,n3ox,n45x,5dwx,3RxV,5dlh,dskH,dsHh,kjYX,dsw1,hzW3,hArV,6Beb,aIVh,aIyN,6ATN,6Beh",
                    "8bff": "kjaj,n2SN,hziH,hzu1,5ct1,5cyF,6Axh,3QLb,3QQV,5cV9,6AZp,c4TV,c45b,c4Zx,dskH,9koV,5da1,3Rsh,3RDx,eQLr,eQFV,gcnF,hAb1,hz/H,gc19,ePYV,ePTh,n3Fj,eQjp,orUP,n3ox,iXDP,iYqx",
                    "52d6": "kjI3,kj4N,iXUH,iYqx,5dwx,3RxV,3Rsh,5dfF,3R03,aIPF,orJF,c3Qj,c4gx,9kur,9k2p,n2SH,n3u9,hzW9,hziN,n2SN,eQ2r,6AIx,6Agp,ePCp,eQ2x",
                    "82ca": "iXDP,orbV,oryj,iX+p,lGZH,lIcx,gcEr,gbB1,6Am1,3QoN,6Bpr,5dwx,3RxV,3QWx,5cJV,ds3V,dsBF,9kWF,7YY1,7YSp,9kFN",
                    "83dd": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,iXsz,5cyF,3QA1,5cnp,c45b,9jYN,gbpH,gbRV,hA5j,c4xp,6AO9,3QQV,3R5H,3Rbp,aI+V,c4TV,c4xp,9kLj,3RxV,3RDx,eQ83,eQLx,hAgz,gcth",
                    "5efe": "oriR,aIoX,3QvP,3QoN,fSZT,fRrx,orR/,3Rv5",
                    5459: "izrn,cF0J,8fZR,8fTV,8gx/,cF0J,5kyL,3Rr1,3Rx7,5kQP,fE0j,fCU7,3QuT,or1P,j/QV,k0B1,orO1,or1V",
                    "55dd": "os43,or7R,bcld,cF0J,cFoH,bcxl,9IXh,9JvD,5ksF,9Jdv,5kEH,3Rx7,5kQP,fE0j,fDgb,3QSX,mXxX,mXQ9,cEEF,cEmx,mXy1,lvUN,izVD,izln,lvkD,lvUT",
                    "5d26": "7YeX,oqX1,6Bpr,3RDx,3Rh1,5d4p,eQjp,aInr,aIVh,ePYP,kjTp,oryp,dsSr,iY41,kjwP,kkdV,hzFb,7Yqh,7Y3N,hziN,dsHb,7Z7h,7YBx,ds9x,dsHh",
                    9977: "gbpH,oqX1,kjaj,kjwV,iXDV,hzFh,gbAX,5ct1,9koV,3R03,kjI9,kkjx,5dwx,3RxV,3Rsh,5dfF,orDX,kjNN,aIVb,gcth,gccp,aIEp,aIVh",
                    "5fdd": "orU1,oqXP,j/yH,k0T9,orpT,k0cZ,h41H,e7Gn,e7Ah,izDp,fDQh,e8Oz,e8UF,e8en,5kgJ,3QYT,5k4H,5jIx,bc3b,6Nkf,9Jdv,9Jvx,6NCj",
                    "6dbf": "luYt,oqRT,fCU1,iyNh,3QuN,cEEF,5kgD,3R93,6Nkl,h4vR,k0j3,izDv,fD9/,orw3,fDm1,bcrf,6MY7,6MSb,h4pF,bc3b,fDQb,iz/z,h4vL,bcJn,8gW9,or7L,or+3",
                    "8fd5": "lH8X,oqRp,orn3,hzFh,kkdP,kjCx,ePTb,eQLx,6AZj,kjTp,3RDr,3QLh,6Am1,3QoN,6AlX,hzu1,hziN",
                    "5a77": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,n3KX,orE1,n3or,n45x,c4gr,eQ89,eQLx,c4TV,aIyH,aIVh,aIJX,5da1,3Rbp,5c+N,kjNH,kk8h,hAmh,hz/N,kjNN",
                    "7f11": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,n3or,3QWx,orn3,kjrh,lHGH,lI1h,hAmh,hAxr,hzW9,c4m3,gccp,dsMP,dskN,9kA3,9lbx,dsBz,7Z1F,3R5N,3RDr,7Z1F",
                    6773: "e8en,pWDJ,e8Uz,e8Oz,h4vR,lvqJ,luSx,lv+P,k06N,h3XB,fC+3,e7Ah,8gK1,8fNP,bbMZ,bcJn,5kKT,5jOz,bbN3",
                    "69ca": "n37z,oqX1,orhr,n3iV,lGZH,lHGN,iXhj,hzop,hzW9,iXP9,kjrb,hzFh,drJp,aJ4r,aHRN,eQAb,dsMV,eQLx,n45x,n3L1,gci1,dskN,3R03,dsf9,3RDr,3RxV,5dfF,9kFN,9kur,5cyF,3Qup,3QoN,hAxr,hAb1,kjYX,kkjx",
                    "661d": "iyTh,pWlB,mXV/,mYij,lvwP,e7Sp,cEsD,cEmx,j/WL,iz9l,e8et,e8UF,pW/H,fDQh,iz/t,lvUT,8fTP,8gE1,bcDb,5kEN,5jUF,bbT9,bcDh",
                    "670a": "izfl,iyTn,iA5z,izln,izPr,5kEN,3Rx7,3RJ9,6NIp,3QYN,6N8j,izxz,orZZ,orpZ,cEsx,cEQH,3QoH,5jID,oqRT,ordX,5k4H,3QMR",
                    "70c0": "or0z,7YkF,3QoN,5cJP,7Yqh,5c+H,3Rbp,5da1,lHS1,n3/P,lHB9,gctb,iYkV,eQ2r,eQLx,hzW3,gc6N,hzzz,kjwV,drJj,iXhp",
                    "783b": "mYSj,mXy1,pWVL,orO1,pWxx,mY67,fCU7,fCO1,fDg5,fDm7,izDv,k0B1,iA5z,fE6p,fDEf,h4jP,mYij,cEmr,cFGV,cF6J,8fTV,6Mo1,8fZL,5j+B,5kKT,8gK7,8fZR",
                    8832: "mXJZ,oqRT,ordR,mXW5,luMr,lvkD,h3zr,iyTn,h47x,izfr,5kgD,5jCx,e7Ah,e88n,5kaD,e7Yf,5j+B,5jOt,e7Mj,3RCZ,5kWV,iA5F,izDv,k0u/,h4jP,orH/,lvIR,lvUN,orU7,6Nkf,fDKl,6Ne9,6Nwn,8gK7,lw4P,os49,orw3,lvwP,lw4V,bcJh,e8ID,e8kz,bclj,bcJn",
                    9529: "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,hAxr,hzQx,c4Zr,hAb1,c4gx,orDX,hAb1,lI1b,n3/V,n3u3,lHGN,kkdP,kjI9,5dqP,3RxV,3Rbp,5c+N,c4rN,c4Oh,7Z7h,6B8F,7YY1",
                    "9e48": "n31X,oqRp,orbP,n3dh,orJz,lHMp,iY9z,kjZ1,gcnz,gcth,hArV,lI6V,lHGN,dskN,dsSx,6Bpx,3Rsh,3RmF,5da1,9kA3,9l0h,6Axb,5cJV,6AIx,ds9x,drJp,hzop,hzKV,lHpV,lGZN,3QFz,lHeF,aI0X,5chN",
                    8869: "lHkb,oqX1,kj4H,kjwV,iXDV,c3KN,3QFz,gbGF,5cPr,eQFV,lI6V,lHB9,iXP3,eQ89,5dwx,hAaX,gci1,ePYP,dr+h,aInx",
                    5281: "iXbH,or0F,9k7X,lH91,9kQX,9kdF,drUz,dsqp,hA5j,hzzF,lHez,lHS1,orbP,n3ox,9kur,lHvx,5cnj,6Am1,6Axb,5cEh,5cPr,6AIx,6ATH,5d4p,5dfz,3Rsh,3RxV,5dwx,or+x,7Z1z,kk2F",
                    "9ec9": "n3db,or0F,orn3,n3zN,n3Qz,orPh,iYkP,lIcx,lH3p,iXbN,iY9z,iXsF,gccj,kjTp,gbpH,gcEx,kjwP,gbRV,7YH3,eQ89,aI0X,aIVh,3QoH,6ACV,3RxP,6AZp,7Z7b,dsHh,drP1,7Yf1,7Z7h",
                    9621: "aHXj,9k81,9kdF,aIch,ePTh,hzu1,kjrh,n3dh,n2SN,3QoN,orPb,n3ox,gbRP,gcEx,3Rbj,n3Fp",
                    5786: "7Ykz,or0F,9kur,6AaN,hziH,hzKV,hAaX,orE1,lIcr,lHS1,dsf3,dsMV,hArV,hzW9,6AO9,3QQV",
                    8315: "lIcr,lGZN,oryj,iX+p,iXDP,orbV,drDH,gbvp,gcEx,dsMV,6Bpr,3RDx,3RxV,6B8F,c4IF,c3W1,3QQP,c4aV,7Y9j,7YSp",
                    "848c": "n45r,n2SN,oryj,lHMp,lHpP,orbV,eQ83,kjI9,ds9r,7Yqh,5c+N,3RmF,3RxV,3QoH,3QFF,6AO9,7YSp,aIPF,aHRH,aJ4x,drUz,dr+h,gbXx,gc6H,dsw1,dsHh,hztX,hAmh,kjlz,iXyh,iY3X,kk2F",
                    "63ac": "or0z,5cyF,3QA1,5cnp,ePYP,aHRN,iXbH,iXDV,orDX,hzQx,kjNH,kkjx,5dwx,3RxV,3Rsh,5dfF,gccj,6AZp,dsBz,eQAh,eQ83,dskN,c4Ob,c4gx,7Z7b,aIK1,aIyH,6ACV",
                    "54aa": "hzW3,lHpV,n3/P,hAgF,3Rbj,oryp,5cyz,5cEh,eQdN,5dwr,dsw1,gcEr,gbMh,lGZH,lHeF,c3/F,c3KN,lGZN",
                    5664: "lIcr,lHkh,eQLr,iYfh,orJz,eQuF,eQ83,orn9,iY3X,gccp,iXUH,hA5p,ePTb,kjCx,c4Ob,c4m9,9koP,9lbx,9kQX,5da1,3Rbp,5c+N,7YMH,5cPx,5dwr,7Z7h,kj4H,kjlF,c3/F,c3KN,kj4N",
                    "5f9c": "kj4H,or0F,ePwH,kjrh,3QzX,gbB1,3QWr,iXJx,iYqx,5dwx,3RxV,3Rsh,5dfF,orDX,iY41,kk2z,n3/V,n3u3,kjTp,aIVb,gcth,gc6N,aIyN,aIVh",
                    6003: "3QzX,oqX1,3QQP,eQp1,lHS1,lHB3,lI6V,eQLr,eQ2x,c4CX,5da1,3RmF,3RDx,6Bpx,iXyb,gbRV,drDH,iXbN",
                    "6c85": "luYt,oqRT,mYGh,mY67,h3Xv,h4TV,iyNb,fCU7,cEEz,3QuT,h4dD,bcfd,3QGV,6NIj,3RJ9,3Rr1,5kyR,h4vR",
                    "6ed7": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5dwr,3RDx,3Rbp,5c+N,eQdN,ePTb,gcnF,c4Iz,c4aV,9kjb,9l5V,orhr,iXsF,iX+j,orPh,lHGH,lHpV,iXP9,lIcr,lHXF,iYkV",
                    9083: "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,5c+H,6AZp,dsqp,hzQx,hAxr,hzFh,c4Iz,eQFV,c4CX,aIVh,9lbx,9kA3,6ACV,6Axh,aIcb,aIhV,eQdN,gc13,eQ2x,dr+h,drP1,hz/H,iXUN,iY3X,hAb1,lHXz,kk8h,lIcr,n45x,n3dh,lHkh,lHB3,kjCx,oryj,n3Fp",
                    "9a7f": "oqLH,or7R,fDa5,luSx,e7Gn,e82r,5k4H,3QMR,3QGV,5jOz,bbY/,9Inh,8gW3,8g9T,fDKf,3Rl5,cF0D,cFAP,fDm1,fDsd,h4pL,mYMj,or+3,orjT,mYc7,h4BN,fE0j,fE6p",
                    "739f": "n3db,n2SN,n31X,6Am1,6AaN,7Yqb,6Am1,gbpH,gbMh,kkjr,kjCx,oryj,lHS1,kk8b,dsHh,6ATN,3QLh,3QFF,3RDr,c4rN,eQ89,hzW9",
                    "684e": "3QFz,or0F,5dwr,5cPx,dsvX,5da1,aIt3,aI+V,dr+b,c4aV,9jYH,ePI1,iXDP,iXbN,lIcr,lHvx,gc13,lHXF,gcyP,gbXx,eQFP,hAmh",
                    "6b87": "lHpP,lH3p,c3KH,lH91,hztX,hzKV,ds3V,6ArF,3Qup,ePHX,c45h,oryj,iXP9,lIcr,lHMp,iX+j,iYkV,eQjp,eQLx,5dwx,3RxV,3Rsh,5dfF,6AIr,6AO9,7YSp,c4Oh,dsHh,eQAh,dsqj,aIt9,aInx",
                    "8d47": "iXsz,7YkF,3QoN,7Ykz,5cJV,9koP,n3iV,n2Yp,9k2p,aIt3,dsqp,gc19,7Zir,c4IF,gcyP,dsBF,kjCr,kkjx,lI6P,n3Wh,orDX,5da1,3Rbp,5c+N",
                    8118: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,3QWr,6ATN,dskN,dsSr,ds3V,dsvX,5da1,3RmF,3RDx,6Bpx,gc6H,gcnF,hzKP,kjCx,kkjx,iYqx,hArV,oryj,lHS1",
                    "71b9": "iXP3,orn9,iXhj,iYkV,lIcr,lGZN,c3KH,c4Zx,ds3P,c4aV,c4xj,dsqp,3RDr,5dqV,5d4j,3Rbp,3QQP,5cJV,5cnj,3QoN,hAgz,eQuF,ePNF,hzzF,hAgF,aIPz,7Z1F,7YkF,aI6F,aIPF",
                    7913: "n3iP,n2SN,ePwH,n37F,or+r,orhx,iXP3,iYkV,gchX,lHS1,eQLr,eQ2x,9kA3,9l5V,6B2X,c4D1,3QWr,3RDx,gbGz,gbRV,7YvV,7Yf1,gbB1,gbGF,lI6P,gcyV,gc19,lHB9,lI6V,c4TP,c4m9,6AO9,6BjV,c4TV",
                    "94bf": "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF,dsSr,dskN,lHXz,5dfF,lHGH,lIcx,5dwx,5c+N,lHGN",
                    9564: "gbpH,or0F,kjwP,kjg1,iYqr,iXJx,orJz,iY9F,iX+j,oryp,n3u3,lHGN,lI1b,n3/V,eQuz,gcth,gc6H,eQjp,gbAX,gbMh,c4aP,c3KN,dsSr,ds9x,aIt3,aI+V,7Zir,7YBx,3RDr,3RxV,7YY1,5c+N,3QWx,3QQV,dsvX,7YY1,gbGz,3QFF,6ACV",
                    "75c4": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gccj,3Rbp,gbXr,gcEx,ds3P,iXP9,c4TP,c4xp,7YSj,7Zix,gbGz,c3KN,kj4H,hzop",
                    "76b2": "iXbH,lGZN,lHpV,iXDV,iXsz,c3KN,c4aV,7Y3H,7YvV,drUz,3QFF,gbpH,gbRV,hArP,iYqx,kkjx,kjI9,6AO9,3QQV,3R5H,9l0h,c4TV,eQFV,eQjp,c4xj,aIEp,3RDx,orJz,eQuF",
                    "988c": "or0z,n37F,gbpN,ePYP,ePCp,n37z,gbXx,n45r,n3u9,iX+j,n3QF,eQoX,7YY1,3R09,3QWx,3RDr,6Beh,9l5P,iYkV,iXP9,9kA9,6ACP,c4aV,c3Qp,6Agp,6ACV",
                    "86ce": "oqWX,5ct1,5chN,6Axb,5ct1,5cJP,9kjh,3QWr,5cV9,lHB9,lIcx,hAxr,hz/N,hAaX,6B31,3R5N,5dlb,3RxV,5dwx,dsSx,dsw1,iXyb,dr+h,drDN,iXbN,iXyh",
                    "873e": "oqWX,5ct1,5chN,6Axb,5ct1,7Yqb,5cJV,9kLj,5cPx,5dwr,9kWF,n3KX,3Rh1,iXP3,iYkV,aJ4r,aIhV,n3/P,eQFV,eQ89,n3u9,n3/V,iXyb,dr+h,drDN,iXbN,iXyh",
                    8788: "oqWX,6Am1,6AaN,7Yqb,6Am1,6Axb,9kjh,3QLb,6AIx,n3ox,n45x,iX+j,lHXF,gcEr,gc6N,dsBz,5dfF,3Rh1,5d4p,9kLj,5cV9,5dwr,9l0h,iXUH,dskN,dsSx,iYqx,iXUN,dr+b,ePTh,iXyh,iXbN,drDN,dr+h",
                    "7b90": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,eQ83,kjI9,ePwH,eQLx,hArP,hzop,gbAX,gcth,9kWz,9kdF,6Arz,6B8F,3QFz,c3/F,c4IF,5dfF,3Rh1,3Rbp",
                    "7c2a": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,iX+j,iYkV,hA5j,gc6N,gcEx,iY9z,c4IF,aIVh,aJ4x,c4Zx,aIt3,eQp1,ds9r,aIch,iXyh,iXmX,iXJx,hztX,gbvp,gbXx,aHRH,ePNF,6Arz,6B8F,n37z,kjwV,orJz,kjNN,3QFz,3RmF,9kWF,9kdF",
                    "88d8": "orn3,gc19,eQ2x,gbRV,iXyb,kjlF,iXDP,ePI1,ePCp,lI6P,lH3p,orDX,n3QF,iY3X,kk2F,iX+j,eQAh,eQFV,c3Qj,c4TV,dsf3,6ArF,5cnp,5chN,9koP,3QQV,3QWx,5cV9,9l0b,6B31,aIyH,9kFN,5dfF,3RxV,3RDx",
                    "7fe1": "ePYP,orbV,oryj,eQjp,lHMj,lIcx,lGZH,lHpV,iXDP,iXhp,iYkP,iX+p,gccj,gcEx,gbpH,gbRV,c3Qj,c4gx,5cPx,3QLh,5cnj,5ct1,aInx,9k7X,7YkF,c4rH,c4TV,5dqV,3Rsh,3RmF,5c+H,5d4p,aI+V,9kLj,7YY1",
                    9161: "n3or,n2SN,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,hzW3,kjNN,kkjx,iYqx,hArV,orDX,lHXF,gccj,5d4p,3Rh1,3RDx,6Bpx,7YSj,dsMV,iXJr,5cPx,5chN,iXbN,iXJx",
                    "8dba": "kkdP,kjI9,orDX,aIK1,3QWx,3RDr,aIK1,dsf3,dsSx,drUz,ds3V,drJj,5cnp,5chN,7YvP,5cnp,hzzz,6ArF,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e41": "n3Fj,orsN,hzQr,hArV,lI6V,lHvx,6AIx,3QLh,5chH,5cnp,7YvV,drUz,ds3V,5cnj,ePCp,hzzz,6ArF,aJ4r,aIyN,eQAb,5dlh,5d9X,eQp1,3R5H,eQdN,eQLx,5dwx,3RxV,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "89eb": "iXbH,or0F,lH8X,lHpV,hzzF,3QFF,3QQP,hzKV,hzop,5cnp,3QoN,9k2j,9k81,9koV,drJj,ds3V,kkjr,kjI9,7ZcP,aIPF,aIEj,6AIx,orDX,3Rh1,gcyP,c4TV,c4m9,gc19,gcyV",
                    "96d2": "hziH,oqX1,kjaj,kjrh,hzFh,c3KN,c4gr,hzu1,lHGH,3R5N,iXJr,oryp,lHXz,n3QF,5dfz,kk2F,5c+H,5dwx,aI+P,aIyN,gc6H,gcyV,kkjr,kjNN,aIhP,5cJV,5cnp,aHXp,aIhV",
                    "9ca3": "j/yH,pW9z,mXJZ,mY0b,iz3p,9IFp,e7Gh,e82r,6MS5,5jCx,5kWP,5kaD,bcf7,bcPj,e8wv,5kyR,pWPF,fDEf,izrn,orpZ,h4vL,mYSp,os49,orO1,h4TP,lvON,9IRl,izfr,iyTn,9Itn,9IRr",
                    "9ccd": "j/yH,pW9z,mXJZ,mY0b,j/QV,8fTV,e7Gh,e82r,5k4B,5jCx,8gPZ,8gfZ,fE6j,e8UF,e8Cx,fDKl,k0v5,lvkx,lw4V,orNX,orpZ,fDm1,pXbP,izVx,e8kz,pWPF,lvCL,8g3R,izfr,iyTn,8fHT,8g3X,5kgD,5kQP,bcPj,bcfd,5kgJ",
                    "9ac5": "kjaj,kjlF,gbGF,eQ2r,gbXx,gbpN,ePwN,gbvj,n2Yp,n3iV,gbRV,aHXj,aIhV,7YvP,7Y9p,3QLb,5cJV,ds3V,drJp,3Qup,3R03,3R5N,6B8F,7Z7h,aIVh,aIt3,aJ4x,c4xj,9kFN,6B31,3RxV,hAmb,dsSx,iXP3,iYqx,dsf3,hA5p,orDX,dsw1,lI1b,n3/V,n3u3,lHGN",
                    "9e82": "n3u3,orhx,lIcr,lH91,6Am1,3QoN,3QQP,5cPx,7YBx,7Z1F,5dfF,3Rsh,3RDx,5dwx,c4Zr,aJ4x,aIPF,c4D1,eQp1,dsvX,dsHh,ds3P,dsf9,ePYP,aIhV,aIt9,kjCr,gbXx,gchX,kjZ1,gbMb,gcyV,iYkV,iXyh",
                    "723b": "gctb,n37F,gbvj,gbB1,iXJx,lHGN,orJF,eQoX,dsw1,6ACV,5cyF,3Qup,3QoN,3RDr,3RxV,6AZp,dr+h,ePTh",
                    "8bd4": "kjfX,n2Yp,kkdP,kjwV,gbRP,gcth,gbpH,gbB1,6Am1,9kjh,c4Zr,c45h,9kQX,5dqV,5dwx,3QzX,3QFF,aIyN,oryj,3Rbp",
                    9122: "orsH,oqLN,gbMb,or6h,gbpH,gc6N,lH3j,gbvp,kjI3,kjrh,ePHX,aHRN,aIyN,6ATN,3QWx,5cJV,7YH3,6AaN,7Z1z,7ZcV,9lbx,c4Zx,gcnF,kkjx,n45x,n3L1,3Rh1,drOX,dskN",
                    8279: "16RGL,16N3x,1h7cN,YwRT,Yvxp,1h5Uv",
                    "83a9": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hAmb,hzu1,eQoX,gcnF,gc13,eQdN,ePTb,gbGF,drUz,dsHh,aIt9,5cV9,3QWx,5cJV,9lbr,9jYN",
                    8579: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hzW3,iXP9,hzoj,hArV,gbMb,c3Qp,c45h,ds3P,7Y9p,7Yqh,9koP,3Qup,3QoN,3R5H,dskN,dsSx,c4m3,gccp,aIyH,aI+V,7ZcP,7YMN,5c+H,5dwx,eQuz,5dfF",
                    "53f1": "orn3,5cV9,3R5N,3RDx,6Bpx,aIhP,kkdV,iXbH,iXyh,9kjh,9jYN,iXbN",
                    5591: "orBV,pWJP,mY05,mYMj,izxt,lvkD,lvUN,izJB,h3Xv,h4TV,9Jvx,9IXn,luMr,lv2F,cEEF,cEmx,luMx,e88h,e8ID,5kKT,5kaD,e88n",
                    "5ca2": "hzW3,orn9,lI1b,hAmh,hzu1,lH91,eQLr,ePwN,eQAb,5dlh,3RmF,5da1,7YMH,c4rN,c3/F,7YkF,7YMN",
                    "736c": "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,iXDP,orn9,lHvr,lHMp,kjTp,hzW9,7YH9,6AO9,3R5H,5d4p,hA5p,hzKV,3QQV,9kLj,9koV,ds3P,dsqp,gchX,iYfh,n3Wh,n3KX,n45x,hAxx,gcyV,aIJX,dsBF,c4Zr,c4IF,7Z1z,7Zo9,3RxP,dsMV",
                    6120: "3QzX,oqX1,5dwr,5cyF,5dqP,aI+V,aIch,5cEh,aIt3,5cV9,5d9X,aIK1,hzQr,hAmh,gbMb,iXsF,iXbH,drDN,dsHb,lI1h,lHvx,ds9x,dsHh",
                    "6d91": "kjaj,n2SN,lIcr,lHeF,3Rbj,oryp,aIPz,5dwx,5cEb,c4rN,c3/z,3Qup,hziH,ePCp,hzKP,hArV,dsMV,ds3V,hzKV",
                    "5b84": "n3zH,orn9,iYkP,lIcx,lH3p,iXbN,iXJr,7YBx,5cEh,3QA1,3Qup,gbAX,gci1,5da1,3RmF,3RDx,6Bpx",
                    "5a09": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,iYkP,iXP9,gchX,orE1,c4Zr,c4gx,c4CX,9kA9,9l5V,6BjV,3RmF,3Rh1,5d4p,gc13,lHB9,lI6V,gcyV,gc19",
                    "7eef": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,orsH,3R5N,3Rmz,orJF,9kWz,9lbx,9koP,9kFN,eQdH,eQ2x,eQFP,eQuF,kk2z,kkjx,kjwP,kjNN",
                    "74a9": "lHkb,lGZN,ePwH,ePTh,6AaH,6Am1,7Yqh,3QFz,6ACV,kjwV,kkjx,iYqx,hAmb,gcth,gccp,hz/N,iXUN,gbXr,gc19,iY41,oryj,kjTp,n3Wb,n3Fp,dsSr,ds9x,aIyH,dsw1,c4xj,9kWF,5dfF,3Rh1,5cV3,5c+N,9kWF,9l0b,aI+V,5dwr,7Z7h,aIJX,7YMN,7YH9,lH8X,6Am1",
                    "69cc": "3QFz,or0F,3QWr,6ATN,gc6N,gbXx,ds3P,ePTh,gbAX,aHRN,iXDP,iXbN,iXUH,lHB9,gchX,gcyV,kkdV,kjZ1,7YY1,7ZcV,c4TV,c4D1,5c+H,3Rbp,3RDx,kjYX,n3QF",
                    "74ff": "lHez,oqX1,kj4H,kjCx,gbAX,hzop,hzKP,gbMh,ePwH,eQ2x,7Z1z,5d4p,5c+N,n3zN,n45r,n3u9,hz/H,hAmh,5dlh,3RxV,3RDx,5dwx,eQjj,c4D1,c3Qj,c4aV,6ACV,6Agp,c3Qp",
                    "6c24": "hziH,or0F,hztX,hAmh,6Beh,3RDx,6Bpx,7YMH,aInx,7Yqh,ds9r,aInx,c4rH,c45h,kjrb,kk2F,n3/P,n37F,5d9X,5ct1,ePI1,eQp1,5da1",
                    6590: "n3iP,n2Yp,n3/P,n3Fp,kjTj,kkdV,kjaj,kjwV,hzKP,hzop,hArP,hA5p,oryj,gccp,gbRP,orbV,dskH,eQ89,c3KH,c4Zx,aIhP,5dfF,3RxV,3RDx,3QoH,3QA1,5cEh,9kR1,c4Oh",
                    "6c93": "mXE1,mY0b,lveH,fCU7,fCO1,fD9/,e82r,e88n,fDsd,pWDJ,lvwJ,h4BN,fE0j,fE6p,k0oV,orU7,8fTP,8gE1,bcDb,5kEN,5jUF,bbT9,bcDh",
                    "755b": "7YeX,lH91,3QQP,3R09,5d4p,9l0h,c4Iz,7YMN,7YH9,c4rH,eQp1,gci1,eQLr,n3L1,orE1,eQ2r,n3L1,ePwH,ePTh,lGZH,lHkh,7Yqh,7Y3N,lGZN",
                    "950d": "gbpH,or0F,kjwP,kjg1,orDX,lHXF,kkjr,kjI9,kk2z,eQ89,eQFV,dsMP,gcth,c4Ob,5dlh,3RxV,3RDx,6Bpx,c4CX,3Rh1,c4rH,6ATN,3QWx,6ACP,3QFF,gbGF,gbAX,gbRV,c4aP,c3KN",
                    "9e2a": "c3/z,or0F,iXbH,iXJx,lHMj,orJF,iY9z,kjZ1,gcnz,gcth,hArV,lI6V,lHGN,dskN,dsSx,6Bpx,3Rsh,3RmF,5da1,9kA3,9l0h,c4aP,5cJV,5cnp,c3Qp,c4aV",
                    "766f": "n3KX,oryp,n45r,n37F,7YkF,3QoN,dsf3,9kjh,3RDr,3QWx,c4gx,c4Zx,dsvX,3Rh1,9kur,9l5V,6BjP,6AIx,hAaX,hArV,hzKP,hz/N,iXUH,iXDV,iYkP,iY41,c3KH,gbGF,kj4H,hzop,eQFP,lI6V,lHS1,eQp1,eQFV,eQdH,lHGN,lHpV,ePYV,eQdN",
                    5366: "gbMb,or6h,gbpH,gc6N,kjI3,kjap,aHXj,aIt9,5cEb,dr+h,5chH,5c+N,orJz,3RmF,dsSr,hAmh",
                    "50ed": "iXbH,or0F,3QzX,kjg1,7Z7b,7YvV,dsSr,c4Zx,c4Oh,dsBF,n3QF,n3Fj,n45x,kjTj,hA5p,hAxx,eQoX,c4rN,eQdH,dsf9,ds9x,n3ox,n37z,n3u9,kjrb,hzFh,hzW9,c3/z,gbRV,5cJP,aIhV,aIVh,5dlh,5cJV",
                    "8c20": "kjfX,n2Yp,gbpH,gbB1,5ct1,9koV,c4rH,9kFN,3QQV,5dwr,3RDx,3RmF,5da1,c4D1,hArP,kkjx,kjwV,hzFh,oryj,kjTp,lHXz,n3Wh,n3or,lHB9,c4Ob,gcth,gbXx,c4gx,c4Oh",
                    "58bc": "n3u3,n2SN,9kjb,or6h,aIt3,9kA9,9k2p,aHXp,c4rH,c3KN,hzoj,hzW9,hz/H,iX+p,n3Fp,n3/V,hArV,hAxx,eQjj,eQFV,dsMV,9kR1,9kLp,c4CX,aIPF,9l5V,9lbx,6AlX,6Beh,3RDr,3QoN,7YH3,3R09,eQ83,kjI9,kjap,ePCp,eQ89",
                    8309: "lIcr,lGZN,orDX,iY41,iXyb,or6h,3R03,iXP9,5dwr,5dqV,6B8F,9kLp,aIEp,aInr,6ArF,5cnp,5chN,c4Ob,c3W1,gbpH,gcEx",
                    "83f0": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,gbvj,gbRV,drUF,5cyF,3QA1,5cnp,aIhP,aHRN,gcyP,gc19,6AO9,3QQV,eQjj,3Rbp,6B8F,3Rsh,3RDr,c4IF,gcnF",
                    "62ca": "oqXJ,5jOz,3QuT,5jCx,fD9/,bbB1,j/yH,j/WR,orvZ,izfr,3R2T,k0cZ,5kyL,3Rr1,5kKT,orU7,k0u/,k0T9,cFoH,e8wB",
                    "54b4": "kkdP,kjrh,orsH,kjNN,9kdF,aIyH,dskN,hAaX,9kR1,5cV9,3QQV,3QLh,9kQX,3RDx,eQFP,c4IF,iXbH,iXsF,aI6F,aHRN,iXbN",
                    5623: "kjTj,oryp,n3/P,kkdV,kjwV,n3iV,dskH,ds3V,dsSr,dsBF,9kWz,9lbx,9koP,9kFN,3QFz,6ACV,hzKV,hz/N,5c+N,3R09,5cPx,3Rbj,6B8F,hAgF,hAxx,5dwx,3RxV,5dlh,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5ea0": "n3zH,orn9,lIcr,lH91,7Yf1,3QoN,gc6H,3R5N,gbGz,gcEx,c4TP,c45h,7Ykz,7Zix,iXJr,hzW9,hA5j,iY41",
                    "960d": "n31X,oqRp,n3iP,n45x,5dwx,3RxV,3Rsh,7YvP,7Z1F,kjaj,3Qup,kjYX,iXyh,c45h,c4aV,ds9x,gcnz,gbRV,hz/H,dsqp,c4D1,dsBF,5dfz,aIPF,aIhV,5cJV,5dfF",
                    "6e53": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5dwr,5cyF,5dqP,aI+V,aIch,5cEh,aIt3,5cV9,5d9X,aIK1,dsqj,c4D1,dsBF,iY9F,iXJx,iXP3,eQ89,c4aV,orn3,hzzF,hAxr,orE1",
                    9036: "lH8X,oqRp,hziH,hzu1,6Am1,3QoN,6AlX,3QLh,3RDx,5dwr,5dqV,6B8F,aIt9,dskN,c4Zr,c4aV,c4Ob,aIVh,6ATN,5cPx,5cJV,oryj,gccp,n3db,orPh,kkjr,kjrh,iY3X,eQFV,eQLx,iXUH,ePYV,ePTh",
                    "5b16": "kjaj,kjCx,n3ox,n2Yp,hzop,drDN,n3Qz,orJF,n3zH,n45x,kjYX,lHMp,lI6P,kk8h,iX+j,iYkV,dsBz,iY9F,gc6H,gcEx,c4gr,7YvV,5da1,3Rsh,3RxV,3Quj,3QFF,5cPx,6AZp,aIVh,aHRH,aJ4x,hztX,ePI1,eQ2x,hzQx,hzu1",
                    "7f2d": "n37z,hziN,gbpN,gbGF,hzzF,gbGz,c3KN,aHRN,aI6F,5chH,6ArF,7YH3,5cJV,5dqP,7Z1F,5cV3,3R5N,5d4p,9kLp,c4gr,c4Oh,dr+b,kjTp,oryp,lIcr,lHpV,dsSr,kjTp,iYkP,hAgF,hzQr,iXDV,9l0b,eQAh,eQ2x,9kux,9l0h",
                    "67d9": "3QFz,or0F,lHRX,3Rh1,hzW3,hArV,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh,dsf3,lHB9,lI6V,dsMV,dsf9",
                    "6a35": "3QzX,oqX1,5cPr,3QQV,3R5H,5c+N,5dfz,3RmF,3RDr,5dqV,9kur,9lbx,n3or,7YBx,kjrb,orn9,iXbH,iXyh,c3KH,gbvp,ePNz,dr+h,dsMP,ds9x,hzQr,hArV,lIcr,lHvx,oryj,n3L1,9kQX,lHS1",
                    "669d": "gvfd,guXN,gw9v,gvyH,lhrj,osaJ,orgh,lgwZ,aaAD,bN0F,8C4r,8C+Z,3QOD,5rEL,3RPD,5s2H,oqLH,or3j,8BTz,8BA1,oqLN,jGbl,jGOl,dlwR,dkVX,jGbr",
                    6710: "hzFb,hzop,c3Qj,c45h,3QoH,5cnp,n2Yp,n3dh,5cEh,3QFF,6B2X,3Rsh,6Bpx,kkjx,kjI9,gbRP,orsN,gc6H,gcth,aIVh,aIyN,gc6N",
                    7178: "oqWX,6Am1,3QoN,6Axb,7YkF,5cEb,7YBx,lHvx,lI6V,hArV,hzQx,aJ4r,aIyN,3RxP,5dwx,eQLx,eQdN,3R5N,eQoX,5da1,5dlb,eQAh,iXbH,ePwN,kjrb,hzu1,orsH,n3Fp",
                    7893: "n3iP,n2SN,ePwH,n37F,orsH,kjwV,n3Qz,orE1,lIcr,lHB9,3R09,5dwr,5cV9,aIt3,aI+V,gcyP,gc19,5dfz,lHXF,hztX,hzKV,9koV,9k81,hzu1",
                    "94a4": "gbpH,or0F,kjCr,kjg1,gbAX,gbMh,aInr,aHRN,6ACP,3QFF,gbGF,gbXr,lHS1,n3L1,gcEr,lHS1,eQoX,gccp,dsf3,dsMV,3Rbp",
                    "954c": "gbpH,or0F,kjfX,kjwV,oryj,kjCx,eQuz,orJF,eQLr,eQdN,n3zN,n45x,hz/H,hArV,kkdP,kjNN,gbAX,gbRV,c4aP,c3KN,c4m3,c4TV,7YY1,7Zix,6Bpx,3Rsh,3RmF,5da1,3QWr,6ATN,c4rN,gbGz,3QFF,6ACV",
                    "9e6a": "kj4H,or0F,7YeX,lH91,9kA3,9k81,9l0b,9kLp,drOX,dsf9,hzW3,hzu1,lH3j,lHB9,n3iP,orbV,9koP,lHpV,3QoH,5cnp,5cyz,3QFF,3QQP,5cJV,5cV3,3R5N,5dfz,3Rsh,3RxV,5dwx,dsSx,dsqp,lHMp,lI6V,gcyV,eQAh,iY9z,hAgF,orJz,lHMp",
                    "88e8": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QzX,gbB1,c4CX,3Rh1,9lbr,9kux,eQp1,kjZ1,n3KX,kjNN,hArP,hzW9,ePTb,drUF,aIhV,kjI3,eQ89,eQFV,kkdV,kjI9",
                    "4ef5": "orbP,iXhp,iXbN,3QFz,kjlF,kjTj,3Rbp,kjCr,kk8h,hzFb,orsN,dsSr,dr+h",
                    8114: "n45r,n2SN,orn3,n3u9,kjCr,iXn1,drP1,dsHh,iYfh,iXUN,gctb,gc6N,gbAX,gbXx,c4gr,3Qup,3QoN,9koP,3QQV,3QWx,5c+N,9l0b,6B31,9kFH,5dfF,3RxV,3RDx",
                    9097: "orpT,oqRT,h3zr,h4jP,9Jpr,8gK7,8gQ3,9JHF,e8UF,h4HT,k0T9,os49,orI5,3Rl5,or7L,3QMR",
                    "57d8": "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,dskH,ds3V,c4Iz,dsw1,5d9X,3RmF,5dlh,orPh,hA5j,hAxx,kjwP,kjNN,6ATN,6ACV,kjwV",
                    8343: "lIcr,lGZN,orDX,iY41,iXyb,or6h,c3KH,c3Qp,ePYV,hzW9,eQjp,c4TV,c4Zx,c4CX,c45h,7Ykz,7Z1F,3RxP,3Qup,c4m3,3R09",
                    8497: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,iXUH,gci1,gcth,aIVh,aInx,dsHb,ds9x,gchX,gbXx,3QWx,3R09,5c+N,7Z7b,6B8F,3RDr,3RxV,6B31,9kLp,3Quj,9kdF,ePwH,c3W1,ePTb,hzu1",
                    "640b": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,iXbH,iXyh,orPb,n3iV,6ACV,3QFF,3QQP,6AO9,hzW9,hAxx,gcEx,lHRX,hAb1,kk8b,kjZ1,eQoX,aIK1,aI+V,c4TV,c4rH,eQAh,3R03,6AZp,7YSp,7Z7h,3Rsh,3RxV",
                    5567: "lI6P,lHpV,iXJr,iYfh,gcEr,gbRV,oryj,gccp,aIEj,7YSp,5cV9,3QQV,3QLh,7YBr,ds9x,dsHh,7Z7h,7YSj,5dfF,3RxV,3RDx,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "570a": "lvUN,luYz,iz3j,izPx,fDWh,fC+3,mYc7,fDsd,bcxf,bbZ5,8fZL,8gy5,5j+v,e7Yl,e8wB,6Nkl,5ksL,oqLH,os49,3RJ9,3QoN,oqLN",
                    "72e8": "n2SH,iXyh,6Axh,3QA1,5cnp,gbMb,c3KN,orbP,hziN,kkjr,kjCx,n3Wb,lI6V,orDX,dsw1,3RDx,7Zix,dsSr,9l5V,3Rbp,ds3P,dsqp,hzW3,6AO9,3QQV",
                    6029: "3QzX,oqX1,3QFz,6ACV,n3iV,n3Wh,iYfh,iXDV,gbMb,iXsF,iXbH,drDN,gc6H,5c+N,3Rbp,3RDx,6Bpx,aIEj,dsMV",
                    "6cb2": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,5dwr,3RDx,3R5N,5cV9,hzW9,7YXX,iY41,9kWz,7Z7h,9l5V,gcyV,ePYV,orn3,hzFh,lIcr,lHvx",
                    "6f09": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QFz,5cEh,lHkh,lIcx,n3Fj,orsN,dsvX,kjZ1,kjI3,dsf9,hzKP,hArV,dsMV,ds3V,aInr,3QWx,3R09,6AZp,9kur,9kFN,aIPz,5dfF,3Rsh,3RDx,5dwx,7Z1z,9l5V",
                    8274: "oqWX,7Yf1,3QoN,or6b,3QLh,orDX,hzW9,lHMj,lI6V,gcnF,c4IF,c4xj,c4TV,gcyV,gccp,5d4p,3Rh1,3RDx,6Bpx,5cJP,6AIx,c4gx,c3KN,gbpN,gbXx,kjCx,kj4N",
                    "9aa2": "n2SH,n37F,ePNF,kjaj,drJp,dr+h,5cEh,3QFF,3QA1,5cnp,aI6z,9jYN,dskH,iYfh,iX+p,gc13,kjZ1,dsHb,hA5p,orDX,lHGN,5cPr,7YH9,9kFH,5c+N,3Rbp,3Rsh,5dlh,9kQX,7Z1F,6Bpr,9l5V,c4gr,lHvx,lI6V,c4TV,c4gx",
                    "73f2": "or7L,oqLN,h3zr,h3XB,6MnX,6MA3,8fZR,e8Ot,e88n,k0o/,lvCL,iz/t,izfr,oqXJ,6MA3,lveB,orjT,os49,lv+P,3Rk/,fDKl,9IRl,9JHF",
                    6874: "3QFz,or0F,5c+H,3Rbp,5da1,c4D1,eQFV,eQ89,aJ4r,aInx,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,orUP,lHvx,hArP,lIcx,kjYX,hAgF,hz/H,kjI9",
                    "8f77": "oqWX,gbpN,gbMh,3QFz,hzzF,5cV3,3R5N,3Rbp,5da1,lHS1,lHB3,n3/V,lGZH,lHpV,gc6H,hzW9,iYkP,gcth,eQ2r,eQLx,c3KH,c4aV",
                    "727e": "3QFz,or0F,dsSr,ds3V,dsHb,iYfh,iXJx,hzoj,hzKV,ePwH,kjap,c45b,9jYN,n3zH,dsf9,n3/P,n3iV,5cV3,aIt9,aIVh,5dlh,5cV9",
                    8188: "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,3QYN,fDm7,fE6p,5kWV,3RD3,5kKT,9Jjv,5kyR,9J1n,9JBz,cF6J,bcrf,bcDb,cFuT,orjN,os49,izVx,lvUT,lvwP,izxz,izVD",
                    "796f": "lH8X,oqRp,kj4H,kjrh,iXyh,drDN,3QFz,hzzF,3QWr,3R09,7YY1,dsw1,3RxP,7YY1,7ZcP,hArV,hzW9,7YH9,gbGz,ds3V,orDX,hAb1,lIcr,lHS1",
                    "772d": "hzoj,hzKV,ds3P,drJp,kjI3,kkjx,lI6V,hAxr,gcK9,gbXx,orDX,3Rh1,3QQP,3RJ9,5dwx,c4TP,aJ4x,aInx,7Y9j,lH3p,lHpV,7YvV,7Y9p",
                    "94db": "gbpH,or0F,kjwP,kjg1,iX+j,lHB9,lIcr,iYfh,hAaX,orE1,hzW3,hAxx,5dwx,5cV9,c4Zr,c4m9,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF",
                    "79d5": "orbP,lGZN,n3u3,3R09,3R5N,5d4p,6Bpr,3RDx,3Rsh,5dfF,orJF,eQuz,iYqx,gc13,gccp,hziH,hzKV,9jYH,ePI1,c4aP,dr+h,n37z,3QFF",
                    7610: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QLb,3QQV,9kLp,iX+p,gcnz,gcyV,aI+V,aIhV,gbRV,hzW9,dsf3,ds3V,dsMP,dsBF,9kLj,3RxV,3RDx,ePNz,aHRN,kj4H,hzop",
                    8043: "n3or,n2SN,3QQP,n3iV,3R5H,kjNN,kkjx,5dwx,3RxV,5dlh,9kur,9lh9,orJz,9kWF,eQdH,eQLx,c3VX,c4aV,hzKP,hzu1,6AlX,n321,9koP,5chN",
                    "867a": "lHvr,lGZN,lHpP,5cJV,3QWx,3RDx,6Bpx,aIVb,7ZcV,7YH3,9l5V,orDX,9kR1,lH8X,6Am1,3QoN,iYfb,iXUN,dskN,dsHh,iYfh",
                    "86df": "oqWX,5ct1,5chN,6ACP,5ct1,9kjb,5cJV,dr+b,iXyh,iXbN,drDN,ds3V,hz/H,eQ2x,eQLr,hAmh,eQAb,aIVh,3R09,eQdH,aIyN,3RxV,kjI3,kkjx,oryj,lHS1",
                    8753: "oqWX,5ct1,5chN,6Axb,5ct1,9kjb,5cJV,3QWr,eQ2x,eQjp,5d4p,3R5N,7YBr,7YSp,aIEj,aInx,7Z1z,dsBF,5dfz,3Rsh,5dqV,eQFV,gcEr,n3Fp,oryp,hzKP,n3Fp,hAgz,hzW9,iXyb,dr+h,drDN,iXbN,iXyh",
                    "87ea": "oqWX,5ct1,5chN,6Axb,5ct1,5cEb,7Yqh,6AIr,3QQV,7YMH,5c+N,3Rbp,3Rsh,5dlh,7ZcP,5dwx,9kQX,7Z1F,aJ4r,dsMV,c4gr,c4TV,orDX,c4D1,n3or,n45x,hArP,hzW9,kjI3,kkdV,eQFV,eQ89,kjI9,iXyb,dr+h,drDN,iXbN,iXyh",
                    "7b24": "j/yH,pWlB,mYc7,mXK3,mYSj,mYul,k0MZ,mYAh,pX5N,k0j3,k00R,mXQ9,h47x,e88n,cEQH,9Itn,9Inh,h3Lt,h4HT,cFuT,bcDh,bcxl,cFcL,9Jvx,5kKT,5jUF,9IFp,9JvD",
                    "7bda": "j/yH,pWlB,mYc7,mXK3,mYSj,mYul,mYAb,k0N3,k0iZ,pX5T,mXQ3,k00X,6N27,fDsd,fDKf,6Nkl,e8Ot,e8wB,bcxf,bcPj,8gPZ,8gy5,8fZL,8gfZ,bcf7,bbZ5,e7Yf,e8et,h4TP,h3Lz,5jOz,5kWV",
                    "7cbc": "lHkb,oqX1,orsH,lHvx,gbRP,orbV,kj4H,kjZ1,gbvj,iXsF,gccj,iXP9,c4gr,c4xp,9kur,7YBx,7YSp,dskH,3R5N,6AaH,drP1,7Ykz,9k81,c3VX,c45h,9kjh,6ArF,3Qup,3QoN,3Rsb,eQp1,orPh,or+r,eQAh,3RDx",
                    "8db1": "6AlX,oqX1,3RDr,3QQV,6Agp,3QoN,aHXj,6Agp,9kjb,9k81,5cV3,9kR1,aIK1,9kQX,5dqV,9l5P,dsMV,dsf9,9kA9,ePwH,ePTh,kjlz,kjap,lHpP,iXyh,kjNH,kjwV,kkjr,kjZ1,orPb,hAmh,gcyV,gcEx,hAxx,gchX,hAgF,gc6H,gc19,orn9,iXJr,hzQx,gbRV,lHRX,iX+p,iXUH,iXDV,iYqr,iY41",
                    "91ad": "n3or,n2SN,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,kjTj,lHGN,kk8b,kkdV,lIcx,hz/H,hAxx,orDX,hAb1,hAmb,orPh,eQAb,gcyV,gccj,eQp1,dsSr,dskN,aIyH,aJ4x,7Zir,7YMN,3RDr,6Beh,3R5H,7Z1F,dsBF,iXJr,5cPx,5chN,iXbN,iXJx",
                    "8e09": "lHXz,orE1,hArP,hzW9,eQ83,eQFV,kkdV,kjI9,3R09,3R5N,6B31,c4TP,9kWF,dsvX,aIK1,7Z1F,3RDx,5chH,5cnp,7YvV,hzzz,6ArF,ds3P,drUF,5cnj,drJp,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8c82": "hziH,or6h,ePNz,hzop,drJj,drP1,iXJx,kjCx,hzFb,kjg1,gc6H,iY41,n3L1,n3u3,n45x,hAxx,gcyV,hAmh,gbMb,dsf9,6AO9,3QQV,5cEh,5cnj,5ct1,c4m9,9k2j,9k81,ePYV,dsSr,5dwx,5d4p,dsqp,dsSx",
                    "9f80": "hzFb,or6h,hziH,hzQx,lH8X,hzu1,lHvr,lHkh,orDX,5da1,3RmF,3RDx,6Bpx,aIyH,iYqx,6AIr,ds9x,7YBr,5chN,drDN,aHXj,drUF,ePNF,aIhP,drUF",
                    "9c88": "kj4H,oqX1,lH3j,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,3QWr,6ATN,hz/N,hArV,dsMV,dskN,orDX,hAb1,lIcr,lHS1,9koP,hzKV,hzop,9k2p,9koV",
                    "9cba": "kj4H,oqX1,lH3j,lHkh,hzu1,9k81,drDH,dr+h,6Axb,5chN,6B2X,5cPx,5dfz,7YY1,6Bpr,3RDx,6Beh,n3Wh,n3ox,iY3X,hzQx,6ATH,hz/N,9kjb,hzFh,hziN,9jYN,9kjh,dsvX,aIK1,aInx,ds9x,dsw1",
                    9792: "oqWX,iXn1,iXyh,or6h,lGZH,lHvx,3QFz,iXsF,7YBr,7Y3N,3QWr,7YSp,dsqp,3Rsb,dsHh,iY3X,dsSx,dsf3,hAb1,n3L1,n3zH,n3/V,iYqr,iXP9,gbvj,gbRV,c4aV,c3Qp,gbvp",
                    "9adf": "orjN,oqXP,bbN3,bc91,bbB1,bbY/,6Mu7,5jID,5k4H,3QYN,6MSb,3R8Z,3Re/,bcVp,9J7t,h4NP,fCZZ,fDm7,k06N,j/KP,orZZ,h4jP",
                    "9eea": "7Ykz,lHeF,7Y3H,7YBx,aIhP,aHRN,iXDP,hzFh,hztX,iXhp,3QoH,5chN,5csX,3QA1,3QLb,5cEh,5cPr,3QWx,3R5H,3Rh1,5dlh,6BjV,9l0b,7Z1F,6AZp,6ATN,9kFH,9kLp,c4IF,c4Zr,gcnF,gc6H,gcEx,c4m3,gci1,iY41,iYqr,lI6V,kkjr,kjNN,orJF,lGZH,lHvx,eQ2x,ePwN,lGZN",
                    5140: "q9Xj,q8D1,q9vb,7g/x,5zfj,5zOt,8/wZ,5yfX,5yn3,cq99,q939",
                    "4f32": "orhr,gbvp,iXsz,3QFF,3QQP,6AO9,n3u9,n45x,os49,n45r,hAxx,hzW9,eQoX,5da1,3RmF,3RDx,5dC9,dsY3,7ZcV,5d4p",
                    "51a2": "luMr,oqRT,os49,lv+P,lv2z,lvON,lvkx,h3RF,fCU7,fCO1,iz9f,izxz,fDKl,6Nkl,3R93,6MY7,e8kt,6Mu7,h47x,bbN3,bbH7,9J7t,fDa5,8gW3,fDKl,h4NJ,e8Cx",
                    "57fd": "oqWX,6Am1,6AaN,7Yqb,6Am1,hziH,hzFh,hzQr,hAmh,n3Wh,n3ox,kk8b,kjCx,c45b,eQ2x,eQLx,c4TV,3Rbj,c4xp,6B2X,5dfF,6Beh,aIVh,aInx,5cPx",
                    8369: "lIcr,lGZN,oryj,kjTp,kjwP,orbV,drOX,dsHh,hAmh,hzu1,9k81,5chN,c4xj,aIEp,6Beh,6BjV,6Axb,3Rbp,aIhP,9kA9",
                    "84ff": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hzW3,iXP9,eQFP,gcEx,hAxx,hzop,ePwN,aHRH,ePNF,3QzX,c3W1,6Beb,6ACV,dskH,c4rN,9kFN,dr+b,dsSx,3QQP,9koV,9l0h,3Rsh,3QQV",
                    "64b8": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,kj4H,kjrh,oryj,lHB9,n3zH,n3Wh,iY41,dsw1,c4aP,c4Zx,gcyP,gc19,6AO3,6BjV,dsf3,iXP9,iYkV,dsMV,dsf9,9l5P,3RxV,3R09,9kA9,9l5V",
                    5575: "kjCr,n3iV,eQ2r,hzKV,6ACP,c4m9,3QQP,9kFN,kjNN,kkjx,hArV,dsBz,orJF,dsqj,dsSx,aJ4x,3R5N,aIJX,9kR1,3RDx,lGZH,lHeF,c3/F,c3KN,lGZN",
                    "5e54": "3QzX,oqX1,3QQP,3QWx,5c+N,6B31,9l0h,9kux,7YMH,5dfF,3RxV,3RDx,eQuz,c4IF,c4rH,eQdN,kk8b,kjI9,aI6z,9kjh,iXyh,iXbN,9jYN,c4Zr,eQLx,ePYV,c4aV,c4Zx,hzW3,n3u9,n3Wh,hAmh,hzW9",
                    7313: "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,iYfb,iXJx,3Rbj,n3Fp,9kA3,3QLh,c4Zr,c45h,3RDr,aIPF,n3or,n3Wh,eQAh,eQ2x,n3ox",
                    6096: "3QzX,oqX1,5c+H,3Rbp,5da1,c4D1,eQAh,eQdN,aI+P,aIt9,gbMb,iXsF,iXbH,ePwN,gbXr,iXP9,iXUN,iYqx,gcyV,orDX,iY41,lHB3,lI6V",
                    "6d0c": "lH3j,oqLN,n3KX,n37F,9l0b,lI1h,5dlb,3RxV,3RDx,or+x,n3iP,c4aV,9kdF,aIt3,c4aV,3QFz,3QLh,aIEp,iX+p,iXDV,ePCj,hziN,5cnj,c3/F",
                    "6fb9": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QFz,7YvV,kjwV,kkjx,kk2z,n3/V,n3ox,kjrb,orn9,gbXr,iXUN,gcyP,gc19,iYfb,gcEx,gchX,hAb1,dsMP,dskN,aIyH,aI+V,7YH3,5cV9,5dwx,7Zix,7YH9",
                    "59ab": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,kjI3,n3ox,hzQr,hAxx,5dwx,3RxV,3Rsh,5dfF,dsBz,aIVh,oryj,9kLp,3QWx",
                    "7ebe": "or1P,iyNh,h3zx,h3XB,iz9l,h3Xv,bbB1,bbZ5,5jCr,6MM5,5kgD,3R93,3Re/,5kyR,h4vR,k0oV,h4BN,izJv,mYMj,mYcd,h47x,h4TV,e8ID",
                    7441: "or9D,oqLN,mRE7,mQQb,guXH,gvlJ,6/1r,6/ev,8BZZ,oqYF,6/ev,bNx3,bMWf,8Chp,8CUp,jG/n,jGbr,q1Vb,q2Jd,jG/t,eXyV,eY9V,5sfF,5rEL,eXy/",
                    "690b": "3QFz,or0F,aIyH,5cJV,5dwr,9l0h,5c+H,3Rbp,5da1,dsw1,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,kkjr,kjCx,oryj,lHS1,dsMP,hArV,hzW9,dsf9,dsMV",
                    "8f8f": "oqWX,ePwN,ePNF,3QzX,gbB1,3QQP,3QWx,7YSp,c4xp,c4m3,c4IF,9l5P,9koV,7YSj,3Rsh,3RxV,gchX,aJ4x,gbRP,gcEx,c4aP,hA5p,oryp,iXJr,iYfh,lI6P,lHpV,kj4H,kjrh,aIcb,aHRN",
                    8004: "kjCr,orhx,kkjr,kj4N,n3Qz,hzKV,ePI1,ePwN,hzQr,eQ2x,dsf9,dsBF,eQAh,gbXr,hAgF,n3Fj,n321,c4TP,c3Qp,9k7X,9l0h,6Beb,6AaN,5dwr,3RDx,3R09,5cPx,c4gx",
                    "6b24": "oqRj,gbvp,gbRV,6ACV,3QFF,5ct1,aIcb,9jYN,3QWr,dsw1,hAb1,hArP,iYqx,kkjx,kjNN,hzW3,oryp,kjaj,kjwV,3RDr,dsw1",
                    "605a": "iXP3,orn9,iXbH,iYqx,lI1b,lH91,ePHX,eQAh,c4m3,hzW9,c3KH,c4Zx,5chH,7Yf1,9kjb,5cEh,3QQV,3Rh1,5dfF,6B8F,6ATH,9kA9,9l0b,6Bpx",
                    "777f": "orn3,kjI9,n3u3,n3QF,gcEr,kkjx,lIi9,kkjr,kjg1,lH8X,gbvp,iXDP,iY41,hzQr,gbMh,hA5j,gcnF,gc13,ds3V,c3Qp,gc6H,c4TV,aJa9,9l0b,9kjh,6Axb,6Beh,3Rsb,c4Oh,c45h,3QLh,3Rsh",
                    "94ee": "ePwH,or0F,iXDP,iXn1,orsH,kjCx,kk8h,gci1,5da1,3Rbp,5c+N,6ACP,3QFF,ePNF,ePHX,ePYV,aIhP,aHRN,aIt3,aI+V,gcyV,gc19,dsY3,ds9x",
                    "7a51": "or0z,n2SN,3QzX,n321,drUz,c45h,aHRH,ePCp,hzFb,hziN,gcEr,gbRV,iYfb,hAgF,lHvr,lI1h,hzW3,iXJx,oryj,gccp,5cPr,ds9x,dsMV,5dqV,5cPx,7YMH,aIyN,aIPF,7Z1F,7YMN",
                    7622: "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,3QFz,6ACV,hzKV,hz/N,5c+N,3R09,3QWx,9kur,7YH9,c4xj,c45h,c4Iz,c4Zx,9lbx,3Rh1,3RDr,7Z1F,9kWF,eQ2r,dsf9,kjI3,hzKV,eQoX,gcnF,hAgF,iY9F,iYkV,eQFV,eQLx,c3KH,gbGF,kj4H,hzop",
                    "556c": "n45r,n2SN,hAaX,kkdV,kjaj,hzFh,eQ83,orn9,ePwH,eQLx,c3Qj,c4TV,3RxV,3Qup,c3Qp,9kjb,9kR1,6B31,6Axh,9kjh",
                    "500c": "iXbH,or0F,3QzX,kjg1,9kur,9l5V,5dqV,5cPx,hzQx,hAmh,dsHh,ds9x,iYkP,lIcx,lHpV,iXyh,orsH,n3Fp",
                    "8c00": "kjfX,n2Yp,gbpH,gbB1,5ct1,7Yqh,3QLb,3QQV,aIEp,oryp,lHGH,kjwV,c4aV,c4TV,kkdV,kk2F,gcnz,gcyV,gbRP,gc19,aIEj,3RxV,3RDx",
                    "52f0": "lH3j,lHvx,gbXx,ePYV,gbMh,ePCj,hzzF,or0F,c4Ob,n3Wh,hAaX,hAxx,9kQX,5da1,3RmF,3RDx,5dwx,7Zir,6Bv9,6Beb,7Z7h,6ATH,7YSp,3QWr,5cV9,aIt9,aIch,c4aP,5cJV,3QLh,3QzX,5cyF,aI6F,aHRN,c3Qj,5cnp,3QoN,n3KX,c4D1,c4Zx,n45x,n3L1",
                    "82e3": "iXDP,orbV,oryj,iX+p,lGZH,lIcx,gcyP,gbB1,3QA1,3RxV,7YeX,7Z1F,c4IF,c3W1",
                    "83fd": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hzzz,5cyF,3QA1,3Qup,9k7X,6AaN,6AIr,9kjh,3QWr,3R09,dsMV,gcyV,gc6N,gbRP,gbMh,gbGF,c4gr,c3KN,dskH,c4rN,3RDx",
                    "5f08": "lIcr,lGZN,n3u3,orhx,lHMj,eQjp,dskN,eQ89,drOX,hzKV,lHpV,gbvj,iXn1,eQFP,iY9F,3RgX,c4D1,9jYH,9lbx,c45b,6Axh,3QA1",
                    5423: "f5cJ,iQB7,orJ5,9seX,7AKl,7BcZ,bktt,iRqD,f6hT,sbcV,os49,qinX,qiK/,f4Zv,f4Cx,qio1",
                    "55c4": "or+r,orbV,lHMj,oryp,iYkP,iXJx,gbXr,gcyV,7YvP,c4m9,aIt3,aI+V,5c+N,3QWx,3QLh,7YMH,5dfF,3RxV,3RDx,n2SH,n37F,c3/F,c3KN,n2SN,lHvr,ds9x,dsMV,lI6V,lHvx",
                    "997d": "gbpH,oqX1,gbAX,5ct1,9koV,aI+P,aIt9,eQdH,eQAh,c4D1,5da1,3Rbp,5c+N,hzFb,iXDV,kjwV,kjap,iY3X,orE1,lHB3,lI6V,gbXr,iXP9,iYqx,hAxx,gcyV",
                    "96b3": "oryj,lHGN,hzKV,lI6P,lHMp,iXUH,iYqx,lHXz,iY9F,n3or,n45x,gcnz,gc19,eQuz,eQ89,c4Ob,dsMV,hArV,hzW9,c4m9,9kjh,7Yf1,7Y3N,drOX,c3/F,dr+h,ePTh,hzu1,kjrh,n3dh,n2Yp,aHXp,c4m3,9kWF,7Zix,5dlb,6B8F,6AZj,5da1,7YH3,5cV9,3QWx,6Axb,5cyF",
                    "6de0": "luYt,oqRT,fCU1,iyNh,5jIx,bbN3,3QGP,3QMR,8gfZ,cF0J,cFGP,cEEF,3RqX,cFoN,mYo9,h4pL,k00R,k0N3,h4NJ,mYMj,mY0b,h41H,h4NP",
                    "8fe5": "luYt,oqRT,h3zr,h3Lz,6MA3,3QMR,3RJ9,8gDX,6Nwn,8gQ3,or+3,ordX,6MSb,3QoH,6MA3,cF0D,k0cZ,k0B1,cFoN,cF0J",
                    "5a7a": "oqLH,orhx,kjlF,lH8X,iXsF,ePNF,drP1,hztX,ePwN,iXbH,iXJx,hzKV,orDX,kjNN,lHXz,lIcx,eQjp,eQdN,iY3X,eQFV,eQLx,aHRH,aJ4x,ds9r,9koV,6AO9,3RmF,3Rsh,3QFz,3QLh,5cPx,6ATN,aIK1",
                    "7f12": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,3QQP,6AO9,dsf9,ds3V,lHvr,iXP9,orJz,kjTp,kkdV,gcyV,gccp,kjTj,7YSp,7Zix,c4Zx,c4xp,3RDr,3Rbp,6AO9",
                    6798: "3QFz,or0F,3QWr,iXJx,iYqx,5dwx,3RxV,5dlh,9l5P,dsw1,7YH9,orDX,dsw1,iXbH,iXDV,aHRH,gbB1,ds3P,ePTh",
                    "69df": "3QzX,oqX1,6AO3,3QQV,3RxP,6B8F,9kjb,9lbx,ePNz,dr+h,c3KH,gbvp,iXDP,iXbN,kjCr,lHvx,lIcx,kkjx,iY9z,hzW9,9kA9,eQuz,9kWF,eQ83,eQFV,oryj,n3L1",
                    6634: "lvOH,lv2F,fDm1,e7Gn,8fHT,8g3X,bc35,6MSb,3QAP,3QoN,3ReV,e8qv,e8Oz,8gQ3,6Nwn,8gE1,or1P,orO1,izPx,iz3p,or1V",
                    "80bd": "hzKP,hzop,hAxr,hzW9,orDX,dsw1,3QWx,3QLb,5cJV,n3iV,n2Yp,5cnp,3QoN,c4aP,c3Qp,5d9X,7YSp,3RDr,dsw1",
                    "70b7": "or0z,7YkF,3QoN,5cJP,7Yqh,5dwr,5cPx,5d9X,kjZ1,dsf3,dsMV,kkjr,kjI9,oryj,lHS1,hzzz,kjwV,ePCj,iXhp",
                    "781f": "lHpP,lH3p,drDH,lHeF,orsH,hzQx,kkjr,kjI9,3RgX,kjZ1,9lbr,9kR1,eQoX,eQFV,gbAX,gbRV,7YvV,7Yf1,gbB1",
                    9485: "gbpH,or0F,kjCr,kjg1,gbAX,gbRV,aIhP,aHRN,6ACP,3QFF,gbGF",
                    "952c": "gbpH,or0F,kjwP,kjg1,gbAX,gbRV,c4aP,c3KN,6ACP,3QFF,gbGF,eQ83,iY41,orE1,kjI3,n3zN,lI1b,n3/V,eQLr,iY9F,9kWz,c4TV,3RDr,9kR1,3QWx,dsvX,9kR1,9kA3,aIt9",
                    "9e49": "kjaj,kjlF,hzQr,hziN,lHvr,kjCx,n3db,gbRV,5cPx,6AO9,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,kjYX,iY9F,orJz,lHMp,drUz,dr+h,7Ykz,gbGF,5chH,9kjh,ePCj,6Agp",
                    8872: "lHez,oqX1,kj4H,kjwV,iXDV,c3KN,3QFz,gbGF,3R03,iXP9,iYqx,5dwx,3RxV,3Rsh,5dfF,aI+P,eQp1,aIyN,orDX,eQp1,aInr,ePNF,ePYP,dr+h",
                    5290: "n3Fj,n2SN,orhr,lHvx,lHez,or0F,gbpH,kjg1,9k81,iX+j,iXn1,gbAX,gc6N,dskH,drP1,aI0X,aIEp,9k2j,9kA9,6ACV,3Qup,3QoN,3R5H,3R09,7YkF,kjwP,aIhV,9kWz,kk2F,5dfz,3Rsh,3RxV,5dwx,or+x",
                    9998: "lH8X,n2Yp,n3iP,lHkh,kj4H,kjwV,hzzz,kjlF,drJj,dr+h,9kjb,9k2p,7YSj,6ACV,kkjr,kjI9,n3Wb,lI6V,orDX,aIK1,6B8F,3RxV,5dwx,dsMP,9l5V,5da1,3R5N,3R09,hzFb,5cEh,5cnp,hzop,hzFh,aIyH,aInx,hzQx,hz/N,aIyN",
                    9631: "9k2j,9k81,aI6F,ePNF,hzop,lHkh,n3dh,n2SN,3QoN,3QzX,3QFF,5cJV,7YH9,orn9,3Rsb,orPh,c4aP,c4Zx,kkjr,kjwV",
                    "577c": "7Ykz,or0F,9kur,6AaN,iXbH,iXJx,orUP,n3u9,6AO9,3QQV,hAmb,3Rsh,hzW3,hAxx,9lbr,dsw1",
                    "82e0": "lIcr,lGZN,oryj,iX+p,iXDP,orbV,drOX,dsHh,gcth,gbB1,3QA1,3QFF,6ACV,9l5P,9kdF,c4m3,9kA9,5da1,3Rsh,3RDx,5dwx",
                    "848e": "n45r,n2SN,oryj,lHMp,lHpP,orbV,hzFb,kjap,gbpH,drUF,aIcb,3Qup,3QLb,6AIx,iXJx,kkdV,hArP,gc6N,3R5N,6B31,3RDr,9kWF,gcnF,9kWz,dsSx",
                    "638a": "oqWX,5ct1,3Qup,5chN,ePTb,aHRN,gcEr,gbRV,kkdP,hAgF,hz/H,kjCx,iXbH,iXyh,lIcr,lHpV,orsH,n3Fp,c4gr,c4TV,5dqV,5cPx,c4gx",
                    "54a4": "n3KX,oryp,iYkP,lIcx,lHvx,iXDV,gc13,hAgF,gccj,5d4p,3Rh1,3RDx,6Bpx,c4gr,c4TV,kj4H,kjlF,aI6F,aHRN,kj4N",
                    5671: "kjNH,orsN,n3Wb,n3zN,iYqr,kkjx,kjrh,6Axh,3QA1,dsSr,ds3V,dsqj,aIt9,aInx,c4xj,9kWF,5dfF,3Rh1,3Rbp,5cPr,5cV9,6AZp,9kWF,9kFH,7YH9,7YBx,9l0b,aI+V,5dwr,7Z7h,hAmb,gcth,gc6N,hzW9,iXP9,gbXr,iY41,kj4H,kjg1,aI11,aHRN,kj4N",
                    "5fa8": "or6b,kjap,kj4N,kjwP,hzzF,gbvp,gbpN,3QFz,hzzF,5dwr,5cPx,dsvX,5da1,ds9r,dsSx,9l5P,9kA9,iXP3,iYkV,orJz,lHMp,gcyP,lI6V,lHB9,gc19,gcyV",
                    "5fee": "3QzX,oqX1,3QLb,3QQV,5cV9,c4Oh,eQAh,eQ2x,iXyb,gbRV,drDH,iXbN,kkjr,kjwV,eQjj,oryp,aIt3,5dfF,3RxV,3RDx",
                    "6c90": "kjfX,n2Yp,hziH,ePCp,c3/z,3Qup,5cyz,9kux,gc6N,hAxr,hzFh,gcnz,c4IF,5dwx,oryj,3Rbp",
                    "6eb4": "kjfX,n2Yp,ePCj,hziN,3Quj,c3/F,3QFz,3QLh,5cPx,7YMN,c4rN,aIVb,c4IF,9kdz,9lbx,7YSj,5dfF,3RxV,3RDx,gbRP,gcth,iYfb,iXDV,oryj,lHB9,dsHb,lI1h,lHpV,ds3V,dsHh",
                    "908b": "kjfX,n2Yp,gbpH,gbB1,6Am1,3QoN,6AlX,3QLh,3RDx,6Bpr,5dwx,5dlh,6B8F,c4IF,c4rH,5c+N,5d4p,7YMH,7YSp,aIEj,aIyN,c4aP,5cJV,5cPx,7YvP,7YBx,aInr,aIhV,iY3X,eQ2x,eQuz,iXP9,lI1b,n3QF,orPh,oryj,n3zN,lHMp,lHvr,n3iV,orhx,ds3P,kjwV,kk8h,dsHh,ds3V",
                    "9a7d": "or0z,iXn1,ePYV,eQ2x,ePHX,ePNF,iXJx,lHvx,lGZH,lHB9,n3Fj,n45x,lIcx,eQjp,eQdN,eQLr,eQFV,kjTp,drUz,dsBF,c4IF,ds3P,aIhV,aI+V,6BjV,3RmF,3Rh1,5d4p,6AlX,7Z1F",
                    "73cf": "q1OH,q1ih,q2J7,q1/L,5rY1,q2j7,5sm7,5ryb,bNqv,8CUp,gvF9,gwg9,i5ub,i5Ud,8C4r,6/1x,q1BJ,8BTz",
                    6862: "3QFz,or0F,3QWr,3R09,7YY1,3RxV,7ZcP,hArV,hzW9,7YH9,dsvX,7YY1,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,orDX,hAb1,lIcr,lHS1",
                    "6b84": "lHpP,lH3p,c3KH,lH91,c45b,ePI1,hztX,hzKV,ds3V,6ArF,3Qup,3QWr,3R5N,9l0h,c4Iz,7YMN,7YH9,aIt3,eQp1,gci1,eQ2r,n3L1,orE1,eQLr,n3L1",
                    "8d4d": "gc13,orn9,gc6H,iY41,kjZ1,gctb,iY41,gbXr,iXyh,kjrh,gbAX,iXyh,c3KH,ePCp,eQLx,c4TV,7Z1z,c4IF,c3/F,7YkF,9kA3,7YH9,5cJV,3QFF,3Qup,7YH3,5d4p,3RmF,3Rsh,lH8X,lI1h",
                    8132: "iz9f,iyTn,cEsx,cEKB,3QoH,5jID,oqRT,or7R,5j+B,3QGV,3QSR,5kaD,orjT,or+3,k0N3,k06T,e8kt,e8Cx,8gfZ,5ksF,3Rl5,5kEN,h4BN,bcDb,fE6p,6NIj,bcJn",
                    "623e": "n3zH,orn9,iXsz,iYkV,lI6V,lHeF,9kdF,3QoN,3QLb,3QQV,9kLp,gccp,eQFP,gcth,c45b,c4Zx,9kLj,3RxV,3RDx",
                    7924: "n37z,n2SN,gbpH,n321,orsH,lHGN,lHXz,orJF,n3iP,n45x,gbRP,kjCx,eQ2r,dsf9,eQdH,gc19,aIhP,gccp,iX+p,iXJx,eQAb,gcyV,iYkV,iY9F,gcnF,9lbx,c4rH,c4IF,9l0b,9kA9,5dqP,6Beh,5c+H,3Rbp,5da1,9kR1,3QQP,7YMN,hztX,hzFh,9kjh,9k81,hzu1",
                    "94c4": "gbpH,or0F,gbRP,gbB1,aHRH,aIhV,6ACP,3QFF,gbGF,kjwP,kjg1,orUP,lHB9,eQ89,eQLx,kk2z,5dfF,3Rh1,5d4p,3QWr,9kLp,5dwr,7ZcV",
                    9565: "gbpH,or0F,kjwP,kjg1,oryj,lHB9,n3zH,n3Wh,iY41,dsw1,gc13,gcyV,gbAX,gbRV,c4aP,c3KN,c4Zr,c4gx,6AO3,6BjV,6ACP,3QFF,gbGF,dsMP,iYkV,iXP9,dsf9,dsMV,9l5P,3RxV,3R09,9kA9,9l5V",
                    "75b1": "n3Fj,orsN,lIcr,lHeF,7YkF,3QoN,gbGz,c3KN,kj4H,hzop,kjI3,ePYV,hzQr,hArV,7ZcV,6Beh,7Z1F,aIt3,aIPF,eQuF,eQ89,5cV9,3R5N,3RDx,5dwx",
                    "76b4": "n37z,iXbN,iXDV,kjrh,ePwH,gbvp,eQ2r,gbRV,9jYH,drP1,3QQP,9k81,3QoH,aIhV,c4aV,c3W1,5cPr,6AO9,9kA9,kjI9,kkjx,iYqx,hArV,orJz,eQuF,eQjj,eQFV,c4TV,7Z1F,3R5N,c4xj,aIEp,3RDx",
                    "988d": "oqRj,iXhp,hzu1,hzKV,kjwV,iXhj,n3dh,n45r,n3u9,iX+j,n3Wh,eQoX,7YY1,3R09,3QWx,9kA3,iXP9,iYkV,9l5V,3RDr,6Beh,7YBr,aIch,c4aV,ePNz,5cyF,3QA1,5cnp,7Y3H,c3W1,c3KN",
                    "86b0": "pW9t,5jOz,5jCx,6MS5,5jOz,9ILf,5kaD,cFGP,cF6P,pW/H,5kEN,e7Yf,j/WR,j/yN,e7Ah,e7Yl,k0T3,5kWV,5kmP,k0j3,k0T9",
                    8748: "pW9t,5jOz,5jCx,6ML/,5jOz,5k4B,8fZR,9JBt,9J1t,cFoH,bcJn,e8kt,e8ID,iz/t,izrt,9Jjv,izJB,5kax,5kWV,mYSp,mY67,5kaD,e7Yf,fDa5,j/WR,j/yN,e7Ah,e7Yl",
                    8785: "5csX,oqX1,6Axb,5chN,5cEb,7Yqh,6AIr,3QQV,7YMH,5c+N,3Rbp,3Rsh,5dlh,9l5P,6Bpx,7Z1z,9kR1,gc13,gcyV,iYkP,iXP9,orJz,lHMp,dsMP,lI6V,lHB9,dsf9,dsMV,dr+b,iXyh,iXbN,drDN,dr+h",
                    "7afd": "iXbH,or6h,lHB3,lH91,lIcr,lHS1,iYkP,lHXF,orPb,iXUN,iXDP,lHeF,gc13,5cV9,3QWx,5cJV,c4Zr,c3KN,gbAX,gcyV",
                    "7ba6": "kj4H,or0F,n3or,n321,n45r,n3L1,kkdP,n3QF,orJz,kjNN,kjwP,n37F,eQ83,kjI9,ePwH,eQLx,hArP,hzop,gbAX,gcth,9kA3,7YH9,6AIx,3QA1,3QoN,7Ykz,c3/F,c4IF,7Z1F,7YH3,6ATN,3Rsh,3RxV",
                    "7c26": "kj4H,or0F,n3or,n321,n45r,n3L1,n3Qz,kkdV,kjNH,orJF,n37z,kjwV,iXhj,iXJx,hzQx,drUF,c3Qp,c3KN,ePTb,gbGF,dsvX,ds3V,hArP,eQuF,hAaX,iY9F,iX+j,hA5p,c4TV,c4Zx,5d4j,6B31,6Axb,5cJV,3RDr,3QoN,aIPz,7Z1F,7YkF,aI6F,aIPF",
                    "88df": "n37z,oqX1,kjfX,lH3p,ePCj,iXyh,eQ2r,eQdN,hAmh,iYkV,n3/P,lIcx,gchX,orE1,dsf3,6ArF,5cnp,5chN,c4Zr,c3KN,6B2X,9l0h,aIyH,9kFN,5dfF,3RxV,3RDx,5cV3,3QWx,3QQV,9koV,n3u3,kjCx",
                    "7fe6": "n3iP,orbV,orDX,n3L1,kk8b,dsHh,c4IF,dsw1,kjTj,eQjp,n2SH,n45x,hzQr,hzu1,ePHX,eQ2x,c3VX,kjg1,kjCx,ds9x,c4aV,c45h,aHXj,aInx,5cPx,3QQV,3QLh,5cnj,5ct1,9kux,9k7X,6ArF,aIyH,aI+V,5dqV,3Rsh,3RmF,7Z7b,5c+N,9kLj,6B31",
                    9170: "n3or,n2SN,n3db,c45h,c4aV,7Y9j,7YvV,aHXj,c3W1,n321,n3Fj,hzW9,kkdP,kjNN,eQ83,eQLx,eQjj,dsqp,6AZp,3R09,3QWx,6Bpr,3RDx,3Rsh,6B8F,orJF,iXJr,5cPx,5chN,iXbN,iXJx",
                    "8dc4": "orDX,n3L1,gbXx,gcEr,n3L1,6BjP,3RxV,3Rbp,5c+N,gc6N,gcth,9l0h,7Z1F,9kR1,7YvP,5cnp,5chN,drJj,5cnp,drUz,ds3V,6Arz,hzzF,n2Yj,n3dh,hzFh,hzop,n2Yp",
                    "8e42": "orn3,orUV,kjZ1,lHMj,iY41,eQp1,dsqp,eQdN,hz/H,eQ2x,iXP3,iYqx,hArV,3RgX,c4D1,9kWz,5dwx,aInr,aJ4x,drUz,ds3V,6Agj,drJp,6ACP,6AaN,9kLj,5cPx,hzzz,6ArF,n2Yj,n3iV,hzKV,hzop,n2Yp",
                    "89ef": "iXbH,or0F,lH8X,lHpV,hzzF,3QFF,3QQP,hzKV,hzop,5cnp,3QoN,9koP,9k2p,drJj,ds3V,gcyP,gc19,n3/P,kk2F,kjTj,n3zN,3RgX,iY41,aInr,aJ4x,dsf3,iXP9,iYkV,dsMV,dsf9",
                    "9ca5": "iXbH,oqX1,lH8X,lHpV,hzzF,9kdF,drJj,ds3V,6ACP,5chN,eQjj,eQ89,c4Iz,eQuF,5dfz,3Rsh,5dqV,orUV,iY3X,iYqx,9koP,hzKV,hzop,9k2p,9koV,9kA3,kjI9,kjTp,9kLp,9kA9",
                    "9cce": "kj4H,oqX1,lH3j,lHkh,hzu1,7Yf1,drDH,dr+h,5cEb,5chN,5cV3,3R5N,5d4p,eQjp,eQ2x,c4rH,9kux,6AIr,9kFN,5dlb,3RxV,5dwx,eQLx,eQuF,9kWz,c4TV,9l5P,6B8F,kjNH,kkdV,7Yqb,hzFh,hziN,7Y3N,7Yqh,hArP,n3/V,n3zN,hz/N,hArV",
                    "9ac2": "kjaj,kjlF,gbGF,eQ2r,gbXx,gbpN,ePwN,gbvj,n2Yp,n3iV,gbRV,aHXj,aIhV,7YvP,7Y9p,3QLb,5cJV,ds3V,drJp,3Qup,aIt3,aIyN,c4D1,gcyV,hArV,hAb1,eQdH,iY41,eQoX,aI+V,aJ4x,kkjr,lIcx,lHGN,kjNN,orDX,n3QF,5d4j,9kLp,9l5V,5dqV,5d4p",
                    "9e87": "n3Fj,orsN,n45r,n321,6Am1,3QoN,3QFz,3QLh,5cPx,6AO9,6AZj,5da1,3Rsh,3RxV,7Yqb,7ZcV,aInr,aIK1,3R5H,aIyN,eQLr,dsSx,dsw1,gci1,eQuz,gcth,ePYP,eQdN,gbRP,ds3V,ds9x,hzFb,hArV,kkdV,kjrh,hzQr,lHvx,lHRX,hAb1",
                    "536e": "orJz,lH91,6Am1,3QoN,6Bpr,5dwx,3RxV,3QWx,5cJV,ds3V,dsHh,9l0h,7Z1F,7YY1,9kLp,hztX,hArV",
                    "4fc5": "orbP,iXhp,iXbN,3QFz,kjlF,5cPr,3R09,3R5N,5d4p,oryp,lI1b,n3QF,kjwP,kkjx,eQ2r,gbRV,dskH,7Yqh,eQoX,c4IF,7Zix,eQuz,hArV",
                    "8bd6": "lv2z,oqXP,h3zr,h3RF,5jUF,5j+B,8g9T,5kWP,5kaD,e8wv,5kyR,bcf7,bcPj,h4TP,h47D,pWVL,h4vR,mYc7,mYMj",
                    "911e": "n3Fj,n2SN,orn3,kjI9,kjlF,or0F,c4CX,c3KN,9k2j,9kLp,5chH,5cPx,6B31,3Rmz,n3QF,n45x,hAxx,eQAh,c4Zx,7Zix,6BjV,7Z7h,kjwP,5cJV,hzoj,hA5p,eQjp,ePCp,hzop",
                    "827d": "lIcr,lGZN,iX+j,oryp,orbP,iXDV,hzQr,9kux,5cyF,3Qup,3QoN,6Bpr,3RDx,3RmF,5da1,eQp1,ePI1",
                    "837d": "lIcr,lGZN,oryj,kjTp,kjwP,orbV,hAmb,hzu1,eQoX,gcnF,gc13,eQdN,gbGz,ePTh,ds9r,9koV,5d4p,3RmF,3Rsh,3Quj,3QFF,5cPx,9kR1,c4D1,c3KH,c4Zx",
                    "85ae": "n45r,n2SN,oryj,lHMp,lHpP,orbV,c45b,kjrh,ePYP,c4m9,ePNz,c3Qp,c3KN,gc13,gbpN,kjI3,hzKV,hzzz,kjap,kjYX,eQdN,hA5j,hAxx,eQLx,7Z1F,3R5N,3RDr,dsw1,eQp1,aI6z,7Yf1,3QQV,3QWx,3QoH,3Qup,9kux,9jYH,9kA9",
                    "53fd": "6NIj,3RJ9,3Rr1,5kyR,orI5,orjT,6MY7,3QMR,3QGV,mXxX,mXQ9,cEEF,cEmx,mXy1",
                    "557b": "orpT,pWDJ,oqXJ,orU7,lvkx,mY0b,mYo9,lvwP,bcf7,izrt,e8qp,cFiR,e8Cx,h4BN,h3RF,cEEF,h3zr,j/ET,k0T9,h4NP,9Jvx,5kKT,5jOz,9Izj,9JvD",
                    "5cbd": "iXP3,orn9,lI6P,iYkV,iXhp,lH3p,gbRP,aHXp,aI+V,c4m3,5cV9,3QWx,5cJV,7Yqb,6ArF,5cnp,5chN,7YXX,6Beh,5dwx,ePwH,eQLx",
                    "736f": "n2SH,iXsF,6ArF,3Qup,5chN,ePNz,aHRN,or6b,hziN,orUP,n3ox,kjrb,kkjx,7YSj,n3Fp,7Yqb,7Zix,aI+P,aIhV,gcnz,eQp1,eQ83,gc19,3QLb,5cJV,3R03,5cV9,5d9X,3Rh1,3RDr,5dqV,dsMP,hArV,hzKV,ds3V,dsMV",
                    6126: "3QzX,oqX1,3QQP,3QWx,7YSp,9kLp,3Rsb,7YSp,7Z7b,c4Oh,c4gx,7YBx,eQLr,ePYV,oryj,eQjp,gbMb,iXsF,iXbH,drDN,lI1b,hAmh,hzQx,lHvx,lI1h",
                    "6d6f": "luYt,oqRT,mYSj,mY0b,cEWx,mYof,cFGP,cEEF,cFoH,iz/z,izfr,fCU1,iyNh,3QuN,bbN3,5kax,9IXn,9JvD,5kKT,5kaD",
                    "5b95": "orvZ,pWDJ,k0MZ,mYSp,mXE7,j/yN,h4TP,h3zx,h4dD,8fHT,8fBN,bbY/,5j+B,5kKT,bcJn,bbZ5",
                    "5a32": "oqRj,aHXp,5cJV,3QoH,9kjh,iXyh,iXbN,gchX,c4D1,7YH9,3QWr,eQ2x,eQLx,5dwx,3RxV,5dlh,c4CX,7ZcV,hzW3,hArV,n3/V,n3u9,hzW9",
                    "7ef1": "n37z,hziN,gbpN,gbMh,hzFh,gbMb,aHRN,aIch,5chH,6Axh,3QWr,iXJx,iYqx,5dwx,3RxV,3Rsh,5dfF,orDX,iY41,n3/P,kk2F,kjTj,n3u9,9l0b,eQAh,eQdN,9kFN,9l0h",
                    7490: "or7L,oqLN,h3zr,h3XB,6MnX,6MA3,8fZR,oqXJ,6MA3,6N27,izrt,5j+v,5k4H,8gm3,bcf7,bcrf,5k4B,e82r,e8qp,e8wB,lw4V,mYSp,mYul,k0oV,pW/N,k0AX,izPx,e8UF,mY05,mYij,izxz,izfr,mY0b,5kyL,cFiR,cFAP,5kQP,5kyR",
                    6987: "3QFz,or0F,9kFH,5cJV,5dwr,9l0h,5c+H,3Rbp,5da1,eQp1,c4m3,c4TV,ePTb,ds3V,aHRH,gbB1,iXDP,iXbN,kkdP,kjI9,hAgz,iYfh,iXUH,hA5p,oryj,lHS1,gcEr,gbXx",
                    "750f": "kjlz,or0F,kjaj,kjwV,n3or,n2SN,kjNH,orJF,gc6H,gccp,lI6V,hAxr,dsBF,c4xp,c4rN,c3KH,c4gx,drOX,c3W1,c45b,dr+h,aHRH,aIVh,aI6z,3QFF,3QQV,6AIr,5cV9,7Ykz,7YY1,5da1,3RmF,3RDx,5dwx,ePYP,hzKV,hzop,ePCp,ePYV",
                    "6c2a": "hziH,or0F,hztX,hAmh,6Beh,3RDx,6Bpx,5d9X,3Rh1,3R5N,5cV9,9kA9,9koP,6ACV,5cEh,3QA1,3Qup,eQoX,ePCp,c4gr,gbXx,kk2z,kjrh,n37z,n3/V,9kdz,c3/F,c4xp,9kLp,9kdF",
                    "9f51": "orn3,orhx,n2SH,n45x,lHkb,iXJx,hA5p,gcth,gcEx,3RxP,eQFV,5cyz,5dfF,3QoH,5cnp,ePCp,gbpH,gbB1,hzKV,iXUN,n3QF,5c+H,eQdN,eQ2r,5cPx,ds9r,drUF,dsBz,dskN,aIyH,aIPF,aI6z,aInx,7YBr,7YkF,7Z1z,7YMN",
                    "6cf6": "lHkb,or0F,orn3,lHGN,lHXz,orPh,hArP,iYqx,kkjx,kjap,hziN,drJj,ds3V,c4aV,5chN,5cEb,3QQV,3QWx,5cV9,hzW9,5dwr,dskN,eQuz,c4xp",
                    7572: "j/yH,j/ET,mY0b,pWDJ,mYof,k0N3,k0T9,izPr,iyZj,lvCF,lveH,izrn,e8et,cEWD,e82r,cEmr,cEsD,e7Sp,h41H,cFuN,h4pL,8fNJ,8gK7,5kgD,bcfd,bcJh,5kKT,5jOz,bbN3,bcJn",
                    "950e": "gbpH,or0F,kjwP,kjg1,lHGH,n3u9,lHXz,lIcx,5dwx,3RxV,5dlh,gctb,7Z7h,gccj,gcyV,c4TP,c4rN,6ATH,9kR1,gci1,3R03,iXP9,6ACP,3QFF,gbGF,gbAX,gbRV,c4aP,c3KN",
                    "9e2b": "or0z,ePwN,eQ2x,lGZH,lHvx,hzzz,5cyF,3QA1,5cnp,aHXj,7Y3N,7YBr,aIhV,9l0b,9kA9,5d9X,3RmF,3Rsh,6Bpx,dsSx,dskN,lHGN,lI6V,hArV,gcth,gcnF,kjYX,iY9F,orJz,lHMp"
                }
            }
        },
        d281: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("deviceConfigPageComponent "),
                h = r("bbfb");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        d2da: function(e, t, r) {
            "use strict";
            (function(e) {
                var n = r("47a9");
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var h = n(r("762b")),
                    a = getApp(),
                    i = r("3b77"),
                    c = r("c4ce"),
                    o = (r("e458"), {
                        data: function() {
                            var e = a.globalData.getDeviceFeatures();
                            return {
                                screen_width: a.globalData.screen_width_str,
                                rtl: a.globalData.rtl,
                                showCtr: {
                                    light1: !0,
                                    light2: !0,
                                    light3: !0,
                                    lightExt: !1
                                },
                                deviceInfo: 0,
                                features: e,
                                SetCmdSend: "",
                                longPressed: !1,
                                version: "",
                                machine: "",
                                rdDisabled: !0,
                                updatePos: 0,
                                dmx: 0,
                                pressTimer: null,
                                clickTimer: null,
                                ch: 0,
                                xy: 0,
                                light: 1,
                                cfg: 0,
                                langName: "",
                                lang: 0,
                                valArr: [1, 10, 10, 10, 10],
                                valRange: [
                                    [1, 512],
                                    [10, 100],
                                    [0, 255],
                                    [0, 255],
                                    [0, 255]
                                ]
                            }
                        },
                        computed: {
                            ntitle: {
                                get: function() {
                                    var e = 0 == this.dmx ? "DMX" : this.$t("\u8bbe\u7f6e");
                                    return e
                                }
                            },
                            valArr1: {
                                get: function() {
                                    return this.valArr[1]
                                },
                                set: function(t) {
                                    var r = this.valArr[1],
                                        n = t.replace("%", ""),
                                        h = parseInt(n),
                                        a = isNaN(h) ? r : h;
                                    this.$set(this.valArr, 1, a), e("log", "set", this.valArr[1], " at pages/setting/setting.js:56")
                                }
                            },
                            valArr2: {
                                get: function() {
                                    return 0 != this.cfg ? this.valArr[2] : 255
                                },
                                set: function(e) {
                                    this.checkInputEvent(2, e)
                                }
                            },
                            valArr3: {
                                get: function() {
                                    return 0 != this.cfg ? this.valArr[3] : 255
                                },
                                set: function(e) {
                                    this.checkInputEvent(3, e)
                                }
                            },
                            valArr4: {
                                get: function() {
                                    return 0 != this.cfg ? this.valArr[4] : 255
                                },
                                set: function(e) {
                                    this.checkInputEvent(4, e)
                                }
                            }
                        },
                        components: {
                            uniPopup: h.default
                        },
                        onLoad: function(e) {
                            var t = this;
                            this.version = plus.runtime.version, this.version = this.version.trim();
                            var r = a.globalData.getCmdData("settingData");
                            r.dmx = e.dmx;
                            var n = this;
                            Object.keys(r).forEach((function(e) {
                                n.$set(t, e, r[e])
                            })), this.deviceInfo = a.globalData.getDeviceInfo(), this.machine = ("0" + this.deviceInfo.deviceType).slice(-2) + " - " + ("0" + this.deviceInfo.version).slice(-2), this.initData()
                        },
                        onReady: function() {},
                        onShow: function() {
                            var t = a.globalData.getLang();
                            this.langName = a.globalData.langs[t], this.rtl = a.globalData.rtl, e("log", "this.langName", this.langName, " at pages/setting/setting.js:124")
                        },
                        onHide: function() {},
                        onUnload: function() {
                            var e = {
                                ch: this.ch,
                                dmx: this.dmx,
                                xy: this.xy,
                                light: this.light,
                                cfg: this.cfg,
                                lang: this.lang,
                                valArr: this.valArr
                            };
                            a.globalData.setCmdData("settingData", e)
                        },
                        onPullDownRefresh: function() {},
                        onReachBottom: function() {},
                        onShareAppMessage: function() {},
                        methods: {
                            sendCmd: function() {
                                var e = {
                                    ch: this.ch,
                                    dmx: this.dmx,
                                    xy: this.xy,
                                    light: this.light,
                                    cfg: this.cfg,
                                    lang: this.lang,
                                    valArr: this.valArr
                                };
                                a.globalData.setCmdData("settingData", e);
                                var t = i.getSettingCmd(a.globalData.cmd.settingData);
                                this.SetCmdSend = t, this.doSendCmd()
                            },
                            doSendCmd: function() {
                                if ("" != this.SetCmdSend) {
                                    var e = c.gosend(!1, this.SetCmdSend),
                                        t = this;
                                    e ? this.SetCmdSend = "" : setTimeout((function() {
                                        t.doSendCmd()
                                    }), 100)
                                }
                            },
                            initData: function() {
                                if (1 == this.deviceInfo.deviceType) {
                                    this.valRange = [
                                        [1, 512],
                                        [10, 100],
                                        [0, 100],
                                        [0, 100],
                                        [0, 100]
                                    ];
                                    for (var e = 2; e < 5; e++) this.valArr[e] > this.valRange[e][1] && (this.valArr[e] = this.valRange[e][1])
                                }(1 == this.deviceInfo.deviceType || 0 == this.deviceInfo.deviceType && this.deviceInfo.version >= 1) && (this.showCtr = {
                                    light1: !1,
                                    light2: !1,
                                    light3: !1,
                                    lightExt: !0
                                })
                            },
                            versionUpdate: function(e) {},
                            selectLang: function(e) {
                                uni.navigateTo({
                                    url: "/pages/lang/lang?"
                                })
                            },
                            setLang: function(e) {
                                a.globalData.setLang(e)
                            },
                            radioChange: function(e) {
                                var t = e.detail.value;
                                "ch1" == t && (this.ch = 0), "ch2" == t && this.ch, "xy1" == t && (this.xy = 0), "xy2" == t && (this.xy = 1), "xy3" == t && (this.xy = 2), "xy4" == t && (this.xy = 3), "xy5" == t && (this.xy = 4), "xy6" == t && (this.xy = 5), "xy7" == t && (this.xy = 6), "xy8" == t && (this.xy = 7), "light1" == t && (this.light = 1), "light2" == t && (this.light = 2), "light3" == t && (this.light = 3), "lang1" == t && (this.lang = 0, this.setLang(this.lang)), "lang2" == t && (this.lang = 255, this.setLang(this.lang)), "lang3" == t && (this.lang = 1, this.setLang(this.lang)), "cfg1" == t && (this.cfg = 0), "cfg2" == t && (this.cfg = 255), this.sendCmd()
                            },
                            getValueCheck: function(e, t) {
                                var r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                                t = parseInt("0" + t);
                                var n = this.valRange;
                                return t >= n[e][0] && t <= n[e][1] ? {
                                    result: !0,
                                    newVal: t
                                } : e in [0] && r ? (t < n[e][0] ? t = n[e][1] : t > n[e][1] && (t = n[e][0]), {
                                    result: !1,
                                    newVal: t
                                }) : (t = t < n[e][0] ? n[e][0] : n[e][1], {
                                    result: !1,
                                    newVal: t
                                })
                            },
                            onInputBlur: function(t) {
                                var r = t.currentTarget.dataset.tag,
                                    n = this.valArr,
                                    h = n[r],
                                    a = this.getValueCheck(r, h, !1);
                                e("log", "onInputBlur", a, " at pages/setting/setting.js:288"), this.$set(this.valArr, r, a.newVal), this.sendCmd()
                            },
                            checkInputEvent: function(e, t) {
                                var r = this,
                                    n = this.valArr[e];
                                this.$set(this.valArr, e, t);
                                var h = this.valArr,
                                    a = h[e],
                                    i = this.getValueCheck(e, a);
                                setTimeout((function() {
                                    i.result ? (r.$set(r.valArr, e, i.newVal), r.sendCmd()) : r.$set(r.valArr, e, n)
                                }), 5)
                            },
                            inputEvent: function(e) {},
                            subNumByTag: function(e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                                    r = (this.valArr, this.valArr[e]),
                                    n = parseInt(r) - t,
                                    h = this.getValueCheck(e, n);
                                h.result, this.$set(this.valArr, e, h.newVal)
                            },
                            subNumPress: function(t) {
                                var r = this,
                                    n = t.currentTarget.dataset.tag;
                                this.pressTimer = setInterval((function() {
                                    r.longPressed = !0, e("log", "subNumPress", " at pages/setting/setting.js:332"), r.subNumByTag(n, 2)
                                }), 200)
                            },
                            subNumPressEnd: function(e) {
                                null != this.pressTimer && (clearInterval(this.pressTimer), this.pressTimer = null, this.longPressed && (this.longPressed = !1, this.sendCmd()))
                            },
                            addNumPress: function(e) {
                                var t = this,
                                    r = e.currentTarget.dataset.tag;
                                this.pressTimer = setInterval((function() {
                                    t.longPressed = !0, t.addNumByTag(r, 2)
                                }), 200)
                            },
                            addNumPressEnd: function(e) {
                                null != this.pressTimer && (clearInterval(this.pressTimer), this.pressTimer = null, this.longPressed && (this.longPressed = !1, this.sendCmd()))
                            },
                            addNumByTag: function(e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                                    r = (this.valArr, this.valArr[e]),
                                    n = parseInt(r) + t,
                                    h = this.getValueCheck(e, n);
                                h.result, this.$set(this.valArr, e, h.newVal)
                            },
                            subNum: function(e) {
                                var t = e.currentTarget.dataset.tag;
                                this.subNumByTag(t), null != this.clickTimer && clearTimeout(this.clickTimer);
                                var r = this;
                                this.clickTimer = setTimeout((function() {
                                    r.clickTimer = null, r.sendCmd()
                                }), 1e3)
                            },
                            addNum: function(e) {
                                var t = e.currentTarget.dataset.tag;
                                this.addNumByTag(t), null != this.clickTimer && clearTimeout(this.clickTimer);
                                var r = this;
                                this.clickTimer = setTimeout((function() {
                                    r.clickTimer = null, r.sendCmd()
                                }), 1e3)
                            }
                        }
                    });
                t.default = o
            }).call(this, r("f3b9")["default"])
        },
        d3b8: function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default,
                    uniPopup: r("762b").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [r("navigation-bar", {
                        attrs: {
                            title: e.ntitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), r("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [r("view", [r("view", [r("view", {
                        staticClass: e._$s(6, "sc", "border-gradient-view"),
                        attrs: {
                            _i: 6
                        }
                    }, [r("view", [r("view", {
                        staticClass: e._$s(8, "sc", "display-btn-group"),
                        attrs: {
                            _i: 8
                        }
                    }, [r("label", {
                        staticClass: e._$s(9, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 9
                        }
                    }, [e._v(e._$s(9, "t0-0", e._s(e.$t("\u573a\u666f"))) + e._$s(9, "t0-1", e._s(e.pisIdx)))]), r("view", [r("label", {
                        staticClass: e._$s(11, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 11
                        }
                    }, [e._v(e._$s(11, "t0-0", e._s(e.$t("\u64ad\u653e\u65f6\u957f"))))]), r("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.playTime,
                            expression: "playTime"
                        }],
                        staticClass: e._$s(12, "sc", "time-input"),
                        attrs: {
                            _i: 12
                        },
                        domProps: {
                            value: e._$s(12, "v-model", e.playTime)
                        },
                        on: {
                            input: function(t) {
                                t.target.composing || (e.playTime = t.target.value)
                            }
                        }
                    }), r("label", {
                        staticClass: e._$s(13, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 13
                        }
                    }, [e._v(e._$s(13, "t0-0", e._s(e.$t("\u79d2"))))])]), r("uni-popup", {
                        ref: "popup",
                        attrs: {
                            "mask-click": !1,
                            animation: !1,
                            _i: 14
                        }
                    }, [r("view", [r("view", [r("view", e._l(e._$s(18, "f", {
                        forItems: e.pisObjArray.length
                    }), (function(t, n, h, a) {
                        return e._$s("18-" + a, "i", e.pisObjArray[n].count > 0) ? r("view", {
                            key: e._$s(18, "f", {
                                forIndex: h,
                                key: n
                            }),
                            staticClass: e._$s("18-" + a, "sc", "btn-view-style2"),
                            attrs: {
                                _i: "18-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.groupBtnClick(n)
                                }
                            }
                        }, [r("view", {
                            staticClass: e._$s("19-" + a, "sc", "opr-btn"),
                            attrs: {
                                _i: "19-" + a
                            }
                        }, [e._v(e._$s("19-" + a, "t0-0", e._s(e.$t(e.pisObjArray[n].label))))])]) : e._e()
                    })), 0)]), r("view", {
                        attrs: {
                            id: "imageListView",
                            _i: 20
                        }
                    }, [e._$s(21, "i", e.showPisCanvas) ? r("view", {
                        attrs: {
                            _i: 21
                        }
                    }, [r("view", [r("canvas", {
                        style: e._$s(23, "s", "margin-left: 2%; width: " + e.fontWidth + "px; height: " + e.fontWidth + "px; background-color: #1F2B38; border-radius: 4rem;"),
                        attrs: {
                            id: "pisCanvas",
                            _i: 23
                        }
                    })]), r("label", [e._v(e._$s(24, "t0-0", e._s(e.$t("\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62..."))) + e._$s(24, "t0-1", e._s(e.loading + 1)) + e._$s(24, "t0-2", e._s(e.pisObjArray[e.pisSelectedGroup].count)))])]) : e._e(), r("view", {
                        style: e._$s(25, "s", "display: flex; flex-wrap: wrap; width: 90%; height: " + e.imageListViewHeight + "px; overflow-y: auto; justify-content: flex-start;"),
                        attrs: {
                            _i: 25
                        }
                    }, [e._$s(26, "i", e.pisSelectedGroup < 4) ? [e._l(e._$s(27, "f", {
                        forItems: e.imgArrays[e.pisSelectedGroup]
                    }), (function(t, n, h, a) {
                        return [r("view", {
                            key: e._$s(27, "f", {
                                forIndex: h,
                                keyIndex: 0,
                                key: n + "_0"
                            }),
                            staticClass: e._$s("28-" + a, "sc", "view-obj-class"),
                            style: e._$s("28-" + a, "s", "background-color: " + (n == e.pisSelectedIdx ? "#76CEE7" : "#1F2B38") + ";"),
                            attrs: {
                                _i: "28-" + a
                            }
                        }, [e._$s("29-" + a, "i", "" != t) ? r("image", {
                            staticClass: e._$s("29-" + a, "sc", "img-obj-class"),
                            attrs: {
                                src: e._$s("29-" + a, "a-src", t),
                                _i: "29-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.imgClick(n)
                                }
                            }
                        }) : e._e(), e._$s("30-" + a, "i", "" == t) ? r("view", {
                            staticClass: e._$s("30-" + a, "sc", "img-obj-class"),
                            attrs: {
                                _i: "30-" + a
                            }
                        }, [e._v(e._$s("30-" + a, "t0-0", e._s(e.loadObjTitel)))]) : e._e()])]
                    }))] : e._e(), e._$s(31, "i", e.pisObjArray.length > 0 && "\u5723\u8bde" == e.pisObjArray[e.pisSelectedGroup].label) ? [e._l(e._$s(32, "f", {
                        forItems: e.imgArrays[e.pisSelectedGroup],
                        fill: !0
                    }), (function(t, n, h, a) {
                        return [e._$s("33-" + a, "i", 20 == n) ? [r("view", {
                            key: e._$s("34-" + a, "a-key", n + "_0_0"),
                            staticClass: e._$s("34-" + a, "sc", "view-obj-class"),
                            style: e._$s("34-" + a, "s", "background-color: " + (n == e.pisSelectedIdx ? "#76CEE7" : "#1F2B38") + ";"),
                            attrs: {
                                _i: "34-" + a
                            }
                        }, [e._l(2, (function(h, i, c, o) {
                            return e._$s("35-" + a + "-" + o, "i", "" != t) ? [r("image", {
                                directives: [{
                                    name: "show",
                                    rawName: "v-show",
                                    value: e._$s("36-" + a + "-" + o, "v-show", e.imageShowCount % 2 == i),
                                    expression: "_$s((\"36-\"+$32+'-'+$33),'v-show',imageShowCount % 2 == i)"
                                }],
                                key: i + "_0",
                                staticClass: e._$s("36-" + a + "-" + o, "sc", "img-obj-class"),
                                attrs: {
                                    src: e._$s("36-" + a + "-" + o, "a-src", e.imgArrays[e.pisSelectedGroup][n + i]),
                                    _i: "36-" + a + "-" + o
                                },
                                on: {
                                    click: function(t) {
                                        return e.imgClick(n)
                                    }
                                }
                            })] : e._e()
                        })), e._$s("37-" + a, "i", "" == t) ? r("view", {
                            staticClass: e._$s("37-" + a, "sc", "img-obj-class"),
                            attrs: {
                                _i: "37-" + a
                            }
                        }, [e._v(e._$s("37-" + a, "t0-0", e._s(e.loadObjTitel)))]) : e._e()], 2)] : e._e(), e._$s("38-" + a, "i", 22 == n) ? [r("view", {
                            key: e._$s("39-" + a, "a-key", n + "_1_0"),
                            staticClass: e._$s("39-" + a, "sc", "view-obj-class"),
                            style: e._$s("39-" + a, "s", "background-color: " + (n == e.pisSelectedIdx ? "#76CEE7" : "#1F2B38") + ";"),
                            attrs: {
                                _i: "39-" + a
                            }
                        }, [e._l(2, (function(h, i, c, o) {
                            return e._$s("40-" + a + "-" + o, "i", "" != t) ? [r("image", {
                                directives: [{
                                    name: "show",
                                    rawName: "v-show",
                                    value: e._$s("41-" + a + "-" + o, "v-show", e.imageShowCount % 2 == i),
                                    expression: "_$s((\"41-\"+$32+'-'+$34),'v-show',imageShowCount % 2 == i)"
                                }],
                                key: i + "_0",
                                staticClass: e._$s("41-" + a + "-" + o, "sc", "img-obj-class"),
                                attrs: {
                                    src: e._$s("41-" + a + "-" + o, "a-src", e.imgArrays[e.pisSelectedGroup][n + i]),
                                    _i: "41-" + a + "-" + o
                                },
                                on: {
                                    click: function(t) {
                                        return e.imgClick(n)
                                    }
                                }
                            })] : e._e()
                        })), e._$s("42-" + a, "i", "" == t) ? r("view", {
                            staticClass: e._$s("42-" + a, "sc", "img-obj-class"),
                            attrs: {
                                _i: "42-" + a
                            }
                        }, [e._v(e._$s("42-" + a, "t0-0", e._s(e.loadObjTitel)))]) : e._e()], 2)] : e._e(), e._$s("43-" + a, "i", 24 == n) ? [r("view", {
                            key: e._$s("44-" + a, "a-key", n + "_2_0"),
                            staticClass: e._$s("44-" + a, "sc", "view-obj-class"),
                            style: e._$s("44-" + a, "s", "background-color: " + (n == e.pisSelectedIdx ? "#76CEE7" : "#1F2B38") + ";"),
                            attrs: {
                                _i: "44-" + a
                            }
                        }, [e._l(6, (function(t, h, i, c) {
                            return e._$s("45-" + a + "-" + c, "i", "" != e.imgArrays[e.pisSelectedGroup][n + 5]) ? [r("image", {
                                directives: [{
                                    name: "show",
                                    rawName: "v-show",
                                    value: e._$s("46-" + a + "-" + c, "v-show", e.imageShowCount % 6 == h),
                                    expression: "_$s((\"46-\"+$32+'-'+$35),'v-show',imageShowCount % 6 == i)"
                                }],
                                key: h + "_0",
                                staticClass: e._$s("46-" + a + "-" + c, "sc", "img-obj-class"),
                                attrs: {
                                    src: e._$s("46-" + a + "-" + c, "a-src", e.imgArrays[e.pisSelectedGroup][n + h]),
                                    _i: "46-" + a + "-" + c
                                },
                                on: {
                                    click: function(t) {
                                        return e.imgClick(n)
                                    }
                                }
                            })] : e._e()
                        })), e._$s("47-" + a, "i", "" == e.imgArrays[e.pisSelectedGroup][n + 5]) ? r("view", {
                            staticClass: e._$s("47-" + a, "sc", "img-obj-class"),
                            attrs: {
                                _i: "47-" + a
                            }
                        }, [e._v(e._$s("47-" + a, "t0-0", e._s(e.loadObjTitel)))]) : e._e()], 2)] : e._e(), e._$s("48-" + a, "i", 30 == n) ? [r("view", {
                            key: e._$s("49-" + a, "a-key", n + "_3_0"),
                            staticClass: e._$s("49-" + a, "sc", "view-obj-class"),
                            style: e._$s("49-" + a, "s", "background-color: " + (n == e.pisSelectedIdx ? "#76CEE7" : "#1F2B38") + ";"),
                            attrs: {
                                _i: "49-" + a
                            }
                        }, [e._l(40, (function(t, h, i, c) {
                            return e._$s("50-" + a + "-" + c, "i", "" != e.imgArrays[e.pisSelectedGroup][n + 39]) ? [r("image", {
                                directives: [{
                                    name: "show",
                                    rawName: "v-show",
                                    value: e._$s("51-" + a + "-" + c, "v-show", e.imageShowCount % 40 == h),
                                    expression: "_$s((\"51-\"+$32+'-'+$36),'v-show',imageShowCount % 40 == i)"
                                }],
                                key: h + "_0",
                                staticClass: e._$s("51-" + a + "-" + c, "sc", "img-obj-class"),
                                attrs: {
                                    src: e._$s("51-" + a + "-" + c, "a-src", e.imgArrays[e.pisSelectedGroup][n + h]),
                                    _i: "51-" + a + "-" + c
                                },
                                on: {
                                    click: function(t) {
                                        return e.imgClick(n)
                                    }
                                }
                            })] : e._e()
                        })), e._$s("52-" + a, "i", "" == e.imgArrays[e.pisSelectedGroup][n + 39]) ? r("view", {
                            staticClass: e._$s("52-" + a, "sc", "img-obj-class"),
                            attrs: {
                                _i: "52-" + a
                            }
                        }, [e._v(e._$s("52-" + a, "t0-0", e._s(e.loadObjTitel)))]) : e._e()], 2)] : e._e(), e._$s("53-" + a, "i", n <= 19 || n >= 70) ? [r("view", {
                            key: e._$s("54-" + a, "a-key", n + "_4_0"),
                            staticClass: e._$s("54-" + a, "sc", "view-obj-class"),
                            style: e._$s("54-" + a, "s", "background-color: " + (n == e.pisSelectedIdx ? "#76CEE7" : "#1F2B38") + ";"),
                            attrs: {
                                _i: "54-" + a
                            }
                        }, [e._$s("55-" + a, "i", "" != t) ? r("image", {
                            staticClass: e._$s("55-" + a, "sc", "img-obj-class"),
                            attrs: {
                                src: e._$s("55-" + a, "a-src", t),
                                _i: "55-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.imgClick(n)
                                }
                            }
                        }) : e._e(), e._$s("56-" + a, "i", "" == t) ? r("view", {
                            staticClass: e._$s("56-" + a, "sc", "img-obj-class"),
                            attrs: {
                                _i: "56-" + a
                            }
                        }, [e._v(e._$s("56-" + a, "t0-0", e._s(e.loadObjTitel)))]) : e._e()])] : e._e()]
                    }))] : e._e(), e._$s(57, "i", e.pisObjArray.length > 0 && ("\u52a8\u753bA" == e.pisObjArray[e.pisSelectedGroup].label || "\u52a8\u753bB" == e.pisObjArray[e.pisSelectedGroup].label)) ? [e._l(e._$s(58, "f", {
                        forItems: e.pisObjArray[e.pisSelectedGroup].arr[1] - e.pisObjArray[e.pisSelectedGroup].arr[0]
                    }), (function(t, n, h, a) {
                        return [r("view", {
                            key: e._$s(58, "f", {
                                forIndex: h,
                                keyIndex: 0,
                                key: n + "_0"
                            }),
                            staticClass: e._$s("59-" + a, "sc", "view-obj-class"),
                            style: e._$s("59-" + a, "s", "background-color: " + (n == e.pisSelectedIdx ? "#76CEE7" : "#1F2B38") + ";"),
                            attrs: {
                                _i: "59-" + a
                            }
                        }, [r("view", {
                            staticClass: e._$s("60-" + a, "sc", "img-obj-class"),
                            attrs: {
                                _i: "60-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.imgClick(n)
                                }
                            }
                        }, [r("text", [e._v(e._$s("61-" + a, "t0-0", e._s(e.$t(e.pisObjArray[e.pisSelectedGroup].label))) + e._$s("61-" + a, "t0-1", e._s(n)))])])])]
                    }))] : e._e()], 2)]), r("view", [r("view", {
                        staticClass: e._$s(63, "sc", "ok-btn"),
                        attrs: {
                            _i: 63
                        },
                        on: {
                            click: e.cancelBtnClick
                        }
                    }, [e._v(e._$s(63, "t0-0", e._s(e.$t("\u53d6\u6d88"))))]), r("view", {
                        staticClass: e._$s(64, "sc", "ok-btn"),
                        attrs: {
                            _i: 64
                        },
                        on: {
                            click: e.okBtnClick
                        }
                    }, [e._v(e._$s(64, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])])])], 1), r("view", [r("canvas", {
                        attrs: {
                            id: "myCanvas",
                            _i: 66
                        },
                        on: {
                            click: e.myCanvasClick
                        }
                    })]), r("view", [r("view", {
                        staticClass: e._$s(68, "sc", "btn-view-style"),
                        attrs: {
                            _i: 68
                        },
                        on: {
                            click: e.myCanvasClick
                        }
                    }, [r("view", {
                        staticClass: e._$s(69, "sc", "opr-btn"),
                        attrs: {
                            _i: 69
                        }
                    }, [e._v(e._$s(69, "t0-0", e._s(e.$t("\u9009\u62e9\u56fe\u5f62"))))])]), r("view", {
                        staticClass: e._$s(70, "sc", "btn-view-style"),
                        attrs: {
                            _i: 70
                        },
                        on: {
                            click: e.chResetClick
                        }
                    }, [r("view", {
                        staticClass: e._$s(71, "sc", "opr-btn"),
                        attrs: {
                            _i: 71
                        }
                    }, [e._v(e._$s(71, "t0-0", e._s(e.$t("\u901a\u9053\u590d\u4f4d"))))])])])])]), r("view", {
                        attrs: {
                            id: "parent-component",
                            _i: 72
                        }
                    }, [r("view", [r("view", [e._l(e._$s(75, "f", {
                        forItems: e.cnfList
                    }), (function(t, n, h, a) {
                        return [e._$s("76-" + a, "i", t.idx <= e.showCnfEndIdx && 13 != t.idx) ? r("view", {
                            key: e._$s(75, "f", {
                                forIndex: h,
                                keyIndex: 0,
                                key: n + "_0"
                            }),
                            staticClass: e._$s("76-" + a, "sc", "display-ch-lable"),
                            style: e._$s("76-" + a, "s", (e.cnfIdx == t.idx ? "background-color: #25333D;" : "background-color: #1C2B39;") + "; " + (1 == t.idx ? "height: 60rem; border-top-left-radius: 40rem; border-top-right-radius: 40rem;" : "flex: 1;") + (t.idx == e.showCnfEndIdx ? "height: 60rem; border-bottom-left-radius: 40rem; border-bottom-right-radius: 40rem;" : "flex: 1;")),
                            attrs: {
                                _i: "76-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.chClick(t.idx)
                                }
                            }
                        }, [r("label", {
                            style: e._$s("77-" + a, "s", (e.cnfIdx == t.idx ? "color: #59E2FF;" : "color: #687C8E;") + (e.rtl ? "text-align: right;" : "text-align: left;") + " flex: 1; font-size: 28rem;"),
                            attrs: {
                                _i: "77-" + a
                            }
                        }, [e._v(e._$s("77-" + a, "t0-0", e._s(t.name)))]), r("text", {
                            style: e._$s("78-" + a, "s", (e.cnfIdx == t.idx ? "color: #59E2FF;" : "color: #687C8E;") + (e.rtl ? "text-align: left;" : "text-align: right;") + " text-align: right; width: 50rem; font-size: 22rem; padding-left: 10rem;"),
                            attrs: {
                                _i: "78-" + a
                            }
                        }, [e._v(e._$s("78-" + a, "t0-0", e._s(e.pisObj.cnfValus[t.idx])))])]) : e._e()]
                    }))], 2), r("view", {
                        style: e._$s(79, "s", (e.rtl ? "margin-right: 20rem;" : "margin-left: 20rem;") + "direction: ltr; flex: 1; background-color: #1C2B39; border-radius: 40rem;"),
                        attrs: {
                            _i: 79
                        }
                    }, [r("canvas", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e._$s(80, "v-show", !e.popupShow),
                            expression: "_$s(80,'v-show',!popupShow)"
                        }],
                        attrs: {
                            id: "chCanvas",
                            _i: 80
                        },
                        on: {
                            touchstart: e.chTouchstart,
                            touchmove: e.chTouchmove,
                            touchend: e.chTouchend,
                            touchcancel: e.chTouchend
                        }
                    })])])])])])])], 1)
                },
                a = []
        },
        d439: function(e, t, r) {
            "use strict";
            (function(e) {
                var n = r("47a9");
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var h = n(r("762b"));

                function a(e, t) {
                    var r = "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (!r) {
                        if (Array.isArray(e) || (r = function(e, t) {
                                if (!e) return;
                                if ("string" === typeof e) return i(e, t);
                                var r = Object.prototype.toString.call(e).slice(8, -1);
                                "Object" === r && e.constructor && (r = e.constructor.name);
                                if ("Map" === r || "Set" === r) return Array.from(e);
                                if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(e, t)
                            }(e)) || t && e && "number" === typeof e.length) {
                            r && (e = r);
                            var n = 0,
                                h = function() {};
                            return {
                                s: h,
                                n: function() {
                                    return n >= e.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: e[n++]
                                    }
                                },
                                e: function(e) {
                                    throw e
                                },
                                f: h
                            }
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }
                    var a, c = !0,
                        o = !1;
                    return {
                        s: function() {
                            r = r.call(e)
                        },
                        n: function() {
                            var e = r.next();
                            return c = e.done, e
                        },
                        e: function(e) {
                            o = !0, a = e
                        },
                        f: function() {
                            try {
                                c || null == r.return || r.return()
                            } finally {
                                if (o) throw a
                            }
                        }
                    }
                }

                function i(e, t) {
                    (null == t || t > e.length) && (t = e.length);
                    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
                    return n
                }
                var c = getApp(),
                    o = r("720d"),
                    s = r("3b77"),
                    l = r("c4ce"),
                    p = r("bbc7"),
                    d = c.globalData.MaxSaveFileCount,
                    b = c.globalData.MaxListCount,
                    g = {
                        data: function() {
                            var e = !1 | c.globalData.readData("sortFileDown"),
                                t = c.globalData.getDeviceFeatures(),
                                r = o.fileClassSplitTag,
                                n = o.handDrawClassFix,
                                h = c.globalData.blu_data_send_interval,
                                a = p.colorSeg;
                            return {
                                screen_width: c.globalData.screen_width_str,
                                scUnit: c.globalData.screen_width_float,
                                rtl: c.globalData.rtl,
                                ntitle: this.$t("\u9009\u62e9\u6587\u4ef6"),
                                searchTip: this.$t("\u6587\u4ef6\u540d"),
                                features: t,
                                handDrawFile: !1,
                                filterName: "",
                                fileNames: [],
                                curFileNames: [],
                                showFileCnt: 0,
                                sortFileDown: e,
                                selectMode: !1,
                                selectFiles: [],
                                showSending: !1,
                                sendInterval: h,
                                modeAdd: !1,
                                listCountFromPlayList: 0,
                                playListSelectShow: !0,
                                fileClassSplitTag: r,
                                handDrawClassIdx: 0,
                                handDrawClass: n,
                                handDrawClassName: ["\u5168\u90e8", "\u5206\u7ec41", "\u5206\u7ec42", "\u5206\u7ec43", "\u5206\u7ec44", "\u5206\u7ec45", "\u5206\u7ec46", "\u5206\u7ec47", "\u5206\u7ec48", "\u5206\u7ec49", "\u5206\u7ec410"],
                                reClassNameInfo: {
                                    newClassName: "",
                                    orgClassName: "",
                                    classNameIdx: 0
                                },
                                playListName: "",
                                playListNamesAll: [],
                                drawCanvas: {
                                    w: p.defaultWith,
                                    h: p.defaultHeight
                                },
                                drawCanvasShow: !1,
                                fileName: "",
                                playTime: 0,
                                reNameInfo: {
                                    newFileName: "",
                                    orgFileName: "",
                                    newFileClass: "",
                                    orgFileClass: ""
                                },
                                fileList: [],
                                loadData: !1,
                                colorSeg: a
                            }
                        },
                        computed: {
                            selection: {
                                get: function() {
                                    if (0 == this.handDrawClassIdx) return this.selectFiles.length + "/" + this.curFileNames.length;
                                    var e, t = this.fileClassSplitTag + this.handDrawClass[this.handDrawClassIdx],
                                        r = 0,
                                        n = a(this.selectFiles);
                                    try {
                                        for (n.s(); !(e = n.n()).done;) {
                                            var h = e.value;
                                            h.fileName.includes(t) && r++
                                        }
                                    } catch (i) {
                                        n.e(i)
                                    } finally {
                                        n.f()
                                    }
                                    return r + "/" + this.curFileNames.length
                                }
                            },
                            currClassName: {
                                get: function() {
                                    if (this.reNameInfo && this.reNameInfo.newFileClass) {
                                        var e = this.handDrawClass.indexOf(this.reNameInfo.newFileClass);
                                        if (-1 != e) return this.handDrawClassName[e]
                                    }
                                    return "Unknown"
                                }
                            }
                        },
                        onLoad: function(e) {
                            var t = this,
                                r = this.getOpenerEventChannel();
                            r.on("acceptDataFromOpenerPage", (function(e) {
                                t.handDrawFile = "draw" == e.callFrom, e.hasOwnProperty("mode") && (t.modeAdd = "add" == e.mode, t.selectMode = t.modeAdd), e.hasOwnProperty("listCount") && (t.listCountFromPlayList = e.listCount);
                                var r = null;
                                if (t.handDrawFile) {
                                    r = o.getHandDrawNames(), t.handDrawClassName = o.getHandDrawClassName();
                                    var n = o.getPlayListFileNames();
                                    t.playListNamesAll = n.fileNames
                                } else r = o.getTextFileNames();
                                t.fileNames = r.fileNames, t.getHandDrawClass(t.fileNames), setTimeout((function() {
                                    t.loadData = !0, t.refreshClick()
                                }), 10)
                            }))
                        },
                        onShow: function() {
                            if (this.loadData && this.handDrawFile) {
                                var e = o.getPlayListFileNames();
                                this.playListNamesAll = e.fileNames
                            }
                        },
                        onReady: function() {},
                        onUnload: function() {
                            c.globalData.saveData("sortFileDown", this.sortFileDown)
                        },
                        components: {
                            uniPopup: h.default
                        },
                        methods: {
                            scrollToLower: function(e) {
                                this.loadFiles(this.curFileNames)
                            },
                            searchInput: function(e) {
                                this.filterName = e.detail.value
                            },
                            sortFileClick: function(e) {
                                this.sortFileDown = !this.sortFileDown, this.searchFile()
                            },
                            refreshClick: function(e) {
                                this.filterName = "", this.selectFiles = [], this.searchFile()
                            },
                            isValid: function(e) {
                                if (this.handDrawFile) return !0;
                                var t = this.fileList[e].data.features,
                                    r = this.features;
                                return t.textDecimalTime == r.textDecimalTime && t.textModeFix01 == r.textModeFix01 && (r.textUpDown && t.hasOwnProperty("textUpDown") && t.textUpDown || !r.textUpDown)
                            },
                            searchClick: function(e) {
                                this.searchFile()
                            },
                            searchFile: function() {
                                if (this.showFileCnt = 0, this.fileList = [], this.fileName = "", this.fileNames) {
                                    this.sortFileDown ? this.fileNames.sort() : this.fileNames.sort((function(e, t) {
                                        return t.localeCompare(e)
                                    }));
                                    var e = this.fileClassSplitTag + this.handDrawClass[this.handDrawClassIdx];
                                    this.curFileNames = [];
                                    var t, r = a(this.fileNames);
                                    try {
                                        for (r.s(); !(t = r.n()).done;) {
                                            var n = t.value;
                                            (0 == this.handDrawClassIdx || n.includes(e)) && ("" == this.filterName || n.includes(this.filterName)) && this.curFileNames.push(n)
                                        }
                                    } catch (h) {
                                        r.e(h)
                                    } finally {
                                        r.f()
                                    }
                                    this.loadFiles(this.curFileNames)
                                }
                            },
                            loadFiles: function(e) {
                                var t = this,
                                    r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 16;
                                this.drawCanvasShow || this.showFileCnt >= e.length || (this.drawCanvasShow = !0, uni.showLoading({
                                    mask: !0
                                }), setTimeout((function() {
                                    t.loadSingleFile(0, e, r)
                                }), 100))
                            },
                            loadSingleFile: function(t, r, n) {
                                if (t >= n) return this.drawCanvasShow = !1, this.showFileCnt = this.showFileCnt + t, void uni.hideLoading();
                                if (t + this.showFileCnt > r.length - 1) return this.drawCanvasShow = !1, this.showFileCnt = r.length, void uni.hideLoading();
                                var h = this,
                                    a = r[t + this.showFileCnt];
                                if (h.handDrawFile) {
                                    var i = o.getHandDrawImg(a);
                                    if (e("log", "hd", a, JSON.stringify(i.pisObj), " at sub/pages/files/files.js:231"), 0 === Object.keys(i).length || !i.hasOwnProperty("drawPoints")) return o.deleteHandDrawImg(a), void h.loadSingleFile(++t, r, n);
                                    o.isImgFileExist(i.picPath, (function(e) {
                                        e ? (h.fileList.push({
                                            picPath: i.picPath,
                                            fileName: a,
                                            pointCnt: i.pointCnt,
                                            data: {
                                                pisObj: i.pisObj,
                                                features: i.features
                                            }
                                        }), h.loadSingleFile(++t, r, n)) : h.createImg(a, i, (function(e, c) {
                                            e && h.fileList.push({
                                                picPath: c,
                                                fileName: a,
                                                pointCnt: i.pointCnt,
                                                data: {
                                                    pisObj: i.pisObj,
                                                    features: i.features
                                                }
                                            }), h.loadSingleFile(++t, r, n)
                                        }))
                                    }))
                                } else {
                                    var c = o.getTextFileData(a);
                                    0 !== Object.keys(c).length && h.fileList.push({
                                        fileName: a,
                                        data: c.data,
                                        dataSize: c.dataSize
                                    }), h.loadSingleFile(++t, r, n)
                                }
                            },
                            createImg: function(t, r, n) {
                                e("log", "this.drawCanvas.w, this.drawCanvas.h", this.drawCanvas.w, this.drawCanvas.h, " at sub/pages/files/files.js:262");
                                var h = uni.createCanvasContext("drawCanvas", this);
                                h.setLineWidth(4);
                                var a = {
                                    ctx: h,
                                    w: this.drawCanvas.w,
                                    h: this.drawCanvas.h,
                                    draw_line_type: [],
                                    colorSeg: this.colorSeg
                                };
                                p.drawPs(r.drawPoints, a, null);
                                h.draw(!1, (function(e) {
                                    uni.canvasToTempFilePath({
                                        canvasId: "drawCanvas",
                                        destWidth: 100,
                                        destHeight: 100,
                                        success: function(e) {
                                            o.saveHandDrawImg(t, e.tempFilePath, r.drawPoints, r.pointCnt, r.pisObj, r.features), n(!0, e.tempFilePath)
                                        },
                                        fail: function(e) {
                                            n(!1, "")
                                        }
                                    })
                                }))
                            },
                            getIdxInList: function(e) {
                                for (var t = -1, r = 0; r < this.selectFiles.length; r++)
                                    if (this.selectFiles[r].fileName == e) {
                                        t = r;
                                        break
                                    } return t
                            },
                            selectFile: function(e, t, r) {
                                if (this.selectMode) {
                                    var n = this.getIdxInList(t); - 1 == n ? this.selectFiles.push({
                                        fileName: t,
                                        playTime: r
                                    }) : this.selectFiles.splice(n, 1)
                                } else {
                                    if (!this.isValid(e)) return void c.globalData.showModalTips(this.$t("\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301"));
                                    this.fileName = t
                                }
                            },
                            changeTimeClick: function(e, t) {
                                var r = 0;
                                r = parseFloat(this.playTime), r += e, r < .1 && (r = .1), r > 25.5 && (r = 25.5), this.playTime = Math.round(10 * r) / 10, this.savePlayTimeToFile(t, this.playTime)
                            },
                            setPlayTime: function(e, t) {
                                if (this.handDrawFile) {
                                    for (var r = -1, n = 0; n < this.fileList.length; n++)
                                        if (this.fileList[n].fileName == t) {
                                            r = n;
                                            break
                                        } if (-1 != r) {
                                        this.fileName = t;
                                        var h = this.fileList[r];
                                        this.playTime = h.data.pisObj.cnfValus[12] <= 0 ? 3 : h.data.pisObj.cnfValus[12], this.$refs.popupTime.open("bottom")
                                    }
                                }
                            },
                            savePlayTimeToFile: function(e, t) {
                                for (var r = -1, n = 0; n < this.fileList.length; n++)
                                    if (this.fileList[n].fileName == e) {
                                        r = n;
                                        break
                                    } - 1 != r && (this.$set(this.fileList[r].data.pisObj.cnfValus, 12, t), o.updateHandDrawImgPlayTime(e, t), r = this.getIdxInList(e), -1 != r && (this.selectFiles[r].playTime = t))
                            },
                            onTimeBlur: function(t) {
                                var r = this.playTime;
                                e("log", "time", r, " at sub/pages/files/files.js:354"), r < .1 || r > 25.5 ? (c.globalData.showModalTips(this.$t("\u8bf7\u8f93\u51650.1-25.5\u8303\u56f4\u7684\u6570\u503c"), !0), this.playTime = 3) : this.playTime = r, this.playTime = Math.round(10 * this.playTime) / 10, this.savePlayTimeToFile(t, this.playTime)
                            },
                            renameClick: function(e) {
                                if (!this.selectMode) {
                                    var t = o.splitFileClass(e),
                                        r = "" == t.class ? this.handDrawClass[0] : t.class,
                                        n = this.handDrawClass.indexOf(r); - 1 == n && (this.handDrawClassIdx = 5), this.reNameInfo = {
                                        newFileName: t.name,
                                        orgFileName: t.name,
                                        newFileClass: r,
                                        orgFileClass: r
                                    }, this.$refs.picNameInput.open("center")
                                }
                            },
                            editFileName: function(e, t) {
                                this.fileName = "";
                                for (var r = 0; r < this.fileList.length; r++)
                                    if (this.fileList[r].fileName == e) {
                                        t ? this.fileList[r].fileName = t : this.fileList.splice(r, 1);
                                        break
                                    } for (var n = 0; n < this.fileNames.length; n++)
                                    if (this.fileNames[n] == e) {
                                        t ? this.fileNames[n] = t : this.fileNames.splice(n, 1);
                                        break
                                    } for (var h = 0; h < this.curFileNames.length; h++)
                                    if (this.curFileNames[h] == e) {
                                        t ? this.curFileNames[h] = t : this.curFileNames.splice(h, 1);
                                        break
                                    }
                            },
                            deleteHandDrawFiles: function(t) {
                                e("log", "file", t, " at sub/pages/files/files.js:408");
                                var r, n = [],
                                    h = a(t);
                                try {
                                    for (h.s(); !(r = h.n()).done;) {
                                        var i = r.value;
                                        n.push(i.fileName)
                                    }
                                } catch (l) {
                                    h.e(l)
                                } finally {
                                    h.f()
                                }
                                var s = this;
                                this.checkAndDeletePlayList(n, (function(e) {
                                    if (e) {
                                        uni.showLoading({
                                            mask: !0,
                                            title: s.$t("\u6b63\u5728\u5220\u9664")
                                        });
                                        var r, n = a(t);
                                        try {
                                            for (n.s(); !(r = n.n()).done;) {
                                                var h = r.value,
                                                    i = o.deleteHandDrawImg(h.fileName);
                                                if (!i) return uni.hideLoading(), c.globalData.showModalTips(s.$t("\u5220\u9664\u5931\u8d25")), !1;
                                                s.editFileName(h.fileName, null)
                                            }
                                        } catch (l) {
                                            n.e(l)
                                        } finally {
                                            n.f()
                                        }
                                        c.globalData.showModalTips(s.$t("\u5220\u9664\u6210\u529f")), s.loadFiles(s.curFileNames, 1), s.selectFiles = []
                                    }
                                }))
                            },
                            doDeletePlayList: function(e) {
                                uni.showLoading({
                                    mask: !0,
                                    title: this.$t("\u6b63\u5728\u5220\u9664")
                                });
                                var t, r = a(e);
                                try {
                                    for (r.s(); !(t = r.n()).done;) {
                                        var n = t.value;
                                        o.deletePlayList(n)
                                    }
                                } catch (i) {
                                    r.e(i)
                                } finally {
                                    r.f()
                                }
                                if (e.length > 0) {
                                    var h = o.getPlayListFileNames();
                                    this.playListNamesAll = h.fileNames
                                }
                                return uni.hideLoading(), !0
                            },
                            checkAndDeletePlayList: function(e, t) {
                                var r, n = [],
                                    h = a(e);
                                try {
                                    for (h.s(); !(r = h.n()).done;) {
                                        var i, c = r.value,
                                            s = o.getIncludePlayList(c),
                                            l = a(s);
                                        try {
                                            for (l.s(); !(i = l.n()).done;) {
                                                var p = i.value; - 1 == n.indexOf(p) && n.push(p)
                                            }
                                        } catch (b) {
                                            l.e(b)
                                        } finally {
                                            l.f()
                                        }
                                    }
                                } catch (b) {
                                    h.e(b)
                                } finally {
                                    h.f()
                                }
                                var d = this;
                                n.length > 0 ? uni.showModal({
                                    content: this.$t("\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed") + "?",
                                    success: function(e) {
                                        e.confirm ? (d.doDeletePlayList(n), t(!0)) : t(!1)
                                    }
                                }) : t(!0)
                            },
                            deleteClick: function(t) {
                                var r = this;
                                uni.showModal({
                                    content: this.$t("\u5220\u9664") + " " + t.split(this.fileClassSplitTag)[0] + "?",
                                    success: function(n) {
                                        if (n.confirm) {
                                            var h = !1;
                                            if (r.handDrawFile) return void r.deleteHandDrawFiles([{
                                                fileName: t
                                            }]);
                                            h = o.deleteTextFileData(t), h ? (r.editFileName(t, null), c.globalData.showModalTips(r.$t("\u5220\u9664\u6210\u529f")), r.loadFiles(r.curFileNames, 1)) : c.globalData.showModalTips(r.$t("\u5220\u9664\u5931\u8d25"))
                                        } else n.cancel && e("log", "\u7528\u6237\u70b9\u51fb\u53d6\u6d88", " at sub/pages/files/files.js:503")
                                    }
                                })
                            },
                            picNameInputCancelClick: function(e) {
                                this.$refs.picNameInput.close()
                            },
                            picNameNewInput: function(e) {
                                this.reNameInfo.newFileName = e.detail.value
                            },
                            picNameInputOkClick: function(e) {
                                this.$refs.picNameInput.close();
                                var t = o.combiFileName(this.reNameInfo.newFileClass, this.reNameInfo.newFileName),
                                    r = o.combiFileName(this.reNameInfo.orgFileClass, this.reNameInfo.orgFileName),
                                    n = this;
                                if ("" == this.reNameInfo.newFileName) uni.showModal({
                                    content: n.$t("\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a"),
                                    showCancel: !1,
                                    success: function(e) {},
                                    fail: function(e) {},
                                    complete: function() {
                                        n.$refs.picNameInput.open("center")
                                    }
                                });
                                else {
                                    if (t == r) return;
                                    var h = null;
                                    if (h = n.handDrawFile ? o.getHandDrawImg(t) : o.getTextFileData(t), h) uni.showModal({
                                        content: n.$t("\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165"),
                                        showCancel: !1,
                                        success: function(e) {
                                            n.$refs.picNameInput.open("center")
                                        },
                                        fail: function(e) {}
                                    });
                                    else {
                                        var a = !1;
                                        n.handDrawFile ? n.checkAndDeletePlayList([r], (function(e) {
                                            if (e) {
                                                var h = o.reNameHandDrawImg(r, t);
                                                h ? (n.editFileName(r, t), c.globalData.showModalTips(n.$t("\u4fee\u6539\u6210\u529f")), n.refreshClick()) : c.globalData.showModalTips(n.$t("\u4fee\u6539\u5931\u8d25"))
                                            }
                                        })) : (a = o.reNameTextFile(r, t), a ? (n.editFileName(r, t), c.globalData.showModalTips(n.$t("\u4fee\u6539\u6210\u529f"))) : c.globalData.showModalTips(n.$t("\u4fee\u6539\u5931\u8d25")))
                                    }
                                }
                            },
                            selectModeClick: function(e) {
                                this.selectMode = 1 == e, this.selectFiles = []
                            },
                            selectCheckboxChange: function(e) {},
                            selectAutoBtnClick: function(e) {
                                var t = [];
                                if (1 == e) {
                                    var r, n = a(this.curFileNames);
                                    try {
                                        for (n.s(); !(r = n.n()).done;) {
                                            var h = r.value;
                                            t.push(h)
                                        }
                                    } catch (x) {
                                        n.e(x)
                                    } finally {
                                        n.f()
                                    }
                                }
                                if (2 == e) {
                                    var i, c = a(this.curFileNames);
                                    try {
                                        for (c.s(); !(i = c.n()).done;) {
                                            var s = i.value; - 1 == this.getIdxInList(s) && t.push(s)
                                        }
                                    } catch (x) {
                                        c.e(x)
                                    } finally {
                                        c.f()
                                    }
                                }
                                for (var l = [], p = 0, d = t; p < d.length; p++) {
                                    var b = d[p],
                                        g = o.getHandDrawImg(b),
                                        j = g.pisObj.cnfValus[12] <= 0 ? 3 : g.pisObj.cnfValus[12];
                                    l.push({
                                        fileName: b,
                                        playTime: j
                                    })
                                }
                                this.$set(this, "selectFiles", l)
                            },
                            playDrawFile: function(e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1,
                                    r = "",
                                    n = o.getHandDrawImg(e);
                                if (n) {
                                    var h = uni.createCanvasContext("drawCanvas", this);
                                    h.setLineWidth(4);
                                    var a = {
                                            ctx: h,
                                            w: this.drawCanvas.w,
                                            h: this.drawCanvas.h,
                                            draw_line_type: [],
                                            colorSeg: this.colorSeg
                                        },
                                        i = p.drawPs(n.drawPoints, a, null);
                                    r = s.getDrawPointStr(i, n.pisObj, this.features, t)
                                }
                                return r
                            },
                            sendComplete: function(e, t) {
                                if (0 == e) {
                                    this.showSending = !0;
                                    var r = uni.createCanvasContext("progressCanvas", this);
                                    l.drawProgress(r, 300 * this.scUnit, t)
                                } else this.showSending = !1
                            },
                            playTextFile: function(t) {
                                var r = o.getTextFileData(t);
                                if (r) {
                                    var n = c.globalData.cmd;
                                    e("log", "fd.data.textData", r.data.textData, " at sub/pages/files/files.js:635");
                                    var h = {
                                            curMode: n.curMode,
                                            prjData: n.prjData,
                                            textData: r.data.textData
                                        },
                                        a = !1;
                                    h.textData.hasOwnProperty("runDir") && (a = h.textData.runDir);
                                    var i = r.data.features,
                                        l = s.getCmdStr(h, {
                                            features: i,
                                            groupList: r.data.textData.groupList
                                        }),
                                        p = s.getXysCmdArr(r.data.textData.groupList, i, a, r.data.textData.verTag);
                                    return {
                                        cmdParm: l,
                                        cmdText: p
                                    }
                                }
                                return null
                            },
                            playClick: function(e) {
                                var t = this;
                                if (this.handDrawFile) this.drawCanvasShow = !0, uni.showLoading({
                                    mask: !0
                                }), setTimeout((function() {
                                    var r = t.playDrawFile(e);
                                    t.drawCanvasShow = !1, uni.hideLoading(), r && (r = s.drawPointStrToCmd(r, t.features), l.gosend(!0, r, t.sendComplete))
                                }), 100);
                                else {
                                    var r = this,
                                        n = this.playTextFile(e);
                                    if (null == n) return void uni.hideLoading();
                                    l.gosend(!0, n.cmdParm, (function(e, h) {
                                        uni.hideLoading(), 0 != e && (t.showSending = !0, setTimeout((function() {
                                            l.gosend(!0, n.cmdText, r.sendComplete)
                                        }), 100))
                                    }))
                                }
                            },
                            playListClick: function(e) {
                                var t = this;
                                0 != this.selectFiles.length && (uni.showLoading({
                                    mask: !0
                                }), setTimeout((function() {
                                    for (var e = "", r = 0; r < t.selectFiles.length; r++) {
                                        "" != e && (e += "zz");
                                        var n = t.playDrawFile(t.selectFiles[r].fileName, t.selectFiles[r].playTime);
                                        e += s.drawPointStrToCmd(n, t.features, r)
                                    }
                                    t.drawCanvasShow = !1, uni.hideLoading(), e && l.gosend(!0, e, t.sendComplete)
                                }), 100))
                            },
                            deleteSelectClick: function(t) {
                                if (0 != this.selectFiles.length) {
                                    var r = this;
                                    uni.showModal({
                                        content: this.$t("\u5220\u9664\u6240\u9009\u6587\u4ef6") + "?",
                                        success: function(t) {
                                            if (t.confirm) {
                                                if (r.handDrawFile) return void r.deleteHandDrawFiles(r.selectFiles);
                                                try {
                                                    uni.showLoading({
                                                        mask: !0,
                                                        title: r.$t("\u6b63\u5728\u5220\u9664")
                                                    });
                                                    var n, h = a(r.selectFiles);
                                                    try {
                                                        for (h.s(); !(n = h.n()).done;) {
                                                            var i, c = n.value;
                                                            i = o.deleteTextFileData(c), e("log", "filename", c, i, " at sub/pages/files/files.js:726"), i && r.editFileName(c, null)
                                                        }
                                                    } catch (s) {
                                                        h.e(s)
                                                    } finally {
                                                        h.f()
                                                    }
                                                } finally {
                                                    uni.hideLoading(), r.selectFiles = []
                                                }
                                            } else t.cancel && e("log", "\u7528\u6237\u70b9\u51fb\u53d6\u6d88", " at sub/pages/files/files.js:735")
                                        }
                                    })
                                }
                            },
                            handDrawClassClick: function(e) {
                                this.handDrawClassIdx != e && (this.handDrawClassIdx = e, this.searchFile())
                            },
                            getHandDrawClass: function(e) {},
                            handDrawClassPickerChange: function(e) {
                                var t = parseInt(e.detail.value);
                                this.reNameInfo.newFileClass = this.handDrawClass[t]
                            },
                            oprClassNameEdit: function(e) {
                                this.reClassNameInfo = {
                                    newClassName: this.handDrawClassName[e],
                                    orgClassName: this.handDrawClassName[e],
                                    classNameIdx: e
                                }, this.$refs.classNameInput.open("center")
                            },
                            classNameNewInput: function(e) {
                                this.reClassNameInfo.newClassName = e.detail.value
                            },
                            classNameInputCancelClick: function(e) {
                                this.$refs.classNameInput.close()
                            },
                            classNameInputOkClick: function(e) {
                                this.$refs.classNameInput.close();
                                var t = this.reClassNameInfo.newClassName,
                                    r = this.reClassNameInfo.orgClassName,
                                    n = this;
                                if ("" == t) uni.showModal({
                                    content: n.$t("\u5206\u7ec4\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a"),
                                    showCancel: !1,
                                    success: function(e) {},
                                    fail: function(e) {},
                                    complete: function() {
                                        n.$refs.classNameInput.open("center")
                                    }
                                });
                                else {
                                    if (t == r) return;
                                    var h = n.handDrawClassName.indexOf(t);
                                    if (-1 != h || "all" == t.toLowerCase()) uni.showModal({
                                        content: n.$t("\u5206\u7ec4\u540d\u79f0\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165"),
                                        showCancel: !1,
                                        success: function(e) {
                                            n.$refs.classNameInput.open("center")
                                        },
                                        fail: function(e) {}
                                    });
                                    else {
                                        n.handDrawClassName[this.reClassNameInfo.classNameIdx] = t;
                                        var a = o.saveHandDrawClassName(n.handDrawClassName);
                                        a ? (c.globalData.showModalTips(n.$t("\u4fee\u6539\u6210\u529f")), n.$set(n.handDrawClassName, this.reClassNameInfo.classNameIdx, t)) : c.globalData.showModalTips(n.$t("\u4fee\u6539\u5931\u8d25"))
                                    }
                                }
                            },
                            playListClose: function(e) {
                                this.playListSelectShow = !1, this.$refs.playListSelect.close()
                            },
                            playListEdit: function(e) {
                                "" != this.playListName && uni.navigateTo({
                                    url: "/sub/pages/playList/playList?playListName=" + this.playListName
                                })
                            },
                            playListSelectClick: function(e) {
                                this.playListSelectShow = !0, this.$refs.playListSelect.open("bottom")
                            },
                            playListAddClick: function(e) {
                                if (!(this.selectFiles.length <= 0))
                                    if (this.selectFiles.length > b) c.globalData.showModalTips(this.$t("\u5df2\u8d85\u8fc7\u6700\u5927\u6587\u4ef6\u6570\u91cf ") + b, !0);
                                    else {
                                        var t = o.getNewPlayListName();
                                        t.count >= d ? c.globalData.showModalTips(this.$t("\u5df2\u8d85\u8fc7\u6700\u5927\u6587\u4ef6\u6570\u91cf ") + d, !0) : t.noSpace ? c.globalData.showModalTips(this.$t("\u5b58\u50a8\u7a7a\u95f4\u4e0d\u8db3"), !0) : (this.playListName = o.getNewPlayListName(), this.$refs.listNameInput.open("center"))
                                    }
                            },
                            listNameNewInput: function(e) {
                                this.playListName = e.detail.value
                            },
                            listNameInputCancelClick: function(e) {
                                this.$refs.listNameInput.close()
                            },
                            listNameInputOkClick: function(e) {
                                this.$refs.listNameInput.close();
                                var t = this.playListName,
                                    r = this;
                                if ("" == t) uni.showModal({
                                    content: r.$t("\u5217\u8868\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a"),
                                    showCancel: !1,
                                    success: function(e) {},
                                    fail: function(e) {},
                                    complete: function() {
                                        r.$refs.listNameInput.open("center")
                                    }
                                });
                                else {
                                    var n = r.playListNamesAll.indexOf(t);
                                    if (-1 != n) uni.showModal({
                                        content: r.$t("\u5217\u8868\u540d\u79f0\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165"),
                                        showCancel: !1,
                                        success: function(e) {
                                            r.$refs.listNameInput.open("center")
                                        },
                                        fail: function(e) {}
                                    });
                                    else {
                                        var h = o.savePlayListFileData(t, r.selectFiles);
                                        h ? (c.globalData.showModalTips(r.$t("\u6dfb\u52a0\u6210\u529f")), r.playListNamesAll.unshift(t), r.selectModeClick(0)) : c.globalData.showModalTips(r.$t("\u6dfb\u52a0\u5931\u8d25"))
                                    }
                                }
                            },
                            playListFileClick: function(e) {
                                var t = this,
                                    r = o.getPlayListFileData(e);
                                if (r) {
                                    var n = r.data;
                                    if (0 == n.length) return;
                                    uni.showLoading({
                                        mask: !0
                                    }), setTimeout((function() {
                                        for (var e = "", r = 0; r < n.length; r++) {
                                            "" != e && (e += "zz");
                                            var h = t.playDrawFile(n[r].fileName, n[r].playTime);
                                            e += s.drawPointStrToCmd(h, t.features, r)
                                        }
                                        t.drawCanvasShow = !1, uni.hideLoading(), e && l.gosend(!0, e, t.sendComplete)
                                    }), 100)
                                }
                            },
                            deleteListFileClick: function(t) {
                                var r = this;
                                uni.showModal({
                                    content: this.$t("\u5220\u9664") + " " + t + "?",
                                    success: function(n) {
                                        if (n.confirm) {
                                            var h = o.deletePlayList(t);
                                            if (h) {
                                                var a = r.playListNamesAll.indexOf(t); - 1 !== a && r.playListNamesAll.splice(a, 1), c.globalData.showModalTips(r.$t("\u5220\u9664\u6210\u529f"))
                                            } else c.globalData.showModalTips(r.$t("\u5220\u9664\u5931\u8d25"))
                                        } else n.cancel && e("log", "\u7528\u6237\u70b9\u51fb\u53d6\u6d88", " at sub/pages/files/files.js:938")
                                    }
                                })
                            },
                            playListFileSelectClick: function(e) {
                                this.playListName = e
                            },
                            sendIntervalInput: function(e) {
                                this.sendInterval = parseInt(e.detail.value), c.globalData.setbluDataSendInterval(this.sendInterval)
                            },
                            addClick: function(e) {
                                if (0 != this.selectFiles.length)
                                    if (this.listCount + this.selectFiles.length > b) c.globalData.showModalTips(this.$t("\u5df2\u8d85\u8fc7\u6700\u5927\u6587\u4ef6\u6570\u91cf ") + b, !0);
                                    else {
                                        var t = this.getOpenerEventChannel();
                                        t.emit("acceptDataFromOpenedPage", {
                                            selectFiles: this.selectFiles
                                        }), uni.navigateBack()
                                    }
                                else c.globalData.showModalTips(this.$t("\u8bf7\u9009\u62e9\u6587\u4ef6"))
                            },
                            okClick: function(e) {
                                if ("" != this.fileName) {
                                    var t = this.getOpenerEventChannel();
                                    t.emit("acceptDataFromOpenedPage", {
                                        fileName: this.fileName
                                    }), uni.navigateBack()
                                } else c.globalData.showModalTips(this.$t("\u8bf7\u9009\u62e9\u6587\u4ef6"))
                            }
                        }
                    };
                t.default = g
            }).call(this, r("f3b9")["default"])
        },
        d551: function(e, t, r) {
            var n = r("3b2d")["default"],
                h = r("e6db");
            e.exports = function(e) {
                var t = h(e, "string");
                return "symbol" == n(t) ? t : t + ""
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        d6f4: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.default = void 0;
            var n = ["titleIcon", "titleIconRadius", "subtitleText", "subtitleSize", "subtitleColor", "subtitleOverflow", "titleAlign", "backgroundImage", "backgroundRepeat", "blurEffect"],
                h = {
                    props: {
                        title: {
                            type: String,
                            default: ""
                        },
                        titleIcon: {
                            type: String,
                            default: ""
                        },
                        titleIconRadius: {
                            type: String,
                            default: ""
                        },
                        subtitleText: {
                            type: String,
                            default: ""
                        },
                        subtitleSize: {
                            type: String,
                            default: ""
                        },
                        subtitleColor: {
                            type: String,
                            default: ""
                        },
                        subtitleOverflow: {
                            type: String,
                            default: ""
                        },
                        titleAlign: {
                            type: String,
                            default: ""
                        },
                        backgroundImage: {
                            type: String,
                            default: ""
                        },
                        backgroundRepeat: {
                            type: String,
                            default: ""
                        },
                        blurEffect: {
                            type: String,
                            default: ""
                        },
                        loading: {
                            type: Boolean,
                            default: !1
                        },
                        frontColor: {
                            type: String,
                            default: "#ffffff"
                        },
                        backgroundColor: {
                            type: String,
                            default: "#000000"
                        },
                        colorAnimationDuration: {
                            type: Number,
                            default: 0
                        },
                        colorAnimationTimingFunc: {
                            type: String,
                            default: "linear"
                        }
                    },
                    created: function() {
                        var e = this,
                            t = getCurrentPages(),
                            r = t[t.length - 1];
                        this.__$page = r, this.$watch("title", (function() {
                            e.setNavigationBarTitle()
                        })), this.$watch("loading", (function() {
                            e.setNavigationBarLoading()
                        })), this.$watch((function() {
                            return [e.frontColor, e.backgroundColor, e.colorAnimationDuration, e.colorAnimationTimingFunc]
                        }), (function() {
                            e.setNavigationBarColor()
                        })), this.__$webview = r.$getAppWebview(), n.forEach((function(t) {
                            var r = {};
                            (e[t] || e[t].length > 0) && (r[t] = e[t]), e.setTitleNView(r), e.$watch(t, (function(r) {
                                var n = {};
                                n[t] = r, e.setTitleNView(n)
                            }))
                        }))
                    },
                    beforeMount: function() {
                        this.title && this.setNavigationBarTitle(), this.setNavigationBarLoading(), this.setNavigationBarColor()
                    },
                    methods: {
                        setNavigationBarTitle: function() {
                            uni.setNavigationBarTitle({
                                __page__: this.__$page,
                                title: this.title
                            })
                        },
                        setNavigationBarLoading: function() {
                            uni[(this.loading ? "show" : "hide") + "NavigationBarLoading"]({
                                __page__: this.__$page
                            })
                        },
                        setNavigationBarColor: function() {
                            uni.setNavigationBarColor({
                                __page__: this.__$page,
                                frontColor: this.frontColor,
                                backgroundColor: this.backgroundColor,
                                animation: {
                                    duration: this.colorAnimationDuration,
                                    timingFunc: this.colorAnimationTimingFunc
                                }
                            })
                        },
                        setTitleNView: function(e) {
                            var t = this.__$webview,
                                r = t.getStyle();
                            r && r.titleNView && t.setStyle({
                                titleNView: e
                            })
                        }
                    }
                };
            t.default = h
        },
        d8a6: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("d6f4"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        d902: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("48ab"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        daf1: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("97f5"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        db01: function(e) {
            e.exports = JSON.parse('{"\u8fde\u63a5\u84dd\u7259":"Connect Bluetooth","\u968f\u673a\u64ad\u653e":"Random","\u5df2\u8fde\u63a5":"Connected","\u672a\u8fde\u63a5":"Not Connected","\u6237\u5916\u64ad\u653e":"Outdoor","\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570...":"Reading Device Parameters","\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25":"Failed To Read Device Parameters","\u91cd\u65b0\u5237\u65b0\u5217\u8868":"Refresh List Again","\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62":"Search / Stop","\u641c\u7d22\u84dd\u7259\u8bbe\u5907":"Search","\u5df2\u53d1\u73b0":"Discovered","\u7ea2":"Red","\u7eff":"Green","\u84dd":"Blue","\u9ec4":"Yellow","\u9752":"Cyan","\u7d2b":"Purple","\u767d":"White","\u8df3\u53d8":"Jump","\u5168\u5f69":"RGB","\u64ad\u653e\u6a21\u5f0f":"Play Mode","\u81ea\u8d70":"Auto","\u58f0\u63a7":"Music","\u81ea\u8d70\u901f\u5ea6":"Speed","\u58f0\u63a7\u7075\u654f\u5ea6":"Sensitivity","\u56fe\u6848\u989c\u8272":"Pattern","\u5f53\u524d\u989c\u8272":"Current","\u5faa\u73af\u64ad\u653e":"Loop Play","\u52fe\u9009\u64ad\u653e":"Tick Play","\u5730\u5740\u7801":"Address","\u663e\u793a\u8303\u56f4":"View Size","\u56fe\u6848\u76f8\u4f4d":"Phase","\u6b63\u5e38\u663e\u793a":"Normal","XY\u4e92\u6362":"Interchange","\u8c03\u5149\u8bbe\u7f6e":"Dimming settings","\u7ea2\u5149\u8c03\u5149":"Red","\u7eff\u5149\u8c03\u5149":"Green","\u84dd\u5149\u8c03\u5149":"Blue","\u6fc0\u5149\u5149\u6e90":"Laser","\u5355\u8272":"Single","\u53cc\u8272":"Two","\u8c03\u5236\u6a21\u5f0f":"Modulation","\u7cfb\u7edf\u8bed\u8a00":"Language","\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...":"Reading Fonts","\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9...":"Generating...","\u6587\u672c\u989c\u8272":"Text Color","\u6587\u5b57\u5927\u5c0f":"Text Size","\u663e\u793a\u89c6\u8ddd":"Distance","\u6d41\u6c34\u901f\u5ea6":"Flow Speed","\u6295\u5c04\u65b9\u5411":"Direction","\u6c34\u5e73\u6295\u5c04":"Horizontal","\u5782\u76f4\u6295\u5c04":"Vertical","\u8d85\u51fa\u6700\u5927\u70b9\u6570":"Max Points ","\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931":"Exceeding Parts Will Be Lost","\u7ebf\u6761\u989c\u8272":"Line Color","\u6e05\u7a7a":"Clear","\u56de\u9000":"Back","\u53d1\u9001":"Send","\u6700\u591a20\u4e2a\u573a\u666f":"Up To 20 Scenarios","\u63d0\u793a":"Prompt","\u662f\u5426\u5220\u9664\u573a\u666f":"Do You Want To Delete The Scene ","\u7528\u6237\u70b9\u51fb\u53d6\u6d88":"User Clicks To Cancel","-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"--The Scene List Is Empty--","\u573a\u666f":"Scene ","\u79d2":"Sec","\u5220\u9664":"Delete","\u7f16\u8f91":"Edit","\u65b0\u589e\u573a\u666f":"Create A New Scene","\u56fe\u6848\u9009\u62e9":"Pattern","\u76f4\u7ebf\u7c7b\u56fe\u6848":"Linear","\u5706\u5f27\u7c7b\u56fe\u6848":"Circular Arc","\u4eae\u70b9\u56fe\u6848":"Highlight","\u6253\u70b9\u56fe\u6848":"Dot","\u5723\u8bde\u56fe\u6848":"Christmas","\u52a8\u753b\u7ec4\u522b1":"Animation 1","\u52a8\u753b\u7ec4\u522b2":"Animation 2","\u52a8\u753b\u7ec4\u522b3":"Animation 3","\u52a8\u753b\u7ec4\u522b4":"Animation 4","\u52a8\u753b\u7ec4\u522b5":"Animation 5","\u767d\u8272":"White","\u7ea2\u8272":"Red","\u84dd\u8272":"Blue","\u7c89\u8272":"Pink","\u9752\u8272":"Cyan","\u9ec4\u8272":"Yellow","\u7eff\u8272":"Green","\u6574\u4f53\u989c\u8272\u6362\u8272":"Overall","\u4e03\u5f69\u8679\u989c\u8272":"Rainbow Colors","2\u5206\u6bb5\u989c\u8272":"2 Segmented","3\u5206\u6bb5\u989c\u8272":"3 Segmented","4\u5206\u6bb5\u989c\u8272":"4 Segmented","8\u5206\u6bb5\u989c\u8272":"8 Segmented","16\u5206\u6bb5\u989c\u8272":"16 Segmented","32\u5206\u6bb5\u989c\u8272":"32 Segmented","\u989c\u8272\u6e10\u7ed8":"Color Gradient","\u4e0d\u6d41\u6c34":"No Flowing","\u6b63\u5411\u6d41\u6c34":"Forward Flow","\u53cd\u5411\u6d41\u6c34":"Reverse Flow","\u56fe\u6848\u5927\u5c0f":"Pattern Size","\u7f29\u653e\u624b\u52a8\u9009\u62e9":"Zoom Manual","\u7531\u5c0f\u5230\u5927\u7f29\u653e":"Small To Large","\u7531\u5927\u5230\u5c0f\u7f29\u653e":"Large To Small","\u5927\u5c0f\u5faa\u73af\u7f29\u653e":"Size Scaling","\u4e0d\u89c4\u5219\u7f29\u653e\u4e00":"Zoom Rule 1","\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c":"Zoom Rule 2","\u4e0d\u89c4\u5219\u7f29\u653e\u4e09":"Zoom Rule 3","\u65cb\u8f6c\u89d2\u5ea6":"Angle","\u6b63\u65cb\u8f6c\u901f\u5ea6":"Positive","\u53cd\u65cb\u8f6c\u901f\u5ea6":"Reverse","\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e":"H Position","\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6":"H Speed","\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e":"V Position","\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6":"V Speed","\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c":"H Rotation","\u6c34\u5e73\u79fb\u52a8":"H Move","\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c":"V Rotation","\u5782\u76f4\u79fb\u52a8":"V Move","\u65e0\u6ce2\u6d6a":"No waves","\u6ce2\u6d6a\u5e45\u5ea61":"Wave 1","\u6ce2\u6d6a\u5e45\u5ea62":"Wave 2","\u6ce2\u6d6a\u5e45\u5ea63":"Wave 3","\u6ce2\u6d6a\u5e45\u5ea64":"Wave 4","\u6ce2\u6d6a\u5e45\u5ea65":"Wave 5","\u6ce2\u6d6a\u5e45\u5ea66":"Wave 6","\u6ce2\u6d6a\u5e45\u5ea67":"Wave 7","\u6ce2\u6d6a\u5e45\u5ea68":"Wave 8","\u65e0\u6e10\u7ed8":"No Gradient","\u624b\u52a8\u6e10\u7ed81":"Manual 1","\u624b\u52a8\u6e10\u7ed82":"Manual 2","\u81ea\u52a8\u6e10\u7ed81":"Auto 1","\u81ea\u52a8\u6e10\u7ed82":"Auto 2","\u81ea\u52a8\u6e10\u7ed83":"Auto 3","\u81ea\u52a8\u6e10\u7ed84":"Auto 4","\u56fe\u5f62\u5206\u7ec4":"Group","\u56fe\u5f62":"Graph","\u989c\u8272":"Colour","\u989c\u8272\u6d41\u6c34":"Flow","\u56fe\u5f62\u5927\u5c0f":"Size","\u56fe\u5f62\u7f29\u653e":"Zoom","\u56fe\u5f62\u65cb\u8f6c":"Rotation","\u6c34\u5e73\u7ffb\u8f6c":"H Flip","\u5782\u76f4\u7ffb\u8f6c":"V Flip","\u6ce2\u6d6a":"Wave","\u6e10\u7ed8":"Gradual","\u64ad\u653e\u65f6\u957f":"Time","\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62...":"Loading ...","\u53d6\u6d88":"Cancel","\u786e\u5b9a":"Confirm","\u9009\u62e9\u56fe\u5f62":"Select","\u901a\u9053\u590d\u4f4d":"Reset","\u5b8b\u4f53":"Songt","\u76f4\u7ebf":"Line","\u5706\u5f27":"Arc","\u4eae\u70b9":"Dot","\u6253\u70b9":"Manage","\u5723\u8bde":"Christmas","\u52a8\u753bA":"AnimA","\u52a8\u753bB":"AnimB","\u5f69\u8679":"Rainbow","\u9ed8\u8ba4":"Default","\u8f6f\u4ef6\u7248\u672c":"Version","\u8fde\u63a5":"Connect","\u8bbe\u7f6e":"Settings","\u624b\u7ed8\u6d82\u9e26":"Draw","\u6587\u672c\u64ad\u653e":"Text","\u4e2a\u6027\u7f16\u7a0b":"Program","\u52a8\u753b\u64ad\u653e":"Animation","\u7ebf\u6761\u64ad\u653e":"Line","\u5723\u8bde\u64ad\u653e":"Christmas","DMX":"DMX","\u914d\u7f6e":"Config","\u8fd4\u56de":"Back","\u70b9\u6211\u8fde\u63a5":"Click Me To Connect","\u84dd\u7259\u672a\u8fde\u63a5":"Not Connected","\u8bbe\u5907":"Device","\u8bf7\u8f93\u5165\u6587\u5b57":"Please Enter Text","\u9884\u7559\u65e0\u529f\u80fd":"Reserved","\u91cd\u7f6e":"Reset","\u84dd\u7259\u8fde\u63a5":"Bluetooth Connection","\u5168\u9009":"All","\u53cd\u9009":"Invert","\u6e05\u9664":"Clear","\u5b57\u6570":"Text","\u70b9\u6570":"Dot","\u9884\u89c8":"Preview","\u573a\u666f\u7ba1\u7406":"Scene Management","\u52a0\u8f7d\u4e2d":"Loading","\u573a\u666f\u7f16\u8f91":"Scene Edit","\u8bf7\u5148\u8fde\u63a5\u84dd\u7259":"Please Connect Bluetooth First","\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b":"The Current Device Is Not Recognized","DMX\u5730\u5740\u7801":"Dmx Address","\u8bf7\u5148\u6253\u5f00\u8bbe\u5907":"Please Trun On The Device First","\u5355\u7ebf\u5b57\u4f53":"Single Line","\u6b63\u5728\u53d1\u9001":"Sending","\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528":"Please Check If Bluetooth Is Enabled On Your Phone","\u8be5\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587\u663e\u793a":"This Font Does Not Support Chinese Display","\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c":"Due To Capacity Limitations, Some Chinese Characters Have Not Been Included In The Font Library. Please To To The APP Version For A Complete Font Library","\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650":"Please Set App Location Permissions","\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650":"Please Set Bluetooth Permissions For The Mini Program","\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38":"Abnormal Reading Device Parameters","\u9009\u62e9":"select","\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247":"Set Background Image","\u53d1\u9001\u5931\u8d25":"fail in send","\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165":"The Text Length Has Exceeded 100","\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165":"The Number Of Text Coordinate Points Has Exceeded 2048","\u7b2c":"No.","\u7ec4\u6587\u5b57":" Group","\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5":"Please Modify The Font Or Text And Try Again","\u4e0d\u652f\u6301\u6587\u672c":" Not Supported ","\u7ec4\u5b57\u4f53":" Text Font ","\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u53d1\u9001":" Group No Text Entered, Please Enter Before Sending","\u662f\u5426\u5220\u9664\u7b2c":"Delete No.","\u7ec4":" Group","\u6700\u591a4\u4e2a\u5206\u7ec4":"Up To 4 Groups","\u6b63\u5728\u8fde\u63a5...":"Connecting...","\u8fde\u63a5\u5931\u8d25":"Connect Failed","\u5b57\u4f53\u9009\u62e9":"Select Font","\u601d\u6e90\u9ed1\u4f53":"NotoSans","\u601d\u6e90\u9ed1\u4f531":"NotoSans1","\u601d\u6e90\u9ed1\u4f532":"NotoSans2","\u601d\u6e90\u9ed1\u4f533":"NotoSans3","\u601d\u6e90\u9ed1\u4f534":"NotoSans4","\u601d\u6e90\u9ed1\u4f535":"NotoSans5","\u601d\u6e90\u9ed1\u4f536":"NotoSans6","\u601d\u6e90\u9ed1\u4f537":"NotoSans7","font_note_1001":"Chinese, English, Spanish, Portuguese, German, French","font_note_1002":"English, Spanish, Russian, Portuguese, German, French, Vietnamese, Hindi, Bengali","font_note_1003":"English, Chinese, Spanish, Russian, Portuguese, Japanese, German","font_note_1004":"Chinese, English, Spanish, Portuguese, German, French","font_note_1005":"English, Chinese","font_note_1006":"English, Japanese, Korean","font_note_1007":"Arabic","\u4fdd\u7559":"Reserved","\u56fe\u6848\u521d\u59cb\u989c\u8272":"Initial Color","\u6df7\u8272":"Mixing","\u7b14\u753b\u5c11\uff0c\u65e0\u95ea\u70c1\uff0c\u63a8\u8350\u4f7f\u7528":"Recommended, Better Performance","\u5df2\u65ad\u5f00\u8fde\u63a5":"Disconnected","\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c":"The Range Of 1-255","\u6587\u5b57\u7cbe\u5ea6":"Text Effects","\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6":"Effects","\u7cbe\u5ea6":"Effects","\u9009\u62e9\u56fe\u7247":"Select","\u8bbe\u4e3a\u80cc\u666f":"Background","\u8bc6\u522b\u56fe\u6848":"Recognize","\u63cf\u8fb9":"Outline","\u6b63\u5728\u5904\u7406\u4e2d":"Processing","\u5f53\u524d\u673a\u578b":"Model","hand_draw_tips":" ** Please swipe from the blank area towards the target pattern to select.\\n ** You can perform operations such as zooming in, zooming out, moving, changing colors, and deleting on the selected pattern.","\u4e0d\u518d\u63d0\u793a":"Never Show","out_door_tips1":"1-30 Landmark","out_door_tips2":"31-40 Northern Lights","out_door_tips3":"41-50 Time Tunnel","\u6587\u4ef6\u540d":"File Name","\u4fdd\u5b58\u6587\u4ef6":"Save File","\u9009\u62e9\u6587\u4ef6":"Select File","\u8bf7\u8f93\u5165\u6587\u4ef6\u540d":"Please Enter The Filename","\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d":"Please Enter New Filename","\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a":"Filename Cannot Be Empty","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165":"File Already Exists, Please Re-enter","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed":"File Already Exists, Continue?","\u4fdd\u5b58\u6210\u529f":"Save Successful","\u4fdd\u5b58\u5931\u8d25":"Save Failed","\u4fee\u6539\u6210\u529f":"Modification Successful","\u4fee\u6539\u5931\u8d25":"Modification Failed","\u5220\u9664\u6210\u529f":"Deletion Successful","\u5220\u9664\u5931\u8d25":"Deletion Failed","\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301":"The Current Model Does Not Support It","text_time_range":"Range 1-25.5","\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848":"Recognition Failed","\u8bf7\u9009\u62e9\u6587\u4ef6":"Please Select A File","\u6587\u4ef6\u6570":"Files","\u53e6\u5b58\u6587\u4ef6":"Save AS","\u5220\u9664\u6240\u9009\u6587\u4ef6":"Delete Selected Files","Select-File":"Select","\u6447\u5934\u8bbe\u7f6e":"Movement Settings","\u6447\u5934\u6a21\u5f0f":"Mode","\u6447\u5934\u76f8\u4f4d":"Phase","\u81ea\u52a8":"Automatic","\u624b\u52a8":"Manual","X\u7c97\u8c03":"X Coa. Adj.","X\u7ec6\u8c03":"X Fine Adj.","Y\u7c97\u8c03":"Y Coa. Adj.","Y\u7ec6\u8c03":"Y Fine Adj.","\u6c34\u5e73\u7535\u673a":"H Motor","\u6c34\u5e73\u5fae\u8c03":"Hor Adj","\u5782\u76f4\u7535\u673a":"V Motor","\u5782\u76f4\u5fae\u8c03":"Ver Adj","\u7535\u673a\u901f\u5ea6":"M Speed","\u6d41\u6c34\u65b9\u5411":"Direction","\u963f\u62c9\u4f2f\u8bed\u65b9\u5411":"Arabic","\u9ed8\u8ba4\u65b9\u5411":"Default","\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939":"Save to Folder","\u9009\u62e9\u5217\u8868":"Select List","\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0":"Please Enter Group Name","\u64ad\u653e\u5217\u8868":"Playlist","\u4fdd\u5b58":"Save","\u6dfb\u52a0":"Add","\u6279\u91cf\u8bbe\u7f6e":"Bulk Set","\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0":"Please Enter List Name","ALL":"All","\u5217\u8868\u7f16\u8f91":"List Edit","\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57":"Please Enter a Number Between 0.1 and 25.5","\u6dfb\u52a0\u81f3\u65b0\u5217\u8868":"Add New List","\u7acb\u5373\u64ad\u653e":"Play Now","\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed":"The Corresponding Playlist Will Be Deleted, Continue","-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- List is Empty --","\u989c\u8272\u8bbe\u7f6e":"Color"}')
        },
        dd3e: function(e, t) {
            e.exports = function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        dfc7: function(e, t, r) {
            "use strict";
            (function(e) {
                var n = r("47a9");
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var h = n(r("3b2d")),
                    a = n(r("af34")),
                    i = {
                        name: "HM-dragSort",
                        data: function() {
                            return {
                                guid: "",
                                isAppH5: !0,
                                shadowRow: {},
                                dragList: [],
                                ListHeight: this.listHeight,
                                scrollViewTop: 0,
                                scrollCommand: null,
                                isHoldTouch: !1,
                                isScrolling: !1,
                                scrollAnimation: !1,
                                scrollTimer: null,
                                wxsDataObj: [],
                                wxsDataStr: "[]"
                            }
                        },
                        props: {
                            feedbackGenerator: {
                                value: Boolean,
                                default: !1
                            },
                            rtl: {
                                value: Boolean,
                                default: !1
                            },
                            longTouch: {
                                value: Boolean,
                                default: !1
                            },
                            autoScroll: {
                                value: Boolean,
                                default: !0
                            },
                            longTouchTime: {
                                value: Number,
                                default: 300
                            },
                            list: {
                                value: Array,
                                default: []
                            },
                            rowHeight: {
                                value: Number,
                                default: 74
                            },
                            listHeight: {
                                value: Number,
                                default: 0
                            },
                            listBackgroundColor: {
                                value: String,
                                default: "#fff"
                            }
                        },
                        watch: {
                            longTouch: function(e) {
                                this.pushWxsData("longTouch", e)
                            },
                            longTouchTime: function(e) {
                                this.pushWxsData("longTouchTime", e)
                            },
                            feedbackGenerator: function(e) {
                                this.pushWxsData("feedbackGenerator", e)
                            },
                            autoScroll: function(e) {
                                this.pushWxsData("autoScroll", e)
                            },
                            list: {
                                handler: function(e) {
                                    this.initList(e)
                                },
                                immediate: !0,
                                deep: !0
                            },
                            listHeight: {
                                handler: function(e) {
                                    this.ListHeight = e, this.pushWxsData("ListHeight", this.ListHeight)
                                },
                                immediate: !0
                            }
                        },
                        mounted: function() {
                            this.guid = this.getGuid();
                            var e = uni.getSystemInfoSync();
                            0 == this.listHeight && (this.ListHeight = e.windowHeight), this.pushWxsData("isAppH5", this.isAppH5), this.pushWxsData("ListHeight", this.ListHeight), this.pushWxsData("longTouch", this.longTouch)
                        },
                        methods: {
                            getGuid: function() {
                                function e() {
                                    return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
                                }
                                return e() + e() + "_" + e() + "_" + e() + "_" + e() + "_" + e() + e() + e()
                            },
                            initList: function() {
                                for (var e = this, t = JSON.parse(JSON.stringify(this.list)), r = 0, n = t.length; r < n; r++) t[r].hasOwnProperty("HMDrag_id") || (t[r].HMDrag_id = "HMDragId_" + this.getGuid()), t[r].HMDrag_sort = r;
                                this.dragList.length > 0 ? setTimeout((function() {
                                    var r;
                                    (r = e.dragList).splice.apply(r, [0, e.dragList.length].concat((0, a.default)(t)))
                                }), 50) : this.dragList = JSON.parse(JSON.stringify(t)), this.pushWxsData("lastInitTime", (new Date).valueOf())
                            },
                            loadShadowRow: function(e) {
                                this.shadowRow = this.getMoveRow(e.rowSort)
                            },
                            vibrate: function() {
                                uni.vibrateShort()
                            },
                            pageScroll: function(e) {
                                var t = this;
                                if ("up" == e.command || "down" == e.command) {
                                    if (this.isHoldTouch || (this.isHoldTouch = !0, this.scrollViewTop = e.scrollTop), this.isScrolling) return;
                                    if (this.isScrolling = !0, this.isAppH5) return e.ListHeight = this.ListHeight, e.rowHeight = this.rowHeight, e.rowLength = this.dragList.length, void(this.scrollCommand = e);
                                    null != this.scrollTimer && clearInterval(this.scrollTimer);
                                    var r = this.rowHeight * this.dragList.length + 1 - this.ListHeight,
                                        n = !0;
                                    this.scrollTimer = setInterval((function() {
                                        n && (t.runScroll(e.command, r), n = !1, t.$nextTick((function() {
                                            n = !0
                                        })))
                                    }), 16.6)
                                }
                                "stop" == e.command && (this.scrollCommand = e, this.isScrolling && this.stopScroll())
                            },
                            runScroll: function(e, t) {
                                "up" == e && (this.scrollViewTop -= 5), "down" == e && (this.scrollViewTop += 5), this.scrollViewTop < 0 && (this.scrollViewTop = 0, clearInterval(this.scrollTimer)), this.scrollViewTop > t && (this.scrollViewTop = t, clearInterval(this.scrollTimer))
                            },
                            stopScroll: function() {
                                null != this.scrollTimer && clearInterval(this.scrollTimer), this.isScrolling = !1, this.scrollingtop = 0
                            },
                            getMoveRow: function(e) {
                                for (var t = 0, r = this.dragList.length; t < r; t++)
                                    if (this.dragList[t].HMDrag_sort == e) return JSON.parse(JSON.stringify(this.dragList[t]))
                            },
                            triggerClick: function(e, t) {
                                if (null != t) {
                                    var r = JSON.parse(JSON.stringify(t));
                                    delete r.HMDrag_id, delete r.HMDrag_sort, this.$emit("onclick", {
                                        index: e,
                                        row: JSON.parse(JSON.stringify(r))
                                    })
                                }
                            },
                            onTimeBlur: function(e, t, r) {
                                var n = this,
                                    a = parseFloat(e.target.value);
                                a = isNaN(a) ? 0 : a;
                                var i = Math.round(10 * a) / 10;
                                if (i != r) {
                                    (i < .1 || i > 25.5) && (i = r), i = Math.round(10 * i) / 10;
                                    for (var c = 0; c < this.dragList.length; c++)
                                        if (this.dragList[c].HMDrag_sort == t) {
                                            var o = function() {
                                                var e = c;
                                                return n.$set(n.dragList[e], "time", a), setTimeout((function() {
                                                    n.$set(n.dragList[e], "time", i)
                                                }), 50), {
                                                    v: void 0
                                                }
                                            }();
                                            if ("object" === (0, h.default)(o)) return o.v
                                        }
                                }
                            },
                            setPlayTime: function(t) {
                                e("log", "setPlayTime", t, " at components/HM-dragSorts/HM-dragSorts.vue:436");
                                for (var r = 0; r < this.dragList.length; r++) this.$set(this.dragList[r], "time", t)
                            },
                            tapDelete: function(e, t) {
                                if (null != t) {
                                    var r = JSON.parse(JSON.stringify(t));
                                    delete r.HMDrag_id, delete r.HMDrag_sort, this.$emit("ondelete", {
                                        index: e,
                                        row: JSON.parse(JSON.stringify(r))
                                    })
                                }
                            },
                            change: function(e) {
                                e.moveRow = this.getMoveRow(e.index), delete e.moveRow.HMDrag_id, delete e.moveRow.HMDrag_sort, this.$emit("change", e)
                            },
                            sort: function(e) {
                                this.stopScroll(), this.isHoldTouch = !1;
                                var t = this.getMoveRow(e.index);
                                delete t.HMDrag_id, delete t.HMDrag_sort;
                                for (var r = JSON.parse(JSON.stringify(this.dragList)), n = [], h = 0, a = r.length; h < a; h++) {
                                    delete r[h].HMDrag_id, delete r[h].HMDrag_sort;
                                    var i = e.sortArray[h];
                                    this.dragList[h].HMDrag_sort = i, n[i] = r[h]
                                }
                                this.$emit("confirm", {
                                    list: n,
                                    index: e.index,
                                    moveTo: e.offset,
                                    moveRow: t
                                })
                            },
                            getNowList: function() {
                                for (var e = JSON.parse(JSON.stringify(this.dragList)), t = [], r = 0, n = e.length; r < n; r++) {
                                    var h = e[r].HMDrag_sort;
                                    t[h] = e[r], delete t[h].HMDrag_id, delete t[h].HMDrag_sort
                                }
                                return t
                            },
                            splice: function() {
                                for (var e, t = arguments[0], r = arguments[1], n = arguments.length, h = [], a = 2; a < n; a++) {
                                    var i = arguments[a];
                                    i.HMDrag_id = "HMDragId_" + this.getGuid(), i.HMDrag_sort = t + a - 2, h.push(i)
                                }
                                for (var c = t, o = r > 0 ? t + r - 1 : t, s = h.length - r, l = this.dragList.length - 1; l >= 0; l--) {
                                    var p = this.dragList[l],
                                        d = p.HMDrag_sort;
                                    if (!(d < c))
                                        if (r > 0 && d >= c && d <= o) this.dragList.splice(l, 1);
                                        else if (0 != s && d >= o) {
                                        var b = d + s;
                                        this.dragList[l].HMDrag_sort = b
                                    }
                                }(e = this.dragList).push.apply(e, h), this.pushNewSort();
                                JSON.parse(JSON.stringify(this.dragList));
                                var g = this.getNowList();
                                return g
                            },
                            push: function() {
                                for (var e, t = arguments.length, r = [], n = this.dragList.length, h = 0; h < t; h++) {
                                    var a = arguments[h];
                                    a.HMDrag_id = "HMDragId_" + this.getGuid(), a.HMDrag_sort = n + h, r.push(a)
                                }(e = this.dragList).push.apply(e, r), this.pushNewSort();
                                var i = this.getNowList();
                                return i
                            },
                            unshift: function() {
                                for (var e, t = arguments.length, r = [], n = 0; n < t; n++) {
                                    var h = arguments[n];
                                    h.HMDrag_id = "HMDragId_" + this.getGuid(), h.HMDrag_sort = n, r.push(h)
                                }
                                for (var a = this.dragList.length - 1; a >= 0; a--) {
                                    var i = this.dragList[a],
                                        c = i.HMDrag_sort,
                                        o = c + t;
                                    this.dragList[a].HMDrag_sort = o
                                }(e = this.dragList).push.apply(e, r), this.pushNewSort();
                                var s = this.getNowList();
                                return s
                            },
                            pushNewSort: function() {
                                for (var e = [], t = 0, r = this.dragList.length; t < r; t++) e.push(this.dragList[t].HMDrag_sort);
                                this.pushWxsData("sortArray", e), this.pushWxsData("lastInitTime", (new Date).valueOf())
                            },
                            pushWxsData: function() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                                    t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                                this.wxsDataObj.splice(0, 8, ["guid", this.guid], ["listLength", this.dragList.length], ["ListHeight", this.ListHeight], ["isAppH5", this.isAppH5], ["longTouch", this.longTouch], ["longTouchTime", this.longTouchTime], ["feedbackGenerator", this.feedbackGenerator], ["autoScroll", this.autoScroll]);
                                for (var r = -1, n = 0; n < this.wxsDataObj.length; n++)
                                    if (this.wxsDataObj[n][0] == e) {
                                        r = n;
                                        break
                                    } r > -1 ? this.wxsDataObj[r][1] = t : (this.wxsDataObj.push([e, t]), "sortArray" == e && this.wxsDataObj.length), "" != this.guid && (this.wxsDataStr = JSON.stringify(this.wxsDataObj))
                            },
                            compareVersion: function(e, t) {
                                e = e.split("."), t = t.split(".");
                                var r = Math.max(e.length, t.length);
                                while (e.length < r) e.push("0");
                                while (t.length < r) t.push("0");
                                for (var n = 0; n < r; n++) {
                                    var h = parseInt(e[n]),
                                        a = parseInt(t[n]);
                                    if (h > a) return 1;
                                    if (h < a) return -1
                                }
                                return 0
                            }
                        }
                    };
                t.default = i
            }).call(this, r("f3b9")["default"])
        },
        e0f0: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("dfc7"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        e2c2: function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [r("navigation-bar", {
                        attrs: {
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            title: e.ntitle,
                            _i: 2
                        }
                    })], 1), r("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [r("view", [r("view", [r("radio-group", {
                        staticClass: e._$s(6, "sc", "display-btn-group"),
                        attrs: {
                            _i: 6
                        },
                        on: {
                            change: e.radioChange
                        }
                    }, [r("view", [r("label", {
                        staticClass: e._$s(8, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 8
                        }
                    }, [e._v(e._$s(8, "t0-0", e._s(e.$t("\u6447\u5934\u6a21\u5f0f"))))]), r("label", {
                        staticClass: e._$s(9, "sc", "fun-radio"),
                        attrs: {
                            _i: 9
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(10, "a-checked", !!e.xyCnf.auto),
                            _i: 10
                        }
                    }), r("text", {
                        style: e._$s(11, "s", "font-size: 30rem;" + (e.xyCnf.auto ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 11
                        }
                    }, [e._v(e._$s(11, "t0-0", e._s(e.$t("\u81ea\u52a8"))))])]), r("label", {
                        staticClass: e._$s(12, "sc", "fun-radio"),
                        attrs: {
                            _i: 12
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(13, "a-checked", !e.xyCnf.auto),
                            _i: 13
                        }
                    }), r("text", {
                        style: e._$s(14, "s", "font-size: 30rem;" + (e.xyCnf.auto ? "color: #687C8E;" : "color: #76CEE7;")),
                        attrs: {
                            _i: 14
                        }
                    }, [e._v(e._$s(14, "t0-0", e._s(e.$t("\u624b\u52a8"))))])])])])]), r("view", [r("radio-group", {
                        staticClass: e._$s(16, "sc", "display-btn-group"),
                        attrs: {
                            _i: 16
                        },
                        on: {
                            change: e.radioPhaseChange
                        }
                    }, [r("view", [r("view", [r("label", {
                        staticClass: e._$s(19, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 19
                        }
                    }, [e._v(e._$s(19, "t0-0", e._s(e.$t("\u6447\u5934\u76f8\u4f4d"))))]), r("label", {
                        staticClass: e._$s(20, "sc", "fun-radio"),
                        attrs: {
                            _i: 20
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(21, "a-checked", 0 == e.xyCnf.phase),
                            _i: 21
                        }
                    }), r("text", {
                        style: e._$s(22, "s", "font-size: 30rem;" + (0 == e.xyCnf.phase ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 22
                        }
                    }, [e._v(e._$s(22, "t0-0", e._s("X+Y+")))])]), r("label", {
                        staticClass: e._$s(23, "sc", "fun-radio"),
                        attrs: {
                            _i: 23
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(24, "a-checked", 1 == e.xyCnf.phase),
                            _i: 24
                        }
                    }), r("text", {
                        style: e._$s(25, "s", "font-size: 30rem;" + (1 == e.xyCnf.phase ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 25
                        }
                    }, [e._v(e._$s(25, "t0-0", e._s("X-Y+")))])])]), r("view", [r("label", {
                        staticClass: e._$s(27, "sc", "display-btn-lable"),
                        attrs: {
                            _i: 27
                        }
                    }), r("label", {
                        staticClass: e._$s(28, "sc", "fun-radio"),
                        attrs: {
                            _i: 28
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(29, "a-checked", 2 == e.xyCnf.phase),
                            _i: 29
                        }
                    }), r("text", {
                        style: e._$s(30, "s", "font-size: 30rem;" + (2 == e.xyCnf.phase ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 30
                        }
                    }, [e._v(e._$s(30, "t0-0", e._s("X+Y-")))])]), r("label", {
                        staticClass: e._$s(31, "sc", "fun-radio"),
                        attrs: {
                            _i: 31
                        }
                    }, [r("radio", {
                        attrs: {
                            checked: e._$s(32, "a-checked", 3 == e.xyCnf.phase),
                            _i: 32
                        }
                    }), r("text", {
                        style: e._$s(33, "s", "font-size: 30rem;" + (3 == e.xyCnf.phase ? "color: #76CEE7;" : "color: #687C8E;")),
                        attrs: {
                            _i: 33
                        }
                    }, [e._v(e._$s(33, "t0-0", e._s("X-Y-")))])])])])])]), r("view", {
                        staticClass: e._$s(34, "sc", "canvas-xy"),
                        style: e._$s(34, "s", "opacity: " + (e.xyCnf.auto ? "0.3" : "1") + ";"),
                        attrs: {
                            _i: 34
                        }
                    }, [r("view", {
                        attrs: {
                            id: "cvView",
                            _i: 35
                        }
                    }, e._l(e._$s(36, "f", {
                        forItems: e.xyCnf.xy
                    }), (function(t, n, h, a) {
                        return r("view", {
                            key: e._$s(36, "f", {
                                forIndex: h,
                                key: n
                            })
                        }, [r("canvas", {
                            attrs: {
                                "data-idx": e._$s("37-" + a, "a-data-idx", n),
                                "canvas-id": e._$s("37-" + a, "a-canvas-id", "chCanvas" + t.name),
                                id: e._$s("37-" + a, "a-id", "chCanvas" + t.name),
                                _i: "37-" + a
                            },
                            on: {
                                touchstart: e.chTouchstart,
                                touchmove: e.chTouchmove,
                                touchend: e.chTouchend,
                                touchcancel: e.chTouchend
                            }
                        })])
                    })), 0), r("view", {
                        attrs: {
                            id: "cvView",
                            _i: 38
                        }
                    }, e._l(e._$s(39, "f", {
                        forItems: e.xyCnf.xy
                    }), (function(t, n, h, a) {
                        return r("label", {
                            key: e._$s(39, "f", {
                                forIndex: h,
                                key: n
                            })
                        }, [e._v(e._$s("39-" + a, "t0-0", e._s(e.$t(t.title))))])
                    })), 0)]), r("view", {
                        staticClass: e._$s(40, "sc", "okbtn-class"),
                        attrs: {
                            _i: 40
                        }
                    }, [r("view", {
                        staticClass: e._$s(41, "sc", "opr-new btn-linear"),
                        attrs: {
                            _i: 41
                        },
                        on: {
                            click: e.okClick
                        }
                    }, [e._v(e._$s(41, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])])])], 1)
                },
                a = []
        },
        e458: function(e, t, r) {
            (function(t) {
                var r = function(e) {
                    return e = e.toString(), e[1] ? e : "0" + e
                };
                e.exports = {
                    update: function(e) {},
                    lineTheta: function(e, t, r) {
                        var n = {
                                x: e[0] - t[0],
                                y: e[1] - t[1]
                            },
                            h = {
                                x: r[0] - t[0],
                                y: r[1] - t[1]
                            },
                            a = n.x * h.x + n.y * h.y,
                            i = Math.sqrt(Math.pow(n.x, 2) + Math.pow(n.y, 2)),
                            c = Math.sqrt(Math.pow(h.x, 2) + Math.pow(h.y, 2)),
                            o = Math.acos(a / (i * c));
                        return o
                    },
                    formatTime: function(e) {
                        var t = e.getFullYear(),
                            n = e.getMonth() + 1,
                            h = e.getDate(),
                            a = e.getHours(),
                            i = e.getMinutes(),
                            c = e.getSeconds();
                        return [t, n, h].map(r).join("/") + " " + [a, i, c].map(r).join(":")
                    },
                    getstr: function() {
                        return "lisn3188 is ok"
                    },
                    strToUUID: function(e) {
                        var r, n = e.length;
                        if (n <= 0) return "";
                        var h = "";
                        for (r = 0; r < n; r++) "0123456789-abcdefABCDEF".indexOf(e.charAt(r)) < 0 ? t("log", "error = " + e.charAt(r), " at utils/util.js:29") : h += e.charAt(r);
                        return h
                    },
                    isUUID: function(e) {
                        t("log", "input  = " + e, " at utils/util.js:38");
                        var r = e.split("-", -1);
                        return 5 == r.length && (8 == r[0].length && 4 == r[1].length && 4 == r[2].length && 4 == r[3].length && 12 == r[4].length)
                    }
                }
            }).call(this, r("f3b9")["default"])
        },
        e5e7: function(e, t) {
            e.exports = {
                DrawFonts: {
                    30: "m8+j,ledA,iNTY,fUjo,c6CO,8uM2,6RZk,7REE,bZrM,gcrG,jn1s,lHSs,mdT3",
                    31: "l/7/,l/fr,7qEf",
                    32: "iaPB,ktlC,mdNI,miTa,k/+k,j14W,gjK4,7vfz,7AGV",
                    33: "jBaT,lJ/0,miMM,ly4Q,jE5E,hj8m,fPJ3,eST6,dlhO,aITc,8CwW,7c2i,7ejM,8iz6,atEz",
                    34: "bjYf,bjoz,l4Q3,7vHd",
                    35: "lZ25,l/8T,fWTP,ggZQ,gjy+,faq+,dv3g,bf24,9iu+,7YXG,775g,7qtA,8EvY,9V1L",
                    36: "mbAJ,dLH0,bAug,9fB2,7sYa,72eO,7RF6,9she,cy2g,eJ6K,fwe8,eNED",
                    37: "lW6B,lUaX,7qq1",
                    38: "fB51,fZni,h45o,iVeg,kI0w,lOVe,mlbM,m95S,l7gA,jGym,hTOs,gciC,fwcg,eQ58,dO6k,clh4,arcq,8nqG,7eiG,6WV6,7HV2,9g4s,byBE,dVUi,fB4Z",
                    39: "7o2d,fXgW,hRnC,k7R2,lKhi,mlb8,lAd4,jPPE,hH4o,fN2o,erHA,eaN4,eVjp",
                    61: "hWkr,7qYp,eXV5,gRS8,i1pC,idrW,hla2,fykc,d18U,ayu2,8LO2,7vkm,6WT4,7HS4,a8hH",
                    41: "7Cph,lFfX,7ymj,dnJn,dkNP",
                    62: "mx57,7sKt,eIC1,glGi,hENm,ib3q,iivQ,hxOO,g7yy,dR7C,bwdi,9g6Y,7KlM,74K0,7290,83XY,aS0J",
                    42: "7HtF,m1rr,m1Ha,lt9w,kwbu,jaM8,hJZS,gyem,ftNA,foE5,ftNx,eLus,d+Ks,cRyo,bcBc,9Of0,8sKw,7CU6,7CBf",
                    63: "gDm7,i1yQ,ikWQ,hTuM,g/fy,fKDe,ecW6,cgoA,9Xvc,8pWQ,7vqs,6Uv+,79Ku,8Hyx",
                    43: "jLCx,lD4+,mbxE,lWd+,klZq,ipmA,gbIu,dLsk,aWQE,8VyU,7F7e,74GU,7h2i,89ku,9sqP",
                    64: "mvih,7ygH,eEmX,gWKk,i8JU,iilQ,hxpa,gqvw,e5wc,bWlu,9BsA,7YzW,74yC,79B6,89c2,aGtb",
                    44: "7OGr,lR6n,lP1Q,loiU,kcL6,ibra,fDW0,cZ0w,b2V2,9np+,8iX0,7Kam,7OGH",
                    65: "dkIp,dlmR,fwv0,hj98,iitY,idrM,hghI,fM+Y,dn8y,blL8,9GmO,88NE,7eim,6/Mw,7lTQ,8qkW,9zDV",
                    45: "l/wx,l/1d,7CDB,7D5V,fyrb,fwur",
                    66: "mlmF,mv2I,mgli,lt1y,7AmV,i3En,i3Vl",
                    46: "m1Wh,m1vv,7JZV,fw0F,fwrN",
                    67: "hWl3,7ovY,5pwM,41yM,3j3M,36JM,3q7u,4diE,5tOp,eLH/,hvkw,ig0W,ia/G,hgiY,f/Es,dVjU,bAo0,9wCU,8g92,7s/W,7MHi,8Yvu,b7Mv",
                    47: "jVqP,lKr8,mnJY,lK2W,kory,i8hs,fFye,cVMe,aDlC,8VAC,7CJa,74Hm,7jze,8MuA,b0Ec,dHzN,dHen",
                    68: "mB/Z,7j0B,f52M,g/fo,i6bo,ibe2,h25g,f5D0,7qVh",
                    48: "mdzB,7qj9,fAMf,fyYf,m9iX,7vPZ",
                    69: "lWlL,lWlR,h+U9,7t3f",
                    49: "m6y/,7An/",
                    "6a": "lYO9,lYOf,hJOp,4+nq,48F8,3Hk6,3OAR",
                    "4a": "me2n,a5GM,8ETS,7Keg,79xc,7elk,8k/f",
                    "6b": "mpTp,7vhV,cqe3,hWcT,d8Gz,7opL",
                    "4b": "l++j,7vfT,f2EZ,m4mj,fDjn,7ydf",
                    "6c": "mCip,7Fgv",
                    "4c": "m6o/,7F6Z,7Fvv",
                    "6d": "i3fx,7iNL,e/Xg,gxGK,hY7O,ifRc,gy5i,ff7W,7t3J,fcFE,gZ40,igcO,ibui,gUA2,f0+s,7oI1",
                    "4d": "7Hbn,k9F1,7MB5,kcU3,7Zj9",
                    "6e": "hVJR,7nUD,f52M,gAmC,i1hO,idGi,h24Y,f0L8,7qVL",
                    "4e": "7HlR,lHkL,7/C1,l/AH",
                    "6f": "idxl,hu+O,fWN2,d+d0,bYO+,9hZ4,7xNe,6UrW,7tdw,98ME,ch1c,eVsg,gWLq,hW6U,idxr",
                    "4f": "mnDF,llug,jDvc,gsLK,c+Bs,9UWw,7W7w,6/Lg,7FtA,9Cac,dAas,i1Nc,kyNq,m1Ra,mq3R",
                    70: "i0/t,33Zp,emDt,gFd4,i1dK,iisI,hJZ4,gmaY,eiq8,bPK+,9C5w,7Kls,6/Pu,7gLI,8Oh6,b2dF",
                    50: "7CzV,l++z,lWs2,lc9I,jLtm,hYK4,gvXk,frvk,e+5i,eXkj",
                    71: "hWkr,39w5,epJr,gRR+,iiug,ids4,hq3k,fRSm,d8t0,aR/6,8VyK,7xMW,6/Ka,7lRk,8EZE,arPn",
                    51: "cRn5,680V,8JVx,9Teo,bKXE,eGZ4,ilhu,l7lA,mbxa,m1yg,kFsC,hX/m,e2Xm,bqwi,9aAq,7JYM,72dI,7C/W,8F0Z",
                    72: "hVVp,7lEp,eXtV,gtcE,hlpG,hYxg,h/0/",
                    52: "7vfj,lW5V,lT/Y,leBu,k5qQ,ixlw,h6/E,g2CC,fk8S,e+2k,f0cP,eZVR,7oq/",
                    73: "h21j,hJX2,i8Kw,ikU0,ingc,i66S,hENm,gWnc,fZka,fcvu,eu88,dQFW,d6ki,bKDE,aQ3G,9QBO,8R6w,7YXc,79CG,6Utu,6UpK,726G,7xNS,8izq",
                    53: "k0tV,l9G0,m4b0,muYC,ml5G,lvja,ktme,jmyw,i3zg,gTWO,g9Bu,duWG,cqDA,aSyU,9B+u,8Ctu,7HQ2,7c0q,6/Je,7ehU,7/2G,8QIU,aa6c",
                    74: "i1bl,i3Xd,mEKb,7lKb",
                    54: "l++X,lWAR,l/ef,7t35",
                    75: "i11F,bc1q,9ucc,7MqK,7712,74H+,7C+m,8YwK,aXvC,i1C9",
                    55: "m6gz,aZoe,9z44,83Xk,7gM0,776G,7Fre,9x9A,bcBQ,m9hN",
                    76: "i3tL,7TVH,h/a3",
                    56: "m1iB,7/er,m22P",
                    77: "h+mp,7OMN,hEV/,81Wt,hYYP",
                    57: "m5/H,7JQR,lFgp,7KsH,m2dL",
                    78: "h+FD,7vLr,7j1h,i1yf",
                    58: "m8JB,7tm9,7sLN,m6Rn",
                    79: "i3ud,7/fH,393p,hYKh",
                    59: "m8Il,eNPf,7lKz,eSHL,mbKv",
                    "7a": "hYdH,hWdv,7xKD,7vKv",
                    "5a": "l/17,lY/n,7sQJ,7ABh",
                    e4: "lOU5,lOUb,lPan,lPat,h/df,7vQV,epJO,fyW0,hbOG,ikUk,h+LC,gjaC,dfOe,acvO,8bck,726m,7euy,8lqy,aLl/",
                    c4: "ph2R,ph2X,peV1,peV7,7CpL,lvvz,7Dev,dlh7,dneH",
                    f1: "lW8N,mCa/,ly0Z,m4iJ,hH3T,7ql1,f52C,gK9a,hJL0,i8Mo,gAP2,eEkE,7eIl",
                    d1: "pg+N,pU8P,oP+t,pr9l,7qg5,lOFF,7yjb,m9mj",
                    f6: "lMrR,lMrX,lKib,lKih,i1ix,h45o,ehLu,aPzY,8k+6,6WSM,7RG+,aV76,f5Fc,hvjU,h+SH",
                    d6: "p9Kf,p9Kl,p7Ah,p7An,mdSP,l1X0,hsfE,cxhQ,8zzo,72bm,86QO,cKsE,iv2E,lHVU,mbqv",
                    df: "7HtF,jG4w,lTN6,mu/A,lomk,jkzE,hbOG,fyE5,epz0,cc1+,9kXI,7exw,7gND",
                    fc: "lTMh,lTMn,lRCD,lRCJ,hTgF,aFRW,8+tK,7ei2,79CG,8Cxe,aV3m,hWhf",
                    dc: "pcal,pcar,pa0x,pa0D,mb8V,bjmk,8GYw,773y,8qjQ,bhuu,m4oZ",
                    e0: "nBGP,l775,i6x/,7eLj,e3LI,fNyU,h4ue,i6g4,hM3W,feNq,cxoS,9rIm,7xMi,72cs,7MM8,9iwy,bf5f",
                    c0: "qW4f,op4B,7qcb,miMF,7r1J,dgpp,dilz",
                    e7: "gr6d,hMqU,ifZO,hiMi,feO+,cbsO,9hZI,7J/K,74FY,7D26,93Wd,74FV,5klz,5fx4,4GXw,3MkA,3e5a,36HA,3lhx",
                    c7: "jEif,lWzy,m426,jrj+,eNm8,aDjK,7/2G,74Fa,7AE2,9H5p,74Fr,5klf,5knS,50UQ,4ix0,3qki,34hG,3iRB",
                    e9: "nLDR,lent,9GYT,86Nm,72gG,7gJQ,8+ro,c+Iu,fZcG,i3FG,i8K+,gM/m,dln6,daVX",
                    e8: "nSL9,l4G/,9Exf,7MNI,6/NC,7Ada,9LeQ,ddmi,gAi4,i65s,ig3q,gUjO,dqfC,dkH5",
                    ea: "l4tD,n8tH,kZun,9JpB,7AyK,6Uqc,7Rh2,amh6,dkHc,gYK8,iimC,i3UG,gI7a,dxAp,dpAd",
                    eb: "lRkb,lRkh,lPad,lPaj,9GZl,7KkG,6Zi4,8pRG,ar9M,dn8e,gAie,iims,hRhc,fUUK,dnPp,dpAd",
                    c9: "qWk1,omCt,lZ53,lYBh,7HvN,7FyX,foGl,fhR5",
                    c8: "q+/f,ohPh,lZ5n,lW8p,7xKt,7vNN,foFJ,fmJr",
                    ca: "ok2j,qj9f,ofuH,lWEZ,l/1R,7JYb,7H/l,fjN/,fkh1",
                    cb: "pcc/,pcd5,pcv7,pcvd,lZ4V,lYBh,7CCZ,7H+T,fr6r,frCf",
                    ec: "nNU/,l79h,i8GT,7b/n",
                    ee: "kZ8T,naWz,k/WD,i1kf,7epV",
                    cc: "qYx7,okdP,mgkX,7gTf",
                    ce: "omrh,qqrl,ohTF,miM5,7oah",
                    f2: "nQjd,lb/L,idwT,gvpU,cJCK,8ixy,6R+U,8e7w,cHU6,gUju,i8ED",
                    f4: "l21R,n8tR,l4OP,i8DB,gTSU,d19m,8zCm,6R/Q,8sNk,cC/s,gPrM,i6b7",
                    d2: "q+YL,omEl,mnDv,kZ1K,hEsK,dde0,93gs,72bQ,8xK+,d1+E,igq4,ll/o,mlbb",
                    d4: "of6x,qly/,ofs1,mdSF,le9m,hT70,dzbO,8+o6,74CQ,8xJA,dvig,iVUC,lHWG,mbqv",
                    153: "9CpX,7hkK,77jO,9GHA,d8Qi,gy1y,ifJy,iaGg,h1gs,dIMW,a2qE,7HbA,6Z1w,88TK,afgw,ff7M,h9im,idO6,i1N+,gk3u,dqBH,d3Yj",
                    152: "7yHN,7vLV,m1W/,m2qJ,fnbb,fkf9,jBAI,lAno,miuk,klHW,gM3G,cLJq,9DCy,7HhQ,79n2,8zWw,aU+w,fkf9",
                    f9: "nQjn,l9zl,i11Z,ayxE,8EvY,7eiw,79Di,8xF2,aIRY,hWh5",
                    fb: "l21H,n8t/,l2n1,ifHj,aKKA,86mE,6Ziy,7PcS,aQb0,i6uP",
                    d9: "q+Yr,okcf,mkW3,aNa+,8izK,6Zj0,7Y+E,aLj8,mlv1",
                    db: "ocGh,qj6L,ofrz,mitP,aWXQ,8dHo,6/KY,7Wxi,aZYO,mluT",
                    27: "mJCR,iuDv",
                    b4: "nLEj,l4B/",
                    e1: "nJbB,l29V,h/dp,7cjd,euCC,gcoe,hF3E,iis4,hq3k,efhQ,aDlM,8g5M,6WPY,7vEm,9g4i,bIop",
                    e2: "kZ8J,n61B,kZuH,h/dp,79SP,eEnC,gylI,hOPI,ifZ0,hq2o,eXeY,c46a,8QGy,725A,7vD6,9iwS,c4P3",
                    e3: "lW9f,mEEl,lCVN,m9bx,hTTT,7eKx,edw1,hvkG,iuAa,gMuI,daUY,9z0E,7lz+,74JS,8OL6,b2Tn",
                    c1: "qWgr,oo/r,7Cpr,mgkz,7oBj,dlhL,dfUR",
                    c2: "ocG7,qn/f,okjL,7qc1,mq5p,7m9x,dnK9,dpF/",
                    c3: "pg/p,pZ1t,oNyn,pmgH,7sEr,muZL,7r1T,dgpJ,db01",
                    ed: "nJ9J,l9sN,i3KN,7eo1",
                    cd: "qYHL,omyz,mgiB,7gQL",
                    f3: "nO3X,lgPJ,ifZ7,gxS8,bYOc,8uKO,6R+K,81V0,ch28,hj9s,ifZx",
                    f5: "l/1r,mLYN,ly1B,m4j1,i3Lf,gFbQ,d19c,8Vzm,6Pyu,8Mlc,d6Ky,gN0M,ib4f",
                    d3: "q/9p,op0n,mbpD,k/tm,gTCu,c3/s,8B/a,6/MQ,8CD0,ceIM,hYVk,ltjc,mdS7",
                    d5: "pg/f,pZ1N,oP+N,ptBV,mbqp,kPeI,g4ks,aDgW,7MmG,6UqQ,7HXe,awOI,gwa0,l9Pe,mgi/",
                    fa: "nBR7,lqzX,hY99,atE+,86lS,6DkW,7U7y,aBxG,hTRj",
                    da: "qMuZ,oyNx,l+XF,a/Qu,8bfs,6FNa,81Uo,aZYk,mbKb",
                    a1: "hxA/,hxB5,eaL9,2Pd3",
                    bf: "hA15,bMK7,eknM,ewNG,cgUW,awxw,7Moe,52ZO,3nF2,2WuY,36Sc,4bj8,6wgD",
                    ef: "lWcH,lWcN,lU2J,lWv3,hV/F,7gS9",
                    cf: "peCh,peCn,pa0n,pa0t,m1Gv,7qC/"
                }
            }
        },
        e6db: function(e, t, r) {
            var n = r("3b2d")["default"];
            e.exports = function(e, t) {
                if ("object" != n(e) || !e) return e;
                var r = e[Symbol.toPrimitive];
                if (void 0 !== r) {
                    var h = r.call(e, t || "default");
                    if ("object" != n(h)) return h;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return ("string" === t ? String : Number)(e)
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        e745: function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default,
                    uniPopup: r("762b").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        r = e._self._c || t;
                    return r("view", [r("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [r("navigation-bar", {
                        attrs: {
                            title: e.ntitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), r("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [r("view", [r("view", [e._$s(6, "i", 0 == e.playListNamesAll.length) ? [r("view", [r("text", [e._v(e._$s(8, "t0-0", e._s(e.$t("-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --"))))])])] : [r("scroll-view", {
                        attrs: {
                            id: "scroll_view_playList",
                            _i: 10
                        }
                    }, [r("view", e._l(e._$s(12, "f", {
                        forItems: e.playListNamesAll.slice().reverse()
                    }), (function(t, n, h, a) {
                        return r("view", {
                            key: e._$s(12, "f", {
                                forIndex: h,
                                key: n
                            }),
                            staticClass: e._$s("12-" + a, "sc", "display-btn-group"),
                            style: e._$s("12-" + a, "s", e.playListName == t ? "background-color: #2B4863;" : ""),
                            attrs: {
                                _i: "12-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.playListFileSelectClick(t)
                                }
                            }
                        }, [r("view", [r("label", {
                            staticClass: e._$s("14-" + a, "sc", "display-btn-lable"),
                            attrs: {
                                _i: "14-" + a
                            }
                        }, [e._v(e._$s("14-" + a, "t0-0", e._s(n + 1 + ".")) + e._$s("14-" + a, "t0-1", e._s(t)))]), r("view", {
                            staticClass: e._$s("15-" + a, "sc", "opr-eye-img"),
                            attrs: {
                                _i: "15-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.playListViewClick(t)
                                }
                            }
                        }), r("view", {
                            staticClass: e._$s("16-" + a, "sc", "opr-play-img"),
                            style: e._$s("16-" + a, "s", (e.rtl ? "margin-left: 30rem; " : "margin-right: 30rem; ") + "width: 65rem; height: 50rem;"),
                            attrs: {
                                _i: "16-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.playListFileClick(t)
                                }
                            }
                        })]), r("view", [r("view", {
                            staticClass: e._$s("18-" + a, "sc", "opr-btn-img"),
                            style: e._$s("18-" + a, "s", (e.rtl ? "margin-right: 40rem; " : "margin-left: 40rem; ") + "width: 30rem; height: 30rem;"),
                            attrs: {
                                _i: "18-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.deleteListFileClick(t)
                                }
                            }
                        }), e._$s("19-" + a, "i", e.playListName == t) ? r("view", {
                            staticClass: e._$s("19-" + a, "sc", "opr-rename-img"),
                            attrs: {
                                _i: "19-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.editListFileClick(t)
                                }
                            }
                        }) : e._e(), r("view", {
                            staticClass: e._$s("20-" + a, "sc", "opr-info-img"),
                            style: e._$s("20-" + a, "s", (e.rtl ? "margin-left: 40rem; " : "margin-right: 40rem; ") + "width: 30rem; height: 30rem;"),
                            attrs: {
                                _i: "20-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.playListEdit(t)
                                }
                            }
                        })])])
                    })), 0)])]], 2), r("view", [r("view", {
                        staticClass: e._$s(22, "sc", "opr-btn  btn-linear edit-playlist"),
                        attrs: {
                            _i: 22
                        },
                        on: {
                            click: e.playListAdd
                        }
                    }, [e._v(e._$s(22, "t0-0", e._s(e.$t("\u65b0\u589e\u5217\u8868"))))])])]), r("uni-popup", {
                        ref: "listNameInput",
                        attrs: {
                            "mask-click": !0,
                            animation: !1,
                            _i: 23
                        }
                    }, [r("view", [r("view", [r("view", [e._v(e._$s(26, "t0-0", e._s(e.$t("\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0"))))]), r("input", {
                        attrs: {
                            value: e._$s(27, "a-value", e.playListNewName),
                            _i: 27
                        },
                        on: {
                            input: e.listNameNewInput
                        }
                    }), r("view", [r("view", {
                        attrs: {
                            _i: 29
                        },
                        on: {
                            click: e.listNameInputCancelClick
                        }
                    }, [e._v(e._$s(29, "t0-0", e._s(e.$t("\u53d6\u6d88"))))]), r("view"), r("view", {
                        attrs: {
                            _i: 31
                        },
                        on: {
                            click: e.listNameInputOkClick
                        }
                    }, [e._v(e._$s(31, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])]), r("view", {
                        attrs: {
                            _i: 32
                        },
                        on: {
                            click: e.listNameInputCancelClick
                        }
                    })])]), r("uni-popup", {
                        ref: "playListView",
                        attrs: {
                            "mask-click": !0,
                            animation: !1,
                            _i: 33
                        },
                        on: {
                            change: e.playListViewChange
                        }
                    }, [r("view", [r("view", [r("view", [r("text", [e._v(e._$s(37, "t0-0", e._s(e.playListName)))])]), r("view", {
                        attrs: {
                            _i: 38
                        },
                        on: {
                            click: e.playListViewImgClick
                        }
                    }, [r("image", {
                        attrs: {
                            src: e._$s(39, "a-src", e.viewImgPath),
                            _i: 39
                        }
                    })]), r("view", [r("text", {
                        staticClass: e._$s(41, "sc", "display-speed-lable"),
                        attrs: {
                            _i: 41
                        }
                    }, [e._v(e._$s(41, "t0-0", e._s(e.$t("\u901f\u5ea6"))) + e._$s(41, "t0-1", e._s(e.slviewImgTime)))]), r("slider", {
                        staticClass: e._$s(42, "sc", "fun-slider"),
                        attrs: {
                            value: e._$s(42, "a-value", e.slviewImgTime),
                            _i: 42
                        },
                        on: {
                            change: e.slViewTimeChange
                        }
                    })]), r("view", [r("view", {
                        staticClass: e._$s(44, "sc", "opr-back-img"),
                        style: e._$s(44, "s", e.rtl ? "margin-right: 30rem; " : "margin-left: 30rem; "),
                        attrs: {
                            _i: 44
                        },
                        on: {
                            click: function(t) {
                                return e.playListViewItemClick(-1)
                            }
                        }
                    }), r("label", [e._v(e._$s(45, "t0-0", e._s(e.viewImgIdx + 1)) + e._$s(45, "t0-1", e._s(e.currFileData.length)))]), r("view", {
                        staticClass: e._$s(46, "sc", "opr-forward-img"),
                        style: e._$s(46, "s", e.rtl ? "margin-left: 30rem; " : "margin-right: 30rem; "),
                        attrs: {
                            _i: 46
                        },
                        on: {
                            click: function(t) {
                                return e.playListViewItemClick(1)
                            }
                        }
                    })])])])]), e._$s(47, "i", e.drawCanvasShow) ? r("canvas", {
                        style: e._$s(47, "s", "height: " + e.drawCanvas.h + "px; width: " + e.drawCanvas.w + "px; position: absolute; left: 999999;"),
                        attrs: {
                            id: "drawCanvas",
                            _i: 47
                        }
                    }) : e._e()], 1)], 1)
                },
                a = []
        },
        e7b7: function(e, t, r) {
            "use strict";
            (function(e) {
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var n = getApp(),
                    h = r("3b77"),
                    a = r("c4ce"),
                    i = {
                        data: function() {
                            var e = n.globalData.getDeviceFeatures(),
                                t = 650 * n.globalData.screen_width_float;
                            return {
                                screen_width: n.globalData.screen_width_str,
                                rtl: n.globalData.rtl,
                                prjTitles: ["--", "\u968f\u673a\u64ad\u653e", "\u7ebf\u6761\u64ad\u653e", "\u52a8\u753b\u64ad\u653e", "--", "\u5723\u8bde\u64ad\u653e", "\u6237\u5916\u64ad\u653e"],
                                colorName: [
                                    [this.$t("\u7ea2"), "red"],
                                    [this.$t("\u7eff"), "green"],
                                    [this.$t("\u84dd"), "blue"],
                                    [this.$t("\u9ec4"), "yellow"],
                                    [this.$t("\u9752"), "#00FFFF"],
                                    [this.$t("\u7d2b"), "purple"],
                                    [this.$t("\u767d"), "white"],
                                    [this.$t("\u8df3\u53d8"), "white"],
                                    [this.$t("\u5168\u5f69"), "white"]
                                ],
                                prjIndex: 0,
                                sendCmdParmsTimer: null,
                                showOutDoorTips: !1,
                                features: e,
                                colorDisplayOrder: [{
                                    name: "\u7ea2",
                                    color: "red",
                                    order: 0,
                                    idx: 1
                                }, {
                                    name: "\u9ec4",
                                    color: "yellow",
                                    order: 1,
                                    idx: 4
                                }, {
                                    name: "\u7eff",
                                    color: "green",
                                    order: 2,
                                    idx: 2
                                }, {
                                    name: "\u9752",
                                    color: "#00FFFF",
                                    order: 3,
                                    idx: 5
                                }, {
                                    name: "\u84dd",
                                    color: "blue",
                                    order: 4,
                                    idx: 3
                                }, {
                                    name: "\u7d2b",
                                    color: "purple",
                                    order: 5,
                                    idx: 6
                                }, {
                                    name: "\u767d",
                                    color: "white",
                                    order: 6,
                                    idx: 7
                                }, {
                                    name: "\u8df3\u53d8",
                                    color: "transparent",
                                    order: 7,
                                    idx: 8
                                }, {
                                    name: "\u5168\u5f69",
                                    color: "transparent",
                                    order: 8,
                                    idx: 9
                                }],
                                public: {
                                    txColor: 0,
                                    rdMode: 0,
                                    runSpeed: 10,
                                    soundVal: 20
                                },
                                item: {
                                    pyMode: 0,
                                    prjSelected: [0, 0, 0, 0],
                                    ckValues: []
                                },
                                position: {
                                    x: t,
                                    y: t
                                },
                                startPosition: {
                                    x: 0,
                                    y: 0
                                }
                            }
                        },
                        onLoad: function(e) {
                            var t = e.tag,
                                r = n.globalData.getCmdData("prjData"),
                                h = {},
                                a = r.public;
                            if (1 == t) h = {
                                public: a,
                                prjIndex: t
                            };
                            else {
                                var i = r.prjItem[t + ""];
                                h = {
                                    public: a,
                                    item: i,
                                    prjIndex: t
                                };
                                var c = this.getCkValues(h.item.prjSelected);
                                h.item["ckValues"] = c
                            }
                            this.prjIndex = h.prjIndex, this.public = h.public, this.item = h.item, 6 == this.prjIndex && this.features.showOutDoorTips && (this.showOutDoorTips = !0)
                        },
                        onReady: function() {},
                        onShow: function() {},
                        onHide: function() {},
                        onUnload: function() {},
                        computed: {
                            ntitle: {
                                get: function() {
                                    var e = this.prjTitles[this.prjIndex];
                                    return "--" == e ? e : this.$t(e)
                                }
                            }
                        },
                        methods: {
                            sendCmd: function() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                                this.refreshShow(), n.globalData.setCmdData("prjData", {
                                    prjIndex: this.prjIndex,
                                    public: this.public,
                                    item: this.item
                                }), null == e && (e = {}), e["features"] = n.globalData.getDeviceFeatures();
                                var t = h.getCmdStr(n.globalData.cmd, e),
                                    r = a.gosend(!1, t);
                                return r
                            },
                            rdColorChange: function(e) {
                                var t = e.detail.value;
                                this.public.txColor = parseInt(t), this.sendCmd()
                            },
                            btnColorChange: function(e) {
                                var t = e.currentTarget.dataset.tag;
                                this.$set(this.public, "txColor", t), this.sendCmd()
                            },
                            radioChange: function(t) {
                                var r = t.detail.value;
                                "r1" == r && (this.public.rdMode = 0), "r2" == r && (this.public.rdMode = 255), "r3" == r && (this.item.pyMode = 0), "r4" == r && (this.item.pyMode = 255), e("log", this.item, " at pages/prj/prj.js:152"), this.sendCmd()
                            },
                            slRunChange: function(e) {
                                this.$set(this.public, "runSpeed", e.detail.value), this.sendCmd()
                            },
                            slSoundChange: function(e) {
                                this.$set(this.public, "soundVal", e.detail.value), this.sendCmd()
                            },
                            getCkValues: function(e) {
                                for (var t = [], r = 0; r < e.length; r++)
                                    for (var n = e[r], h = 0; h < 16; h++) {
                                        var a = n >> h & 1;
                                        t.push(a)
                                    }
                                return t
                            },
                            getprjSelected: function(e) {
                                for (var t = 0, r = [0, 0, 0, 0], n = 0; n < e.length; n++) {
                                    var h = n % 16;
                                    1 == e[n] && (t += Math.pow(2, h)), 15 == h && (r[(n + 1) / 16 - 1] = t, t = 0)
                                }
                                return r
                            },
                            selectAutoBtnClick: function(t) {
                                e("log", t, " at pages/prj/prj.js:196");
                                for (var r = t, n = this.item.ckValues, h = 0; h < n.length; h++) 2 == r ? 1 == n[h] ? n[h] = 0 : n[h] = 1 : n[h] = 3 == r ? 0 : 1;
                                var a = this.getprjSelected(n);
                                this.$set(this.item, "prjSelected", a), this.$set(this.item, "ckValues", n), this.sendCmd()
                            },
                            checkboxChange: function(t) {
                                e("log", "checkbox\u53d1\u751fchange\u4e8b\u4ef6\uff0c\u643a\u5e26value\u503c\u4e3a\uff1a", t.detail.value, " at pages/prj/prj.js:220");
                                var r = [0, 0, 0, 0];
                                e("log", r, " at pages/prj/prj.js:222");
                                for (var n = t.detail.value, h = 0; h < n.length; h++) {
                                    var a = n[h] - 1,
                                        i = Math.floor(a / 16),
                                        c = a % 16,
                                        o = 1 << c;
                                    r[i] = r[i] | o
                                }
                                this.$set(this.item, "prjSelected", r), this.sendCmd()
                            },
                            btnSelectClick: function(e) {
                                if (0 != this.item.pyMode) {
                                    var t = e.currentTarget.dataset.tag - 1,
                                        r = this.item.ckValues,
                                        n = null;
                                    1 == r[t] ? r[t] = 0 : (r[t] = 1, n = {
                                        prjParm: {
                                            prjIndex: this.prjIndex,
                                            selIndex: t + 1
                                        }
                                    });
                                    var h = this.getprjSelected(r);
                                    this.item.prjSelected = h, this.item.ckValues = r, this.sendCmdParmsTimer && (clearTimeout(this.sendCmdParmsTimer), this.sendCmdParmsTimer = null), this.sendCmdParms(n)
                                }
                            },
                            sendCmdParms: function(e) {
                                if (!this.sendCmd(e)) {
                                    var t = this;
                                    this.sendCmdParmsTimer = setTimeout((function() {
                                        t.sendCmdParmsTimer = null, t.sendCmdParms(e)
                                    }), 100)
                                }
                            },
                            onBtnSetTouchStart: function(e) {
                                this.startPosition.x = e.touches[0].clientX - this.position.x, this.startPosition.y = e.touches[0].clientY - this.position.y
                            },
                            onBtnSetTouchMove: function(e) {
                                this.position.x = e.touches[0].clientX - this.startPosition.x, this.position.y = e.touches[0].clientY - this.startPosition.y
                            },
                            onBtnSetTouchEnd: function() {},
                            onBtnSetClick: function(e) {
                                uni.navigateTo({
                                    url: "/pages/subset/subset"
                                })
                            },
                            refreshShow: function() {
                                if (null != this.item)
                                    for (var e = 0; e < this.item.ckValues.length; e++) this.$set(this.item.ckValues, e, this.item.ckValues[e])
                            }
                        }
                    };
                t.default = i
            }).call(this, r("f3b9")["default"])
        },
        e82e: function(e) {
            e.exports = JSON.parse('{"\u8fde\u63a5\u84dd\u7259":"\u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0628\u0640BT","\u968f\u673a\u64ad\u653e":"\u062a\u0634\u063a\u064a\u0644 \u0639\u0634\u0648\u0627\u0626\u064a","\u5df2\u8fde\u63a5":"\u0645\u062a\u0635\u0644","\u672a\u8fde\u63a5":"\u063a\u064a\u0631 \u0645\u062a\u0635\u0644","\u6237\u5916\u64ad\u653e":"\u062a\u0634\u063a\u064a\u0644 \u062e\u0627\u0631\u062c\u064a","\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570...":"\u0642\u0631\u0627\u0621\u0629 \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062c\u0647\u0627\u0632...","\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25":"\u0641\u0634\u0644 \u0642\u0631\u0627\u0621\u0629 \u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a","\u91cd\u65b0\u5237\u65b0\u5217\u8868":"\u0625\u0639\u0627\u062f\u0629 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0642\u0627\u0626\u0645\u0629","\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62":"\u062c\u0627\u0631\u064a \u0627\u0644\u0628\u062d\u062b\u060c \u0627\u0646\u0642\u0631 \u0644\u0644\u0625\u064a\u0642\u0627\u0641","\u641c\u7d22\u84dd\u7259\u8bbe\u5907":"\u0627\u0644\u0628\u062d\u062b \u0639\u0646 \u0623\u062c\u0647\u0632\u0629 BT","\u5df2\u53d1\u73b0":"\u062a\u0645 \u0627\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u062c\u0647\u0627\u0632","\u7ea2":"\u0623\u062d\u0645\u0631","\u7eff":"\u0623\u062e\u0636\u0631","\u84dd":"\u0623\u0632\u0631\u0642","\u9ec4":"\u0623\u0635\u0641\u0631","\u9752":"\u0633\u0645\u0627\u0648\u064a","\u7d2b":"\u0628\u0646\u0641\u0633\u062c\u064a","\u767d":"\u0623\u0628\u064a\u0636","\u8df3\u53d8":"\u062a\u063a\u064a\u064a\u0631","\u5168\u5f69":"\u0645\u0644\u0648\u0646","\u64ad\u653e\u6a21\u5f0f":"\u0646\u0645\u0648\u0630\u062c","\u81ea\u8d70":"\u062a\u0644\u0642\u0627\u0626\u064a","\u58f0\u63a7":"\u062a\u062d\u0643\u0645 \u0628\u0627\u0644\u0635\u0648\u062a","\u81ea\u8d70\u901f\u5ea6":"\u0633\u0631\u0639\u0629","\u58f0\u63a7\u7075\u654f\u5ea6":"\u062d\u0633\u0627\u0633\u064a\u0629","\u56fe\u6848\u989c\u8272":"\u0644\u0648\u0646 \u0627\u0644\u0646\u0645\u0637","\u5f53\u524d\u989c\u8272":"\u0627\u0644\u0644\u0648\u0646 \u0627\u0644\u062d\u0627\u0644\u064a","\u5faa\u73af\u64ad\u653e":"\u062a\u0634\u063a\u064a\u0644 \u0645\u062a\u0643\u0631\u0631","\u52fe\u9009\u64ad\u653e":"\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u062a\u0634\u063a\u064a\u0644","\u5730\u5740\u7801":"\u0643\u0648\u062f \u0627\u0644\u0639\u0646\u0648\u0627\u0646","\u663e\u793a\u8303\u56f4":"\u0646\u0637\u0627\u0642 \u0627\u0644\u0639\u0631\u0636","\u56fe\u6848\u76f8\u4f4d":"\u0645\u0631\u062d\u0644\u0629 \u0627\u0644\u0646\u0645\u0637","\u6b63\u5e38\u663e\u793a":"\u0639\u0631\u0636 \u0637\u0628\u064a\u0639\u064a","XY\u4e92\u6362":"\u062a\u0628\u062f\u064a\u0644 XY","\u8c03\u5149\u8bbe\u7f6e":"\u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u0639\u062a\u064a\u0645","\u7ea2\u5149\u8c03\u5149":"\u0623\u062d\u0645\u0631","\u7eff\u5149\u8c03\u5149":"\u0623\u062e\u0636\u0631","\u84dd\u5149\u8c03\u5149":"\u0623\u0632\u0631\u0642","\u6fc0\u5149\u5149\u6e90":"\u0645\u0635\u062f\u0631 \u0627\u0644\u0644\u064a\u0632\u0631","\u5355\u8272":"\u0623\u062d\u0627\u062f\u064a","\u53cc\u8272":"\u062b\u0646\u0627\u0626\u064a","\u8c03\u5236\u6a21\u5f0f":"\u0627\u0644\u0648\u0636\u0639\u064a\u0629","\u7cfb\u7edf\u8bed\u8a00":"\u0644\u063a\u0629 \u0627\u0644\u0646\u0638\u0627\u0645","\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...":"\u0642\u0631\u0627\u0621\u0629 \u0627\u0644\u062e\u0637...","\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9...":"\u0625\u0646\u0634\u0627\u0621 \u0646\u0642\u0627\u0637 \u0627\u0644\u062a\u0646\u0633\u064a\u0642...","\u6587\u672c\u989c\u8272":"\u0644\u0648\u0646 \u0627\u0644\u0646\u0635","\u6587\u5b57\u5927\u5c0f":"\u062d\u062c\u0645 \u0627\u0644\u0646\u0635","\u663e\u793a\u89c6\u8ddd":"\u0645\u062f\u0649 \u0627\u0644\u0639\u0631\u0636","\u6d41\u6c34\u901f\u5ea6":"\u0633\u0631\u0639\u0629 \u0627\u0644\u062a\u062f\u0641\u0642","\u6295\u5c04\u65b9\u5411":"\u0627\u062a\u062c\u0627\u0647 \u0627\u0644\u0625\u0633\u0642\u0627\u0637","\u6c34\u5e73\u6295\u5c04":"\u0625\u0633\u0642\u0627\u0637 \u0623\u0641\u0642\u064a","\u5782\u76f4\u6295\u5c04":"\u0625\u0633\u0642\u0627\u0637 \u0639\u0645\u0648\u062f\u064a","\u8d85\u51fa\u6700\u5927\u70b9\u6570":"\u062a\u062c\u0627\u0648\u0632 \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u0646\u0642\u0627\u0637","\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931":"\u0627\u0644\u062a\u062c\u0627\u0648\u0632 \u0633\u064a\u062a\u0645 \u0641\u0642\u062f\u0627\u0646\u0647","\u7ebf\u6761\u989c\u8272":"\u0644\u0648\u0646 \u0627\u0644\u062e\u0637","\u6e05\u7a7a":"\u062a\u0641\u0631\u064a\u063a","\u56de\u9000":"\u062a\u0631\u0627\u062c\u0639","\u53d1\u9001":"\u0625\u0631\u0633\u0627\u0644","\u6700\u591a20\u4e2a\u573a\u666f":"20 \u0645\u0634\u0647\u062f \u0643\u062d\u062f \u0623\u0642\u0635\u0649","\u63d0\u793a":"\u062a\u0646\u0628\u064a\u0647","\u662f\u5426\u5220\u9664\u573a\u666f":"\u0647\u0644 \u062a\u0631\u064a\u062f \u062d\u0630\u0641 \u0627\u0644\u0645\u0634\u0647\u062f\u061f","\u7528\u6237\u70b9\u51fb\u53d6\u6d88":"\u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0623\u0644\u063a\u0649","-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- \u0627\u0644\u0642\u0627\u0626\u0645\u0629 \u0641\u0627\u0631\u063a\u0629 --","\u573a\u666f":"\u0645\u0634\u0647\u062f","\u79d2":"\u062b\u0627\u0646\u064a\u0629","\u5220\u9664":"\u062d\u0630\u0641","\u7f16\u8f91":"\u062a\u062d\u0631\u064a\u0631","\u65b0\u589e\u573a\u666f":"\u0625\u0636\u0627\u0641\u0629 \u0645\u0634\u0647\u062f","\u56fe\u6848\u9009\u62e9":"\u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u0646\u0645\u0637","\u76f4\u7ebf\u7c7b\u56fe\u6848":"\u0646\u0645\u0637 \u062e\u0637\u0648\u0637","\u5706\u5f27\u7c7b\u56fe\u6848":"\u0623\u0642\u0648\u0627\u0633","\u4eae\u70b9\u56fe\u6848":"\u0646\u0642\u0627\u0637 \u0645\u0636\u064a\u0626\u0629","\u6253\u70b9\u56fe\u6848":"\u0646\u0642\u0627\u0637","\u5723\u8bde\u56fe\u6848":"\u0639\u064a\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f","\u52a8\u753b\u7ec4\u522b1":"\u0645\u062c\u0645\u0648\u0639\u0629 1","\u52a8\u753b\u7ec4\u522b2":"\u0645\u062c\u0645\u0648\u0639\u0629 2","\u52a8\u753b\u7ec4\u522b3":"\u0645\u062c\u0645\u0648\u0639\u0629 3","\u52a8\u753b\u7ec4\u522b4":"\u0645\u062c\u0645\u0648\u0639\u0629 4","\u52a8\u753b\u7ec4\u522b5":"\u0645\u062c\u0645\u0648\u0639\u0629 5","\u767d\u8272":"\u0623\u0628\u064a\u0636","\u7ea2\u8272":"\u0623\u062d\u0645\u0631","\u84dd\u8272":"\u0623\u0632\u0631\u0642","\u7c89\u8272":"\u0648\u0631\u062f\u064a","\u9752\u8272":"\u0633\u0645\u0627\u0648\u064a","\u9ec4\u8272":"\u0623\u0635\u0641\u0631","\u7eff\u8272":"\u0623\u062e\u0636\u0631","\u6574\u4f53\u989c\u8272\u6362\u8272":"\u062a\u063a\u064a\u064a\u0631 \u0634\u0627\u0645\u0644","\u4e03\u5f69\u8679\u989c\u8272":"\u0642\u0648\u0633 \u0642\u0632\u062d","2\u5206\u6bb5\u989c\u8272":"\u062b\u0646\u0627\u0626\u064a \u0627\u0644\u0623\u0644\u0648\u0627\u0646","3\u5206\u6bb5\u989c\u8272":"\u062b\u0644\u0627\u062b\u064a \u0627\u0644\u0623\u0644\u0648\u0627\u0646","4\u5206\u6bb5\u989c\u8272":"\u0631\u0628\u0627\u0639\u064a \u0627\u0644\u0623\u0644\u0648\u0627\u0646","8\u5206\u6bb5\u989c\u8272":"\u062b\u0645\u0627\u0646\u064a \u0627\u0644\u0623\u0644\u0648\u0627\u0646","16\u5206\u6bb5\u989c\u8272":"16 \u0644\u0648\u0646\u064b\u0627","32\u5206\u6bb5\u989c\u8272":"32 \u0644\u0648\u0646\u064b\u0627","\u989c\u8272\u6e10\u7ed8":"\u062a\u062f\u0631\u062c \u0627\u0644\u0623\u0644\u0648\u0627\u0646","\u4e0d\u6d41\u6c34":"\u0628\u062f\u0648\u0646 \u062a\u062f\u0641\u0642","\u6b63\u5411\u6d41\u6c34":"\u062a\u062f\u0641\u0642 \u0623\u0645\u0627\u0645\u064a","\u53cd\u5411\u6d41\u6c34":"\u062a\u062f\u0641\u0642 \u062e\u0644\u0641\u064a","\u56fe\u6848\u5927\u5c0f":"\u062d\u062c\u0645","\u7f29\u653e\u624b\u52a8\u9009\u62e9":"\u062a\u0643\u0628\u064a\u0631 \u064a\u062f\u0648\u064a","\u7531\u5c0f\u5230\u5927\u7f29\u653e":"\u062a\u0643\u0628\u064a\u0631 \u062a\u0635\u0627\u0639\u062f\u064a","\u7531\u5927\u5230\u5c0f\u7f29\u653e":"\u062a\u0643\u0628\u064a\u0631 \u062a\u0646\u0627\u0632\u0644\u064a","\u5927\u5c0f\u5faa\u73af\u7f29\u653e":"\u062f\u0627\u0626\u0631\u064a \u0627\u0644\u062a\u0643\u0628\u064a\u0631","\u4e0d\u89c4\u5219\u7f29\u653e\u4e00":"\u062a\u0643\u0628\u064a\u0631 \u0639\u0634\u0648\u0627\u0626\u064a 1","\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c":"\u062a\u0643\u0628\u064a\u0631 \u0639\u0634\u0648\u0627\u0626\u064a 2","\u4e0d\u89c4\u5219\u7f29\u653e\u4e09":"\u062a\u0643\u0628\u064a\u0631 \u0639\u0634\u0648\u0627\u0626\u064a 3","\u65cb\u8f6c\u89d2\u5ea6":"\u0632\u0627\u0648\u064a\u0629 \u0627\u0644\u062f\u0648\u0631\u0627\u0646","\u6b63\u65cb\u8f6c\u901f\u5ea6":"\u062f\u0648\u0631\u0627\u0646 \u0625\u064a\u062c\u0627\u0628\u064a","\u53cd\u65cb\u8f6c\u901f\u5ea6":"\u0627\u0644\u0645\u0636\u0627\u062f\u0629 \u0644\u0644\u062f\u0648\u0631\u0627\u0646","\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e":"\u0627\u0646\u0639\u0643\u0627\u0633 \u0623\u0641\u0642\u064a","\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6":"\u0633\u0631\u0639\u0629 \u0627\u0644\u0648\u062c\u0647","\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e":"\u0627\u0646\u0639\u0643\u0627\u0633 \u0639\u0645\u0648\u062f\u064a","\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6":"\u0633\u0631\u0639\u0629 \u0627\u0644\u0648\u062c\u0647","\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c":"\u062f\u0648\u0631\u0627\u0646 \u0623\u0641\u0642\u064a","\u6c34\u5e73\u79fb\u52a8":"\u0645\u0650\u0642\u0644\u0627\u0629","\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c":"\u062f\u0648\u0631\u0627\u0646 \u0639\u0645\u0648\u062f\u064a","\u5782\u76f4\u79fb\u52a8":"\u062a\u062d\u0631\u0643","\u65e0\u6ce2\u6d6a":"\u0644\u0627 \u0645\u0648\u062c\u0627\u062a","\u6ce2\u6d6a\u5e45\u5ea61":"\u0645\u0648\u062c\u0629 1","\u6ce2\u6d6a\u5e45\u5ea62":"\u0645\u0648\u062c\u0629 2","\u6ce2\u6d6a\u5e45\u5ea63":"\u0645\u0648\u062c\u0629 3","\u6ce2\u6d6a\u5e45\u5ea64":"\u0645\u0648\u062c\u0629 4","\u6ce2\u6d6a\u5e45\u5ea65":"\u0645\u0648\u062c\u0629 5","\u6ce2\u6d6a\u5e45\u5ea66":"\u0645\u0648\u062c\u0629 6","\u6ce2\u6d6a\u5e45\u5ea67":"\u0645\u0648\u062c\u0629 7","\u6ce2\u6d6a\u5e45\u5ea68":"\u0645\u0648\u062c\u0629 8","\u65e0\u6e10\u7ed8":"\u0628\u062f\u0648\u0646 \u062a\u062f\u0631\u062c","\u624b\u52a8\u6e10\u7ed81":"\u062a\u062f\u0631\u062c \u064a\u062f\u0648\u064a 1","\u624b\u52a8\u6e10\u7ed82":"\u062a\u062f\u0631\u062c \u064a\u062f\u0648\u064a 2","\u81ea\u52a8\u6e10\u7ed81":"\u062a\u062f\u0631\u062c \u062a\u0644\u0642\u0627\u0626\u064a 1","\u81ea\u52a8\u6e10\u7ed82":"\u062a\u062f\u0631\u062c \u062a\u0644\u0642\u0627\u0626\u064a 2","\u81ea\u52a8\u6e10\u7ed83":"\u062a\u062f\u0631\u062c \u062a\u0644\u0642\u0627\u0626\u064a 3","\u81ea\u52a8\u6e10\u7ed84":"\u062a\u062f\u0631\u062c \u062a\u0644\u0642\u0627\u0626\u064a 4","\u56fe\u5f62\u5206\u7ec4":"\u0645\u062c\u0645\u0648\u0639\u0629","\u56fe\u5f62":"\u0623\u0634\u0643\u0627\u0644","\u989c\u8272":"\u0627\u0644\u0623\u0644\u0648\u0627\u0646","\u989c\u8272\u6d41\u6c34":"\u062a\u0644\u0648\u0646","\u56fe\u5f62\u5927\u5c0f":"\u062d\u062c\u0645","\u56fe\u5f62\u7f29\u653e":"\u062a\u062d\u062c\u064a\u0645","\u56fe\u5f62\u65cb\u8f6c":"\u0627\u0633\u062a\u062f\u0627\u0631\u0629","\u6c34\u5e73\u7ffb\u8f6c":"\u0623\u0641\u0642\u064a","\u5782\u76f4\u7ffb\u8f6c":"\u0639\u0645\u0648\u062f\u064a","\u6ce2\u6d6a":"\u0645\u0648\u062c\u0629","\u6e10\u7ed8":"\u062a\u062f\u0631\u062c","\u64ad\u653e\u65f6\u957f":"\u0645\u062f\u0629","\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62...":"\u062a\u062d\u0645\u064a\u0644...","\u53d6\u6d88":"\u0625\u0644\u063a\u0627\u0621","\u786e\u5b9a":"\u062a\u0623\u0643\u064a\u062f","\u9009\u62e9\u56fe\u5f62":"\u064a\u062e\u062a\u0627\u0631","\u901a\u9053\u590d\u4f4d":"\u062a\u062e\u0641\u064a\u0636","\u5b8b\u4f53":"\u0633\u0644\u0627\u0644\u0629 \u0623\u063a\u0646\u064a\u0629","\u76f4\u7ebf":"\u0627\u0644\u0623\u0633\u0644\u0627\u0643","\u5706\u5f27":"\u0642\u0648\u0633","\u4eae\u70b9":"\u0646\u0642\u0637\u0629","\u6253\u70b9":"\u0646\u0642\u0627\u0637","\u5723\u8bde":"\u0639\u064a\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f","\u52a8\u753bA":"\u0643\u0627\u0631\u062a\u0648\u0646 \u0623","\u52a8\u753bB":"\u0643\u0627\u0631\u062a\u0648\u0646 \u0628","\u5f69\u8679":"\u0642\u0648\u0633 \u0642\u0632\u062d","\u9ed8\u8ba4":"\u0627\u0641\u062a\u0631\u0627\u0636\u064a","\u8f6f\u4ef6\u7248\u672c":"\u0625\u0635\u062f\u0627\u0631","\u8fde\u63a5":"\u0627\u0644\u0627\u062a\u0635\u0627\u0644","\u8bbe\u7f6e":"\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a","\u624b\u7ed8\u6d82\u9e26":"\u0631\u0633\u0645 \u064a\u062f\u0648\u064a","\u6587\u672c\u64ad\u653e":"\u062a\u0634\u063a\u064a\u0644 \u0646\u0635","\u4e2a\u6027\u7f16\u7a0b":"\u0628\u0631\u0645\u062c\u0629 \u0634\u062e\u0635\u064a\u0629","\u52a8\u753b\u64ad\u653e":"\u0627\u0644\u0631\u0633\u0648\u0645 \u0627\u0644\u0645\u062a\u062d\u0631\u0643\u0629","\u7ebf\u6761\u64ad\u653e":"\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u062e\u0637\u0648\u0637","\u5723\u8bde\u64ad\u653e":"\u0639\u064a\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f","DMX":"DMX","\u914d\u7f6e":"\u0627\u0644\u0625\u0639\u062f\u0627\u062f","\u8fd4\u56de":"\u0631\u062c\u0648\u0639","\u70b9\u6211\u8fde\u63a5":"\u0627\u0646\u0642\u0631 \u0644\u0644\u0627\u062a\u0635\u0627\u0644","\u84dd\u7259\u672a\u8fde\u63a5":"\u063a\u064a\u0631 \u0645\u062a\u0635\u0644 \u0628\u0627\u0644\u0628\u0644\u0648\u062a\u0648\u062b","\u8bbe\u5907":"\u062c\u0647\u0627\u0632","\u8bf7\u8f93\u5165\u6587\u5b57":"\u0627\u0644\u0631\u062c\u0627\u0621 \u0625\u062f\u062e\u0627\u0644 \u0627\u0644\u0646\u0635","\u9884\u7559\u65e0\u529f\u80fd":"\u0644\u0627 \u064a\u0648\u062c\u062f \u0648\u0638\u064a\u0641\u0629 \u0645\u062d\u062f\u062f\u0629","\u91cd\u7f6e":"\u0625\u0639\u0627\u062f\u0629 \u062a\u0639\u064a\u064a\u0646","\u84dd\u7259\u8fde\u63a5":"\u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0628\u0627\u0644\u0628\u0644\u0648\u062a\u0648\u062b","\u5168\u9009":"\u0627\u0644\u062c\u0645\u064a\u0639","\u53cd\u9009":"\u064a\u0639\u0643\u0633","\u6e05\u9664":"\u0645\u0633\u062d","\u5b57\u6570":"\u0643\u0644\u0645\u0629","\u70b9\u6570":"\u0646\u0642\u0637\u0629","\u9884\u89c8":"\u0645\u0639\u0627\u064a\u0646\u0629","\u573a\u666f\u7ba1\u7406":"\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0645\u0634\u0627\u0647\u062f","\u52a0\u8f7d\u4e2d":"\u062c\u0627\u0631\u064d \u0627\u0644\u062a\u062d\u0645\u064a\u0644","\u573a\u666f\u7f16\u8f91":"\u062a\u062d\u0631\u064a\u0631 \u0627\u0644\u0645\u0634\u0647\u062f","\u8bf7\u5148\u8fde\u63a5\u84dd\u7259":"\u0627\u0644\u0631\u062c\u0627\u0621 \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0628\u0627\u0644\u0628\u0644\u0648\u062a\u0648\u062b \u0623\u0648\u0644\u0627\u064b","\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b":"\u0627\u0644\u062c\u0647\u0627\u0632 \u0627\u0644\u062d\u0627\u0644\u064a \u063a\u064a\u0631 \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u0639\u0631\u0641","DMX\u5730\u5740\u7801":"\u0631\u0645\u0632 \u0627\u0644\u0639\u0646\u0648\u0627\u0646","\u8bf7\u5148\u6253\u5f00\u8bbe\u5907":"\u064a\u0631\u062c\u0649 \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u062c\u0647\u0627\u0632 \u0623\u0648\u0644\u0627\u064b","\u5355\u7ebf\u5b57\u4f53":"\u062e\u0637 \u0648\u0627\u062d\u062f","\u6b63\u5728\u53d1\u9001":"\u062c\u0627\u0631\u064a \u0627\u0644\u0625\u0631\u0633\u0627\u0644","\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528":"\u0627\u0644\u0631\u062c\u0627\u0621 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u062a\u0645\u0643\u064a\u0646 \u0628\u0644\u0648\u062a\u0648\u062b \u0627\u0644\u0647\u0627\u062a\u0641","\u8be5\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587\u663e\u793a":"\u0647\u0630\u0627 \u0627\u0644\u062e\u0637 \u0644\u0627 \u064a\u062f\u0639\u0645 \u0639\u0631\u0636 \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0635\u064a\u0646\u064a\u0629","\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c":"\u0628\u0633\u0628\u0628 \u0627\u0644\u062d\u062f\u0648\u062f \u0627\u0644\u0633\u0639\u0629\u060c \u0642\u062f \u0644\u0627 \u062a\u0643\u0648\u0646 \u0628\u0639\u0636 \u0627\u0644\u062d\u0631\u0648\u0641 \u0627\u0644\u0635\u064a\u0646\u064a\u0629 \u0645\u062a\u0648\u0641\u0631\u0629 \u0641\u064a \u0627\u0644\u0645\u0643\u062a\u0628\u0629\u060c \u064a\u0631\u062c\u0649 \u0627\u0644\u0627\u0646\u062a\u0642\u0627\u0644 \u0625\u0644\u0649 \u0627\u0644\u0625\u0635\u062f\u0627\u0631 \u0627\u0644\u062a\u0637\u0628\u064a\u0642","\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650":"\u064a\u0631\u062c\u0649 \u062a\u0639\u064a\u064a\u0646 \u0625\u0630\u0646 \u0627\u0644\u0645\u0648\u0642\u0639 \u0644\u0644\u062a\u0637\u0628\u064a\u0642","\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650":"\u064a\u0631\u062c\u0649 \u062a\u0639\u064a\u064a\u0646 \u0625\u0630\u0646 \u0628\u0644\u0648\u062a\u0648\u062b \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0627\u0644\u0635\u063a\u064a\u0631","\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38":"\u0627\u0633\u062a\u062b\u0646\u0627\u0621 \u0642\u0631\u0627\u0621\u0629 \u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u062c\u0647\u0627\u0632","\u9009\u62e9":"\u0627\u062e\u062a\u064a\u0627\u0631","\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247":"\u062a\u0639\u064a\u064a\u0646 \u0635\u0648\u0631\u0629 \u0627\u0644\u062e\u0644\u0641\u064a\u0629","\u53d1\u9001\u5931\u8d25":"\u0641\u0634\u0644 \u0627\u0644\u0625\u0631\u0633\u0627\u0644","\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165":"\u0644\u0642\u062f \u062a\u062c\u0627\u0648\u0632\u062a \u0637\u0648\u0644 \u0627\u0644\u0646\u0635 100\u060c \u064a\u0631\u062c\u0649 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0625\u062f\u062e\u0627\u0644","\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165":"\u0644\u0642\u062f \u062a\u062c\u0627\u0648\u0632\u062a \u0639\u062f\u062f \u0646\u0642\u0627\u0637 \u0627\u0644\u0646\u0635 2048\u060c \u064a\u0631\u062c\u0649 \u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0625\u062f\u062e\u0627\u0644","\u7b2c":"\u0645\u062c\u0645\u0648\u0639\u0629","\u7ec4\u6587\u5b57":"","\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5":"\u064a\u0631\u062c\u0649 \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u062e\u0637 \u0623\u0648 \u0627\u0644\u0646\u0635 \u0648\u062d\u0627\u0648\u0644 \u0645\u0631\u0629 \u0623\u062e\u0631\u0649","\u4e0d\u652f\u6301\u6587\u672c":"\u0627\u0644\u0646\u0635 \u063a\u064a\u0631 \u0645\u062f\u0639\u0648\u0645","\u7ec4\u5b57\u4f53":"\u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u062e\u0637\u0648\u0637","\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u53d1\u9001":"\u0627\u0644\u0646\u0635 \u0641\u0627\u0631\u063a\u060c \u0623\u062f\u062e\u0644 \u0648\u0623\u0631\u0633\u0644","\u662f\u5426\u5220\u9664\u7b2c":"\u062d\u0630\u0641\u061f","\u7ec4":"\u0645\u062c\u0645\u0648\u0639\u0629","\u6700\u591a4\u4e2a\u5206\u7ec4":"4 \u0645\u062c\u0645\u0648\u0639\u0627\u062a \u0643\u062d\u062f \u0623\u0642\u0635\u0649","\u6b63\u5728\u8fde\u63a5...":"\u064a\u062a\u0635\u0644...","\u8fde\u63a5\u5931\u8d25":"\u0641\u0634\u0644 \u0627\u0644\u0627\u062a\u0635\u0627\u0644","\u5b57\u4f53\u9009\u62e9":"\u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u062e\u0637","\u601d\u6e90\u9ed1\u4f53":"\u0628\u062e\u0637 \u063a\u0627\u0645\u0642","\u601d\u6e90\u9ed1\u4f531":"\u0648\u062c\u0647 \u0639\u0631\u064a\u0636 1","\u601d\u6e90\u9ed1\u4f532":"\u0648\u062c\u0647 \u0639\u0631\u064a\u0636 2","\u601d\u6e90\u9ed1\u4f533":"\u0648\u062c\u0647 \u0639\u0631\u064a\u0636 3","\u601d\u6e90\u9ed1\u4f534":"\u0648\u062c\u0647 \u0639\u0631\u064a\u0636 4","\u601d\u6e90\u9ed1\u4f535":"\u0648\u062c\u0647 \u0639\u0631\u064a\u0636 5","\u601d\u6e90\u9ed1\u4f536":"\u0648\u062c\u0647 \u0639\u0631\u064a\u0636 6","\u601d\u6e90\u9ed1\u4f537":"\u0648\u062c\u0647 \u0639\u0631\u064a\u0636 7","font_note_1001":"\u0627\u0644\u0635\u064a\u0646\u064a\u0629\u060c \u0627\u0644\u0625\u0646\u062c\u0644\u064a\u0632\u064a\u0629\u060c \u0627\u0644\u0625\u0633\u0628\u0627\u0646\u064a\u0629\u060c \u0627\u0644\u0628\u0631\u062a\u063a\u0627\u0644\u064a\u0629\u060c \u0627\u0644\u0623\u0644\u0645\u0627\u0646\u064a\u0629\u060c \u0627\u0644\u0641\u0631\u0646\u0633\u064a\u0629","font_note_1002":"\u0625\u0646\u062c\u0644\u064a\u0632\u064a\u060c \u0625\u0633\u0628\u0627\u0646\u064a\u060c \u0631\u0648\u0633\u064a\u060c \u0628\u0631\u062a\u063a\u0627\u0644\u064a\u060c \u0623\u0644\u0645\u0627\u0646\u064a\u060c \u0641\u0631\u0646\u0633\u064a\u060c \u0641\u064a\u062a\u0646\u0627\u0645\u064a\u060c \u0647\u0646\u062f\u064a\u060c \u0628\u0646\u063a\u0627\u0644\u064a","font_note_1003":"\u0627\u0644\u0625\u0646\u062c\u0644\u064a\u0632\u064a\u0629\u060c \u0627\u0644\u0635\u064a\u0646\u064a\u0629\u060c \u0627\u0644\u0625\u0633\u0628\u0627\u0646\u064a\u0629\u060c \u0627\u0644\u0631\u0648\u0633\u064a\u0629\u060c \u0627\u0644\u0628\u0631\u062a\u063a\u0627\u0644\u064a\u0629\u060c \u0627\u0644\u064a\u0627\u0628\u0627\u0646\u064a\u0629\u060c \u0627\u0644\u0623\u0644\u0645\u0627\u0646\u064a\u0629","font_note_1004":"\u0627\u0644\u0635\u064a\u0646\u064a\u0629\u060c \u0627\u0644\u0625\u0646\u062c\u0644\u064a\u0632\u064a\u0629\u060c \u0627\u0644\u0625\u0633\u0628\u0627\u0646\u064a\u0629\u060c \u0627\u0644\u0628\u0631\u062a\u063a\u0627\u0644\u064a\u0629\u060c \u0627\u0644\u0623\u0644\u0645\u0627\u0646\u064a\u0629\u060c \u0627\u0644\u0641\u0631\u0646\u0633\u064a\u0629","font_note_1005":"\u0627\u0644\u0625\u0646\u062c\u0644\u064a\u0632\u064a\u0629 \u0627\u0644\u0635\u064a\u0646\u064a\u0629","font_note_1006":"\u0625\u0646\u062c\u0644\u064a\u0632\u064a\u060c \u064a\u0627\u0628\u0627\u0646\u064a\u060c \u0643\u0648\u0631\u064a","font_note_1007":"\u0639\u0631\u0628\u064a","\u4fdd\u7559":"\u0627\u062d\u062a\u0641\u0627\u0638","\u56fe\u6848\u521d\u59cb\u989c\u8272":"\u0644\u0648\u0646 \u0627\u0644\u0646\u0645\u0637 \u0627\u0644\u0623\u0648\u0644\u064a","\u6df7\u8272":"\u062e\u0644\u0637 \u0627\u0644\u0623\u0644\u0648\u0627\u0646","\u7b14\u753b\u5c11\uff0c\u65e0\u95ea\u70c1\uff0c\u63a8\u8350\u4f7f\u7528":"\u0642\u0644\u064a\u0644 \u0627\u0644\u062e\u0637\u0648\u0637\u060c \u0628\u062f\u0648\u0646 \u0648\u0645\u064a\u0636\u060c \u0645\u0648\u0635\u0649 \u0628\u0647","\u5df2\u65ad\u5f00\u8fde\u63a5":"\u062a\u0645 \u0642\u0637\u0639 \u0627\u0644\u0627\u062a\u0635\u0627\u0644","\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c":"\u0623\u062f\u062e\u0644 \u0642\u064a\u0645\u0629 \u0628\u064a\u0646 1-255","\u6587\u5b57\u7cbe\u5ea6":"\u062f\u0642\u0629 \u0627\u0644\u0646\u0635","\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6":"\u062f\u0642\u0629 \u0627\u0644\u0631\u0633\u0645 \u0627\u0644\u0646\u0635\u064a","\u7cbe\u5ea6":"\u062f\u0642\u0629","\u9009\u62e9\u56fe\u7247":"\u064a\u062e\u062a\u0627\u0631","\u8bbe\u4e3a\u80cc\u666f":"\u062e\u0644\u0641\u064a\u0629","\u8bc6\u522b\u56fe\u6848":"\u062a\u0639\u0631\u064a\u0641","\u63cf\u8fb9":"\u0631\u0633\u0645 \u0627\u0644\u062e\u0637","\u6b63\u5728\u5904\u7406\u4e2d":"\u064a\u0639\u0627\u0644\u062c","\u5f53\u524d\u673a\u578b":"\u0637\u0631\u0627\u0632 \u062d\u0627\u0644\u064a","hand_draw_tips":"** \u0627\u0633\u062a\u062e\u062f\u0645 \u0625\u0635\u0628\u0639\u0643 \u0644\u0644\u0633\u062d\u0628 \u0645\u0646 \u0627\u0644\u0645\u0646\u0637\u0642\u0629 \u0627\u0644\u0641\u0627\u0631\u063a\u0629 \u0646\u062d\u0648 \u0627\u0644\u0647\u062f\u0641 \u0644\u062a\u062d\u062f\u064a\u062f\u0647 || ** \u064a\u0645\u0643\u0646 \u062a\u0643\u0628\u064a\u0631\u060c \u062a\u0635\u063a\u064a\u0631\u060c \u062a\u062d\u0631\u064a\u0643\u060c \u062a\u063a\u064a\u064a\u0631 \u0627\u0644\u0644\u0648\u0646\u060c \u062d\u0630\u0641 \u0627\u0644\u0646\u0645\u0637 \u0627\u0644\u0645\u062d\u062f\u062f","\u4e0d\u518d\u63d0\u793a":"\u0644\u0627 \u062a\u0639\u0627\u062f \u0627\u0644\u062a\u0646\u0628\u064a\u0647","out_door_tips1":"1-30 \u0645\u0639\u0644\u0645","out_door_tips2":"31-40 \u0634\u0641\u0642 \u0642\u0637\u0628\u064a","out_door_tips3":"41-50 \u0646\u0641\u0642 \u0627\u0644\u0632\u0645\u0646","\u6587\u4ef6\u540d":"\u0627\u0633\u0645 \u0627\u0644\u0645\u0644\u0641","\u4fdd\u5b58\u6587\u4ef6":"\u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641","\u9009\u62e9\u6587\u4ef6":"\u0627\u062e\u062a\u0631 \u0645\u0644\u0641","\u8bf7\u8f93\u5165\u6587\u4ef6\u540d":"\u0623\u062f\u062e\u0644 \u0627\u0633\u0645 \u0627\u0644\u0645\u0644\u0641","\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d":"\u0623\u062f\u062e\u0644 \u0627\u0633\u0645 \u062c\u062f\u064a\u062f","\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a":"\u0627\u0633\u0645 \u0627\u0644\u0645\u0644\u0641 \u0641\u0627\u0631\u063a","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165":"\u0627\u0644\u0645\u0644\u0641 \u0645\u0648\u062c\u0648\u062f\u060c \u0623\u062f\u062e\u0644 \u0627\u0633\u0645\u0627\u064b \u062c\u062f\u064a\u062f\u0627\u064b","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed":"\u0627\u0644\u0645\u0644\u0641 \u0645\u0648\u062c\u0648\u062f\u060c \u0645\u062a\u0627\u0628\u0639\u0629\u061f","\u4fdd\u5b58\u6210\u529f":"\u062d\u0641\u0638 \u0646\u0627\u062c\u062d","\u4fdd\u5b58\u5931\u8d25":"\u0641\u0634\u0644 \u0627\u0644\u062d\u0641\u0638","\u4fee\u6539\u6210\u529f":"\u062a\u0639\u062f\u064a\u0644 \u0646\u0627\u062c\u062d","\u4fee\u6539\u5931\u8d25":"\u0641\u0634\u0644 \u0627\u0644\u062a\u0639\u062f\u064a\u0644","\u5220\u9664\u6210\u529f":"\u062d\u0630\u0641 \u0646\u0627\u062c\u062d","\u5220\u9664\u5931\u8d25":"\u0641\u0634\u0644 \u0627\u0644\u062d\u0630\u0641","\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301":"\u0627\u0644\u0637\u0631\u0627\u0632 \u063a\u064a\u0631 \u0645\u062f\u0639\u0648\u0645","text_time_range":"\u0646\u0637\u0627\u0642 1-25.5","\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848":"\u0641\u0634\u0644 \u0627\u0644\u062a\u0639\u0631\u0641","\u8bf7\u9009\u62e9\u6587\u4ef6":"\u064a\u0631\u062c\u0649 \u062a\u062d\u062f\u064a\u062f \u0645\u0644\u0641.","\u6587\u4ef6\u6570":"\u0645\u0644\u0641","\u53e6\u5b58\u6587\u4ef6":"\u062d\u0641\u0638 \u0628\u0627\u0633\u0645","\u5220\u9664\u6240\u9009\u6587\u4ef6":"\u062d\u0630\u0641 \u0627\u0644\u0645\u0644\u0641 \u0627\u0644\u0645\u062d\u062f\u062f","Select-File":"\u0627\u062e\u062a\u064a\u0627\u0631","\u6447\u5934\u8bbe\u7f6e":"\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u062d\u0631\u0643\u0629 \u0627\u0644\u0631\u0623\u0633","\u6447\u5934\u6a21\u5f0f":"\u0648\u0636\u0639","\u6447\u5934\u76f8\u4f4d":"\u0645\u0631\u062d\u0644\u0629","\u81ea\u52a8":"\u062a\u0644\u0642\u0627\u0626\u064a","\u624b\u52a8":"\u064a\u062f\u0648\u064a","X\u7c97\u8c03":"\u062e\u0634\u0646 X","X\u7ec6\u8c03":"\u062f\u0642\u064a\u0642 X","Y\u7c97\u8c03":"\u062e\u0634\u0646 Y","Y\u7ec6\u8c03":"\u062f\u0642\u064a\u0642 Y","\u6c34\u5e73\u7535\u673a":"\u0627\u0644\u0627\u0644\u0623\u0641\u0642\u064a","\u6c34\u5e73\u5fae\u8c03":"\u062f\u0642\u064a\u0642 X","\u5782\u76f4\u7535\u673a":"\u0627\u0644\u0639\u0645\u0648\u062f\u064a","\u5782\u76f4\u5fae\u8c03":"\u062f\u0642\u064a\u0642 Y","\u7535\u673a\u901f\u5ea6":"\u0633\u0631\u0639\u0629","\u6d41\u6c34\u65b9\u5411":"\u0627\u062a\u062c\u0627\u0647 \u0627\u0644\u062a\u062f\u0641\u0642","\u963f\u62c9\u4f2f\u8bed\u65b9\u5411":"\u0644\u0639\u0631\u0628\u064a","\u9ed8\u8ba4\u65b9\u5411":"\u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a","\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939":"\u062d\u0641\u0638 \u0641\u064a \u0627\u0644\u0645\u062c\u0644\u062f","\u9009\u62e9\u5217\u8868":"\u0627\u062e\u062a\u064a\u0627\u0631","\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0":"\u064a\u0631\u062c\u0649 \u0625\u062f\u062e\u0627\u0644 \u0627\u0633\u0645 \u0627\u0644\u0645\u062c\u0645\u0648\u0639\u0629","\u64ad\u653e\u5217\u8868":"\u0642\u0627\u0626\u0645\u0629","\u4fdd\u5b58":"\u062d\u0641\u0638","\u6dfb\u52a0":"\u0625\u0636\u0627\u0641\u0629","\u6279\u91cf\u8bbe\u7f6e":"\u0628\u0627\u0644\u062c\u0645\u0644\u0629","\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0":"\u064a\u0631\u062c\u0649 \u0625\u062f\u062e\u0627\u0644 \u0627\u0633\u0645 \u0627\u0644\u0642\u0627\u0626\u0645\u0629","ALL":"\u0627\u0644\u0643\u0644","\u5217\u8868\u7f16\u8f91":"\u062a\u062d\u0631\u064a\u0631 \u0627\u0644\u0642\u0627\u0626\u0645\u0629","\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57":"\u064a\u0631\u062c\u0649 \u0625\u062f\u062e\u0627\u0644 \u0631\u0642\u0645 \u0628\u064a\u0646 0.1 \u0648 25.5","\u6dfb\u52a0\u81f3\u65b0\u5217\u8868":"\u0642\u0627\u0626\u0645\u0629 \u062c\u062f\u064a\u062f\u0629","\u7acb\u5373\u64ad\u653e":"\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0622\u0646","\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed":"\u0633\u064a\u062a\u0645 \u062d\u0630\u0641 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0645\u0642\u0627\u0628\u0644\u0629 \u060c \u0627\u0644\u0627\u0633\u062a\u0645\u0631\u0627\u0631","-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- \u0627\u0644\u0642\u0627\u0626\u0645\u0629 \u0641\u0627\u0631\u063a\u0629 --"}')
        },
        e9e3: function(e, t, r) {
            e.exports = r.p + "static/imgs/search.png"
        },
        ea21: function(e) {
            e.exports = JSON.parse('{"\u8fde\u63a5\u84dd\u7259":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Bluetooth","\u968f\u673a\u64ad\u653e":"\u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439","\u5df2\u8fde\u63a5":"\u041f\u043e\u0434\u043a.","\u672a\u8fde\u63a5":"\u041d\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043e","\u6237\u5916\u64ad\u653e":"\u041e\u0442\u043a\u0440\u044b\u0442\u043e\u0435","\u6b63\u5728\u8bfb\u53d6\u8bbe\u5907\u53c2\u6570...":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430...","\u8bfb\u8bbe\u5907\u53c2\u6570\u5931\u8d25":"\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430","\u91cd\u65b0\u5237\u65b0\u5217\u8868":"\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a","\u6b63\u5728\u641c\u7d22\uff0c\u70b9\u51fb\u505c\u6b62":"\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \u041e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c","\u641c\u7d22\u84dd\u7259\u8bbe\u5907":"\u041f\u043e\u0438\u0441\u043a Bluetooth \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432","\u5df2\u53d1\u73b0":"\u041e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u043e","\u7ea2":"\u041a\u0440\u0430\u0441.","\u7eff":"\u0417\u0435\u043b\u0435.","\u84dd":"\u0421\u0438\u043d\u0438\u0439","\u9ec4":"\u0416\u0435\u043b\u0442.","\u9752":"\u0426\u0438\u0430\u043d","\u7d2b":"\u041f\u0443\u0440\u043f.","\u767d":"\u0411\u0435\u043b\u044b.","\u8df3\u53d8":"\u041f\u0435\u0440\u0435.","\u5168\u5f69":"\u041f\u043e\u043b\u043d\u043e.","\u64ad\u653e\u6a21\u5f0f":"\u041c\u043e\u0434\u0435\u043b\u044c","\u81ea\u8d70":"\u0410\u0432\u0442\u043e.","\u58f0\u63a7":"\u0413\u043e\u043b\u043e.","\u81ea\u8d70\u901f\u5ea6":"\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c","\u58f0\u63a7\u7075\u654f\u5ea6":"\u0413\u043e\u043b\u043e\u0441","\u56fe\u6848\u989c\u8272":"\u0426\u0432\u0435\u0442 \u0443\u0437\u043e\u0440\u0430","\u5f53\u524d\u989c\u8272":"\u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u0446\u0432\u0435\u0442","\u5faa\u73af\u64ad\u653e":"\u0412\u0441\u0435.","\u52fe\u9009\u64ad\u653e":"\u0412\u044b\u0431\u0440\u0430\u0442\u044c","\u5730\u5740\u7801":"\u0410\u0434\u0440\u0435\u0441","\u663e\u793a\u8303\u56f4":"\u0414\u0438\u0430\u043f\u0430\u0437\u043e\u043d","\u56fe\u6848\u76f8\u4f4d":"\u0424\u0430\u0437\u0430 \u0443\u0437\u043e\u0440\u0430","\u6b63\u5e38\u663e\u793a":"\u041d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e","XY\u4e92\u6362":"XY \u041e\u0431\u043c\u0435\u043d","\u8c03\u5149\u8bbe\u7f6e":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u044f\u0440\u043a\u043e\u0441\u0442\u0438","\u7ea2\u5149\u8c03\u5149":"\u041a\u0440\u0430\u0441.","\u7eff\u5149\u8c03\u5149":"\u0417\u0435\u043b\u0435.","\u84dd\u5149\u8c03\u5149":"\u0421\u0438\u043d\u0435.","\u6fc0\u5149\u5149\u6e90":"\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a","\u5355\u8272":"\u041c\u043e\u043d\u043e.","\u53cc\u8272":"\u0414\u0432\u0443\u0446.","\u8c03\u5236\u6a21\u5f0f":"\u041c\u043e\u0434\u0435\u043b\u044c","\u7cfb\u7edf\u8bed\u8a00":"\u042f\u0437\u044b\u043a","\u6b63\u5728\u8bfb\u53d6\u5b57\u4f53...":"\u0427\u0442\u0435\u043d\u0438\u0435 \u0448\u0440\u0438\u0444\u0442\u0430...","\u6b63\u5728\u751f\u6210\u5750\u6807\u70b9...":"\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442...","\u6587\u672c\u989c\u8272":"\u0426\u0432\u0435\u0442 \u0442\u0435\u043a\u0441\u0442\u0430","\u6587\u5b57\u5927\u5c0f":"\u0420\u0430\u0437\u043c\u0435\u0440","\u663e\u793a\u89c6\u8ddd":"\u0420\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435","\u6d41\u6c34\u901f\u5ea6":"\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c","\u6295\u5c04\u65b9\u5411":"\u041d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435","\u6c34\u5e73\u6295\u5c04":"\u0423\u0440\u043e\u0432\u0435\u043d\u044c","\u5782\u76f4\u6295\u5c04":"\u0412\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e","\u8d85\u51fa\u6700\u5927\u70b9\u6570":"\u041f\u0440\u0435\u0432\u044b\u0448\u0435\u043d\u043e \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u0447\u0435\u043a","\u8d85\u51fa\u90e8\u5206\u5c06\u4e22\u5931":"\u041f\u0440\u0435\u0432\u044b\u0448\u0435\u043d\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0442\u0435\u0440\u044f\u043d\u044b","\u7ebf\u6761\u989c\u8272":"\u0426\u0432\u0435\u0442 \u043b\u0438\u043d\u0438\u0438","\u6e05\u7a7a":"\u041e\u0447\u0438\u0441.","\u56de\u9000":"\u041d\u0430\u0437\u0430\u0434","\u53d1\u9001":"\u041e\u0442\u043f\u0440.","\u6700\u591a20\u4e2a\u573a\u666f":"\u0414\u043e 20 \u0441\u0446\u0435\u043d","\u63d0\u793a":"\u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430","\u662f\u5426\u5220\u9664\u573a\u666f":"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0446\u0435\u043d\u0443?","\u7528\u6237\u70b9\u51fb\u53d6\u6d88":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043e\u0442\u043c\u0435\u043d\u0438\u043b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435","-- \u573a\u666f\u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- \u0421\u043f\u0438\u0441\u043e\u043a \u0441\u0446\u0435\u043d \u043f\u0443\u0441\u0442 --","\u573a\u666f":"\u0421\u0446\u0435\u043d\u0430","\u79d2":"\u0421\u0435\u043a","\u5220\u9664":"\u0423\u0434\u0430\u043b\u0438\u0442\u044c","\u7f16\u8f91":"\u0420\u0435\u0434.","\u65b0\u589e\u573a\u666f":"\u041d\u043e\u0432. \u0441\u0446\u0435\u043d.","\u56fe\u6848\u9009\u62e9":"\u0412\u044b\u0431\u043e\u0440 \u0443\u0437\u043e\u0440\u0430","\u76f4\u7ebf\u7c7b\u56fe\u6848":"\u041f\u0440\u044f\u043c. \u0443\u0437\u043e\u0440\u044b","\u5706\u5f27\u7c7b\u56fe\u6848":"\u0414\u0443\u0433\u043e\u0432. \u0443\u0437\u043e\u0440\u044b","\u4eae\u70b9\u56fe\u6848":"\u0421\u0432\u0435\u0442\u043b. \u0443\u0437\u043e\u0440\u044b","\u6253\u70b9\u56fe\u6848":"\u0422\u043e\u0447\u0435\u0447. \u0443\u0437\u043e\u0440\u044b","\u5723\u8bde\u56fe\u6848":"\u0420\u043e\u0436\u0434. \u0443\u0437\u043e\u0440\u044b","\u52a8\u753b\u7ec4\u522b1":"\u0410\u043d\u0438\u043c. \u0433\u0440.1","\u52a8\u753b\u7ec4\u522b2":"\u0410\u043d\u0438\u043c. \u0433\u0440.2","\u52a8\u753b\u7ec4\u522b3":"\u0410\u043d\u0438\u043c. \u0433\u0440.3","\u52a8\u753b\u7ec4\u522b4":"\u0410\u043d\u0438\u043c. \u0433\u0440.4","\u52a8\u753b\u7ec4\u522b5":"\u0410\u043d\u0438\u043c. \u0433\u0440.5","\u767d\u8272":"\u0411\u0435\u043b\u044b\u0439","\u7ea2\u8272":"\u041a\u0440\u0430\u0441\u043d\u044b\u0439","\u84dd\u8272":"\u0421\u0438\u043d\u0438\u0439","\u7c89\u8272":"\u0420\u043e\u0437\u043e\u0432\u044b\u0439","\u9752\u8272":"\u0413\u043e\u043b\u0443\u0431\u043e\u0439","\u9ec4\u8272":"\u0416\u0451\u043b\u0442\u044b\u0439","\u7eff\u8272":"\u0417\u0435\u043b\u0451\u043d\u044b\u0439","\u6574\u4f53\u989c\u8272\u6362\u8272":"\u0421\u043c\u0435\u043d\u0430 \u0446\u0432\u0435\u0442\u0430","\u4e03\u5f69\u8679\u989c\u8272":"\u0420\u0430\u0434\u0443\u0436\u043d. \u0446\u0432\u0435\u0442\u0430","2\u5206\u6bb5\u989c\u8272":"\u041f\u043e\u0434\u043f\u0443\u043d\u043a\u0442 2","3\u5206\u6bb5\u989c\u8272":"\u041f\u043e\u0434\u043f\u0443\u043d\u043a\u0442 3","4\u5206\u6bb5\u989c\u8272":"\u041f\u043e\u0434\u043f\u0443\u043d\u043a\u0442 4","8\u5206\u6bb5\u989c\u8272":"\u041f\u043e\u0434\u043f\u0443\u043d\u043a\u0442 8","16\u5206\u6bb5\u989c\u8272":"\u041f\u043e\u0434\u043f\u0443\u043d\u043a\u0442 16","32\u5206\u6bb5\u989c\u8272":"\u041f\u043e\u0434\u043f\u0443\u043d\u043a\u0442 32","\u989c\u8272\u6e10\u7ed8":"\u041f\u043b\u0430\u0432. \u0446\u0432\u0435\u0442","\u4e0d\u6d41\u6c34":"\u0411\u0435\u0437 \u043f\u043e\u0442\u043e\u043a\u0430","\u6b63\u5411\u6d41\u6c34":"\u041f\u0440\u044f\u043c. \u043f\u043e\u0442\u043e\u043a","\u53cd\u5411\u6d41\u6c34":"\u041e\u0431\u0440\u0430\u0442. \u043f\u043e\u0442\u043e\u043a","\u56fe\u6848\u5927\u5c0f":"\u0420\u0430\u0437\u043c\u0435\u0440 \u0443\u0437\u043e\u0440\u0430","\u7f29\u653e\u624b\u52a8\u9009\u62e9":"\u0420\u0443\u0447. \u043c\u0430\u0441\u0448\u0442\u0430\u0431","\u7531\u5c0f\u5230\u5927\u7f29\u653e":"\u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c","\u7531\u5927\u5230\u5c0f\u7f29\u653e":"\u041c\u0435\u043d\u044c\u0448\u0435","\u5927\u5c0f\u5faa\u73af\u7f29\u653e":"\u0412\u0435\u043b\u0438. \u0446\u0438\u043a\u043b\u0430","\u4e0d\u89c4\u5219\u7f29\u653e\u4e00":"\u041d\u0435\u0440\u0435. \u043c\u0430\u0441\u0448.1","\u4e0d\u89c4\u5219\u7f29\u653e\u4e8c":"\u041d\u0435\u0440\u0435. \u043c\u0430\u0441\u0448.2","\u4e0d\u89c4\u5219\u7f29\u653e\u4e09":"\u041d\u0435\u0440\u0435. \u043c\u0430\u0441\u0448.3","\u65cb\u8f6c\u89d2\u5ea6":"\u0423\u0433\u043e\u043b \u043f\u043e\u0432\u043e\u0440\u043e\u0442\u0430","\u6b63\u65cb\u8f6c\u901f\u5ea6":"\u041f\u043e\u043b\u043e. \u0432\u0440\u0430\u0449.","\u53cd\u65cb\u8f6c\u901f\u5ea6":"\u041e\u0431\u0440\u0430. \u0432\u0440\u0430\u0449.","\u6c34\u5e73\u7ffb\u8f6c\u4f4d\u7f6e":"\u0413\u043e\u0440\u0438. \u043f\u0435\u0440\u0435.","\u6c34\u5e73\u7ffb\u8f6c\u901f\u5ea6":"\u0413\u043e\u0440\u0438. \u0441\u043a\u043e\u0440.","\u5782\u76f4\u7ffb\u8f6c\u4f4d\u7f6e":"\u0412\u0435\u0440\u0442. \u043f\u0435\u0440\u0435.","\u5782\u76f4\u7ffb\u8f6c\u901f\u5ea6":"\u0412\u0435\u0440\u0442. \u0441\u043a\u043e\u0440.","\u6c34\u5e73\u4f4d\u7f6e\u65cb\u8f6c":"\u0413\u043e\u0440\u0438. \u043f\u043e\u0432\u043e.","\u6c34\u5e73\u79fb\u52a8":"\u0413\u043e\u0440\u0438. \u043f\u0435","\u5782\u76f4\u4f4d\u7f6e\u65cb\u8f6c":"\u0412\u0435\u0440\u0442. \u0432\u0440","\u5782\u76f4\u79fb\u52a8":"\u0412\u0435\u0440\u0442. \u043f\u0435","\u65e0\u6ce2\u6d6a":"\u0411\u0435\u0437 \u0432\u043e\u043b\u043d","\u6ce2\u6d6a\u5e45\u5ea61":"\u0412\u043e\u043b\u043d\u04301","\u6ce2\u6d6a\u5e45\u5ea62":"\u0412\u043e\u043b\u043d\u04302","\u6ce2\u6d6a\u5e45\u5ea63":"\u0412\u043e\u043b\u043d\u04303","\u6ce2\u6d6a\u5e45\u5ea64":"\u0412\u043e\u043b\u043d\u04304","\u6ce2\u6d6a\u5e45\u5ea65":"\u0412\u043e\u043b\u043d\u04305","\u6ce2\u6d6a\u5e45\u5ea66":"\u0412\u043e\u043b\u043d\u04306","\u6ce2\u6d6a\u5e45\u5ea67":"\u0412\u043e\u043b\u043d\u04307","\u6ce2\u6d6a\u5e45\u5ea68":"\u0412\u043e\u043b\u043d\u04308","\u65e0\u6e10\u7ed8":"\u0411\u0435\u0437 \u043f\u043b\u0430\u0432. \u0446\u0432\u0435\u0442\u0430","\u624b\u52a8\u6e10\u7ed81":"\u0420\u0443\u0447. 1","\u624b\u52a8\u6e10\u7ed82":"\u0420\u0443\u0447. 2","\u81ea\u52a8\u6e10\u7ed81":"\u0410\u0432\u0442\u043e 1","\u81ea\u52a8\u6e10\u7ed82":"\u0410\u0432\u0442\u043e 2","\u81ea\u52a8\u6e10\u7ed83":"\u0410\u0432\u0442\u043e 3","\u81ea\u52a8\u6e10\u7ed84":"\u0410\u0432\u0442\u043e 4","\u56fe\u5f62\u5206\u7ec4":"\u0413\u0440\u0443\u043f. \u0444\u0438","\u56fe\u5f62":"\u0424\u0438\u0433\u0443\u0440\u044b","\u989c\u8272":"\u0426\u0432\u0435\u0442","\u989c\u8272\u6d41\u6c34":"\u041f\u043e\u0442\u043e. \u0432\u043e","\u56fe\u5f62\u5927\u5c0f":"\u0420\u0430\u0437\u043c\u0435\u0440","\u56fe\u5f62\u7f29\u653e":"\u041c\u0430\u0441\u0448\u0442\u0430\u0431","\u56fe\u5f62\u65cb\u8f6c":"\u0412\u0440\u0430\u0449\u0435\u043d\u0438\u0435","\u6c34\u5e73\u7ffb\u8f6c":"\u041f\u043e\u0432\u0435. \u0433\u043e","\u5782\u76f4\u7ffb\u8f6c":"\u0412\u0435\u0440\u0442. \u043f\u043e","\u6ce2\u6d6a":"\u0412\u043e\u043b\u043d\u0430","\u6e10\u7ed8":"\u0413\u0440\u0430\u0434.","\u64ad\u653e\u65f6\u957f":"\u0422\u0440\u0430\u043d\u0441\u043b\u044f\u0446\u0438\u044f","\u6b63\u5728\u52a0\u8f7d\u56fe\u5f62...":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430...","\u53d6\u6d88":"\u041e\u0442\u043c\u0435\u043d\u0430","\u786e\u5b9a":"\u041e\u041a","\u9009\u62e9\u56fe\u5f62":"\u0412\u044b\u0431\u043e\u0440","\u901a\u9053\u590d\u4f4d":"\u0421\u0431\u0440\u043e.","\u5b8b\u4f53":"SimSun","\u76f4\u7ebf":"\u041f\u0440\u044f\u043c\u0430\u044f","\u5706\u5f27":"\u0414\u0443\u0433\u0430","\u4eae\u70b9":"\u042f\u0440\u043a\u0438\u0439","\u6253\u70b9":"\u0422\u043e\u0447\u043a\u0430","\u5723\u8bde":"\u0420\u043e\u0436\u0434.","\u52a8\u753bA":"\u0410\u043d\u0438\u043c.A","\u52a8\u753bB":"\u0410\u043d\u0438\u043c.B","\u5f69\u8679":"\u0420\u0430\u0434\u0443.","\u9ed8\u8ba4":"\u0423\u043c\u043e\u043b.","\u8f6f\u4ef6\u7248\u672c":"\u0412\u0435\u0440\u0441.","\u8fde\u63a5":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435","\u8bbe\u7f6e":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438","\u624b\u7ed8\u6d82\u9e26":"\u0413\u0440\u0430\u0444\u0438\u043a","\u6587\u672c\u64ad\u653e":"\u0422\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435","\u4e2a\u6027\u7f16\u7a0b":"\u041f\u0440\u043e\u0433\u0440.","\u52a8\u753b\u64ad\u653e":"\u0410\u043d\u0438\u043c\u0430\u0446\u0438\u044f","\u7ebf\u6761\u64ad\u653e":"\u041b\u0438\u043d\u0438\u0438","\u5723\u8bde\u64ad\u653e":"\u0420\u043e\u0436\u0434\u0435\u0441\u0442\u0432\u043e.","DMX":"DMX","\u914d\u7f6e":"\u041d\u0430\u0441\u0442.","\u8fd4\u56de":"\u041d\u0430\u0437\u0430\u0434","\u70b9\u6211\u8fde\u63a5":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435","\u84dd\u7259\u672a\u8fde\u63a5":"\u041d\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d","\u8bbe\u5907":"\u0423\u0441\u0442\u0440.","\u8bf7\u8f93\u5165\u6587\u5b57":"\u0412\u0432\u0435\u0434\u0438\u0442\u0435","\u9884\u7559\u65e0\u529f\u80fd":"\u0420\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","\u91cd\u7f6e":"\u0421\u0431\u0440\u043e\u0441","\u84dd\u7259\u8fde\u63a5":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Bluetooth","\u5168\u9009":"\u0412\u0441\u0435.","\u53cd\u9009":"\u0418\u0441\u043a\u043b.","\u6e05\u9664":"\u041e\u0447\u0438\u0441.","\u5b57\u6570":"\u0422\u0435\u043a\u0441\u0442","\u70b9\u6570":"\u0422\u043e\u0447\u043a\u0430","\u9884\u89c8":"\u041f\u0440\u0435\u0434.","\u573a\u666f\u7ba1\u7406":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0446\u0435\u043d\u0430\u043c\u0438","\u52a0\u8f7d\u4e2d":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430...","\u573a\u666f\u7f16\u8f91":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0446\u0435\u043d","\u8bf7\u5148\u8fde\u63a5\u84dd\u7259":"\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u0441\u044c \u043a Bluetooth","\u5f53\u524d\u8bbe\u5907\u65e0\u6cd5\u8bc6\u522b":"\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043d\u0435 \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u043d\u043e","DMX\u5730\u5740\u7801":"\u0410\u0434\u0440\u0435\u0441\u043d\u044b\u0439 \u043a\u043e\u0434","\u8bf7\u5148\u6253\u5f00\u8bbe\u5907":"\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e","\u5355\u7ebf\u5b57\u4f53":"\u041e\u0434\u043d\u043e\u043f.","\u6b63\u5728\u53d1\u9001":"\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430...","\u8bf7\u68c0\u67e5\u624b\u673a\u84dd\u7259\u662f\u5426\u542f\u7528":"\u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u043b\u0438 Bluetooth \u043d\u0430 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0435","\u8be5\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587\u663e\u793a":"\u042d\u0442\u043e\u0442 \u0448\u0440\u0438\u0444\u0442 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043a\u0438\u0442\u0430\u0439\u0441\u043a\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b","\u56e0\u5bb9\u91cf\u9650\u5236\uff0c\u90e8\u5206\u6c49\u5b57\u672a\u7eb3\u5165\u5b57\u5e93\uff0c\u5b8c\u6574\u5b57\u5e93\u8bf7\u524d\u5f80APP\u7248\u672c":"\u0418\u0437-\u0437\u0430 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u043e\u0431\u044a\u0435\u043c\u0443, \u0447\u0430\u0441\u0442\u044c \u043a\u0438\u0442\u0430\u0439\u0441\u043a\u0438\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u041f\u043e\u043b\u043d\u0443\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432 \u0432\u0435\u0440\u0441\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.","\u8bf7\u8bbe\u7f6e\u5e94\u7528\u5b9a\u4f4d\u6743\u9650":"\u0423\u0441\u0442. \u043b\u043e\u043a\u0430\u0446\u0438\u044f \u043f\u0440\u0430\u0432.","\u8bf7\u8bbe\u7f6e\u5c0f\u7a0b\u5e8f\u84dd\u7259\u6743\u9650":"\u0423\u0441\u0442. \u043f\u0440\u0438\u0432. Bluetooth.","\u8bfb\u8bbe\u5907\u53c2\u6570\u5f02\u5e38":"\u0427\u0442\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043e\u0431\u043e\u0440\u0443\u0434. \u043e\u0448.","\u9009\u62e9":"\u0412\u044b\u0431\u043e\u0440","\u8bbe\u7f6e\u80cc\u666f\u56fe\u7247":"\u0423\u0441\u0442. \u0444\u043e\u043d\u043e\u0432. \u0438\u0437\u043e\u0431\u0440\u0430\u0436.","\u53d1\u9001\u5931\u8d25":"\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u0442\u043f\u0440\u0430\u0432.","\u6587\u672c\u957f\u5ea6\u5df2\u8d85\u8fc7100,\u8bf7\u91cd\u65b0\u8f93\u5165":"\u0422\u0435\u043a\u0441\u0442 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 100 \u0437\u043d\u0430\u043a\u043e\u0432. \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0448\u0438\u0442\u0435.","\u6587\u672c\u5750\u6807\u70b9\u6570\u5df2\u8d85\u8fc72048,\u8bf7\u91cd\u65b0\u8f93\u5165":"\u041a\u043e\u043b-\u0432\u043e \u0442\u043e\u0447\u0435\u043a \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 2048. \u041f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0448\u0438\u0442\u0435.","\u7b2c":"\u0413\u0440.","\u7ec4\u6587\u5b57":"\u0442\u0435\u043a\u0441\u0442\u0430","\u8bf7\u4fee\u6539\u5b57\u4f53\u6216\u6587\u672c\u540e\u91cd\u8bd5":"\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0448\u0440\u0438\u0444\u0442 \u0438\u043b\u0438 \u0442\u0435\u043a\u0441\u0442 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443.","\u4e0d\u652f\u6301\u6587\u672c":"\u041d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436. \u0442\u0435\u043a\u0441\u0442","\u7ec4\u5b57\u4f53":"\u0413\u0440. \u0448\u0440\u0438\u0444\u0442","\u7ec4\u6587\u672c\u4e3a\u7a7a\uff0c\u8bf7\u8f93\u5165\u518d\u53d1\u9001":"\u0442\u0435\u043a\u0441\u0442\u0430 \u043f\u0443\u0441\u0442. \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u044c\u0442\u0435 \u0441\u043d\u043e\u0432\u0430.","\u662f\u5426\u5220\u9664\u7b2c":"\u0423\u0434\u0430\u043b\u0438\u0442\u044c","\u7ec4":"\u0433\u0440\u0443\u043f\u043f\u0443","\u6700\u591a4\u4e2a\u5206\u7ec4":"\u0414\u043e 4 \u0433\u0440\u0443\u043f\u043f","\u6b63\u5728\u8fde\u63a5...":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f...","\u8fde\u63a5\u5931\u8d25":"\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u0434\u043a\u043b.","\u5b57\u4f53\u9009\u62e9":"\u0412\u044b\u0431\u043e\u0440 \u0448\u0440\u0438\u0444\u0442\u0430","\u601d\u6e90\u9ed1\u4f53":"\u0448\u0440\u0438\u0444\u0442","\u601d\u6e90\u9ed1\u4f531":"\u0448\u0440\u0438\u0444\u04421","\u601d\u6e90\u9ed1\u4f532":"\u0448\u0440\u0438\u0444\u04422","\u601d\u6e90\u9ed1\u4f533":"\u0448\u0440\u0438\u0444\u04423","\u601d\u6e90\u9ed1\u4f534":"\u0448\u0440\u0438\u0444\u04424","\u601d\u6e90\u9ed1\u4f535":"\u0448\u0440\u0438\u0444\u04425","\u601d\u6e90\u9ed1\u4f536":"\u0448\u0440\u0438\u0444\u04426","\u601d\u6e90\u9ed1\u4f537":"\u0448\u0440\u0438\u0444\u04427","font_note_1001":"\u041a\u0438\u0442\u0430\u0439\u0441\u043a\u0438\u0439, \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439, \u0438\u0441\u043f\u0430\u043d\u0441\u043a\u0438\u0439, \u043f\u043e\u0440\u0442\u0443\u0433\u0430\u043b\u044c\u0441\u043a\u0438\u0439, \u043d\u0435\u043c\u0435\u0446\u043a\u0438\u0439, \u0444\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0438\u0439","font_note_1002":"\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439, \u0438\u0441\u043f\u0430\u043d\u0441\u043a\u0438\u0439, \u0440\u0443\u0441\u0441\u043a\u0438\u0439, \u043f\u043e\u0440\u0442\u0443\u0433\u0430\u043b\u044c\u0441\u043a\u0438\u0439, \u043d\u0435\u043c\u0435\u0446\u043a\u0438\u0439, \u0444\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0438\u0439, \u0432\u044c\u0435\u0442\u043d\u0430\u043c\u0441\u043a\u0438\u0439, \u0445\u0438\u043d\u0434\u0438, \u0431\u0435\u043d\u0433\u0430\u043b\u044c\u0441\u043a\u0438\u0439","font_note_1003":"\u0420\u0443\u0441\u0441\u043a\u0438\u0439, \u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439, \u041a\u0438\u0442\u0430\u0439\u0441\u043a\u0438\u0439, \u0418\u0441\u043f\u0430\u043d\u0441\u043a\u0438\u0439, \u041f\u043e\u0440\u0442\u0443\u0433\u0430\u043b\u044c\u0441\u043a\u0438\u0439, \u042f\u043f\u043e\u043d\u0441\u043a\u0438\u0439, \u041d\u0435\u043c\u0435\u0446\u043a\u0438\u0439","font_note_1004":"\u041a\u0438\u0442\u0430\u0439\u0441\u043a\u0438\u0439, \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439, \u0438\u0441\u043f\u0430\u043d\u0441\u043a\u0438\u0439, \u043f\u043e\u0440\u0442\u0443\u0433\u0430\u043b\u044c\u0441\u043a\u0438\u0439, \u043d\u0435\u043c\u0435\u0446\u043a\u0438\u0439, \u0444\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0438\u0439","font_note_1005":"\u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u043a\u0438\u0442\u0430\u0439\u0441\u043a\u0438\u0439","font_note_1006":"\u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439, \u044f\u043f\u043e\u043d\u0441\u043a\u0438\u0439, \u043a\u043e\u0440\u0435\u0439\u0441\u043a\u0438\u0439","font_note_1007":"\u0430\u0440\u0430\u0431\u0441\u043a\u0438\u0439","\u4fdd\u7559":"\u0421\u043e\u0445\u0440.","\u56fe\u6848\u521d\u59cb\u989c\u8272":"\u041d\u0430\u0447. \u0446\u0432. \u0443\u0437\u043e\u0440\u0430","\u6df7\u8272":"\u0421\u043c\u0435\u0448. \u0446\u0432.","\u7b14\u753b\u5c11\uff0c\u65e0\u95ea\u70c1\uff0c\u63a8\u8350\u4f7f\u7528":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438","\u5df2\u65ad\u5f00\u8fde\u63a5":"\u0421\u043e\u0435\u0434\u0438\u043d. \u0440\u0430\u0437\u043e\u0440\u0432\u0430\u043d\u043e","\u8bf7\u8f93\u51651-255\u8303\u56f4\u7684\u6570\u503c":"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u043e\u0442 1 \u0434\u043e 255.","\u6587\u5b57\u7cbe\u5ea6":"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c","\u6587\u672c\u56fe\u5f62\u7cbe\u5ea6":"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c","\u7cbe\u5ea6":"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c","\u9009\u62e9\u56fe\u7247":"\u0424\u043e\u0442\u043e.","\u8bbe\u4e3a\u80cc\u666f":"\u0421\u0442\u0435\u043d\u044b","\u8bc6\u522b\u56fe\u6848":"\u0418\u0434\u0435\u043d.","\u63cf\u8fb9":"\u041e\u0431\u0432\u043e\u0434\u043a\u0430","\u6b63\u5728\u5904\u7406\u4e2d":"\u041e\u0431\u0440\u0430\u0431. ...","\u5f53\u524d\u673a\u578b":"\u041c\u043e\u0434\u0435.","hand_draw_tips":"** \u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u043f\u0430\u043b\u044c\u0446\u0435\u043c \u0438\u0437 \u043f\u0443\u0441\u0442\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u0430 \u043a \u0446\u0435\u043b\u0435\u0432\u043e\u043c\u0443 \u0443\u0437\u043e\u0440\u0443 \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430 \\n ** \u041c\u043e\u0436\u043d\u043e \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0442\u044c, \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0442\u044c, \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0442\u044c, \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0446\u0432\u0435\u0442 \u0432\u044b\u0431\u0440. \u0443\u0437\u043e\u0440\u0430 \u0438 \u0434\u0440. \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438","\u4e0d\u518d\u63d0\u793a":"\u041d\u0435 \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0442\u044c","out_door_tips1":"1-30 \u041e\u0440\u0438\u0435\u043d\u0442\u0438\u0440","out_door_tips2":"31-40 \u0421\u0435\u0432\u0435\u0440\u043d\u043e\u0435 \u0441\u0438\u044f\u043d\u0438\u0435","out_door_tips3":"41-50 \u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0442\u0443\u043d\u043d\u0435\u043b\u044c","\u6587\u4ef6\u540d":"\u0418\u043c\u044f \u0444\u0430\u0439\u043b\u0430","\u4fdd\u5b58\u6587\u4ef6":"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0444\u0430\u0439\u043b","\u9009\u62e9\u6587\u4ef6":"\u0412\u044b\u0431\u0440\u0430\u0442\u044c \u0444\u0430\u0439\u043b","\u8bf7\u8f93\u5165\u6587\u4ef6\u540d":"\u0418\u043c\u044f \u0444\u0430\u0439\u043b\u0430","\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d":"\u041d\u043e\u0432\u043e\u0435 \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430","\u6587\u4ef6\u540d\u4e0d\u80fd\u4e3a\u7a7a":"\u0418\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165":"\u0424\u0430\u0439\u043b \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u0430\u043d\u043e\u0432\u043e","\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u662f\u5426\u7ee7\u7eed":"\u0424\u0430\u0439\u043b \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442, \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c?","\u4fdd\u5b58\u6210\u529f":"\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e","\u4fdd\u5b58\u5931\u8d25":"\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c","\u4fee\u6539\u6210\u529f":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e","\u4fee\u6539\u5931\u8d25":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c","\u5220\u9664\u6210\u529f":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e","\u5220\u9664\u5931\u8d25":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c","\u5f53\u524d\u673a\u578b\u4e0d\u652f\u6301":"\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u044d\u0442\u043e","text_time_range":"\u0414\u0438\u0430\u043f\u0430\u0437\u043e\u043d 1-25,5","\u6ca1\u6709\u8bc6\u522b\u5230\u56fe\u6848":"\u041e\u0448\u0438\u0431\u043a\u0430 \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0438\u044f","\u8bf7\u9009\u62e9\u6587\u4ef6":"\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0444\u0430\u0439\u043b","\u6587\u4ef6\u6570":"\u0424\u0430\u0439\u043b","\u53e6\u5b58\u6587\u4ef6":"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043a\u0430\u043a","\u5220\u9664\u6240\u9009\u6587\u4ef6":"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b","Select-File":"\u0412\u044b\u0431\u043e\u0440","\u6447\u5934\u8bbe\u7f6e":"\u041d\u0430\u0441\u0442. \u0414\u0432\u0438\u0436. \u0413\u043e\u043b\u043e.","\u6447\u5934\u6a21\u5f0f":"\u0420\u0435\u0436\u0438\u043c","\u6447\u5934\u76f8\u4f4d":"\u0424\u0430\u0437\u0430","\u81ea\u52a8":"\u0410\u0432\u0442\u043e\u043c\u0430.","\u624b\u52a8":"\u0420\u0443\u0447\u043d\u043e\u0439","X\u7c97\u8c03":"\u0413\u0440\u0443\u0431\u0430\u044f X","X\u7ec6\u8c03":"\u0422\u043e\u0447\u043d\u0430\u044f X","Y\u7c97\u8c03":"\u0413\u0440\u0443\u0431\u0430\u044f Y","Y\u7ec6\u8c03":"\u0422\u043e\u0447\u043d\u0430\u044f Y","\u6c34\u5e73\u7535\u673a":"\u0413\u043e\u0440\u0438.","\u6c34\u5e73\u5fae\u8c03":"\u0422\u043e\u0447\u043d.X","\u5782\u76f4\u7535\u673a":"\u0412\u0435\u0440\u0442.","\u5782\u76f4\u5fae\u8c03":"\u0422\u043e\u0447\u043d.Y","\u7535\u673a\u901f\u5ea6":"\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c","\u6d41\u6c34\u65b9\u5411":"\u041d\u0430\u043f\u0440.","\u963f\u62c9\u4f2f\u8bed\u65b9\u5411":"\u0410\u0440\u0430\u0431\u0441\u043a\u043e\u0435","\u9ed8\u8ba4\u65b9\u5411":"\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e","\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939":"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0432 \u043f\u0430\u043f\u043a\u0443","\u9009\u62e9\u5217\u8868":"\u0412\u044b\u0431. \u0441\u043f\u0438\u0441.","\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0":"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0443\u043f\u043f\u044b","\u64ad\u653e\u5217\u8868":"\u041f\u043b\u0435\u0439\u043b\u0438\u0441\u0442","\u4fdd\u5b58":"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c","\u6dfb\u52a0":"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c","\u6279\u91cf\u8bbe\u7f6e":"\u041f\u0430\u043a\u0435\u0442\u043d\u0430\u044f","\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0":"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430","ALL":"\u0412\u0441\u0435","\u5217\u8868\u7f16\u8f91":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430","\u8bf7\u8f93\u51650.1-25.5\u4e4b\u95f4\u7684\u6570\u5b57":"\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u043e\u0442 0.1 \u0434\u043e 25.5","\u6dfb\u52a0\u81f3\u65b0\u5217\u8868":"\u041d\u043e\u0432\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a","\u7acb\u5373\u64ad\u653e":"\u0418\u0433\u0440\u0430\u0442\u044c \u0441\u0435\u0439\u0447\u0430\u0441","\u76f8\u5e94\u7684\u64ad\u653e\u5217\u8868\u5c06\u88ab\u5220\u9664\uff0c \u7ee7\u7eed":"\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442 \u0431\u0443\u0434\u0435\u0442 \u0443\u0434\u0430\u043b\u0451\u043d, \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c","-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --":"-- \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0443\u0441\u0442 --"}')
        },
        eacd: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("a6a2"),
                h = r("7aa1");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        ed45: function(e, t) {
            e.exports = function(e) {
                if (Array.isArray(e)) return e
            }, e.exports.__esModule = !0, e.exports["default"] = e.exports
        },
        eeae: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("9327");
            for (var h in n)["default"].indexOf(h) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(h);
            var a = r("828b"),
                i = Object(a["a"])(n["default"], void 0, void 0, !1, null, null, null, !1, void 0, void 0);
            t["default"] = i.exports
        },
        f3b9: function(t, r, n) {
            "use strict";

            function h(e) {
                var t = Object.prototype.toString.call(e);
                return t.substring(8, t.length - 1)
            }

            function a() {
                return "string" === typeof __channelId__ && __channelId__
            }

            function i(e, t) {
                switch (h(t)) {
                    case "Function":
                        return "function() { [native code] }";
                    default:
                        return t
                }
            }

            function c(e) {
                for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) r[n - 1] = arguments[n];
                console[e].apply(console, r)
            }

            function o() {
                for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];
                var c = r.shift();
                if (a()) return r.push(r.pop().replace("at ", "uni-app:///")), console[c].apply(console, r);
                var o = r.map((function(t) {
                        var r = Object.prototype.toString.call(t).toLowerCase();
                        if ("[object object]" === r || "[object array]" === r) try {
                                t = "---BEGIN:JSON---" + JSON.stringify(t, i) + "---END:JSON---"
                            } catch (e) {
                                t = r
                            } else if (null === t) t = "---NULL---";
                            else if (void 0 === t) t = "---UNDEFINED---";
                        else {
                            var n = h(t).toUpperCase();
                            t = "NUMBER" === n || "BOOLEAN" === n ? "---BEGIN:" + n + "---" + t + "---END:" + n + "---" : String(t)
                        }
                        return t
                    })),
                    s = "";
                if (o.length > 1) {
                    var l = o.pop();
                    s = o.join("---COMMA---"), 0 === l.indexOf(" at ") ? s += l : s += "---COMMA---" + l
                } else s = o[0];
                console[c](s)
            }
            n.r(r), n.d(r, "log", (function() {
                return c
            })), n.d(r, "default", (function() {
                return o
            }))
        },
        f48d: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("2332"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        f7c2: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("7e7e"),
                h = r("fba0");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        fba0: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("b520"),
                h = r.n(n);
            for (var a in n)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return n[e]
                }))
            }(a);
            t["default"] = h.a
        },
        fc1c: function(e, t, r) {
            "use strict";
            r.d(t, "b", (function() {
                return h
            })), r.d(t, "c", (function() {
                return a
            })), r.d(t, "a", (function() {
                return n
            }));
            var n = {
                    pageMeta: r("7854").default,
                    navigationBar: r("7943").default,
                    uniPopup: r("762b").default
                },
                h = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("view", [n("page-meta", {
                        attrs: {
                            "page-style": "overflow: hidden",
                            "root-font-size": e.screen_width,
                            _i: 1
                        }
                    }, [n("navigation-bar", {
                        attrs: {
                            title: e.ntitle,
                            "background-color": "#10161C",
                            "color-animation-timing-func": "easeIn",
                            _i: 2
                        }
                    })], 1), n("view", {
                        class: e._$s(3, "c", e.rtl ? "rtl" : ""),
                        attrs: {
                            _i: 3
                        }
                    }, [n("view", [n("view", [n("view", [n("input", {
                        staticClass: e._$s(7, "sc", "text-input"),
                        style: e._$s(7, "s", e.rtl ? "text-align: right;" : ""),
                        attrs: {
                            value: e._$s(7, "a-value", e.filterName),
                            placeholder: e._$s(7, "a-placeholder", e.searchTip),
                            _i: 7
                        },
                        on: {
                            confirm: e.searchClick,
                            input: e.searchInput
                        }
                    }), n("view", [n("view"), n("image", {
                        attrs: {
                            src: e._$s(10, "a-src", r("e9e3")),
                            _i: 10
                        },
                        on: {
                            click: e.searchClick
                        }
                    }), n("view"), n("image", {
                        attrs: {
                            src: e._$s(12, "a-src", r("6169")),
                            _i: 12
                        },
                        on: {
                            click: e.refreshClick
                        }
                    }), n("view"), e._$s(14, "i", e.sortFileDown) ? n("image", {
                        attrs: {
                            src: e._$s(14, "a-src", r("74ed")),
                            _i: 14
                        },
                        on: {
                            click: e.sortFileClick
                        }
                    }) : e._e(), e._$s(15, "i", !e.sortFileDown) ? n("image", {
                        attrs: {
                            src: e._$s(15, "a-src", r("56d8")),
                            _i: 15
                        },
                        on: {
                            click: e.sortFileClick
                        }
                    }) : e._e()])]), n("view"), n("view", [n("view", [n("label", {
                        staticClass: e._$s(19, "sc", "btn-color-text"),
                        attrs: {
                            _i: 19
                        }
                    }, [e._v(e._$s(19, "t0-0", e._s(e.$t("\u6587\u4ef6\u6570"))))]), e._$s(20, "i", !e.selectMode) ? n("label", {
                        staticClass: e._$s(20, "sc", "btn-color-text"),
                        attrs: {
                            _i: 20
                        }
                    }, [e._v(e._$s(20, "t0-0", e._s(e.curFileNames.length)))]) : e._e(), e._$s(21, "i", e.selectMode) ? n("label", {
                        staticClass: e._$s(21, "sc", "btn-color-text"),
                        attrs: {
                            _i: 21
                        }
                    }, [e._v(e._$s(21, "t0-0", e._s(e.selection)))]) : e._e()]), e._e(), n("view", [n("view", {
                        staticClass: e._$s(25, "sc", "btn-view-style2"),
                        style: e._$s(25, "s", e.selectMode ? " " : "pointer-events: none; opacity: 0.3"),
                        attrs: {
                            _i: 25
                        },
                        on: {
                            click: function(t) {
                                return e.selectAutoBtnClick(1)
                            }
                        }
                    }, [n("view", {
                        staticClass: e._$s(26, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 26
                        }
                    }, [n("label", {
                        staticClass: e._$s(27, "sc", "btn-color-text"),
                        attrs: {
                            _i: 27
                        }
                    }, [e._v(e._$s(27, "t0-0", e._s(e.$t("\u5168\u9009"))))])])]), n("view", {
                        staticClass: e._$s(28, "sc", "btn-view-style2"),
                        style: e._$s(28, "s", e.selectMode ? " " : "pointer-events: none; opacity: 0.3"),
                        attrs: {
                            _i: 28
                        },
                        on: {
                            click: function(t) {
                                return e.selectAutoBtnClick(2)
                            }
                        }
                    }, [n("view", {
                        staticClass: e._$s(29, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 29
                        }
                    }, [n("label", {
                        staticClass: e._$s(30, "sc", "btn-color-text"),
                        attrs: {
                            _i: 30
                        }
                    }, [e._v(e._$s(30, "t0-0", e._s(e.$t("\u53cd\u9009"))))])])]), e._$s(31, "i", !e.modeAdd) ? [e._$s(32, "i", e.selectMode) ? n("view", {
                        staticClass: e._$s(32, "sc", "btn-view-style2"),
                        attrs: {
                            _i: 32
                        },
                        on: {
                            click: function(t) {
                                return e.selectModeClick(0)
                            }
                        }
                    }, [n("view", {
                        staticClass: e._$s(33, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 33
                        }
                    }, [n("label", {
                        staticClass: e._$s(34, "sc", "btn-color-text"),
                        attrs: {
                            _i: 34
                        }
                    }, [e._v(e._$s(34, "t0-0", e._s(e.$t("\u53d6\u6d88"))))])])]) : e._e(), e._$s(35, "i", !e.selectMode) ? n("view", {
                        staticClass: e._$s(35, "sc", "btn-view-style2"),
                        attrs: {
                            _i: 35
                        },
                        on: {
                            click: function(t) {
                                return e.selectModeClick(1)
                            }
                        }
                    }, [n("view", {
                        staticClass: e._$s(36, "sc", "btn-view-sub"),
                        attrs: {
                            _i: 36
                        }
                    }, [n("label", {
                        staticClass: e._$s(37, "sc", "btn-color-text"),
                        attrs: {
                            _i: 37
                        }
                    }, [e._v(e._$s(37, "t0-0", e._s(e.$t("Select-File"))))])])]) : e._e()] : e._e()], 2)])]), e._$s(38, "i", e.handDrawFile) ? [n("view"), n("view", [n("view", [e._l(e._$s(42, "f", {
                        forItems: e.handDrawClassName
                    }), (function(t, r, h, a) {
                        return [n("view", {
                            key: e._$s(42, "f", {
                                forIndex: h,
                                keyIndex: 0,
                                key: r + "_0"
                            }),
                            staticClass: e._$s("43-" + a, "sc", "display-ch-lable"),
                            style: e._$s("43-" + a, "s", (e.handDrawClassIdx == r ? "background-color: #25333D;" : "background-color: #1C2B39;") + "; " + (0 == r ? "height: 60rem; border-top-left-radius: 40rem; border-top-right-radius: 40rem;" : "flex: 1;") + (r == e.handDrawClassName.length - 1 ? "height: 60rem; border-bottom-left-radius: 40rem; border-bottom-right-radius: 40rem;" : "flex: 1;")),
                            attrs: {
                                _i: "43-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.handDrawClassClick(r)
                                }
                            }
                        }, [n("label", {
                            style: e._$s("44-" + a, "s", (e.handDrawClassIdx == r ? "color: #59E2FF;" : "color: #687C8E;") + " flex: 1; font-size: 20rem;"),
                            attrs: {
                                _i: "44-" + a
                            }
                        }, [e._v(e._$s("44-" + a, "t0-0", e._s(0 == r ? e.$t(t) : t)))]), e._$s("45-" + a, "i", r > 0 && e.handDrawClassIdx == r) ? n("view", {
                            staticClass: e._$s("45-" + a, "sc", "edt-btn-img"),
                            style: e._$s("45-" + a, "s", (e.rtl ? "margin-right: 10rem; " : "margin-left: 10rem; ") + "width: 30rem; height: 30rem;"),
                            attrs: {
                                _i: "45-" + a
                            },
                            on: {
                                click: function(t) {
                                    return e.oprClassNameEdit(r)
                                }
                            }
                        }) : e._e()])]
                    }))], 2), n("view"), n("view", [n("scroll-view", {
                        attrs: {
                            id: "scroll_view",
                            _i: 48
                        },
                        on: {
                            scrolltolower: e.scrollToLower
                        }
                    }, [n("view", e._l(e._$s(50, "f", {
                        forItems: e.fileList
                    }), (function(t, r, h, a) {
                        return n("view", {
                            key: e._$s(50, "f", {
                                forIndex: h,
                                key: r
                            }),
                            staticClass: e._$s("50-" + a, "sc", "display-btn-group"),
                            style: e._$s("50-" + a, "s", e.fileName == t.fileName ? "background-color: #2B4863;" : ""),
                            attrs: {
                                _i: "50-" + a
                            },
                            on: {
                                click: function(n) {
                                    return e.selectFile(r, t.fileName, t.data.pisObj.cnfValus[12] <= 0 ? 3 : t.data.pisObj.cnfValus[12])
                                }
                            }
                        }, [n("view", [n("view", {
                            attrs: {
                                _i: "52-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.renameClick(t.fileName)
                                }
                            }
                        }, [n("label", {
                            staticClass: e._$s("53-" + a, "sc", "display-btn-lable"),
                            attrs: {
                                _i: "53-" + a
                            }
                        }, [e._v(e._$s("53-" + a, "t0-0", e._s(t.fileName.split(e.fileClassSplitTag)[0])))])]), n("image", {
                            attrs: {
                                src: e._$s("54-" + a, "a-src", t.picPath),
                                _i: "54-" + a
                            }
                        }), n("label", {
                            directives: [{
                                name: "show",
                                rawName: "v-show",
                                value: e._$s("55-" + a, "v-show", -1 != e.getIdxInList(t.fileName) && e.features.picsPlay),
                                expression: "_$s((\"55-\"+$31),'v-show',(getIdxInList(it.fileName) != -1 && features.picsPlay))"
                            }],
                            attrs: {
                                _i: "55-" + a
                            }
                        }, [e._v(e._$s("55-" + a, "t0-0", e._s(e.getIdxInList(t.fileName) + 1)))]), n("view", [n("label", {
                            staticClass: e._$s("57-" + a, "sc", "display-btn-lable"),
                            attrs: {
                                _i: "57-" + a
                            }
                        }, [e._v(e._$s("57-" + a, "t0-0", e._s(r + 1)))]), n("view", [n("checkbox-group", {
                            directives: [{
                                name: "show",
                                rawName: "v-show",
                                value: e._$s("59-" + a, "v-show", e.selectMode),
                                expression: "_$s((\"59-\"+$31),'v-show',selectMode)"
                            }],
                            attrs: {
                                "data-file-name": e._$s("59-" + a, "a-data-file-name", t.fileName),
                                _i: "59-" + a
                            },
                            on: {
                                change: e.selectCheckboxChange
                            }
                        }, [n("checkbox", {
                            attrs: {
                                value: e._$s("60-" + a, "a-value", t.fileName),
                                checked: e._$s("60-" + a, "a-checked", -1 != e.getIdxInList(t.fileName)),
                                _i: "60-" + a
                            }
                        })]), n("image", {
                            directives: [{
                                name: "show",
                                rawName: "v-show",
                                value: e._$s("61-" + a, "v-show", !e.selectMode),
                                expression: "_$s((\"61-\"+$31),'v-show',!selectMode)"
                            }],
                            attrs: {
                                _i: "61-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.playClick(t.fileName)
                                }
                            }
                        })]), n("label", {
                            staticClass: e._$s("62-" + a, "sc", "display-btn-lable"),
                            style: e._$s("62-" + a, "s", "flex: 1;" + (e.selectMode ? "color: #CCEEFA;" : "")),
                            attrs: {
                                _i: "62-" + a
                            },
                            on: {
                                click: function(r) {
                                    return r.stopPropagation(), e.setPlayTime(r, t.fileName)
                                }
                            }
                        }, [e._v(e._$s("62-" + a, "t0-0", e._s((t.data.pisObj.cnfValus[12] <= 0 ? 3 : t.data.pisObj.cnfValus[12]) + e.$t("\u79d2"))))]), n("image", {
                            directives: [{
                                name: "show",
                                rawName: "v-show",
                                value: e._$s("63-" + a, "v-show", !e.selectMode),
                                expression: "_$s((\"63-\"+$31),'v-show',!selectMode)"
                            }],
                            attrs: {
                                _i: "63-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.deleteClick(t.fileName)
                                }
                            }
                        })])])])
                    })), 0)])])])] : [n("scroll-view", {
                        attrs: {
                            id: "scroll_view",
                            _i: 65
                        },
                        on: {
                            scrolltolower: e.scrollToLower
                        }
                    }, [n("view", e._l(e._$s(67, "f", {
                        forItems: e.fileList
                    }), (function(t, r, h, a) {
                        return n("view", {
                            key: e._$s(67, "f", {
                                forIndex: h,
                                key: r
                            }),
                            staticClass: e._$s("67-" + a, "sc", "display-btn-group"),
                            style: e._$s("67-" + a, "s", e.fileName == t.fileName ? "background-color: #2B4863;" : ""),
                            attrs: {
                                _i: "67-" + a
                            },
                            on: {
                                click: function(n) {
                                    return e.selectFile(r, t.fileName)
                                }
                            }
                        }, [n("view", [n("view", {
                            attrs: {
                                _i: "69-" + a
                            },
                            on: {
                                click: function(r) {
                                    return r.stopPropagation(), e.renameClick(t.fileName)
                                }
                            }
                        }, [n("label", {
                            staticClass: e._$s("70-" + a, "sc", "display-btn-lable"),
                            attrs: {
                                _i: "70-" + a
                            }
                        }, [e._v(e._$s("70-" + a, "t0-0", e._s(t.fileName)))])]), n("view", e._l(e._$s("72-" + a, "f", {
                            forItems: t.data.textData.groupList
                        }), (function(t, h, i, c) {
                            return n("label", {
                                key: e._$s("72-" + a, "f", {
                                    forIndex: i,
                                    key: h
                                }),
                                style: e._$s("72-" + a + "-" + c, "s", (e.isValid(r) ? "color: blue;" : "color: gray;") + " font-weight: 800; font-size: 30rem; max-width: 90%;"),
                                attrs: {
                                    _i: "72-" + a + "-" + c
                                }
                            }, [e._v(e._$s("72-" + a + "-" + c, "t0-0", e._s(t.text.length > 9 ? t.text.substring(0, 9) + "..." : t.text)))])
                        })), 0), n("view", [n("label", {
                            staticClass: e._$s("74-" + a, "sc", "display-btn-lable"),
                            attrs: {
                                _i: "74-" + a
                            }
                        }, [e._v(e._$s("74-" + a, "t0-0", e._s(r + 1)))]), n("view", [n("checkbox-group", {
                            directives: [{
                                name: "show",
                                rawName: "v-show",
                                value: e._$s("76-" + a, "v-show", e.selectMode),
                                expression: "_$s((\"76-\"+$32),'v-show',selectMode)"
                            }],
                            attrs: {
                                "data-file-name": e._$s("76-" + a, "a-data-file-name", t.fileName),
                                _i: "76-" + a
                            },
                            on: {
                                change: e.selectCheckboxChange
                            }
                        }, [n("checkbox", {
                            attrs: {
                                value: e._$s("77-" + a, "a-value", t.fileName),
                                checked: e._$s("77-" + a, "a-checked", e.selectFiles.includes(t.fileName)),
                                _i: "77-" + a
                            }
                        })]), n("image", {
                            directives: [{
                                name: "show",
                                rawName: "v-show",
                                value: e._$s("78-" + a, "v-show", !e.selectMode && e.isValid(r)),
                                expression: "_$s((\"78-\"+$32),'v-show',!selectMode && isValid(index))"
                            }],
                            attrs: {
                                _i: "78-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.playClick(t.fileName)
                                }
                            }
                        })]), n("label", {
                            staticClass: e._$s("79-" + a, "sc", "display-btn-lable"),
                            attrs: {
                                _i: "79-" + a
                            }
                        }, [e._v(e._$s("79-" + a, "t0-0", e._s(e.$t("\u5b57\u6570") + " " + t.dataSize.chCount)))]), n("image", {
                            attrs: {
                                _i: "80-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.deleteClick(t.fileName)
                                }
                            }
                        })])])])
                    })), 0)])], n("view", {
                        staticClass: e._$s(81, "sc", "item-class"),
                        attrs: {
                            _i: 81
                        }
                    }, [e._$s(82, "i", e.handDrawFile && e.features.picsPlay) ? [e._$s(83, "i", e.selectMode) ? [e._$s(84, "i", e.modeAdd) ? [n("view", {
                        staticClass: e._$s(85, "sc", "opr-new btn-linear"),
                        style: e._$s(85, "s", e.selectFiles.length > 0 ? " " : "pointer-events: none; opacity: 0.3"),
                        attrs: {
                            _i: 85
                        },
                        on: {
                            click: e.addClick
                        }
                    }, [e._v(e._$s(85, "t0-0", e._s(e.$t("\u6dfb\u52a0"))))])] : [n("view", [n("view", {
                        staticClass: e._$s(88, "sc", "opr-new btn-linear"),
                        style: e._$s(88, "s", (e.selectFiles.length > 0 ? " " : "pointer-events: none; opacity: 0.3;") + " width: 70%;"),
                        attrs: {
                            _i: 88
                        },
                        on: {
                            click: e.playListClick
                        }
                    }, [e._v(e._$s(88, "t0-0", e._s(e.$t("\u7acb\u5373\u64ad\u653e") + "(" + e.selectFiles.length + ")")))]), n("view", {
                        staticClass: e._$s(89, "sc", "opr-new btn-delete"),
                        style: e._$s(89, "s", (e.selectFiles.length > 0 ? " " : "pointer-events: none; opacity: 0.3;") + " width: 25%;"),
                        attrs: {
                            _i: 89
                        },
                        on: {
                            click: e.deleteSelectClick
                        }
                    }, [e._v(e._$s(89, "t0-0", e._s(e.$t("\u5220\u9664"))))])])]] : [n("view", [n("view", {
                        staticClass: e._$s(92, "sc", "opr-new btn-linear"),
                        attrs: {
                            _i: 92
                        },
                        on: {
                            click: e.okClick
                        }
                    }, [e._v(e._$s(92, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])]] : [e._$s(94, "i", e.selectMode) ? [n("view", {
                        staticClass: e._$s(95, "sc", "opr-new btn-delete"),
                        style: e._$s(95, "s", e.selectFiles.length > 0 ? " " : "pointer-events: none; opacity: 0.3"),
                        attrs: {
                            _i: 95
                        },
                        on: {
                            click: e.deleteSelectClick
                        }
                    }, [e._v(e._$s(95, "t0-0", e._s(e.$t("\u5220\u9664"))))])] : [n("view", {
                        staticClass: e._$s(97, "sc", "opr-new btn-linear"),
                        attrs: {
                            _i: 97
                        },
                        on: {
                            click: e.okClick
                        }
                    }, [e._v(e._$s(97, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])]]], 2)], 2), e._$s(98, "i", e.showSending) ? [n("view"), n("canvas", {
                        attrs: {
                            id: "progressCanvas",
                            _i: 100
                        }
                    })] : e._e(), n("uni-popup", {
                        ref: "popupTime",
                        attrs: {
                            "mask-click": !0,
                            animation: !0,
                            _i: 101
                        }
                    }, [n("view", [n("view", [n("button", {
                        attrs: {
                            _i: 104
                        },
                        on: {
                            click: function(t) {
                                return e.changeTimeClick(-.1, e.fileName)
                            }
                        }
                    }), n("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: e.playTime,
                            expression: "playTime"
                        }],
                        staticClass: e._$s(105, "sc", "popup-input"),
                        attrs: {
                            _i: 105
                        },
                        domProps: {
                            value: e._$s(105, "v-model", e.playTime)
                        },
                        on: {
                            blur: function(t) {
                                return e.onTimeBlur(e.fileName)
                            },
                            input: function(t) {
                                t.target.composing || (e.playTime = t.target.value)
                            }
                        }
                    }), n("button", {
                        attrs: {
                            _i: 106
                        },
                        on: {
                            click: function(t) {
                                return e.changeTimeClick(.1, e.fileName)
                            }
                        }
                    })])])]), n("uni-popup", {
                        ref: "classNameInput",
                        attrs: {
                            "mask-click": !0,
                            animation: !1,
                            _i: 107
                        }
                    }, [n("view", [n("view", [n("view", [e._v(e._$s(110, "t0-0", e._s(e.$t("\u8bf7\u8f93\u5165\u5206\u7ec4\u540d\u79f0"))))]), n("input", {
                        attrs: {
                            value: e._$s(111, "a-value", e.reClassNameInfo.newClassName),
                            _i: 111
                        },
                        on: {
                            input: e.classNameNewInput
                        }
                    }), n("view", [n("view", {
                        attrs: {
                            _i: 113
                        },
                        on: {
                            click: e.classNameInputCancelClick
                        }
                    }, [e._v(e._$s(113, "t0-0", e._s(e.$t("\u53d6\u6d88"))))]), n("view"), n("view", {
                        attrs: {
                            _i: 115
                        },
                        on: {
                            click: e.classNameInputOkClick
                        }
                    }, [e._v(e._$s(115, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])]), n("view", {
                        attrs: {
                            _i: 116
                        },
                        on: {
                            click: e.classNameInputCancelClick
                        }
                    })])]), n("uni-popup", {
                        ref: "listNameInput",
                        attrs: {
                            "mask-click": !0,
                            animation: !1,
                            _i: 117
                        }
                    }, [n("view", [n("view", [n("view", [e._v(e._$s(120, "t0-0", e._s(e.$t("\u8bf7\u8f93\u5165\u5217\u8868\u540d\u79f0"))))]), n("input", {
                        attrs: {
                            value: e._$s(121, "a-value", e.playListName),
                            _i: 121
                        },
                        on: {
                            input: e.listNameNewInput
                        }
                    }), n("view", [n("view", {
                        attrs: {
                            _i: 123
                        },
                        on: {
                            click: e.listNameInputCancelClick
                        }
                    }, [e._v(e._$s(123, "t0-0", e._s(e.$t("\u53d6\u6d88"))))]), n("view"), n("view", {
                        attrs: {
                            _i: 125
                        },
                        on: {
                            click: e.listNameInputOkClick
                        }
                    }, [e._v(e._$s(125, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])]), n("view", {
                        attrs: {
                            _i: 126
                        },
                        on: {
                            click: e.listNameInputCancelClick
                        }
                    })])]), n("uni-popup", {
                        ref: "picNameInput",
                        attrs: {
                            "mask-click": !0,
                            animation: !1,
                            _i: 127
                        }
                    }, [n("view", [n("view", [n("view"), e._$s(131, "i", e.handDrawFile) ? [n("view", [e._v(e._$s(132, "t0-0", e._s(e.$t("\u4fdd\u5b58\u81f3\u6587\u4ef6\u5939"))))]), n("picker", {
                        attrs: {
                            value: e._$s(133, "a-value", e.handDrawClassIdx),
                            range: e._$s(133, "a-range", e.handDrawClassName),
                            _i: 133
                        },
                        on: {
                            change: e.handDrawClassPickerChange
                        }
                    }, [n("view", [e._v(e._$s(134, "t0-0", e._s(e.currClassName)))])])] : e._e(), n("view", [e._v(e._$s(135, "t0-0", e._s(e.$t("\u8bf7\u8f93\u5165\u65b0\u6587\u4ef6\u540d"))))]), n("input", {
                        attrs: {
                            value: e._$s(136, "a-value", e.reNameInfo.newFileName),
                            _i: 136
                        },
                        on: {
                            input: e.picNameNewInput
                        }
                    }), n("view", [n("view", {
                        attrs: {
                            _i: 138
                        },
                        on: {
                            click: e.picNameInputCancelClick
                        }
                    }, [e._v(e._$s(138, "t0-0", e._s(e.$t("\u53d6\u6d88"))))]), n("view"), n("view", {
                        attrs: {
                            _i: 140
                        },
                        on: {
                            click: e.picNameInputOkClick
                        }
                    }, [e._v(e._$s(140, "t0-0", e._s(e.$t("\u786e\u5b9a"))))])])], 2), n("view", {
                        attrs: {
                            _i: 141
                        },
                        on: {
                            click: e.picNameInputCancelClick
                        }
                    })])]), n("uni-popup", {
                        ref: "playListSelect",
                        attrs: {
                            "mask-click": !0,
                            animation: !1,
                            _i: 142
                        }
                    }, [n("view", [n("view", [n("view", [n("text", [e._v(e._$s(146, "t0-0", e._s(e.$t("\u64ad\u653e\u5217\u8868"))))])]), e._$s(147, "i", 0 == e.playListNamesAll.length) ? [n("view", [n("text", [e._v(e._$s(149, "t0-0", e._s(e.$t("-- \u5217\u8868\u7a7a\u7a7a\u5982\u4e5f --"))))])])] : [n("scroll-view", {
                        attrs: {
                            id: "scroll_view_playList",
                            _i: 151
                        }
                    }, [n("view", e._l(e._$s(153, "f", {
                        forItems: e.playListNamesAll.slice().reverse()
                    }), (function(t, r, h, a) {
                        return n("view", {
                            key: e._$s(153, "f", {
                                forIndex: h,
                                key: r
                            }),
                            staticClass: e._$s("153-" + a, "sc", "play-list-item"),
                            style: e._$s("153-" + a, "s", e.playListName == t ? "background-color: #2B4863;" : ""),
                            attrs: {
                                _i: "153-" + a
                            }
                        }, [n("image", {
                            attrs: {
                                _i: "154-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.playListFileClick(t)
                                }
                            }
                        }), n("label", {
                            attrs: {
                                _i: "155-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.playListFileSelectClick(t)
                                }
                            }
                        }, [e._v(e._$s("155-" + a, "t0-0", e._s(t)))]), n("image", {
                            attrs: {
                                _i: "156-" + a
                            },
                            on: {
                                click: function(r) {
                                    return e.deleteListFileClick(t)
                                }
                            }
                        })])
                    })), 0)])]], 2), n("view", [n("view", {
                        staticClass: e._$s(158, "sc", "opr-btn"),
                        attrs: {
                            _i: 158
                        },
                        on: {
                            click: e.playListClose
                        }
                    }, [e._v(e._$s(158, "t0-0", e._s(e.$t("\u8fd4\u56de"))))]), n("view", {
                        staticClass: e._$s(159, "sc", "opr-btn btn-linear edit-playlist"),
                        style: e._$s(159, "s", "" != e.playListName ? " " : "pointer-events: none; opacity: 0.3"),
                        attrs: {
                            _i: 159
                        },
                        on: {
                            click: e.playListEdit
                        }
                    }, [e._v(e._$s(159, "t0-0", e._s(e.$t("\u7f16\u8f91"))))])])])]), e._$s(160, "i", e.drawCanvasShow) ? n("canvas", {
                        style: e._$s(160, "s", "height: " + e.drawCanvas.h + "px; width: " + e.drawCanvas.w + "px; position: absolute; left: 999999;"),
                        attrs: {
                            id: "drawCanvas",
                            _i: 160
                        }
                    }) : e._e()], 2)], 1)
                },
                a = []
        },
        fc20: function(e, t, r) {
            "use strict";
            r.r(t);
            var n = r("1951"),
                h = r("b9de");
            for (var a in h)["default"].indexOf(a) < 0 && function(e) {
                r.d(t, e, (function() {
                    return h[e]
                }))
            }(a);
            var i = r("828b"),
                c = Object(i["a"])(h["default"], n["b"], n["c"], !1, null, null, null, !1, n["a"], void 0);
            t["default"] = c.exports
        },
        fe8a: function(e, t, r) {
            "use strict";
            (function(e) {
                function n(e, t) {
                    var r = "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (!r) {
                        if (Array.isArray(e) || (r = function(e, t) {
                                if (!e) return;
                                if ("string" === typeof e) return h(e, t);
                                var r = Object.prototype.toString.call(e).slice(8, -1);
                                "Object" === r && e.constructor && (r = e.constructor.name);
                                if ("Map" === r || "Set" === r) return Array.from(e);
                                if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return h(e, t)
                            }(e)) || t && e && "number" === typeof e.length) {
                            r && (e = r);
                            var n = 0,
                                a = function() {};
                            return {
                                s: a,
                                n: function() {
                                    return n >= e.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: e[n++]
                                    }
                                },
                                e: function(e) {
                                    throw e
                                },
                                f: a
                            }
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }
                    var i, c = !0,
                        o = !1;
                    return {
                        s: function() {
                            r = r.call(e)
                        },
                        n: function() {
                            var e = r.next();
                            return c = e.done, e
                        },
                        e: function(e) {
                            o = !0, i = e
                        },
                        f: function() {
                            try {
                                c || null == r.return || r.return()
                            } finally {
                                if (o) throw i
                            }
                        }
                    }
                }

                function h(e, t) {
                    (null == t || t > e.length) && (t = e.length);
                    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
                    return n
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var a = getApp(),
                    i = r("e458"),
                    c = r("c4ce"),
                    o = r("3b77"),
                    s = {
                        data: function() {
                            return {
                                screen_width: a.globalData.screen_width_str,
                                scUnit: a.globalData.screen_width_float,
                                rtl: a.globalData.rtl,
                                ntitle: this.$t("\u6447\u5934\u8bbe\u7f6e"),
                                sendTimer: null,
                                lastSendTime: 0,
                                lastCmdTime: 0,
                                xyCnf: {
                                    auto: !0,
                                    autoValue: 0,
                                    phase: 0,
                                    xy: [{
                                        title: "X\u7c97\u8c03",
                                        name: "xBig",
                                        value: 0
                                    }, {
                                        title: "X\u7ec6\u8c03",
                                        name: "xSmall",
                                        value: 0
                                    }, {
                                        title: "Y\u7c97\u8c03",
                                        name: "yBig",
                                        value: 0
                                    }, {
                                        title: "Y\u7ec6\u8c03",
                                        name: "ySmall",
                                        value: 0
                                    }]
                                },
                                lastRefresh: 0,
                                chPer: 1,
                                chBeginPoint: {
                                    x: 0,
                                    y: 0
                                },
                                chEndPoint: {
                                    x: 0,
                                    y: 0
                                },
                                chDraw: {
                                    w: 0,
                                    h: 0,
                                    max: 255
                                },
                                chCanvas: {
                                    w: 0,
                                    h: 0
                                },
                                cnfIdx: 0
                            }
                        },
                        onLoad: function() {
                            var e = a.globalData.getCmdData("subsetData");
                            this.xyCnf = e.xyCnf
                        },
                        onUnload: function() {
                            this.sendLastCmd(!0)
                        },
                        onReady: function() {
                            var e = this,
                                t = uni.createSelectorQuery().in(e);
                            this.$nextTick((function() {
                                t.select("#cvView").boundingClientRect((function(t) {
                                    e.chCanvas.w = t.width / 4, e.chCanvas.h = t.height, e.chDraw.w = .6 * e.chCanvas.w;
                                    var r = .95 * e.chCanvas.h;
                                    e.chPer = r / 255, e.chDraw.h = r, e.refreshAllChDraw()
                                })).exec()
                            }))
                        },
                        methods: {
                            refreshAllChDraw: function() {
                                var e, t = n(this.xyCnf.xy);
                                try {
                                    for (t.s(); !(e = t.n()).done;) {
                                        var r = e.value,
                                            h = r["value"],
                                            a = "chCanvas" + r["name"],
                                            i = !this.xyCnf.auto;
                                        this.drawChCanvas(a, this.chDraw.w, this.chDraw.h, this.chDraw.max, h, i, this.callBackCh)
                                    }
                                } catch (c) {
                                    t.e(c)
                                } finally {
                                    t.f()
                                }
                            },
                            refreshChDraw: function() {
                                var e = this.xyCnf.xy[this.cnfIdx],
                                    t = e["value"],
                                    r = "chCanvas" + e["name"],
                                    n = !this.xyCnf.auto;
                                this.drawChCanvas(r, this.chDraw.w, this.chDraw.h, this.chDraw.max, t, n, this.callBackCh)
                            },
                            sendCmd: function(t) {
                                if (e("log", "app.globalData.blu_data_cmdSending", a.globalData.blu_data_cmdSending, " at pages/subset/subset.js:83"), a.globalData.blu_data_cmdSending) {
                                    if (null == this.sendTimer) {
                                        var r = this;
                                        this.sendTimer = setTimeout((function() {
                                            r.sendTimer = null, r.sendCmd(t)
                                        }), 100)
                                    }
                                } else if (!(this.lastCmdTime < this.lastSendTime)) {
                                    var n = a.globalData.getDeviceFeatures(),
                                        h = o.getShakeCmdStr(a.globalData.cmd, {
                                            features: n,
                                            xyCnfSave: t
                                        }),
                                        i = c.gosend(!1, h);
                                    i && (this.lastSendTime = (new Date).getTime())
                                }
                            },
                            okClick: function(e) {
                                uni.navigateBack()
                            },
                            sendLastCmd: function(e) {
                                this.lastCmdTime = (new Date).getTime(), this.sendCmd(e)
                            },
                            radioPhaseChange: function(e) {
                                var t = e.detail.value,
                                    r = parseInt(t);
                                this.$set(this.xyCnf, "phase", r), this.sendLastCmd(!0)
                            },
                            radioChange: function(e) {
                                var t = e.detail.value,
                                    r = this.xyCnf.auto;
                                "auto" == t && (r = !0), "manual" == t && (r = !1), this.$set(this.xyCnf, "auto", r), this.refreshAllChDraw(), this.sendLastCmd(!0)
                            },
                            drawChCanvas: function(e, t, r, n, h, a) {
                                var c = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
                                    o = uni.createCanvasContext(e, this),
                                    s = t / 2,
                                    l = (this.chCanvas.w - t) / 2,
                                    p = (this.chCanvas.h - r) / 2 + s,
                                    d = l + t,
                                    b = p + r - t,
                                    g = l + s,
                                    j = p,
                                    x = d - s,
                                    V = b,
                                    f = 2 * this.scUnit,
                                    F = "#24292E",
                                    k = o.createLinearGradient(x, V + s, g, j - s);
                                k.addColorStop(0, "#112233"), k.addColorStop(1, "#1E374C"), a ? o.setFillStyle(k) : o.setFillStyle(F), o.beginPath(), o.moveTo(d, b), o.arc(x, V, s, 0, 1 * Math.PI);
                                var m = r - 2 * s;
                                o.rect(d - t, b - m, t, m), o.moveTo(l, p), o.arc(g, j, s, Math.PI, 2 * Math.PI), o.fill();
                                var P = o.createLinearGradient(x, V + s, g, j - s);
                                P.addColorStop(0, "#008BD1"), P.addColorStop(1, "white"), a ? o.setFillStyle(P) : o.setFillStyle(F), o.beginPath(), o.moveTo(l, p), o.arc(g, j, s, Math.PI, 2 * Math.PI), o.moveTo(d, b), o.arc(x, V, s, 0, 1 * Math.PI), o.beginPath();
                                var u = r / n,
                                    X = u * h;
                                if (X < s) {
                                    var N = s - X,
                                        H = s - Math.sqrt(Math.pow(s, 2) - Math.pow(N, 2)),
                                        z = i.lineTheta([d, b], [x, V], [d - H, b + N]);
                                    o.moveTo(d - H, b + N), o.arc(x, V, s, z, Math.PI - z), o.fill()
                                } else if (X <= r - s) {
                                    o.moveTo(d, b), o.arc(x, V, s, 0, 1 * Math.PI);
                                    var Q = X - s;
                                    o.rect(d - t, b - Q, t, Q), o.fill()
                                } else {
                                    o.moveTo(d, b), o.arc(x, V, s, 0, 1 * Math.PI);
                                    var R = r - 2 * s;
                                    if (o.rect(d - t, b - R, t, R), h == n) o.moveTo(l, p), o.arc(g, j, s, Math.PI, 2 * Math.PI);
                                    else {
                                        var v = X - (r - s),
                                            I = s - Math.sqrt(Math.pow(s, 2) - Math.pow(v, 2)),
                                            w = i.lineTheta([l, p], [g, j], [l + I, p - v]);
                                        o.moveTo(l + I, p - v), o.arc(g, j, s, 2 * Math.PI - w, Math.PI + w)
                                    }
                                    o.fill()
                                }
                                o.beginPath();
                                var y = .5 * t;
                                if (o.setFontSize(y), a ? o.setFillStyle("white") : o.setFillStyle(F), o.setShadow(5 * f, 5 * f, 5 * f, "rgba(0, 0, 0, 0.5)"), o.fillText(h + "", x - o.measureText(h + "").width / 2, j - s + r / 2 + y / 2), o.beginPath(), y = .8 * t, o.setFontSize(y), o.fillText("+", g - o.measureText("+").width / 2, j + y / 3), o.fillText("-", x - o.measureText("-").width / 2, V + y / 3), null != c) {
                                    var C = l,
                                        A = V + s;
                                    c(o, C, A, t, r, s, n, h)
                                }
                                o.draw()
                            },
                            addCnfValusAndSend: function(e) {
                                if (!this.xyCnf.auto) {
                                    var t = this.xyCnf.xy[this.cnfIdx].value,
                                        r = t + Math.floor(e);
                                    r = r < 0 ? 0 : r, r = r > this.chDraw.max ? this.chDraw.max : r, t != r && (this.$set(this.xyCnf.xy[this.cnfIdx], "value", r), this.refreshChDraw(), this.lastCmdTime = (new Date).getTime(), this.sendLastCmd(!1))
                                }
                            },
                            chTouchstart: function(e) {
                                this.cnfIdx = e.currentTarget.dataset.idx;
                                var t = e.touches[0];
                                this.chBeginPoint = {
                                    x: t.x,
                                    y: t.y
                                }, this.chEndPoint = null, this.lastRefresh = 0
                            },
                            chTouchmove: function(e) {
                                var t = e.touches[0];
                                this.chEndPoint = {
                                    x: t.x,
                                    y: t.y
                                };
                                var r = (new Date).getTime();
                                if (r - this.lastRefresh > 100) {
                                    var n = Math.floor((this.chBeginPoint.y - this.chEndPoint.y) / this.chPer);
                                    Math.abs(n) >= 1 && (this.chBeginPoint = {
                                        x: this.chEndPoint.x,
                                        y: this.chEndPoint.y
                                    }, this.addCnfValusAndSend(n)), this.lastRefresh = r
                                }
                            },
                            chTouchend: function(e) {
                                if (null == this.chEndPoint) {
                                    var t = this.chBeginPoint.y > this.chCanvas.h / 2 ? -1 : 1;
                                    this.addCnfValusAndSend(t)
                                }
                                this.chEndPoint = null
                            }
                        }
                    };
                t.default = s
            }).call(this, r("f3b9")["default"])
        },
        ff59: function(e, t, r) {
            if ("undefined" === typeof Promise || Promise.prototype.finally || (Promise.prototype.finally = function(e) {
                    var t = this.constructor;
                    return this.then((function(r) {
                        return t.resolve(e()).then((function() {
                            return r
                        }))
                    }), (function(r) {
                        return t.resolve(e()).then((function() {
                            throw r
                        }))
                    }))
                }), "undefined" !== typeof uni && uni && uni.requireGlobal) {
                var n = uni.requireGlobal();
                ArrayBuffer = n.ArrayBuffer, Int8Array = n.Int8Array, Uint8Array = n.Uint8Array, Uint8ClampedArray = n.Uint8ClampedArray, Int16Array = n.Int16Array, Uint16Array = n.Uint16Array, Int32Array = n.Int32Array, Uint32Array = n.Uint32Array, Float32Array = n.Float32Array, Float64Array = n.Float64Array, BigInt64Array = n.BigInt64Array, BigUint64Array = n.BigUint64Array
            }
            uni.restoreGlobal && uni.restoreGlobal(weex, plus, setTimeout, clearTimeout, setInterval, clearInterval), __definePage("pages/main/main", (function() {
                return Vue.extend(r("9c4f").default)
            })), __definePage("pages/prj/prj", (function() {
                return Vue.extend(r("fc20").default)
            })), __definePage("pages/setting/setting", (function() {
                return Vue.extend(r("d281").default)
            })), __definePage("pages/cnn/cnn", (function() {
                return Vue.extend(r("64c9").default)
            })), __definePage("pages/setuuid/setuuid", (function() {
                return Vue.extend(r("b6aa").default)
            })), __definePage("pages/test/test", (function() {
                return Vue.extend(r("cbd5").default)
            })), __definePage("pages/lang/lang", (function() {
                return Vue.extend(r("aff7").default)
            })), __definePage("pages/subset/subset", (function() {
                return Vue.extend(r("794a").default)
            })), __definePage("sub/pages/text/text", (function() {
                return Vue.extend(r("21af").default)
            })), __definePage("sub/pages/draw/draw", (function() {
                return Vue.extend(r("b747").default)
            })), __definePage("sub/pages/cover/cover", (function() {
                return Vue.extend(r("eacd").default)
            })), __definePage("sub/pages/font/font", (function() {
                return Vue.extend(r("32bf").default)
            })), __definePage("sub/pages/files/files", (function() {
                return Vue.extend(r("c0a6").default)
            })), __definePage("sub/pages/playList/playList", (function() {
                return Vue.extend(r("7978").default)
            })), __definePage("sub/pages/listMaster/listMaster", (function() {
                return Vue.extend(r("1c8d").default)
            })), __definePage("sub2/pages/pgs/pgs", (function() {
                return Vue.extend(r("f7c2").default)
            })), __definePage("sub2/pages/pis/pis", (function() {
                return Vue.extend(r("a3bc").default)
            }))
        },
        ffb9: function(e, t, r) {
            e.exports = r.p + "static/imgs/tips.gif"
        }
    },
    [
        ["mainAppEntry", "app-config"]
    ]
]);